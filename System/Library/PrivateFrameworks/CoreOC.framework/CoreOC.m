unint64_t sub_24B560D28(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  long long v17;

  if (!*(void *)(a1 + 16))
  {
    v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04((uint64_t *)&unk_2697CCDE0);
  v2 = sub_24B682F30();
  v3 = (void *)v2;
  v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v6, (uint64_t)&v15, &qword_2697CC090);
    v7 = v15;
    v8 = v16;
    result = sub_24B562E8C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_24B563220(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B560E60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B560E98(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24B560EE0())()
{
  return j__swift_endAccess;
}

uint64_t sub_24B560F38(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = sub_24B560D28(MEMORY[0x263F8EE78]);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t sub_24B560F80()
{
  return sub_24B560F98();
}

uint64_t sub_24B560F8C()
{
  return sub_24B560F98();
}

uint64_t sub_24B560F98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_24B6827D0();
  if (!*(void *)(v1 + 16) || (unint64_t v4 = sub_24B562E8C(v2, v3), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_24B562F48(*(void *)(v1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_24B5632A8((uint64_t)&v8, (uint64_t *)&unk_2697CCA30);
    return 0;
  }
  sub_24B562F04(&qword_2697CC060);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_24B561060@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_24B6823B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC068);
  uint64_t v7 = MEMORY[0x270FA5388]();
  long long v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(uint64_t (**)(void))(*(void *)v1 + 128);
  uint64_t v11 = ((uint64_t (*)(uint64_t))v10)(v7);
  if (!v11)
  {
    long long v66 = 0u;
    long long v67 = 0u;
    goto LABEL_12;
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_24B6827D0();
  if (!*(void *)(v12 + 16) || (unint64_t v15 = sub_24B562E8C(v13, v14), (v16 & 1) == 0))
  {
    long long v66 = 0u;
    long long v67 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_24B562F48(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1))
  {
LABEL_12:
    sub_24B5632A8((uint64_t)&v66, (uint64_t *)&unk_2697CCA30);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  unint64_t v17 = v65;
  uint64_t v62 = v64;
  uint64_t v18 = v10();
  if (!v18)
  {
    long long v66 = 0u;
    long long v67 = 0u;
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v19 = v18;
  unint64_t v63 = v17;
  uint64_t v20 = sub_24B6827D0();
  if (*(void *)(v19 + 16) && (unint64_t v22 = sub_24B562E8C(v20, v21), (v23 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = v63;
  if (!*((void *)&v67 + 1)) {
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  v61[1] = v64;
  v61[2] = v65;
  uint64_t v26 = v10();
  if (!v26)
  {
    long long v66 = 0u;
    long long v67 = 0u;
LABEL_37:
    sub_24B5632A8((uint64_t)&v66, (uint64_t *)&unk_2697CCA30);
    goto LABEL_83;
  }
  uint64_t v27 = v26;
  uint64_t v28 = sub_24B6827D0();
  if (*(void *)(v27 + 16) && (unint64_t v30 = sub_24B562E8C(v28, v29), (v31 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v27 + 56) + 32 * v30, (uint64_t)&v66);
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1)) {
    goto LABEL_37;
  }
  if (swift_dynamicCast())
  {
    uint64_t result = v64;
    unint64_t v32 = HIBYTE(v65) & 0xF;
    uint64_t v33 = v64 & 0xFFFFFFFFFFFFLL;
    if ((v65 & 0x2000000000000000) != 0) {
      unint64_t v34 = HIBYTE(v65) & 0xF;
    }
    else {
      unint64_t v34 = v64 & 0xFFFFFFFFFFFFLL;
    }
    if (v34)
    {
      if ((v65 & 0x1000000000000000) != 0)
      {
        uint64_t v36 = (uint64_t)sub_24B563088(v64, v65, 10);
        char v38 = v60;
LABEL_81:
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
        {
          sub_24B562F04((uint64_t *)&unk_2697CD150);
          uint64_t v51 = swift_allocObject();
          uint64_t v52 = MEMORY[0x263F8D6C8];
          *(_OWORD *)(v51 + 16) = xmmword_24B684E60;
          uint64_t v53 = MEMORY[0x263F8D750];
          *(void *)(v51 + 56) = v52;
          *(void *)(v51 + 64) = v53;
          *(void *)(v51 + 32) = v36;
          sub_24B6827F0();
        }
        goto LABEL_83;
      }
      if ((v65 & 0x2000000000000000) == 0)
      {
        if ((v64 & 0x1000000000000000) != 0) {
          v35 = (unsigned __int8 *)((v65 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          v35 = (unsigned __int8 *)sub_24B682E80();
        }
        uint64_t v36 = (uint64_t)sub_24B563304(v35, v33, 10);
        char v38 = v37 & 1;
        goto LABEL_81;
      }
      *(void *)&long long v66 = v64;
      *((void *)&v66 + 1) = v65 & 0xFFFFFFFFFFFFFFLL;
      if (v64 == 43)
      {
        if (!v32) {
          goto LABEL_93;
        }
        if (v32 == 1 || (BYTE1(v64) - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v36 = (BYTE1(v64) - 48);
        if (v32 == 2) {
          goto LABEL_61;
        }
        if ((BYTE2(v64) - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v36 = 10 * (BYTE1(v64) - 48) + (BYTE2(v64) - 48);
        unint64_t v39 = v32 - 3;
        if (v39)
        {
          v40 = (unsigned __int8 *)&v66 + 3;
          while (1)
          {
            unsigned int v41 = *v40 - 48;
            if (v41 > 9) {
              goto LABEL_79;
            }
            uint64_t v42 = 10 * v36;
            if ((unsigned __int128)(v36 * (__int128)10) >> 64 != (10 * v36) >> 63) {
              goto LABEL_79;
            }
            uint64_t v36 = v42 + v41;
            if (__OFADD__(v42, v41)) {
              goto LABEL_79;
            }
            char v38 = 0;
            ++v40;
            if (!--v39) {
              goto LABEL_80;
            }
          }
        }
      }
      else
      {
        if (v64 == 45)
        {
          if (v32)
          {
            if (v32 != 1 && (BYTE1(v64) - 48) <= 9u)
            {
              if (v32 == 2)
              {
                char v38 = 0;
                uint64_t v36 = -(uint64_t)(BYTE1(v64) - 48);
                goto LABEL_81;
              }
              if ((BYTE2(v64) - 48) <= 9u)
              {
                uint64_t v36 = -10 * (BYTE1(v64) - 48) - (BYTE2(v64) - 48);
                unint64_t v47 = v32 - 3;
                if (!v47) {
                  goto LABEL_72;
                }
                v48 = (unsigned __int8 *)&v66 + 3;
                while (1)
                {
                  unsigned int v49 = *v48 - 48;
                  if (v49 > 9) {
                    break;
                  }
                  uint64_t v50 = 10 * v36;
                  if ((unsigned __int128)(v36 * (__int128)10) >> 64 != (10 * v36) >> 63) {
                    break;
                  }
                  uint64_t v36 = v50 - v49;
                  if (__OFSUB__(v50, v49)) {
                    break;
                  }
                  char v38 = 0;
                  ++v48;
                  if (!--v47) {
                    goto LABEL_80;
                  }
                }
LABEL_79:
                uint64_t v36 = 0;
                char v38 = 1;
                goto LABEL_80;
              }
            }
LABEL_59:
            uint64_t v36 = 0;
            char v38 = 1;
            goto LABEL_81;
          }
          __break(1u);
LABEL_93:
          __break(1u);
          return result;
        }
        if (!v32 || (v64 - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v36 = (v64 - 48);
        if (v32 == 1)
        {
LABEL_61:
          char v38 = 0;
          goto LABEL_81;
        }
        if ((BYTE1(v64) - 48) > 9u) {
          goto LABEL_59;
        }
        uint64_t v36 = 10 * (v64 - 48) + (BYTE1(v64) - 48);
        unint64_t v43 = v32 - 2;
        if (v43)
        {
          v44 = (unsigned __int8 *)&v66 + 2;
          while (1)
          {
            unsigned int v45 = *v44 - 48;
            if (v45 > 9) {
              goto LABEL_79;
            }
            uint64_t v46 = 10 * v36;
            if ((unsigned __int128)(v36 * (__int128)10) >> 64 != (10 * v36) >> 63) {
              goto LABEL_79;
            }
            uint64_t v36 = v46 + v45;
            if (__OFADD__(v46, v45)) {
              goto LABEL_79;
            }
            char v38 = 0;
            ++v44;
            if (!--v43) {
              goto LABEL_80;
            }
          }
        }
      }
LABEL_72:
      char v38 = 0;
LABEL_80:
      unint64_t v25 = v63;
      goto LABEL_81;
    }
    swift_bridgeObjectRelease();
  }
LABEL_83:
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  v55 = (void *)sub_24B6827A0();
  objc_msgSend(v54, sel_setDateFormat_, v55);

  *(void *)&long long v66 = v62;
  *((void *)&v66 + 1) = v25;
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v54, sel_dateFromString_, v56);

  if (!v57)
  {

    v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v59(v9, 1, 1, v3);
LABEL_87:
    sub_24B5632A8((uint64_t)v9, &qword_2697CC068);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v59)(a1, 1, 1, v3);
  }
  sub_24B682370();

  v58 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v58(v9, v6, v3);
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v59(v9, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1) {
    goto LABEL_87;
  }
  v58(a1, v9, v3);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v59)(a1, 0, 1, v3);
}

unint64_t sub_24B56191C()
{
  return sub_24B561934();
}

unint64_t sub_24B561928()
{
  return sub_24B561934();
}

unint64_t sub_24B561934()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 128))();
  if (!v1)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_24B6827D0();
  if (!*(void *)(v2 + 16) || (unint64_t v5 = sub_24B562E8C(v3, v4), (v6 & 1) == 0))
  {
    long long v12 = 0u;
    long long v13 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_24B562F48(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_10:
    sub_24B5632A8((uint64_t)&v12, (uint64_t *)&unk_2697CCA30);
    uint64_t v8 = 0;
    unsigned __int8 v9 = 1;
    return v8 | ((unint64_t)v9 << 32);
  }
  int v7 = swift_dynamicCast();
  uint64_t v8 = v11;
  unsigned __int8 v9 = v7 ^ 1;
  if (!v7) {
    uint64_t v8 = 0;
  }
  return v8 | ((unint64_t)v9 << 32);
}

unint64_t sub_24B561A50()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 152))();
  if ((v1 & 0x100000000) != 0) {
    return 0;
  }
  unsigned int v2 = v1;
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v0 + 160))();
  if ((v3 & 0x100000000) != 0) {
    return 0;
  }
  else {
    return __PAIR64__(v3, v2);
  }
}

uint64_t sub_24B561ADC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

id sub_24B561B18()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 136))();
  if (!v1)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    goto LABEL_13;
  }
  uint64_t v2 = v1;
  id result = (id)OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector();
  if (result)
  {
    id v4 = result;
    uint64_t v5 = sub_24B6827D0();
    uint64_t v7 = v6;

    if (*(void *)(v2 + 16) && (unint64_t v8 = sub_24B562E8C(v5, v7), (v9 & 1) != 0))
    {
      sub_24B562F48(*(void *)(v2 + 56) + 32 * v8, (uint64_t)&v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        sub_24B563170();
        if (swift_dynamicCast())
        {
          id v10 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 0);
          sub_24B682D50();
          swift_unknownObjectRelease();
          if ((swift_dynamicCast() & 1) != 0
            && (id v11 = v14,
                id v12 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 1),
                sub_24B682D50(),
                swift_unknownObjectRelease(),
                (swift_dynamicCast() & 1) != 0))
          {
            id v13 = objc_msgSend(v14, sel_objectAtIndexedSubscript_, 2);
            sub_24B682D50();

            swift_unknownObjectRelease();
            if (swift_dynamicCast()) {
              return v11;
            }
          }
          else
          {
          }
        }
        return 0;
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_13:
    sub_24B5632A8((uint64_t)&v15, (uint64_t *)&unk_2697CCA30);
    return 0;
  }
  __break(1u);
  return result;
}

void *sub_24B561D70()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 136))();
  if (!v1)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  id result = (void *)OCNonModularSPI_AppleMakerNote_Timestamp();
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v4 = result;
  uint64_t v5 = sub_24B6827D0();
  uint64_t v7 = v6;

  if (!*(void *)(v2 + 16) || (unint64_t v8 = sub_24B562E8C(v5, v7), (v9 & 1) == 0))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_24B562F48(*(void *)(v2 + 56) + 32 * v8, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_12:
    sub_24B5632A8((uint64_t)&v11, (uint64_t *)&unk_2697CCA30);
    return 0;
  }
  if (swift_dynamicCast()) {
    return (void *)v10;
  }
  else {
    return 0;
  }
}

void *sub_24B561EAC()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 136))();
  if (!v1)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  id result = (void *)OCNonModularSPI_AppleMakerNote_Camera();
  if (result)
  {
    id v4 = result;
    uint64_t v5 = sub_24B6827D0();
    uint64_t v7 = v6;

    if (*(void *)(v2 + 16) && (unint64_t v8 = sub_24B562E8C(v5, v7), (v9 & 1) != 0))
    {
      sub_24B562F48(*(void *)(v2 + 56) + 32 * v8, (uint64_t)&v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v15 + 1))
      {
        int v10 = swift_dynamicCast();
        uint64_t v11 = v13;
        unsigned __int8 v12 = v10 ^ 1;
        if (!v10) {
          uint64_t v11 = 0;
        }
        goto LABEL_12;
      }
    }
    else
    {
      long long v14 = 0u;
      long long v15 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_11:
    sub_24B5632A8((uint64_t)&v14, (uint64_t *)&unk_2697CCA30);
    uint64_t v11 = 0;
    unsigned __int8 v12 = 1;
LABEL_12:
    LOBYTE(v14) = v12;
    return (void *)(v11 | ((unint64_t)v12 << 32));
  }
  __break(1u);
  return result;
}

uint64_t sub_24B561FF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v51[0] = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)v51 - v7;
  MEMORY[0x270FA5388](v6);
  int v10 = (char *)v51 - v9;
  uint64_t v11 = sub_24B57CB70();
  uint64_t v12 = v3;
  long long v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v13 = v3 + 16;
  uint64_t v64 = v14;
  uint64_t v65 = v11;
  ((void (*)(char *))v14)(v10);
  long long v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B10();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    _os_log_impl(&dword_24B55E000, v15, v16, "metadata: {", v17, 2u);
    MEMORY[0x24C5D6C00](v17, -1, -1);
  }

  uint64_t v62 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v63 = v12 + 8;
  v62(v10, v2);
  uint64_t v18 = -1 << *(unsigned char *)(*(void *)(v1 + 16) + 32);
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v22 = *(void *)(v19 + 64);
  uint64_t v20 = v19 + 64;
  uint64_t v21 = v22;
  uint64_t v23 = ~v18;
  uint64_t v24 = -v18;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  else {
    uint64_t v25 = -1;
  }
  v84[4] = *(void *)(v1 + 16);
  v84[5] = v20;
  v84[6] = v23;
  v84[7] = 0;
  v84[8] = v25 & v21;
  v84[9] = 0;
  swift_bridgeObjectRetain();
  sub_24B56256C((uint64_t)v79);
  sub_24B5631B0((uint64_t)v79, (uint64_t)&v81);
  uint64_t v27 = v83;
  if (v83)
  {
    char v60 = v84;
    v61 = &v80;
    v58 = v75;
    v59 = &v78;
    id v54 = &v73;
    v55 = &v69;
    uint64_t v53 = v68;
    *(void *)&long long v26 = 136446466;
    long long v52 = v26;
    v51[1] = MEMORY[0x263F8EE58] + 8;
    uint64_t v56 = v2;
    uint64_t v57 = v13;
    do
    {
      uint64_t v29 = v81;
      uint64_t v28 = v82;
      uint64_t v76 = v82;
      uint64_t v77 = v27;
      unint64_t v30 = v59;
      sub_24B563220(v60, v59);
      v79[0] = v28;
      v79[1] = v27;
      char v31 = v30;
      unint64_t v32 = v61;
      sub_24B563220(v31, v61);
      v64(v8, v65, v2);
      *(void *)&long long v74 = v28;
      *((void *)&v74 + 1) = v27;
      sub_24B562F48((uint64_t)v32, (uint64_t)v58);
      sub_24B563A6C((uint64_t)&v74, (uint64_t)v72, &qword_2697CC080);
      v71[0] = v74;
      v71[1] = v75[0];
      v71[2] = v75[1];
      swift_bridgeObjectRetain();
      uint64_t v33 = v8;
      unint64_t v34 = sub_24B6824B0();
      os_log_type_t v35 = sub_24B682B10();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v70 = v37;
        *(_DWORD *)uint64_t v36 = v52;
        v68[4] = v29;
        uint64_t v38 = sub_24B682F90();
        *(void *)(v36 + 4) = sub_24B5627B8(v38, v39, &v70);
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2082;
        uint64_t v41 = v72[0];
        uint64_t v40 = v72[1];
        uint64_t v42 = v55;
        sub_24B562F48((uint64_t)v54, (uint64_t)v55);
        uint64_t v66 = v41;
        uint64_t v67 = v40;
        sub_24B563220(v42, v53);
        swift_bridgeObjectRetain();
        sub_24B562F04(&qword_2697CC080);
        uint64_t v43 = sub_24B682820();
        *(void *)(v36 + 14) = sub_24B5627B8(v43, v44, &v70);
        swift_bridgeObjectRelease();
        sub_24B5632A8((uint64_t)v71, &qword_2697CC080);
        sub_24B5632A8((uint64_t)v72, &qword_2697CC080);
        _os_log_impl(&dword_24B55E000, v34, v35, "%{public}s -> %{public}s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v37, -1, -1);
        uint64_t v45 = v36;
        uint64_t v2 = v56;
        MEMORY[0x24C5D6C00](v45, -1, -1);
      }
      else
      {

        sub_24B5632A8((uint64_t)v71, &qword_2697CC080);
        sub_24B5632A8((uint64_t)v72, &qword_2697CC080);
      }
      v62(v33, v2);
      sub_24B5632A8((uint64_t)v79, &qword_2697CC080);
      unint64_t v8 = v33;
      sub_24B56256C((uint64_t)v79);
      sub_24B5631B0((uint64_t)v79, (uint64_t)&v81);
      uint64_t v27 = v83;
    }
    while (v83);
  }
  sub_24B563218();
  uint64_t v46 = v51[0];
  v64((char *)v51[0], v65, v2);
  unint64_t v47 = sub_24B6824B0();
  os_log_type_t v48 = sub_24B682B10();
  if (os_log_type_enabled(v47, v48))
  {
    unsigned int v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v49 = 0;
    _os_log_impl(&dword_24B55E000, v47, v48, "}  // metadata:", v49, 2u);
    MEMORY[0x24C5D6C00](v49, -1, -1);
  }

  return ((uint64_t (*)(uint64_t, uint64_t))v62)(v46, v2);
}

uint64_t sub_24B56256C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_3;
  }
  int64_t v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  int64_t v19 = (unint64_t)(v6 + 64) >> 6;
  if (v18 >= v19) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v18);
  if (!v20)
  {
    int64_t v21 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v19)
    {
      unint64_t v20 = *(void *)(v4 + 8 * v21);
      if (v20)
      {
LABEL_12:
        int64_t v18 = v21;
        goto LABEL_9;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v19)
      {
        unint64_t v20 = *(void *)(v4 + 8 * (v5 + 3));
        if (v20)
        {
          int64_t v18 = v5 + 3;
          goto LABEL_9;
        }
        int64_t v21 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v19)
        {
          unint64_t v20 = *(void *)(v4 + 8 * v21);
          if (v20) {
            goto LABEL_12;
          }
          int64_t v18 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v19)
          {
            unint64_t v20 = *(void *)(v4 + 8 * v18);
            if (v20) {
              goto LABEL_9;
            }
            int64_t v7 = v19 - 1;
            int64_t v22 = v5 + 6;
            while (v19 != v22)
            {
              unint64_t v20 = *(void *)(v4 + 8 * v22++);
              if (v20)
              {
                int64_t v18 = v22 - 1;
                goto LABEL_9;
              }
            }
          }
        }
      }
    }
LABEL_24:
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    *uint64_t v1 = v3;
    v1[1] = v4;
    v1[2] = v6;
    v1[3] = v7;
    v1[4] = 0;
    goto LABEL_25;
  }
LABEL_9:
  uint64_t v9 = (v20 - 1) & v20;
  unint64_t v10 = __clz(__rbit64(v20)) + (v18 << 6);
  int64_t v7 = v18;
LABEL_3:
  uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  sub_24B562F48(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v23);
  *(void *)&long long v27 = v13;
  *((void *)&v27 + 1) = v12;
  sub_24B563220(&v23, &v28);
  uint64_t v14 = *((void *)&v27 + 1);
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t result = swift_bridgeObjectRetain();
  if (v14)
  {
    long long v24 = v27;
    long long v25 = v28;
    long long v26 = v29;
    uint64_t v16 = v1[5];
    if (!__OFADD__(v16, 1))
    {
      v1[5] = v16 + 1;
      *(void *)a1 = v16;
      long long v17 = v25;
      *(_OWORD *)(a1 + 8) = v24;
      *(_OWORD *)(a1 + 24) = v17;
      *(_OWORD *)(a1 + 40) = v26;
      return result;
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_25:
  uint64_t result = sub_24B5632A8((uint64_t)&v27, &qword_2697CC088);
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_24B562778()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24B5627B8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24B56288C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24B562F48((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24B562F48((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_24B563254((uint64_t)v12);
  return v7;
}

uint64_t sub_24B56288C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24B682CE0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24B562A48(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24B682E80();
  if (!v8)
  {
    sub_24B682EE0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24B682F40();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24B562A48(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24B562AE0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24B562D3C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24B562D3C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24B562AE0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24B562C58(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24B682E50();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24B682EE0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24B6828D0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24B682F40();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24B682EE0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24B562C58(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24B562F04(&qword_2697CC4A0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24B562CC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24B682920();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C5D49E0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_24B562D3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CC4A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

unint64_t sub_24B562E8C(uint64_t a1, uint64_t a2)
{
  sub_24B683090();
  sub_24B682860();
  uint64_t v4 = sub_24B6830D0();

  return sub_24B562FA4(a1, a2, v4);
}

uint64_t sub_24B562F04(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24B562F48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24B562FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24B682FA0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24B682FA0() & 1) == 0);
    }
  }
  return v6;
}

unsigned __int8 *sub_24B563088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24B682940();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24B563580();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v7 = (unsigned __int8 *)sub_24B682E80();
  }
LABEL_7:
  BOOL v11 = sub_24B563304(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_24B563170()
{
  unint64_t result = qword_2697CC070;
  if (!qword_2697CC070)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CC070);
  }
  return result;
}

uint64_t sub_24B5631B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B563218()
{
  return swift_release();
}

_OWORD *sub_24B563220(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t type metadata accessor for PhotogrammetryMetadataHelper()
{
  return self;
}

uint64_t sub_24B563254(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24B5632A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24B562F04(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned __int8 *sub_24B563304(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  int64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24B563580()
{
  unint64_t v0 = sub_24B682950();
  uint64_t v4 = sub_24B563600(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24B563600(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24B563758(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24B562C58(v9, 0);
      unint64_t v12 = sub_24B563858((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24B682E80();
LABEL_4:
        JUMPOUT(0x24C5D4940);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24C5D4940](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24C5D4940]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24B563758(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24B562CC0(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24B562CC0(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24B563858(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_24B562CC0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_24B682910();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_24B682E80();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_24B562CC0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24B6828E0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24B563A6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24B562F04(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B563AD0(void *a1, double a2, double a3)
{
  void *(*v11)(double *__return_ptr, uint64_t);
  char v12;
  uint64_t v13;
  double v16;
  double v17;
  double v18[2];
  char v19;

  if (a2 < a3)
  {
    *a1 = 0;
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v3 + 128))();
    if (result < 0)
    {
LABEL_24:
      __break(1u);
      return result;
    }
    uint64_t v8 = result;
    if (result)
    {
      double v9 = 0.0;
      uint64_t v10 = 0;
      uint64_t v11 = *(void *(**)(double *__return_ptr, uint64_t))(*(void *)v3 + 216);
      unint64_t v12 = 1;
      uint64_t v13 = result;
      while (v8 >= v13)
      {
        uint64_t result = (uint64_t)v11(v18, --v13);
        if ((v19 & 1) == 0)
        {
          if (v18[0] >= a2 && v18[0] < a3)
          {
            if (__OFADD__(v10++, 1)) {
              goto LABEL_23;
            }
            uint64_t v16 = v18[1];
            *a1 = v10;
            unint64_t v17 = v9;
            if (v12) {
              unint64_t v17 = v16;
            }
            if (v17 > v16) {
              uint64_t v16 = v17;
            }
            double v9 = v16;
            unint64_t v12 = 0;
          }
          else if (v18[0] >= a3)
          {
            return *(void *)&v9;
          }
        }
        if (!v13) {
          return *(void *)&v9;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
  }
  double v9 = 0.0;
  return *(void *)&v9;
}

void *sub_24B563C20(double *a1)
{
  void (*v6)(double *__return_ptr, uint64_t);
  void *v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  unint64_t v13;
  double v15[2];
  char v16;

  double v3 = *a1;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 128))();
  if (v4 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  if (v4)
  {
    unint64_t v6 = *(void (**)(double *__return_ptr, uint64_t))(*(void *)v1 + 216);
    unint64_t v7 = (void *)MEMORY[0x263F8EE78];
    uint64_t v8 = v3;
    double v9 = v4;
    while (v5 >= v9)
    {
      v6(v15, --v9);
      if ((v16 & 1) == 0)
      {
        uint64_t v10 = v15[0];
        if (v3 < v15[0])
        {
          uint64_t v11 = v15[1];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v7 = sub_24B564AF8(0, v7[2] + 1, 1, v7);
          }
          uint64_t v13 = v7[2];
          unint64_t v12 = v7[3];
          if (v13 >= v12 >> 1) {
            unint64_t v7 = sub_24B564AF8((void *)(v12 > 1), v13 + 1, 1, v7);
          }
          v7[2] = v13 + 1;
          *(double *)&v7[v13 + 4] = v11;
          if (v8 < v10) {
            uint64_t v8 = v10;
          }
        }
      }
      if (!v9) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_16:
  unint64_t v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v8 = v3;
LABEL_17:
  *a1 = v8;
  return v7;
}

uint64_t sub_24B563DA0()
{
  sub_24B680734();

  return swift_deallocClassInstance();
}

uint64_t *sub_24B563DD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  type metadata accessor for GyroCircularBuffer();
  swift_allocObject();
  v6[0] = v3;
  v6[1] = v4;
  return sub_24B67FB3C(a1, (uint64_t)v6);
}

uint64_t sub_24B563E2C(void *a1)
{
  return sub_24B563E68(a1);
}

uint64_t sub_24B563E68(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  *(void *)(v1 + 16) = v4;
  *(_OWORD *)(v1 + 40) = xmmword_24B684EC0;
  *(void *)(v1 + 56) = 0x3FF0000000000000;
  if (!objc_msgSend(a1, sel_isDeviceMotionAvailable)) {
    goto LABEL_4;
  }
  type metadata accessor for GyroCircularBuffer();
  swift_allocObject();
  __asm { FMOV            V0.2D, #-1.0 }
  long long v14 = _Q0;
  uint64_t v10 = sub_24B67FB3C(100, (uint64_t)&v14);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_msgSend(v4, sel_setQualityOfService_, 33);
    *(void *)(v2 + 24) = a1;
    objc_msgSend(a1, sel_setGyroUpdateInterval_, 0.01);
    sub_24B562F04(&qword_2697CC098);
    uint64_t v12 = swift_allocObject();
    *(_DWORD *)(v12 + 24) = 0;
    *(void *)(v12 + 16) = v11;
    *(void *)(v2 + 32) = v12;
  }
  else
  {
LABEL_4:

    type metadata accessor for MotionManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

void sub_24B563F9C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if ((objc_msgSend(v1, sel_isGyroActive) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    v4[4] = sub_24B564D00;
    v4[5] = v0;
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 1107296256;
    v4[2] = sub_24B56435C;
    v4[3] = &unk_26FE8BF88;
    uint64_t v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
    objc_msgSend(v1, sel_startGyroUpdatesToQueue_withHandler_, v2, v3);
    _Block_release(v3);
  }
}

void sub_24B564084(void *a1, void *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (!a2)
    {
      MEMORY[0x270FA5388](v6);
      v24[-2] = a1;
      uint64_t v10 = (uint64_t *)(v9 + 16);
      uint64_t v11 = (os_unfair_lock_s *)(v9 + 24);
      id v12 = a1;
      os_unfair_lock_lock(v11);
      sub_24B565070(v10);
      os_unfair_lock_unlock(v11);

      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  id v13 = a2;
  uint64_t v14 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v14, v4);
  id v15 = a2;
  id v16 = a2;
  unint64_t v17 = sub_24B6824B0();
  os_log_type_t v18 = sub_24B682B20();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v25[0] = v20;
    *(_DWORD *)char v19 = 136446210;
    v24[0] = v19 + 4;
    uint64_t v26 = (uint64_t)a2;
    id v21 = a2;
    sub_24B562F04(&qword_2697CC0A8);
    uint64_t v22 = sub_24B682820();
    uint64_t v26 = sub_24B5627B8(v22, v23, v25);
    sub_24B682CD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24B55E000, v17, v18, "Motion Manager: Gyro error: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v20, -1, -1);
    MEMORY[0x24C5D6C00](v19, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

id sub_24B564360()
{
  return sub_24B5647D4((SEL *)&selRef_isGyroActive, (const char **)&selRef_stopGyroUpdates);
}

void sub_24B564374()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if ((objc_msgSend(v1, sel_isDeviceMotionActive) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    v4[4] = sub_24B564D20;
    v4[5] = v0;
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 1107296256;
    v4[2] = sub_24B56435C;
    v4[3] = &unk_26FE8BFB0;
    uint64_t v3 = _Block_copy(v4);
    swift_retain();
    swift_release();
    objc_msgSend(v1, sel_startDeviceMotionUpdatesToQueue_withHandler_, v2, v3);
    _Block_release(v3);
  }
}

void sub_24B56445C(void *a1, void *a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (!a2)
    {
      MEMORY[0x270FA5388](v6);
      v24[-2] = a1;
      uint64_t v10 = (uint64_t *)(v9 + 16);
      uint64_t v11 = (os_unfair_lock_s *)(v9 + 24);
      id v12 = a1;
      os_unfair_lock_lock(v11);
      sub_24B564FA8(v10);
      os_unfair_lock_unlock(v11);

      return;
    }
  }
  else if (!a2)
  {
    return;
  }
  id v13 = a2;
  uint64_t v14 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v14, v4);
  id v15 = a2;
  id v16 = a2;
  unint64_t v17 = sub_24B6824B0();
  os_log_type_t v18 = sub_24B682B20();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v25[0] = v20;
    *(_DWORD *)char v19 = 136446210;
    v24[0] = v19 + 4;
    uint64_t v26 = (uint64_t)a2;
    id v21 = a2;
    sub_24B562F04(&qword_2697CC0A8);
    uint64_t v22 = sub_24B682820();
    uint64_t v26 = sub_24B5627B8(v22, v23, v25);
    sub_24B682CD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24B55E000, v17, v18, "Motion Manager: DeviceMotion error: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v20, -1, -1);
    MEMORY[0x24C5D6C00](v19, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_24B564734(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_24B5647C0()
{
  return sub_24B5647D4((SEL *)&selRef_isDeviceMotionActive, (const char **)&selRef_stopDeviceMotionUpdates);
}

id sub_24B5647D4(SEL *a1, const char **a2)
{
  uint64_t v4 = *(void **)(v2 + 24);
  id result = [v4 *a1];
  if (result)
  {
    id v6 = *a2;
    return [v4 v6];
  }
  return result;
}

uint64_t sub_24B56482C(void *a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 32);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_24B564D9C((uint64_t)v8);
  os_unfair_lock_unlock(v3 + 6);
  uint64_t v4 = v8[0];
  uint64_t v5 = v8[2];
  char v6 = v9;
  swift_release();
  if (v6) {
    return 0;
  }
  *a1 = v5;
  return v4;
}

uint64_t sub_24B564900()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_24B56499C((uint64_t)&v1[4], (uint64_t)&v4);
  os_unfair_lock_unlock(v1 + 6);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

double sub_24B56499C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(long long *__return_ptr))(**(void **)a1 + 224))(&v5);
  char v3 = v6;
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(unsigned char *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24B564A10()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_24B564E7C(&v4);
  os_unfair_lock_unlock(v1 + 6);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_24B564AB0()
{
  swift_release();

  return swift_deallocClassInstance();
}

void *sub_24B564AF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC0B0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B565114(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

id sub_24B564C08(void *a1)
{
  return objc_msgSend(a1, sel_timestamp);
}

uint64_t type metadata accessor for MotionManager()
{
  return self;
}

uint64_t type metadata accessor for GyroCircularBuffer()
{
  uint64_t result = qword_2697CD230;
  if (!qword_2697CD230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24B564D00(void *a1, void *a2)
{
}

uint64_t sub_24B564D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B564D18()
{
  return swift_release();
}

void sub_24B564D20(void *a1, void *a2)
{
}

uint64_t sub_24B564D28(uint64_t a1)
{
  double v2 = *(double *)(v1 + 16);
  double v3 = *(double *)(v1 + 24);
  uint64_t v5 = 0;
  return (*(uint64_t (**)(uint64_t *, double, double))(**(void **)a1 + 288))(&v5, v2, v3);
}

uint64_t sub_24B564D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_24B564DDC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 296))(v1 + 40);
  swift_endAccess();
  return v3;
}

uint64_t sub_24B564E7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for OCGyroData(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OCGyroData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OCGyroData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OCGyroData()
{
  return &type metadata for OCGyroData;
}

uint64_t sub_24B564F18()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_2697CC0A0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2697CC0A0);
    }
  }
}

uint64_t sub_24B564FA8(uint64_t *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *a1;
  objc_msgSend(v2, sel_timestamp);
  uint64_t v5 = v4;
  objc_msgSend(v2, sel_rotationRate);
  v10[0] = v5;
  v10[1] = sqrt(v8 * v8 + v6 * v6 + v7 * v7);
  return (*(uint64_t (**)(void *))(*(void *)v3 + 264))(v10);
}

uint64_t sub_24B565070(uint64_t *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *a1;
  id v4 = v2;
  sub_24B564C08(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;

  v10[0] = v6;
  v10[1] = v8;
  return (*(uint64_t (**)(void *))(*(void *)v3 + 264))(v10);
}

char *sub_24B565114(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  __n128 result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B565208()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 16);
}

uint64_t sub_24B565250(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5652B4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B565334;
}

void sub_24B565334(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_24B5653B8(uint64_t a1, uint64_t a2)
{
  return sub_24B565404(a1, a2);
}

uint64_t sub_24B565404(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v30 = a2;
  uint64_t v29 = a1;
  poolOut[1] = *(CVPixelBufferPoolRef *)MEMORY[0x263EF8340];
  uint64_t v28 = sub_24B682BC0();
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  size_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682B90();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_24B682640();
  MEMORY[0x270FA5388](v8 - 8);
  *(void *)(v2 + 24) = 0;
  uint64_t v26 = v2 + 16;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v2 + 32) = xmmword_24B684FB0;
  *(_OWORD *)(v2 + 48) = xmmword_24B684FA0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(unsigned char *)(v2 + 128) = 1;
  *(_WORD *)(v2 + 240) = 0;
  unint64_t v27 = sub_24B5658E8();
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  sub_24B682610();
  poolOut[0] = (CVPixelBufferPoolRef)MEMORY[0x263F8EE78];
  sub_24B5661B4((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  sub_24B562F04(&qword_2697CC0C0);
  sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v28);
  *(void *)(v2 + 248) = sub_24B682C00();
  sub_24B562F04(&qword_2697CC0C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684FC0;
  uint64_t v10 = (void *)*MEMORY[0x263F04180];
  uint64_t v11 = MEMORY[0x263F8E8F8];
  *(void *)(inited + 32) = *MEMORY[0x263F04180];
  *(_DWORD *)(inited + 40) = 1278226488;
  uint64_t v12 = (void *)*MEMORY[0x263F04240];
  uint64_t v13 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 80) = v29;
  uint64_t v14 = (void **)MEMORY[0x263F04118];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v12;
  id v15 = *v14;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 112) = v15;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 120) = v30;
  id v16 = v10;
  id v17 = v12;
  id v18 = v15;
  sub_24B565928(inited);
  type metadata accessor for CFString(0);
  sub_24B5661B4(&qword_2697CC0D0, type metadata accessor for CFString);
  CFDictionaryRef v19 = (const __CFDictionary *)sub_24B682710();
  swift_bridgeObjectRelease();
  poolOut[0] = 0;
  uint64_t result = CVPixelBufferPoolCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, v19, poolOut);
  int v21 = result;
  CVPixelBufferPoolRef v22 = poolOut[0];
  if (result)
  {

LABEL_6:
    sub_24B5661FC(v26);
    swift_bridgeObjectRelease();
    if (!v21) {

    }
    type metadata accessor for MaskingManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (poolOut[0])
  {
    *(CVPixelBufferPoolRef *)(v3 + 224) = poolOut[0];
    int v31 = 0;
    uint64_t v32 = 0;
    unint64_t v23 = v22;
    uint64_t result = OCMaskingCreate();
    if (result)
    {

      goto LABEL_6;
    }
    uint64_t v24 = v32;
    if (v32)
    {

      *(void *)(v3 + 232) = v24;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5658E8()
{
  unint64_t result = qword_2697CC0B8;
  if (!qword_2697CC0B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CC0B8);
  }
  return result;
}

unint64_t sub_24B565928(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC0F8);
  uint64_t v2 = sub_24B682F30();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24B567A28(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_24B5676D0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_24B563220(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B565A44()
{
  uint64_t result = OCMaskingDestroy();
  if (result)
  {
    __break(1u);
  }
  else
  {
    sub_24B5661FC(v0 + 16);
    swift_bridgeObjectRelease();

    return swift_deallocClassInstance();
  }
  return result;
}

uint64_t sub_24B565AA4()
{
  if (*(unsigned char *)(v0 + 240)) {
    return 1;
  }
  if (OCMaskingStart()) {
    return 0;
  }
  uint64_t result = 1;
  *(unsigned char *)(v0 + 240) = 1;
  return result;
}

uint64_t sub_24B565AEC()
{
  if (*(unsigned char *)(v0 + 240) == 1)
  {
    if (OCMaskingStop()) {
      return 0;
    }
    *(unsigned char *)(v0 + 240) = 0;
  }
  return 1;
}

uint64_t sub_24B565B2C(uint64_t a1, void *a2, _OWORD *a3, uint64_t *a4, int a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, __n128 a10)
{
  int v63 = a5;
  __n128 v61 = a9;
  __n128 v62 = a10;
  __n128 v60 = a8;
  __n128 v59 = a7;
  __n128 v58 = a6;
  uint64_t v57 = a3;
  uint64_t v64 = a2;
  *(void *)&long long v66 = a1;
  uint64_t v12 = sub_24B6825D0();
  uint64_t v65 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24B682640();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x270FA5388](v19 - 8);
  int v21 = (void *)((char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_24B6824D0();
  uint64_t result = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v10 + 241) & 1) == 0)
  {
    long long v52 = v18;
    uint64_t v53 = v16;
    id v54 = v14;
    uint64_t v55 = v15;
    uint64_t v56 = v12;
    uint64_t v27 = v66;
    uint64_t v28 = *(void *)v66;
    if (*(double *)v66 - *(double *)(v10 + 40) >= 0.2)
    {
      uint64_t v34 = *a4;
      long long v66 = *((_OWORD *)a4 + 2);
      long long v51 = *((_OWORD *)a4 + 3);
      long long v50 = *((_OWORD *)a4 + 4);
      long long v49 = *((_OWORD *)a4 + 5);
      *(void *)(v10 + 40) = v28;
      *(unsigned char *)(v10 + 241) = 1;
      uint64_t v35 = swift_allocObject();
      swift_weakInit();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      uint64_t v37 = v57;
      long long v38 = v57[1];
      *(_OWORD *)(v36 + 32) = *v57;
      *(_OWORD *)(v36 + 48) = v38;
      *(unsigned char *)(v36 + 64) = *((unsigned char *)v37 + 32);
      unint64_t v39 = v64;
      *(void *)(v36 + 72) = v64;
      *(void *)(v36 + 80) = v28;
      *(__n128 *)(v36 + 96) = v58;
      *(void *)(v36 + 112) = v34;
      __n128 v40 = v60;
      *(__n128 *)(v36 + 128) = v59;
      *(__n128 *)(v36 + 144) = v40;
      __n128 v41 = v62;
      *(__n128 *)(v36 + 160) = v61;
      *(__n128 *)(v36 + 176) = v41;
      long long v42 = v51;
      *(_OWORD *)(v36 + 192) = v66;
      *(_OWORD *)(v36 + 208) = v42;
      long long v43 = v49;
      *(_OWORD *)(v36 + 224) = v50;
      *(_OWORD *)(v36 + 240) = v43;
      *(unsigned char *)(v36 + 256) = v63 & 1;
      aBlock[4] = sub_24B5672A4;
      aBlock[5] = v36;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24B566C04;
      aBlock[3] = &unk_26FE8C0D0;
      unint64_t v44 = _Block_copy(aBlock);
      swift_retain_n();
      swift_retain();
      id v45 = v39;
      uint64_t v46 = v52;
      sub_24B6825F0();
      uint64_t v67 = MEMORY[0x263F8EE78];
      sub_24B5661B4((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      unint64_t v47 = v54;
      uint64_t v48 = v56;
      sub_24B682D80();
      MEMORY[0x24C5D4CD0](0, v46, v47, v44);
      _Block_release(v44);
      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v48);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v55);
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v29 = v24;
      uint64_t v30 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v26, v30, v22);
      sub_24B56730C(v27, (uint64_t)v21);
      int v31 = sub_24B6824B0();
      os_log_type_t v32 = sub_24B682B10();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 134349056;
        aBlock[0] = *v21;
        sub_24B682CD0();
        sub_24B567370((uint64_t)v21);
        _os_log_impl(&dword_24B55E000, v31, v32, "Masking Manager: Skipping bounding box compute at timestamp %{public}f", v33, 0xCu);
        MEMORY[0x24C5D6C00](v33, -1, -1);
      }
      else
      {
        sub_24B567370((uint64_t)v21);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v26, v22);
    }
  }
  return result;
}

uint64_t sub_24B566158(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_24B5661B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5661FC(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for MaskingManager()
{
  return self;
}

uint64_t sub_24B566248(double a1, __n128 a2, __n128 a3, __n128 a4, float32x4_t a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17, long long a18)
{
  *(void *)&long long v105 = a12;
  __n128 v108 = a8;
  __n128 v107 = a7;
  __n128 v106 = a6;
  float32x4_t v104 = a5;
  __n128 v103 = a4;
  __n128 v102 = a3;
  long long v109 = (__int128)a2;
  uint64_t v117 = *MEMORY[0x263EF8340];
  uint64_t v22 = sub_24B6824D0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v90 - v28;
  MEMORY[0x270FA5388](v27);
  int v31 = (char *)&v90 - v30;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v33 = result;
    v99 = v29;
    int v93 = a13;
    v92 = v26;
    long long v100 = a18;
    __n128 v101 = a17;
    sub_24B680C6C();
    OCSignPostsAriadneDbgCode();
    kdebug_trace();
    *(_OWORD *)(v33 + 64) = 0u;
    *(_OWORD *)(v33 + 80) = 0u;
    *(_OWORD *)(v33 + 96) = 0u;
    *(_OWORD *)(v33 + 112) = 0u;
    *(unsigned char *)(v33 + 128) = 1;
    *(_OWORD *)(v33 + 176) = 0u;
    *(_OWORD *)(v33 + 192) = 0u;
    *(_OWORD *)(v33 + 208) = 0u;
    *(_OWORD *)(v33 + 144) = 0u;
    *(_OWORD *)(v33 + 160) = 0u;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_24B57CB70();
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v97 = v34;
    uint64_t v98 = v23 + 16;
    v96 = v35;
    ((void (*)(char *))v35)(v31);
    uint64_t v36 = sub_24B6824B0();
    os_log_type_t v37 = sub_24B682B10();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v95 = a10;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      v91 = a11;
      uint64_t v40 = v39;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v94 = v23;
      uint64_t v42 = v41;
      *(void *)v110 = v41;
      *(_DWORD *)uint64_t v40 = 134349314;
      *(double *)&long long v112 = a1;
      sub_24B682CD0();
      *(_WORD *)(v40 + 12) = 2082;
      long long v112 = v109;
      sub_24B562F04((uint64_t *)&unk_2697CC440);
      sub_24B5678F4((unint64_t *)&qword_2697CC0F0, (uint64_t *)&unk_2697CC440);
      uint64_t v43 = sub_24B682FD0();
      *(void *)&long long v112 = sub_24B5627B8(v43, v44, (uint64_t *)v110);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v36, v37, "Masking Manager: Started bounding box compute at timestamp %{public}f with world point %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      uint64_t v45 = v42;
      uint64_t v23 = v94;
      MEMORY[0x24C5D6C00](v45, -1, -1);
      uint64_t v46 = v40;
      a11 = v91;
      MEMORY[0x24C5D6C00](v46, -1, -1);

      unint64_t v47 = *(void (**)(char *, uint64_t))(v23 + 8);
      v47(v31, v22);
      __n128 v54 = (__n128)v109;
      uint64_t v55 = v105;
    }
    else
    {

      unint64_t v47 = *(void (**)(char *, uint64_t))(v23 + 8);
      v47(v31, v22);
      uint64_t v55 = v105;
      __n128 v54 = (__n128)v109;
    }
    uint64_t v56 = sub_24B566C50(a11, v54, v102, v103, v104, v106, v107, v108, v101, v55, v48, v49, v50, v51, v52, v53, v100);
    if (v56)
    {
      uint64_t v57 = v99;
      v96(v99, v97, v22);
      swift_retain_n();
      __n128 v58 = sub_24B6824B0();
      os_log_type_t v59 = sub_24B682B30();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v94 = v23;
        *(void *)&long long v109 = v22;
        __n128 v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(void *)v110 = v61;
        *(_DWORD *)__n128 v60 = 136446210;
        if (*(unsigned char *)(v33 + 128))
        {
LABEL_34:
          uint64_t result = swift_release();
          __break(1u);
          goto LABEL_35;
        }
        uint64_t v62 = v61;
        long long v64 = *(_OWORD *)(v33 + 80);
        long long v63 = *(_OWORD *)(v33 + 96);
        uint64_t v65 = *(void *)(v33 + 112);
        uint64_t v66 = *(void *)(v33 + 120);
        long long v112 = *(_OWORD *)(v33 + 64);
        long long v113 = v64;
        long long v114 = v63;
        *(void *)&long long v115 = v65;
        *((void *)&v115 + 1) = v66;
        type metadata accessor for simd_float4x4(0);
        uint64_t v67 = sub_24B682820();
        *(void *)&long long v112 = sub_24B5627B8(v67, v68, (uint64_t *)v110);
        sub_24B682CD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v58, v59, "\"Masking Manager: Successfully computed bounding box with transform = %{public}s", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v62, -1, -1);
        MEMORY[0x24C5D6C00](v60, -1, -1);

        uint64_t v69 = v99;
        uint64_t v22 = v109;
      }
      else
      {

        swift_release_n();
        uint64_t v69 = v57;
      }
      v47(v69, v22);
      if (v93)
      {
        *(void *)&long long v112 = 0;
        long long v113 = 0u;
        long long v114 = 0u;
        long long v115 = 0u;
        memset(v116, 0, 28);
        uint64_t result = OCMaskingGetDebugInfo();
        if (result)
        {
          v96(v92, v97, v22);
          uint64_t v70 = sub_24B6824B0();
          os_log_type_t v71 = sub_24B682B20();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v72 = 0;
            _os_log_impl(&dword_24B55E000, v70, v71, "Masking Manager: Failed to get masking debug info!", v72, 2u);
            MEMORY[0x24C5D6C00](v72, -1, -1);
          }

          uint64_t v56 = ((uint64_t (*)(char *, uint64_t))v47)(v92, v22);
          goto LABEL_27;
        }
        uint64_t v73 = (void *)v112;
        if (!(void)v112)
        {
LABEL_35:
          __break(1u);
          return result;
        }
        type metadata accessor for OCDataBuffer();
        uint64_t v74 = sub_24B681D6C((uint64_t)v73);
        sub_24B5F96D8(v74, 0, (simd_float4 *)v110);
        swift_release();
        v75 = *(void **)v110;
        __n128 v108 = *(__n128 *)&v110[8];
        __n128 v107 = *(__n128 *)&v110[24];
        __n128 v106 = *(__n128 *)&v110[40];
        long long v105 = *(_OWORD *)&v110[56];
        uint64_t v76 = v111;
        if (*(void *)v110)
        {
          uint64_t v77 = DWORD2(v116[1]);
          if (DWORD2(v116[1]))
          {
            uint64_t v78 = *(void *)&v116[1];
            long long v109 = xmmword_24B684FD0;
            v79 = *(unsigned int **)&v116[1];
            while (v78)
            {
              if (!v75) {
                goto LABEL_33;
              }
              unint64_t v80 = *v79;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v75 = sub_24B5678E0(v75);
              }
              if (v75[2] <= v80) {
                __break(1u);
              }
              *(_OWORD *)&v75[6 * v80 + 8] = v109;
              ++v79;
              if (!--v77) {
                goto LABEL_25;
              }
            }
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
        }
LABEL_25:
        *(void *)(v33 + 144) = v75;
        *(__n128 *)(v33 + 152) = v108;
        *(__n128 *)(v33 + 168) = v107;
        *(__n128 *)(v33 + 184) = v106;
        *(_OWORD *)(v33 + 200) = v105;
        *(void *)(v33 + 216) = v76;
        swift_bridgeObjectRelease();
      }
      sub_24B680C78();
      OCSignPostsAriadneDbgCode();
      uint64_t v56 = kdebug_trace();
    }
LABEL_27:
    if ((*(uint64_t (**)(uint64_t))(*(void *)v33 + 168))(v56))
    {
      uint64_t v82 = v81;
      uint64_t ObjectType = swift_getObjectType();
      char v84 = *(unsigned char *)(v33 + 128);
      long long v85 = *(_OWORD *)(v33 + 80);
      *(_OWORD *)v110 = *(_OWORD *)(v33 + 64);
      *(_OWORD *)&v110[16] = v85;
      long long v86 = *(_OWORD *)(v33 + 112);
      *(_OWORD *)&v110[32] = *(_OWORD *)(v33 + 96);
      *(_OWORD *)&v110[48] = v86;
      v110[64] = v84;
      long long v87 = *(_OWORD *)(v33 + 160);
      long long v112 = *(_OWORD *)(v33 + 144);
      long long v113 = v87;
      long long v88 = *(_OWORD *)(v33 + 192);
      long long v114 = *(_OWORD *)(v33 + 176);
      long long v115 = v88;
      v116[0] = *(_OWORD *)(v33 + 208);
      v89 = *(void (**)(unsigned char *, long long *, uint64_t, void *, uint64_t, uint64_t))(v82 + 8);
      swift_bridgeObjectRetain();
      v89(v110, &v112, v95, a11, ObjectType, v82);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24B566C04(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_24B566C48()
{
  *(unsigned char *)(v0 + 241) = 0;
}

uint64_t sub_24B566C50(void *a1, __n128 a2, __n128 a3, __n128 a4, float32x4_t a5, __n128 a6, __n128 a7, __n128 a8, __n128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17)
{
  uint64_t v18 = v17;
  __n128 v65 = a8;
  __n128 v66 = a9;
  __n128 v63 = a2;
  __n128 v64 = a7;
  float32x4_t v61 = a5;
  __n128 v62 = a6;
  __n128 v59 = a3;
  __n128 v60 = a4;
  uint64_t v89 = *MEMORY[0x263EF8340];
  uint64_t v20 = sub_24B6824D0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v56 - v25;
  if (*(unsigned char *)(v18 + 240))
  {
    long long v58 = a17;
    objc_msgSend(a1, sel_transform);
    long long v81 = v27;
    long long v82 = v28;
    long long v83 = v29;
    long long v84 = v30;
    objc_msgSend(a1, sel_center);
    long long v85 = v31;
    id v32 = objc_msgSend(a1, sel_planeExtent);
    objc_msgSend(v32, sel_width);
    uint64_t v57 = v33;

    id v34 = objc_msgSend(a1, sel_planeExtent);
    objc_msgSend(v34, sel_height);
    v56[0] = v35;

    *(void *)&long long v36 = v57;
    *((void *)&v36 + 1) = LODWORD(v56[0]);
    long long v86 = v36;
    uint64_t v87 = 0;
    int v88 = 0;
    __n128 v73 = v64;
    __n128 v74 = v65;
    __n128 v75 = v66;
    long long v76 = v58;
    __n128 v77 = v63;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v69 = 0u;
    long long v70 = 0u;
    ObjectVoxelsAndComputeBBox = (simd_float4x4 *)OCMaskingCreateObjectVoxelsAndComputeBBox();
    if (!ObjectVoxelsAndComputeBBox)
    {
      sub_24B5F9040(ObjectVoxelsAndComputeBBox, *(double *)&v69, *(double *)&v70, *(double *)&v71, *(double *)&v72, v59.n128_f64[0], v60.n128_f64[0], v61);
      OCBoundingBox.init(transform:)(&v68, v51);
      CoreOC::OCBoundingBox v67 = v68;
      OCBoundingBox.scale(_:)(v78, *(float32x4_t *)(v18 + 48));
      long long v52 = v78[1];
      long long v53 = v78[2];
      uint64_t v55 = v79;
      uint64_t v54 = v80;
      *(_OWORD *)(v18 + 64) = v78[0];
      *(_OWORD *)(v18 + 80) = v52;
      *(_OWORD *)(v18 + 96) = v53;
      *(void *)(v18 + 112) = v55;
      *(void *)(v18 + 120) = v54;
      uint64_t result = 1;
      *(unsigned char *)(v18 + 128) = 0;
      return result;
    }
    __int32 v38 = (int)ObjectVoxelsAndComputeBBox;
    uint64_t v39 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v39, v20);
    uint64_t v40 = sub_24B6824B0();
    os_log_type_t v41 = sub_24B682B20();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      v66.n128_u64[0] = swift_slowAlloc();
      *(void *)&v78[0] = v66.n128_u64[0];
      *(_DWORD *)uint64_t v42 = 136446210;
      v65.n128_u64[0] = (unint64_t)(v42 + 4);
      v68.transform.columns[0].i32[0] = v38;
      type metadata accessor for OCReturn(0);
      uint64_t v43 = sub_24B682820();
      v68.transform.columns[0].i64[0] = sub_24B5627B8(v43, v44, (uint64_t *)v78);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v40, v41, "Masking Manager: Failed to compute bounding box with error: %{public}s", v42, 0xCu);
      unint64_t v45 = v66.n128_u64[0];
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v45, -1, -1);
      MEMORY[0x24C5D6C00](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  else
  {
    uint64_t v46 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v26, v46, v20);
    unint64_t v47 = sub_24B6824B0();
    os_log_type_t v48 = sub_24B682B20();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_24B55E000, v47, v48, "Masking Manager: Failed to compute bounding box because masking manager has not been started!", v49, 2u);
      MEMORY[0x24C5D6C00](v49, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  uint64_t result = 0;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 64) = 0u;
  *(_OWORD *)(v18 + 80) = 0u;
  *(unsigned char *)(v18 + 128) = 1;
  return result;
}

uint64_t sub_24B5670E8()
{
  return sub_24B682470();
}

uint64_t sub_24B567134()
{
  return sub_24B682460();
}

uint64_t sub_24B56718C()
{
  return sub_24B6830D0();
}

BOOL sub_24B5671F4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_24B567208@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_24B567218(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24B567224()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B56725C()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, 257, 15);
}

uint64_t sub_24B5672A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_24B566248(*(double *)(v8 + 80), *(__n128 *)(v8 + 96), *(__n128 *)(v8 + 128), *(__n128 *)(v8 + 144), *(float32x4_t *)(v8 + 160), *(__n128 *)(v8 + 176), *(__n128 *)(v8 + 192), *(__n128 *)(v8 + 208), *(void *)(v8 + 16), v8 + 32, *(void **)(v8 + 72), *(void *)(v8 + 112), *(unsigned __int8 *)(v8 + 256), a6, a7, a8, *(__n128 *)(v8 + 224), *(_OWORD *)(v8 + 240));
}

uint64_t sub_24B5672F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B567304()
{
  return swift_release();
}

uint64_t sub_24B56730C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OCCaptureData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B567370(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OCCaptureData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24B5673CC()
{
  swift_getWitnessTable();

  return sub_24B682450();
}

void *sub_24B567438(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CCD30);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24B567938(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void type metadata accessor for CVPixelBufferPool(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for PhotogrammetrySample.Scene(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithCopy for OCBoundingBox(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for OCBoundingBox(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OCBoundingBox(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
}

uint64_t sub_24B56762C()
{
  return sub_24B5661B4(&qword_2697CC0D0, type metadata accessor for CFString);
}

uint64_t sub_24B567674()
{
  return sub_24B5661B4(&qword_2697CC0E8, type metadata accessor for CFString);
}

void type metadata accessor for OCReturn(uint64_t a1)
{
}

unint64_t sub_24B5676D0(uint64_t a1)
{
  sub_24B683090();
  type metadata accessor for CFString(0);
  sub_24B5661B4(&qword_2697CC108, type metadata accessor for CFString);
  sub_24B682460();
  uint64_t v2 = sub_24B6830D0();

  return sub_24B567784(a1, v2);
}

unint64_t sub_24B567784(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_24B5661B4(&qword_2697CC108, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_24B682450();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_24B682450();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

void *sub_24B5678E0(void *a1)
{
  return sub_24B567438(0, a1[2], 0, a1);
}

uint64_t sub_24B5678F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24B566158(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_24B567938(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    id v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B567A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 sub_24B567A90(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24B567AA4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B567AC4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for OCVoxel(uint64_t a1)
{
}

void sub_24B567B10(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24B567B5C()
{
  uint64_t result = sub_24B682890();
  qword_2697CD4C8 = 0xD00000000000001ELL;
  qword_2697CD4D0 = 0x800000024B68B6F0;
  return result;
}

uint64_t sub_24B567BCC()
{
  uint64_t result = sub_24B6827D0();
  qword_2697CD4E0 = result;
  qword_2697CD4E8 = v1;
  return result;
}

uint64_t sub_24B567C00()
{
  return sub_24B56AF4C(0xD00000000000001ALL, 0x800000024B68B390);
}

uint64_t sub_24B567C30()
{
  return sub_24B567C90(0xD00000000000002BLL, 0x800000024B68B6C0, (uint64_t (*)(void))sub_24B56B224);
}

uint64_t sub_24B567C60()
{
  return sub_24B567C90(0xD000000000000029, 0x800000024B68B690, (uint64_t (*)(void))sub_24B56B224);
}

uint64_t sub_24B567C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_24B567CC0()
{
  return sub_24B56B170(0xD000000000000025, 0x800000024B68B660);
}

void sub_24B567CF4(uint64_t a1)
{
}

void *sub_24B567D18()
{
  if (qword_2697CD4F0 != -1) {
    swift_once();
  }
  return &unk_2697D0BC1;
}

void sub_24B567D64(uint64_t a1)
{
}

unsigned __int8 *sub_24B567D88()
{
  if (qword_2697CD4F8 != -1) {
    swift_once();
  }
  return byte_2697D0BC2;
}

void sub_24B567DD4()
{
  if (qword_2697CD4C0 != -1) {
    swift_once();
  }
  unint64_t v0 = sub_24B56A8F0(qword_2697CD4C8, qword_2697CD4D0);
  swift_bridgeObjectRelease();
  if (v0)
  {
    id v1 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v2 = (void *)sub_24B6827A0();
    objc_msgSend(v1, sel_floatForKey_, v2);
    float v4 = v3;
  }
  else
  {
    float v4 = 1.0;
  }
  dword_2697D0BC4 = LODWORD(v4);
}

int *sub_24B567EB4()
{
  if (qword_2697CD500 != -1) {
    swift_once();
  }
  return &dword_2697D0BC4;
}

uint64_t sub_24B567F00()
{
  return sub_24B56AF4C(0xD000000000000014, 0x800000024B68B450);
}

uint64_t sub_24B567F30()
{
  return sub_24B56AFE8();
}

void sub_24B567F4C()
{
  unint64_t v0 = sub_24B56A8F0(0xD00000000000003ELL, 0x800000024B68B470);
  swift_bridgeObjectRelease();
  if (v0)
  {
    id v1 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v2 = (void *)sub_24B6827A0();
    unsigned __int8 v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);
  }
  else
  {
    unsigned __int8 v3 = 1;
  }
  byte_2697D0BC8 = v3;
}

char *sub_24B568004()
{
  if (qword_2697CD508 != -1) {
    swift_once();
  }
  return &byte_2697D0BC8;
}

unint64_t sub_24B568050()
{
  if (qword_2697CD4D8 != -1) {
    swift_once();
  }
  unint64_t v0 = sub_24B56A8F0(qword_2697CD4E0, qword_2697CD4E8);
  swift_bridgeObjectRelease();
  if (v0)
  {
    id v1 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v2 = (void *)sub_24B6827A0();
    objc_msgSend(v1, sel_floatForKey_, v2);
    unsigned int v4 = v3;

    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  return v5 | ((unint64_t)(v0 == 0) << 32);
}

uint64_t sub_24B568148()
{
  return sub_24B567C90(0xD00000000000003ALL, 0x800000024B68B4B0, (uint64_t (*)(void))sub_24B56B0B0);
}

uint64_t sub_24B568178()
{
  return sub_24B567C90(0xD00000000000003CLL, 0x800000024B68B4F0, (uint64_t (*)(void))sub_24B56B0B0);
}

uint64_t sub_24B5681A8()
{
  return sub_24B567C90(0xD000000000000048, 0x800000024B68B530, (uint64_t (*)(void))sub_24B56B0B0);
}

void sub_24B5681D8(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4)
{
  unint64_t v5 = sub_24B56A8F0(a2, a3);
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v6 = objc_msgSend(self, sel_standardUserDefaults);
    id v7 = (void *)sub_24B6827A0();
    unsigned __int8 v8 = objc_msgSend(v6, sel_BOOLForKey_, v7);
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  *a4 = v8;
}

uint64_t sub_24B568280()
{
  return sub_24B56B170(0xD00000000000001DLL, 0x800000024B68B620);
}

uint64_t sub_24B5682B4()
{
  return sub_24B567C90(0xD000000000000023, 0x800000024B68B5F0, (uint64_t (*)(void))sub_24B56B224);
}

uint64_t sub_24B5682E4()
{
  return sub_24B567C90(0xD000000000000020, 0x800000024B68B5C0, (uint64_t (*)(void))sub_24B56B224);
}

uint64_t sub_24B568314()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  v265 = (char *)&v250 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  v260 = (char *)&v250 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v259 = (char *)&v250 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v250 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  v257 = (char *)&v250 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v264 = (char *)&v250 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v256 = (char *)&v250 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v267 = (char *)&v250 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v266 = (char *)&v250 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v250 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  v253 = (char *)&v250 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v269 = (char *)&v250 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v263 = (char *)&v250 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v255 = (char *)&v250 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v254 = (char *)&v250 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v262 = (char *)&v250 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v252 = (char *)&v250 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v250 - v39;
  uint64_t v41 = MEMORY[0x270FA5388](v38);
  v261 = (char *)&v250 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  unint64_t v45 = (char *)&v250 - v44;
  MEMORY[0x270FA5388](v43);
  unint64_t v47 = (char *)&v250 - v46;
  uint64_t v48 = sub_24B57CC30();
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v273 = v48;
  uint64_t v274 = v1 + 16;
  v272 = v49;
  ((void (*)(char *))v49)(v47);
  uint64_t v50 = sub_24B6824B0();
  os_log_type_t v51 = sub_24B682B10();
  if (os_log_type_enabled(v50, v51))
  {
    long long v52 = v40;
    long long v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v53 = 0;
    _os_log_impl(&dword_24B55E000, v50, v51, "User defaults summary:", v53, 2u);
    uint64_t v54 = v53;
    uint64_t v40 = v52;
    MEMORY[0x24C5D6C00](v54, -1, -1);
  }

  v271 = *(void (**)(char *, uint64_t))(v1 + 8);
  v271(v47, v0);
  unint64_t v55 = sub_24B56A8F0(0xD00000000000001ALL, 0x800000024B68B390);
  swift_bridgeObjectRelease();
  uint64_t v270 = v1 + 8;
  v258 = v10;
  v268 = v23;
  if (v55)
  {
    id v56 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v57 = (void *)sub_24B6827A0();
    unsigned int v58 = objc_msgSend(v56, sel_BOOLForKey_, v57);

    v272(v45, v273, v0);
    __n128 v59 = sub_24B6824B0();
    os_log_type_t v60 = sub_24B682B10();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      v251 = v40;
      uint64_t v62 = v61;
      uint64_t v63 = swift_slowAlloc();
      v276[0] = v63;
      *(_DWORD *)uint64_t v62 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001ALL, 0x800000024B68B390, v276));
      sub_24B682CD0();
      *(_WORD *)(v62 + 12) = 1025;
      LODWORD(v275) = v58;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v59, v60, "%{private}s: %{BOOL,private}d", (uint8_t *)v62, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v63, -1, -1);
      uint64_t v64 = v62;
      uint64_t v40 = v251;
      MEMORY[0x24C5D6C00](v64, -1, -1);
    }

    v271(v45, v0);
  }
  unint64_t v65 = sub_24B56B224(0xD00000000000002BLL, 0x800000024B68B6C0);
  if ((v65 & 0x100000000) == 0)
  {
    float v66 = *(float *)&v65;
    CoreOC::OCBoundingBox v67 = v40;
    CoreOC::OCBoundingBox v68 = v261;
    v272(v261, v273, v0);
    long long v69 = sub_24B6824B0();
    os_log_type_t v70 = sub_24B682B10();
    if (os_log_type_enabled(v69, v70))
    {
      float v71 = v66;
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      v276[0] = v73;
      *(_DWORD *)uint64_t v72 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000002BLL, 0x800000024B68B6C0, v276));
      sub_24B682CD0();
      *(_WORD *)(v72 + 12) = 2049;
      double v275 = v71;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v69, v70, "%{private}s: %{private}f", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v73, -1, -1);
      MEMORY[0x24C5D6C00](v72, -1, -1);

      __n128 v74 = v261;
    }
    else
    {

      __n128 v74 = v68;
    }
    v271(v74, v0);
    uint64_t v40 = v67;
  }
  unint64_t v75 = sub_24B56A8F0(0xD000000000000034, 0x800000024B68B3B0);
  swift_bridgeObjectRelease();
  if (v75)
  {
    id v76 = objc_msgSend(self, sel_standardUserDefaults);
    __n128 v77 = (void *)sub_24B6827A0();
    unsigned int v78 = objc_msgSend(v76, sel_BOOLForKey_, v77);

    v272(v40, v273, v0);
    uint64_t v79 = sub_24B6824B0();
    os_log_type_t v80 = sub_24B682B10();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      v251 = v40;
      uint64_t v82 = v81;
      uint64_t v83 = swift_slowAlloc();
      v276[0] = v83;
      *(_DWORD *)uint64_t v82 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000034, 0x800000024B68B3B0, v276));
      sub_24B682CD0();
      *(_WORD *)(v82 + 12) = 1025;
      LODWORD(v275) = v78;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v79, v80, "%{private}s: %{BOOL,private}d", (uint8_t *)v82, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v83, -1, -1);
      MEMORY[0x24C5D6C00](v82, -1, -1);

      long long v84 = v251;
    }
    else
    {

      long long v84 = v40;
    }
    v271(v84, v0);
  }
  unint64_t v85 = sub_24B56B224(0xD000000000000029, 0x800000024B68B690);
  if ((v85 & 0x100000000) == 0)
  {
    float v86 = *(float *)&v85;
    uint64_t v87 = v252;
    v272(v252, v273, v0);
    int v88 = sub_24B6824B0();
    os_log_type_t v89 = sub_24B682B10();
    if (os_log_type_enabled(v88, v89))
    {
      float v90 = v86;
      uint64_t v91 = swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      v276[0] = v92;
      *(_DWORD *)uint64_t v91 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000029, 0x800000024B68B690, v276));
      sub_24B682CD0();
      *(_WORD *)(v91 + 12) = 2049;
      double v275 = v90;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v88, v89, "%{private}s: %{private}f", (uint8_t *)v91, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v92, -1, -1);
      MEMORY[0x24C5D6C00](v91, -1, -1);
    }

    v271(v87, v0);
  }
  uint64_t v93 = sub_24B56B170(0xD000000000000025, 0x800000024B68B660);
  if ((v94 & 1) == 0)
  {
    double v95 = *(double *)&v93;
    v96 = v262;
    v272(v262, v273, v0);
    uint64_t v97 = sub_24B6824B0();
    os_log_type_t v98 = sub_24B682B10();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      v276[0] = v100;
      *(_DWORD *)uint64_t v99 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000025, 0x800000024B68B660, v276));
      sub_24B682CD0();
      *(_WORD *)(v99 + 12) = 2049;
      double v275 = v95;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v97, v98, "%{private}s: %{private}f", (uint8_t *)v99, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v100, -1, -1);
      MEMORY[0x24C5D6C00](v99, -1, -1);

      __n128 v101 = v262;
    }
    else
    {

      __n128 v101 = v96;
    }
    v271(v101, v0);
  }
  unint64_t v102 = sub_24B56A8F0(0xD00000000000002ALL, 0x800000024B68B3F0);
  swift_bridgeObjectRelease();
  __n128 v103 = v269;
  if (v102)
  {
    id v104 = objc_msgSend(self, sel_standardUserDefaults);
    long long v105 = (void *)sub_24B6827A0();
    unsigned int v106 = objc_msgSend(v104, sel_BOOLForKey_, v105);

    __n128 v107 = v254;
    v272(v254, v273, v0);
    __n128 v108 = sub_24B6824B0();
    os_log_type_t v109 = sub_24B682B10();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      v276[0] = v111;
      *(_DWORD *)uint64_t v110 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000002ALL, 0x800000024B68B3F0, v276));
      sub_24B682CD0();
      *(_WORD *)(v110 + 12) = 1025;
      LODWORD(v275) = v106;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v108, v109, "%{private}s: %{BOOL,private}d", (uint8_t *)v110, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v111, -1, -1);
      uint64_t v112 = v110;
      __n128 v103 = v269;
      MEMORY[0x24C5D6C00](v112, -1, -1);
    }

    v271(v107, v0);
  }
  unint64_t v113 = sub_24B56A8F0(0xD000000000000021, 0x800000024B68B420);
  swift_bridgeObjectRelease();
  if (v113)
  {
    id v114 = objc_msgSend(self, sel_standardUserDefaults);
    long long v115 = (void *)sub_24B6827A0();
    unsigned int v116 = objc_msgSend(v114, sel_BOOLForKey_, v115);

    uint64_t v117 = v255;
    v272(v255, v273, v0);
    v118 = sub_24B6824B0();
    os_log_type_t v119 = sub_24B682B10();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      v276[0] = v121;
      *(_DWORD *)uint64_t v120 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000021, 0x800000024B68B420, v276));
      sub_24B682CD0();
      *(_WORD *)(v120 + 12) = 1025;
      LODWORD(v275) = v116;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v118, v119, "%{private}s: %{BOOL,private}d", (uint8_t *)v120, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v121, -1, -1);
      uint64_t v122 = v120;
      __n128 v103 = v269;
      MEMORY[0x24C5D6C00](v122, -1, -1);
    }

    v271(v117, v0);
  }
  if (qword_2697CD4C0 != -1) {
    swift_once();
  }
  unint64_t v123 = sub_24B56A8F0(qword_2697CD4C8, qword_2697CD4D0);
  swift_bridgeObjectRelease();
  if (v123)
  {
    id v124 = objc_msgSend(self, sel_standardUserDefaults);
    v125 = (void *)sub_24B6827A0();
    objc_msgSend(v124, sel_floatForKey_, v125);
    float v127 = v126;

    v128 = v263;
    v272(v263, v273, v0);
    v129 = sub_24B6824B0();
    os_log_type_t v130 = sub_24B682B10();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      uint64_t v132 = swift_slowAlloc();
      v276[0] = v132;
      *(_DWORD *)uint64_t v131 = 136380931;
      uint64_t v133 = qword_2697CD4C8;
      unint64_t v134 = qword_2697CD4D0;
      swift_bridgeObjectRetain();
      double v275 = COERCE_DOUBLE(sub_24B5627B8(v133, v134, v276));
      __n128 v103 = v269;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 12) = 2049;
      double v275 = v127;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v129, v130, "%{private}s: %{private}f", (uint8_t *)v131, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v132, -1, -1);
      MEMORY[0x24C5D6C00](v131, -1, -1);

      v135 = v263;
    }
    else
    {

      v135 = v128;
    }
    v271(v135, v0);
  }
  unint64_t v136 = sub_24B56A8F0(0xD000000000000014, 0x800000024B68B450);
  swift_bridgeObjectRelease();
  v137 = v268;
  if (v136)
  {
    id v138 = objc_msgSend(self, sel_standardUserDefaults);
    v139 = (void *)sub_24B6827A0();
    unsigned int v140 = objc_msgSend(v138, sel_BOOLForKey_, v139);

    v272(v103, v273, v0);
    v141 = sub_24B6824B0();
    os_log_type_t v142 = sub_24B682B10();
    if (os_log_type_enabled(v141, v142))
    {
      uint64_t v143 = swift_slowAlloc();
      uint64_t v144 = swift_slowAlloc();
      v276[0] = v144;
      *(_DWORD *)uint64_t v143 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000014, 0x800000024B68B450, v276));
      sub_24B682CD0();
      *(_WORD *)(v143 + 12) = 1025;
      LODWORD(v275) = v140;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v141, v142, "%{private}s: %{BOOL,private}d", (uint8_t *)v143, 0x12u);
      swift_arrayDestroy();
      uint64_t v145 = v144;
      v137 = v268;
      MEMORY[0x24C5D6C00](v145, -1, -1);
      MEMORY[0x24C5D6C00](v143, -1, -1);

      v146 = v269;
    }
    else
    {

      v146 = v103;
    }
    v271(v146, v0);
  }
  uint64_t v147 = sub_24B56AFE8();
  v148 = v266;
  if ((v149 & 1) == 0)
  {
    double v150 = *(double *)&v147;
    v151 = v253;
    v272(v253, v273, v0);
    v152 = sub_24B6824B0();
    os_log_type_t v153 = sub_24B682B10();
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v154 = swift_slowAlloc();
      uint64_t v155 = swift_slowAlloc();
      v276[0] = v155;
      *(_DWORD *)uint64_t v154 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001CLL, 0x800000024B68B640, v276));
      v137 = v268;
      sub_24B682CD0();
      *(_WORD *)(v154 + 12) = 2049;
      double v275 = v150;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v152, v153, "%{private}s: %{private}ld", (uint8_t *)v154, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v155, -1, -1);
      uint64_t v156 = v154;
      v148 = v266;
      MEMORY[0x24C5D6C00](v156, -1, -1);
    }

    v271(v151, v0);
  }
  uint64_t v157 = sub_24B56B170(0xD00000000000001DLL, 0x800000024B68B620);
  if ((v158 & 1) == 0)
  {
    double v159 = *(double *)&v157;
    v272(v137, v273, v0);
    v160 = sub_24B6824B0();
    os_log_type_t v161 = sub_24B682B10();
    if (os_log_type_enabled(v160, v161))
    {
      uint64_t v162 = swift_slowAlloc();
      uint64_t v163 = swift_slowAlloc();
      v276[0] = v163;
      *(_DWORD *)uint64_t v162 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000001DLL, 0x800000024B68B620, v276));
      sub_24B682CD0();
      *(_WORD *)(v162 + 12) = 2049;
      double v275 = v159;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v160, v161, "%{private}s: %{private}f", (uint8_t *)v162, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v163, -1, -1);
      uint64_t v164 = v162;
      v148 = v266;
      MEMORY[0x24C5D6C00](v164, -1, -1);

      v165 = v268;
    }
    else
    {

      v165 = v137;
    }
    v271(v165, v0);
  }
  unint64_t v166 = sub_24B56B224(0xD000000000000023, 0x800000024B68B5F0);
  v167 = v267;
  if ((v166 & 0x100000000) == 0)
  {
    float v168 = *(float *)&v166;
    v272(v148, v273, v0);
    v169 = sub_24B6824B0();
    v170 = v148;
    os_log_type_t v171 = sub_24B682B10();
    if (os_log_type_enabled(v169, v171))
    {
      float v172 = v168;
      uint64_t v173 = swift_slowAlloc();
      uint64_t v174 = swift_slowAlloc();
      v276[0] = v174;
      *(_DWORD *)uint64_t v173 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000023, 0x800000024B68B5F0, v276));
      sub_24B682CD0();
      *(_WORD *)(v173 + 12) = 2049;
      double v275 = v172;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v169, v171, "%{private}s: %{private}f", (uint8_t *)v173, 0x16u);
      swift_arrayDestroy();
      uint64_t v175 = v174;
      v167 = v267;
      MEMORY[0x24C5D6C00](v175, -1, -1);
      MEMORY[0x24C5D6C00](v173, -1, -1);
    }

    v271(v170, v0);
  }
  unint64_t v176 = sub_24B56B224(0xD000000000000020, 0x800000024B68B5C0);
  if ((v176 & 0x100000000) == 0)
  {
    float v177 = *(float *)&v176;
    v272(v167, v273, v0);
    v178 = sub_24B6824B0();
    os_log_type_t v179 = sub_24B682B10();
    if (os_log_type_enabled(v178, v179))
    {
      float v180 = v177;
      uint64_t v181 = swift_slowAlloc();
      uint64_t v182 = swift_slowAlloc();
      v276[0] = v182;
      *(_DWORD *)uint64_t v181 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000020, 0x800000024B68B5C0, v276));
      sub_24B682CD0();
      *(_WORD *)(v181 + 12) = 2049;
      double v275 = v180;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v178, v179, "%{private}s: %{private}f", (uint8_t *)v181, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v182, -1, -1);
      MEMORY[0x24C5D6C00](v181, -1, -1);

      v183 = v267;
    }
    else
    {

      v183 = v167;
    }
    v271(v183, v0);
  }
  unint64_t v184 = sub_24B56A8F0(0xD00000000000003ELL, 0x800000024B68B470);
  swift_bridgeObjectRelease();
  if (v184)
  {
    id v185 = objc_msgSend(self, sel_standardUserDefaults);
    v186 = (void *)sub_24B6827A0();
    unsigned int v187 = objc_msgSend(v185, sel_BOOLForKey_, v186);

    v188 = v256;
    v272(v256, v273, v0);
    v189 = sub_24B6824B0();
    os_log_type_t v190 = sub_24B682B10();
    if (os_log_type_enabled(v189, v190))
    {
      uint64_t v191 = swift_slowAlloc();
      uint64_t v192 = swift_slowAlloc();
      v276[0] = v192;
      *(_DWORD *)uint64_t v191 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000003ELL, 0x800000024B68B470, v276));
      sub_24B682CD0();
      *(_WORD *)(v191 + 12) = 1025;
      LODWORD(v275) = v187;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v189, v190, "%{private}s: %{BOOL,private}d", (uint8_t *)v191, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v192, -1, -1);
      MEMORY[0x24C5D6C00](v191, -1, -1);
    }

    v271(v188, v0);
  }
  if (qword_2697CD4D8 != -1) {
    swift_once();
  }
  unint64_t v193 = sub_24B56A8F0(qword_2697CD4E0, qword_2697CD4E8);
  swift_bridgeObjectRelease();
  if (v193)
  {
    id v194 = objc_msgSend(self, sel_standardUserDefaults);
    v195 = (void *)sub_24B6827A0();
    objc_msgSend(v194, sel_floatForKey_, v195);
    float v197 = v196;

    v198 = v264;
    v272(v264, v273, v0);
    v199 = sub_24B6824B0();
    os_log_type_t v200 = sub_24B682B10();
    if (os_log_type_enabled(v199, v200))
    {
      uint64_t v201 = swift_slowAlloc();
      uint64_t v202 = swift_slowAlloc();
      v276[0] = v202;
      *(_DWORD *)uint64_t v201 = 136380931;
      uint64_t v203 = qword_2697CD4E0;
      unint64_t v204 = qword_2697CD4E8;
      swift_bridgeObjectRetain();
      double v275 = COERCE_DOUBLE(sub_24B5627B8(v203, v204, v276));
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v201 + 12) = 2049;
      double v275 = v197;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v199, v200, "%{private}s: %{private}f", (uint8_t *)v201, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v202, -1, -1);
      MEMORY[0x24C5D6C00](v201, -1, -1);

      v205 = v264;
    }
    else
    {

      v205 = v198;
    }
    v271(v205, v0);
  }
  unint64_t v206 = sub_24B56A8F0(0xD00000000000003ALL, 0x800000024B68B4B0);
  swift_bridgeObjectRelease();
  if (v206)
  {
    id v207 = objc_msgSend(self, sel_standardUserDefaults);
    v208 = (void *)sub_24B6827A0();
    objc_msgSend(v207, sel_floatForKey_, v208);
    float v210 = v209;

    v211 = v257;
    v272(v257, v273, v0);
    v212 = sub_24B6824B0();
    os_log_type_t v213 = sub_24B682B10();
    if (os_log_type_enabled(v212, v213))
    {
      uint64_t v214 = swift_slowAlloc();
      uint64_t v215 = swift_slowAlloc();
      v276[0] = v215;
      *(_DWORD *)uint64_t v214 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000003ALL, 0x800000024B68B4B0, v276));
      sub_24B682CD0();
      *(_WORD *)(v214 + 12) = 2049;
      double v275 = v210;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v212, v213, "%{private}s: %{private}f", (uint8_t *)v214, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v215, -1, -1);
      MEMORY[0x24C5D6C00](v214, -1, -1);
    }

    v271(v211, v0);
  }
  unint64_t v216 = sub_24B56A8F0(0xD00000000000003CLL, 0x800000024B68B4F0);
  swift_bridgeObjectRelease();
  if (v216)
  {
    id v217 = objc_msgSend(self, sel_standardUserDefaults);
    v218 = (void *)sub_24B6827A0();
    objc_msgSend(v217, sel_floatForKey_, v218);
    float v220 = v219;

    v221 = v258;
    v272(v258, v273, v0);
    v222 = sub_24B6824B0();
    os_log_type_t v223 = sub_24B682B10();
    if (os_log_type_enabled(v222, v223))
    {
      uint64_t v224 = swift_slowAlloc();
      uint64_t v225 = swift_slowAlloc();
      v276[0] = v225;
      *(_DWORD *)uint64_t v224 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000003CLL, 0x800000024B68B4F0, v276));
      sub_24B682CD0();
      *(_WORD *)(v224 + 12) = 2049;
      double v275 = v220;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v222, v223, "%{private}s: %{private}f", (uint8_t *)v224, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v225, -1, -1);
      MEMORY[0x24C5D6C00](v224, -1, -1);
    }

    v271(v221, v0);
  }
  unint64_t v226 = sub_24B56A8F0(0xD000000000000048, 0x800000024B68B530);
  swift_bridgeObjectRelease();
  if (v226)
  {
    id v227 = objc_msgSend(self, sel_standardUserDefaults);
    v228 = (void *)sub_24B6827A0();
    objc_msgSend(v227, sel_floatForKey_, v228);
    float v230 = v229;

    v231 = v259;
    v272(v259, v273, v0);
    v232 = sub_24B6824B0();
    os_log_type_t v233 = sub_24B682B10();
    if (os_log_type_enabled(v232, v233))
    {
      uint64_t v234 = swift_slowAlloc();
      uint64_t v235 = swift_slowAlloc();
      v276[0] = v235;
      *(_DWORD *)uint64_t v234 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000048, 0x800000024B68B530, v276));
      sub_24B682CD0();
      *(_WORD *)(v234 + 12) = 2049;
      double v275 = v230;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v232, v233, "%{private}s: %{private}f", (uint8_t *)v234, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v235, -1, -1);
      MEMORY[0x24C5D6C00](v234, -1, -1);
    }

    v271(v231, v0);
  }
  unint64_t v236 = sub_24B56A8F0(0xD00000000000003ALL, 0x800000024B68B580);
  swift_bridgeObjectRelease();
  if (v236)
  {
    id v237 = objc_msgSend(self, sel_standardUserDefaults);
    v238 = (void *)sub_24B6827A0();
    unsigned int v239 = objc_msgSend(v237, sel_BOOLForKey_, v238);

    v240 = v260;
    v272(v260, v273, v0);
    v241 = sub_24B6824B0();
    os_log_type_t v242 = sub_24B682B10();
    if (os_log_type_enabled(v241, v242))
    {
      uint64_t v243 = swift_slowAlloc();
      uint64_t v244 = swift_slowAlloc();
      v276[0] = v244;
      *(_DWORD *)uint64_t v243 = 136380931;
      double v275 = COERCE_DOUBLE(sub_24B5627B8(0xD00000000000003ALL, 0x800000024B68B580, v276));
      sub_24B682CD0();
      *(_WORD *)(v243 + 12) = 1025;
      LODWORD(v275) = v239;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v241, v242, "%{private}s: %{BOOL,private}d", (uint8_t *)v243, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v244, -1, -1);
      MEMORY[0x24C5D6C00](v243, -1, -1);
    }

    v271(v240, v0);
  }
  v245 = v265;
  v272(v265, v273, v0);
  v246 = sub_24B6824B0();
  os_log_type_t v247 = sub_24B682B10();
  if (os_log_type_enabled(v246, v247))
  {
    v248 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v248 = 0;
    _os_log_impl(&dword_24B55E000, v246, v247, "End of user defaults summary", v248, 2u);
    MEMORY[0x24C5D6C00](v248, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v271)(v245, v0);
}

unint64_t sub_24B56A8F0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v45 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v43 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v43 - v10;
  id v50 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v12 = sub_24B57CC30();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v47 = v12;
  uint64_t v48 = v13;
  ((void (*)(char *))v13)(v11);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24B6824B0();
  os_log_type_t v15 = sub_24B682B10();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v49 = v4;
  if (v16)
  {
    uint64_t v17 = a1;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v44 = v5;
    uint64_t v20 = v19;
    uint64_t v52 = v19;
    *(_DWORD *)uint64_t v18 = 136380675;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_24B5627B8(v17, a2, &v52);
    uint64_t v4 = v49;
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v14, v15, "Settings: Looking for key = \"%{private}s\"", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v20;
    uint64_t v5 = v44;
    MEMORY[0x24C5D6C00](v21, -1, -1);
    uint64_t v22 = v18;
    a1 = v17;
    MEMORY[0x24C5D6C00](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v11, v4);
  uint64_t v24 = (void *)sub_24B6827A0();
  id v25 = objc_msgSend(v50, sel_stringForKey_, v24);

  if (v25)
  {
    uint64_t v26 = a1;
    unint64_t v45 = (char *)sub_24B6827D0();
    unint64_t v28 = v27;

    uint64_t v29 = v46;
    v48(v46, v47, v4);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v30 = sub_24B6824B0();
    os_log_type_t v31 = sub_24B682B10();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v48 = (void (*)(char *, uint64_t, uint64_t))v23;
      uint64_t v33 = v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v52 = v34;
      *(_DWORD *)uint64_t v33 = 136380931;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_24B5627B8(v26, a2, &v52);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_24B5627B8((uint64_t)v45, v28, &v52);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B55E000, v30, v31, "Settings: Found defaults \"%{private}s\": %{private}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v34, -1, -1);
      MEMORY[0x24C5D6C00](v33, -1, -1);

      ((void (*)(char *, uint64_t))v48)(v46, v49);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v23(v29, v4);
    }
  }
  else
  {
    uint64_t v35 = (uint64_t)v45;
    v48(v45, v47, v4);
    swift_bridgeObjectRetain_n();
    uint64_t v36 = sub_24B6824B0();
    os_log_type_t v37 = sub_24B682B10();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v52 = v39;
      *(_DWORD *)uint64_t v38 = 136380675;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_24B5627B8(a1, a2, &v52);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B55E000, v36, v37, "Settings: \"%{private}s\" not found!", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v39, -1, -1);
      MEMORY[0x24C5D6C00](v38, -1, -1);

      uint64_t v40 = (uint64_t)v45;
      uint64_t v41 = v49;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v40 = v35;
      uint64_t v41 = v4;
    }
    v23((char *)v40, v41);
    return 0;
  }
  return v28;
}

uint64_t sub_24B56AF4C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_24B56A8F0(a1, a2);
  swift_bridgeObjectRelease();
  if (!v2) {
    return 2;
  }
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v4 = (void *)sub_24B6827A0();
  id v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  return (uint64_t)v5;
}

uint64_t sub_24B56AFE8()
{
  unint64_t v0 = sub_24B56A8F0(0xD00000000000001CLL, 0x800000024B68B640);
  swift_bridgeObjectRelease();
  if (!v0) {
    return 0;
  }
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v2 = (void *)sub_24B6827A0();
  uint64_t v3 = (uint64_t)objc_msgSend(v1, sel_integerForKey_, v2);

  if ((v3 & (unint64_t)~(v3 >> 63)) >= 0xBD0) {
    return 3024;
  }
  else {
    return v3 & ~(v3 >> 63);
  }
}

unint64_t sub_24B56B0B0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_24B56A8F0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v3 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v4 = (void *)sub_24B6827A0();
    objc_msgSend(v3, sel_floatForKey_, v4);
    unsigned int v6 = v5;

    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_24B56B170(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_24B56A8F0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2
    && (id v3 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v4 = (void *)sub_24B6827A0(),
        objc_msgSend(v3, sel_doubleForKey_, v4),
        double v6 = v5,
        v3,
        v4,
        v6 > 0.0))
  {
    return *(void *)&v6;
  }
  else
  {
    return 0;
  }
}

unint64_t sub_24B56B224(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_24B56A8F0(a1, a2);
  swift_bridgeObjectRelease();
  if (v2
    && (id v3 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v4 = (void *)sub_24B6827A0(),
        objc_msgSend(v3, sel_floatForKey_, v4),
        float v6 = v5,
        v3,
        v4,
        v6 > 0.0))
  {
    unsigned __int8 v7 = 0;
    uint64_t v8 = LODWORD(v6);
  }
  else
  {
    uint64_t v8 = 0;
    unsigned __int8 v7 = 1;
  }
  return v8 | ((unint64_t)v7 << 32);
}

ValueMetadata *type metadata accessor for ExperimentSettings()
{
  return &type metadata for ExperimentSettings;
}

uint64_t PhotogrammetrySample.Camera.init(id:intrinsics:transform:trackingState:calibrationData:wideToDepthTransform:)@<X0>(int a1@<W0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>, __n128 a8@<Q1>, __n128 a9@<Q2>, __n128 a10@<Q3>)
{
  BOOL v16 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v17 = v16[8];
  uint64_t v18 = a6 + v16[9];
  uint64_t v19 = a6 + v16[10];
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(unsigned char *)(v19 + 64) = 1;
  uint64_t v20 = a6 + v16[11];
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(unsigned char *)(v20 + 64) = 1;
  *(_DWORD *)a6 = a1;
  long long v21 = a2[1];
  *(_OWORD *)(a6 + 16) = *a2;
  *(_OWORD *)(a6 + 32) = v21;
  *(_OWORD *)(a6 + 48) = a2[2];
  *(__n128 *)(a6 + 64) = a7;
  *(__n128 *)(a6 + 80) = a8;
  *(__n128 *)(a6 + 96) = a9;
  *(__n128 *)(a6 + 112) = a10;
  sub_24B56B40C(a3, a6 + v16[7]);
  *(void *)(a6 + v17) = a4;
  return sub_24B56CF38(a5, v18, &qword_2697CC9A0);
}

uint64_t type metadata accessor for PhotogrammetrySample.Camera(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CD5A0);
}

uint64_t sub_24B56B40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B56B470(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PhotogrammetrySample.Camera(0);
  sub_24B56CF38(a1, v2 + *(int *)(v5 + 40), &qword_2697CC9A0);
  return sub_24B56CF38(a2, v2 + *(int *)(v5 + 44), &qword_2697CC9A0);
}

uint64_t PhotogrammetrySample.Camera.id.getter()
{
  return *v0;
}

uint64_t PhotogrammetrySample.Camera.id.setter(uint64_t result)
{
  *id v1 = result;
  return result;
}

uint64_t (*PhotogrammetrySample.Camera.id.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.intrinsics.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  return result;
}

__n128 PhotogrammetrySample.Camera.intrinsics.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*PhotogrammetrySample.Camera.intrinsics.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.transform.getter()
{
  return v0[4];
}

void PhotogrammetrySample.Camera.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v4[4] = a1;
  v4[5] = a2;
  void v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySample.Camera.transform.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.Camera.trackingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample.Camera(0);
  return sub_24B56D034(v1 + *(int *)(v3 + 28), a1, MEMORY[0x263F8C968]);
}

uint64_t PhotogrammetrySample.Camera.trackingState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 28);

  return sub_24B56B624(a1, v3);
}

uint64_t sub_24B56B624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682C90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PhotogrammetrySample.Camera.trackingState.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.Camera.calibrationData.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 32));
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.Camera.calibrationData.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 32);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*PhotogrammetrySample.Camera.calibrationData.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Camera.wideToDepthTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample.Camera(0) + 36);
  char v4 = *(unsigned char *)(v3 + 64);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v7 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = v4;
  return result;
}

uint64_t PhotogrammetrySample.Camera.wideToDepthTransform.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample.Camera(0);
  return sub_24B56CF38(a1, v1 + *(int *)(v3 + 36), &qword_2697CC9A0);
}

uint64_t (*PhotogrammetrySample.Camera.wideToDepthTransform.modify())()
{
  return nullsub_1;
}

void __swiftcall PhotogrammetrySample.Object.init(transform:boundingBox:)(CoreOC::PhotogrammetrySample::Object *__return_ptr retstr, simd_float4x4 *transform, simd_float4x4 *boundingBox)
{
  retstr->transform.columns[0] = v3;
  retstr->transform.columns[1] = v4;
  retstr->transform.columns[2] = v5;
  retstr->transform.columns[3] = v6;
  retstr->boundingBox.columns[0] = v7;
  retstr->boundingBox.columns[1] = v8;
  retstr->boundingBox.columns[2] = v9;
  retstr->boundingBox.columns[3] = v10;
}

__n128 PhotogrammetrySample.Object.transform.getter()
{
  return *(__n128 *)v0;
}

void PhotogrammetrySample.Object.transform.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  *simd_float4 v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySample.Object.transform.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.Object.boundingBox.getter()
{
  return v0[4];
}

void PhotogrammetrySample.Object.boundingBox.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  v4[4] = a1;
  v4[5] = a2;
  void v4[6] = a3;
  v4[7] = a4;
}

uint64_t (*PhotogrammetrySample.Object.boundingBox.modify())()
{
  return nullsub_1;
}

void __swiftcall PhotogrammetrySample.Scene.init(boundingBox:)(CoreOC::PhotogrammetrySample::Scene *__return_ptr retstr, simd_float4x4 *boundingBox)
{
  retstr->boundingBox.columns[0] = v2;
  retstr->boundingBox.columns[1] = v3;
  retstr->boundingBox.columns[2] = v4;
  retstr->boundingBox.columns[3] = v5;
}

__n128 PhotogrammetrySample.Scene.boundingBox.getter()
{
  return *(__n128 *)v0;
}

void PhotogrammetrySample.Scene.boundingBox.setter(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  *simd_float4 v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

uint64_t (*PhotogrammetrySample.Scene.boundingBox.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.id.getter()
{
  return *(void *)v0;
}

id PhotogrammetrySample.image.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t PhotogrammetrySample.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhotogrammetrySample.metadata.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PhotogrammetrySample.metadata.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.depthDataMap.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.depthDataMap.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*PhotogrammetrySample.depthDataMap.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.depthConfidenceMap.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.depthConfidenceMap.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*PhotogrammetrySample.depthConfidenceMap.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.gravity.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t PhotogrammetrySample.gravity.setter(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v4 + 40) = result;
  *(void *)(v4 + 48) = a2;
  *(void *)(v4 + 56) = a3;
  *(unsigned char *)(v4 + 64) = a4 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.gravity.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.objectMask.getter()
{
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.objectMask.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
}

uint64_t (*PhotogrammetrySample.objectMask.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.pointCloudData.getter()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.pointCloudData.setter(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
}

uint64_t (*PhotogrammetrySample.pointCloudData.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.camera.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B563A6C(v1 + *(int *)(v3 + 48), a1, &qword_2697CC118);
}

uint64_t type metadata accessor for PhotogrammetrySample(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CD590);
}

uint64_t sub_24B56BBFC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PhotogrammetrySample.camera.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B56C254(a1, v1 + *(int *)(v3 + 48), &qword_2697CC118);
}

uint64_t (*PhotogrammetrySample.camera.modify())()
{
  return nullsub_1;
}

double sub_24B56BCBC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = 1;
  return result;
}

uint64_t PhotogrammetrySample.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  sub_24B56CF38(v1 + *(int *)(v3 + 52), (uint64_t)v5, &qword_2697CC120);
  return sub_24B56CF38((uint64_t)v5, a1, &qword_2697CC120);
}

uint64_t PhotogrammetrySample.object.setter(uint64_t a1)
{
  sub_24B56CF38(a1, (uint64_t)v4, &qword_2697CC120);
  uint64_t v2 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B56CF38((uint64_t)v4, v1 + *(int *)(v2 + 52), &qword_2697CC120);
}

uint64_t (*PhotogrammetrySample.object.modify())()
{
  return nullsub_1;
}

__n128 PhotogrammetrySample.scene.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 56);
  char v4 = *(unsigned char *)(v3 + 64);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v7 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = v4;
  return result;
}

__n128 PhotogrammetrySample.scene.setter(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  __n128 v7 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  char v4 = *((unsigned char *)a1 + 64);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 56);
  *(_OWORD *)uint64_t v5 = v9;
  *(_OWORD *)(v5 + 16) = v8;
  __n128 result = v7;
  *(__n128 *)(v5 + 32) = v7;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(unsigned char *)(v5 + 64) = v4;
  return result;
}

uint64_t (*PhotogrammetrySample.scene.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.captureMode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 60));
}

uint64_t PhotogrammetrySample.captureMode.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v6 = v2 + *(int *)(result + 60);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.captureMode.modify())()
{
  return nullsub_1;
}

void *PhotogrammetrySample.rawFeaturePoints.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 64));
  id v2 = v1;
  return v1;
}

void PhotogrammetrySample.rawFeaturePoints.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PhotogrammetrySample(0) + 64);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*PhotogrammetrySample.rawFeaturePoints.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.timestamp.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 68));
}

uint64_t PhotogrammetrySample.timestamp.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v6 = v2 + *(int *)(result + 68);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.captureTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B563A6C(v1 + *(int *)(v3 + 72), a1, &qword_2697CC068);
}

uint64_t PhotogrammetrySample.captureTime.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B56C254(a1, v1 + *(int *)(v3 + 72), &qword_2697CC068);
}

uint64_t (*PhotogrammetrySample.captureTime.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.objectCaptureSessionUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B563A6C(v1 + *(int *)(v3 + 76), a1, &qword_2697CC460);
}

uint64_t PhotogrammetrySample.objectCaptureSessionUUID.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PhotogrammetrySample(0);
  return sub_24B56C254(a1, v1 + *(int *)(v3 + 76), &qword_2697CC460);
}

uint64_t sub_24B56C254(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24B562F04(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*PhotogrammetrySample.objectCaptureSessionUUID.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.staticSegmentID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 80));
}

uint64_t PhotogrammetrySample.staticSegmentID.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v6 = v2 + *(int *)(result + 80);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PhotogrammetrySample.staticSegmentID.modify())()
{
  return nullsub_1;
}

uint64_t PhotogrammetrySample.init(id:image:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(a3 + 16) = sub_24B560D28(MEMORY[0x263F8EE78]);
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(void *)(a3 + 56) = 0;
  *(unsigned char *)(a3 + 64) = 1;
  __n128 v7 = (int *)type metadata accessor for PhotogrammetrySample(0);
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0;
  uint64_t v8 = a3 + v7[12];
  uint64_t v9 = type metadata accessor for PhotogrammetrySample.Camera(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a3 + v7[13];
  sub_24B56BCBC((uint64_t)v22);
  sub_24B56CF38((uint64_t)v22, v10, &qword_2697CC120);
  uint64_t v11 = a3 + v7[14];
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(unsigned char *)(v11 + 64) = 1;
  uint64_t v12 = a3 + v7[15];
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  *(void *)(a3 + v7[16]) = 0;
  uint64_t v13 = a3 + v7[17];
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  uint64_t v14 = a3 + v7[18];
  uint64_t v15 = sub_24B6823B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = a3 + v7[19];
  uint64_t v17 = sub_24B682410();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v19 = a3 + v7[20];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = (void *)(a3 + v7[21]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = a3 + v7[22];
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  *(void *)(a3 + v7[23]) = v6;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  return result;
}

void sub_24B56C5B4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t static PhotogrammetrySample.makeSample(shot:shotMetadata:)@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for PhotogrammetrySample(0);
  uint64_t v139 = *((void *)v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = *(double *)a1;
  if (*(double *)a1 == *a2)
  {
    uint64_t v13 = *(void **)(a1 + 8);
    uint64_t v14 = *(void **)(a1 + 16);
    uint64_t v15 = *(void *)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 32);
    *(void *)&long long v138 = v15;
    if ((uint64_t)CVPixelBufferGetWidth((CVPixelBufferRef)v13) >= 1
      && (uint64_t)CVPixelBufferGetHeight((CVPixelBufferRef)v13) >= 1
      && sub_24B5A2D38((CVPixelBufferRef)v13))
    {
      *(void *)&long long v135 = v16;
      unint64_t v136 = v8;
      uint64_t v17 = v14;
      if (!v14 || (uint64_t v18 = v14, v19 = sub_24B5A2E7C(v18), v18, v19))
      {
        *(void *)&long long v137 = v17;
        if (!(void)v138
          || (uint64_t v20 = (__CVBuffer *)(id)v138, v21 = sub_24B5A3048(v20), v20, v21))
        {
          uint64_t v22 = (uint64_t)a2 + v6[7];
          sub_24B56CF38(v22, (uint64_t)v148, &qword_2697CC9C0);
          sub_24B56CF38((uint64_t)v148, (uint64_t)v149, &qword_2697CC9C0);
          uint64_t result = sub_24B56CF9C((uint64_t)v149);
          if (result != 1)
          {
            uint64_t v24 = v150;
            if (v150)
            {
              sub_24B56CF38((uint64_t)v148, (uint64_t)v146, &qword_2697CC9C0);
              id v25 = v147;
              BOOL v26 = sub_24B5A2F00(v24);
              uint64_t result = sub_24B56D16C((uint64_t)v148, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
              if (!v26) {
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v139 + 56))(a3, 1, 1, v9);
              }
            }
          }
          double v27 = v12 * 1000.0;
          if ((~COERCE__INT64(v12 * 1000.0) & 0x7FF0000000000000) != 0)
          {
            if (v27 > -9.22337204e18)
            {
              uint64_t v133 = v22;
              uint64_t v134 = a3;
              if (v27 < 9.22337204e18)
              {
                uint64_t v28 = (uint64_t)v27;
                uint64_t v29 = v13;
                uint64_t v30 = MEMORY[0x263F8EE78];
                *(void *)&long long v121 = sub_24B560D28(MEMORY[0x263F8EE78]);
                uint64_t v122 = &v11[v9[12]];
                uint64_t v31 = (uint64_t)v122;
                uint64_t v123 = type metadata accessor for PhotogrammetrySample.Camera(0);
                uint64_t v32 = *(void *)(v123 - 8);
                id v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
                uint64_t v125 = v32 + 56;
                v124(v31, 1, 1, v123);
                uint64_t v33 = (uint64_t)&v11[v9[13]];
                sub_24B56BCBC((uint64_t)v145);
                uint64_t v117 = v33;
                sub_24B56CF38((uint64_t)v145, v33, &qword_2697CC120);
                uint64_t v34 = &v11[v9[14]];
                *((_OWORD *)v34 + 2) = 0u;
                *((_OWORD *)v34 + 3) = 0u;
                *(_OWORD *)uint64_t v34 = 0u;
                *((_OWORD *)v34 + 1) = 0u;
                unsigned int v116 = v34;
                v34[64] = 1;
                uint64_t v35 = &v11[v9[15]];
                *(void *)uint64_t v35 = 0;
                float v126 = (uint64_t *)v35;
                v35[8] = 1;
                uint64_t v127 = v9[16];
                *(void *)&v11[v127] = 0;
                uint64_t v36 = &v11[v9[17]];
                *(void *)uint64_t v36 = 0;
                v128 = (double *)v36;
                v36[8] = 1;
                os_log_type_t v37 = &v11[v9[18]];
                uint64_t v38 = sub_24B6823B0();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
                uint64_t v39 = (uint64_t)&v11[v9[19]];
                uint64_t v40 = sub_24B682410();
                uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
                uint64_t v132 = v39;
                v41(v39, 1, 1, v40);
                uint64_t v42 = &v11[v9[20]];
                *(void *)uint64_t v42 = 0;
                v129 = (uint64_t *)v42;
                v42[8] = 1;
                uint64_t v43 = &v11[v9[21]];
                *(void *)uint64_t v43 = 0;
                *((void *)v43 + 1) = 0;
                uint64_t v44 = &v11[v9[22]];
                *(void *)uint64_t v44 = 0;
                uint64_t v131 = v44;
                v44[8] = 1;
                uint64_t v130 = v9[23];
                *(void *)&v11[v130] = v30;
                *(void *)uint64_t v11 = v28;
                *((void *)v11 + 1) = v29;
                unint64_t v45 = (char *)a2 + v6[10];
                uint64_t v46 = *(void *)v45;
                uint64_t v47 = *((void *)v45 + 1);
                uint64_t v48 = *((void *)v45 + 2);
                LOBYTE(v30) = v45[24];
                uint64_t v49 = sub_24B5DAB78(v29, *(void *)v45, v47, v48, v30);
                swift_bridgeObjectRelease();
                uint64_t v50 = v137;
                *((void *)v11 + 2) = v49;
                *((void *)v11 + 3) = v50;
                uint64_t v51 = (void *)v138;
                *((void *)v11 + 4) = v138;
                *((void *)v11 + 5) = v46;
                *((void *)v11 + 6) = v47;
                *((void *)v11 + 7) = v48;
                v11[64] = v30;
                sub_24B56CF38((uint64_t)v148, (uint64_t)v146, &qword_2697CC9C0);
                int v52 = sub_24B56CF9C((uint64_t)v146);
                id v53 = v147;
                if (v52 == 1) {
                  id v53 = 0;
                }
                uint64_t v54 = (void *)v135;
                *((void *)v11 + 9) = v53;
                *((void *)v11 + 10) = v54;
                id v55 = v51;
                id v56 = (id)v137;
                sub_24B56D16C((uint64_t)v148, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56CFC0);
                id v57 = v54;
                uint64_t v58 = (uint64_t)v122;
                sub_24B56CFD4((uint64_t)v122);
                __n128 v59 = (long long *)((char *)a2 + v6[5]);
                long long v60 = *v59;
                long long v137 = v59[1];
                long long v138 = v60;
                long long v135 = v59[2];
                long long v61 = v59[3];
                long long v120 = v59[4];
                long long v121 = v61;
                long long v62 = v59[5];
                long long v118 = v59[6];
                long long v119 = v62;
                uint64_t v63 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
                uint64_t v64 = (int *)v123;
                sub_24B56D034((uint64_t)v59 + v63[6], v58 + *(int *)(v123 + 28), MEMORY[0x263F8C968]);
                unint64_t v65 = *(void **)((char *)v59 + v63[7]);
                float v66 = (char *)v59 + v63[8];
                char v67 = v66[64];
                uint64_t v68 = v64[8];
                uint64_t v69 = v58 + v64[9];
                uint64_t v70 = v58 + v64[10];
                *(_OWORD *)uint64_t v70 = 0u;
                *(_OWORD *)(v70 + 16) = 0u;
                *(_OWORD *)(v70 + 32) = 0u;
                *(_OWORD *)(v70 + 48) = 0u;
                *(unsigned char *)(v70 + 64) = 1;
                uint64_t v71 = v58 + v64[11];
                *(_OWORD *)uint64_t v71 = 0u;
                *(_OWORD *)(v71 + 16) = 0u;
                *(_OWORD *)(v71 + 32) = 0u;
                *(_OWORD *)(v71 + 48) = 0u;
                *(unsigned char *)(v71 + 64) = 1;
                *(_DWORD *)uint64_t v58 = 0;
                long long v72 = v137;
                *(_OWORD *)(v58 + 16) = v138;
                *(_OWORD *)(v58 + 32) = v72;
                long long v73 = v121;
                *(_OWORD *)(v58 + 48) = v135;
                *(_OWORD *)(v58 + 64) = v73;
                long long v74 = v119;
                *(_OWORD *)(v58 + 80) = v120;
                *(_OWORD *)(v58 + 96) = v74;
                *(_OWORD *)(v58 + 112) = v118;
                *(void *)(v58 + v68) = v65;
                long long v75 = *((_OWORD *)v66 + 1);
                *(_OWORD *)uint64_t v69 = *(_OWORD *)v66;
                *(_OWORD *)(v69 + 16) = v75;
                long long v76 = *((_OWORD *)v66 + 3);
                *(_OWORD *)(v69 + 32) = *((_OWORD *)v66 + 2);
                *(_OWORD *)(v69 + 48) = v76;
                *(unsigned char *)(v69 + 64) = v67;
                v124(v58, 0, 1, (uint64_t)v64);
                __n128 v77 = (char *)v59 + v63[9];
                char v78 = v77[64];
                uint64_t v79 = (char *)v59 + v63[10];
                char v80 = v79[64];
                uint64_t v81 = v58 + v64[10];
                long long v82 = *((_OWORD *)v77 + 1);
                *(_OWORD *)uint64_t v81 = *(_OWORD *)v77;
                *(_OWORD *)(v81 + 16) = v82;
                long long v83 = *((_OWORD *)v77 + 3);
                *(_OWORD *)(v81 + 32) = *((_OWORD *)v77 + 2);
                *(_OWORD *)(v81 + 48) = v83;
                *(unsigned char *)(v81 + 64) = v78;
                uint64_t v84 = v58 + v64[11];
                long long v85 = *((_OWORD *)v79 + 1);
                *(_OWORD *)uint64_t v84 = *(_OWORD *)v79;
                *(_OWORD *)(v84 + 16) = v85;
                long long v86 = *((_OWORD *)v79 + 3);
                *(_OWORD *)(v84 + 32) = *((_OWORD *)v79 + 2);
                *(_OWORD *)(v84 + 48) = v86;
                *(unsigned char *)(v84 + 64) = v80;
                sub_24B56CF38(v133, (uint64_t)v143, &qword_2697CC9C0);
                sub_24B56CF38((uint64_t)v143, (uint64_t)v144, &qword_2697CC9C0);
                if (sub_24B56CF9C((uint64_t)v144) == 1)
                {
                  uint64_t v87 = (char *)a2 + v6[8];
                  uint64_t v88 = (uint64_t)v136;
                  if ((v87[73] & 1) == 0)
                  {
                    long long v89 = *((_OWORD *)v87 + 1);
                    float v90 = v116;
                    *(_OWORD *)unsigned int v116 = *(_OWORD *)v87;
                    *((_OWORD *)v90 + 1) = v89;
                    long long v91 = *((_OWORD *)v87 + 3);
                    *((_OWORD *)v90 + 2) = *((_OWORD *)v87 + 2);
                    *((_OWORD *)v90 + 3) = v91;
                    v90[64] = 0;
                  }
                }
                else
                {
                  v140[0] = v144[4];
                  v140[1] = v144[5];
                  v140[2] = v144[6];
                  v140[3] = v144[7];
                  v140[4] = v144[0];
                  v140[5] = v144[1];
                  v140[6] = v144[2];
                  v140[7] = v144[3];
                  sub_24B56D164((uint64_t)v140);
                  sub_24B56CF38((uint64_t)v140, v117, &qword_2697CC120);
                  uint64_t v88 = (uint64_t)v136;
                }
                int v93 = *((unsigned __int8 *)a2 + v6[9]);
                if (v93 == 2)
                {
                  id v94 = v65;
                  uint64_t v95 = -1;
                }
                else
                {
                  LOBYTE(v140[0]) = v93 & 1;
                  id v96 = v65;
                  uint64_t v95 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
                }
                uint64_t v97 = v126;
                uint64_t v98 = v127;
                *float v126 = v95;
                *((unsigned char *)v97 + 8) = 0;
                uint64_t v99 = *(void **)((char *)a2 + v6[11]);
                uint64_t v100 = *(void **)&v11[v98];
                *(void *)&v11[v98] = v99;
                id v101 = v99;

                unint64_t v102 = v128;
                double *v128 = v12;
                *((unsigned char *)v102 + 8) = 0;
                sub_24B56CF38((uint64_t)v143, (uint64_t)v140, &qword_2697CC9C0);
                LODWORD(v100) = sub_24B56CF9C((uint64_t)v140);
                uint64_t v103 = v141;
                char v104 = v142;
                sub_24B56D034((uint64_t)a2, v88, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                if v100 == 1 || (v104)
                {
                  uint64_t v105 = v88 + v6[8];
                  uint64_t v106 = *(void *)(v105 + 64);
                  unsigned __int8 v107 = *(unsigned char *)(v105 + 72);
                  unsigned __int8 v108 = *(unsigned char *)(v105 + 73);
                  sub_24B56D104(v88, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                  if ((v108 | v107)) {
                    uint64_t v103 = -1;
                  }
                  else {
                    uint64_t v103 = v106;
                  }
                }
                else
                {
                  sub_24B56D104(v88, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
                }
                os_log_type_t v109 = v129;
                uint64_t *v129 = v103;
                *((unsigned char *)v109 + 8) = 0;
                sub_24B56D09C((uint64_t)a2 + v6[6], v132);
                uint64_t v110 = *(void *)((char *)a2 + v6[13]);
                uint64_t v111 = v130;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&v11[v111] = v110;
                uint64_t v112 = (char *)a2 + v6[12];
                uint64_t v113 = *(void *)v112;
                LOBYTE(v112) = v112[8];
                id v114 = v131;
                *(void *)uint64_t v131 = v113;
                v114[8] = (char)v112;
                uint64_t v115 = v134;
                sub_24B56D034((uint64_t)v11, v134, type metadata accessor for PhotogrammetrySample);
                (*(void (**)(uint64_t, void, uint64_t, int *))(v139 + 56))(v115, 0, 1, v9);
                return sub_24B56D104((uint64_t)v11, type metadata accessor for PhotogrammetrySample);
              }
LABEL_37:
              __break(1u);
              return result;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_37;
        }
      }
    }
  }
  uint64_t v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v139 + 56);

  return v92(a3, 1, 1, v9);
}

uint64_t sub_24B56CF38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24B562F04(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B56CF9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 128);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

id sub_24B56CFC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
  id result = a17;
  if (a17 != (id)1) {
    return a17;
  }
  return result;
}

uint64_t sub_24B56CFD4(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC118);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24B56D034(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B56D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B56D104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B56D164(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_24B56D16C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 144);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), v4);
  return a1;
}

void sub_24B56D1D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id a17)
{
  if (a17 != (id)1) {
}
  }

uint64_t sub_24B56D1EC(void *a1, double *a2, uint64_t a3)
{
  id v124 = a2;
  uint64_t v125 = a1;
  uint64_t v5 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v123 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682C90();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v136 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC118);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v127 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  long long v135 = (char *)&v104 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v134 = (char *)&v104 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v128 = (uint64_t)&v104 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v129 = (uint64_t)&v104 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (__n128 *)((char *)&v104 - v21);
  MEMORY[0x270FA5388](v20);
  long long v137 = (int *)((char *)&v104 - v23);
  uint64_t v24 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v122 = (uint64_t)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v126 = (uint64_t)&v104 - v27;
  uint64_t v28 = (int *)type metadata accessor for PhotogrammetrySample(0);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (double *)((char *)v3 + *(int *)(v29 + 68));
  if ((_BYTE)v32[1])
  {
    __break(1u);
    goto LABEL_29;
  }
  long long v121 = (double *)((char *)v3 + *(int *)(v29 + 68));
  double v33 = *v32;
  uint64_t v34 = (void *)v3[1];
  uint64_t v35 = (void *)v3[3];
  long long v138 = v3;
  uint64_t v36 = (void *)v3[4];
  os_log_type_t v37 = (void *)v3[10];
  id v38 = v37;
  id v39 = v34;
  id v40 = v35;
  id v41 = v36;
  uint64_t v42 = (uint64_t)v36;
  uint64_t v43 = (uint64_t)v138;
  sub_24B612080((uint64_t)v39, (uint64_t)v35, v42, (uint64_t)v37, (uint64_t)v171, v33);
  uint64_t v44 = v171[0];
  uint64_t v119 = v171[2];
  uint64_t v120 = v171[1];
  uint64_t v117 = v171[4];
  uint64_t v118 = v171[3];
  double v45 = sub_24B56DEC0((uint64_t)v168);
  uint64_t v46 = *(uint64_t (**)(double))(*(void *)a3 + 104);
  uint64_t v116 = v43 + v28[19];
  unint64_t v47 = v46(v45);
  uint64_t v48 = v43 + v28[13];
  sub_24B56CF38(v48, (uint64_t)v169, &qword_2697CC120);
  sub_24B56D034(v43, (uint64_t)v31, type metadata accessor for PhotogrammetrySample);
  sub_24B56CF38((uint64_t)v169, (uint64_t)v170, &qword_2697CC120);
  if (sub_24B56DEE8((uint64_t)v170) == 1)
  {
    uint64_t v49 = (__n128 *)&v31[v28[14]];
    if (v49[4].n128_u8[0])
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      __n128 v132 = v51;
      __n128 v133 = v50;
      __n128 v130 = v53;
      __n128 v131 = v52;
    }
    else
    {
      __n128 v133 = *v49;
      __n128 v132 = v49[1];
      __n128 v131 = v49[2];
      __n128 v130 = v49[3];
    }
  }
  else
  {
    __n128 v132 = (__n128)v170[5];
    __n128 v133 = (__n128)v170[4];
    __n128 v130 = (__n128)v170[7];
    __n128 v131 = (__n128)v170[6];
  }
  sub_24B56D104((uint64_t)v31, type metadata accessor for PhotogrammetrySample);
  sub_24B56CF38(v48, (uint64_t)v166, &qword_2697CC120);
  sub_24B56CF38((uint64_t)v166, (uint64_t)v167, &qword_2697CC120);
  if (sub_24B56DEE8((uint64_t)v167) == 1)
  {
    OCNonModularSPI_Serialization_InvalidObjectTransform();
  }
  else
  {
    __n128 v54 = (__n128)v167[4];
    __n128 v55 = (__n128)v167[5];
    __n128 v56 = (__n128)v167[6];
    __n128 v57 = (__n128)v167[7];
  }
  uint64_t v58 = v43 + v28[15];
  Swift::Int v59 = *(void *)v58;
  int v60 = *(unsigned __int8 *)(v58 + 8);
  if (v60) {
    goto LABEL_14;
  }
  if (v59 == 1)
  {
    sub_24B6123BC(v47, 0, &v156, v133, v132, v131, v130);
    v132.n128_u64[0] = v156.n128_u64[1];
    unint64_t v66 = v156.n128_u64[0];
    v130.n128_u64[0] = v157.n128_u64[1];
    v131.n128_u64[0] = v157.n128_u64[0];
    v114.n128_u64[0] = v158.n128_u64[1];
    v115.n128_u64[0] = v158.n128_u64[0];
    v113.n128_u64[0] = v159.n128_u64[0];
    unint64_t v111 = v160.n128_u64[0];
    v112.n128_u64[0] = v159.n128_u64[1];
    HIDWORD(v110) = v160.n128_u8[8];
    sub_24B56CF38((uint64_t)v168, (uint64_t)v154, &qword_2697CC9C0);
    LODWORD(v110) = 0;
    goto LABEL_18;
  }
  if (v59)
  {
LABEL_14:
    uint64_t v64 = *(void **)(v43 + 72);
    __n128 v112 = v54;
    __n128 v113 = v55;
    __n128 v114 = v56;
    __n128 v115 = v57;
    id v65 = v64;
    sub_24B612384((unint64_t)v64, v47, 0, &v156, v133, v132, v131, v130, v112, v113, v114, v115);
    v152[0] = v156;
    v152[1] = v157;
    v152[2] = v158;
    v152[3] = v159;
    v152[4] = v160;
    v152[5] = v161;
    v152[6] = v162;
    v152[7] = v163;
    v152[8] = v164;
    char v153 = v165;
    nullsub_1(v152);
    uint64_t v63 = (__n128 *)v152;
    if (v60)
    {
      sub_24B56CF38((uint64_t)v152, (uint64_t)&v156, &qword_2697CC9C0);
      unint64_t v66 = 0;
      v132.n128_u64[0] = 0;
      v131.n128_u64[0] = 0;
      v130.n128_u64[0] = 0;
      v115.n128_u64[0] = 0;
      v114.n128_u64[0] = 0;
      v113.n128_u64[0] = 0;
      unint64_t v111 = 0;
      v112.n128_u64[0] = 0;
      uint64_t v110 = 1;
      v133.n128_u32[0] = 2;
      goto LABEL_19;
    }
  }
  else
  {
    long long v61 = *(void **)(v43 + 72);
    __n128 v112 = v54;
    __n128 v113 = v55;
    __n128 v114 = v56;
    __n128 v115 = v57;
    id v62 = v61;
    sub_24B612384((unint64_t)v61, v47, 0, v154, v133, v132, v131, v130, v112, v113, v114, v115);
    __n128 v156 = v154[0];
    __n128 v157 = v154[1];
    __n128 v158 = v154[2];
    __n128 v159 = v154[3];
    __n128 v160 = v154[4];
    __n128 v161 = v154[5];
    __n128 v162 = v154[6];
    __n128 v163 = v154[7];
    __n128 v164 = v154[8];
    char v165 = v155;
    nullsub_1(&v156);
    uint64_t v63 = &v156;
  }
  sub_24B56CF38((uint64_t)v63, (uint64_t)v154, &qword_2697CC9C0);
  unint64_t v66 = 0;
  v132.n128_u64[0] = 0;
  v131.n128_u64[0] = 0;
  v130.n128_u64[0] = 0;
  v115.n128_u64[0] = 0;
  v114.n128_u64[0] = 0;
  v113.n128_u64[0] = 0;
  unint64_t v111 = 0;
  v112.n128_u64[0] = 0;
  uint64_t v110 = 1;
LABEL_18:
  ObjectCaptureSession.Metadata.Shot.CaptureMode.init(rawValue:)(v59);
  v133.n128_u32[0] = v156.n128_u8[0];
  sub_24B56CF38((uint64_t)v154, (uint64_t)&v156, &qword_2697CC9C0);
LABEL_19:
  char v67 = v137;
  long long v137 = v28;
  uint64_t v68 = v43 + v28[12];
  sub_24B563A6C(v68, (uint64_t)v67, &qword_2697CC118);
  uint64_t v69 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v70 = *(unsigned int (**)(int *, uint64_t, int *))(*((void *)v69 - 1) + 48);
  if (v70(v67, 1, v69) == 1)
  {
LABEL_29:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_30;
  }
  long long v71 = *((_OWORD *)v67 + 2);
  v172[0] = *((_OWORD *)v67 + 1);
  v172[1] = v71;
  v172[2] = *((_OWORD *)v67 + 3);
  sub_24B56D104((uint64_t)v67, type metadata accessor for PhotogrammetrySample.Camera);
  sub_24B563A6C(v68, (uint64_t)v22, &qword_2697CC118);
  unsigned int v72 = v70((int *)v22, 1, v69);
  uint64_t v74 = (uint64_t)v135;
  uint64_t v73 = (uint64_t)v136;
  uint64_t v75 = (uint64_t)v134;
  if (v72 == 1)
  {
LABEL_30:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_31;
  }
  __n128 v76 = v22[4];
  __n128 v108 = v22[5];
  __n128 v109 = v76;
  __n128 v77 = v22[6];
  __n128 v106 = v22[7];
  __n128 v107 = v77;
  sub_24B56D104((uint64_t)v22, type metadata accessor for PhotogrammetrySample.Camera);
  uint64_t v78 = v129;
  sub_24B563A6C(v68, v129, &qword_2697CC118);
  if (v70((int *)v78, 1, v69) == 1)
  {
LABEL_31:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v105 = v66;
  sub_24B56D034(v78 + v69[7], v73, MEMORY[0x263F8C968]);
  sub_24B56D104(v78, type metadata accessor for PhotogrammetrySample.Camera);
  uint64_t v79 = v128;
  sub_24B563A6C(v68, v128, &qword_2697CC118);
  if (v70((int *)v79, 1, v69) == 1)
  {
LABEL_32:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_33;
  }
  char v80 = *(void **)(v79 + v69[8]);
  id v81 = v80;
  sub_24B56D104(v79, type metadata accessor for PhotogrammetrySample.Camera);
  sub_24B563A6C(v68, v75, &qword_2697CC118);
  if (v70((int *)v75, 1, v69) == 1)
  {
LABEL_33:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_34;
  }
  sub_24B56CF38(v75 + v69[9], (uint64_t)v173, &qword_2697CC9A0);
  sub_24B56D104(v75, type metadata accessor for PhotogrammetrySample.Camera);
  sub_24B563A6C(v68, v74, &qword_2697CC118);
  if (v70((int *)v74, 1, v69) == 1)
  {
LABEL_34:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_35;
  }
  sub_24B56CF38(v74 + v69[10], (uint64_t)v174, &qword_2697CC9A0);
  sub_24B56D104(v74, type metadata accessor for PhotogrammetrySample.Camera);
  uint64_t v82 = v68;
  uint64_t v83 = v127;
  sub_24B563A6C(v82, v127, &qword_2697CC118);
  if (v70((int *)v83, 1, v69) == 1)
  {
LABEL_35:
    sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
    __break(1u);
    goto LABEL_36;
  }
  sub_24B56CF38(v83 + v69[11], (uint64_t)v175, &qword_2697CC9A0);
  sub_24B56D104(v83, type metadata accessor for PhotogrammetrySample.Camera);
  uint64_t v84 = sub_24B612208();
  uint64_t v85 = sub_24B612208();
  uint64_t v86 = v126;
  sub_24B612214(v172, v73, (uint64_t)v80, (uint64_t)v173, (uint64_t)v174, (uint64_t)v175, v84, v85, v126, v109, v108, v107, v106);
  if (((_BYTE)v121[1] & 1) == 0)
  {
    double v87 = *v121;
    uint64_t v88 = v122;
    sub_24B56D034(v86, v122, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    uint64_t v89 = v123;
    sub_24B563A6C(v116, v123, &qword_2697CC460);
    sub_24B56CF38((uint64_t)&v156, (uint64_t)v152, &qword_2697CC9C0);
    *(void *)&long long v142 = v105;
    *((void *)&v142 + 1) = v132.n128_u64[0];
    unint64_t v143 = v131.n128_u64[0];
    unint64_t v144 = v130.n128_u64[0];
    unint64_t v145 = v115.n128_u64[0];
    unint64_t v146 = v114.n128_u64[0];
    unint64_t v147 = v113.n128_u64[0];
    unint64_t v148 = v112.n128_u64[0];
    unint64_t v149 = v111;
    char v150 = BYTE4(v110);
    char v151 = v110;
    unsigned __int8 v141 = v133.n128_u8[0];
    uint64_t v90 = v138[5];
    uint64_t v91 = v138[6];
    uint64_t v92 = v138[7];
    char v93 = *((unsigned char *)v138 + 64);
    id v94 = *(void **)((char *)v138 + v137[16]);
    uint64_t v95 = v137[23];
    id v96 = (char *)v138 + v137[22];
    uint64_t v97 = *(void *)v96;
    LOBYTE(v96) = v96[8];
    uint64_t v139 = v97;
    char v140 = (char)v96;
    uint64_t v98 = *(void *)((char *)v138 + v95);
    id v99 = v94;
    swift_bridgeObjectRetain();
    sub_24B6125FC(v88, v89, (uint64_t)v152, &v142, (char *)&v141, v90, v91, v92, v124, v87, v93, (uint64_t)v94, &v139, v98);
    uint64_t result = sub_24B56D104(v86, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
    id v101 = v125;
    void *v125 = v44;
    uint64_t v102 = v119;
    v101[1] = v120;
    v101[2] = v102;
    uint64_t v103 = v117;
    v101[3] = v118;
    v101[4] = v103;
    return result;
  }
LABEL_36:
  uint64_t result = sub_24B56D16C((uint64_t)&v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
  __break(1u);
  return result;
}

double sub_24B56DEC0(uint64_t a1)
{
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)&double result = 1;
  *(_OWORD *)(a1 + 128) = xmmword_24B685230;
  *(unsigned char *)(a1 + 144) = 0;
  return result;
}

uint64_t sub_24B56DEE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24B56DF04(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for PhotogrammetrySample(0) + 68));
  char v4 = *(void **)(v1 + 80);
  if (v4)
  {
    id v5 = v4;
    filteredDepthPointCloud(_:)(v11);

    uint64_t v6 = v12;
    long long v7 = v13;
    long long v8 = v14;
    long long v9 = v11[1];
    *(_OWORD *)a1 = v11[0];
    *(_OWORD *)(a1 + 16) = v9;
    *(void *)(a1 + 32) = v6;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    long long v7 = 0uLL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    long long v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 56) = v8;
  return v3;
}

uint64_t sub_24B56DFA4()
{
  return MEMORY[0x263F8D6D8];
}

void *initializeBufferWithCopyOfBuffer for PhotogrammetrySample(uint64_t a1, uint64_t *a2, int *a3)
{
  char v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (void *)a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    long long v7 = (void *)a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    long long v8 = (void *)a2[4];
    *(void *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
    long long v9 = (void *)a2[9];
    uint64_t v10 = (void *)a2[10];
    uint64_t v11 = a3[12];
    __dst = (_OWORD *)(a1 + v11);
    uint64_t v97 = (_OWORD *)((char *)a2 + v11);
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v10;
    uint64_t v12 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
    uint64_t v95 = *((void *)v12 - 1);
    id v96 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v95 + 48);
    id v13 = v6;
    swift_bridgeObjectRetain();
    id v14 = v7;
    id v15 = v8;
    id v16 = v9;
    id v17 = v10;
    if (v96(v97, 1, v12))
    {
      uint64_t v18 = sub_24B562F04(&qword_2697CC118);
      memcpy(__dst, v97, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = a3;
    }
    else
    {
      *(_DWORD *)__dst = *(_DWORD *)v97;
      long long v21 = v97[2];
      __dst[1] = v97[1];
      __dst[2] = v21;
      long long v22 = v97[4];
      __dst[3] = v97[3];
      __dst[4] = v22;
      long long v23 = v97[6];
      __dst[5] = v97[5];
      __dst[6] = v23;
      __dst[7] = v97[7];
      uint64_t v24 = v12[7];
      uint64_t v25 = (char *)__dst + v24;
      uint64_t v26 = (char *)v97 + v24;
      uint64_t v27 = sub_24B682C80();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 2, v27))
      {
        uint64_t v29 = sub_24B682C90();
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 2, v27);
      }
      uint64_t v19 = a3;
      uint64_t v30 = v12[8];
      uint64_t v31 = *(void **)((char *)v97 + v30);
      *(void *)((char *)__dst + v30) = v31;
      uint64_t v32 = v12[9];
      double v33 = (char *)__dst + v32;
      uint64_t v34 = (char *)v97 + v32;
      long long v35 = *((_OWORD *)v34 + 3);
      *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 3) = v35;
      v33[64] = v34[64];
      long long v36 = *((_OWORD *)v34 + 1);
      *(_OWORD *)double v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v36;
      uint64_t v37 = v12[10];
      id v38 = (char *)__dst + v37;
      id v39 = (char *)v97 + v37;
      v38[64] = v39[64];
      long long v40 = *((_OWORD *)v39 + 3);
      *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
      *((_OWORD *)v38 + 3) = v40;
      long long v41 = *((_OWORD *)v39 + 1);
      *(_OWORD *)id v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v41;
      uint64_t v42 = v12[11];
      uint64_t v43 = (char *)__dst + v42;
      uint64_t v44 = (char *)v97 + v42;
      v43[64] = v44[64];
      long long v45 = *((_OWORD *)v44 + 3);
      *((_OWORD *)v43 + 2) = *((_OWORD *)v44 + 2);
      *((_OWORD *)v43 + 3) = v45;
      long long v46 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v46;
      unint64_t v47 = *(void (**)(_OWORD *, void, uint64_t, int *))(v95 + 56);
      id v48 = v31;
      v47(__dst, 0, 1, v12);
    }
    uint64_t v49 = v19[13];
    uint64_t v50 = v19[14];
    __n128 v51 = (char *)v4 + v49;
    uint64_t v52 = (uint64_t)a2 + v49;
    long long v53 = *(_OWORD *)(v52 + 48);
    *((_OWORD *)v51 + 2) = *(_OWORD *)(v52 + 32);
    *((_OWORD *)v51 + 3) = v53;
    v51[128] = *(unsigned char *)(v52 + 128);
    long long v54 = *(_OWORD *)(v52 + 112);
    *((_OWORD *)v51 + 6) = *(_OWORD *)(v52 + 96);
    *((_OWORD *)v51 + 7) = v54;
    long long v55 = *(_OWORD *)(v52 + 80);
    *((_OWORD *)v51 + 4) = *(_OWORD *)(v52 + 64);
    *((_OWORD *)v51 + 5) = v55;
    long long v56 = *(_OWORD *)(v52 + 16);
    *(_OWORD *)__n128 v51 = *(_OWORD *)v52;
    *((_OWORD *)v51 + 1) = v56;
    __n128 v57 = (char *)v4 + v50;
    uint64_t v58 = (uint64_t)a2 + v50;
    long long v59 = *(_OWORD *)(v58 + 48);
    *((_OWORD *)v57 + 2) = *(_OWORD *)(v58 + 32);
    *((_OWORD *)v57 + 3) = v59;
    v57[64] = *(unsigned char *)(v58 + 64);
    long long v60 = *(_OWORD *)(v58 + 16);
    *(_OWORD *)__n128 v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v60;
    uint64_t v61 = v19[15];
    uint64_t v62 = v19[16];
    uint64_t v63 = (char *)v4 + v61;
    uint64_t v64 = (uint64_t)a2 + v61;
    *(void *)uint64_t v63 = *(void *)v64;
    v63[8] = *(unsigned char *)(v64 + 8);
    id v65 = *(void **)((char *)a2 + v62);
    *(void *)((char *)v4 + v62) = v65;
    uint64_t v66 = v19[17];
    uint64_t v67 = v19[18];
    uint64_t v68 = (char *)v4 + v66;
    uint64_t v69 = (uint64_t)a2 + v66;
    *(void *)uint64_t v68 = *(void *)v69;
    v68[8] = *(unsigned char *)(v69 + 8);
    uint64_t v70 = (char *)v4 + v67;
    long long v71 = (char *)a2 + v67;
    uint64_t v72 = sub_24B6823B0();
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    id v75 = v65;
    if (v74(v71, 1, v72))
    {
      uint64_t v76 = sub_24B562F04(&qword_2697CC068);
      memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    uint64_t v77 = v19[19];
    uint64_t v78 = (char *)v4 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = sub_24B682410();
    uint64_t v81 = *(void *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = sub_24B562F04(&qword_2697CC460);
      memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    uint64_t v83 = v19[20];
    uint64_t v84 = v19[21];
    uint64_t v85 = (char *)v4 + v83;
    uint64_t v86 = (uint64_t)a2 + v83;
    *(void *)uint64_t v85 = *(void *)v86;
    v85[8] = *(unsigned char *)(v86 + 8);
    double v87 = (void *)((char *)v4 + v84);
    uint64_t v88 = (uint64_t *)((char *)a2 + v84);
    uint64_t v89 = v88[1];
    *double v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v19[22];
    uint64_t v91 = v19[23];
    uint64_t v92 = (char *)v4 + v90;
    uint64_t v93 = (uint64_t)a2 + v90;
    *(void *)uint64_t v92 = *(void *)v93;
    v92[8] = *(unsigned char *)(v93 + 8);
    *(void *)((char *)v4 + v91) = *(uint64_t *)((char *)a2 + v91);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PhotogrammetrySample(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  char v4 = (char *)a1 + a2[12];
  uint64_t v5 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = &v4[*(int *)(v5 + 28)];
    uint64_t v7 = sub_24B682C80();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 2, v7)) {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  long long v9 = (char *)a1 + a2[18];
  uint64_t v10 = sub_24B6823B0();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = (char *)a1 + a2[19];
  uint64_t v13 = sub_24B682410();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  long long v9 = *(void **)(a2 + 72);
  uint64_t v8 = *(void **)(a2 + 80);
  uint64_t v10 = a3[12];
  __dst = (_OWORD *)(a1 + v10);
  uint64_t v95 = (_OWORD *)(a2 + v10);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v8;
  uint64_t v11 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v93 = *((void *)v11 - 1);
  id v94 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v93 + 48);
  id v12 = v5;
  swift_bridgeObjectRetain();
  id v13 = v6;
  id v14 = v7;
  id v15 = v9;
  id v16 = v8;
  if (v94(v95, 1, v11))
  {
    uint64_t v17 = sub_24B562F04(&qword_2697CC118);
    memcpy(__dst, v95, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v18 = a3;
  }
  else
  {
    *(_DWORD *)__dst = *(_DWORD *)v95;
    long long v19 = v95[2];
    __dst[1] = v95[1];
    __dst[2] = v19;
    long long v20 = v95[4];
    __dst[3] = v95[3];
    __dst[4] = v20;
    long long v21 = v95[6];
    __dst[5] = v95[5];
    __dst[6] = v21;
    __dst[7] = v95[7];
    uint64_t v22 = v11[7];
    long long v23 = (char *)__dst + v22;
    uint64_t v24 = (char *)v95 + v22;
    uint64_t v25 = sub_24B682C80();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 2, v25))
    {
      uint64_t v27 = sub_24B682C90();
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 2, v25);
    }
    uint64_t v18 = a3;
    uint64_t v28 = v11[8];
    uint64_t v29 = *(void **)((char *)v95 + v28);
    *(void *)((char *)__dst + v28) = v29;
    uint64_t v30 = v11[9];
    uint64_t v31 = (char *)__dst + v30;
    uint64_t v32 = (char *)v95 + v30;
    long long v33 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v33;
    v31[64] = v32[64];
    long long v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    uint64_t v35 = v11[10];
    long long v36 = (char *)__dst + v35;
    uint64_t v37 = (char *)v95 + v35;
    v36[64] = v37[64];
    long long v38 = *((_OWORD *)v37 + 3);
    *((_OWORD *)v36 + 2) = *((_OWORD *)v37 + 2);
    *((_OWORD *)v36 + 3) = v38;
    long long v39 = *((_OWORD *)v37 + 1);
    *(_OWORD *)long long v36 = *(_OWORD *)v37;
    *((_OWORD *)v36 + 1) = v39;
    uint64_t v40 = v11[11];
    long long v41 = (char *)__dst + v40;
    uint64_t v42 = (char *)v95 + v40;
    v41[64] = v42[64];
    long long v43 = *((_OWORD *)v42 + 3);
    *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
    *((_OWORD *)v41 + 3) = v43;
    long long v44 = *((_OWORD *)v42 + 1);
    *(_OWORD *)long long v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v44;
    long long v45 = *(void (**)(_OWORD *, void, uint64_t, int *))(v93 + 56);
    id v46 = v29;
    v45(__dst, 0, 1, v11);
  }
  uint64_t v47 = v18[13];
  uint64_t v48 = v18[14];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  long long v51 = *(_OWORD *)(v50 + 48);
  *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
  *(_OWORD *)(v49 + 48) = v51;
  *(unsigned char *)(v49 + 128) = *(unsigned char *)(v50 + 128);
  long long v52 = *(_OWORD *)(v50 + 112);
  *(_OWORD *)(v49 + 96) = *(_OWORD *)(v50 + 96);
  *(_OWORD *)(v49 + 112) = v52;
  long long v53 = *(_OWORD *)(v50 + 80);
  *(_OWORD *)(v49 + 64) = *(_OWORD *)(v50 + 64);
  *(_OWORD *)(v49 + 80) = v53;
  long long v54 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v54;
  uint64_t v55 = a1 + v48;
  uint64_t v56 = a2 + v48;
  long long v57 = *(_OWORD *)(v56 + 48);
  *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
  *(_OWORD *)(v55 + 48) = v57;
  *(unsigned char *)(v55 + 64) = *(unsigned char *)(v56 + 64);
  long long v58 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v58;
  uint64_t v59 = v18[15];
  uint64_t v60 = v18[16];
  uint64_t v61 = a1 + v59;
  uint64_t v62 = a2 + v59;
  *(void *)uint64_t v61 = *(void *)v62;
  *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
  uint64_t v63 = *(void **)(a2 + v60);
  *(void *)(a1 + v60) = v63;
  uint64_t v64 = v18[17];
  uint64_t v65 = v18[18];
  uint64_t v66 = a1 + v64;
  uint64_t v67 = a2 + v64;
  *(void *)uint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  uint64_t v68 = (void *)(a1 + v65);
  uint64_t v69 = (const void *)(a2 + v65);
  uint64_t v70 = sub_24B6823B0();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48);
  id v73 = v63;
  if (v72(v69, 1, v70))
  {
    uint64_t v74 = sub_24B562F04(&qword_2697CC068);
    memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v75 = v18[19];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (const void *)(a2 + v75);
  uint64_t v78 = sub_24B682410();
  uint64_t v79 = *(void *)(v78 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    uint64_t v80 = sub_24B562F04(&qword_2697CC460);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v76, v77, v78);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  uint64_t v81 = v18[20];
  uint64_t v82 = v18[21];
  uint64_t v83 = a1 + v81;
  uint64_t v84 = a2 + v81;
  *(void *)uint64_t v83 = *(void *)v84;
  *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
  uint64_t v85 = (void *)(a1 + v82);
  uint64_t v86 = (void *)(a2 + v82);
  uint64_t v87 = v86[1];
  *uint64_t v85 = *v86;
  v85[1] = v87;
  uint64_t v88 = v18[22];
  uint64_t v89 = v18[23];
  uint64_t v90 = a1 + v88;
  uint64_t v91 = a2 + v88;
  *(void *)uint64_t v90 = *(void *)v91;
  *(unsigned char *)(v90 + 8) = *(unsigned char *)(v91 + 8);
  *(void *)(a1 + v89) = *(void *)(a2 + v89);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v9 = *(void **)(a1 + 24);
  uint64_t v10 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v10;
  id v11 = v10;

  id v12 = *(void **)(a1 + 32);
  id v13 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v13;
  id v14 = v13;

  long long v15 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  *(_OWORD *)(a1 + 40) = v15;
  id v16 = *(void **)(a1 + 72);
  uint64_t v17 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v17;
  id v18 = v17;

  long long v19 = *(void **)(a1 + 80);
  long long v20 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v20;
  id v21 = v20;

  uint64_t v22 = a3[12];
  long long v23 = (_OWORD *)(a1 + v22);
  uint64_t v24 = (_OWORD *)(a2 + v22);
  uint64_t v25 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_24B56D104((uint64_t)v23, type metadata accessor for PhotogrammetrySample.Camera);
      goto LABEL_7;
    }
    *(_DWORD *)long long v23 = *(_DWORD *)v24;
    v23[1] = v24[1];
    v23[2] = v24[2];
    v23[3] = v24[3];
    v23[4] = v24[4];
    v23[5] = v24[5];
    v23[6] = v24[6];
    v23[7] = v24[7];
    uint64_t v41 = v25[7];
    uint64_t v42 = (char *)v23 + v41;
    __dsta = (char *)v24 + v41;
    uint64_t v43 = sub_24B682C80();
    uint64_t v149 = *(void *)(v43 - 8);
    char v150 = v42;
    long long v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v149 + 48);
    LODWORD(v42) = v44(v42, 2, v43);
    int v45 = v44(__dsta, 2, v43);
    if (v42)
    {
      if (!v45)
      {
        (*(void (**)(void *, char *, uint64_t))(v149 + 16))(v150, __dsta, v43);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v149 + 56))(v150, 0, 2, v43);
        goto LABEL_18;
      }
      size_t v46 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
      uint64_t v47 = v150;
    }
    else
    {
      if (!v45)
      {
        (*(void (**)(void *, char *, uint64_t))(v149 + 24))(v150, __dsta, v43);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v149 + 8))(v150, v43);
      size_t v46 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
      uint64_t v47 = v150;
    }
    memcpy(v47, __dsta, v46);
LABEL_18:
    uint64_t v70 = v25[8];
    uint64_t v71 = *(void **)((char *)v23 + v70);
    uint64_t v72 = *(void **)((char *)v24 + v70);
    *(void *)((char *)v23 + v70) = v72;
    id v73 = v72;

    uint64_t v74 = v25[9];
    uint64_t v75 = (char *)v23 + v74;
    uint64_t v76 = (char *)v24 + v74;
    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    long long v77 = *((_OWORD *)v76 + 1);
    long long v78 = *((_OWORD *)v76 + 2);
    long long v79 = *((_OWORD *)v76 + 3);
    v75[64] = v76[64];
    *((_OWORD *)v75 + 2) = v78;
    *((_OWORD *)v75 + 3) = v79;
    *((_OWORD *)v75 + 1) = v77;
    uint64_t v80 = v25[10];
    uint64_t v81 = (char *)v23 + v80;
    uint64_t v82 = (char *)v24 + v80;
    *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
    long long v83 = *((_OWORD *)v82 + 1);
    long long v84 = *((_OWORD *)v82 + 2);
    long long v85 = *((_OWORD *)v82 + 3);
    v81[64] = v82[64];
    *((_OWORD *)v81 + 2) = v84;
    *((_OWORD *)v81 + 3) = v85;
    *((_OWORD *)v81 + 1) = v83;
    uint64_t v86 = v25[11];
    uint64_t v87 = (char *)v23 + v86;
    uint64_t v88 = (char *)v24 + v86;
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    long long v89 = *((_OWORD *)v88 + 1);
    long long v90 = *((_OWORD *)v88 + 2);
    long long v91 = *((_OWORD *)v88 + 3);
    v87[64] = v88[64];
    *((_OWORD *)v87 + 2) = v90;
    *((_OWORD *)v87 + 3) = v91;
    *((_OWORD *)v87 + 1) = v89;
    goto LABEL_19;
  }
  if (v29)
  {
LABEL_7:
    uint64_t v40 = sub_24B562F04(&qword_2697CC118);
    memcpy(v23, v24, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)long long v23 = *(_DWORD *)v24;
  long long v30 = v24[1];
  long long v31 = v24[3];
  v23[2] = v24[2];
  v23[3] = v31;
  v23[1] = v30;
  long long v32 = v24[4];
  long long v33 = v24[5];
  long long v34 = v24[7];
  v23[6] = v24[6];
  v23[7] = v34;
  v23[4] = v32;
  v23[5] = v33;
  uint64_t v35 = v25[7];
  __dst = (char *)v23 + v35;
  long long v36 = (char *)v24 + v35;
  uint64_t v37 = sub_24B682C80();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 2, v37))
  {
    uint64_t v39 = sub_24B682C90();
    memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v36, v37);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 2, v37);
  }
  uint64_t v48 = v25[8];
  uint64_t v49 = *(void **)((char *)v24 + v48);
  *(void *)((char *)v23 + v48) = v49;
  uint64_t v50 = v25[9];
  long long v51 = (char *)v23 + v50;
  long long v52 = (char *)v24 + v50;
  *(_OWORD *)long long v51 = *(_OWORD *)v52;
  long long v53 = *((_OWORD *)v52 + 1);
  long long v54 = *((_OWORD *)v52 + 2);
  long long v55 = *((_OWORD *)v52 + 3);
  v51[64] = v52[64];
  *((_OWORD *)v51 + 2) = v54;
  *((_OWORD *)v51 + 3) = v55;
  *((_OWORD *)v51 + 1) = v53;
  uint64_t v56 = v25[10];
  long long v57 = (char *)v23 + v56;
  long long v58 = (char *)v24 + v56;
  *(_OWORD *)long long v57 = *(_OWORD *)v58;
  long long v59 = *((_OWORD *)v58 + 1);
  long long v60 = *((_OWORD *)v58 + 2);
  long long v61 = *((_OWORD *)v58 + 3);
  v57[64] = v58[64];
  *((_OWORD *)v57 + 2) = v60;
  *((_OWORD *)v57 + 3) = v61;
  *((_OWORD *)v57 + 1) = v59;
  uint64_t v62 = v25[11];
  uint64_t v63 = (char *)v23 + v62;
  uint64_t v64 = (char *)v24 + v62;
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  long long v65 = *((_OWORD *)v64 + 1);
  long long v66 = *((_OWORD *)v64 + 2);
  long long v67 = *((_OWORD *)v64 + 3);
  v63[64] = v64[64];
  *((_OWORD *)v63 + 2) = v66;
  *((_OWORD *)v63 + 3) = v67;
  *((_OWORD *)v63 + 1) = v65;
  uint64_t v68 = *(void (**)(_OWORD *, void, uint64_t, int *))(v26 + 56);
  id v69 = v49;
  v68(v23, 0, 1, v25);
LABEL_19:
  uint64_t v92 = a3[13];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  long long v95 = *(_OWORD *)(v94 + 16);
  long long v96 = *(_OWORD *)(v94 + 32);
  long long v97 = *(_OWORD *)(v94 + 64);
  *(_OWORD *)(v93 + 48) = *(_OWORD *)(v94 + 48);
  *(_OWORD *)(v93 + 64) = v97;
  *(_OWORD *)(v93 + 16) = v95;
  *(_OWORD *)(v93 + 32) = v96;
  long long v98 = *(_OWORD *)(v94 + 80);
  long long v99 = *(_OWORD *)(v94 + 96);
  long long v100 = *(_OWORD *)(v94 + 112);
  *(unsigned char *)(v93 + 128) = *(unsigned char *)(v94 + 128);
  *(_OWORD *)(v93 + 96) = v99;
  *(_OWORD *)(v93 + 112) = v100;
  *(_OWORD *)(v93 + 80) = v98;
  uint64_t v101 = a3[14];
  uint64_t v102 = a1 + v101;
  uint64_t v103 = a2 + v101;
  *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
  long long v104 = *(_OWORD *)(v103 + 16);
  long long v105 = *(_OWORD *)(v103 + 32);
  long long v106 = *(_OWORD *)(v103 + 48);
  *(unsigned char *)(v102 + 64) = *(unsigned char *)(v103 + 64);
  *(_OWORD *)(v102 + 32) = v105;
  *(_OWORD *)(v102 + 48) = v106;
  *(_OWORD *)(v102 + 16) = v104;
  uint64_t v107 = a3[15];
  uint64_t v108 = a1 + v107;
  __n128 v109 = (uint64_t *)(a2 + v107);
  uint64_t v110 = *v109;
  *(unsigned char *)(v108 + 8) = *((unsigned char *)v109 + 8);
  *(void *)uint64_t v108 = v110;
  uint64_t v111 = a3[16];
  __n128 v112 = *(void **)(a1 + v111);
  __n128 v113 = *(void **)(a2 + v111);
  *(void *)(a1 + v111) = v113;
  id v114 = v113;

  uint64_t v115 = a3[17];
  uint64_t v116 = a1 + v115;
  uint64_t v117 = (uint64_t *)(a2 + v115);
  uint64_t v118 = *v117;
  *(unsigned char *)(v116 + 8) = *((unsigned char *)v117 + 8);
  *(void *)uint64_t v116 = v118;
  uint64_t v119 = a3[18];
  uint64_t v120 = (void *)(a1 + v119);
  long long v121 = (void *)(a2 + v119);
  uint64_t v122 = sub_24B6823B0();
  uint64_t v123 = *(void *)(v122 - 8);
  id v124 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v123 + 48);
  int v125 = v124(v120, 1, v122);
  int v126 = v124(v121, 1, v122);
  if (v125)
  {
    if (!v126)
    {
      (*(void (**)(void *, void *, uint64_t))(v123 + 16))(v120, v121, v122);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v126)
  {
    (*(void (**)(void *, uint64_t))(v123 + 8))(v120, v122);
LABEL_24:
    uint64_t v127 = sub_24B562F04(&qword_2697CC068);
    memcpy(v120, v121, *(void *)(*(void *)(v127 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v123 + 24))(v120, v121, v122);
LABEL_25:
  uint64_t v128 = a3[19];
  uint64_t v129 = (void *)(a1 + v128);
  __n128 v130 = (void *)(a2 + v128);
  uint64_t v131 = sub_24B682410();
  uint64_t v132 = *(void *)(v131 - 8);
  __n128 v133 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v132 + 48);
  int v134 = v133(v129, 1, v131);
  int v135 = v133(v130, 1, v131);
  if (!v134)
  {
    if (!v135)
    {
      (*(void (**)(void *, void *, uint64_t))(v132 + 24))(v129, v130, v131);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v132 + 8))(v129, v131);
    goto LABEL_30;
  }
  if (v135)
  {
LABEL_30:
    uint64_t v136 = sub_24B562F04(&qword_2697CC460);
    memcpy(v129, v130, *(void *)(*(void *)(v136 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v132 + 16))(v129, v130, v131);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
LABEL_31:
  uint64_t v137 = a3[20];
  uint64_t v138 = a1 + v137;
  uint64_t v139 = (uint64_t *)(a2 + v137);
  uint64_t v140 = *v139;
  *(unsigned char *)(v138 + 8) = *((unsigned char *)v139 + 8);
  *(void *)uint64_t v138 = v140;
  uint64_t v141 = a3[21];
  long long v142 = (void *)(a1 + v141);
  unint64_t v143 = (void *)(a2 + v141);
  *long long v142 = *v143;
  v142[1] = v143[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v144 = a3[22];
  uint64_t v145 = a1 + v144;
  unint64_t v146 = (uint64_t *)(a2 + v144);
  uint64_t v147 = *v146;
  *(unsigned char *)(v145 + 8) = *((unsigned char *)v146 + 8);
  *(void *)uint64_t v145 = v147;
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  uint64_t v6 = a3[12];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  id v8 = (_OWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  long long v9 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_24B562F04(&qword_2697CC118);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
    long long v12 = v8[2];
    v7[1] = v8[1];
    v7[2] = v12;
    long long v13 = v8[4];
    v7[3] = v8[3];
    v7[4] = v13;
    long long v14 = v8[6];
    v7[5] = v8[5];
    v7[6] = v14;
    v7[7] = v8[7];
    uint64_t v15 = v9[7];
    __dst = (char *)v7 + v15;
    id v16 = (char *)v8 + v15;
    uint64_t v17 = sub_24B682C80();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 2, v17))
    {
      uint64_t v19 = sub_24B682C90();
      memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(__dst, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 2, v17);
    }
    *(void *)((char *)v7 + v9[8]) = *(void *)((char *)v8 + v9[8]);
    uint64_t v20 = v9[9];
    id v21 = (char *)v7 + v20;
    uint64_t v22 = (char *)v8 + v20;
    long long v23 = *((_OWORD *)v22 + 3);
    *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
    *((_OWORD *)v21 + 3) = v23;
    v21[64] = v22[64];
    long long v24 = *((_OWORD *)v22 + 1);
    *(_OWORD *)id v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v24;
    uint64_t v25 = v9[10];
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)v8 + v25;
    v26[64] = v27[64];
    long long v28 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v28;
    long long v29 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    uint64_t v30 = v9[11];
    long long v31 = (char *)v7 + v30;
    long long v32 = (char *)v8 + v30;
    v31[64] = v32[64];
    long long v33 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v33;
    long long v34 = *((_OWORD *)v32 + 1);
    *(_OWORD *)long long v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v35 = a3[13];
  uint64_t v36 = a3[14];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  long long v39 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v39;
  *(unsigned char *)(v37 + 128) = *(unsigned char *)(v38 + 128);
  long long v40 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v40;
  long long v41 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v41;
  long long v42 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v42;
  uint64_t v43 = a1 + v36;
  uint64_t v44 = a2 + v36;
  long long v45 = *(_OWORD *)(v44 + 48);
  *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
  *(_OWORD *)(v43 + 48) = v45;
  *(unsigned char *)(v43 + 64) = *(unsigned char *)(v44 + 64);
  long long v46 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v46;
  uint64_t v47 = a3[15];
  uint64_t v48 = a3[16];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  *(void *)(a1 + v48) = *(void *)(a2 + v48);
  uint64_t v51 = a3[17];
  uint64_t v52 = a3[18];
  uint64_t v53 = a1 + v51;
  uint64_t v54 = a2 + v51;
  *(void *)uint64_t v53 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  long long v55 = (void *)(a1 + v52);
  uint64_t v56 = (const void *)(a2 + v52);
  uint64_t v57 = sub_24B6823B0();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    uint64_t v59 = sub_24B562F04(&qword_2697CC068);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v58 + 32))(v55, v56, v57);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  uint64_t v60 = a3[19];
  long long v61 = (void *)(a1 + v60);
  uint64_t v62 = (const void *)(a2 + v60);
  uint64_t v63 = sub_24B682410();
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = sub_24B562F04(&qword_2697CC460);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 32))(v61, v62, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v66 = a3[20];
  uint64_t v67 = a3[21];
  uint64_t v68 = a1 + v66;
  uint64_t v69 = a2 + v66;
  *(void *)uint64_t v68 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(_OWORD *)(a1 + v67) = *(_OWORD *)(a2 + v67);
  uint64_t v70 = a3[22];
  uint64_t v71 = a3[23];
  uint64_t v72 = a1 + v70;
  uint64_t v73 = a2 + v70;
  *(void *)uint64_t v72 = *(void *)v73;
  *(unsigned char *)(v72 + 8) = *(unsigned char *)(v73 + 8);
  *(void *)(a1 + v71) = *(void *)(a2 + v71);
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySample(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  long long v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  uint64_t v10 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  uint64_t v11 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  uint64_t v12 = a3[12];
  long long v13 = (_OWORD *)(a1 + v12);
  long long v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for PhotogrammetrySample.Camera(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_24B56D104((uint64_t)v13, type metadata accessor for PhotogrammetrySample.Camera);
      goto LABEL_7;
    }
    *(_DWORD *)long long v13 = *(_DWORD *)v14;
    long long v29 = v14[2];
    v13[1] = v14[1];
    v13[2] = v29;
    long long v30 = v14[4];
    v13[3] = v14[3];
    v13[4] = v30;
    long long v31 = v14[6];
    v13[5] = v14[5];
    v13[6] = v31;
    v13[7] = v14[7];
    uint64_t v32 = v15[7];
    long long v33 = (char *)v13 + v32;
    __dsta = (char *)v14 + v32;
    uint64_t v34 = sub_24B682C80();
    uint64_t v122 = *(void *)(v34 - 8);
    uint64_t v123 = v33;
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v122 + 48);
    LODWORD(v33) = v35(v33, 2, v34);
    int v36 = v35(__dsta, 2, v34);
    if (v33)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v122 + 32))(v123, __dsta, v34);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v123, 0, 2, v34);
        goto LABEL_18;
      }
      size_t v37 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
      uint64_t v38 = v123;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v122 + 40))(v123, __dsta, v34);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v122 + 8))(v123, v34);
      size_t v37 = *(void *)(*(void *)(sub_24B682C90() - 8) + 64);
      uint64_t v38 = v123;
    }
    memcpy(v38, __dsta, v37);
LABEL_18:
    uint64_t v54 = v15[8];
    long long v55 = *(void **)((char *)v13 + v54);
    *(void *)((char *)v13 + v54) = *(void *)((char *)v14 + v54);

    uint64_t v56 = v15[9];
    uint64_t v57 = (char *)v13 + v56;
    uint64_t v58 = (char *)v14 + v56;
    long long v59 = *((_OWORD *)v58 + 3);
    *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
    *((_OWORD *)v57 + 3) = v59;
    v57[64] = v58[64];
    long long v60 = *((_OWORD *)v58 + 1);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v60;
    uint64_t v61 = v15[10];
    uint64_t v62 = (char *)v13 + v61;
    uint64_t v63 = (char *)v14 + v61;
    long long v64 = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = v64;
    v62[64] = v63[64];
    long long v65 = *((_OWORD *)v63 + 1);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v65;
    uint64_t v66 = v15[11];
    uint64_t v67 = (char *)v13 + v66;
    uint64_t v68 = (char *)v14 + v66;
    long long v69 = *((_OWORD *)v68 + 3);
    *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
    *((_OWORD *)v67 + 3) = v69;
    v67[64] = v68[64];
    long long v70 = *((_OWORD *)v68 + 1);
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *((_OWORD *)v67 + 1) = v70;
    goto LABEL_19;
  }
  if (v19)
  {
LABEL_7:
    uint64_t v28 = sub_24B562F04(&qword_2697CC118);
    memcpy(v13, v14, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)long long v13 = *(_DWORD *)v14;
  long long v20 = v14[2];
  v13[1] = v14[1];
  v13[2] = v20;
  long long v21 = v14[4];
  v13[3] = v14[3];
  v13[4] = v21;
  long long v22 = v14[6];
  v13[5] = v14[5];
  v13[6] = v22;
  v13[7] = v14[7];
  uint64_t v23 = v15[7];
  __dst = (char *)v13 + v23;
  long long v24 = (char *)v14 + v23;
  uint64_t v25 = sub_24B682C80();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 2, v25))
  {
    uint64_t v27 = sub_24B682C90();
    memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(__dst, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 2, v25);
  }
  *(void *)((char *)v13 + v15[8]) = *(void *)((char *)v14 + v15[8]);
  uint64_t v39 = v15[9];
  long long v40 = (char *)v13 + v39;
  long long v41 = (char *)v14 + v39;
  long long v42 = *((_OWORD *)v41 + 3);
  *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
  *((_OWORD *)v40 + 3) = v42;
  v40[64] = v41[64];
  long long v43 = *((_OWORD *)v41 + 1);
  *(_OWORD *)long long v40 = *(_OWORD *)v41;
  *((_OWORD *)v40 + 1) = v43;
  uint64_t v44 = v15[10];
  long long v45 = (char *)v13 + v44;
  long long v46 = (char *)v14 + v44;
  v45[64] = v46[64];
  long long v47 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v47;
  long long v48 = *((_OWORD *)v46 + 1);
  *(_OWORD *)long long v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v48;
  uint64_t v49 = v15[11];
  uint64_t v50 = (char *)v13 + v49;
  uint64_t v51 = (char *)v14 + v49;
  v50[64] = v51[64];
  long long v52 = *((_OWORD *)v51 + 3);
  *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
  *((_OWORD *)v50 + 3) = v52;
  long long v53 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v53;
  (*(void (**)(_OWORD *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_19:
  uint64_t v71 = a3[13];
  uint64_t v72 = a3[14];
  uint64_t v73 = a1 + v71;
  uint64_t v74 = a2 + v71;
  long long v75 = *(_OWORD *)(v74 + 48);
  *(_OWORD *)(v73 + 32) = *(_OWORD *)(v74 + 32);
  *(_OWORD *)(v73 + 48) = v75;
  *(unsigned char *)(v73 + 128) = *(unsigned char *)(v74 + 128);
  long long v76 = *(_OWORD *)(v74 + 112);
  *(_OWORD *)(v73 + 96) = *(_OWORD *)(v74 + 96);
  *(_OWORD *)(v73 + 112) = v76;
  long long v77 = *(_OWORD *)(v74 + 80);
  *(_OWORD *)(v73 + 64) = *(_OWORD *)(v74 + 64);
  *(_OWORD *)(v73 + 80) = v77;
  long long v78 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v78;
  uint64_t v79 = a1 + v72;
  uint64_t v80 = a2 + v72;
  long long v81 = *(_OWORD *)(v80 + 48);
  *(_OWORD *)(v79 + 32) = *(_OWORD *)(v80 + 32);
  *(_OWORD *)(v79 + 48) = v81;
  *(unsigned char *)(v79 + 64) = *(unsigned char *)(v80 + 64);
  long long v82 = *(_OWORD *)(v80 + 16);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *(_OWORD *)(v79 + 16) = v82;
  uint64_t v83 = a3[15];
  uint64_t v84 = a3[16];
  uint64_t v85 = a1 + v83;
  uint64_t v86 = a2 + v83;
  *(void *)uint64_t v85 = *(void *)v86;
  *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
  uint64_t v87 = *(void **)(a1 + v84);
  *(void *)(a1 + v84) = *(void *)(a2 + v84);

  uint64_t v88 = a3[17];
  uint64_t v89 = a3[18];
  uint64_t v90 = a1 + v88;
  uint64_t v91 = a2 + v88;
  *(void *)uint64_t v90 = *(void *)v91;
  *(unsigned char *)(v90 + 8) = *(unsigned char *)(v91 + 8);
  uint64_t v92 = (void *)(a1 + v89);
  uint64_t v93 = (void *)(a2 + v89);
  uint64_t v94 = sub_24B6823B0();
  uint64_t v95 = *(void *)(v94 - 8);
  long long v96 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v95 + 48);
  int v97 = v96(v92, 1, v94);
  int v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(void *, void *, uint64_t))(v95 + 32))(v92, v93, v94);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v98)
  {
    (*(void (**)(void *, uint64_t))(v95 + 8))(v92, v94);
LABEL_24:
    uint64_t v99 = sub_24B562F04(&qword_2697CC068);
    memcpy(v92, v93, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v95 + 40))(v92, v93, v94);
LABEL_25:
  uint64_t v100 = a3[19];
  uint64_t v101 = (void *)(a1 + v100);
  uint64_t v102 = (void *)(a2 + v100);
  uint64_t v103 = sub_24B682410();
  uint64_t v104 = *(void *)(v103 - 8);
  long long v105 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v104 + 48);
  int v106 = v105(v101, 1, v103);
  int v107 = v105(v102, 1, v103);
  if (!v106)
  {
    if (!v107)
    {
      (*(void (**)(void *, void *, uint64_t))(v104 + 40))(v101, v102, v103);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v104 + 8))(v101, v103);
    goto LABEL_30;
  }
  if (v107)
  {
LABEL_30:
    uint64_t v108 = sub_24B562F04(&qword_2697CC460);
    memcpy(v101, v102, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v104 + 32))(v101, v102, v103);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
LABEL_31:
  uint64_t v109 = a3[20];
  uint64_t v110 = a3[21];
  uint64_t v111 = a1 + v109;
  uint64_t v112 = a2 + v109;
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
  __n128 v113 = (void *)(a1 + v110);
  id v114 = (uint64_t *)(a2 + v110);
  uint64_t v116 = *v114;
  uint64_t v115 = v114[1];
  *__n128 v113 = v116;
  v113[1] = v115;
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[22];
  uint64_t v118 = a3[23];
  uint64_t v119 = a1 + v117;
  uint64_t v120 = a2 + v117;
  *(void *)uint64_t v119 = *(void *)v120;
  *(unsigned char *)(v119 + 8) = *(unsigned char *)(v120 + 8);
  *(void *)(a1 + v118) = *(void *)(a2 + v118);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B570554);
}

uint64_t sub_24B570554(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_24B562F04(&qword_2697CC118);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[12];
LABEL_9:
    long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_24B562F04(&qword_2697CC068);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[18];
    goto LABEL_9;
  }
  uint64_t v14 = sub_24B562F04(&qword_2697CC460);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[19];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B5706EC);
}

uint64_t sub_24B5706EC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_24B562F04(&qword_2697CC118);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[12];
LABEL_7:
    long long v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_24B562F04(&qword_2697CC068);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[18];
    goto LABEL_7;
  }
  uint64_t v14 = sub_24B562F04(&qword_2697CC460);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[19];

  return v15(v17, a2, a2, v16);
}

void sub_24B570870()
{
  sub_24B570A48(319, &qword_2697CC128, (void (*)(uint64_t))type metadata accessor for PhotogrammetrySample.Camera);
  if (v0 <= 0x3F)
  {
    sub_24B570A48(319, &qword_2697CC130, MEMORY[0x263F07490]);
    if (v1 <= 0x3F)
    {
      sub_24B570A48(319, &qword_2697CC138, MEMORY[0x263F07508]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_24B570A48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24B682CC0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PhotogrammetrySample.Camera(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v8;
    long long v9 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v9;
    uint64_t v10 = a3[7];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    uint64_t v13 = sub_24B682C80();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 2, v13))
    {
      uint64_t v15 = sub_24B682C90();
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 2, v13);
    }
    uint64_t v17 = a3[8];
    uint64_t v18 = a3[9];
    int v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v4 + v17) = v19;
    long long v20 = (char *)v4 + v18;
    uint64_t v21 = (uint64_t)a2 + v18;
    v20[64] = *(unsigned char *)(v21 + 64);
    long long v22 = *(_OWORD *)(v21 + 48);
    *((_OWORD *)v20 + 2) = *(_OWORD *)(v21 + 32);
    *((_OWORD *)v20 + 3) = v22;
    long long v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)long long v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v23;
    uint64_t v24 = a3[10];
    uint64_t v25 = a3[11];
    uint64_t v26 = (char *)v4 + v24;
    uint64_t v27 = (uint64_t)a2 + v24;
    v26[64] = *(unsigned char *)(v27 + 64);
    long long v28 = *(_OWORD *)(v27 + 48);
    *((_OWORD *)v26 + 2) = *(_OWORD *)(v27 + 32);
    *((_OWORD *)v26 + 3) = v28;
    long long v29 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v29;
    long long v30 = (char *)v4 + v25;
    uint64_t v31 = (uint64_t)a2 + v25;
    v30[64] = *(unsigned char *)(v31 + 64);
    long long v32 = *(_OWORD *)(v31 + 48);
    *((_OWORD *)v30 + 2) = *(_OWORD *)(v31 + 32);
    *((_OWORD *)v30 + 3) = v32;
    long long v33 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)long long v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v33;
    id v34 = v19;
  }
  return v4;
}

void destroy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24B682C80();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  long long v7 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t initializeWithCopy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)(v18 + 64) = *(unsigned char *)(v19 + 64);
  long long v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  long long v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v25 + 64);
  long long v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  long long v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  uint64_t v28 = a1 + v23;
  uint64_t v29 = a2 + v23;
  *(unsigned char *)(v28 + 64) = *(unsigned char *)(v29 + 64);
  long long v30 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v30;
  long long v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v31;
  id v32 = v17;
  return a1;
}

uint64_t assignWithCopy for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v6 = a3[7];
  long long v7 = (void *)(a1 + v6);
  long long v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_24B682C80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_24B682C90();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)(a1 + v15);
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  long long v22 = *(_OWORD *)(v21 + 16);
  long long v23 = *(_OWORD *)(v21 + 32);
  long long v24 = *(_OWORD *)(v21 + 48);
  *(unsigned char *)(v20 + 64) = *(unsigned char *)(v21 + 64);
  *(_OWORD *)(v20 + 32) = v23;
  *(_OWORD *)(v20 + 48) = v24;
  *(_OWORD *)(v20 + 16) = v22;
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  long long v28 = *(_OWORD *)(v27 + 16);
  long long v29 = *(_OWORD *)(v27 + 32);
  long long v30 = *(_OWORD *)(v27 + 48);
  *(unsigned char *)(v26 + 64) = *(unsigned char *)(v27 + 64);
  *(_OWORD *)(v26 + 32) = v29;
  *(_OWORD *)(v26 + 48) = v30;
  *(_OWORD *)(v26 + 16) = v28;
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  long long v34 = *(_OWORD *)(v33 + 16);
  long long v35 = *(_OWORD *)(v33 + 32);
  long long v36 = *(_OWORD *)(v33 + 48);
  *(unsigned char *)(v32 + 64) = *(unsigned char *)(v33 + 64);
  *(_OWORD *)(v32 + 32) = v35;
  *(_OWORD *)(v32 + 48) = v36;
  *(_OWORD *)(v32 + 16) = v34;
  return a1;
}

uint64_t initializeWithTake for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 2, v12))
  {
    uint64_t v14 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
  }
  uint64_t v15 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
  long long v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  long long v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)(v22 + 64) = *(unsigned char *)(v23 + 64);
  long long v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  long long v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  uint64_t v26 = a1 + v21;
  uint64_t v27 = a2 + v21;
  *(unsigned char *)(v26 + 64) = *(unsigned char *)(v27 + 64);
  long long v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  long long v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v29;
  return a1;
}

uint64_t assignWithTake for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v12 = sub_24B682C80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 2, v12);
  int v16 = v14(v11, 2, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_24B682C90();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 2, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  long long v19 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);

  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)(v22 + 64) = *(unsigned char *)(v23 + 64);
  long long v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  long long v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  uint64_t v26 = a1 + v21;
  uint64_t v27 = a2 + v21;
  *(unsigned char *)(v26 + 64) = *(unsigned char *)(v27 + 64);
  long long v28 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v28;
  long long v29 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v29;
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (long long *)(a2 + v30);
  long long v33 = *v32;
  long long v34 = v32[1];
  long long v35 = v32[2];
  long long v36 = v32[3];
  *(unsigned char *)(v31 + 64) = *((unsigned char *)v32 + 64);
  *(_OWORD *)(v31 + 32) = v35;
  *(_OWORD *)(v31 + 48) = v36;
  *(_OWORD *)uint64_t v31 = v33;
  *(_OWORD *)(v31 + 16) = v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B57156C);
}

uint64_t sub_24B57156C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682C90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample.Camera(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B571650);
}

uint64_t sub_24B571650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B682C90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
  return result;
}

uint64_t sub_24B571710()
{
  uint64_t result = sub_24B682C90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithCopy for PhotogrammetrySample.Object(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySample.Object(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PhotogrammetrySample.Object(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetrySample.Object()
{
  return &type metadata for PhotogrammetrySample.Object;
}

ValueMetadata *type metadata accessor for PhotogrammetrySample.Scene()
{
  return &type metadata for PhotogrammetrySample.Scene;
}

void type metadata accessor for simd_float3x3(uint64_t a1)
{
}

__n128 sub_24B57189C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MeshBounds(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MeshBounds(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMAcceleration(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

int64_t sub_24B571924@<X0>(__CVBuffer *a1@<X0>, int64_t a2@<X1>, int64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int64_t Width = CVPixelBufferGetWidth(a1);
  int64_t result = CVPixelBufferGetHeight(a1);
  if ((a3 | a2) < 0 || Width <= a2 || result <= a3)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int64_t BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  CVPixelBufferLockBaseAddress(a1, 1uLL);
  int64_t result = (int64_t)CVPixelBufferGetBaseAddress(a1);
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  int64_t v13 = a3 * BytesPerRow;
  if ((unsigned __int128)(a3 * (__int128)BytesPerRow) >> 64 != (a3 * BytesPerRow) >> 63) {
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)(*(void *)(a4 - 8) + 64);
  if (!v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v13 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_17;
  }
  uint64_t v15 = v13 / v14;
  BOOL v16 = __OFADD__(a2, v15);
  int64_t v17 = a2 + v15;
  if (v16)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(uint64_t, int64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a5, result + *(void *)(*(void *)(a4 - 8) + 72) * v17, a4);

  return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
}

void sub_24B571A78(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
}

BOOL sub_24B571A8C(__CVBuffer *a1, __CVBuffer *a2, __CVBuffer *a3, uint64_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8)
{
  uint64_t v9 = v8;
  float32x4_t v43 = a7;
  float32x4_t v44 = a8;
  float32x4_t v41 = a5;
  float32x4_t v42 = a6;
  uint64_t v14 = sub_24B6824D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v41 - v19;
  double v22 = *(double *)v9;
  double v21 = *(double *)(v9 + 8);
  uint64_t v23 = sub_24B5F8218(a1, a2, a3, a4, 1, v41, v42, v43, v44, *(double *)v9, v21);
  uint64_t v25 = v24;
  LOBYTE(a3) = v26;
  *(void *)(v9 + 16) = v23;
  *(void *)(v9 + 24) = v24;
  *(unsigned char *)(v9 + 32) = v26 & 1;
  uint64_t v27 = sub_24B57CB70();
  long long v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  if (a3)
  {
    v28(v18, v27, v14);
    long long v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B20();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v46 = v32;
      *(_DWORD *)uint64_t v31 = 136380675;
      double v45 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000043, 0x800000024B68B750, &v46));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v29, v30, "ObjectCaptureSession.%{private}s: Failed to map image point to world point!", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v32, -1, -1);
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    long long v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    long long v34 = v18;
    goto LABEL_8;
  }
  v28(v20, v27, v14);
  long long v35 = sub_24B6824B0();
  os_log_type_t v36 = sub_24B682B30();
  if (!os_log_type_enabled(v35, v36))
  {

    long long v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    long long v34 = v20;
LABEL_8:
    v33(v34, v14);
    return (*(unsigned char *)(v9 + 32) & 1) == 0;
  }
  v37.i64[0] = v23;
  v37.i64[1] = v25;
  float32x4_t v44 = v37;
  uint64_t v38 = swift_slowAlloc();
  uint64_t v39 = swift_slowAlloc();
  uint64_t v46 = v39;
  *(_DWORD *)uint64_t v38 = 136381955;
  v43.i64[0] = v14;
  double v45 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000043, 0x800000024B68B750, &v46));
  sub_24B682CD0();
  *(_WORD *)(v38 + 12) = 2050;
  double v45 = *(float *)&v23;
  sub_24B682CD0();
  *(_WORD *)(v38 + 22) = 2050;
  double v45 = v44.f32[1];
  sub_24B682CD0();
  *(_WORD *)(v38 + 32) = 2050;
  double v45 = v44.f32[2];
  sub_24B682CD0();
  *(_WORD *)(v38 + 42) = 2050;
  double v45 = v22;
  sub_24B682CD0();
  *(_WORD *)(v38 + 52) = 2050;
  double v45 = v21;
  sub_24B682CD0();
  _os_log_impl(&dword_24B55E000, v35, v36, "ObjectCaptureSession.%{private}s: Successfully computed world point: x = %{public}f, y = %{public}f, z = %{public}f, from tap image point: u = %{public}f, v = %{public}f", (uint8_t *)v38, 0x3Eu);
  swift_arrayDestroy();
  MEMORY[0x24C5D6C00](v39, -1, -1);
  MEMORY[0x24C5D6C00](v38, -1, -1);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v43.i64[0]);
  return (*(unsigned char *)(v9 + 32) & 1) == 0;
}

__n128 initializeWithCopy for TapPosition(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TapPosition(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TapPosition(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TapPosition()
{
  return &type metadata for TapPosition;
}

void type metadata accessor for CGPoint()
{
  if (!qword_2697CCC80)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2697CCC80);
    }
  }
}

uint64_t sub_24B571FDC()
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B685480;
  *(void *)(inited + 32) = 1667851624;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = 6778986;
  *(void *)(inited + 56) = 0xE300000000000000;
  *(void *)(inited + 64) = 1734701162;
  *(void *)(inited + 72) = 0xE400000000000000;
  *(void *)(inited + 80) = 6778480;
  *(void *)(inited + 88) = 0xE300000000000000;
  uint64_t v1 = sub_24B574E70(inited);
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  qword_2697D0BD0 = v1;
  return result;
}

uint64_t sub_24B572094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v41 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  long long v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6824D0();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B562F04(&qword_2697CC068);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  sub_24B562F04(&qword_2697CC140);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684E60;
  uint64_t v18 = (void *)*MEMORY[0x263EFF610];
  *(void *)(inited + 32) = *MEMORY[0x263EFF610];
  id v19 = v18;
  sub_24B575014(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v35 = a1;
  sub_24B682200();
  swift_bridgeObjectRelease();
  sub_24B682120();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  double v21 = v40;
  uint64_t v20 = v41;
  sub_24B563A6C((uint64_t)v16, (uint64_t)v14, &qword_2697CC068);
  uint64_t v22 = sub_24B6823B0();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v22) == 1)
  {
    sub_24B575258((uint64_t)v14);
    uint64_t v24 = sub_24B57CBE8();
    uint64_t v26 = v36;
    uint64_t v25 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v24, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v21, v35, v20);
    uint64_t v27 = sub_24B6824B0();
    os_log_type_t v28 = sub_24B682B20();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558275;
      uint64_t v42 = 1752392040;
      uint64_t v43 = v30;
      sub_24B682CD0();
      *(_WORD *)(v29 + 12) = 2081;
      uint64_t v31 = sub_24B6822D0();
      uint64_t v42 = sub_24B5627B8(v31, v32, &v43);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v40, v41);
      _os_log_impl(&dword_24B55E000, v27, v28, "Image Helper: Creation data is nil for: \"%{private,mask.hash}s\".", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v30, -1, -1);
      MEMORY[0x24C5D6C00](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v39, v37);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v20);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v39, v25);
    }
    sub_24B682340();
    return sub_24B575258((uint64_t)v16);
  }
  else
  {
    sub_24B575258((uint64_t)v16);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v38, v14, v22);
  }
}

void sub_24B572628(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v146 = (void (*)(void, void))a1;
  uint64_t v144 = a3;
  uint64_t v145 = sub_24B6823B0();
  uint64_t v147 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  unint64_t v148 = (char *)v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CC068);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v142 = (uint64_t)v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v151 = (uint64_t)v130 - v10;
  uint64_t v138 = type metadata accessor for PhotogrammetrySample(0);
  MEMORY[0x270FA5388](v138);
  uint64_t v156 = (uint64_t)v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6822E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v150 = (__CVBuffer *)((char *)v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  unint64_t v143 = (char *)v130 - v17;
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)v130 - v18;
  uint64_t v20 = sub_24B6824D0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v152 = (CGImageSource *)((char *)v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v149 = (char *)v130 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v139 = (char *)v130 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v136 = (char *)v130 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v140 = (char *)v130 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v141 = (char *)v130 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)v130 - v34;
  uint64_t v36 = sub_24B57CBE8();
  uint64_t v161 = v21;
  uint64_t v162 = v20;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v157 = v36;
  __n128 v159 = v37;
  uint64_t v160 = v21 + 16;
  ((void (*)(char *))v37)(v35);
  char v153 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v154 = v13 + 16;
  v153(v19, a2, v12);
  uint64_t v38 = sub_24B6824B0();
  os_log_type_t v39 = sub_24B682B30();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v158 = v13;
  if (v40)
  {
    uint64_t v41 = swift_slowAlloc();
    int v134 = (void (*)(void, void))swift_slowAlloc();
    int64_t Width = v134;
    *(_DWORD *)uint64_t v41 = 141558275;
    uint64_t v166 = 1752392040;
    uint64_t v137 = a2;
    sub_24B682CD0();
    *(_WORD *)(v41 + 12) = 2081;
    uint64_t v135 = v3;
    sub_24B576C7C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v42 = sub_24B682F90();
    uint64_t v166 = sub_24B5627B8(v42, v43, (uint64_t *)&Width);
    a2 = v137;
    uint64_t v4 = v135;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    char v155 = *(void (**)(char *, uint64_t))(v158 + 8);
    v155(v19, v12);
    _os_log_impl(&dword_24B55E000, v38, v39, "Image Helper: Trying to load sample = %{private,mask.hash}s...", (uint8_t *)v41, 0x16u);
    float32x4_t v44 = v134;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v44, -1, -1);
    MEMORY[0x24C5D6C00](v41, -1, -1);
  }
  else
  {
    char v155 = *(void (**)(char *, uint64_t))(v13 + 8);
    v155(v19, v12);
  }

  double v45 = *(void (**)(char *, uint64_t))(v161 + 8);
  v45(v35, v162);
  CFURLRef v46 = (const __CFURL *)sub_24B682250();
  long long v47 = CGImageSourceCreateWithURL(v46, 0);

  if (v47)
  {
    long long v48 = (void *)sub_24B57530C(v47, 0, a2);
    if (v4)
    {
    }
    else
    {
      uint64_t v135 = v12;
      id v58 = v48;
      uint64_t v59 = v156;
      PhotogrammetrySample.init(id:image:)((uint64_t)v146, (uint64_t)v58, v156);
      v152 = v47;
      unint64_t v60 = sub_24B5759C8(v47, 0, a2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v59 + 16) = v60;
      uint64_t v61 = v141;
      v159(v141, v157, v162);
      uint64_t v62 = (__CVBuffer *)v58;
      uint64_t v63 = sub_24B6824B0();
      os_log_type_t v64 = sub_24B682B10();
      BOOL v65 = os_log_type_enabled(v63, v64);
      uint64_t v133 = 0;
      int v134 = (void (*)(void, void))v45;
      char v150 = v62;
      if (v65)
      {
        uint64_t v66 = swift_slowAlloc();
        *(_DWORD *)uint64_t v66 = 134349312;
        int64_t Width = (void (*)(void, void))CVPixelBufferGetWidth(v62);
        sub_24B682CD0();
        *(_WORD *)(v66 + 12) = 2050;
        int64_t Width = (void (*)(void, void))CVPixelBufferGetHeight(v62);
        double v45 = (void (*)(char *, uint64_t))v134;
        sub_24B682CD0();

        _os_log_impl(&dword_24B55E000, v63, v64, "Image Helper: Loaded image w=%{public}ld h=%{public}ld", (uint8_t *)v66, 0x16u);
        MEMORY[0x24C5D6C00](v66, -1, -1);
      }
      else
      {

        uint64_t v63 = v62;
      }
      uint64_t v70 = v145;
      uint64_t v71 = v148;

      uint64_t v72 = v45;
      v161 += 8;
      v45(v61, v162);
      type metadata accessor for PhotogrammetryMetadataHelper();
      uint64_t v73 = sub_24B560F38(v60);
      uint64_t v74 = *(uint64_t (**)(void))(*(void *)v73 + 176);
      uint64_t v141 = (char *)v73;
      uint64_t v75 = v74();
      uint64_t v78 = v135;
      if ((v79 & 1) == 0)
      {
        uint64_t v80 = v75;
        uint64_t v132 = v77;
        unint64_t v81 = v76;
        long long v82 = v140;
        v159(v140, v157, v162);
        uint64_t v83 = sub_24B6824B0();
        os_log_type_t v84 = sub_24B682B10();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = (uint8_t *)swift_slowAlloc();
          uint64_t v86 = swift_slowAlloc();
          uint64_t v137 = a2;
          uint64_t v87 = v86;
          *(_DWORD *)uint64_t v85 = 136446210;
          uint64_t v166 = v86;
          v130[1] = v85 + 4;
          int64_t Width = (void (*)(void, void))v80;
          unint64_t v164 = v81;
          unint64_t v131 = v81;
          uint64_t v88 = v132;
          uint64_t v165 = v132;
          type metadata accessor for CMAcceleration(0);
          uint64_t v89 = sub_24B682820();
          int64_t Width = (void (*)(void, void))sub_24B5627B8(v89, v90, &v166);
          uint64_t v70 = v145;
          sub_24B682CD0();
          uint64_t v78 = v135;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24B55E000, v83, v84, "Image Helper: Sample loader attached metadata gravity = %{public}s", v85, 0xCu);
          swift_arrayDestroy();
          uint64_t v91 = v87;
          a2 = v137;
          MEMORY[0x24C5D6C00](v91, -1, -1);
          MEMORY[0x24C5D6C00](v85, -1, -1);

          v72(v140, v162);
          uint64_t v92 = v88;
          unint64_t v81 = v131;
          uint64_t v71 = v148;
        }
        else
        {

          v72(v82, v162);
          uint64_t v71 = v148;
          uint64_t v92 = v132;
        }
        uint64_t v93 = v156;
        *(void *)(v156 + 40) = v80;
        *(void *)(v93 + 48) = v81;
        *(void *)(v93 + 56) = v92;
        *(unsigned char *)(v93 + 64) = 0;
      }
      id v94 = sub_24B575F80(v152, 0);
      uint64_t v95 = v156;

      *(void *)(v95 + 24) = v94;
      long long v96 = v72;
      uint64_t v97 = v147;
      if (!v94)
      {
        int v98 = v96;
        uint64_t v99 = v136;
        v159(v136, v157, v162);
        uint64_t v100 = sub_24B6824B0();
        os_log_type_t v101 = sub_24B682B00();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v102 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v102 = 0;
          _os_log_impl(&dword_24B55E000, v100, v101, "Image Helper: Didn't find embedded disparity map, checking for depth.", v102, 2u);
          uint64_t v103 = v102;
          uint64_t v78 = v135;
          MEMORY[0x24C5D6C00](v103, -1, -1);
        }

        uint64_t v104 = v99;
        long long v96 = v98;
        v98(v104, v162);
        id v105 = sub_24B57653C(v152, 0);
        uint64_t v106 = v156;

        *(void *)(v106 + 24) = v105;
      }
      type metadata accessor for PhotogrammetryImageHelper();
      uint64_t v107 = v151;
      sub_24B57381C(a2, v151);
      uint64_t v108 = v107;
      uint64_t v109 = v142;
      sub_24B563A6C(v108, v142, &qword_2697CC068);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v109, 1, v70) == 1)
      {
        sub_24B575258(v109);
      }
      else
      {
        uint64_t v110 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v71, v109, v70);
        uint64_t v111 = v156 + *(int *)(v138 + 72);
        sub_24B575258(v111);
        (*(void (**)(uint64_t, char *, uint64_t))(v97 + 16))(v111, v71, v70);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v97 + 56))(v111, 0, 1, v70);
        uint64_t v112 = sub_24B57CB70();
        __n128 v113 = v139;
        v159(v139, v112, v162);
        id v114 = sub_24B6824B0();
        os_log_type_t v115 = sub_24B682B30();
        if (os_log_type_enabled(v114, v115))
        {
          uint64_t v116 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v116 = 134349056;
          uint64_t v97 = v147;
          int64_t Width = v146;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v114, v115, "Image Folder Reader: Parsed EXIF capture timestamp field of sample (id = %{public}ld)", v116, 0xCu);
          uint64_t v117 = v116;
          uint64_t v78 = v135;
          MEMORY[0x24C5D6C00](v117, -1, -1);
        }

        long long v96 = v110;
        v110(v113, v162);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v71, v70);
      }
      uint64_t v118 = v149;
      v159(v149, v157, v162);
      uint64_t v119 = v143;
      v153(v143, a2, v78);
      uint64_t v120 = v78;
      long long v121 = sub_24B6824B0();
      os_log_type_t v122 = sub_24B682B00();
      BOOL v123 = os_log_type_enabled(v121, v122);
      id v124 = v150;
      if (v123)
      {
        uint64_t v125 = swift_slowAlloc();
        uint64_t v126 = swift_slowAlloc();
        int64_t Width = (void (*)(void, void))v126;
        *(_DWORD *)uint64_t v125 = 141558275;
        uint64_t v166 = 1752392040;
        sub_24B682CD0();
        *(_WORD *)(v125 + 12) = 2081;
        sub_24B576C7C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
        uint64_t v127 = sub_24B682F90();
        uint64_t v166 = sub_24B5627B8(v127, v128, (uint64_t *)&Width);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        v155(v119, v120);
        _os_log_impl(&dword_24B55E000, v121, v122, "Image Helper: Successfully loaded \"%{private,mask.hash}s\"!", (uint8_t *)v125, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v126, -1, -1);
        MEMORY[0x24C5D6C00](v125, -1, -1);

        swift_release();
        v134(v149, v162);
      }
      else
      {

        swift_release();
        v155(v119, v120);

        v96(v118, v162);
      }
      sub_24B575258(v151);
      uint64_t v129 = v156;
      sub_24B57647C(v156, v144);
      sub_24B5764E0(v129);
    }
  }
  else
  {
    uint64_t v49 = v152;
    v159((char *)v152, v157, v162);
    uint64_t v50 = v150;
    v153((char *)v150, a2, v12);
    uint64_t v51 = sub_24B6824B0();
    uint64_t v52 = sub_24B682B20();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      int v134 = (void (*)(void, void))v45;
      uint64_t v55 = v54;
      int64_t Width = (void (*)(void, void))v54;
      *(_DWORD *)uint64_t v53 = 141558275;
      uint64_t v166 = 1752392040;
      uint64_t v135 = v12;
      sub_24B682CD0();
      *(_WORD *)(v53 + 12) = 2081;
      uint64_t v56 = sub_24B6822D0();
      uint64_t v166 = sub_24B5627B8(v56, v57, (uint64_t *)&Width);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      v155((char *)v50, v135);
      _os_log_impl(&dword_24B55E000, v51, (os_log_type_t)v52, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v55, -1, -1);
      MEMORY[0x24C5D6C00](v53, -1, -1);

      v134(v152, v162);
    }
    else
    {
      v155((char *)v50, v12);

      v45((char *)v49, v162);
    }
    int64_t Width = 0;
    unint64_t v164 = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    sub_24B6822D0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v67 = (uint64_t)Width;
    unint64_t v68 = v164;
    sub_24B5752B8();
    swift_allocError();
    *(void *)uint64_t v69 = v67;
    *(void *)(v69 + 8) = v68;
    *(unsigned char *)(v69 + 16) = 1;
    swift_willThrow();
  }
}

uint64_t sub_24B57381C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24B6824D0();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24B562F04(&qword_2697CC068);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  CFURLRef v14 = (const __CFURL *)sub_24B682250();
  uint64_t v15 = CGImageSourceCreateWithURL(v14, 0);

  if (v15)
  {
    uint64_t v16 = a2;
    unint64_t v17 = sub_24B5759C8(v15, 0, a1);
    type metadata accessor for PhotogrammetryMetadataHelper();
    uint64_t v18 = sub_24B560F38(v17);
    (*(void (**)(uint64_t))(*(void *)v18 + 144))(v18);

    swift_release();
    uint64_t v19 = sub_24B6823B0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1)
    {
      sub_24B575258((uint64_t)v13);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v16, 1, 1, v19);
    }
    else
    {
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v20 + 32))(v16, v13, v19);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    }
  }
  else
  {
    uint64_t v22 = sub_24B57CBE8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v36 + 16))(v10, v22, v8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v23 = sub_24B6824B0();
    os_log_type_t v24 = sub_24B682B20();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 141558275;
      uint64_t v37 = 1752392040;
      uint64_t v38 = v27;
      uint64_t v35 = a2;
      sub_24B682CD0();
      *(_WORD *)(v26 + 12) = 2081;
      int v33 = v25;
      uint64_t v28 = sub_24B6822D0();
      uint64_t v37 = sub_24B5627B8(v28, v29, &v38);
      a2 = v35;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_24B55E000, v23, (os_log_type_t)v33, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v26, 0x16u);
      uint64_t v30 = v34;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v30, -1, -1);
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }

    (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v10, v8);
    uint64_t v31 = sub_24B6823B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
}

id sub_24B573CDC()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v0 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_depthDataFromDictionaryRepresentation_error_, v0, v5);

  if (v1)
  {
    id v2 = v5[0];
  }
  else
  {
    id v3 = v5[0];
    sub_24B6821B0();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24B573DD0()
{
  if ((sub_24B6821C0() & 1) == 0) {
    return 0;
  }
  sub_24B6821D0();
  uint64_t v0 = sub_24B682830();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (qword_2697CD5B0 != -1) {
    swift_once();
  }
  char v3 = sub_24B573E78(v0, v2, qword_2697D0BD0);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24B573E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24B683090();
    sub_24B682860();
    uint64_t v6 = sub_24B6830D0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24B682FA0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24B682FA0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_24B573FB0(uint64_t a1)
{
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFURLRef v10 = (const __CFURL *)sub_24B682250();
  uint64_t v11 = CGImageSourceCreateWithURL(v10, 0);

  if (!v11)
  {
    uint64_t v18 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    uint64_t v19 = sub_24B6824B0();
    uint64_t v20 = sub_24B682B20();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v22;
      *(_DWORD *)uint64_t v21 = 141558275;
      uint64_t v31 = 1752392040;
      uint64_t v32 = v22;
      sub_24B682CD0();
      *(_WORD *)(v21 + 12) = 2081;
      v28[1] = v21 + 14;
      os_log_t v29 = v19;
      uint64_t v23 = sub_24B6822D0();
      uint64_t v31 = sub_24B5627B8(v23, v24, &v32);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      os_log_t v25 = v29;
      _os_log_impl(&dword_24B55E000, v29, (os_log_type_t)v20, "Image Helper: Error in CGImageSourceCreateWithURL for %{private,mask.hash}s", (uint8_t *)v21, 0x16u);
      uint64_t v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v26, -1, -1);
      MEMORY[0x24C5D6C00](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  unint64_t v12 = sub_24B5759C8(v11, 0, a1);
  type metadata accessor for PhotogrammetryMetadataHelper();
  uint64_t v13 = sub_24B560F38(v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 152))(v13);
  if ((v14 & 0x100000000) != 0)
  {

    swift_release();
    return 0;
  }
  unsigned int v15 = v14;
  uint64_t v16 = (*(uint64_t (**)(void))(*(void *)v13 + 160))();

  swift_release();
  if ((v16 & 0x100000000) != 0) {
    return 0;
  }
  return v15 | ((unint64_t)v16 << 32);
}

uint64_t sub_24B574398()
{
  if ((sub_24B6821C0() & 1) == 0) {
    return 0;
  }
  sub_24B6821D0();
  uint64_t v0 = sub_24B682830();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (v0 == 1667851624 && v2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v4 = sub_24B682FA0();
    swift_bridgeObjectRelease();
    return v4 & 1;
  }
}

uint64_t sub_24B574444(uint64_t a1)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B6822E0();
  uint64_t v43 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = 0;
  if (sub_24B6821C0())
  {
    uint64_t v44 = v6;
    uint64_t v42 = v5;
    sub_24B6821D0();
    uint64_t v13 = sub_24B682830();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    if (v13 == 1667851624 && v15 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = v44;
    }
    else
    {
      char v17 = sub_24B682FA0();
      swift_bridgeObjectRelease();
      uint64_t v16 = v44;
      if ((v17 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v18 = (void *)sub_24B682250();
    v48[0] = 0;
    int Version = OCNonModularSPI_CMPhoto_readVersion();

    id v49 = v48[0];
    id v20 = v48[0];
    uint64_t v21 = sub_24B57CBE8();
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    if (Version)
    {
      uint64_t v23 = v42;
      v22(v9, v21, v42);
      uint64_t v24 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v4, a1, v2);
      os_log_t v25 = sub_24B6824B0();
      os_log_type_t v26 = sub_24B682B20();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v41 = (void *)swift_slowAlloc();
        v48[0] = v41;
        *(_DWORD *)uint64_t v27 = 141558275;
        uint64_t v45 = 1752392040;
        sub_24B682CD0();
        *(_WORD *)(v27 + 12) = 2081;
        uint64_t v28 = sub_24B6822D0();
        uint64_t v45 = sub_24B5627B8(v28, v29, (uint64_t *)v48);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
        _os_log_impl(&dword_24B55E000, v25, v26, "Image Helper: Error when reading HEIC version for %{private,mask.hash}s", (uint8_t *)v27, 0x16u);
        uint64_t v30 = v41;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v30, -1, -1);
        MEMORY[0x24C5D6C00](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v42);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v23);
      }

      return 0;
    }
    uint64_t v31 = v42;
    v22(v11, v21, v42);
    uint64_t v32 = sub_24B6824B0();
    os_log_type_t v33 = sub_24B682B00();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      v48[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      swift_beginAccess();
      uint64_t v46 = (uint64_t)v49;
      id v36 = v49;
      sub_24B562F04(&qword_2697CC150);
      uint64_t v37 = sub_24B682820();
      uint64_t v46 = sub_24B5627B8(v37, v38, (uint64_t *)v48);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v32, v33, "Image Helper: Read HEIC version %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v35, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v31);
    swift_beginAccess();
    if (!v49) {
      return 0;
    }
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    id v39 = v49;
    sub_24B6827C0();

    uint64_t v12 = v46;
  }
  return v12;
}

uint64_t sub_24B574A1C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24B574A2C()
{
  return swift_allocObject();
}

uint64_t sub_24B574A3C(uint64_t a1, uint64_t a2)
{
  return sub_24B574BA8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24B574A54(uint64_t a1, id *a2)
{
  uint64_t result = sub_24B6827B0();
  *a2 = 0;
  return result;
}

uint64_t sub_24B574ACC(uint64_t a1, id *a2)
{
  char v3 = sub_24B6827C0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24B574B4C@<X0>(uint64_t *a1@<X8>)
{
  sub_24B6827D0();
  uint64_t v2 = sub_24B6827A0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24B574B90(uint64_t a1, uint64_t a2)
{
  return sub_24B574BA8(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24B574BA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24B6827D0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24B574BEC()
{
  sub_24B6827D0();
  sub_24B682860();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24B574C40()
{
  sub_24B6827D0();
  sub_24B683090();
  sub_24B682860();
  uint64_t v0 = sub_24B6830D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24B574CB4()
{
  uint64_t v0 = sub_24B6827D0();
  uint64_t v2 = v1;
  if (v0 == sub_24B6827D0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24B682FA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24B574D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24B6827A0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24B574D88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24B6827D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24B574DB4(uint64_t a1)
{
  uint64_t v2 = sub_24B576C7C(&qword_2697CC178, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_24B576C7C(&qword_2697CC180, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24B574E70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC1A0);
    uint64_t v3 = sub_24B682E20();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_24B683090();
      swift_bridgeObjectRetain();
      sub_24B682860();
      uint64_t result = sub_24B6830D0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_24B682FA0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_24B682FA0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24B575014(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC190);
    uint64_t v3 = sub_24B682E20();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_24B6827D0();
      sub_24B683090();
      id v7 = v6;
      sub_24B682860();
      uint64_t v8 = sub_24B6830D0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_24B6827D0();
        uint64_t v17 = v16;
        if (v15 == sub_24B6827D0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_24B682FA0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_24B6827D0();
          uint64_t v24 = v23;
          if (v22 == sub_24B6827D0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_24B682FA0();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

uint64_t sub_24B575258(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC068);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24B5752B8()
{
  unint64_t result = qword_2697CC148;
  if (!qword_2697CC148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC148);
  }
  return result;
}

uint64_t sub_24B57530C(CGImageSource *a1, size_t a2, uint64_t a3)
{
  uint64_t v60 = a3;
  uint64_t v59 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v59 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v59);
  id v58 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v57 = (void (**)(char *, uint64_t))((char *)v52 - v8);
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = ((char *)v52 - v14);
  CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(a1, a2, 0);
  if (ImageAtIndex)
  {
    CGImageRef v17 = ImageAtIndex;
    uint64_t v19 = v59;
    uint64_t v18 = v60;
    CVPixelBufferRef v20 = sub_24B576D94();
    if (v20)
    {
      uint64_t v21 = (uint64_t)v20;
    }
    else
    {
      uint64_t v33 = sub_24B57CBE8();
      uint64_t v34 = (void (*)(NSObject *, uint64_t, uint64_t))*((void *)v10 + 2);
      uint64_t v35 = v15;
      uint64_t v56 = v9;
      v34(v15, v33, v9);
      uint64_t v36 = v5;
      uint64_t v37 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v5 + 16);
      unint64_t v38 = (char *)v57;
      uint64_t v39 = v19;
      v37(v57, v18, v19);
      BOOL v40 = sub_24B6824B0();
      os_log_type_t v41 = sub_24B682B20();
      LODWORD(v58) = v41;
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        uint64_t v61 = v54;
        *(_DWORD *)uint64_t v42 = 141558275;
        uint64_t v63 = 1752392040;
        os_log_t v53 = v40;
        sub_24B682CD0();
        *(_WORD *)(v42 + 12) = 2081;
        os_log_t v55 = v35;
        v52[1] = v42 + 14;
        uint64_t v43 = sub_24B6822D0();
        uint64_t v63 = sub_24B5627B8(v43, v44, &v61);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
        os_log_t v45 = v53;
        _os_log_impl(&dword_24B55E000, v53, (os_log_type_t)v58, "Image Helper: Error converting CGImageSource to CVPixelBuffer for %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
        uint64_t v46 = v54;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v46, -1, -1);
        MEMORY[0x24C5D6C00](v42, -1, -1);

        (*((void (**)(os_log_t, uint64_t))v10 + 1))(v55, v56);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);

        (*((void (**)(NSObject *, uint64_t))v10 + 1))(v15, v56);
      }
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      sub_24B6822D0();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v21 = v61;
      unint64_t v49 = v62;
      sub_24B5752B8();
      swift_allocError();
      *(void *)uint64_t v50 = v21;
      *(void *)(v50 + 8) = v49;
      *(unsigned char *)(v50 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v22 = sub_24B57CBE8();
    (*((void (**)(char *, uint64_t, uint64_t))v10 + 2))(v13, v22, v9);
    uint64_t v23 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v58, v60, v59);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v56 = v9;
      unint64_t v57 = (void (**)(char *, uint64_t))v10;
      os_log_t v55 = v24;
      uint64_t v27 = v26;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v61 = v28;
      *(_DWORD *)uint64_t v27 = 141558275;
      uint64_t v63 = 1752392040;
      sub_24B682CD0();
      *(_WORD *)(v27 + 12) = 2081;
      uint64_t v54 = v27 + 14;
      BOOL v29 = v58;
      uint64_t v30 = sub_24B6822D0();
      uint64_t v63 = sub_24B5627B8(v30, v31, &v61);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v23);
      os_log_t v32 = v55;
      _os_log_impl(&dword_24B55E000, v55, v25, "Image Helper: Error in CGImageSourceCreateImageAtIndex for %{private,mask.hash}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v28, -1, -1);
      MEMORY[0x24C5D6C00](v27, -1, -1);

      v57[1](v13, v56);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v58, v23);

      (*((void (**)(char *, uint64_t))v10 + 1))(v13, v9);
    }
    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    sub_24B6822D0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v21 = v61;
    unint64_t v47 = v62;
    sub_24B5752B8();
    swift_allocError();
    *(void *)uint64_t v48 = v21;
    *(void *)(v48 + 8) = v47;
    *(unsigned char *)(v48 + 16) = 1;
    swift_willThrow();
  }
  return v21;
}

unint64_t sub_24B5759C8(CGImageSource *a1, size_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v43 = sub_24B6824D0();
  uint64_t v13 = *(void *)(v43 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v43);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v40 - v17;
  CFDictionaryRef v19 = CGImageSourceCopyPropertiesAtIndex(a1, a2, 0);
  uint64_t v20 = sub_24B57CBE8();
  uint64_t v42 = v13;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (!v19)
  {
    v21(v16, v20, v43);
    (*v22)(v10, a3, v6);
    uint64_t v30 = sub_24B6824B0();
    os_log_type_t v31 = sub_24B682B20();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v41 = v33;
      *(_DWORD *)uint64_t v32 = 141558275;
      uint64_t v44 = 1752392040;
      uint64_t v45 = v33;
      sub_24B682CD0();
      *(_WORD *)(v32 + 12) = 2081;
      sub_24B576C7C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
      uint64_t v34 = sub_24B682F90();
      uint64_t v44 = sub_24B5627B8(v34, v35, &v45);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      _os_log_impl(&dword_24B55E000, v30, v31, "Image Helper: Can't get CGImageProperties for EXIF for %{private,mask.hash}s!", (uint8_t *)v32, 0x16u);
      uint64_t v36 = v41;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v36, -1, -1);
      MEMORY[0x24C5D6C00](v32, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
    return sub_24B560D28(MEMORY[0x263F8EE78]);
  }
  v21(v18, v20, v43);
  (*v22)(v12, a3, v6);
  uint64_t v23 = sub_24B6824B0();
  os_log_type_t v24 = sub_24B682B00();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v41 = v26;
    *(_DWORD *)uint64_t v25 = 141558275;
    uint64_t v44 = 1752392040;
    uint64_t v45 = v26;
    sub_24B682CD0();
    *(_WORD *)(v25 + 12) = 2081;
    uint64_t v40 = v25 + 14;
    sub_24B576C7C(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v27 = sub_24B682F90();
    uint64_t v44 = sub_24B5627B8(v27, v28, &v45);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_24B55E000, v23, v24, "Image Helper: Got CGImageProperties EXIF metadata for %{private,mask.hash}s.", (uint8_t *)v25, 0x16u);
    uint64_t v29 = v41;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v29, -1, -1);
    MEMORY[0x24C5D6C00](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v43);
  uint64_t v45 = 0;
  CFDictionaryRef v37 = v19;
  unint64_t result = sub_24B682720();
  uint64_t v39 = v45;
  if (v45)
  {

    return v39;
  }
  __break(1u);
  return result;
}

id sub_24B575F80(CGImageSource *a1, size_t a2)
{
  CGImageSourceRef v50 = a1;
  size_t v51 = a2;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  unint64_t v49 = (char *)&v48 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = sub_24B57CBE8();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v15(v13, v14, v2);
  uint64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B10();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = v3 + 16;
    CFDictionaryRef v19 = v6;
    uint64_t v20 = v3;
    uint64_t v21 = v2;
    uint64_t v22 = v14;
    uint64_t v23 = v15;
    os_log_type_t v24 = v9;
    uint64_t v25 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_24B55E000, v16, v17, "Image Helper: Trying to find kCGImageAuxiliaryDataTypeDisparity in the CGImageSource.", v18, 2u);
    uint64_t v26 = v25;
    uint64_t v9 = v24;
    uint64_t v15 = v23;
    uint64_t v14 = v22;
    uint64_t v2 = v21;
    uint64_t v3 = v20;
    uint64_t v6 = v19;
    MEMORY[0x24C5D6C00](v26, -1, -1);
  }

  uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v13, v2);
  CFDictionaryRef v28 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v50, v51, (CFStringRef)*MEMORY[0x263F0EFA8]);
  if (!v28 || (CFDictionaryRef v29 = v28, v52 = 0, sub_24B682730(), v29, !v52))
  {
    v15(v6, v14, v2);
    CFDictionaryRef v37 = sub_24B6824B0();
    os_log_type_t v38 = sub_24B682B20();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_24B55E000, v37, v38, "Image Helper: No Auxiliary Depth Data found in the CGImageSource, not using depth.", v39, 2u);
      MEMORY[0x24C5D6C00](v39, -1, -1);
    }

    uint64_t v36 = v6;
    goto LABEL_12;
  }
  sub_24B576D54();
  id v30 = sub_24B573CDC();
  if (!v30)
  {
    v15(v9, v14, v2);
    os_log_type_t v31 = sub_24B6824B0();
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v9;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_24B55E000, v31, v32, "Image Helper: Can't load AVDepthData fromDictionaryRepresentation, can't produce disparity map.", v34, 2u);
      unint64_t v35 = v34;
      uint64_t v9 = v33;
      MEMORY[0x24C5D6C00](v35, -1, -1);
    }

    uint64_t v36 = v9;
LABEL_12:
    v27(v36, v2);
    return 0;
  }
  id v42 = v30;
  id v43 = v42;
  if (objc_msgSend(v42, sel_depthDataType) != 1717856627)
  {
    id v43 = objc_msgSend(v42, sel_depthDataByConvertingToDepthDataType_, 1717856627);
  }
  uint64_t v44 = v49;
  v15(v49, v14, v2);
  uint64_t v45 = sub_24B6824B0();
  os_log_type_t v46 = sub_24B682B10();
  if (os_log_type_enabled(v45, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v47 = 0;
    _os_log_impl(&dword_24B55E000, v45, v46, "Image Helper: Got disparity map!", v47, 2u);
    MEMORY[0x24C5D6C00](v47, -1, -1);
  }

  v27(v44, v2);
  id v40 = objc_msgSend(v43, sel_depthDataMap);

  return v40;
}

uint64_t type metadata accessor for PhotogrammetryImageHelper()
{
  return self;
}

uint64_t sub_24B57647C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5764E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24B57653C(CGImageSource *a1, size_t a2)
{
  CGImageSourceRef v50 = a1;
  size_t v51 = a2;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  unint64_t v49 = (char *)&v48 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = sub_24B57CBE8();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v15(v13, v14, v2);
  uint64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B10();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = v3 + 16;
    CFDictionaryRef v19 = v6;
    uint64_t v20 = v3;
    uint64_t v21 = v2;
    uint64_t v22 = v14;
    uint64_t v23 = v15;
    os_log_type_t v24 = v9;
    uint64_t v25 = v18;
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_24B55E000, v16, v17, "Image Helper: Trying to find kCGImageAuxiliaryDataTypeDepth in the CGImageSource.", v18, 2u);
    uint64_t v26 = v25;
    uint64_t v9 = v24;
    uint64_t v15 = v23;
    uint64_t v14 = v22;
    uint64_t v2 = v21;
    uint64_t v3 = v20;
    uint64_t v6 = v19;
    MEMORY[0x24C5D6C00](v26, -1, -1);
  }

  uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v13, v2);
  CFDictionaryRef v28 = CGImageSourceCopyAuxiliaryDataInfoAtIndex(v50, v51, (CFStringRef)*MEMORY[0x263F0EFA0]);
  if (!v28 || (CFDictionaryRef v29 = v28, v52 = 0, sub_24B682730(), v29, !v52))
  {
    v15(v6, v14, v2);
    CFDictionaryRef v37 = sub_24B6824B0();
    os_log_type_t v38 = sub_24B682B20();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_24B55E000, v37, v38, "Image Helper: No Auxiliary Depth Data found in the CGImageSource, not using depth.", v39, 2u);
      MEMORY[0x24C5D6C00](v39, -1, -1);
    }

    uint64_t v36 = v6;
    goto LABEL_12;
  }
  sub_24B576D54();
  id v30 = sub_24B573CDC();
  if (!v30)
  {
    v15(v9, v14, v2);
    os_log_type_t v31 = sub_24B6824B0();
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v9;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_24B55E000, v31, v32, "Image Helper: Can't load AVDepthData fromDictionaryRepresentation, can't produce depth map.", v34, 2u);
      unint64_t v35 = v34;
      uint64_t v9 = v33;
      MEMORY[0x24C5D6C00](v35, -1, -1);
    }

    uint64_t v36 = v9;
LABEL_12:
    v27(v36, v2);
    return 0;
  }
  id v42 = v30;
  id v43 = v42;
  if (objc_msgSend(v42, sel_depthDataType) != 1717855600)
  {
    id v43 = objc_msgSend(v42, sel_depthDataByConvertingToDepthDataType_, 1717855600);
  }
  uint64_t v44 = v49;
  v15(v49, v14, v2);
  uint64_t v45 = sub_24B6824B0();
  os_log_type_t v46 = sub_24B682B10();
  if (os_log_type_enabled(v45, v46))
  {
    unint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v47 = 0;
    _os_log_impl(&dword_24B55E000, v45, v46, "Image Helper: Got depth map!", v47, 2u);
    MEMORY[0x24C5D6C00](v47, -1, -1);
  }

  v27(v44, v2);
  id v40 = objc_msgSend(v43, sel_depthDataMap);

  return v40;
}

id sub_24B576A18(id result, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a3) {
    return result;
  }
  return result;
}

void destroy for PhotogrammetryImageHelper.LoadError(uint64_t a1)
{
}

void sub_24B576A48(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {
  }
}

uint64_t _s6CoreOC25PhotogrammetryImageHelperC9LoadErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24B576A18(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PhotogrammetryImageHelper.LoadError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24B576A18(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24B576A48(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for PhotogrammetryImageHelper.LoadError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PhotogrammetryImageHelper.LoadError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24B576A48(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotogrammetryImageHelper.LoadError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotogrammetryImageHelper.LoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24B576BF4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24B576C0C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PhotogrammetryImageHelper.LoadError()
{
  return &type metadata for PhotogrammetryImageHelper.LoadError;
}

uint64_t sub_24B576C34()
{
  return sub_24B576C7C(&qword_2697CC160, type metadata accessor for URLResourceKey);
}

uint64_t sub_24B576C7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B576CC4()
{
  return sub_24B576C7C(&qword_2697CC168, type metadata accessor for URLResourceKey);
}

uint64_t sub_24B576D0C()
{
  return sub_24B576C7C(&qword_2697CC170, type metadata accessor for URLResourceKey);
}

unint64_t sub_24B576D54()
{
  unint64_t result = qword_2697CC188;
  if (!qword_2697CC188)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CC188);
  }
  return result;
}

CVPixelBufferRef sub_24B576D94()
{
  uint64_t v1 = v0;
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  CGColorSpaceRef v2 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
  if (!v2) {
    goto LABEL_19;
  }
  unsigned int v3 = v2;
  pixelBufferOut[0] = 0;
  sub_24B562F04(&qword_2697CC1A8);
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void **)MEMORY[0x263F040A0];
  *(_OWORD *)(inited + 16) = xmmword_24B6856B0;
  char v6 = *v5;
  uint64_t v7 = (void *)*MEMORY[0x263EFFB40];
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v7;
  char v8 = (void *)*MEMORY[0x263F04090];
  *(void *)(inited + 48) = *MEMORY[0x263F04090];
  *(void *)(inited + 56) = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = v8;
  sub_24B577080(inited);
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  size_t Width = CGImageGetWidth(v1);
  size_t Height = CGImageGetHeight(v1);
  type metadata accessor for CFString(0);
  sub_24B562F04(&qword_2697CC1B0);
  sub_24B577198(&qword_2697CC0D0);
  CFDictionaryRef v15 = (const __CFDictionary *)sub_24B682710();
  swift_bridgeObjectRelease();
  LODWORD(inited) = CVPixelBufferCreate(v12, Width, Height, 0x42475241u, v15, pixelBufferOut);

  CVPixelBufferRef v16 = pixelBufferOut[0];
  if (inited)
  {
    CVPixelBufferRef v17 = 0;
    CVPixelBufferRef v18 = pixelBufferOut[0];
LABEL_15:

    goto LABEL_16;
  }
  if (pixelBufferOut[0])
  {
    CVPixelBufferRef v18 = pixelBufferOut[0];
    if (CVPixelBufferLockBaseAddress(v18, 0))
    {
      CVPixelBufferRef v17 = 0;
LABEL_14:

      goto LABEL_15;
    }
    size_t BytesPerRow = CVPixelBufferGetBytesPerRow(v18);
    BaseAddress = CVPixelBufferGetBaseAddress(v18);
    size_t v21 = CGImageGetWidth(v1);
    size_t v22 = CGImageGetHeight(v1);
    CGContextRef v23 = CGBitmapContextCreate(BaseAddress, v21, v22, 8uLL, BytesPerRow, v3, 5u);
    if (!v23)
    {
      CVPixelBufferRef v16 = 0;
      goto LABEL_13;
    }
    CGContextRef v24 = v23;
    CGImageGetWidth(v1);
    CGImageGetHeight(v1);
    sub_24B682AE0();
    v28.data = CVPixelBufferGetBaseAddress(v18);
    v28.rowBytes = CVPixelBufferGetBytesPerRow(v18);
    vImagePixelCount v25 = CGImageGetWidth(v1);
    if ((v25 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v28.width = v25;
      vImagePixelCount v26 = CGImageGetHeight(v1);
      if ((v26 & 0x8000000000000000) == 0)
      {
        v28.height = v26;
        vImagePermuteChannels_ARGB8888(&v28, &v28, byte_26FE8C6B8, 0);

        CVPixelBufferRef v18 = v18;
LABEL_13:
        CVPixelBufferUnlockBaseAddress(v18, 0);
        CVPixelBufferRef v17 = v16;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  CVPixelBufferRef v17 = 0;
LABEL_16:

  return v17;
}

unint64_t sub_24B577080(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    CGColorSpaceRef v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC1C0);
  CGColorSpaceRef v2 = (void *)sub_24B682F30();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    id v6 = *v4;
    id v7 = *v4;
    id v8 = v5;
    unint64_t result = sub_24B5676D0((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = 8 * result;
    *(void *)(v2[6] + v11) = v8;
    *(void *)(v2[7] + v11) = v6;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

uint64_t sub_24B577198(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

float sub_24B5771DC(uint64_t a1)
{
  float result = 0.0;
  if ((unint64_t)(a1 - 1) <= 2) {
    return flt_24B685774[a1 - 1];
  }
  return result;
}

uint64_t sub_24B5771FC(char a1)
{
  if (a1) {
    return 2;
  }
  else {
    return 3;
  }
}

float sub_24B57720C(char a1)
{
  float result = 0.03;
  if ((a1 & 1) == 0) {
    return 0.01;
  }
  return result;
}

void sub_24B577230(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X8>)
{
  v69.n128_u64[0] = a2;
  v70.n128_u64[0] = a3;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B682410();
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v67.n128_u64[0] = (unint64_t)v62.n128_u64 - v15;
  id v16 = objc_msgSend(a1, sel_geometry);
  id v17 = objc_msgSend(v16, sel_colors);

  id v71 = v17;
  if (!v17)
  {
    uint64_t v34 = sub_24B57CCC8();
    uint64_t v35 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v34, v4);
    uint64_t v36 = sub_24B6824B0();
    os_log_type_t v37 = sub_24B682B20();
    if (os_log_type_enabled(v36, v37))
    {
      os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v73 = v39;
      *(_DWORD *)os_log_type_t v38 = 136380675;
      uint64_t v72 = sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68B8A0, &v73);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v36, v37, "%{private}s: Failed to create mesh anchor from ARMeshAnchor, ARMeshAnchor does not have vertex colors!", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v39, -1, -1);
      unint64_t v40 = v70.n128_u64[0];
      MEMORY[0x24C5D6C00](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v35);
      unint64_t v40 = v70.n128_u64[0];
    }
    uint64_t v61 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v40, 1, 1, v61);
    return;
  }
  id v18 = objc_msgSend(a1, sel_geometry);
  id v19 = objc_msgSend(v18, sel_vertices);

  uint64_t v20 = (uint64_t)objc_msgSend(v19, sel_count);
  uint64_t v21 = 3 * v20;
  if ((unsigned __int128)(v20 * (__int128)3) >> 64 != (3 * v20) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  id v22 = objc_msgSend(v71, sel_buffer);
  CGContextRef v23 = (float *)objc_msgSend(v22, sel_contents);
  id v24 = v22;
  if (v21 < 0)
  {
LABEL_26:
    __break(1u);
    return;
  }
  BOOL v65 = v14;
  uint64_t v66 = v11;
  for (uint64_t i = v68; v21; --v21)
  {
    float v27 = *v23;
    if (*v23 >= 0.0 && v27 < 0.0031307)
    {
      float v26 = v27 * 12.92;
    }
    else
    {
      float v26 = 0.0;
      if (v27 >= 0.0031307 && v27 <= 1.0) {
        float v26 = (float)(powf(v27, 0.41667) * 1.055) + -0.055;
      }
    }
    *v23++ = sub_24B5F8C18(v26, 0.0, 1.0);
  }
  sub_24B57C148(v69.n128_i64[0], (uint64_t)v10);
  uint64_t v30 = i;
  uint64_t v31 = v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(i + 48))(v10, 1, v66) == 1)
  {
    id v32 = objc_msgSend(a1, sel_identifier);
    unint64_t v33 = v67.n128_u64[0];
    sub_24B6823F0();

    sub_24B57C1B0((uint64_t)v10);
  }
  else
  {
    unint64_t v33 = v67.n128_u64[0];
    (*(void (**)(unint64_t, char *, uint64_t))(i + 32))(v67.n128_u64[0], v10, v31);
  }
  uint64_t v41 = v70.n128_u64[0];
  id v42 = *(void (**)(char *, unint64_t, uint64_t))(i + 16);
  uint64_t v43 = (uint64_t)v65;
  v42(v65, v33, v31);
  id v44 = objc_msgSend(a1, sel_geometry);
  id v45 = objc_msgSend(v44, sel_vertices);

  id v46 = objc_msgSend(a1, sel_geometry);
  id v47 = objc_msgSend(v46, sel_normals);

  id v48 = objc_msgSend(a1, sel_geometry);
  id v49 = objc_msgSend(v48, sel_faces);

  objc_msgSend(a1, sel_transform);
  __n128 v69 = v51;
  __n128 v70 = v50;
  __n128 v67 = v52;
  __n128 v64 = v53;
  objc_msgSend(a1, sel_timestamp);
  double v55 = v54;
  objc_msgSend(a1, sel_corner);
  __n128 v63 = v56;
  objc_msgSend(a1, sel_extent);
  __n128 v62 = v57;
  char v58 = sub_24B5AACAC();
  __n128 v59 = sub_24B611ED4(v43, (uint64_t)v45, (uint64_t)v71, (uint64_t)v47, (uint64_t)v49, v58 & 1, v41, v70, v69, v67, v64, v55, v63, v62);
  (*(void (**)(unint64_t, uint64_t, __n128))(v30 + 8))(v33, v31, v59);
  uint64_t v60 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v41, 0, 1, v60);
}

uint64_t sub_24B577948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>, __n128 a8@<Q1>, __n128 a9@<Q2>, __n128 a10@<Q3>, double a11@<D4>, __n128 a12@<Q5>, __n128 a13@<Q6>)
{
  __n128 v89 = a12;
  __n128 v90 = a13;
  __n128 v87 = a9;
  __n128 v88 = a10;
  __n128 v86 = a8;
  __n128 v85 = a7;
  uint64_t v95 = a6;
  uint64_t v96 = a5;
  id v92 = a3;
  uint64_t v93 = a2;
  uint64_t v16 = sub_24B6824D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v94 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v91 = (char *)&v81 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v83 = (char *)&v81 - v22;
  uint64_t v23 = sub_24B682410();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  float v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  os_log_type_t v84 = (char *)&v81 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  long long v82 = (char *)&v81 - v31;
  MEMORY[0x270FA5388](v30);
  unint64_t v33 = (char *)&v81 - v32;
  uint64_t v34 = *(uint64_t (**)(uint64_t))(*(void *)a4 + 264);
  uint64_t v35 = (char *)v34(a1);
  if (!v35)
  {
    uint64_t v46 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v94, v46, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, v96, v23);
    id v47 = sub_24B6824B0();
    os_log_type_t v48 = sub_24B682B20();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      v98[0] = v96;
      *(_DWORD *)uint64_t v49 = 136380931;
      uint64_t v93 = v16;
      uint64_t v97 = sub_24B5627B8(0xD00000000000005ALL, 0x800000024B68B8C0, v98);
      sub_24B682CD0();
      *(_WORD *)(v49 + 12) = 2082;
      sub_24B57C350(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v50 = sub_24B682F90();
      uint64_t v97 = sub_24B5627B8(v50, v51, v98);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      _os_log_impl(&dword_24B55E000, v47, v48, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex positions!", (uint8_t *)v49, 0x16u);
      uint64_t v52 = v96;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v52, -1, -1);
      MEMORY[0x24C5D6C00](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v94, v93);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v94, v16);
    }
LABEL_15:
    uint64_t v80 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v95, 1, 1, v80);
  }
  id v94 = v35;
  uint64_t v36 = v24;
  uint64_t v37 = v34(v93);
  if (v37)
  {
    os_log_type_t v38 = (void *)v37;
    uint64_t v39 = v34((uint64_t)v92);
    if (v39)
    {
      uint64_t v40 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v33, v96, v23);
      char v41 = sub_24B5AACAC();
      uint64_t v42 = (uint64_t)v38;
      uint64_t v43 = v95;
      sub_24B611ED4((uint64_t)v33, (uint64_t)v94, v42, v40, 0, v41 & 1, v95, v85, v86, v87, v88, a11, v89, v90);
      uint64_t v44 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 0, 1, v44);
    }
    id v92 = v38;
    uint64_t v65 = sub_24B57CCC8();
    uint64_t v66 = v83;
    uint64_t v67 = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v83, v65, v16);
    uint64_t v68 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v82, v96, v23);
    __n128 v69 = sub_24B6824B0();
    os_log_type_t v70 = sub_24B682B20();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v91 = (char *)v23;
      uint64_t v72 = v71;
      uint64_t v73 = swift_slowAlloc();
      uint64_t v93 = v67;
      uint64_t v96 = v73;
      v98[0] = v73;
      *(_DWORD *)uint64_t v72 = 136380931;
      uint64_t v97 = sub_24B5627B8(0xD00000000000005ALL, 0x800000024B68B8C0, v98);
      sub_24B682CD0();
      *(_WORD *)(v72 + 12) = 2082;
      sub_24B57C350(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v74 = v91;
      uint64_t v75 = sub_24B682F90();
      uint64_t v97 = sub_24B5627B8(v75, v76, v98);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v36 + 8))(v68, v74);
      _os_log_impl(&dword_24B55E000, v69, v70, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex normals!", (uint8_t *)v72, 0x16u);
      uint64_t v77 = v96;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v77, -1, -1);
      MEMORY[0x24C5D6C00](v72, -1, -1);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v83, v93);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v68, v23);

      (*(void (**)(char *, uint64_t))(v17 + 8))(v66, v67);
    }
    goto LABEL_15;
  }
  uint64_t v53 = sub_24B57CCC8();
  double v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  double v55 = v91;
  uint64_t v93 = v16;
  v54(v91, v53, v16);
  uint64_t v56 = v36;
  __n128 v57 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  char v58 = v84;
  v57(v84, v96, v23);
  __n128 v59 = sub_24B6824B0();
  os_log_type_t v60 = sub_24B682B20();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    v98[0] = v96;
    *(_DWORD *)uint64_t v61 = 136380931;
    uint64_t v97 = sub_24B5627B8(0xD00000000000005ALL, 0x800000024B68B8C0, v98);
    sub_24B682CD0();
    *(_WORD *)(v61 + 12) = 2082;
    sub_24B57C350(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v62 = sub_24B682F90();
    uint64_t v97 = sub_24B5627B8(v62, v63, v98);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v23);
    _os_log_impl(&dword_24B55E000, v59, v60, "%{private}s: Failed to create mesh anchor %{public}s from mutable data - failed to create buffer for vertex colors!", (uint8_t *)v61, 0x16u);
    uint64_t v64 = v96;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v64, -1, -1);
    MEMORY[0x24C5D6C00](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v91, v93);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v23);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v55, v93);
  }
  uint64_t v78 = v95;
  uint64_t v79 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 1, 1, v79);
}

uint64_t sub_24B5783B8(uint64_t a1)
{
  CGColorSpaceRef v2 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)v57 - v6;
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v57 - v13;
  uint64_t v15 = *(void **)(a1 + v2[8]);
  if (!v15)
  {
    uint64_t v37 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v37, v8);
    sub_24B57C210(a1, (uint64_t)v5);
    os_log_type_t v38 = sub_24B6824B0();
    os_log_type_t v39 = sub_24B682B20();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v65 = v41;
      *(_DWORD *)uint64_t v40 = 136380931;
      uint64_t v61 = v9;
      uint64_t v64 = sub_24B5627B8(0xD000000000000012, 0x800000024B68B970, &v65);
      uint64_t v62 = v8;
      sub_24B682CD0();
      *(_WORD *)(v40 + 12) = 2082;
      sub_24B682410();
      sub_24B57C350(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v42 = sub_24B682F90();
      uint64_t v64 = sub_24B5627B8(v42, v43, &v65);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B57C274((uint64_t)v5);
      _os_log_impl(&dword_24B55E000, v38, v39, "%{private}s: Failed to get mesh anchor from tri mesh - missing faces in the mesh anchor %{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v41, -1, -1);
      MEMORY[0x24C5D6C00](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v62);
    }
    else
    {
      sub_24B57C274((uint64_t)v5);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    return 0;
  }
  uint64_t v61 = v9;
  uint64_t v16 = *(void **)(a1 + v2[5]);
  id v63 = v15;
  uint64_t v17 = (uint64_t)objc_msgSend(v16, sel_count);
  uint64_t v18 = 3 * v17;
  if ((unsigned __int128)(v17 * (__int128)3) >> 64 != (3 * v17) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  os_log_type_t v60 = v14;
  uint64_t v62 = v8;
  if (v18 < 0) {
    goto LABEL_18;
  }
  id v19 = objc_msgSend(v16, sel_buffer);
  id v20 = objc_msgSend(v19, sel_contents);
  id v21 = v19;
  id v22 = objc_msgSend(*(id *)(a1 + v2[6]), sel_buffer);
  id v23 = objc_msgSend(v22, sel_contents);
  id v24 = v22;
  id v25 = objc_msgSend(*(id *)(a1 + v2[7]), sel_buffer);
  id v26 = objc_msgSend(v25, sel_contents);
  id v27 = v25;
  id v28 = v63;
  uint64_t v29 = (uint64_t)objc_msgSend(v63, sel_count);
  uint64_t v30 = 3 * v29;
  if ((unsigned __int128)(v29 * (__int128)3) >> 64 != (3 * v29) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __n128 v59 = v7;
  if ((v30 & 0x8000000000000000) == 0)
  {
    id v31 = objc_msgSend(v28, sel_buffer);
    uint64_t v32 = v28;
    id v33 = objc_msgSend(v31, sel_contents);
    id v34 = v31;
    id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F848]), sel_init);
    objc_msgSend(v35, sel_setPositions_size_, v20, v18);
    objc_msgSend(v35, sel_setVertexColors_size_, v23, v18);
    objc_msgSend(v35, sel_setVertexNormals_size_, v26, v18);
    objc_msgSend(v35, sel_setFaces_size_, v33, v30);
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F850]), sel_init);
    if (objc_msgSend(v35, sel_create_, v36))
    {

      return (uint64_t)v36;
    }
    uint64_t v44 = sub_24B57CCC8();
    uint64_t v46 = v60;
    uint64_t v45 = v61;
    uint64_t v47 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v60, v44, v62);
    uint64_t v48 = (uint64_t)v59;
    sub_24B57C210(a1, (uint64_t)v59);
    uint64_t v49 = sub_24B6824B0();
    os_log_type_t v50 = sub_24B682B20();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v65 = v58;
      *(_DWORD *)uint64_t v51 = 136380931;
      uint64_t v52 = v45;
      uint64_t v64 = sub_24B5627B8(0xD000000000000012, 0x800000024B68B970, &v65);
      sub_24B682CD0();
      *(_WORD *)(v51 + 12) = 2082;
      v57[1] = v51 + 14;
      sub_24B682410();
      sub_24B57C350(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v53 = sub_24B682F90();
      uint64_t v64 = sub_24B5627B8(v53, v54, &v65);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B57C274(v48);
      _os_log_impl(&dword_24B55E000, v49, v50, "%{private}s: Failed to create tri mesh for anchor %{public}s", (uint8_t *)v51, 0x16u);
      uint64_t v55 = v58;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v55, -1, -1);
      MEMORY[0x24C5D6C00](v51, -1, -1);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v60, v62);
    }
    else
    {

      sub_24B57C274(v48);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    }
    return 0;
  }
LABEL_18:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

float32x2_t sub_24B578B80()
{
  return vadd_f32(v0[2], v0[4]);
}

double sub_24B578BA4()
{
  return sub_24B5FDBDC(v0[2]);
}

BOOL sub_24B578BAC()
{
  float v1 = (*(float (**)(void))(*(void *)v0 + 112))();
  float v2 = *(float *)sub_24B5F66A0();
  float v3 = sub_24B5FDDD8();

  return sub_24B5FDDE8(v2, v3, v1);
}

float32x4_t *sub_24B578C18(float32x4_t a1, float32x4_t a2)
{
  return sub_24B578C5C(a1, a2);
}

float32x4_t *sub_24B578C5C(float32x4_t a1, float32x4_t a2)
{
  float v3 = v2;
  float32x4_t v39 = a1;
  int8x16_t v40 = (int8x16_t)a2;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (const float *)sub_24B5F66A0();
  float32x4_t v9 = vld1q_dup_f32(v8);
  v9.i32[3] = 0;
  v2[3] = v9;
  int32x4_t v10 = (int32x4_t)vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f32(v39), (int8x16_t)vcgezq_f32(v39)));
  BOOL v15 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v10.i8, 1), v10).u32[0] == (vmovn_s32(v10).i32[1] & 1);
  float32x4_t v11 = (float32x4_t)vdupq_n_s32(0x7F800000u);
  int32x4_t v12 = vceqq_f32(vabsq_f32(v39), v11);
  unsigned __int32 v13 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v12.i8, 1), v12).u32[0];
  __int32 v14 = vmovn_s32(v12).i32[1] & 1;
  BOOL v15 = v15 && v13 == v14;
  int32x4_t v16 = (int32x4_t)vmvnq_s8(vorrq_s8((int8x16_t)vcltzq_f32((float32x4_t)v40), (int8x16_t)vcgezq_f32((float32x4_t)v40)));
  unsigned __int32 v17 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v16.i8, 1), v16).u32[0];
  __int32 v18 = vmovn_s32(v16).i32[1] & 1;
  BOOL v19 = v15 && v17 == v18;
  int32x4_t v20 = vceqq_f32(vabsq_f32((float32x4_t)v40), v11);
  unsigned __int32 v21 = vaddq_s32(vdupq_lane_s32(*(int32x2_t *)v20.i8, 1), v20).u32[0];
  __int32 v22 = vmovn_s32(v20).i32[1] & 1;
  BOOL v23 = v19 && v21 == v22;
  if (v23
    && *(float *)v40.i32 >= 0.0
    && (int8x16_t v34 = v40,
        v34.i32[0] = vextq_s8(v34, v34, 8uLL).u32[0],
        int32x2_t v35 = vcgez_f32(*(float32x2_t *)v34.i8),
        (v35.i8[4] & 1) != 0)
    && (v35.i8[0] & 1) != 0)
  {
    float32x4_t v36 = (float32x4_t)v40;
    v2[1] = v39;
    v2[2] = v36;
  }
  else
  {
    uint64_t v24 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
    id v25 = sub_24B6824B0();
    os_log_type_t v26 = sub_24B682B20();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v42 = v38;
      *(_DWORD *)uint64_t v27 = 136381187;
      v41.i64[0] = sub_24B5627B8(0xD000000000000017, 0x800000024B68B990, &v42);
      sub_24B682CD0();
      *(_WORD *)(v27 + 12) = 2082;
      float32x4_t v41 = v39;
      sub_24B562F04((uint64_t *)&unk_2697CC440);
      sub_24B57C2F4();
      v39.i64[0] = v4;
      uint64_t v28 = sub_24B682FD0();
      v41.i64[0] = sub_24B5627B8(v28, v29, &v42);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2082;
      float32x4_t v41 = (float32x4_t)v40;
      uint64_t v30 = sub_24B682FD0();
      v41.i64[0] = sub_24B5627B8(v30, v31, &v42);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v25, v26, "AABB.%{private}s: Invalid minCorner %{public}s or extent %{public}s for AABB!", (uint8_t *)v27, 0x20u);
      uint64_t v32 = v38;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v32, -1, -1);
      MEMORY[0x24C5D6C00](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v39.i64[0]);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    type metadata accessor for MeshUtils.AABB();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_24B579054(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  uint64_t v7 = v6;
  float32x4_t v39 = a6;
  float32x4_t v38 = a5;
  float32x4_t v37 = a4;
  float32x4_t v36 = a3;
  __n128 v42 = (__n128)a1;
  long long v43 = (__int128)a2;
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  float32x4_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_24B5FAC44(v36, v37, v38, (int8x16_t)v39) & 1) == 0)
  {
    uint64_t v26 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
    uint64_t v27 = sub_24B6824B0();
    os_log_type_t v28 = sub_24B682B20();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v44.i64[0] = v30;
      *(_DWORD *)uint64_t v29 = 136380931;
      v45.i64[0] = sub_24B5627B8(0xD000000000000021, 0x800000024B68B9B0, (uint64_t *)&v44);
      sub_24B682CD0();
      *(_WORD *)(v29 + 12) = 2082;
      float32x4_t v45 = v36;
      float32x4_t v46 = v37;
      float32x4_t v47 = v38;
      float32x4_t v48 = v39;
      type metadata accessor for simd_float4x4(0);
      uint64_t v31 = sub_24B682820();
      v45.i64[0] = sub_24B5627B8(v31, v32, (uint64_t *)&v44);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v27, v28, "AABB.%{private}s: Invalid transform %{public}s for creating AABB from OBB!", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v30, -1, -1);
      MEMORY[0x24C5D6C00](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  int32x4_t v12 = sub_24B578C5C((float32x4_t)v42, (float32x4_t)v43);
  if (!v12) {
    return 0;
  }
  uint64_t v13 = (*(uint64_t (**)(void))(v12->i64[0] + 136))();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = 0;
    float32x4_t v16 = (float32x4_t)xmmword_24B6856F0;
    long long v43 = xmmword_24B685700;
    do
    {
      float32x4_t v41 = (float32x4_t)v43;
      __n128 v42 = (__n128)v16;
      float32x4_t v40 = v16;
      float32x4_t v17 = *(float32x4_t *)(v13 + 16 * v15++ + 32);
      float32x4_t v44 = vaddq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v36, v17.f32[0]), v37, *(float32x2_t *)v17.f32, 1), v38, v17, 2), v39);
      uint64_t v18 = sub_24B562F04(&qword_2697CC450);
      sub_24B5FDBE8(v18);
      float32x4_t v19 = (float32x4_t)v42;
      v19.i32[3] = 0;
      float32x4_t v20 = v45;
      v20.i32[3] = 0;
      float32x4_t v16 = vminnmq_f32(v19, v20);
      v16.i32[3] = v40.i32[3];
      float32x4_t v21 = (float32x4_t)v43;
      v21.i32[3] = 0;
      float32x4_t v22 = vmaxnmq_f32(v21, v20);
      v22.i32[3] = v41.i32[3];
      long long v43 = (__int128)v22;
    }
    while (v14 != v15);
    __n128 v42 = (__n128)v16;
    uint64_t v23 = swift_bridgeObjectRelease();
    __n128 v24 = v42;
    float32x4_t v25 = (float32x4_t)v43;
  }
  else
  {
    uint64_t v23 = swift_bridgeObjectRelease();
    __n128 v24 = (__n128)xmmword_24B6856F0;
    float32x4_t v25 = (float32x4_t)xmmword_24B685700;
  }
  __n128 v34 = (__n128)vsubq_f32(v25, (float32x4_t)v24);
  v34.n128_u32[3] = 0;
  uint64_t v33 = (*(uint64_t (**)(uint64_t, __n128, __n128))(v7 + 128))(v23, v24, v34);
  swift_retain();
  swift_release();
  if (v33) {
    swift_release();
  }
  return v33;
}

void *sub_24B57947C()
{
  float32x4_t v60 = v0[1];
  float v1 = sub_24B57C038(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    float v1 = sub_24B57C038((void *)(v2 > 1), v3 + 1, 1, v1);
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
  }
  v1[2] = v5;
  float32x4_t v6 = v60;
  *(float32x4_t *)&v1[2 * v3 + 4] = v60;
  float32x4_t v7 = v0[2];
  unint64_t v8 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    float32x4_t v53 = v7;
    uint64_t v31 = sub_24B57C038((void *)(v2 > 1), v3 + 2, 1, v1);
    float32x4_t v7 = v53;
    float32x4_t v6 = v60;
    float v1 = v31;
  }
  float32x4_t v9 = vaddq_f32(v6, v7);
  long long v10 = v9.u32[0];
  float v11 = v6.f32[1] + 0.0;
  long long v12 = v9.u32[0];
  *((float *)&v12 + 1) = v6.f32[1] + 0.0;
  float v13 = v6.f32[2] + 0.0;
  long long v14 = v12;
  *((float *)&v14 + 2) = v6.f32[2] + 0.0;
  v1[2] = v8;
  *(_OWORD *)&v1[2 * v5 + 4] = v14;
  unint64_t v15 = v1[3];
  unint64_t v16 = v3 + 3;
  if ((uint64_t)(v3 + 3) > (uint64_t)(v15 >> 1))
  {
    long long v48 = v9.u32[0];
    float32x4_t v54 = v9;
    float v41 = v6.f32[1] + 0.0;
    long long v44 = v12;
    float v38 = v6.f32[2] + 0.0;
    unint64_t v32 = sub_24B57C038((void *)(v15 > 1), v3 + 3, 1, v1);
    float v13 = v38;
    float v11 = v41;
    long long v12 = v44;
    long long v10 = v48;
    v6.i32[0] = v60.i32[0];
    float32x4_t v9 = v54;
    float v1 = v32;
  }
  DWORD1(v10) = v9.i32[1];
  long long v17 = v10;
  *((float *)&v17 + 2) = v13;
  v1[2] = v16;
  *(_OWORD *)&v1[2 * v8 + 4] = v17;
  unint64_t v18 = v1[3];
  unint64_t v19 = v3 + 4;
  if ((uint64_t)(v3 + 4) > (uint64_t)(v18 >> 1))
  {
    long long v49 = v10;
    float32x4_t v55 = v9;
    float v42 = v11;
    long long v45 = v12;
    float v39 = v13;
    uint64_t v33 = sub_24B57C038((void *)(v18 > 1), v3 + 4, 1, v1);
    float v13 = v39;
    float v11 = v42;
    long long v12 = v45;
    long long v10 = v49;
    v6.i32[0] = v60.i32[0];
    float32x4_t v9 = v55;
    float v1 = v33;
  }
  v6.i32[1] = 0;
  v6.i64[1] = 0;
  v6.f32[0] = v6.f32[0] + 0.0;
  long long v21 = v6.u32[0];
  DWORD1(v21) = v9.i32[1];
  long long v22 = v21;
  *((float *)&v22 + 2) = v13;
  v1[2] = v19;
  *(_OWORD *)&v1[2 * v16 + 4] = v22;
  unint64_t v23 = v1[3];
  unint64_t v24 = v3 + 5;
  if ((uint64_t)(v3 + 5) > (uint64_t)(v23 >> 1))
  {
    long long v50 = v10;
    __int32 v56 = v9.i32[2];
    long long v46 = v12;
    long long v61 = v21;
    float32x4_t v40 = v6;
    float v43 = v11;
    __n128 v34 = sub_24B57C038((void *)(v23 > 1), v3 + 5, 1, v1);
    float32x4_t v6 = v40;
    float v11 = v43;
    long long v21 = v61;
    long long v12 = v46;
    long long v10 = v50;
    v9.i32[2] = v56;
    float v1 = v34;
  }
  v6.f32[1] = v11;
  v6.i32[2] = v9.i32[2];
  v1[2] = v24;
  *(float32x4_t *)&v1[2 * v19 + 4] = v6;
  unint64_t v25 = v1[3];
  unint64_t v26 = v3 + 6;
  if ((uint64_t)(v3 + 6) > (uint64_t)(v25 >> 1))
  {
    long long v51 = v10;
    __int32 v57 = v9.i32[2];
    long long v47 = v12;
    long long v62 = v21;
    int32x2_t v35 = sub_24B57C038((void *)(v25 > 1), v3 + 6, 1, v1);
    long long v21 = v62;
    long long v12 = v47;
    long long v10 = v51;
    v9.i32[2] = v57;
    float v1 = v35;
  }
  DWORD2(v12) = v9.i32[2];
  v1[2] = v26;
  *(_OWORD *)&v1[2 * v24 + 4] = v12;
  unint64_t v27 = v1[3];
  unint64_t v28 = v3 + 7;
  if ((uint64_t)(v3 + 7) > (uint64_t)(v27 >> 1))
  {
    long long v52 = v10;
    __int32 v58 = v9.i32[2];
    long long v63 = v21;
    float32x4_t v36 = sub_24B57C038((void *)(v27 > 1), v3 + 7, 1, v1);
    long long v21 = v63;
    long long v10 = v52;
    v9.i32[2] = v58;
    float v1 = v36;
  }
  DWORD2(v10) = v9.i32[2];
  v1[2] = v28;
  *(_OWORD *)&v1[2 * v26 + 4] = v10;
  unint64_t v29 = v1[3];
  if ((uint64_t)(v3 + 8) > (uint64_t)(v29 >> 1))
  {
    __int32 v59 = v9.i32[2];
    long long v64 = v21;
    float32x4_t v37 = sub_24B57C038((void *)(v29 > 1), v3 + 8, 1, v1);
    long long v21 = v64;
    v9.i32[2] = v59;
    float v1 = v37;
  }
  DWORD2(v21) = v9.i32[2];
  v1[2] = v3 + 8;
  *(_OWORD *)&v1[2 * v28 + 4] = v21;
  return v1;
}

float32x4_t *sub_24B5797AC(float32x2_t *a1)
{
  long long v15 = *(_OWORD *)a1[2].f32;
  long long v17 = *(_OWORD *)v1[2].f32;
  char v3 = (*(uint64_t (**)(void))(*(void *)v1 + 120))();
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v1 + 104))();
  if (v3)
  {
    *(float32x2_t *)&long long v5 = vadd_f32(*(float32x2_t *)&v5, v1[6]);
    *((float *)&v5 + 2) = *((float *)&v5 + 2) + v1[7].f32[0];
    HIDWORD(v5) = 0;
  }
  long long v14 = v5;
  char v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(v4);
  (*(void (**)(void))(*(void *)a1 + 104))();
  if (v6)
  {
    float32x2_t v7 = vadd_f32(v7, a1[6]);
    float v8 = v8 + a1[7].f32[0];
  }
  *(int8x8_t *)v9.f32 = vbsl_s8((int8x8_t)vcge_f32(*(float32x2_t *)&v15, *(float32x2_t *)&v17), *(int8x8_t *)&v15, *(int8x8_t *)&v17);
  float v10 = *((float *)&v17 + 2);
  if (*((float *)&v17 + 2) <= *((float *)&v15 + 2)) {
    float v10 = *((float *)&v15 + 2);
  }
  float v11 = *((float *)&v14 + 2);
  if (v8 < *((float *)&v14 + 2)) {
    float v11 = v8;
  }
  *(float32x2_t *)v12.f32 = vsub_f32((float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(*(float32x2_t *)&v14, v7), (int8x8_t)v7, *(int8x8_t *)&v14), *(float32x2_t *)v9.f32);
  if (v12.f32[0] < 0.0 || v12.f32[1] < 0.0 || (float)(v11 - v10) < 0.0) {
    return 0;
  }
  v12.i64[1] = COERCE_UNSIGNED_INT(v11 - v10);
  v9.i64[1] = LODWORD(v10);
  float32x4_t v16 = v9;
  float32x4_t v18 = v12;
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  return sub_24B578C5C(v16, v18);
}

void sub_24B579960()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 144))();
  if (v1)
  {
    uint64_t v2 = v1;
    if ((*(uint64_t (**)(void))(*(void *)v0 + 120))())
    {
      *(float32x2_t *)v3.f32 = vadd_f32(v0[4], v0[6]);
      v3.f32[2] = v0[5].f32[0] + v0[7].f32[0];
      v3.i32[3] = 0;
      double v4 = sub_24B5FDBDC(v3);
    }
    else
    {
      *(float *)&double v4 = (*(float (**)(void))(*(void *)v0 + 112))();
    }
    float v5 = *(float *)&v4;
    if (*(float *)&v4 <= 0.0)
    {
      __break(1u);
    }
    else
    {
      float v6 = (*(float (**)(void))(*(void *)v2 + 112))();
      sub_24B5F8C18(v6 / v5, 0.0, 1.0);
      swift_release();
    }
  }
}

uint64_t sub_24B579A84()
{
  return swift_deallocClassInstance();
}

float32x4_t *sub_24B579A94()
{
  *(__n64 *)v0.f32 = OCBoundingBox.extent.getter();
  float32x4_t v4 = v0;
  *(float32x2_t *)v1.f32 = vmul_f32(vsub_f32(0, *(float32x2_t *)v0.f32), (float32x2_t)0x3F0000003F000000);
  v1.f32[2] = (float)(0.0 - v0.f32[2]) * 0.5;
  v1.i32[3] = 0;
  float32x4_t v3 = v1;
  type metadata accessor for MeshUtils.AABB();
  swift_allocObject();
  return sub_24B578C5C(v3, v4);
}

uint64_t sub_24B579B20(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  uint64_t v6 = v5;
  type metadata accessor for MeshUtils.AABB();
  uint64_t v8 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t result = sub_24B579054(*(float32x4_t *)(a1 + *(int *)(v8 + 44)), *(float32x4_t *)(a1 + *(int *)(v8 + 48)), a2, a3, a4, a5);
  if (result)
  {
    (*(void (**)(void))(*(void *)v6 + 152))();
    return swift_release();
  }
  return result;
}

uint64_t sub_24B579BD8(uint64_t *a1, char *a2, int a3)
{
  int v230 = a3;
  v248[2] = *MEMORY[0x263EF8340];
  uint64_t v227 = sub_24B682810();
  uint64_t v5 = *(void *)(v227 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v227);
  unint64_t v216 = (char *)&v192 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v225 = (char *)&v192 - v8;
  unint64_t v236 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v233 = *((void *)v236 - 1);
  MEMORY[0x270FA5388](v236);
  uint64_t v237 = (uint64_t)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_24B6822E0();
  uint64_t v235 = *(void *)(v234 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v234);
  uint64_t v215 = (char *)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v217 = (char *)&v192 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  float32x4_t v16 = (char *)&v192 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v214 = (char *)&v192 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  long long v21 = (char *)&v192 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v224 = (char *)&v192 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v228 = (char *)&v192 - v25;
  MEMORY[0x270FA5388](v24);
  v242.i64[0] = (uint64_t)&v192 - v26;
  uint64_t v27 = sub_24B6824D0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v192 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  float32x4_t v36 = (char *)&v192 - v35;
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = MEMORY[0x270FA5388]((char *)&v192 - v38);
  long long v44 = (char *)&v192 - v43;
  uint64_t v45 = *a1;
  uint64_t v226 = *(void *)(*a1 + 16);
  if (!v226)
  {
    uint64_t v80 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v33, v80, v27);
    uint64_t v81 = sub_24B6824B0();
    os_log_type_t v82 = sub_24B682B20();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      v248[0] = v84;
      *(_DWORD *)uint64_t v83 = 136380675;
      uint64_t v245 = sub_24B5627B8(0xD000000000000021, 0x800000024B68B9E0, v248);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v81, v82, "MeshWriter.%{private}s: Failed to save mesh anchors - received empty mesh anchors!", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v84, -1, -1);
      MEMORY[0x24C5D6C00](v83, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
    return 0;
  }
  v241.i64[0] = v5;
  uint64_t v46 = v28;
  uint64_t v231 = v39;
  uint64_t v212 = v45;
  uint64_t v201 = v42;
  uint64_t v203 = v41;
  uint64_t v202 = v40;
  char v244 = 0;
  id v47 = objc_msgSend(self, sel_defaultManager);
  v232 = a2;
  sub_24B6822C0();
  long long v48 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  unsigned int v49 = objc_msgSend(v47, sel_fileExistsAtPath_isDirectory_, v48, &v244);

  if (!v49 || v244 != 1)
  {
    uint64_t v70 = sub_24B57CCC8();
    uint64_t v71 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v36, v70, v27);
    uint64_t v72 = v235;
    uint64_t v73 = v234;
    (*(void (**)(char *, char *, uint64_t))(v235 + 16))(v16, v232, v234);
    uint64_t v74 = sub_24B6824B0();
    os_log_type_t v75 = sub_24B682B20();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = swift_slowAlloc();
      v242.i64[0] = swift_slowAlloc();
      v248[0] = v242.i64[0];
      *(_DWORD *)uint64_t v76 = 136380931;
      uint64_t v245 = sub_24B5627B8(0xD000000000000021, 0x800000024B68B9E0, v248);
      uint64_t v218 = v71;
      sub_24B682CD0();
      *(_WORD *)(v76 + 12) = 2081;
      uint64_t v229 = v27;
      sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
      uint64_t v77 = sub_24B682F90();
      uint64_t v245 = sub_24B5627B8(v77, v78, v248);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v73);
      _os_log_impl(&dword_24B55E000, v74, v75, "MeshWriter.%{private}s: Failed to save mesh anchors - %{private}s is not a directory!", (uint8_t *)v76, 0x16u);
      uint64_t v79 = v242.i64[0];
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v79, -1, -1);
      MEMORY[0x24C5D6C00](v76, -1, -1);

      (*(void (**)(char *, uint64_t))(v218 + 8))(v36, v229);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v73);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v27);
    }
    return 0;
  }
  unint64_t v193 = v21;
  uint64_t v50 = sub_24B57CCC8();
  uint64_t v51 = v46;
  long long v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
  uint64_t v206 = v50;
  uint64_t v208 = v46 + 16;
  id v207 = v52;
  ((void (*)(char *))v52)(v44);
  uint64_t v53 = v235;
  float32x4_t v54 = *(void (**)(char *, char *, uint64_t))(v235 + 16);
  uint64_t v55 = v242.i64[0];
  uint64_t v56 = v234;
  uint64_t v210 = v235 + 16;
  float v209 = v54;
  v54((char *)v242.i64[0], v232, v234);
  __int32 v57 = sub_24B6824B0();
  os_log_type_t v58 = sub_24B682B30();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v229 = v27;
  if (v59)
  {
    uint64_t v60 = swift_slowAlloc();
    v240.i64[0] = swift_slowAlloc();
    v248[0] = v240.i64[0];
    *(_DWORD *)uint64_t v60 = 136380931;
    uint64_t v245 = sub_24B5627B8(0xD000000000000021, 0x800000024B68B9E0, v248);
    sub_24B682CD0();
    *(_WORD *)(v60 + 12) = 2081;
    v239.i64[0] = v60 + 14;
    sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v61 = sub_24B682F90();
    uint64_t v245 = sub_24B5627B8(v61, v62, v248);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    long long v63 = *(void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v235 = v53 + 8;
    v211 = v63;
    v63((char *)v55, v56);
    _os_log_impl(&dword_24B55E000, v57, v58, "MeshWriter.%{private}s: Saving mesh anchor at URL: %{private}s", (uint8_t *)v60, 0x16u);
    uint64_t v64 = v240.i64[0];
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v64, -1, -1);
    MEMORY[0x24C5D6C00](v60, -1, -1);

    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    uint64_t v66 = v51 + 8;
    uint64_t v65 = v67;
    uint64_t v68 = v44;
    uint64_t v69 = v229;
  }
  else
  {
    __n128 v86 = *(void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v64 = v53 + 8;
    uint64_t v235 = v64;
    v211 = v86;
    v86((char *)v55, v56);

    __n128 v87 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    uint64_t v66 = v51 + 8;
    uint64_t v65 = v87;
    uint64_t v68 = v44;
    uint64_t v69 = v27;
  }
  uint64_t v218 = v66;
  unint64_t v204 = v65;
  v65((uint64_t)v68, v69);
  uint64_t v213 = v212 + ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80));
  v205 = (void (**)(int *, uint64_t))(v241.i64[0] + 8);
  v199 = &v246;
  swift_bridgeObjectRetain();
  uint64_t v195 = 0;
  uint64_t v88 = 0;
  unint64_t v89 = 0;
  uint64_t v222 = 0;
  *(void *)&long long v90 = 136380931;
  long long v200 = v90;
  unint64_t v194 = (unint64_t)"xtent:transform:)";
  unint64_t v198 = 0x800000024B68B9E0;
  uint64_t v197 = MEMORY[0x263F8EE58] + 8;
  uint64_t v91 = 32;
  unint64_t v196 = 0xE000000000000000;
  while (2)
  {
    unint64_t v92 = v89;
    while (1)
    {
      if (__OFADD__(v92, 1)) {
        goto LABEL_62;
      }
      unint64_t v219 = v92 + 1;
      uint64_t v94 = v237;
      sub_24B57C210(v213 + *(void *)(v233 + 72) * v92, v237);
      uint64_t v95 = v236;
      uint64_t v96 = *(void **)(v94 + v236[5]);
      uint64_t v97 = *(void **)(v94 + v236[6]);
      int v98 = (float32x4_t *)(v94 + v236[9]);
      float32x4_t v99 = *v98;
      float32x4_t v240 = v98[1];
      float32x4_t v241 = v99;
      float32x4_t v100 = v98[2];
      float32x4_t v238 = v98[3];
      float32x4_t v239 = v100;
      id v101 = v96;
      id v102 = v97;
      uint64_t v220 = sub_24B57BC4C(v101, v97);
      uint64_t v221 = v103;
      unint64_t v223 = v104;

      id v105 = *(id *)(v94 + v95[7]);
      v248[0] = 0;
      v248[1] = 0xE000000000000000;
      uint64_t v106 = (uint64_t)objc_msgSend(v105, sel_count);
      unint64_t v92 = 0xFFFFFFFF80000000;
      if (v106 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_63;
      }
      int v107 = v106;
      unint64_t v92 = 0x7FFFFFFFLL;
      if (v106 > 0x7FFFFFFF) {
        goto LABEL_64;
      }
      if ((v106 & 0x80000000) != 0) {
        goto LABEL_65;
      }
      if (v106)
      {
        int v108 = 0;
        do
        {
          sub_24B682B50();
          uint64_t v245 = 0;
          unint64_t v246 = 0xE000000000000000;
          ++v108;
          float32x4_t v242 = vmlaq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v241, v109), v240, v110), v239, v111), (float32x4_t)0, v238);
          sub_24B682890();
          sub_24B682A70();
          sub_24B682890();
          sub_24B682A70();
          sub_24B682890();
          sub_24B682A70();
          sub_24B682890();
          sub_24B682890();
          swift_bridgeObjectRelease();
        }
        while (v107 != v108);
        uint64_t v113 = v248[0];
        uint64_t v112 = v248[1];
        uint64_t v91 = 32;
      }
      else
      {
        uint64_t v113 = 0;
        uint64_t v112 = 0xE000000000000000;
      }
      id v114 = objc_msgSend(v105, sel_count);

      unint64_t v92 = v223;
      if ((id)v223 != v114) {
        goto LABEL_66;
      }
      os_log_type_t v115 = *(void **)(v237 + v236[8]);
      v241.i64[0] = v112;
      v240.i64[0] = v113;
      if (v115)
      {
        id v116 = v115;
        v248[0] = 0;
        v248[1] = 0xE000000000000000;
        v242.i64[0] = (uint64_t)v116;
        uint64_t v117 = (uint64_t)objc_msgSend(v116, sel_count);
        if (v117 < 0) {
          goto LABEL_67;
        }
        uint64_t v64 = v117;
        if (v117)
        {
          uint64_t v118 = 0;
          while (1)
          {
            uint64_t v119 = sub_24B682B60();
            sub_24B682890();
            uint64_t v120 = *(void *)(v119 + 16);
            if (v120) {
              break;
            }
LABEL_32:
            ++v118;
            swift_bridgeObjectRelease();
            sub_24B682890();
            if (v118 == (char *)v64) {
              goto LABEL_42;
            }
          }
          unint64_t v92 = 0xFFFFFFFF80000000;
          if (v88 < (uint64_t)0xFFFFFFFF80000000)
          {
            __break(1u);
          }
          else
          {
            unint64_t v92 = 0x7FFFFFFFLL;
            if (v88 <= 0x7FFFFFFF)
            {
              long long v121 = (int *)(v119 + 32);
              while (1)
              {
                int v122 = *v121++;
                uint64_t v245 = 32;
                unint64_t v246 = 0xE100000000000000;
                int v123 = v122 + 1;
                if (__OFADD__(v122, 1)) {
                  break;
                }
                BOOL v124 = __OFADD__(v123, v88);
                int v125 = v123 + v88;
                if (v124) {
                  goto LABEL_53;
                }
                LODWORD(v247) = v125;
                sub_24B682F90();
                sub_24B682890();
                swift_bridgeObjectRelease();
                sub_24B682890();
                swift_bridgeObjectRelease();
                if (!--v120) {
                  goto LABEL_32;
                }
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              swift_bridgeObjectRelease();
              (*v205)(v121, v227);
              swift_bridgeObjectRelease();
              v248[0] = v222;
              sub_24B562F04(&qword_2697CC0A8);
              sub_24B57C4D8();
              swift_dynamicCast();
              swift_bridgeObjectRelease();
              uint64_t v158 = (void *)v245;
              uint64_t v159 = v203;
              uint64_t v160 = v229;
              v207(v203, v206, v229);
              uint64_t v161 = v217;
              uint64_t v162 = v118;
              __n128 v163 = v118;
              uint64_t v164 = v234;
              v209(v217, v162, v234);
              id v165 = v158;
              uint64_t v166 = sub_24B6824B0();
              os_log_type_t v167 = sub_24B682B20();
              if (os_log_type_enabled(v166, v167))
              {
                uint64_t v168 = swift_slowAlloc();
                v241.i64[0] = swift_slowAlloc();
                v242.i64[0] = swift_slowAlloc();
                uint64_t v247 = v242.i64[0];
                *(_DWORD *)uint64_t v168 = 136381187;
                uint64_t v243 = sub_24B5627B8(0xD000000000000021, v194 | 0x8000000000000000, &v247);
                sub_24B682CD0();
                *(_WORD *)(v168 + 12) = 2081;
                sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
                uint64_t v169 = sub_24B682F90();
                uint64_t v243 = sub_24B5627B8(v169, v170, &v247);
                sub_24B682CD0();
                swift_bridgeObjectRelease();
                v211(v161, v164);
                *(_WORD *)(v168 + 22) = 2112;
                uint64_t v243 = (uint64_t)v165;
                id v171 = v165;
                sub_24B682CD0();
                uint64_t v172 = v241.i64[0];
                *(void *)v241.i64[0] = v165;

                _os_log_impl(&dword_24B55E000, v166, v167, "MeshWriter.%{private}s: Failed to save mesh anchor at %{private}s. Error: %@", (uint8_t *)v168, 0x20u);
                sub_24B562F04((uint64_t *)&unk_2697CCE20);
                swift_arrayDestroy();
                MEMORY[0x24C5D6C00](v172, -1, -1);
                uint64_t v173 = v242.i64[0];
                swift_arrayDestroy();
                MEMORY[0x24C5D6C00](v173, -1, -1);
                MEMORY[0x24C5D6C00](v168, -1, -1);

                v204(v159, v229);
                v211(v228, v164);
              }
              else
              {

                uint64_t v174 = v211;
                v211(v161, v164);

                v204(v159, v160);
                v174(v163, v164);
              }
              sub_24B57C274(v237);
LABEL_59:

              return 0;
            }
          }
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_42:
        uint64_t v126 = (void *)v242.i64[0];
        objc_msgSend((id)v242.i64[0], sel_count);
      }
      if ((v230 & 1) == 0) {
        break;
      }
      v248[0] = v220;
      v248[1] = v221;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v128 = v248[0];
      uint64_t v127 = v248[1];
      sub_24B6823D0();
      strcpy((char *)v248, "mesh_anchor_");
      BYTE5(v248[1]) = 0;
      HIWORD(v248[1]) = -5120;
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v118 = v228;
      sub_24B682280();
      swift_bridgeObjectRelease();
      v248[0] = v128;
      v248[1] = v127;
      long long v121 = (int *)v225;
      sub_24B682800();
      sub_24B57C484();
      uint64_t v129 = v222;
      sub_24B682D20();
      uint64_t v222 = v129;
      if (v129) {
        goto LABEL_54;
      }
      (*v205)(v121, v227);
      swift_bridgeObjectRelease();
      uint64_t v130 = v229;
      v207(v231, v206, v229);
      unint64_t v131 = v224;
      uint64_t v132 = v234;
      v209(v224, v118, v234);
      uint64_t v133 = sub_24B6824B0();
      os_log_type_t v134 = sub_24B682B30();
      uint64_t v64 = v134;
      if (os_log_type_enabled(v133, v134))
      {
        uint64_t v135 = swift_slowAlloc();
        v241.i32[0] = v64;
        uint64_t v136 = v131;
        uint64_t v137 = v135;
        v242.i64[0] = swift_slowAlloc();
        v248[0] = v242.i64[0];
        *(_DWORD *)uint64_t v137 = v200;
        uint64_t v245 = sub_24B5627B8(0xD000000000000021, v198, v248);
        sub_24B682CD0();
        *(_WORD *)(v137 + 12) = 2081;
        v240.i64[0] = v137 + 14;
        sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
        uint64_t v138 = sub_24B682F90();
        uint64_t v245 = sub_24B5627B8(v138, v139, v248);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v140 = v118;
        uint64_t v141 = v211;
        v211(v136, v132);
        _os_log_impl(&dword_24B55E000, v133, (os_log_type_t)v241.i8[0], "MeshWriter.%{private}s: Saved mesh anchor at %{private}s", (uint8_t *)v137, 0x16u);
        uint64_t v64 = v242.i64[0];
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v64, -1, -1);
        MEMORY[0x24C5D6C00](v137, -1, -1);

        v204(v231, v229);
        v141(v140, v132);
      }
      else
      {

        uint64_t v93 = v211;
        v211(v131, v132);
        v204(v231, v130);
        v93(v118, v132);
      }
      sub_24B57C274(v237);
      unint64_t v92 = v219;
      if (v219 == v226)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    v248[0] = v195;
    v248[1] = v196;
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v195 = v248[0];
    unint64_t v196 = v248[1];
    sub_24B57C274(v237);
    BOOL v124 = __OFADD__(v88, v223);
    v88 += v223;
    if (v124) {
      __break(1u);
    }
    unint64_t v89 = v219;
    if (v219 != v226) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v91 = (uint64_t)v193;
  sub_24B682280();
  v248[0] = v195;
  v248[1] = v196;
  uint64_t v64 = (uint64_t)v216;
  sub_24B682800();
  sub_24B57C484();
  uint64_t v142 = v222;
  sub_24B682D20();
  unint64_t v92 = (unint64_t)&v236;
  if (v142)
  {
    (*v205)((int *)v64, v227);
    swift_bridgeObjectRelease();
    v248[0] = v142;
    sub_24B562F04(&qword_2697CC0A8);
    sub_24B57C4D8();
    swift_dynamicCast();
    unint64_t v143 = (void *)v245;
    uint64_t v144 = v202;
    uint64_t v145 = v229;
    v207(v202, v206, v229);
    unint64_t v146 = v215;
    uint64_t v147 = v234;
    v209(v215, (char *)v91, v234);
    id v148 = v143;
    uint64_t v149 = sub_24B6824B0();
    os_log_type_t v150 = sub_24B682B20();
    if (os_log_type_enabled(v149, v150))
    {
      uint64_t v151 = swift_slowAlloc();
      v241.i64[0] = swift_slowAlloc();
      v242.i64[0] = swift_slowAlloc();
      uint64_t v247 = v242.i64[0];
      *(_DWORD *)uint64_t v151 = 136381187;
      uint64_t v243 = sub_24B5627B8(0xD000000000000021, v194 | 0x8000000000000000, &v247);
      sub_24B682CD0();
      *(_WORD *)(v151 + 12) = 2081;
      sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
      v152 = v215;
      uint64_t v153 = sub_24B682F90();
      uint64_t v243 = sub_24B5627B8(v153, v154, &v247);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      v211(v152, v147);
      *(_WORD *)(v151 + 22) = 2112;
      uint64_t v243 = (uint64_t)v148;
      id v155 = v148;
      sub_24B682CD0();
      uint64_t v156 = v241.i64[0];
      *(void *)v241.i64[0] = v148;

      _os_log_impl(&dword_24B55E000, v149, v150, "MeshWriter.%{private}s: Failed to save mesh at %{private}s. Error: %@", (uint8_t *)v151, 0x20u);
      sub_24B562F04((uint64_t *)&unk_2697CCE20);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v156, -1, -1);
      uint64_t v157 = v242.i64[0];
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v157, -1, -1);
      MEMORY[0x24C5D6C00](v151, -1, -1);

      v204(v202, v229);
      v211((char *)v91, v147);
    }
    else
    {

      os_log_type_t v190 = (void (*)(uint64_t, uint64_t))v211;
      v211(v146, v147);

      v204(v144, v145);
      v190(v91, v147);
    }
    goto LABEL_59;
  }
LABEL_68:
  (**(void (***)(uint64_t, uint64_t))(v92 - 256))(v64, v227);
  swift_bridgeObjectRelease();
  uint64_t v175 = v201;
  uint64_t v176 = v229;
  v207(v201, v206, v229);
  float v177 = v214;
  uint64_t v178 = v91;
  uint64_t v179 = v91;
  uint64_t v180 = v234;
  v209(v214, (char *)v178, v234);
  uint64_t v181 = sub_24B6824B0();
  os_log_type_t v182 = sub_24B682B30();
  BOOL v183 = os_log_type_enabled(v181, v182);
  uint64_t v184 = v218;
  if (v183)
  {
    uint64_t v185 = swift_slowAlloc();
    uint64_t v186 = swift_slowAlloc();
    v248[0] = v186;
    *(_DWORD *)uint64_t v185 = v200;
    uint64_t v245 = sub_24B5627B8(0xD000000000000021, v194 | 0x8000000000000000, v248);
    uint64_t v218 = v184;
    sub_24B682CD0();
    *(_WORD *)(v185 + 12) = 2081;
    sub_24B57C350(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v187 = sub_24B682F90();
    uint64_t v245 = sub_24B5627B8(v187, v188, v248);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    v189 = v211;
    v211(v177, v180);
    _os_log_impl(&dword_24B55E000, v181, v182, "MeshWriter.%{private}s: Saved mesh anchor at %{private}s", (uint8_t *)v185, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v186, -1, -1);
    MEMORY[0x24C5D6C00](v185, -1, -1);

    v204(v175, v229);
    v189(v193, v180);
  }
  else
  {

    uint64_t v191 = (void (*)(uint64_t, uint64_t))v211;
    v211(v177, v180);
    v204(v175, v176);
    v191(v179, v180);
  }
  return 1;
}

uint64_t sub_24B57BC4C(void *a1, void *a2)
{
  float32x4_t v4 = (SEL *)&unk_2652DE000;
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_count);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int v6 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((result & 0x80000000) == 0)
  {
    if (!result)
    {
LABEL_12:
      [a1 v4[114]];
      return 0;
    }
    int v7 = 0;
    while (v6 != v7)
    {
      sub_24B682B50();
      if (a2)
      {
        id v8 = a2;
        sub_24B682B50();
        sub_24B682E40();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682890();
      }
      else
      {
        sub_24B682E40();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682A70();
        sub_24B682890();
        sub_24B682890();
      }
      ++v7;
      uint64_t result = swift_bridgeObjectRelease();
      if (v6 == v7)
      {
        float32x4_t v4 = (SEL *)&unk_2652DE000;
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_24B57BFF8()
{
  return swift_deallocClassInstance();
}

double sub_24B57C008()
{
  uint64_t v0 = swift_allocObject();
  double result = 0.00781250185;
  *(_OWORD *)(v0 + 16) = xmmword_24B685710;
  return result;
}

void *sub_24B57C038(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CD1C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B57C398(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B57C148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B57C1B0(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC460);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24B57C210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B57C274(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MeshUtils.AABB()
{
  return self;
}

unint64_t sub_24B57C2F4()
{
  unint64_t result = qword_2697CC0F0;
  if (!qword_2697CC0F0)
  {
    sub_24B566158((uint64_t *)&unk_2697CC440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC0F0);
  }
  return result;
}

uint64_t sub_24B57C350(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_24B57C398(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

unint64_t sub_24B57C484()
{
  unint64_t result = qword_2697CCCD0;
  if (!qword_2697CCCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCCD0);
  }
  return result;
}

unint64_t sub_24B57C4D8()
{
  unint64_t result = qword_2697CCCE0;
  if (!qword_2697CCCE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CCCE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MeshUtils()
{
  return &type metadata for MeshUtils;
}

uint64_t type metadata accessor for MeshWriter()
{
  return self;
}

void sub_24B57C57C(uint64_t a1, uint64_t a2)
{
  sub_24B57CAF4(0, &qword_2697CC1C8);
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedVideoFormats);
  sub_24B57CAF4(0, &qword_2697CC1D0);
  unint64_t v5 = sub_24B6829A0();

  if (v5 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24B682F00();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_38;
  }
LABEL_3:
  id v28 = 0;
  unint64_t v7 = 0;
  unint64_t v8 = v5 & 0xC000000000000001;
  uint64_t v33 = v5 & 0xFFFFFFFFFFFFFF8;
  uint64_t v31 = 0;
  unint64_t v32 = v5 + 32;
  char v29 = 1;
  uint64_t v9 = (SEL *)&unk_2652DE000;
  uint64_t v30 = v6;
  while (1)
  {
    while (1)
    {
      if (v8)
      {
        id v10 = (id)MEMORY[0x24C5D4F60](v7, v5);
      }
      else
      {
        if (v7 >= *(void *)(v33 + 16)) {
          goto LABEL_36;
        }
        id v10 = *(id *)(v32 + 8 * v7);
      }
      int64_t v11 = v10;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      id v13 = [v10 v9[135]];
      uint64_t v14 = sub_24B682C20();

      if (objc_msgSend(v11, sel_isRecommendedForHighResolutionFrameCapturing))
      {
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15) {
          break;
        }
      }
      swift_bridgeObjectRelease();

      if (v7 == v6) {
        goto LABEL_38;
      }
    }
    unint64_t v16 = v8;
    unint64_t v17 = v5;
    uint64_t v18 = v9;
    uint64_t v19 = a2;
    unint64_t v20 = 0;
    long long v21 = (int *)(v14 + 36);
    char v22 = 1;
    do
    {
      if (*v21 <= a1)
      {
        uint64_t v23 = *v21;
        if ((int)v23 <= SHIDWORD(v20)) {
          unint64_t v24 = v20;
        }
        else {
          unint64_t v24 = *(v21 - 1) | (unint64_t)(v23 << 32);
        }
        BOOL v25 = (v22 & 1) == 0;
        char v22 = 0;
        if (v25) {
          unint64_t v20 = v24;
        }
        else {
          unint64_t v20 = *(v21 - 1) | (unint64_t)(v23 << 32);
        }
      }
      v21 += 2;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      break;
    }

    a2 = v19;
LABEL_25:
    uint64_t v9 = v18;
LABEL_26:
    unint64_t v5 = v17;
    unint64_t v8 = v16;
LABEL_27:
    uint64_t v6 = v30;
    if (v7 == v30) {
      goto LABEL_38;
    }
  }
  a2 = v19;
  if (*(unsigned char *)(v19 + 8))
  {

    *(void *)uint64_t v19 = v20;
    *(unsigned char *)(v19 + 8) = 0;
    id v28 = objc_msgSend(v11, sel_framesPerSecond);
    char v29 = 0;
    uint64_t v31 = v11;
    goto LABEL_25;
  }
  int v26 = *(_DWORD *)(v19 + 4);
  uint64_t v9 = v18;
  if (v26 < SHIDWORD(v20))
  {

    *(void *)a2 = v20;
    *(unsigned char *)(a2 + 8) = 0;
    id v28 = objc_msgSend(v11, sel_framesPerSecond);
    char v29 = 0;
    uint64_t v31 = v11;
    goto LABEL_26;
  }
  id v27 = objc_msgSend(v11, sel_framesPerSecond);
  if ((v29 & 1) == 0)
  {
    unint64_t v5 = v17;
    unint64_t v8 = v16;
    if ((uint64_t)v27 >= (uint64_t)v28)
    {

      char v29 = 0;
    }
    else
    {

      *(void *)a2 = v20;
      *(unsigned char *)(a2 + 8) = 0;
      id v28 = objc_msgSend(v11, sel_framesPerSecond);
      char v29 = 0;
      uint64_t v31 = v11;
    }
    goto LABEL_27;
  }

  __break(1u);
}

id sub_24B57C8CC()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id sub_24B57C918(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_24B57C958()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_24B57C98C()
{
  sub_24B57CAF4(0, &qword_2697CC1C8);
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_supportedVideoFormats);
  sub_24B57CAF4(0, &qword_2697CC1D0);
  unint64_t v1 = sub_24B6829A0();

  if (v1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C5D4F60](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      objc_super v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v4, sel_isRecommendedForHighResolutionFrameCapturing)
        && objc_msgSend(v5, sel_framesPerSecond) == (id)30)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_24B682F00();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24B57CAF4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t type metadata accessor for ARWorldTrackingConfigurationForObjectCapture()
{
  return self;
}

uint64_t sub_24B57CB54(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0BD8);
}

uint64_t sub_24B57CB70()
{
  return sub_24B57CDB4(&qword_2697CD940, (uint64_t)qword_2697D0BD8);
}

uint64_t sub_24B57CB94(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24B57CBCC(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0BF0);
}

uint64_t sub_24B57CBE8()
{
  return sub_24B57CDB4(&qword_2697CD948, (uint64_t)qword_2697D0BF0);
}

uint64_t sub_24B57CC0C(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0C08);
}

uint64_t sub_24B57CC30()
{
  return sub_24B57CDB4(&qword_2697CD950, (uint64_t)qword_2697D0C08);
}

uint64_t sub_24B57CC54(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0C20);
}

uint64_t sub_24B57CC7C()
{
  return sub_24B57CDB4(&qword_2697CD958, (uint64_t)qword_2697D0C20);
}

uint64_t sub_24B57CCA0(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0C38);
}

uint64_t sub_24B57CCC8()
{
  return sub_24B57CDB4(&qword_2697CD960, (uint64_t)qword_2697D0C38);
}

uint64_t sub_24B57CCEC(uint64_t a1)
{
  return sub_24B57CD18(a1, qword_2697D0C50);
}

uint64_t sub_24B57CD18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24B6824D0();
  sub_24B57CE18(v3, a2);
  sub_24B57CB94(v3, (uint64_t)a2);
  return sub_24B6824C0();
}

uint64_t sub_24B57CD90()
{
  return sub_24B57CDB4(&qword_2697CD968, (uint64_t)qword_2697D0C50);
}

uint64_t sub_24B57CDB4(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24B6824D0();

  return sub_24B57CB94(v3, a2);
}

ValueMetadata *type metadata accessor for CoreOCLogger()
{
  return &type metadata for CoreOCLogger;
}

uint64_t *sub_24B57CE18(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24B57CE7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 128))();
  *a2 = result;
  return result;
}

uint64_t sub_24B57CEC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_24B57CF0C()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_24B57CF40(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t ObjectCaptureImageFolderReader.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ObjectCaptureImageFolderReader.init(url:)(a1);
  return v2;
}

uint64_t ObjectCaptureImageFolderReader.init(url:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v37 - v9;
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v37 - v10;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_invalidSampleIds) = MEMORY[0x263F8EE88];
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle) = 0;
  uint64_t v12 = v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_url;
  uint64_t v13 = sub_24B6822E0();
  uint64_t v45 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v12, a1, v13);
  uint64_t v14 = sub_24B57CB70();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v5 + 16;
  ((void (*)(char *))v15)(v11);
  swift_retain_n();
  unint64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B30();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v40 = v4;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = v20;
    *(_DWORD *)uint64_t v19 = 141558275;
    uint64_t v47 = 1752392040;
    v48[0] = v20;
    uint64_t v39 = a1;
    sub_24B682CD0();
    *(_WORD *)(v19 + 12) = 2081;
    uint64_t v21 = sub_24B6822D0();
    uint64_t v47 = sub_24B5627B8(v21, v22, v48);
    a1 = v39;
    sub_24B682CD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v16, v17, "Object Capture Image folder Reader: Reader input URL: %{private,mask.hash}s", (uint8_t *)v19, 0x16u);
    uint64_t v23 = v38;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v23, -1, -1);
    uint64_t v24 = v19;
    uint64_t v4 = v40;
    MEMORY[0x24C5D6C00](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  BOOL v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v11, v4);
  int v26 = (void *)(v2 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
  swift_beginAccess();
  int v27 = OCNonModularSPI_CMPhoto_HeicReadCreate();
  swift_endAccess();
  id v28 = v46;
  if (v27)
  {
    v43(v46, v42, v4);
    char v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B20();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_24B55E000, v29, v30, "Image Folder Reader: Failed to initialize the image folder reader.", v31, 2u);
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(a1, v13);
    unint64_t v32 = v28;
  }
  else
  {
    if (!OCNonModularSPI_CMPhoto_HeicReadStart())
    {
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(a1, v13);
      return v2;
    }
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    *int v26 = 0;
    v43(v41, v42, v4);
    uint64_t v33 = sub_24B6824B0();
    os_log_type_t v34 = sub_24B682B20();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_24B55E000, v33, v34, "Image Folder Reader: Failed to start the image folder reader.", v35, 2u);
      MEMORY[0x24C5D6C00](v35, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(a1, v13);
    unint64_t v32 = v41;
  }
  v25(v32, v4);
  return v2;
}

uint64_t ObjectCaptureImageFolderReader.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  int Stop = OCNonModularSPI_CMPhoto_HeicReadStop();
  int Destroy = OCNonModularSPI_CMPhoto_HeicReadDestroy();
  uint64_t v8 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 67240448;
    HIDWORD(v15) = Stop;
    sub_24B682CD0();
    *(_WORD *)(v11 + 8) = 1026;
    HIDWORD(v15) = Destroy;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "Image Folder Reader: HEIC bundle reader stopped with state %{public}d and destroyed with state %{public}d", (uint8_t *)v11, 0xEu);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_url;
  uint64_t v13 = sub_24B6822E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ObjectCaptureImageFolderReader.__deallocating_deinit()
{
  ObjectCaptureImageFolderReader.deinit();

  return swift_deallocClassInstance();
}

void *sub_24B57D79C()
{
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
  swift_beginAccess();
  if (*v2)
  {
    uint64_t v3 = sub_24B583020();
    if (!v1)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void *)(v3 + 16);
      swift_beginAccess();
      *(void *)(v0 + 16) = v5;
      *(void *)(v0 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = 0;
      sub_24B562F04(&qword_2697CC1E0);
      uint64_t v1 = (void *)swift_allocObject();
      v1[2] = v4;
      v1[3] = sub_24B585C04;
      v1[4] = v0;
      v1[5] = sub_24B5805AC;
      v1[6] = 0;
      v1[7] = sub_24B580660;
      v1[8] = 0;
      swift_retain();
    }
  }
  else
  {
    sub_24B585BB0();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = 0xD000000000000051;
    *(void *)(v7 + 8) = 0x800000024B68BBA0;
    *(unsigned char *)(v7 + 16) = 1;
    uint64_t v1 = (void *)v6;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_24B57D8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v68 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v10 = (char *)&v65 - v9;
  uint64_t v82 = sub_24B6822E0();
  uint64_t v11 = *(void *)(v82 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v82);
  os_log_type_t v75 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v65 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v65 - v17;
  uint64_t v80 = sub_24B6824D0();
  uint64_t v19 = *(void *)(v80 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v80);
  uint64_t v81 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v65 - v23;
  uint64_t result = MEMORY[0x270FA5388](v22);
  int v27 = (char *)&v65 - v26;
  uint64_t v28 = *(void *)(a2 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId);
  if (__OFADD__(v28, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v83 = *(void *)(a2 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId);
    uint64_t v69 = v16;
    uint64_t v66 = v10;
    *(void *)(a2 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_sampleId) = v28 + 1;
    uint64_t v29 = a1;
    uint64_t v67 = type metadata accessor for PhotogrammetryImageHelper();
    char v30 = sub_24B574398();
    uint64_t v31 = sub_24B57CB70();
    uint64_t v77 = v19;
    uint64_t v78 = a2;
    unint64_t v32 = *(void (**)(void, void, void))(v19 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v73 = v19 + 16;
    uint64_t v74 = a3;
    uint64_t v76 = v11;
    uint64_t v79 = v29;
    uint64_t v72 = v32;
    if ((v30 & 1) == 0)
    {
      uint64_t v47 = v24;
      uint64_t v48 = v80;
      v32(v24, v31, v80);
      unsigned int v49 = *v33;
      uint64_t v50 = v69;
      uint64_t v51 = v82;
      (*v33)(v69, v29, v82);
      long long v52 = sub_24B6824B0();
      os_log_type_t v53 = sub_24B682B30();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v71 = v49;
      if (v54)
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v66 = (char *)swift_slowAlloc();
        v85[0] = (uint64_t)v66;
        *(_DWORD *)uint64_t v55 = 134349571;
        uint64_t v84 = v83;
        sub_24B682CD0();
        *(_WORD *)(v55 + 12) = 2160;
        uint64_t v84 = 1752392040;
        sub_24B682CD0();
        *(_WORD *)(v55 + 22) = 2081;
        uint64_t v56 = sub_24B6822D0();
        uint64_t v84 = sub_24B5627B8(v56, v57, v85);
        uint64_t v58 = v83;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v70 = *(void (**)(char *, uint64_t))(v76 + 8);
        v70(v50, v82);
        _os_log_impl(&dword_24B55E000, v52, v53, "Image Folder Reader: Reading sample from non-HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v55, 0x20u);
        uint64_t v59 = (uint64_t)v66;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v59, -1, -1);
        MEMORY[0x24C5D6C00](v55, -1, -1);

        uint64_t v60 = v77;
      }
      else
      {
        uint64_t v70 = *(void (**)(char *, uint64_t))(v76 + 8);
        v70(v50, v51);

        uint64_t v60 = v77;
        uint64_t v58 = v83;
      }
      uint64_t v69 = *(char **)(v60 + 8);
      ((void (*)(char *, uint64_t))v69)(v47, v48);
      uint64_t v64 = v68;
      sub_24B572628(v58, v79, v68);
      goto LABEL_12;
    }
    uint64_t v34 = v11;
    uint64_t v35 = v80;
    v32(v27, v31, v80);
    float32x4_t v36 = *v33;
    uint64_t v37 = v29;
    uint64_t v38 = v82;
    uint64_t v67 = (uint64_t)v33;
    v36(v18, v37, v82);
    uint64_t v39 = sub_24B6824B0();
    os_log_type_t v40 = sub_24B682B30();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v71 = v36;
    if (v41)
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v69 = (char *)swift_slowAlloc();
      v85[0] = (uint64_t)v69;
      *(_DWORD *)uint64_t v42 = 134349571;
      uint64_t v84 = v83;
      sub_24B682CD0();
      *(_WORD *)(v42 + 12) = 2160;
      uint64_t v84 = 1752392040;
      sub_24B682CD0();
      *(_WORD *)(v42 + 22) = 2081;
      uint64_t v43 = sub_24B6822D0();
      uint64_t v84 = sub_24B5627B8(v43, v44, v85);
      uint64_t v45 = v78;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v34 + 8);
      v70(v18, v82);
      _os_log_impl(&dword_24B55E000, v39, v40, "Image Folder Reader: Reading sample from HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v42, 0x20u);
      uint64_t v46 = v69;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v46, -1, -1);
      MEMORY[0x24C5D6C00](v42, -1, -1);

      uint64_t v69 = *(char **)(v77 + 8);
      ((void (*)(char *, uint64_t))v69)(v27, v35);
    }
    else
    {
      uint64_t v70 = *(void (**)(char *, uint64_t))(v34 + 8);
      v70(v18, v38);

      uint64_t v69 = *(char **)(v77 + 8);
      ((void (*)(char *, uint64_t))v69)(v27, v35);
      uint64_t v45 = v78;
    }
    uint64_t v61 = (unint64_t *)(v45 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
    uint64_t result = swift_beginAccess();
    unint64_t v62 = *v61;
    uint64_t v63 = v79;
    if (v62)
    {
      type metadata accessor for ObjectCaptureImageFolderReader();
      uint64_t v64 = (uint64_t)v66;
      sub_24B57E384(v83, v63, v62, (uint64_t)v66);
LABEL_12:
      sub_24B585D34(v64, v74);
      sub_24B562F04(&qword_2697CC200);
      return swift_storeEnumTagMultiPayload();
    }
  }
  __break(1u);
  return result;
}

void sub_24B57E384(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v272 = a3;
  uint64_t v265 = a1;
  uint64_t v254 = a4;
  uint64_t v311 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_24B562F04(&qword_2697CC118);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v243 = (uint64_t)&v226 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v250 = (char *)&v226 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B682C90();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v242 = (uint64_t)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v262 = (uint64_t)&v226 - v12;
  v258.i64[0] = sub_24B6823B0();
  id v259 = *(id *)(v258.i64[0] - 8);
  MEMORY[0x270FA5388](v258.i64[0]);
  v255.i64[0] = (uint64_t)&v226 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24B562F04(&qword_2697CC068);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  v251.i64[0] = (uint64_t)&v226 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v261 = (uint64_t)&v226 - v17;
  v263 = (int *)type metadata accessor for PhotogrammetrySample(0);
  MEMORY[0x270FA5388](v263);
  uint64_t v269 = (uint64_t)&v226 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B6822E0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v257 = (char *)&v226 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v226 - v23;
  uint64_t v25 = sub_24B6824D0();
  uint64_t v26 = *(void **)(v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v226 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v245 = (char *)&v226 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v246 = (char *)&v226 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v248 = (char *)&v226 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v249.i64[0] = (uint64_t)&v226 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v244.n128_u64[0] = (unint64_t)&v226 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v247 = (char *)&v226 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v264 = (char *)&v226 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v226 - v44;
  uint64_t v46 = sub_24B57CB70();
  v271 = v26;
  uint64_t v47 = v26;
  uint64_t v48 = v25;
  unsigned int v49 = (void (*)(char *, uint64_t, uint64_t))v47[2];
  uint64_t v267 = v46;
  uint64_t v268 = (uint64_t)(v47 + 2);
  v266 = v49;
  ((void (*)(char *))v49)(v45);
  uint64_t v273 = v20;
  uint64_t v274 = v19;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v270 = (void (*)(void, void))v24;
  uint64_t v275 = a2;
  v252 = v50;
  uint64_t v253 = v20 + 16;
  v50(v24, a2, v19);
  uint64_t v51 = sub_24B6824B0();
  os_log_type_t v52 = sub_24B682B30();
  BOOL v53 = os_log_type_enabled(v51, v52);
  v260 = v29;
  if (v53)
  {
    uint64_t v54 = swift_slowAlloc();
    float32x4_t v240 = v51;
    uint64_t v55 = v54;
    float32x4_t v241 = swift_slowAlloc();
    *(void *)&long long v279 = v241;
    *(_DWORD *)uint64_t v55 = 141558275;
    v278[0].boundingBox.columns[0].i64[0] = 1752392040;
    sub_24B682CD0();
    *(_WORD *)(v55 + 12) = 2081;
    uint64_t v56 = (char *)v270;
    uint64_t v57 = sub_24B6822D0();
    v278[0].boundingBox.columns[0].i64[0] = sub_24B5627B8(v57, v58, (uint64_t *)&v279);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    v256 = *(void (**)(char *, uint64_t))(v273 + 8);
    v256(v56, v274);
    uint64_t v59 = v240;
    _os_log_impl(&dword_24B55E000, v240, v52, "Image Folder Reader: Trying to read sample %{private,mask.hash}s.", (uint8_t *)v55, 0x16u);
    uint64_t v60 = v241;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v60, -1, -1);
    MEMORY[0x24C5D6C00](v55, -1, -1);
  }
  else
  {
    v256 = *(void (**)(char *, uint64_t))(v273 + 8);
    v256((char *)v270, v274);
  }
  uint64_t v61 = v271;
  uint64_t v270 = (void (*)(void, void))v271[1];
  v270(v45, v48);
  int v286 = 0;
  float32x4_t v284 = 0u;
  float32x4_t v285 = 0u;
  float32x4_t v282 = 0u;
  float32x4_t v283 = 0u;
  long long v280 = 0u;
  long long v281 = 0u;
  long long v279 = 0u;
  float32x4_t v287 = 0u;
  float32x4_t v288 = 0u;
  float32x4_t v289 = 0u;
  v290 = 0;
  long long v291 = 0u;
  long long v292 = 0u;
  long long v293 = 0u;
  long long v294 = 0u;
  long long v295 = 0u;
  long long v296 = 0u;
  long long v297 = 0u;
  long long v298 = 0u;
  float32x4_t v299 = 0u;
  float32x4_t v300 = 0u;
  float32x4_t v301 = 0u;
  int8x16_t v302 = 0u;
  long long v303 = 0u;
  int v304 = 0;
  long long v305 = 0u;
  long long v306 = 0u;
  unint64_t v62 = (void *)sub_24B682250();
  int v63 = OCNonModularSPI_CMPhoto_read();

  if (v63)
  {
    v278[0].boundingBox.columns[0].i64[0] = 0;
    v278[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    sub_24B6822D0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    simd_float4 v64 = v278[0].boundingBox.columns[0];
    sub_24B585BB0();
    swift_allocError();
    *uint64_t v65 = v64;
    v65[1].i8[0] = 1;
    swift_willThrow();
    return;
  }
  uint64_t v66 = (__CVBuffer *)v279;
  if (!(void)v279)
  {
    __break(1u);
    return;
  }
  float32x4_t v240 = v281;
  float32x4_t v241 = *((void *)&v280 + 1);
  uint64_t v67 = (void *)v280;
  v271 = (void *)*((void *)&v279 + 1);
  uint64_t v68 = (void *)*((void *)&v306 + 1);
  v235[0] = *((id *)&v281 + 1);
  uint64_t v69 = (void *)*((void *)&v303 + 1);
  if (*((void *)&v303 + 1))
  {
    uint64_t v70 = sub_24B6827D0();
    v239.n128_u64[0] = v71;

    uint64_t v72 = (void *)v305;
    if ((void)v305) {
      goto LABEL_9;
    }
LABEL_12:
    uint64_t v231 = 0;
    v234.n128_u64[0] = 0;
    uint64_t v74 = v290;
    if (v290) {
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  uint64_t v70 = 0;
  v239.n128_u64[0] = 0;
  uint64_t v72 = (void *)v305;
  if (!(void)v305) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v231 = sub_24B6827D0();
  v234.n128_u64[0] = v73;

  uint64_t v74 = v290;
  if (v290)
  {
LABEL_10:
    v278[0].boundingBox.columns[0].i64[0] = 0;
    sub_24B682730();

    uint64_t v233 = v278[0].boundingBox.columns[0].i64[0];
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v233 = 0;
LABEL_14:
  os_log_type_t v75 = (void *)v303;
  id v237 = v68;
  if ((void)v303)
  {
    uint64_t v238 = sub_24B682320();
    unint64_t v272 = v76;
  }
  else
  {
    uint64_t v238 = 0;
    unint64_t v272 = 0xF000000000000000;
  }
  uint64_t v77 = MEMORY[0x263F8EE78];
  id v236 = (id)v306;
  if ((void)v306)
  {
    v278[0].boundingBox.columns[0].i64[0] = 0;
    id v78 = (id)v306;
    sub_24B562F04(&qword_2697CC060);
    sub_24B682990();

    if (v278[0].boundingBox.columns[0].i64[0]) {
      uint64_t v79 = v278[0].boundingBox.columns[0].i64[0];
    }
    else {
      uint64_t v79 = v77;
    }
  }
  else
  {
    uint64_t v79 = MEMORY[0x263F8EE78];
  }
  if (!sub_24B5A2D38(v66))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v278[0].boundingBox.columns[0].i64[0] = 0;
    v278[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    v276.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v66);
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    simd_float4 v107 = v278[0].boundingBox.columns[0];
    sub_24B585BB0();
    swift_allocError();
    *int v108 = v107;
    v108[1].i8[0] = 1;
    swift_willThrow();

    sub_24B58620C(v238, v272);
    return;
  }
  uint64_t v232 = v79;
  int v230 = v66;
  PhotogrammetrySample.init(id:image:)(v265, (uint64_t)v230, v269);
  uint64_t v80 = v264;
  v266(v264, v267, v48);
  uint64_t v81 = sub_24B6824B0();
  os_log_type_t v82 = sub_24B682B10();
  if (os_log_type_enabled(v81, v82))
  {
    uint64_t v83 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v83 = 134349056;
    v278[0].boundingBox.columns[0].i64[0] = v265;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v81, v82, "Image Folder Reader: Initiate sample (id = %{public}ld)", v83, 0xCu);
    uint64_t v84 = v83;
    uint64_t v80 = v264;
    MEMORY[0x24C5D6C00](v84, -1, -1);
  }

  v264 = (char *)(v61 + 1);
  v270(v80, v48);
  uint64_t v85 = v269;
  if (v67)
  {
    __n128 v86 = v67;
    if (!sub_24B5A2E7C(v86))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v278[0].boundingBox.columns[0].i64[0] = 0;
      v278[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      v276.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v86);
      sub_24B682F90();
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      simd_float4 v109 = v278[0].boundingBox.columns[0];
      sub_24B585BB0();
      swift_allocError();
      *float v110 = v109;
      v110[1].i8[0] = 1;
      swift_willThrow();

      sub_24B58620C(v238, v272);
      float v111 = v241;
      goto LABEL_42;
    }

    *(void *)(v85 + 24) = v67;
  }
  __n128 v87 = v241;
  if (v241)
  {
    uint64_t v88 = v241;
    if (sub_24B5A3048(v88))
    {

      *(void *)(v85 + 32) = v87;
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v278[0].boundingBox.columns[0].i64[0] = 0;
    v278[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    v276.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v88);
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    sub_24B682890();
    simd_float4 v112 = v278[0].boundingBox.columns[0];
    sub_24B585BB0();
    swift_allocError();
    *uint64_t v113 = v112;
    v113[1].i8[0] = 1;
    swift_willThrow();

    sub_24B58620C(v238, v272);
    float v111 = v240;
LABEL_42:

    goto LABEL_45;
  }
LABEL_31:
  unint64_t v89 = v240;
  if (!v240)
  {
LABEL_34:
    id v228 = v67;
    if (!v271
      || (v278[0].boundingBox.columns[0].i64[0] = 0,
          uint64_t v91 = v271,
          sub_24B682730(),
          v91,
          (uint64_t v92 = v278[0].boundingBox.columns[0].i64[0]) == 0))
    {
      uint64_t v229 = 0;
LABEL_53:
      type metadata accessor for PhotogrammetryImageHelper();
      uint64_t v130 = v261;
      sub_24B57381C(v275, v261);
      uint64_t v131 = v251.i64[0];
      sub_24B563A6C(v130, v251.i64[0], &qword_2697CC068);
      uint64_t v132 = (void (**)(void, uint64_t, void))v259;
      uint64_t v133 = v258.i64[0];
      int v134 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v259 + 6))(v131, 1, v258.i64[0]);
      uint64_t v227 = v70;
      if (v134 == 1)
      {
        sub_24B5632A8(v131, &qword_2697CC068);
      }
      else
      {
        uint64_t v135 = v255.i64[0];
        v132[4](v255.i64[0], v131, v133);
        uint64_t v136 = v85 + v263[18];
        sub_24B5632A8(v136, &qword_2697CC068);
        v132[2](v136, v135, v133);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v132[7])(v136, 0, 1, v133);
        uint64_t v137 = v248;
        v266(v248, v267, v48);
        uint64_t v138 = sub_24B6824B0();
        os_log_type_t v139 = sub_24B682B30();
        if (os_log_type_enabled(v138, v139))
        {
          uint64_t v140 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v140 = 134349056;
          v278[0].boundingBox.columns[0].i64[0] = v265;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v138, v139, "Image Folder Reader: Parsed EXIF capture timestamp field of sample (id = %{public}ld)", v140, 0xCu);
          uint64_t v141 = v140;
          uint64_t v133 = v258.i64[0];
          MEMORY[0x24C5D6C00](v141, -1, -1);
        }

        v270(v137, v48);
        (*((void (**)(uint64_t, uint64_t))v259 + 1))(v255.i64[0], v133);
        uint64_t v70 = v227;
      }
      char v142 = sub_24B5DA794(v286);
      if (v142 == 6) {
        char v142 = 0;
      }
      sub_24B5DA7C4(v142, v262);
      if (v272 >> 60 != 15)
      {
        id v143 = objc_allocWithZone(MEMORY[0x263EF8FB0]);
        uint64_t v144 = v48;
        uint64_t v145 = v238;
        unint64_t v146 = v272;
        sub_24B586340(v238, v272);
        uint64_t v147 = (void *)sub_24B682310();
        id v148 = objc_msgSend(v143, sel_initWithPointData_, v147);
        uint64_t v149 = v145;
        uint64_t v48 = v144;
        sub_24B58620C(v149, v146);

        uint64_t v150 = v263[16];
        *(void *)(v85 + v150) = v148;
      }
      ObjectCaptureSession.Frame.Feedback.init(rawValue:)(SHIDWORD(v305));
      uint64_t v151 = v263;
      uint64_t v152 = v85 + v263[22];
      *(void *)uint64_t v152 = v278[0].boundingBox.columns[0].i64[0];
      *(unsigned char *)(v152 + 8) = 0;
      uint64_t v153 = *(void **)(v85 + 80);
      unint64_t v154 = (unint64_t)v235[0];
      id v259 = v235[0];

      *(void *)(v85 + 80) = v154;
      if (SDWORD2(v305) == 1)
      {
        float32x4_t v258 = v299;
        float32x4_t v255 = v300;
        float32x4_t v251 = v301;
        int8x16_t v249 = v302;
        uint64_t v157 = sub_24B5F94A8(v299, v300, v301, v302);
        if (v157)
        {
          PhotogrammetrySample.Scene.init(boundingBox:)(v278, (simd_float4x4 *)v157);
          simd_float4 v158 = v278[0].boundingBox.columns[1];
          simd_float4 v159 = v278[0].boundingBox.columns[2];
          uint64_t v160 = v278[0].boundingBox.columns[3].i64[1];
          uint64_t v161 = v278[0].boundingBox.columns[3].i64[0];
          uint64_t v162 = (simd_float4 *)(v85 + v151[14]);
          *uint64_t v162 = v278[0].boundingBox.columns[0];
          v162[1] = v158;
          v162[2] = v159;
          v162[3].i64[0] = v161;
          v162[3].i64[1] = v160;
          v162[4].i8[0] = 0;
        }
      }
      else
      {
        float32x4_t v258 = v299;
        float32x4_t v255 = v300;
        float32x4_t v251 = v301;
        int8x16_t v249 = v302;
        uint64_t v155 = sub_24B5F94A8(v299, v300, v301, v302);
        if (v155)
        {
          PhotogrammetrySample.Object.init(transform:boundingBox:)(&v276, (simd_float4x4 *)v155, v156);
          v278[0] = (CoreOC::PhotogrammetrySample::Scene)v276.transform;
          v278[1] = (CoreOC::PhotogrammetrySample::Scene)v276.boundingBox;
          sub_24B56D164((uint64_t)v278);
          sub_24B56CF38((uint64_t)v278, v85 + v151[13], &qword_2697CC120);
        }
      }
      __n128 v163 = (uint64_t *)(v85 + v151[21]);
      swift_bridgeObjectRelease();
      unint64_t v164 = v239.n128_u64[0];
      *__n128 v163 = v70;
      v163[1] = v164;
      uint64_t v165 = v232;
      if (v164)
      {
        swift_bridgeObjectRetain();
        uint64_t v166 = sub_24B681D60();
        uint64_t v167 = v70;
        unint64_t v168 = v239.n128_u64[0];
        uint64_t v169 = (uint64_t *)v166;
        if (*(void *)v166 == v167 && v239.n128_u64[0] == *((void *)v166 + 1) || (sub_24B682FA0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v266(v246, v267, v48);
          swift_bridgeObjectRetain();
          unint64_t v170 = sub_24B6824B0();
          os_log_type_t v171 = sub_24B682B20();
          if (os_log_type_enabled(v170, v171))
          {
            uint64_t v172 = swift_slowAlloc();
            v258.i64[0] = swift_slowAlloc();
            v278[0].boundingBox.columns[0].i64[0] = v258.i64[0];
            *(_DWORD *)uint64_t v172 = 136446466;
            swift_bridgeObjectRetain();
            v276.transform.columns[0].i64[0] = sub_24B5627B8(v227, v168, (uint64_t *)v278);
            sub_24B682CD0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v172 + 12) = 2082;
            uint64_t v173 = *v169;
            unint64_t v174 = v169[1];
            swift_bridgeObjectRetain();
            v276.transform.columns[0].i64[0] = sub_24B5627B8(v173, v174, (uint64_t *)v278);
            uint64_t v85 = v269;
            uint64_t v151 = v263;
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24B55E000, v170, v171, "Image Folder Reader: The version of the object capture bundle (version = %{public}s) and the bundle reader (version = %{public}s) are different.", (uint8_t *)v172, 0x16u);
            uint64_t v175 = v258.i64[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v175, -1, -1);
            MEMORY[0x24C5D6C00](v172, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v270(v246, v48);
          uint64_t v165 = v232;
        }
      }
      uint64_t v176 = v85 + v151[20];
      *(void *)uint64_t v176 = v304;
      *(unsigned char *)(v176 + 8) = 0;
      if (v234.n128_u64[0])
      {
        float v177 = v250;
        sub_24B6823C0();
        swift_bridgeObjectRelease();
        uint64_t v178 = (uint64_t)v177;
        uint64_t v165 = v232;
        sub_24B56C254(v178, v85 + v151[19], &qword_2697CC460);
      }
      uint64_t v179 = v85 + v151[15];
      *(void *)uint64_t v179 = SDWORD2(v305);
      *(unsigned char *)(v179 + 8) = 0;
      v258.i64[0] = *((void *)&v291 + 1);
      v255.i64[0] = *((void *)&v292 + 1);
      v248 = (char *)v292;
      v249.i64[0] = v291;
      uint64_t v250 = (char *)*((void *)&v294 + 1);
      v251.i64[0] = *((void *)&v293 + 1);
      unint64_t v246 = (char *)v294;
      uint64_t v247 = (char *)v293;
      uint64_t v180 = (void *)(v85 + v151[23]);
      *uint64_t v180 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRelease();
      uint64_t v181 = *(void *)(v165 + 16);
      if (v181)
      {
        type metadata accessor for TemporalDepthPointCloud();
        uint64_t v182 = v232 + 32;
        do
        {
          uint64_t v183 = swift_bridgeObjectRetain();
          sub_24B5A43F4(v183);
          if (v184)
          {
            MEMORY[0x24C5D4A60]();
            if (*(void *)((*v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_24B6829D0();
            }
            sub_24B682A10();
            sub_24B6829C0();
          }
          v182 += 8;
          --v181;
        }
        while (v181);
      }
      swift_bridgeObjectRelease();
      if (v229)
      {
        uint64_t v185 = *(uint64_t (**)(uint64_t))(*(void *)v229 + 200);
        uint64_t v186 = swift_retain();
        uint64_t v187 = v185(v186);
        swift_release();
        unint64_t v188 = v260;
        uint64_t v189 = v275;
        os_log_type_t v190 = v257;
        if ((v187 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v196 = v269;
        }
        else
        {
          OCNonModularSPI_Serialization_InvalidCameraIntrinsics();
          v277[0] = v287;
          v277[1] = v288;
          v277[2] = v289;
          float32x4_t v192 = (float32x4_t)vdupq_n_s32(0x38D1B717u);
          uint32x4_t v195 = (uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32(v192, vabdq_f32(v191, v287)), (int8x16_t)vcgeq_f32(v192, vabdq_f32(v193, v288))), (int8x16_t)vcgeq_f32(v192, vabdq_f32(v194, v289)));
          v195.i32[3] = v195.i32[2];
          uint64_t v196 = v269;
          if ((vminvq_u32(v195) & 0x80000000) != 0
            || (__n128 v244 = (__n128)v192,
                OCNonModularSPI_Serialization_InvalidCameraTransform(),
                (vminvq_u32((uint32x4_t)vandq_s8(vandq_s8((int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v198, v283)), (int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v197, v282))), vandq_s8((int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v199, v284)), (int8x16_t)vcgeq_f32((float32x4_t)v244, vabdq_f32(v200, v285))))) & 0x80000000) != 0))
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v201 = v242;
            __n128 v234 = (__n128)v282;
            *(float32x4_t *)uint64_t v235 = v284;
            __n128 v239 = (__n128)v283;
            __n128 v244 = (__n128)v285;
            sub_24B5862D8(v262, v242, MEMORY[0x263F8C968]);
            v309[0] = v249.i64[0];
            v309[1] = v258.i64[0];
            v309[2] = v248;
            v309[3] = v255.i64[0];
            v309[4] = v247;
            v309[5] = v251.i64[0];
            v309[6] = v246;
            v309[7] = v250;
            char v310 = 0;
            uint64_t v202 = v243;
            PhotogrammetrySample.Camera.init(id:intrinsics:transform:trackingState:calibrationData:wideToDepthTransform:)(v187, v277, v201, 0, (uint64_t)v309, v243, v234, v239, *(__n128 *)v235, v244);
            uint64_t v203 = type metadata accessor for PhotogrammetrySample.Camera(0);
            uint64_t v204 = *(void *)(v203 - 8);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v204 + 56))(v202, 0, 1, v203);
            uint64_t v205 = v196 + v263[12];
            sub_24B56C254(v202, v205, &qword_2697CC118);
            uint64_t v206 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
            if (!v206(v205, 1, v203))
            {
              memset(v307, 0, sizeof(v307));
              char v308 = 1;
              sub_24B56B470((uint64_t)v307, (uint64_t)v307);
            }
            if (v206(v205, 1, v203))
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              if (v233)
              {
                id v207 = (void *)sub_24B682710();
                swift_bridgeObjectRelease();
              }
              else
              {
                id v207 = 0;
              }
              id v208 = (id)OCNonModularSPI_AVCameraCalibrationData_InitFrom();

              uint64_t v209 = *(int *)(v203 + 32);
              uint64_t v210 = *(void **)(v205 + v209);
              *(void *)(v205 + v209) = v208;
            }
            uint64_t v189 = v275;
            os_log_type_t v190 = v257;
            v266(v245, v267, v48);
            v211 = sub_24B6824B0();
            os_log_type_t v212 = sub_24B682B10();
            if (os_log_type_enabled(v211, v212))
            {
              uint64_t v213 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v213 = 134349056;
              v278[0].boundingBox.columns[0].i64[0] = v265;
              sub_24B682CD0();
              _os_log_impl(&dword_24B55E000, v211, v212, "Image Folder Reader: Read camera field of sample (id = %{public}ld)", v213, 0xCu);
              uint64_t v214 = v213;
              os_log_type_t v190 = v257;
              MEMORY[0x24C5D6C00](v214, -1, -1);
            }

            v270(v245, v48);
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v196 = v269;
        unint64_t v188 = v260;
        uint64_t v189 = v275;
        os_log_type_t v190 = v257;
      }
      v266(v188, v267, v48);
      uint64_t v215 = v274;
      v252(v190, v189, v274);
      unint64_t v216 = sub_24B6824B0();
      os_log_type_t v217 = sub_24B682B30();
      if (os_log_type_enabled(v216, v217))
      {
        uint64_t v218 = v190;
        uint64_t v219 = swift_slowAlloc();
        uint64_t v220 = swift_slowAlloc();
        uint64_t v275 = v48;
        uint64_t v268 = v220;
        v278[0].boundingBox.columns[0].i64[0] = v220;
        *(_DWORD *)uint64_t v219 = 141558275;
        v276.transform.columns[0].i64[0] = 1752392040;
        sub_24B682CD0();
        *(_WORD *)(v219 + 12) = 2081;
        uint64_t v221 = sub_24B6822D0();
        v276.transform.columns[0].i64[0] = sub_24B5627B8(v221, v222, (uint64_t *)v278);
        uint64_t v196 = v269;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        v256(v218, v215);
        _os_log_impl(&dword_24B55E000, v216, v217, "Image Folder Reader: Successfully read sample %{private,mask.hash}s", (uint8_t *)v219, 0x16u);
        uint64_t v223 = v268;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v223, -1, -1);
        MEMORY[0x24C5D6C00](v219, -1, -1);

        sub_24B58620C(v238, v272);
        uint64_t v224 = v260;
        uint64_t v225 = v275;
      }
      else
      {

        v256(v190, v215);
        sub_24B58620C(v238, v272);

        uint64_t v224 = v188;
        uint64_t v225 = v48;
      }
      v270(v224, v225);
      sub_24B586278(v262, MEMORY[0x263F8C968]);
      sub_24B5632A8(v261, &qword_2697CC068);
      sub_24B5862D8(v196, v254, type metadata accessor for PhotogrammetrySample);
      swift_release();
      uint64_t v116 = v196;
      goto LABEL_107;
    }
    swift_bridgeObjectRelease();
    *(void *)(v85 + 16) = v92;
    type metadata accessor for PhotogrammetryMetadataHelper();
    uint64_t v93 = swift_bridgeObjectRetain();
    uint64_t v94 = sub_24B560F38(v93);
    uint64_t v95 = *(uint64_t (**)(void))(*(void *)v94 + 176);
    swift_retain();
    uint64_t v96 = v95();
    uint64_t v98 = v97;
    uint64_t v100 = v99;
    char v102 = v101;
    uint64_t v229 = v94;
    swift_release();
    *(void *)(v85 + 40) = v96;
    *(void *)(v85 + 48) = v98;
    *(void *)(v85 + 56) = v100;
    *(unsigned char *)(v85 + 64) = v102 & 1;
    if (v102)
    {
      unint64_t v103 = v244.n128_u64[0];
      v266((char *)v244.n128_u64[0], v267, v48);
      unint64_t v104 = sub_24B6824B0();
      os_log_type_t v105 = sub_24B682B20();
      if (!os_log_type_enabled(v104, v105))
      {
        uint64_t v117 = (char *)v103;
        goto LABEL_50;
      }
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v106 = 134349056;
      v278[0].boundingBox.columns[0].i64[0] = v265;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v104, v105, "Image Folder Reader: Failed to parse gravity field of sample (id = %{public}ld)", v106, 0xCu);
      uint64_t v247 = (char *)v103;
    }
    else
    {
      uint64_t v117 = v247;
      v266(v247, v267, v48);
      unint64_t v104 = sub_24B6824B0();
      os_log_type_t v118 = sub_24B682B30();
      if (!os_log_type_enabled(v104, v118))
      {
LABEL_50:

        v270(v117, v48);
        uint64_t v119 = *(uint64_t (**)(uint64_t))(*(void *)v229 + 192);
        uint64_t v120 = swift_retain();
        uint64_t v121 = v119(v120);
        char v123 = v122;
        swift_release();
        uint64_t v124 = v85 + v263[17];
        *(void *)uint64_t v124 = v121;
        *(unsigned char *)(v124 + 8) = v123 & 1;
        uint64_t v125 = v249.i64[0];
        v266((char *)v249.i64[0], v267, v48);
        uint64_t v126 = sub_24B6824B0();
        os_log_type_t v127 = sub_24B682B10();
        if (os_log_type_enabled(v126, v127))
        {
          uint64_t v128 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v128 = 134349056;
          v278[0].boundingBox.columns[0].i64[0] = v265;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v126, v127, "Image Folder Reader: Parsed metadata and timestamp fields of sample (id = %{public}ld)", v128, 0xCu);
          uint64_t v129 = v128;
          uint64_t v125 = v249.i64[0];
          MEMORY[0x24C5D6C00](v129, -1, -1);
        }

        v270(v125, v48);
        goto LABEL_53;
      }
      uint64_t v106 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v106 = 134349056;
      v278[0].boundingBox.columns[0].i64[0] = v265;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v104, v118, "Image Folder Reader: Parsed gravity field of sample (id = %{public}ld)", v106, 0xCu);
    }
    MEMORY[0x24C5D6C00](v106, -1, -1);
    uint64_t v117 = v247;
    goto LABEL_50;
  }
  long long v90 = v240;
  if (sub_24B5A2F00(v90))
  {

    *(void *)(v85 + 72) = v89;
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v278[0].boundingBox.columns[0].i64[0] = 0;
  v278[0].boundingBox.columns[0].i64[1] = 0xE000000000000000;
  sub_24B682E40();
  sub_24B682890();
  v276.transform.columns[0].i32[0] = CVPixelBufferGetPixelFormatType(v90);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  simd_float4 v114 = v278[0].boundingBox.columns[0];
  sub_24B585BB0();
  swift_allocError();
  *os_log_type_t v115 = v114;
  v115[1].i8[0] = 1;
  swift_willThrow();

  sub_24B58620C(v238, v272);
LABEL_45:
  uint64_t v116 = v85;
LABEL_107:
  sub_24B586278(v116, type metadata accessor for PhotogrammetrySample);
}

BOOL sub_24B5805AC(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC200);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B563A6C(a1, (uint64_t)v4, &qword_2697CC200);
  BOOL v5 = swift_getEnumCaseMultiPayload() != 1;
  sub_24B5632A8((uint64_t)v4, &qword_2697CC200);
  return v5;
}

uint64_t sub_24B580660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC200);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B563A6C(a1, (uint64_t)v6, &qword_2697CC200);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_24B585D34((uint64_t)v6, a2);
  }
  uint64_t result = sub_24B682EF0();
  __break(1u);
  return result;
}

void *sub_24B580778(uint64_t a1)
{
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
  swift_beginAccess();
  if (*v4)
  {
    uint64_t v5 = sub_24B583020();
    if (!v2)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)(v5 + 16);
      swift_beginAccess();
      *(void *)(v1 + 16) = v7;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v1;
      *(void *)(v8 + 24) = a1;
      sub_24B562F04(&qword_2697CC1E8);
      uint64_t v2 = (void *)swift_allocObject();
      v2[2] = v6;
      v2[3] = sub_24B585C44;
      v2[4] = v8;
      v2[5] = sub_24B580C08;
      v2[6] = 0;
      v2[7] = sub_24B580C18;
      v2[8] = 0;
      swift_retain();
    }
  }
  else
  {
    sub_24B585BB0();
    uint64_t v9 = swift_allocError();
    *(void *)uint64_t v10 = 0xD000000000000051;
    *(void *)(v10 + 8) = 0x800000024B68BBA0;
    *(unsigned char *)(v10 + 16) = 1;
    uint64_t v2 = (void *)v9;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_24B5808DC@<X0>(NSObject *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24B6822E0();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_24B6824D0();
  MEMORY[0x270FA5388](v8);
  uint64_t result = sub_24B5852AC(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = 0;
  return result;
}

BOOL sub_24B580C08(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 8) & 1) == 0;
}

id sub_24B580C18@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    id result = (id)sub_24B682EF0();
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void **)a1;
    *a2 = v2;
    return v2;
  }
  return result;
}

void *sub_24B580CA8()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_24B585C4C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static ObjectCaptureImageFolderReader.loadPhotogrammetrySample(id:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v96 = a1;
  uint64_t v97 = a2;
  uint64_t v94 = a3;
  uint64_t v106 = *MEMORY[0x263EF8340];
  uint64_t v100 = sub_24B6822E0();
  uint64_t v98 = *(void *)(v100 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v88 - v5;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v101 = v7;
  uint64_t v102 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v88 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v88 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v88 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v88 - v21;
  uint64_t v23 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)v88 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v88 - v30;
  unint64_t v105 = 0;
  if (OCNonModularSPI_CMPhoto_HeicReadCreate())
  {
    uint64_t v32 = sub_24B57CB70();
    uint64_t v34 = v101;
    uint64_t v33 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v11, v32, v101);
    uint64_t v35 = sub_24B6824B0();
    os_log_type_t v36 = sub_24B682B20();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_24B55E000, v35, v36, "Image Folder Reader: Failed to initialize the image reade handle.", v37, 2u);
      MEMORY[0x24C5D6C00](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    sub_24B585BB0();
    swift_allocError();
    unint64_t v39 = 0xD00000000000002BLL;
    uint64_t v40 = "Failed to initialize the image reade handle";
LABEL_9:
    *(void *)uint64_t v38 = v39;
    *(void *)(v38 + 8) = (unint64_t)(v40 - 32) | 0x8000000000000000;
    *(unsigned char *)(v38 + 16) = 1;
    return swift_willThrow();
  }
  uint64_t v92 = v31;
  uint64_t v93 = v14;
  unint64_t v89 = v22;
  long long v90 = v29;
  uint64_t v91 = v26;
  uint64_t v41 = v99;
  uint64_t v42 = v100;
  uint64_t v43 = v101;
  unint64_t v44 = v105;
  if (OCNonModularSPI_CMPhoto_HeicReadStart())
  {
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    unint64_t v105 = 0;
    uint64_t v45 = sub_24B57CB70();
    uint64_t v46 = v102;
    unint64_t v47 = (unint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v93, v45, v43);
    uint64_t v48 = sub_24B6824B0();
    os_log_type_t v49 = sub_24B682B20();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_24B55E000, v48, v49, "Image Folder Reader: Failed to start the image reade handle.", v50, 2u);
      MEMORY[0x24C5D6C00](v50, -1, -1);
    }

    (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v47, v43);
    sub_24B585BB0();
    swift_allocError();
    unint64_t v39 = 0xD000000000000026;
    uint64_t v40 = "Failed to start the image reade handle";
    goto LABEL_9;
  }
  if (!v44)
  {
    uint64_t v70 = sub_24B57CB70();
    uint64_t v71 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v17, v70, v43);
    uint64_t v72 = sub_24B6824B0();
    os_log_type_t v73 = sub_24B682B20();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl(&dword_24B55E000, v72, v73, "Image Folder Reader: Failed to start the image read handle.", v74, 2u);
      MEMORY[0x24C5D6C00](v74, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v43);
    sub_24B585BB0();
    swift_allocError();
    *(void *)uint64_t v75 = 0xD000000000000025;
    *(void *)(v75 + 8) = 0x800000024B68BC60;
    *(unsigned char *)(v75 + 16) = 1;
    swift_willThrow();
    goto LABEL_26;
  }
  uint64_t v93 = (char *)v44;
  uint64_t v52 = type metadata accessor for PhotogrammetryImageHelper();
  uint64_t v53 = v97;
  v88[1] = v52;
  char v54 = sub_24B574398();
  uint64_t v55 = sub_24B57CB70();
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  if (v54)
  {
    unint64_t v58 = v89;
    v56(v89, v55, v43);
    uint64_t v59 = v6;
    (*v57)(v6, v53, v42);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B30();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v99 = (char *)v63;
      *(_DWORD *)uint64_t v62 = 134349571;
      uint64_t v64 = v96;
      uint64_t v103 = v96;
      uint64_t v104 = v63;
      sub_24B682CD0();
      *(_WORD *)(v62 + 12) = 2160;
      uint64_t v103 = 1752392040;
      sub_24B682CD0();
      *(_WORD *)(v62 + 22) = 2081;
      uint64_t v65 = sub_24B6822D0();
      uint64_t v103 = sub_24B5627B8(v65, v66, &v104);
      uint64_t v53 = v97;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v100);
      _os_log_impl(&dword_24B55E000, v60, v61, "Image Folder Reader: Reading sample from HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v62, 0x20u);
      uint64_t v67 = v99;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v67, -1, -1);
      MEMORY[0x24C5D6C00](v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v58, v101);
      uint64_t v69 = v94;
      uint64_t v68 = v95;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v42);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v58, v101);
      uint64_t v69 = v94;
      uint64_t v68 = v95;
      uint64_t v64 = v96;
    }
    uint64_t v85 = (uint64_t)v90;
    type metadata accessor for ObjectCaptureImageFolderReader();
    sub_24B57E384(v64, v53, (unint64_t)v93, v85);
    uint64_t v86 = (uint64_t)v92;
    if (v68) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v76 = v43;
    uint64_t v77 = v20;
    v56(v20, v55, v43);
    id v78 = v41;
    (*v57)(v41, v53, v42);
    uint64_t v79 = sub_24B6824B0();
    os_log_type_t v80 = sub_24B682B30();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 134349571;
      uint64_t v103 = v96;
      uint64_t v104 = v82;
      sub_24B682CD0();
      *(_WORD *)(v81 + 12) = 2160;
      uint64_t v103 = 1752392040;
      sub_24B682CD0();
      *(_WORD *)(v81 + 22) = 2081;
      uint64_t v83 = sub_24B6822D0();
      uint64_t v103 = sub_24B5627B8(v83, v84, &v104);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v78, v100);
      _os_log_impl(&dword_24B55E000, v79, v80, "Image Folder Reader: Reading sample from non-HEIC image with id = %{public}ld from url = %{private,mask.hash}s", (uint8_t *)v81, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v82, -1, -1);
      MEMORY[0x24C5D6C00](v81, -1, -1);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v77, v101);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v98 + 8))(v41, v42);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v77, v76);
    }
    uint64_t v87 = v95;
    uint64_t v85 = (uint64_t)v91;
    sub_24B572628(v96, v97, (uint64_t)v91);
    if (v87) {
      goto LABEL_26;
    }
    uint64_t v69 = v94;
    uint64_t v86 = (uint64_t)v92;
  }
  sub_24B585D34(v85, v86);
  sub_24B585D34(v86, v69);
LABEL_26:
  OCNonModularSPI_CMPhoto_HeicReadStop();
  return OCNonModularSPI_CMPhoto_HeicReadDestroy();
}

char *sub_24B581778()
{
  uint64_t v183 = *MEMORY[0x263EF8340];
  uint64_t v176 = sub_24B6824D0();
  uint64_t v0 = *(void *)(v176 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v176);
  uint64_t v175 = (char *)&v146 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v151 = (char *)&v146 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v150 = (char *)&v146 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v157 = (char *)&v146 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  simd_float4 v158 = (char *)&v146 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v146 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v146 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v160 = (char *)&v146 - v17;
  uint64_t v18 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  os_log_type_t v171 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v172 = (char *)&v146 - v21;
  uint64_t v22 = sub_24B6822E0();
  uint64_t v173 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v155 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v146 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  unint64_t v154 = (char *)&v146 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v146 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  unint64_t v168 = (char *)&v146 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v167 = (char *)&v146 - v35;
  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  uint64_t v182 = 0;
  OCNonModularSPI_CMPhoto_HeicReadCreate();
  uint64_t v37 = v182;
  OCNonModularSPI_CMPhoto_HeicReadStart();
  if (!v37)
  {
    sub_24B585BB0();
    swift_allocError();
    *(void *)uint64_t v59 = 0xD000000000000051;
    unint64_t v60 = 0x800000024B68BBA0;
    char v61 = 1;
LABEL_57:
    *(void *)(v59 + 8) = v60;
    *(unsigned char *)(v59 + 16) = v61;
    swift_willThrow();
    uint64_t v144 = v182;
    OCNonModularSPI_CMPhoto_HeicReadStop();
    OCNonModularSPI_CMPhoto_HeicReadDestroy();

    return v144;
  }
  uint64_t v179 = 0;
  uint64_t v38 = (void *)sub_24B682250();
  id v181 = 0;
  id v149 = v36;
  id v39 = objc_msgSend(v36, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v38, 0, 0, &v181);

  id v40 = v181;
  if (!v39)
  {
    id v62 = v181;
    uint64_t v63 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v64 = sub_24B57CB70();
    uint64_t v65 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v175, v64, v176);
    id v66 = v63;
    id v67 = v63;
    uint64_t v68 = sub_24B6824B0();
    os_log_type_t v69 = sub_24B682B20();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = (void *)swift_slowAlloc();
      id v181 = v71;
      *(_DWORD *)uint64_t v70 = 136446210;
      swift_getErrorValue();
      uint64_t v72 = sub_24B683020();
      uint64_t v180 = sub_24B5627B8(v72, v73, (uint64_t *)&v181);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v68, v69, "Image Folder Reader: contentsOfDirectory error: %{public}s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v71, -1, -1);
      MEMORY[0x24C5D6C00](v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v0 + 8))(v175, v176);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v0 + 8))(v65, v176);
    }
    id v36 = v149;
    sub_24B585BB0();
    swift_allocError();
    unint64_t v60 = 0;
    char v61 = 0;
    *(void *)uint64_t v59 = v63;
    goto LABEL_57;
  }
  uint64_t v156 = v16;
  uint64_t v41 = sub_24B6829A0();
  id v42 = v40;

  id v181 = (id)MEMORY[0x263F8EE78];
  uint64_t v43 = *(void (**)(char *, uint64_t))(v41 + 16);
  simd_float4 v159 = v13;
  uint64_t v170 = v22;
  uint64_t v152 = v27;
  uint64_t v169 = v32;
  uint64_t v166 = v43;
  if (v43)
  {
    uint64_t v165 = v0;
    unint64_t v44 = 0;
    uint64_t v164 = v173 + 16;
    uint64_t v162 = (void (**)(char *, char *, uint64_t))(v173 + 48);
    unint64_t v174 = (void (*)(char *, char *, uint64_t))(v173 + 32);
    uint64_t v161 = (void (**)(char *, uint64_t))(v173 + 8);
    __n128 v163 = (unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 56);
    *(void *)&long long v153 = (v173 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v45 = (void (**)(void))(v173 + 32);
    do
    {
      if (v44 >= *(void *)(v41 + 16))
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
      }
      uint64_t v46 = v173;
      uint64_t v47 = v22;
      unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v49 = v41;
      unint64_t v50 = v41 + v48;
      uint64_t v51 = *(void *)(v173 + 72);
      uint64_t v52 = (uint64_t)v172;
      (*(void (**)(char *, unint64_t, uint64_t))(v173 + 16))(v172, v50 + v51 * v44, v47);
      uint64_t v175 = *(char **)(v46 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v175)(v52, 0, 1, v47);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v52, 1, v47) == 1)
      {
        uint64_t v22 = v47;
        uint64_t v74 = v175;
        uint64_t v0 = v165;
        goto LABEL_22;
      }
      uint64_t v53 = *v45;
      char v54 = v167;
      (*v45)();
      type metadata accessor for PhotogrammetryImageHelper();
      if (sub_24B573DD0())
      {
        ((void (*)(char *, char *, uint64_t))v53)(v168, v54, v47);
        uint64_t v55 = v181;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24B585DE4(0, v55[2] + 1, 1);
          uint64_t v55 = v181;
        }
        unint64_t v57 = v55[2];
        unint64_t v56 = v55[3];
        if (v57 >= v56 >> 1)
        {
          sub_24B585DE4(v56 > 1, v57 + 1, 1);
          uint64_t v55 = v181;
        }
        v55[2] = v57 + 1;
        unint64_t v58 = (char *)v55 + v48 + v57 * v51;
        uint64_t v22 = v170;
        ((void (*)(char *, char *, uint64_t))v53)(v58, v168, v170);
        id v181 = v55;
      }
      else
      {
        (*v161)(v54, v47);
        uint64_t v22 = v47;
      }
      ++v44;
      uint64_t v32 = v169;
      uint64_t v41 = v49;
    }
    while (v166 != (void (*)(char *, uint64_t))v44);
    uint64_t v0 = v165;
    uint64_t v74 = v175;
  }
  else
  {
    uint64_t v74 = *(char **)(v173 + 56);
  }
  uint64_t v52 = (uint64_t)v172;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74)(v172, 1, 1, v22);
LABEL_22:
  swift_bridgeObjectRelease();
  sub_24B5632A8(v52, &qword_2697CC1F0);
  uint64_t v75 = v181;
  uint64_t v76 = sub_24B57CB70();
  uint64_t v77 = *(char **)(v0 + 16);
  uint64_t v172 = (char *)v76;
  unint64_t v168 = (char *)(v0 + 16);
  uint64_t v167 = v77;
  ((void (*)(char *))v77)(v160);
  swift_retain();
  id v78 = sub_24B6824B0();
  os_log_type_t v79 = sub_24B682B30();
  if (os_log_type_enabled(v78, v79))
  {
    os_log_type_t v80 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v80 = 134349056;
    uint64_t v32 = v169;
    id v181 = (id)v75[2];
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v78, v79, "Image Folder Reader: Number of loadable image files = %{public}ld", v80, 0xCu);
    MEMORY[0x24C5D6C00](v80, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v81 = v159;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v82 = v0 + 8;
  uint64_t v84 = v176;
  uint64_t v166 = v83;
  v83(v160, v176);
  ((void (*)(char *, char *, uint64_t))v167)(v156, v172, v84);
  uint64_t v85 = sub_24B6824B0();
  os_log_type_t v86 = sub_24B682B30();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v87 = 0;
    _os_log_impl(&dword_24B55E000, v85, v86, "Image Folder Reader: ImageFiles: [", v87, 2u);
    MEMORY[0x24C5D6C00](v87, -1, -1);
  }

  uint64_t v165 = v82;
  v166(v156, v176);
  uint64_t v147 = v75;
  uint64_t v89 = v75[2];
  if (v89)
  {
    unint64_t v174 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
    long long v90 = (char *)v147 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    uint64_t v160 = *(char **)(v173 + 72);
    uint64_t v164 = v173 + 56;
    __n128 v163 = (unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48);
    uint64_t v162 = (void (**)(char *, char *, uint64_t))(v173 + 32);
    uint64_t v161 = (void (**)(char *, uint64_t))(v173 + 8);
    *(void *)&long long v88 = 141558787;
    long long v153 = v88;
    uint64_t v146 = MEMORY[0x263F8EE58] + 8;
    uint64_t v175 = v74;
    uint64_t v156 = (char *)(v173 + 16);
    while (1)
    {
      uint64_t v91 = v171;
      v174(v171, v90, v22);
      ((void (*)(char *, void, uint64_t, uint64_t))v74)(v91, 0, 1, v22);
      if ((*v163)(v91, 1, v22) == 1) {
        goto LABEL_50;
      }
      (*v162)(v32, v91, v22);
      unint64_t v178 = *(unsigned int *)sub_24B5F6688();
      unint64_t v177 = *(unsigned int *)sub_24B5F6694();
      type metadata accessor for PhotogrammetryImageHelper();
      if ((sub_24B574398() & 1) == 0) {
        break;
      }
      uint64_t v92 = (void *)sub_24B682250();
      swift_beginAccess();
      swift_beginAccess();
      int Resolution = OCNonModularSPI_CMPhoto_readResolution();
      swift_endAccess();
      swift_endAccess();

      if (!Resolution)
      {
        ((void (*)(char *, char *, uint64_t))v167)(v81, v172, v176);
        uint64_t v119 = v32;
        uint64_t v120 = v154;
        v174(v154, v119, v22);
        uint64_t v121 = sub_24B6824B0();
        char v122 = v81;
        os_log_type_t v123 = sub_24B682B30();
        if (os_log_type_enabled(v121, v123))
        {
          uint64_t v124 = swift_slowAlloc();
          uint64_t v125 = (void *)swift_slowAlloc();
          id v181 = v125;
          *(_DWORD *)uint64_t v124 = v153;
          *(void *)(v124 + 4) = 1752392040;
          *(_WORD *)(v124 + 12) = 2081;
          uint64_t v126 = sub_24B6822D0();
          *(void *)(v124 + 14) = sub_24B5627B8(v126, v127, (uint64_t *)&v181);
          swift_bridgeObjectRelease();
          uint64_t v128 = *v161;
          (*v161)(v120, v170);
          *(_WORD *)(v124 + 22) = 2050;
          *(void *)(v124 + 24) = v178;
          *(_WORD *)(v124 + 32) = 2050;
          *(void *)(v124 + 34) = v177;
          _os_log_impl(&dword_24B55E000, v121, v123, "Image Folder Reader: %{private,mask.hash}s of resolution %{public}llu x %{public}llu", (uint8_t *)v124, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v125, -1, -1);
          uint64_t v129 = v124;
          uint64_t v22 = v170;
          MEMORY[0x24C5D6C00](v129, -1, -1);

          uint64_t v81 = v159;
          v166(v159, v176);
          uint64_t v32 = v169;
          v128(v169, v22);
        }
        else
        {

          uint64_t v132 = *v161;
          (*v161)(v120, v22);
          v166(v122, v176);
          uint64_t v32 = v169;
          v132(v169, v22);
          uint64_t v81 = v122;
        }
LABEL_45:
        uint64_t v74 = v175;
        goto LABEL_46;
      }
      uint64_t v94 = v158;
      ((void (*)(char *, char *, uint64_t))v167)(v158, v172, v176);
      uint64_t v95 = v152;
      v174(v152, v32, v22);
      uint64_t v96 = sub_24B6824B0();
      os_log_type_t v97 = sub_24B682B20();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = swift_slowAlloc();
        id v148 = (void *)swift_slowAlloc();
        id v181 = v148;
        *(_DWORD *)uint64_t v98 = v153;
        *(void *)(v98 + 4) = 1752392040;
        *(_WORD *)(v98 + 12) = 2081;
        uint64_t v99 = sub_24B6822D0();
        *(void *)(v98 + 14) = sub_24B5627B8(v99, v100, (uint64_t *)&v181);
        swift_bridgeObjectRelease();
        uint64_t v101 = *v161;
        (*v161)(v95, v170);
        *(_WORD *)(v98 + 22) = 2050;
        *(void *)(v98 + 24) = v178;
        *(_WORD *)(v98 + 32) = 2050;
        *(void *)(v98 + 34) = v177;
        _os_log_impl(&dword_24B55E000, v96, v97, "Image Folder Reader: Failed to fetch image resolution in %{private,mask.hash}s, using default resolution %{public}llu x %{public}llu as an estimate instead.", (uint8_t *)v98, 0x2Au);
        uint64_t v102 = v148;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v102, -1, -1);
        uint64_t v103 = v98;
        uint64_t v22 = v170;
        MEMORY[0x24C5D6C00](v103, -1, -1);

        v166(v158, v176);
        v101(v32, v22);
      }
      else
      {

        uint64_t v130 = *v161;
        (*v161)(v95, v22);
        v166(v94, v176);
        v130(v32, v22);
      }
      uint64_t v81 = v159;
      uint64_t v74 = v175;
LABEL_46:
      swift_beginAccess();
      unint64_t v133 = v178;
      swift_beginAccess();
      if (!is_mul_ok(v133, v177)) {
        goto LABEL_60;
      }
      if (__CFADD__(v179, v133 * v177)) {
        goto LABEL_61;
      }
      v179 += v133 * v177;
      long long v90 = &v160[(void)v90];
      if (!--v89) {
        goto LABEL_49;
      }
    }
    unint64_t v104 = sub_24B573FB0((uint64_t)v32);
    if (v105)
    {
      (*v161)(v32, v22);
      goto LABEL_46;
    }
    unint64_t v106 = HIDWORD(v104);
    unint64_t v107 = v104;
    swift_beginAccess();
    unint64_t v178 = v107;
    swift_beginAccess();
    unint64_t v177 = v106;
    int v108 = v157;
    ((void (*)(char *, char *, uint64_t))v167)(v157, v172, v176);
    simd_float4 v109 = v155;
    v174(v155, v32, v22);
    float v110 = sub_24B6824B0();
    os_log_type_t v111 = sub_24B682B30();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = swift_slowAlloc();
      id v148 = (void *)swift_slowAlloc();
      id v181 = v148;
      *(_DWORD *)uint64_t v112 = v153;
      *(void *)(v112 + 4) = 1752392040;
      *(_WORD *)(v112 + 12) = 2081;
      uint64_t v113 = sub_24B6822D0();
      *(void *)(v112 + 14) = sub_24B5627B8(v113, v114, (uint64_t *)&v181);
      swift_bridgeObjectRelease();
      os_log_type_t v115 = *v161;
      (*v161)(v109, v170);
      uint64_t v116 = v115;
      *(_WORD *)(v112 + 22) = 2050;
      *(void *)(v112 + 24) = v178;
      *(_WORD *)(v112 + 32) = 2050;
      *(void *)(v112 + 34) = v177;
      _os_log_impl(&dword_24B55E000, v110, v111, "Image Folder Reader: %{private,mask.hash}s of resolution %{public}llu x %{public}llu", (uint8_t *)v112, 0x2Au);
      uint64_t v117 = v148;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v117, -1, -1);
      uint64_t v118 = v112;
      uint64_t v22 = v170;
      MEMORY[0x24C5D6C00](v118, -1, -1);

      v166(v157, v176);
      v116(v32, v22);
    }
    else
    {

      uint64_t v131 = *v161;
      (*v161)(v109, v22);
      v166(v108, v176);
      v131(v32, v22);
    }
    uint64_t v81 = v159;
    goto LABEL_45;
  }
LABEL_49:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74)(v171, 1, 1, v22);
LABEL_50:
  swift_release();
  int v134 = v150;
  ((void (*)(char *, char *, uint64_t))v167)(v150, v172, v176);
  uint64_t v135 = sub_24B6824B0();
  os_log_type_t v136 = sub_24B682B30();
  if (os_log_type_enabled(v135, v136))
  {
    uint64_t v137 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v137 = 0;
    _os_log_impl(&dword_24B55E000, v135, v136, "Image Folder Reader: ]  // Files", v137, 2u);
    MEMORY[0x24C5D6C00](v137, -1, -1);
  }

  uint64_t v138 = v176;
  v166(v134, v176);
  os_log_type_t v139 = v151;
  ((void (*)(char *, char *, uint64_t))v167)(v151, v172, v138);
  uint64_t v140 = v179;
  uint64_t v141 = sub_24B6824B0();
  os_log_type_t v142 = sub_24B682B30();
  if (os_log_type_enabled(v141, v142))
  {
    id v143 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v143 = 134349056;
    id v181 = v140;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v141, v142, "Image Folder Reader: Total number of pixels is %{public}llu", v143, 0xCu);
    MEMORY[0x24C5D6C00](v143, -1, -1);
  }

  v166(v139, v176);
  swift_beginAccess();
  uint64_t v144 = v179;
  OCNonModularSPI_CMPhoto_HeicReadStop();
  OCNonModularSPI_CMPhoto_HeicReadDestroy();

  return v144;
}

uint64_t sub_24B582FAC()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24B582FE0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t sub_24B583020()
{
  v295[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_24B562F04(&qword_2697CC210);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v231 = (char *)&v231 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = sub_24B562F04(&qword_2697CC218);
  uint64_t v257 = *(void *)(v284 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v284);
  uint64_t v275 = (char *)&v231 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v274 = (uint64_t)&v231 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  float32x4_t v255 = (char **)((char *)&v231 - v8);
  MEMORY[0x270FA5388](v7);
  uint64_t v254 = (char **)((char *)&v231 - v9);
  uint64_t v10 = sub_24B562F04(&qword_2697CC068);
  MEMORY[0x270FA5388](v10 - 8);
  id v259 = (char *)&v231 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v280 = sub_24B6823B0();
  uint64_t v267 = *(char **)(v280 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v280);
  long long v279 = (char *)&v231 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v263 = (uint64_t)&v231 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v256 = (char *)&v231 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v262 = (char *)&v231 - v18;
  uint64_t v285 = sub_24B6824D0();
  uint64_t v19 = *(void *)(v285 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v285);
  uint64_t v22 = (char *)&v231 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v233 = (char *)&v231 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v232 = (char *)&v231 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  __n128 v239 = (char *)&v231 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v261 = (char *)&v231 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v253 = (char *)&v231 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v242 = (char *)&v231 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v268 = (char *)&v231 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v269 = (char *)&v231 - v37;
  uint64_t v38 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  v260 = (char *)&v231 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v288 = (uint64_t)&v231 - v41;
  uint64_t v42 = sub_24B6822E0();
  int v286 = *(char **)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  CoreOC::PhotogrammetrySample::Object v276 = (char *)&v231 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v252 = (char *)&v231 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  float32x4_t v241 = (char *)&v231 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v264 = (char *)&v231 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  float32x4_t v283 = (char *)&v231 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  float32x4_t v287 = (char *)&v231 - v54;
  MEMORY[0x270FA5388](v53);
  float32x4_t v282 = (char *)&v231 - v55;
  id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  uint64_t v238 = v0;
  unint64_t v57 = (void *)sub_24B682250();
  sub_24B562F04(&qword_2697CC140);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_24B684E60;
  uint64_t v59 = (void *)*MEMORY[0x263EFF610];
  *(void *)(v58 + 32) = *MEMORY[0x263EFF610];
  type metadata accessor for URLResourceKey(0);
  id v60 = v59;
  char v61 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  v295[0] = 0;
  id v237 = v56;
  id v62 = objc_msgSend(v56, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v57, v61, 0, v295);

  id v63 = v295[0];
  if (!v62)
  {
    id v83 = v295[0];
    uint64_t v84 = (void *)sub_24B6821B0();

    swift_willThrow();
    uint64_t v85 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v85, v285);
    id v86 = v84;
    id v87 = v84;
    long long v88 = v22;
    uint64_t v89 = sub_24B6824B0();
    os_log_type_t v90 = sub_24B682B20();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v92 = (void *)swift_slowAlloc();
      v295[0] = v92;
      float32x4_t v289 = v22;
      *(_DWORD *)uint64_t v91 = 136446210;
      swift_getErrorValue();
      uint64_t v93 = sub_24B683020();
      long long v88 = (void *)v94;
      v294[0] = (void *)sub_24B5627B8(v93, v94, (uint64_t *)v295);
      sub_24B682CD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24B55E000, v89, v90, "Image Folder Reader: contentsOfDirectory error: %{public}s", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v92, -1, -1);
      MEMORY[0x24C5D6C00](v91, -1, -1);

      (*(void (**)(char *, uint64_t))(v19 + 8))(v289, v285);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v285);
    }
    sub_24B585BB0();
    swift_allocError();
    *(void *)uint64_t v229 = v84;
    *(void *)(v229 + 8) = 0;
    *(unsigned char *)(v229 + 16) = 0;
    swift_willThrow();

    return (uint64_t)v88;
  }
  uint64_t v273 = v19;
  float32x4_t v289 = (char *)v42;
  uint64_t v64 = sub_24B6829A0();
  id v65 = v63;

  v295[0] = (id)MEMORY[0x263F8EE78];
  long long v281 = *(void (**)(char *, char *))(v64 + 16);
  if (v281)
  {
    unint64_t v66 = 0;
    v278 = v286 + 16;
    v271 = v286 + 48;
    id v67 = (void (**)(char *, uint64_t, char *))(v286 + 32);
    uint64_t v270 = (void (**)(char *, char *))(v286 + 8);
    uint64_t v272 = (uint64_t)(v286 + 56);
    unint64_t v266 = (unint64_t)(v286 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v68 = v288;
    os_log_type_t v69 = v289;
    do
    {
      if (v66 >= *(void *)(v64 + 16))
      {
        __break(1u);
LABEL_88:
        swift_bridgeObjectRelease();
        __break(1u);
      }
      uint64_t v71 = v286;
      unint64_t v72 = (v71[80] + 32) & ~(unint64_t)v71[80];
      uint64_t v73 = v64;
      unint64_t v74 = v64 + v72;
      uint64_t v75 = *((void *)v286 + 9);
      (*((void (**)(uint64_t, unint64_t, char *))v286 + 2))(v68, v74 + v75 * v66, v69);
      uint64_t v76 = (void (*)(uint64_t, void, uint64_t, char *))*((void *)v71 + 7);
      v76(v68, 0, 1, v69);
      int v77 = (*((uint64_t (**)(uint64_t, uint64_t, char *))v71 + 6))(v68, 1, v69);
      v277 = (void (*)(void, void, void))v76;
      if (v77 == 1)
      {
        uint64_t v97 = v273;
        uint64_t v98 = v280;
        uint64_t v70 = v279;
        uint64_t v99 = v264;
        goto LABEL_20;
      }
      id v78 = *v67;
      os_log_type_t v79 = v282;
      (*v67)(v282, v68, v69);
      type metadata accessor for PhotogrammetryImageHelper();
      if (sub_24B573DD0())
      {
        v78(v287, (uint64_t)v79, v69);
        os_log_type_t v80 = (char *)v295[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24B585DE4(0, *((void *)v80 + 2) + 1, 1);
          os_log_type_t v80 = (char *)v295[0];
        }
        unint64_t v82 = *((void *)v80 + 2);
        unint64_t v81 = *((void *)v80 + 3);
        if (v82 >= v81 >> 1)
        {
          sub_24B585DE4(v81 > 1, v82 + 1, 1);
          os_log_type_t v80 = (char *)v295[0];
        }
        *((void *)v80 + 2) = v82 + 1;
        os_log_type_t v69 = v289;
        v78(&v80[v72 + v82 * v75], (uint64_t)v287, v289);
        v295[0] = v80;
      }
      else
      {
        (*v270)(v79, v69);
      }
      ++v66;
      uint64_t v70 = v279;
      uint64_t v68 = v288;
      uint64_t v64 = v73;
    }
    while (v281 != (void (*)(char *, char *))v66);
    uint64_t v96 = v69;
    uint64_t v95 = v277;
  }
  else
  {
    uint64_t v95 = (void (*)(void, void, void))*((void *)v286 + 7);
    uint64_t v68 = v288;
    uint64_t v96 = v289;
    uint64_t v70 = v279;
  }
  os_log_type_t v69 = v96;
  v277 = v95;
  v95(v68, 1, 1);
  uint64_t v97 = v273;
  uint64_t v98 = v280;
  uint64_t v99 = v264;
LABEL_20:
  swift_bridgeObjectRelease();
  sub_24B5632A8(v68, &qword_2697CC1F0);
  unint64_t v100 = (id *)v295[0];
  uint64_t v101 = sub_24B57CB70();
  uint64_t v102 = *(void (***)(char *, char *))(v97 + 16);
  uint64_t v272 = v101;
  v271 = (char *)(v97 + 16);
  uint64_t v270 = v102;
  ((void (*)(char *))v102)(v269);
  swift_retain();
  uint64_t v103 = sub_24B6824B0();
  os_log_type_t v104 = sub_24B682B30();
  BOOL v105 = os_log_type_enabled(v103, v104);
  uint64_t v235 = v100;
  if (v105)
  {
    unint64_t v106 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v106 = 134349056;
    os_log_type_t v69 = v289;
    v295[0] = v100[2];
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v103, v104, "Image Folder Reader: Number of loadable image files = %{public}ld", v106, 0xCu);
    MEMORY[0x24C5D6C00](v106, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v107 = (uint64_t)v259;
  uint64_t v108 = v273 + 8;
  simd_float4 v109 = v269;
  uint64_t v110 = v285;
  uint64_t v269 = *(char **)(v273 + 8);
  ((void (*)(char *, uint64_t))v269)(v109, v285);
  ((void (*)(char *, uint64_t, uint64_t))v270)(v268, v272, v110);
  os_log_type_t v111 = sub_24B6824B0();
  os_log_type_t v112 = sub_24B682B30();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl(&dword_24B55E000, v111, v112, "Image Folder Reader: ImageFiles: [", v113, 2u);
    unint64_t v114 = v113;
    uint64_t v107 = (uint64_t)v259;
    MEMORY[0x24C5D6C00](v114, -1, -1);
  }

  ((void (*)(char *, uint64_t))v269)(v268, v285);
  uint64_t v115 = v108;
  id v116 = v235[2];
  uint64_t v273 = v115;
  if (v116)
  {
    uint64_t v117 = v286;
    uint64_t v118 = (char *)v235 + ((v286[80] + 32) & ~(unint64_t)v286[80]);
    v248 = (void *)(v238 + OBJC_IVAR____TtC6CoreOC30ObjectCaptureImageFolderReader_heicReadHandle);
    swift_beginAccess();
    uint64_t v119 = v118;
    uint64_t v249 = 0;
    unint64_t v258 = 0;
    uint64_t v120 = (char *)*((void *)v117 + 2);
    v117 += 16;
    float32x4_t v287 = v120;
    uint64_t v244 = *((void *)v117 + 7);
    float32x4_t v251 = v117 + 40;
    uint64_t v250 = (unsigned int (**)(char *, uint64_t, char *))(v117 + 32);
    uint64_t v247 = (void (**)(char *, char *, char *))(v117 + 16);
    unint64_t v246 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v267 + 48);
    float32x4_t v240 = (void (**)(char *, uint64_t, uint64_t))(v267 + 32);
    uint64_t v245 = (void (**)(char *, uint64_t, uint64_t))(v267 + 16);
    uint64_t v288 = (uint64_t)v117;
    float32x4_t v282 = v117 - 8;
    uint64_t v268 = v267 + 8;
    v278 = (void *)MEMORY[0x263F8EE78];
    *(void *)&long long v121 = 141558531;
    long long v243 = v121;
    uint64_t v236 = MEMORY[0x263F8EE58] + 8;
    char v122 = v256;
    os_log_type_t v123 = v260;
    uint64_t v124 = v69;
    uint64_t v125 = (void (*)(char *, void, uint64_t, char *))v277;
    while (1)
    {
      uint64_t v267 = v119;
      ((void (*)(char *))v287)(v123);
      v125(v123, 0, 1, v124);
      if ((*v250)(v123, 1, v124) == 1) {
        goto LABEL_66;
      }
      uint64_t v265 = (uint64_t)v116;
      uint64_t v127 = (uint64_t)v283;
      (*v247)(v283, v123, v124);
      uint64_t v128 = type metadata accessor for PhotogrammetryImageHelper();
      sub_24B57381C(v127, v107);
      int v129 = (*v246)(v107, 1, v98);
      uint64_t v130 = v124;
      unint64_t v266 = v128;
      if (v129 == 1)
      {
        sub_24B5632A8(v107, &qword_2697CC068);
        uint64_t v131 = v263;
        sub_24B572094(v127, v263);
        uint64_t v132 = v98;
        uint64_t v133 = v285;
        ((void (*)(char *, uint64_t, uint64_t))v270)(v253, v272, v285);
        int v134 = v241;
        ((void (*)(char *, uint64_t, char *))v287)(v241, v127, v130);
        (*v245)(v70, v131, v132);
        uint64_t v135 = sub_24B6824B0();
        uint64_t v136 = v133;
        uint64_t v137 = v70;
        os_log_type_t v138 = sub_24B682B30();
        if (os_log_type_enabled(v135, v138))
        {
          uint64_t v139 = swift_slowAlloc();
          uint64_t v140 = (void *)swift_slowAlloc();
          v294[0] = v140;
          *(_DWORD *)uint64_t v139 = v243;
          *(void *)(v139 + 4) = 1752392040;
          *(_WORD *)(v139 + 12) = 2081;
          uint64_t v141 = sub_24B6822D0();
          *(void *)(v139 + 14) = sub_24B5627B8(v141, v142, (uint64_t *)v294);
          swift_bridgeObjectRelease();
          long long v281 = *(void (**)(char *, char *))v282;
          v281(v134, v289);
          *(_WORD *)(v139 + 22) = 2082;
          sub_24B5885C8(&qword_2697CC220, MEMORY[0x263F07490]);
          uint64_t v143 = sub_24B682F90();
          *(void *)(v139 + 24) = sub_24B5627B8(v143, v144, (uint64_t *)v294);
          swift_bridgeObjectRelease();
          uint64_t v145 = *(void (**)(void, uint64_t))v268;
          (*(void (**)(char *, uint64_t))v268)(v137, v132);
          _os_log_impl(&dword_24B55E000, v135, v138, "Image Folder Reader: %{private,mask.hash}s using creationDate instead: %{public}s", (uint8_t *)v139, 0x20u);
          swift_arrayDestroy();
          uint64_t v146 = v140;
          uint64_t v130 = v289;
          MEMORY[0x24C5D6C00](v146, -1, -1);
          MEMORY[0x24C5D6C00](v139, -1, -1);
        }
        else
        {
          long long v281 = *(void (**)(char *, char *))v282;
          v281(v134, v130);
          uint64_t v145 = *(void (**)(void, uint64_t))v268;
          (*(void (**)(char *, uint64_t))v268)(v137, v132);
        }

        ((void (*)(char *, uint64_t))v269)(v253, v136);
        uint64_t v70 = v137;
        sub_24B682360();
        uint64_t v158 = (uint64_t)v283;
        simd_float4 v159 = (char *)v255 + *(int *)(v284 + 48);
        void *v255 = v160;
        ((void (*)(char *, uint64_t, char *))v287)(v159, v158, v130);
        unint64_t v161 = (unint64_t)v278;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        __n128 v163 = v261;
        uint64_t v164 = v252;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v161 = sub_24B585940(0, *(void *)(v161 + 16) + 1, 1, v161);
        }
        unint64_t v166 = *(void *)(v161 + 16);
        unint64_t v165 = *(void *)(v161 + 24);
        uint64_t v167 = v161;
        if (v166 >= v165 >> 1) {
          uint64_t v167 = sub_24B585940(v165 > 1, v166 + 1, 1, v161);
        }
        *(void *)(v167 + 16) = v166 + 1;
        uint64_t v168 = v167;
        sub_24B56CF38((uint64_t)v255, v167+ ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80))+ *(void *)(v257 + 72) * v166, &qword_2697CC218);
        uint64_t v169 = (uint64_t *)&v293;
      }
      else
      {
        uint64_t v147 = v262;
        (*v240)(v262, v107, v98);
        id v148 = v242;
        ((void (*)(char *, uint64_t, uint64_t))v270)(v242, v272, v285);
        ((void (*)(char *, uint64_t, char *))v287)(v99, v127, v130);
        (*v245)(v122, (uint64_t)v147, v98);
        id v149 = sub_24B6824B0();
        os_log_type_t v150 = sub_24B682B30();
        if (os_log_type_enabled(v149, v150))
        {
          uint64_t v151 = swift_slowAlloc();
          uint64_t v152 = (void *)swift_slowAlloc();
          v294[0] = v152;
          *(_DWORD *)uint64_t v151 = v243;
          *(void *)(v151 + 4) = 1752392040;
          *(_WORD *)(v151 + 12) = 2081;
          uint64_t v153 = sub_24B6822D0();
          *(void *)(v151 + 14) = sub_24B5627B8(v153, v154, (uint64_t *)v294);
          swift_bridgeObjectRelease();
          long long v281 = *(void (**)(char *, char *))v282;
          v281(v99, v289);
          *(_WORD *)(v151 + 22) = 2082;
          sub_24B5885C8(&qword_2697CC220, MEMORY[0x263F07490]);
          uint64_t v155 = sub_24B682F90();
          *(void *)(v151 + 24) = sub_24B5627B8(v155, v156, (uint64_t *)v294);
          swift_bridgeObjectRelease();
          uint64_t v145 = *(void (**)(void, uint64_t))v268;
          (*(void (**)(char *, uint64_t))v268)(v122, v98);
          _os_log_impl(&dword_24B55E000, v149, v150, "Image Folder Reader: %{private,mask.hash}s with dateTimeOriginal %{public}s", (uint8_t *)v151, 0x20u);
          swift_arrayDestroy();
          uint64_t v157 = v152;
          uint64_t v130 = v289;
          MEMORY[0x24C5D6C00](v157, -1, -1);
          MEMORY[0x24C5D6C00](v151, -1, -1);
        }
        else
        {
          long long v281 = *(void (**)(char *, char *))v282;
          v281(v99, v130);
          uint64_t v145 = *(void (**)(void, uint64_t))v268;
          (*(void (**)(char *, uint64_t))v268)(v122, v98);
        }

        ((void (*)(char *, uint64_t))v269)(v148, v285);
        sub_24B682360();
        uint64_t v158 = (uint64_t)v283;
        uint64_t v170 = (char *)v254 + *(int *)(v284 + 48);
        void *v254 = v171;
        ((void (*)(char *, uint64_t, char *))v287)(v170, v158, v130);
        unint64_t v172 = (unint64_t)v278;
        char v173 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v70 = v279;
        __n128 v163 = v261;
        uint64_t v164 = v252;
        if ((v173 & 1) == 0) {
          unint64_t v172 = sub_24B585940(0, *(void *)(v172 + 16) + 1, 1, v172);
        }
        unint64_t v175 = *(void *)(v172 + 16);
        unint64_t v174 = *(void *)(v172 + 24);
        uint64_t v176 = v172;
        if (v175 >= v174 >> 1) {
          uint64_t v176 = sub_24B585940(v174 > 1, v175 + 1, 1, v172);
        }
        *(void *)(v176 + 16) = v175 + 1;
        uint64_t v168 = v176;
        sub_24B56CF38((uint64_t)v254, v176+ ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80))+ *(void *)(v257 + 72) * v175, &qword_2697CC218);
        uint64_t v169 = &v292;
      }
      v145(*(v169 - 32), v280);
      v278 = (void *)v168;
      uint64_t v99 = v264;
      if (!*v248) {
        goto LABEL_88;
      }
      uint64_t v177 = sub_24B574444(v158);
      uint64_t v98 = v280;
      if (v178) {
        break;
      }
      uint64_t v124 = v130;
      os_log_type_t v123 = v260;
      uint64_t v125 = (void (*)(char *, void, uint64_t, char *))v277;
      uint64_t v126 = v265;
LABEL_28:
      v281(v283, v124);
      uint64_t v119 = &v267[v244];
      id v116 = (id)(v126 - 1);
      uint64_t v107 = (uint64_t)v259;
      char v122 = v256;
      if (!v116) {
        goto LABEL_65;
      }
    }
    uint64_t v179 = v177;
    uint64_t v180 = v158;
    unint64_t v181 = v178;
    uint64_t v182 = v280;
    uint64_t v183 = v285;
    ((void (*)(char *, uint64_t, uint64_t))v270)(v163, v272, v285);
    ((void (*)(char *, uint64_t, char *))v287)(v164, v180, v130);
    swift_bridgeObjectRetain_n();
    uint64_t v184 = v163;
    uint64_t v185 = sub_24B6824B0();
    os_log_type_t v186 = sub_24B682B30();
    if (os_log_type_enabled(v185, v186))
    {
      uint64_t v187 = swift_slowAlloc();
      unint64_t v188 = (void *)swift_slowAlloc();
      v294[0] = v188;
      *(_DWORD *)uint64_t v187 = v243;
      *(void *)(v187 + 4) = 1752392040;
      *(_WORD *)(v187 + 12) = 2081;
      uint64_t v189 = sub_24B6822D0();
      *(void *)(v187 + 14) = sub_24B5627B8(v189, v190, (uint64_t *)v294);
      swift_bridgeObjectRelease();
      v281(v164, v289);
      *(_WORD *)(v187 + 22) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v187 + 24) = sub_24B5627B8(v179, v181, (uint64_t *)v294);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B55E000, v185, v186, "Image Folder Reader: %{private,mask.hash}s with HEIC version: %{public}s", (uint8_t *)v187, 0x20u);
      swift_arrayDestroy();
      float32x4_t v191 = v188;
      uint64_t v182 = v280;
      MEMORY[0x24C5D6C00](v191, -1, -1);
      uint64_t v124 = v289;
      MEMORY[0x24C5D6C00](v187, -1, -1);

      float32x4_t v192 = v261;
    }
    else
    {
      float32x4_t v193 = v164;
      uint64_t v124 = v130;
      v281(v193, v130);

      swift_bridgeObjectRelease_n();
      float32x4_t v192 = v184;
    }
    ((void (*)(char *, uint64_t))v269)(v192, v183);
    uint64_t v70 = v279;
    os_log_type_t v123 = v260;
    uint64_t v125 = (void (*)(char *, void, uint64_t, char *))v277;
    uint64_t v126 = v265;
    if (v258)
    {
      if (v249 == v179 && v258 == v181)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v194 = sub_24B682FA0();
        swift_bridgeObjectRelease();
        if ((v194 & 1) == 0)
        {
          v294[0] = (void *)0x302E302E31;
          v294[1] = (void *)0xE500000000000000;
          uint64_t v290 = v179;
          unint64_t v291 = v181;
          uint64_t v195 = sub_24B682440();
          uint64_t v196 = (uint64_t)v231;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56))(v231, 1, 1, v195);
          sub_24B57C484();
          uint64_t v197 = sub_24B682D30();
          sub_24B5632A8(v196, &qword_2697CC210);
          swift_bridgeObjectRelease();
          uint64_t v98 = v182;
          if (!v197) {
            (*(void (**)(uint64_t))(*(void *)v238 + 192))(1);
          }
          uint64_t v249 = v179;
          unint64_t v258 = v181;
          uint64_t v70 = v279;
          os_log_type_t v123 = v260;
          goto LABEL_60;
        }
        uint64_t v249 = v179;
        unint64_t v258 = v181;
        os_log_type_t v123 = v260;
      }
    }
    else
    {
      uint64_t v249 = v179;
      unint64_t v258 = v181;
    }
    uint64_t v98 = v182;
LABEL_60:
    uint64_t v99 = v264;
    goto LABEL_28;
  }
  unint64_t v258 = 0;
  v278 = (void *)MEMORY[0x263F8EE78];
  os_log_type_t v123 = v260;
  uint64_t v124 = v69;
  uint64_t v125 = (void (*)(char *, void, uint64_t, char *))v277;
LABEL_65:
  v125(v123, 1, 1, v124);
LABEL_66:
  swift_release();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t, uint64_t))v270)(v239, v272, v285);
  float32x4_t v198 = sub_24B6824B0();
  os_log_type_t v199 = sub_24B682B30();
  BOOL v200 = os_log_type_enabled(v198, v199);
  uint64_t v201 = v238;
  uint64_t v202 = v232;
  if (v200)
  {
    uint64_t v203 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v203 = 0;
    _os_log_impl(&dword_24B55E000, v198, v199, "Image Folder Reader: ]  // Files", v203, 2u);
    MEMORY[0x24C5D6C00](v203, -1, -1);
  }

  uint64_t v204 = v285;
  ((void (*)(char *, uint64_t))v269)(v239, v285);
  ((void (*)(char *, uint64_t, uint64_t))v270)(v202, v272, v204);
  swift_retain();
  uint64_t v205 = sub_24B6824B0();
  os_log_type_t v206 = sub_24B682B30();
  if (os_log_type_enabled(v205, v206))
  {
    id v207 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v207 = 67109120;
    LOBYTE(v294[0]) = (*(uint64_t (**)(void))(*(void *)v201 + 184))() & 1;
    LODWORD(v294[0]) = LOBYTE(v294[0]);
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v205, v206, "Image Folder Reader: Should reset legacy segment id: %{BOOL}d", v207, 8u);
    MEMORY[0x24C5D6C00](v207, -1, -1);
  }
  else
  {

    swift_release();
  }
  id v208 = v233;
  uint64_t v209 = v278;
  ((void (*)(char *, uint64_t))v269)(v202, v285);
  v294[0] = v209;
  swift_bridgeObjectRetain_n();
  uint64_t v210 = v234;
  sub_24B586E80(v294);
  if (!v210)
  {
    swift_bridgeObjectRelease();
    v211 = v294[0];
    ((void (*)(char *, uint64_t, uint64_t))v270)(v208, v272, v285);
    swift_retain();
    os_log_type_t v212 = sub_24B6824B0();
    os_log_type_t v213 = sub_24B682B30();
    if (os_log_type_enabled(v212, v213))
    {
      uint64_t v214 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v214 = 134349056;
      v294[0] = *((void **)v211 + 2);
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v212, v213, "Image Folder Reader: Number of loadable image files with valid timestamps = %{public}ld", v214, 0xCu);
      MEMORY[0x24C5D6C00](v214, -1, -1);
    }
    else
    {

      swift_release();
    }
    ((void (*)(char *, uint64_t))v269)(v208, v285);
    int64_t v215 = v211[2];
    if (v215)
    {
      uint64_t v285 = 0;
      v294[0] = (void *)MEMORY[0x263F8EE78];
      sub_24B585DE4(0, v215, 0);
      unint64_t v216 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
      float32x4_t v283 = (char *)v211;
      uint64_t v217 = (uint64_t)v211 + v216;
      uint64_t v218 = *(char **)(v257 + 72);
      float32x4_t v287 = v286 + 16;
      uint64_t v288 = (uint64_t)v218;
      uint64_t v219 = (void (**)(char *, char *, char *))(v286 + 32);
      uint64_t v220 = v289;
      uint64_t v221 = v276;
      do
      {
        uint64_t v222 = v274;
        sub_24B563A6C(v217, v274, &qword_2697CC218);
        uint64_t v223 = *(int *)(v284 + 48);
        uint64_t v224 = &v275[v223];
        (*(void (**)(char *, uint64_t, char *))v287)(&v275[v223], v222 + v223, v220);
        uint64_t v225 = *v219;
        (*v219)(v221, v224, v220);
        sub_24B5632A8(v222, &qword_2697CC218);
        long long v88 = v294[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24B585DE4(0, v88[2] + 1, 1);
          long long v88 = v294[0];
        }
        unint64_t v227 = v88[2];
        unint64_t v226 = v88[3];
        uint64_t v221 = v276;
        if (v227 >= v226 >> 1)
        {
          sub_24B585DE4(v226 > 1, v227 + 1, 1);
          uint64_t v221 = v276;
          long long v88 = v294[0];
        }
        void v88[2] = v227 + 1;
        unint64_t v228 = (unint64_t)v88
             + ((v286[80] + 32) & ~(unint64_t)v286[80])
             + *((void *)v286 + 9) * v227;
        uint64_t v220 = v289;
        v225((char *)v228, v221, v289);
        v294[0] = v88;
        v217 += v288;
        --v215;
      }
      while (v215);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();

      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v88;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24B5852AC(NSObject *a1, uint64_t a2)
{
  uint64_t v67 = a2;
  uint64_t v76 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B6822E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  os_log_type_t v69 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v70 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = sub_24B57CB70();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v61 = v15;
  uint64_t v62 = v10 + 16;
  id v60 = v16;
  ((void (*)(char *))v16)(v14);
  uint64_t v17 = *(void (**)(char *, NSObject *, uint64_t))(v4 + 16);
  uint64_t v68 = a1;
  uint64_t v59 = v4 + 16;
  uint64_t v58 = v17;
  v17(v8, a1, v3);
  uint64_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B30();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v63 = v4;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v64 = v10;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v56 = v3;
    uint64_t v57 = v23;
    v74[0] = v23;
    *(_DWORD *)uint64_t v22 = 141558275;
    uint64_t v72 = 1752392040;
    uint64_t v65 = v9;
    sub_24B682CD0();
    *(_WORD *)(v22 + 12) = 2081;
    uint64_t v24 = sub_24B6822D0();
    uint64_t v72 = sub_24B5627B8(v24, v25, v74);
    uint64_t v9 = v65;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(char *))(v4 + 8);
    uint64_t v27 = v8;
    uint64_t v28 = v56;
    v26(v27);
    _os_log_impl(&dword_24B55E000, v18, v19, "Image Folder Reader: Trying to load thumbnail %{private,mask.hash}s", (uint8_t *)v22, 0x16u);
    uint64_t v29 = v57;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v29, -1, -1);
    uint64_t v30 = v22;
    uint64_t v10 = v64;
    MEMORY[0x24C5D6C00](v30, -1, -1);
  }
  else
  {
    uint64_t v26 = *(void (**)(char *))(v4 + 8);
    uint64_t v31 = v8;
    uint64_t v28 = v3;
    ((void (*)(char *, uint64_t))v26)(v31, v3);
  }

  uint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
  v32(v14, v9);
  uint64_t v75 = 0;
  swift_beginAccess();
  uint64_t v33 = v68;
  uint64_t v34 = (void *)sub_24B682250();
  int Thumbnail = OCNonModularSPI_CMPhoto_readThumbnail();

  uint64_t v37 = v69;
  uint64_t v36 = v70;
  if (Thumbnail || (uint64_t v38 = v75) == 0)
  {
    uint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_24B682E40();
    swift_bridgeObjectRelease();
    uint64_t v72 = 0xD000000000000030;
    unint64_t v73 = 0x800000024B68BD20;
    sub_24B6822D0();
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v38 = v72;
    unint64_t v39 = v73;
    sub_24B585BB0();
    swift_allocError();
    *(void *)uint64_t v40 = v38;
    *(void *)(v40 + 8) = v39;
    *(unsigned char *)(v40 + 16) = 1;
    swift_willThrow();
  }
  else
  {
    v60(v70, v61, v9);
    uint64_t v41 = v33;
    uint64_t v42 = v28;
    v58(v37, v41, v28);
    uint64_t v43 = sub_24B6824B0();
    os_log_type_t v44 = sub_24B682B30();
    uint64_t v68 = v43;
    LODWORD(v67) = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = v37;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v66 = v47;
      *(_DWORD *)uint64_t v46 = 141558275;
      uint64_t v71 = 1752392040;
      uint64_t v72 = v47;
      uint64_t v65 = v9;
      sub_24B682CD0();
      *(_WORD *)(v46 + 12) = 2081;
      uint64_t v64 = v10;
      uint64_t v48 = sub_24B6822D0();
      uint64_t v71 = sub_24B5627B8(v48, v49, &v72);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v26)(v45, v42);
      uint64_t v50 = v68;
      _os_log_impl(&dword_24B55E000, v68, (os_log_type_t)v67, "Image Folder Reader: Successfully loaded thumbnail %{private,mask.hash}s", (uint8_t *)v46, 0x16u);
      uint64_t v51 = v66;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v51, -1, -1);
      MEMORY[0x24C5D6C00](v46, -1, -1);

      uint64_t v52 = v65;
      uint64_t v53 = v70;
    }
    else
    {
      ((void (*)(char *, uint64_t))v26)(v37, v42);

      uint64_t v53 = v36;
      uint64_t v52 = v9;
    }
    v32(v53, v52);
  }
  return v38;
}

uint64_t sub_24B585940(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC228);
  uint64_t v10 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24B682EE0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24B58846C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_24B585BB0()
{
  unint64_t result = qword_2697CC1D8;
  if (!qword_2697CC1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC1D8);
  }
  return result;
}

uint64_t sub_24B585C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24B57D8EC(a1, v2, a2);
}

uint64_t sub_24B585C0C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B585C44@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24B5808DC(a1, *(void *)(v2 + 24), a2);
}

void *sub_24B585C4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24B562F04(&qword_2697CCDB0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  unint64_t v6 = sub_24B5882D8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24B563218();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24B585D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySample(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ObjectCaptureImageFolderReader()
{
  uint64_t result = qword_2697CDA10;
  if (!qword_2697CDA10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24B585DE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24B585FCC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24B585E04()
{
  return type metadata accessor for ObjectCaptureImageFolderReader();
}

uint64_t sub_24B585E0C()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureImageFolderReader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureImageFolderReader);
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgSamplesCount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.__allocating_init(url:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgSamples()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.pgThumbnails(maxPixelSize:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ObjectCaptureImageFolderReader.invalidSampleIdsRead()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

ValueMetadata *type metadata accessor for ObjectCaptureImageFolderReader.Error()
{
  return &type metadata for ObjectCaptureImageFolderReader.Error;
}

uint64_t sub_24B585FB8(void *a1)
{
  return sub_24B586398(0, a1[2], 0, a1);
}

uint64_t sub_24B585FCC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC1F8);
  uint64_t v10 = *(void *)(sub_24B6822E0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24B6822E0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  os_log_type_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B58620C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24B586220(a1, a2);
  }
  return a1;
}

uint64_t sub_24B586220(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_24B586278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B5862D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B586340(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_24B586398(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC228);
  uint64_t v10 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  os_log_type_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5865E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_24B683080();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B586960(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24B5866DC()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24B562F04(&qword_2697CC208);
  uint64_t result = sub_24B682E10();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                unint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_24B683080();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_24B586960(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_24B5866DC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_24B586A84();
      goto LABEL_14;
    }
    sub_24B586C1C();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_24B683080();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_24B682FE0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_24B586A84()
{
  unint64_t v1 = v0;
  sub_24B562F04(&qword_2697CC208);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682E00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24B586C1C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_24B562F04(&qword_2697CC208);
  uint64_t result = sub_24B682E10();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_24B683080();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24B586E80(void **a1)
{
  uint64_t v2 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_24B585FB8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_24B586F2C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_24B586F2C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = sub_24B562F04(&qword_2697CC218);
  uint64_t v4 = *(void *)(v129 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v129);
  uint64_t v125 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v135 = (uint64_t)&v120 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v132 = (double *)((char *)&v120 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v131 = (double *)((char *)&v120 - v11);
  uint64_t v12 = a1[1];
  uint64_t result = sub_24B682F80();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_24B587964(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v128 = v4;
  uint64_t v122 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v127 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v121 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_106:
      uint64_t v113 = v18;
      if (v20 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_135;
          }
          if (!v114) {
            goto LABEL_147;
          }
          uint64_t v116 = *(void *)&v113[16 * v115 + 32];
          uint64_t v117 = *(void *)&v113[16 * v20 + 24];
          sub_24B587BE4(v114 + *(void *)(v128 + 72) * v116, v114 + *(void *)(v128 + 72) * *(void *)&v113[16 * v20 + 16], v114 + *(void *)(v128 + 72) * v117, v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_24B5882C4((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_137;
          }
          uint64_t v118 = &v113[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v20 > v119) {
            goto LABEL_138;
          }
          memmove(&v113[16 * v20 + 16], &v113[16 * v20 + 32], 16 * (v119 - v20));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_24B6829F0();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v121 = v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  int v134 = a1;
  while (1)
  {
    uint64_t v21 = v19 + 1;
    uint64_t v126 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v30 = v19 + 1;
    }
    else
    {
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v4 + 72);
      uint64_t v24 = *a1 + v23 * v21;
      uint64_t v25 = v131;
      uint64_t v133 = v12;
      sub_24B563A6C(v24, (uint64_t)v131, &qword_2697CC218);
      uint64_t v26 = v132;
      sub_24B563A6C(v22 + v23 * v126, (uint64_t)v132, &qword_2697CC218);
      double v27 = *v25;
      double v28 = *v26;
      sub_24B5632A8((uint64_t)v26, &qword_2697CC218);
      uint64_t v29 = (uint64_t)v25;
      uint64_t v19 = v126;
      uint64_t v12 = v133;
      sub_24B5632A8(v29, &qword_2697CC218);
      uint64_t v30 = v19 + 2;
      uint64_t v124 = v22;
      uint64_t v136 = v23;
      if (v19 + 2 >= v12)
      {
        uint64_t v37 = v23;
        uint64_t v4 = v128;
        if (v27 >= v28) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v123 = v2;
        uint64_t v120 = v18;
        uint64_t v130 = v23 * v21;
        uint64_t v31 = v22;
        uint64_t v32 = v19 + 2;
        uint64_t v33 = v23 * (v19 + 2);
        while (1)
        {
          uint64_t v34 = v131;
          sub_24B563A6C(v31 + v33, (uint64_t)v131, &qword_2697CC218);
          uint64_t v35 = v132;
          sub_24B563A6C(v31 + v130, (uint64_t)v132, &qword_2697CC218);
          BOOL v36 = *v34 >= *v35;
          sub_24B5632A8((uint64_t)v35, &qword_2697CC218);
          sub_24B5632A8((uint64_t)v34, &qword_2697CC218);
          if (v27 < v28 == v36) {
            break;
          }
          uint64_t v37 = v136;
          v31 += v136;
          ++v32;
          uint64_t v12 = v133;
          if (v133 == v32)
          {
            uint64_t v30 = v133;
            uint64_t v4 = v128;
            uint64_t v18 = v120;
            uint64_t v2 = v123;
            uint64_t v22 = v124;
            uint64_t v19 = v126;
            if (v27 < v28) {
              goto LABEL_26;
            }
            goto LABEL_39;
          }
        }
        uint64_t v4 = v128;
        uint64_t v18 = v120;
        uint64_t v30 = v32;
        uint64_t v2 = v123;
        uint64_t v22 = v124;
        uint64_t v19 = v126;
        uint64_t v12 = v133;
        uint64_t v37 = v136;
        if (v27 >= v28) {
          goto LABEL_39;
        }
      }
LABEL_26:
      if (v30 < v19) {
        goto LABEL_141;
      }
      if (v19 < v30)
      {
        uint64_t v123 = v2;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v30 - 1);
        uint64_t v40 = v30 * v37;
        uint64_t v41 = v19 * v37;
        do
        {
          if (v19 != v30 + v38 - 1)
          {
            if (!v22) {
              goto LABEL_146;
            }
            uint64_t v130 = v22 + v39;
            sub_24B56CF38(v22 + v41, v125, &qword_2697CC218);
            if (v41 < v39 || v22 + v41 >= (unint64_t)(v22 + v40))
            {
              uint64_t v42 = v130;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v42 = v130;
              if (v41 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_24B56CF38(v125, v42, &qword_2697CC218);
            a1 = v134;
            uint64_t v22 = v124;
            uint64_t v37 = v136;
          }
          ++v19;
          --v38;
          v39 -= v37;
          v40 -= v37;
          v41 += v37;
        }
        while (v19 < v30 + v38);
        uint64_t v4 = v128;
        uint64_t v2 = v123;
        uint64_t v19 = v126;
        uint64_t v12 = v133;
      }
    }
LABEL_39:
    if (v30 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v30, v19)) {
      goto LABEL_139;
    }
    if (v30 - v19 >= v122) {
      goto LABEL_57;
    }
    if (__OFADD__(v19, v122)) {
      goto LABEL_142;
    }
    uint64_t v43 = v19 + v122 >= v12 ? v12 : v19 + v122;
    if (v43 < v19) {
      break;
    }
    if (v30 != v43)
    {
      uint64_t v120 = v18;
      uint64_t v123 = v2;
      uint64_t v124 = v43;
      uint64_t v44 = *(void *)(v4 + 72);
      uint64_t v136 = v44 * (v30 - 1);
      uint64_t v130 = v44;
      uint64_t v45 = v30 * v44;
      do
      {
        uint64_t v47 = 0;
        uint64_t v133 = v30;
        while (1)
        {
          uint64_t v48 = *a1;
          uint64_t v49 = v45;
          uint64_t v50 = v45 + v47 + *a1;
          uint64_t v51 = a1;
          uint64_t v52 = v131;
          sub_24B563A6C(v50, (uint64_t)v131, &qword_2697CC218);
          uint64_t v53 = v136 + v47 + v48;
          uint64_t v54 = v132;
          sub_24B563A6C(v53, (uint64_t)v132, &qword_2697CC218);
          double v55 = *v52;
          double v56 = *v54;
          sub_24B5632A8((uint64_t)v54, &qword_2697CC218);
          sub_24B5632A8((uint64_t)v52, &qword_2697CC218);
          if (v55 >= v56) {
            break;
          }
          uint64_t v57 = *v51;
          if (!*v51) {
            goto LABEL_144;
          }
          uint64_t v45 = v49;
          uint64_t v58 = v57 + v136 + v47;
          sub_24B56CF38(v57 + v49 + v47, v135, &qword_2697CC218);
          swift_arrayInitWithTakeFrontToBack();
          sub_24B56CF38(v135, v58, &qword_2697CC218);
          v47 -= v130;
          ++v19;
          uint64_t v46 = v133;
          a1 = v134;
          if (v133 == v19) {
            goto LABEL_50;
          }
        }
        a1 = v51;
        uint64_t v46 = v133;
        uint64_t v45 = v49;
LABEL_50:
        uint64_t v30 = v46 + 1;
        v136 += v130;
        v45 += v130;
        uint64_t v19 = v126;
      }
      while (v30 != v124);
      uint64_t v30 = v124;
      uint64_t v2 = v123;
      uint64_t v18 = v120;
    }
LABEL_57:
    if (v30 < v19) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v133 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_24B588084(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v61 = *((void *)v18 + 2);
    unint64_t v60 = *((void *)v18 + 3);
    unint64_t v20 = v61 + 1;
    if (v61 >= v60 >> 1) {
      uint64_t v18 = sub_24B588084((char *)(v60 > 1), v61 + 1, 1, v18);
    }
    uint64_t v62 = v2;
    *((void *)v18 + 2) = v20;
    uint64_t v63 = v18 + 32;
    uint64_t v64 = &v18[16 * v61 + 32];
    uint64_t v65 = v133;
    *(void *)uint64_t v64 = v19;
    *((void *)v64 + 1) = v65;
    if (v61)
    {
      while (1)
      {
        unint64_t v66 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v71 = &v63[16 * v20];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_123;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_124;
          }
          unint64_t v78 = v20 - 2;
          os_log_type_t v79 = &v63[16 * v20 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_126;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_129;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v63[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_133;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_94;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v95 = *((void *)v18 + 4);
            uint64_t v96 = *((void *)v18 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_88;
          }
          uint64_t v68 = *((void *)v18 + 4);
          uint64_t v67 = *((void *)v18 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_125;
        }
        unint64_t v78 = v20 - 2;
        uint64_t v84 = &v63[16 * v20 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_128;
        }
        os_log_type_t v90 = &v63[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_131;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_132;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_94:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v89) {
          goto LABEL_127;
        }
        uint64_t v97 = &v63[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_130;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v106 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v107 = v18;
        uint64_t v108 = &v63[16 * v105];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v63[16 * v66];
        uint64_t v111 = *((void *)v110 + 1);
        sub_24B587BE4(v106 + *(void *)(v128 + 72) * *(void *)v108, v106 + *(void *)(v128 + 72) * *(void *)v110, v106 + *(void *)(v128 + 72) * v111, v127);
        if (v62) {
          goto LABEL_117;
        }
        if (v111 < v109) {
          goto LABEL_120;
        }
        if (v66 > *((void *)v107 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v108 = v109;
        *(void *)&v63[16 * v105 + 8] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v66 >= v112) {
          goto LABEL_122;
        }
        uint64_t v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v63[16 * v66], v110 + 16, 16 * (v112 - 1 - v66));
        *((void *)v107 + 2) = v112 - 1;
        a1 = v134;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v19 = v133;
    uint64_t v2 = v62;
    uint64_t v12 = a1[1];
    uint64_t v4 = v128;
    if (v133 >= v12) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

uint64_t sub_24B587964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t v28 = sub_24B562F04(&qword_2697CC218);
  uint64_t v7 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v29 = (double *)((char *)&v25 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (double *)((char *)&v25 - v13);
  uint64_t v31 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v34 = v15 * (v31 - 1);
    uint64_t v30 = v15;
    uint64_t v33 = v15 * v31;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v27;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_24B563A6C(v33 + v16 + *a4, (uint64_t)v14, &qword_2697CC218);
      uint64_t v19 = v34 + v16 + v18;
      unint64_t v20 = v29;
      sub_24B563A6C(v19, (uint64_t)v29, &qword_2697CC218);
      double v21 = *v14;
      double v22 = *v20;
      sub_24B5632A8((uint64_t)v20, &qword_2697CC218);
      uint64_t result = sub_24B5632A8((uint64_t)v14, &qword_2697CC218);
      if (v21 >= v22)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v26) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v34 + v16;
      sub_24B56CF38(v23 + v33 + v16, v32, &qword_2697CC218);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_24B56CF38(v32, v24, &qword_2697CC218);
      v16 -= v30;
      if (v31 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24B587BE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = sub_24B562F04(&qword_2697CC218);
  uint64_t v8 = MEMORY[0x270FA5388](v40);
  uint64_t v10 = (double *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v28 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v30 = -v14;
        do
        {
          unint64_t v31 = a3 + v30;
          sub_24B563A6C(v28 + v30, (uint64_t)v12, &qword_2697CC218);
          unint64_t v32 = a2 + v30;
          sub_24B563A6C(a2 + v30, (uint64_t)v10, &qword_2697CC218);
          double v33 = *v12;
          double v34 = *v10;
          sub_24B5632A8((uint64_t)v10, &qword_2697CC218);
          sub_24B5632A8((uint64_t)v12, &qword_2697CC218);
          if (v33 >= v34)
          {
            unint64_t v35 = v41;
            v41 += v30;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v30;
          }
          unint64_t v28 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v39);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v39 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_24B563A6C(a2, (uint64_t)v12, &qword_2697CC218);
        sub_24B563A6C(a4, (uint64_t)v10, &qword_2697CC218);
        double v21 = *v12;
        double v22 = *v10;
        sub_24B5632A8((uint64_t)v10, &qword_2697CC218);
        sub_24B5632A8((uint64_t)v12, &qword_2697CC218);
        unint64_t v23 = v43;
        if (v21 >= v22)
        {
          unint64_t v26 = v42 + v14;
          if (v43 < v42 || v43 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v26;
          unint64_t v24 = a2;
        }
        else
        {
          unint64_t v24 = a2 + v14;
          if (v43 < a2 || v43 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v23 + v14;
        a4 = v42;
        if (v42 >= v39) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_68:
    sub_24B588180(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

char *sub_24B588084(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CC230);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24B588180(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_24B562F04(&qword_2697CC218);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_24B682F40();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_24B5882C4(uint64_t a1)
{
  return sub_24B588084(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_24B5882D8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_24B58846C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_24B562F04(&qword_2697CC218) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5885C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional __swiftcall ObjectCaptureFrameEvent.GestureEvent.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 5;
  if ((unint64_t)rawValue < 5) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional)rawValue;
}

uint64_t ObjectCaptureFrameEvent.GestureEvent.rawValue.getter()
{
  return *v0;
}

BOOL sub_24B58862C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s6CoreOC21PhotogrammetrySessionC13ConfigurationV14SampleOrderingO9hashValueSivg_0()
{
  return sub_24B6830D0();
}

uint64_t sub_24B588688()
{
  return sub_24B6830A0();
}

uint64_t sub_24B5886B4()
{
  return sub_24B6830D0();
}

CoreOC::ObjectCaptureFrameEvent::GestureEvent_optional sub_24B5886F8(Swift::Int *a1)
{
  return ObjectCaptureFrameEvent.GestureEvent.init(rawValue:)(*a1);
}

void sub_24B588700(void *a1@<X8>)
{
  *a1 = *v1;
}

CoreOC::ObjectCaptureFrameEvent::ScanStatus_optional __swiftcall ObjectCaptureFrameEvent.ScanStatus.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (CoreOC::ObjectCaptureFrameEvent::ScanStatus_optional)rawValue;
}

uint64_t ObjectCaptureFrameEvent.ScanStatus.rawValue.getter()
{
  return *v0;
}

BOOL sub_24B588730(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_24B588748@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

unint64_t static ObjectCaptureFrameEvent.header.getter()
{
  return 0xD000000000000047;
}

void sub_24B588784(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0x78))();
}

uint64_t sub_24B5887E0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = (void *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

double sub_24B588838()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_24B588880(double a1)
{
  char v3 = (double *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp);
  uint64_t result = swift_beginAccess();
  *char v3 = a1;
  return result;
}

void *sub_24B5888D4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & **a1) + 0x90))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_24B588940(char *a1, void *a2)
{
  char v2 = *a1;
  char v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

uint64_t sub_24B588990@<X0>(unsigned char *a1@<X8>)
{
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_24B5889E0(char *a1)
{
  char v2 = *a1;
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

void *sub_24B588A34@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))((*MEMORY[0x263F8EED0] & **a1) + 0xA8))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_24B588AA0(char *a1, void *a2)
{
  char v2 = *a1;
  char v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

uint64_t sub_24B588AF0@<X0>(unsigned char *a1@<X8>)
{
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_24B588B40(char *a1)
{
  char v2 = *a1;
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus);
  uint64_t result = swift_beginAccess();
  *char v3 = v2;
  return result;
}

void sub_24B588B94(void **a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = (*(double (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xC0))();
  *(void *)(a2 + 8) = v3;
}

uint64_t sub_24B588BF0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position);
  uint64_t result = swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

double sub_24B588C48()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_24B588C90(double a1, double a2)
{
  uint64_t v5 = (double *)(v2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position);
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_24B588CE8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_24B588D44(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B588DB0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24B588DFC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24B588EB8()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  int64_t v2 = *(void *)((*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))() + 16);
  if (v2)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_24B58AB18(0, v2, 0);
    uint64_t v3 = 0;
    uint64_t v4 = v19;
    do
    {
      uint64_t v5 = sub_24B682A60();
      uint64_t v7 = v6;
      uint64_t v19 = v4;
      unint64_t v9 = *(void *)(v4 + 16);
      unint64_t v8 = *(void *)(v4 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_24B58AB18((char *)(v8 > 1), v9 + 1, 1);
        uint64_t v4 = v19;
      }
      ++v3;
      *(void *)(v4 + 16) = v9 + 1;
      uint64_t v10 = v4 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_24B562F04(&qword_2697CC260);
  sub_24B58AB38();
  sub_24B682770();
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v11 = sub_24B682E40();
  (*(void (**)(uint64_t))((*v1 & *v0) + 0x78))(v11);
  sub_24B682A50();
  uint64_t v12 = sub_24B682890();
  (*(void (**)(char *__return_ptr, uint64_t))((*v1 & *v0) + 0x90))(&v18, v12);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_24B682890();
  (*(void (**)(char *__return_ptr, uint64_t))((*v1 & *v0) + 0xA8))(&v18, v13);
  sub_24B682F90();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_24B682890();
  int64_t v15 = *(void (**)(uint64_t))((*v1 & *v0) + 0xC0);
  v15(v14);
  sub_24B682A40();
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_24B682890();
  v15(v16);
  sub_24B682A40();
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t static ObjectCaptureFrameEvent.supportsSecureCoding.getter()
{
  return 1;
}

id ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)(unsigned char *a1, char *a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v13 = objc_allocWithZone(v6);
  char v14 = *a2;
  v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture] = *a1;
  v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus] = v14;
  int64_t v15 = (double *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position];
  *int64_t v15 = a5;
  v15[1] = a6;
  *(double *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp] = a4;
  *(void *)&v13[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform] = a3;
  v17.receiver = v13;
  v17.super_class = v6;
  return objc_msgSendSuper2(&v17, sel_init);
}

id ObjectCaptureFrameEvent.init(timestamp:gesture:scanStatus:position:boxTransform:)(unsigned char *a1, unsigned char *a2, uint64_t a3, double a4, double a5, double a6)
{
  v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_gesture] = *a1;
  v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_scanStatus] = *a2;
  uint64_t v7 = (double *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_position];
  *uint64_t v7 = a5;
  v7[1] = a6;
  *(double *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_timestamp] = a4;
  *(void *)&v6[OBJC_IVAR____TtC6CoreOC23ObjectCaptureFrameEvent_boxTransform] = a3;
  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for ObjectCaptureFrameEvent();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t ObjectCaptureFrameEvent.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ObjectCaptureFrameEvent.init(coder:)(a1);
}

uint64_t ObjectCaptureFrameEvent.init(coder:)(void *a1)
{
  id v3 = v1;
  uint64_t v4 = (void *)sub_24B6827A0();
  id v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  if ((unint64_t)v5 > 4) {
    goto LABEL_5;
  }
  uint64_t v6 = (void *)sub_24B6827A0();
  id v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  if (v7)
  {
    if (v7 == (id)1)
    {
      char v27 = (char)v5;
      unint64_t v28 = v3;
      char v26 = 1;
      goto LABEL_7;
    }
LABEL_5:

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  char v27 = (char)v5;
  unint64_t v28 = v3;
  char v26 = 0;
LABEL_7:
  objc_super v9 = (void *)sub_24B6827A0();
  objc_msgSend(a1, sel_decodeCGPointForKey_, v9);
  double v11 = v10;
  double v13 = v12;

  char v14 = (void *)sub_24B6827A0();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v14);
  double v16 = v15;

  uint64_t v17 = 0;
  char v18 = (char *)MEMORY[0x263F8EE78];
  do
  {
    sub_24B682F90();
    strcpy((char *)v30, "boxTransform");
    HIBYTE(v30[6]) = 0;
    v30[7] = -5120;
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)sub_24B6827A0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_decodeFloatForKey_, v19);
    int v21 = v20;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v18 = sub_24B58ACBC(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v23 = *((void *)v18 + 2);
    unint64_t v22 = *((void *)v18 + 3);
    if (v23 >= v22 >> 1) {
      char v18 = sub_24B58ACBC((char *)(v22 > 1), v23 + 1, 1, v18);
    }
    ++v17;
    *((void *)v18 + 2) = v23 + 1;
    *(_DWORD *)&v18[4 * v23 + 32] = v21;
  }
  while (v17 != 16);
  uint64_t ObjectType = swift_getObjectType();

  LOBYTE(v30[0]) = v27;
  char v29 = v26;
  uint64_t v8 = (*(uint64_t (**)(_WORD *, char *, char *, double, double, double))(ObjectType + 240))(v30, &v29, v18, v16, v11, v13);

  swift_deallocPartialClassInstance();
  return v8;
}

uint64_t ObjectCaptureFrameEvent.__allocating_init(line:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_24B682070();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v10 = &v97[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11) {
    goto LABEL_112;
  }
  uint64_t v107 = a1;
  uint64_t v108 = a2;
  v106[0] = 44;
  v106[1] = 0xE100000000000000;
  sub_24B57C484();
  double v12 = (void *)sub_24B682CF0();
  swift_bridgeObjectRelease();
  if (v12[2] < 5uLL) {
    goto LABEL_112;
  }
  unint64_t v101 = v12[2];
  uint64_t v102 = v4;
  uint64_t v13 = v12[5];
  uint64_t v107 = v12[4];
  uint64_t v108 = v13;
  swift_bridgeObjectRetain();
  sub_24B682060();
  uint64_t v14 = sub_24B682D00();
  uint64_t v16 = v15;
  uint64_t v103 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  uint64_t v104 = v8 + 8;
  v103(v10, v7);
  uint64_t v17 = swift_bridgeObjectRelease();
  v106[0] = 0;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  *(void *)&v97[-16] = v106;
  if ((v16 & 0x1000000000000000) != 0 || !(v16 & 0x2000000000000000 | v14 & 0x1000000000000000))
  {
    sub_24B682E30();
    goto LABEL_11;
  }
  MEMORY[0x270FA5388](v18);
  *(void *)&v97[-16] = sub_24B58AE18;
  *(void *)&v97[-8] = v19;
  if ((v16 & 0x2000000000000000) != 0)
  {
    uint64_t v107 = v14;
    uint64_t v108 = v16 & 0xFFFFFFFFFFFFFFLL;
    BOOL v23 = (v14 >= 0x21u || ((0x100003E01uLL >> v14) & 1) == 0)
       && (unint64_t v22 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
       && *v22 == 0;
    char v105 = v23;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if ((v14 & 0x1000000000000000) == 0) {
    goto LABEL_144;
  }
  uint64_t v20 = (v16 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v21 = v14 & 0xFFFFFFFFFFFFLL;
  while (1)
  {
    char v105 = sub_24B58ADB8(v20, v21, (void (*)(uint64_t *__return_ptr))sub_24B58AEE8) & 1;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_19:
    if ((v105 & 1) == 0) {
      goto LABEL_112;
    }
    if (v12[2] >= 2uLL) {
      break;
    }
    __break(1u);
LABEL_144:
    uint64_t v20 = sub_24B682E80();
  }
  double v24 = *(double *)v106;
  uint64_t v25 = v12[7];
  uint64_t v107 = v12[6];
  uint64_t v108 = v25;
  swift_bridgeObjectRetain();
  sub_24B682060();
  uint64_t v26 = sub_24B682D00();
  unint64_t v28 = v27;
  v103(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v28) & 0xF;
  uint64_t v30 = v26 & 0xFFFFFFFFFFFFLL;
  if ((v28 & 0x2000000000000000) != 0) {
    uint64_t v31 = HIBYTE(v28) & 0xF;
  }
  else {
    uint64_t v31 = v26 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v32 = v102;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_112;
  }
  if ((v28 & 0x1000000000000000) != 0)
  {
    uint64_t v34 = (uint64_t)sub_24B563088(v26, v28, 10);
    LOBYTE(v26) = v96;
    goto LABEL_54;
  }
  if ((v28 & 0x2000000000000000) != 0)
  {
    uint64_t v107 = v26;
    uint64_t v108 = v28 & 0xFFFFFFFFFFFFFFLL;
    if (v26 == 43)
    {
      if (!v29)
      {
LABEL_150:
        __break(1u);
        goto LABEL_151;
      }
      if (v29 == 1 || (BYTE1(v26) - 48) > 9u) {
        goto LABEL_51;
      }
      uint64_t v34 = (BYTE1(v26) - 48);
      if (v29 == 2) {
        goto LABEL_53;
      }
      if ((BYTE2(v26) - 48) <= 9u)
      {
        uint64_t v34 = 10 * (BYTE1(v26) - 48) + (BYTE2(v26) - 48);
        uint64_t v36 = v29 - 3;
        if (v36)
        {
          uint64_t v37 = (unsigned __int8 *)&v107 + 3;
          while (1)
          {
            unsigned int v38 = *v37 - 48;
            if (v38 > 9) {
              goto LABEL_51;
            }
            uint64_t v39 = 10 * v34;
            if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
              goto LABEL_51;
            }
            uint64_t v34 = v39 + v38;
            if (__OFADD__(v39, v38)) {
              goto LABEL_51;
            }
            LOBYTE(v26) = 0;
            ++v37;
            if (!--v36) {
              goto LABEL_54;
            }
          }
        }
        goto LABEL_53;
      }
    }
    else if (v26 == 45)
    {
      if (!v29)
      {
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      if (v29 != 1 && (BYTE1(v26) - 48) <= 9u)
      {
        if (v29 == 2)
        {
          LOBYTE(v26) = 0;
          uint64_t v34 = -(uint64_t)(BYTE1(v26) - 48);
          goto LABEL_54;
        }
        if ((BYTE2(v26) - 48) <= 9u)
        {
          uint64_t v34 = -10 * (BYTE1(v26) - 48) - (BYTE2(v26) - 48);
          uint64_t v62 = v29 - 3;
          if (v62)
          {
            uint64_t v63 = (unsigned __int8 *)&v107 + 3;
            while (1)
            {
              unsigned int v64 = *v63 - 48;
              if (v64 > 9) {
                goto LABEL_51;
              }
              uint64_t v65 = 10 * v34;
              if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
                goto LABEL_51;
              }
              uint64_t v34 = v65 - v64;
              if (__OFSUB__(v65, v64)) {
                goto LABEL_51;
              }
              LOBYTE(v26) = 0;
              ++v63;
              if (!--v62) {
                goto LABEL_54;
              }
            }
          }
LABEL_53:
          LOBYTE(v26) = 0;
          goto LABEL_54;
        }
      }
    }
    else if (v29 && (v26 - 48) <= 9u)
    {
      uint64_t v34 = (v26 - 48);
      if (v29 == 1) {
        goto LABEL_53;
      }
      if ((BYTE1(v26) - 48) <= 9u)
      {
        uint64_t v34 = 10 * (v26 - 48) + (BYTE1(v26) - 48);
        uint64_t v56 = v29 - 2;
        if (v56)
        {
          uint64_t v57 = (unsigned __int8 *)&v107 + 2;
          while (1)
          {
            unsigned int v58 = *v57 - 48;
            if (v58 > 9) {
              goto LABEL_51;
            }
            uint64_t v59 = 10 * v34;
            if ((unsigned __int128)(v34 * (__int128)10) >> 64 != (10 * v34) >> 63) {
              goto LABEL_51;
            }
            uint64_t v34 = v59 + v58;
            if (__OFADD__(v59, v58)) {
              goto LABEL_51;
            }
            LOBYTE(v26) = 0;
            ++v57;
            if (!--v56) {
              goto LABEL_54;
            }
          }
        }
        goto LABEL_53;
      }
    }
LABEL_51:
    uint64_t v34 = 0;
    LOBYTE(v26) = 1;
    goto LABEL_54;
  }
  if ((v26 & 0x1000000000000000) != 0) {
    double v33 = (unsigned __int8 *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    double v33 = (unsigned __int8 *)sub_24B682E80();
  }
  uint64_t v34 = (uint64_t)sub_24B563304(v33, v30, 10);
  LOBYTE(v26) = v35 & 1;
LABEL_54:
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0 || (unint64_t)v34 >= 5) {
    goto LABEL_112;
  }
  if (v12[2] < 3uLL)
  {
    __break(1u);
    goto LABEL_149;
  }
  uint64_t v40 = v12[9];
  uint64_t v107 = v12[8];
  uint64_t v108 = v40;
  swift_bridgeObjectRetain();
  sub_24B682060();
  uint64_t v41 = sub_24B682D00();
  unint64_t v43 = v42;
  v103(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_24B58A468(v41, v43);
  if (v45) {
    goto LABEL_112;
  }
  if (v44)
  {
    if (v44 != 1) {
      goto LABEL_112;
    }
    int v46 = 1;
  }
  else
  {
    int v46 = 0;
  }
  if (v12[2] >= 4uLL)
  {
    int v98 = v46;
    uint64_t v99 = v34;
    uint64_t v47 = v12[11];
    uint64_t v107 = v12[10];
    uint64_t v108 = v47;
    swift_bridgeObjectRetain();
    sub_24B682060();
    uint64_t v48 = sub_24B682D00();
    uint64_t v50 = v49;
    v103(v10, v7);
    uint64_t v51 = swift_bridgeObjectRelease();
    uint64_t v100 = v97;
    LODWORD(v106[0]) = 0;
    uint64_t v52 = MEMORY[0x270FA5388](v51);
    *(void *)&v97[-16] = v106;
    if ((v50 & 0x1000000000000000) == 0 && v50 & 0x2000000000000000 | v48 & 0x1000000000000000)
    {
      MEMORY[0x270FA5388](v52);
      *(void *)&v97[-16] = sub_24B58AE44;
      *(void *)&v97[-8] = v53;
      if ((v50 & 0x2000000000000000) != 0)
      {
        uint64_t v107 = v48;
        uint64_t v108 = v50 & 0xFFFFFFFFFFFFFFLL;
        if v48 < 0x21u && ((0x100003E01uLL >> v48))
        {
          BOOL v61 = 0;
        }
        else
        {
          unint64_t v60 = (unsigned char *)_swift_stdlib_strtof_clocale();
          if (v60) {
            BOOL v61 = *v60 == 0;
          }
          else {
            BOOL v61 = 0;
          }
        }
        char v105 = v61;
        swift_bridgeObjectRelease();
        goto LABEL_93;
      }
      if ((v48 & 0x1000000000000000) == 0) {
        goto LABEL_155;
      }
      uint64_t v54 = (v50 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v55 = v48 & 0xFFFFFFFFFFFFLL;
      while (1)
      {
        char v105 = sub_24B58ADB8(v54, v55, (void (*)(uint64_t *__return_ptr))sub_24B58AEE8) & 1;
LABEL_69:
        swift_bridgeObjectRelease();
LABEL_93:
        if ((v105 & 1) == 0) {
          goto LABEL_112;
        }
        if (v12[2] >= 5uLL)
        {
          float v3 = *(float *)v106;
          uint64_t v66 = v12[13];
          uint64_t v107 = v12[12];
          uint64_t v108 = v66;
          swift_bridgeObjectRetain();
          sub_24B682060();
          uint64_t v67 = sub_24B682D00();
          uint64_t v69 = v68;
          v103(v10, v7);
          uint64_t v70 = swift_bridgeObjectRelease();
          LODWORD(v106[0]) = 0;
          uint64_t v71 = MEMORY[0x270FA5388](v70);
          *(void *)&v97[-16] = v106;
          uint64_t v100 = v72;
          if ((v69 & 0x1000000000000000) != 0 || !(v69 & 0x2000000000000000 | v67 & 0x1000000000000000)) {
            goto LABEL_153;
          }
          MEMORY[0x270FA5388](v71);
          *(void *)&v97[-16] = sub_24B58AE44;
          *(void *)&v97[-8] = v73;
          if ((v69 & 0x2000000000000000) == 0)
          {
            if ((v67 & 0x1000000000000000) != 0)
            {
              uint64_t v74 = (v69 & 0xFFFFFFFFFFFFFFFLL) + 32;
              uint64_t v75 = v67 & 0xFFFFFFFFFFFFLL;
            }
            else
            {
              uint64_t v74 = sub_24B682E80();
            }
            char v105 = sub_24B58ADB8(v74, v75, (void (*)(uint64_t *__return_ptr))sub_24B58AEE8) & 1;
            goto LABEL_101;
          }
          uint64_t v107 = v67;
          uint64_t v108 = v69 & 0xFFFFFFFFFFFFFFLL;
          BOOL v78 = (v67 >= 0x21u || ((0x100003E01uLL >> v67) & 1) == 0)
             && (BOOL v77 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
             && *v77 == 0;
          char v105 = v78;
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_108;
        }
        __break(1u);
LABEL_155:
        uint64_t v54 = sub_24B682E80();
      }
    }
LABEL_151:
    sub_24B682E30();
    goto LABEL_69;
  }
  __break(1u);
LABEL_153:
  sub_24B682E30();
LABEL_101:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_108:
  if ((v105 & 1) == 0)
  {
LABEL_112:
    swift_bridgeObjectRelease();
    return 0;
  }
  float v79 = *(float *)v106;
  if (v101 < 0x15)
  {
    uint64_t v80 = (char *)MEMORY[0x263F8EE78];
LABEL_111:
    swift_bridgeObjectRelease();
    LOBYTE(v107) = v99;
    LOBYTE(v106[0]) = v98;
    return (*(uint64_t (**)(uint64_t *, void *, char *, double, double, double))(v32 + 240))(&v107, v106, v80, v24, v3, v79);
  }
  if (v12[2] >= 0x15uLL)
  {
    uint64_t v81 = 0;
    uint64_t v80 = (char *)MEMORY[0x263F8EE78];
    do
    {
      unint64_t v101 = (unint64_t)v80;
      uint64_t v82 = v12[v81 + 15];
      uint64_t v107 = v12[v81 + 14];
      uint64_t v108 = v82;
      swift_bridgeObjectRetain();
      sub_24B682060();
      uint64_t v83 = sub_24B682D00();
      uint64_t v85 = v84;
      v103(v10, v7);
      uint64_t v86 = swift_bridgeObjectRelease();
      LODWORD(v106[0]) = 0;
      MEMORY[0x270FA5388](v86);
      *(void *)&v97[-16] = v106;
      if ((v85 & 0x1000000000000000) != 0 || !(v85 & 0x2000000000000000 | v83 & 0x1000000000000000))
      {
        sub_24B682E30();
        swift_bridgeObjectRelease();
        uint64_t v32 = v102;
      }
      else if ((v85 & 0x2000000000000000) != 0)
      {
        uint64_t v107 = v83;
        uint64_t v108 = v85 & 0xFFFFFFFFFFFFFFLL;
        BOOL v92 = (v83 > 0x20u || ((0x100003E01uLL >> v83) & 1) == 0)
           && (uint64_t v91 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
           && *v91 == 0;
        uint64_t v32 = v102;
        char v105 = v92;
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v83 & 0x1000000000000000) != 0) {
          BOOL v87 = (unsigned __int8 *)((v85 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          BOOL v87 = (unsigned __int8 *)sub_24B682E80();
        }
        uint64_t v32 = v102;
        unint64_t v88 = *v87;
        BOOL v90 = (v88 >= 0x21 || ((0x100003E01uLL >> v88) & 1) == 0)
           && (char v89 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
           && *v89 == 0;
        char v105 = v90;
        swift_bridgeObjectRelease();
      }
      if (v105)
      {
        int v93 = v106[0];
        uint64_t v80 = (char *)v101;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v80 = sub_24B58ACBC(0, *((void *)v80 + 2) + 1, 1, v80);
        }
        unint64_t v95 = *((void *)v80 + 2);
        unint64_t v94 = *((void *)v80 + 3);
        if (v95 >= v94 >> 1) {
          uint64_t v80 = sub_24B58ACBC((char *)(v94 > 1), v95 + 1, 1, v80);
        }
        *((void *)v80 + 2) = v95 + 1;
        *(_DWORD *)&v80[4 * v95 + 32] = v93;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = (char *)MEMORY[0x263F8EE78];
      }
      v81 += 2;
    }
    while (v81 != 32);
    goto LABEL_111;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B58A468(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_24B682E80();
      }
      uint64_t v7 = (uint64_t)sub_24B563304(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_24B563088(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void sub_24B58A6B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(void *__return_ptr))((*MEMORY[0x263F8EED0] & *v1) + 0x90))(v25);
  uint64_t v5 = LOBYTE(v25[0]);
  uint64_t v6 = (void *)sub_24B6827A0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v5, v6);

  (*(void (**)(void *__return_ptr))((*v4 & *v2) + 0xA8))(v25);
  uint64_t v7 = LOBYTE(v25[0]);
  char v8 = (void *)sub_24B6827A0();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);

  double v9 = (*(double (**)(void))((*v4 & *v2) + 0xC0))();
  double v11 = v10;
  unsigned int v12 = (void *)sub_24B6827A0();
  objc_msgSend(a1, sel_encodePoint_forKey_, v12, v9, v11);

  double v13 = (*(double (**)(void))((*v4 & *v2) + 0x78))();
  uint64_t v14 = (void *)sub_24B6827A0();
  uint64_t v15 = a1;
  objc_msgSend(a1, sel_encodeDouble_forKey_, v14, v13);

  unsigned int v16 = *(uint64_t (**)(void))((*v4 & *v2) + 0xD8);
  uint64_t v17 = *(void *)(v16() + 16);
  uint64_t v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = ((uint64_t (*)(uint64_t))v16)(v18);
      if (v19 >= *(void *)(v20 + 16)) {
        break;
      }
      unint64_t v21 = v19 + 1;
      int v22 = *(_DWORD *)(v20 + 4 * v19 + 32);
      swift_bridgeObjectRelease();
      v25[0] = v19;
      sub_24B682F90();
      strcpy((char *)v25, "boxTransform");
      BYTE5(v25[1]) = 0;
      HIWORD(v25[1]) = -5120;
      sub_24B682890();
      swift_bridgeObjectRelease();
      BOOL v23 = (void *)sub_24B6827A0();
      swift_bridgeObjectRelease();
      LODWORD(v24) = v22;
      objc_msgSend(v15, sel_encodeFloat_forKey_, v23, v24);

      unint64_t v19 = v21;
      if (v17 == v21) {
        return;
      }
    }
    __break(1u);
  }
}

id ObjectCaptureFrameEvent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ObjectCaptureFrameEvent.init()()
{
}

id ObjectCaptureFrameEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ObjectCaptureFrameEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_24B58AB18(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_24B58ABB8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_24B58AB38()
{
  unint64_t result = qword_2697CC268;
  if (!qword_2697CC268)
  {
    sub_24B566158(&qword_2697CC260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC268);
  }
  return result;
}

uint64_t type metadata accessor for ObjectCaptureFrameEvent()
{
  return self;
}

char *sub_24B58ABB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CC198);
    double v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    double v10 = (char *)MEMORY[0x263F8EE78];
  }
  double v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_24B58ACBC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CCE00);
    double v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    double v10 = (char *)MEMORY[0x263F8EE78];
  }
  double v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24B58ADB8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_24B58AE18@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24B58AE70(a1, MEMORY[0x263F8EE90], a2);
}

unsigned char *sub_24B58AE44@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24B58AE70(a1, MEMORY[0x263F8EE98], a2);
}

unsigned char *sub_24B58AE70@<X0>(unsigned char *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1 << v4) & 0x100003E01;
  BOOL v7 = v5 || v6 == 0;
  BOOL v8 = v7 && (result = (unsigned char *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

void *sub_24B58AEE8@<X0>(unsigned char *a1@<X8>)
{
  return sub_24B58AF00(a1);
}

void *sub_24B58AF00@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_24B58AF48()
{
  unint64_t result = qword_2697CC270;
  if (!qword_2697CC270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC270);
  }
  return result;
}

unint64_t sub_24B58AFA0()
{
  unint64_t result = qword_2697CC278;
  if (!qword_2697CC278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC278);
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureFrameEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureFrameEvent);
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.timestamp.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.gesture.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.scanStatus.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.position.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.boxTransform.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.__allocating_init(timestamp:gesture:scanStatus:position:boxTransform:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ObjectCaptureFrameEvent.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

unsigned char *initializeBufferWithCopyOfBuffer for ObjectCaptureSession.Configuration(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObjectCaptureFrameEvent.GestureEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B58B2DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_24B58B304(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24B58B30C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureFrameEvent.GestureEvent()
{
  return &type metadata for ObjectCaptureFrameEvent.GestureEvent;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.ScanExtent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObjectCaptureFrameEvent.ScanStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B58B480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24B58B4A8(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureFrameEvent.ScanStatus()
{
  return &type metadata for ObjectCaptureFrameEvent.ScanStatus;
}

uint64_t *sub_24B58B4C4@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_24B58B4DC(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC4A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04((uint64_t *)&unk_2697CC420);
  uint64_t v6 = sub_24B682F30();
  BOOL v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, &qword_2697CC4A8);
    unint64_t result = sub_24B59F008((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B682410();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    unint64_t result = sub_24B59EFA4(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B58B6F8(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04((uint64_t *)&unk_2697CC480);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC470);
  uint64_t v6 = sub_24B682F30();
  BOOL v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, (uint64_t *)&unk_2697CC480);
    unint64_t result = sub_24B59F008((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B682410();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(_DWORD *)(v7[7] + 4 * v16) = *(_DWORD *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FreeformMeshManager.BackgroundData(uint64_t a1)
{
  return sub_24B56BBFC(a1, qword_2697CDEE0);
}

uint64_t sub_24B58B90C()
{
  return 0x100000000;
}

uint64_t sub_24B58B928()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  unint64_t v11 = (char *)&v35 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  if (*(unsigned char *)(v0 + 12))
  {
    sub_24B56CF38(v0 + 13, (uint64_t)&v38, (uint64_t *)&unk_2697CC340);
    sub_24B56CF38((uint64_t)&v38, (uint64_t)&v39, (uint64_t *)&unk_2697CC340);
    if (v39 == 2)
    {
      uint64_t v14 = sub_24B57CCC8();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v14, v1);
      char v15 = sub_24B6824B0();
      os_log_type_t v16 = sub_24B682B20();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v37 = v18;
        *(_DWORD *)uint64_t v17 = 136380675;
        uint64_t v36 = sub_24B5627B8(0x2864696C61567369, 0xE900000000000029, &v37);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v15, v16, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - either arkitVoxelSize or scanExtent must be specified!", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v18, -1, -1);
        MEMORY[0x24C5D6C00](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      return 0;
    }
  }
  else if (*(float *)(v0 + 8) <= 0.0)
  {
    uint64_t v25 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v13, v25, v1);
    uint64_t v26 = sub_24B6824B0();
    os_log_type_t v27 = sub_24B682B20();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v37 = v29;
      *(_DWORD *)unint64_t v28 = 136380675;
      uint64_t v36 = sub_24B5627B8(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v26, v27, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - invalid arkitVoxelSize!", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v29, -1, -1);
      MEMORY[0x24C5D6C00](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
    return 0;
  }
  if (*(float *)(v0 + 16) <= 0.0 || *(float *)(v0 + 20) <= 0.0 || *(uint64_t *)(v0 + 32) < 1)
  {
    uint64_t v20 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v8, v20, v1);
    uint64_t v21 = sub_24B6824B0();
    os_log_type_t v22 = sub_24B682B20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v37 = v24;
      *(_DWORD *)uint64_t v23 = 136380675;
      uint64_t v36 = sub_24B5627B8(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v21, v22, "ObjectCaptureSession.%{private}s: Invalid mesh manager config - invalid mesh refinement parameters!", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v24, -1, -1);
      MEMORY[0x24C5D6C00](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  }
  else
  {
    if ((*(unsigned char *)(v0 + 40) & 1) == 0 || *(uint64_t *)(v0 + 48) > 0) {
      return 1;
    }
    uint64_t v30 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v30, v1);
    uint64_t v31 = sub_24B6824B0();
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      double v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v37 = v34;
      *(_DWORD *)double v33 = 136380675;
      uint64_t v36 = sub_24B5627B8(0x2864696C61567369, 0xE900000000000029, &v37);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v31, v32, "MeshManager.%{private}s: Invalid mesh manager config - invalid heap vertex capacity!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v34, -1, -1);
      MEMORY[0x24C5D6C00](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
  }
  return 0;
}

uint64_t sub_24B58BF8C()
{
  return 2;
}

uint64_t sub_24B58BF94@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, float a12@<S2>)
{
  *(void *)a9 = result;
  *(_DWORD *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 12) = BYTE4(a2) & 1;
  *(unsigned char *)(a9 + 13) = a3;
  *(unsigned char *)(a9 + 14) = a4;
  *(float *)(a9 + 16) = a10;
  *(float *)(a9 + 20) = a11;
  *(float *)(a9 + 24) = a12;
  *(unsigned char *)(a9 + 28) = a5;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  return result;
}

uint64_t sub_24B58BFC8()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *v0;
  if (v5)
  {
    uint64_t v6 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = v10;
      *(_DWORD *)uint64_t v9 = 136380675;
      uint64_t v12 = sub_24B5627B8(0x6573616572636E69, 0xEA00000000002928, &v13);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v7, v8, "ObjectCaptureSession.%{private}s: Area mode is already at max extent, ignoring request to increase the extent further!", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v10, -1, -1);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    *uint64_t v0 = 1;
  }
  return v5 ^ 1u;
}

uint64_t sub_24B58C1D4(uint64_t a1)
{
  return sub_24B58C210(a1);
}

uint64_t sub_24B58C210(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v169 = a1;
  uint64_t v3 = sub_24B682680();
  uint64_t v154 = *(void *)(v3 - 8);
  uint64_t v155 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v153 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_24B682BC0();
  uint64_t v159 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v160 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_24B682B90();
  MEMORY[0x270FA5388](v157);
  uint64_t v158 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v156 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B6824D0();
  uint64_t v170 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  os_log_type_t v150 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v149 = (char *)&v140 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v144 = (char *)&v140 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v146 = (char *)&v140 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v145 = (char *)&v140 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v147 = (char *)&v140 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v151 = (char *)&v140 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v140 - v24;
  *(void *)(v2 + 24) = 0;
  uint64_t v165 = v2 + 16;
  swift_unknownObjectWeakInit();
  uint64_t v26 = v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  uint64_t v27 = MEMORY[0x263F8EE78];
  unint64_t v28 = sub_24B58B4DC(MEMORY[0x263F8EE78]);
  uint64_t v29 = MEMORY[0x263F8EE88];
  *(void *)uint64_t v26 = v28;
  *(void *)(v26 + 8) = v29;
  *(void *)(v26 + 16) = v29;
  *(void *)(v26 + 24) = v29;
  *(_WORD *)(v26 + 32) = 0;
  *(_OWORD *)(v26 + 40) = xmmword_24B685A50;
  *(_OWORD *)(v26 + 56) = xmmword_24B685A60;
  *(unsigned char *)(v26 + 72) = 0;
  *(void *)(v26 + 80) = 0;
  *(void *)(v26 + 88) = 0;
  *(unsigned char *)(v26 + 96) = 1;
  *(void *)(v26 + 112) = 0;
  *(void *)(v26 + 120) = 0;
  *(_WORD *)(v26 + 128) = 513;
  *(void *)(v26 + 136) = 0;
  uint64_t v152 = type metadata accessor for FreeformMeshManager.BackgroundData(0);
  sub_24B682660();
  *(void *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = 0;
  uint64_t v30 = (long long *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
  unint64_t v31 = sub_24B58B4DC(v27);
  unint64_t v32 = sub_24B58B4DC(v27);
  char v192 = 1;
  char v190 = 1;
  *(void *)uint64_t v30 = v31;
  *((void *)v30 + 1) = v29;
  uint64_t v33 = v170;
  *((void *)v30 + 2) = v32;
  *((void *)v30 + 3) = v29;
  *((void *)v30 + 4) = 0;
  *((void *)v30 + 5) = 0;
  *((unsigned char *)v30 + 48) = 1;
  *((void *)v30 + 8) = 0;
  *((void *)v30 + 9) = 0;
  *((unsigned char *)v30 + 80) = 1;
  *(long long *)((char *)v30 + 88) = 0u;
  *(long long *)((char *)v30 + 104) = 0u;
  *(long long *)((char *)v30 + 120) = 0u;
  *(long long *)((char *)v30 + 136) = 0u;
  *((void *)v30 + 19) = 0;
  *((unsigned char *)v30 + 160) = 1;
  *(_OWORD *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection) = xmmword_24B685A70;
  char v191 = 1;
  uint64_t v34 = v169;
  uint64_t v35 = v2;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kMeshOverlapRemovalThreshold) = 1065353216;
  uint64_t v36 = sub_24B57CCC8();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  uint64_t v162 = v36;
  __n128 v163 = v37;
  uint64_t v164 = v33 + 16;
  ((void (*)(char *))v37)(v25);
  sub_24B59DB48(v34);
  sub_24B59DB48(v34);
  unint64_t v166 = (unint64_t)v25;
  char v38 = sub_24B6824B0();
  os_log_type_t v39 = sub_24B682B10();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v167 = v9;
  uint64_t v168 = v35;
  if (v40)
  {
    uint64_t v41 = swift_slowAlloc();
    *(double *)&uint64_t v42 = COERCE_DOUBLE(swift_slowAlloc());
    double v173 = *(double *)&v42;
    *(_DWORD *)uint64_t v41 = 136380931;
    *(void *)&long long v174 = sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173);
    sub_24B682CD0();
    *(_WORD *)(v41 + 12) = 2082;
    long long v43 = *(_OWORD *)(v34 + 16);
    long long v174 = *(_OWORD *)v34;
    long long v175 = v43;
    long long v176 = *(_OWORD *)(v34 + 32);
    *(void *)&long long v177 = *(void *)(v34 + 48);
    sub_24B59DB48(v34);
    uint64_t v44 = sub_24B682820();
    *(void *)&long long v174 = sub_24B5627B8(v44, v45, (uint64_t *)&v173);
    uint64_t v35 = v168;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59DB74(v34);
    sub_24B59DB74(v34);
    _os_log_impl(&dword_24B55E000, v38, v39, "MeshManager.%{private}s: Configuration = %{public}s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    uint64_t v46 = v42;
    uint64_t v33 = v170;
    MEMORY[0x24C5D6C00](v46, -1, -1);
    uint64_t v47 = v41;
    uint64_t v9 = v167;
    MEMORY[0x24C5D6C00](v47, -1, -1);
  }
  else
  {
    sub_24B59DB74(v34);
    sub_24B59DB74(v34);
  }

  uint64_t v48 = *(void (**)(unint64_t, uint64_t))(v33 + 8);
  v48(v166, v9);
  if ((sub_24B58B928() & 1) == 0)
  {
    sub_24B59DB74(v34);
    sub_24B5661FC(v165);
    goto LABEL_18;
  }
  uint64_t v140 = v26;
  id v148 = (void (*)(char *, uint64_t))v48;
  long long v49 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)v34;
  *(_OWORD *)(v35 + 64) = v49;
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(v34 + 32);
  *(void *)(v35 + 96) = *(void *)(v34 + 48);
  unint64_t v166 = sub_24B5658E8();
  sub_24B59DB48(v34);
  sub_24B682610();
  *(void *)&long long v174 = MEMORY[0x263F8EE78];
  uint64_t v142 = sub_24B5A2198((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  sub_24B562F04(&qword_2697CC0C0);
  uint64_t v143 = sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  unsigned int v141 = *MEMORY[0x263F8F130];
  uint64_t v50 = v160;
  uint64_t v159 = *(void *)(v159 + 104);
  uint64_t v51 = v161;
  ((void (*)(char *))v159)(v160);
  *(void *)(v168 + 32) = sub_24B682C00();
  sub_24B682600();
  *(void *)&long long v174 = MEMORY[0x263F8EE78];
  uint64_t v52 = v169;
  sub_24B682D80();
  ((void (*)(char *, void, uint64_t))v159)(v50, v141, v51);
  uint64_t v53 = v52;
  uint64_t v54 = v168;
  uint64_t result = sub_24B682C00();
  *(void *)(v54 + 40) = result;
  uint64_t v56 = *(void *)(v52 + 48);
  uint64_t v57 = (unsigned __int128)(v56 * (__int128)3) >> 64;
  uint64_t v58 = 3 * v56;
  if (v57 != v58 >> 63)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v59 = (unsigned __int128)(v58 * (__int128)3) >> 64;
  uint64_t v60 = 3 * v58;
  if (v59 != v60 >> 63)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if ((unint64_t)(v60 - 0x2000000000000000) >> 62 == 3)
  {
    uint64_t v61 = v54;
    uint64_t v62 = 4 * v60;
    type metadata accessor for FreeformMeshBuffer();
    char v63 = *(unsigned char *)(v52 + 40);
    unsigned int v64 = (void *)swift_unknownObjectRetain();
    uint64_t v65 = sub_24B66F9FC(v64, v63, v62);
    if (v65)
    {
      unint64_t v66 = v65;
      *(void *)(v54 + 104) = v65;
      uint64_t v67 = *(void (**)(void))(*(void *)v65 + 288);
      swift_retain();
      v67();
      uint64_t v68 = v153;
      sub_24B682660();
      uint64_t v69 = v140;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v154 + 40))(v69 + *(int *)(v152 + 52), v68, v155);
      swift_endAccess();
      char v70 = *(unsigned char *)(v54 + 62);
      uint64_t v71 = v167;
      if ((v70 & 1) == 0)
      {
LABEL_42:
        uint64_t v132 = v150;
        v163(v150, v162, v71);
        uint64_t v133 = sub_24B6824B0();
        uint64_t v134 = v71;
        os_log_type_t v135 = sub_24B682B30();
        if (os_log_type_enabled(v133, v135))
        {
          uint64_t v136 = (uint8_t *)swift_slowAlloc();
          *(double *)&uint64_t v137 = COERCE_DOUBLE(swift_slowAlloc());
          unint64_t v166 = v66;
          uint64_t v138 = v137;
          double v173 = *(double *)&v137;
          *(_DWORD *)uint64_t v136 = 136380675;
          double v172 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173));
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v133, v135, "MeshManager.%{private}s: Initialized area mode mesh manager", v136, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v138, -1, -1);
          MEMORY[0x24C5D6C00](v136, -1, -1);
          sub_24B59DB74(v53);
          swift_release();

          uint64_t v139 = v150;
        }
        else
        {
          swift_release();
          sub_24B59DB74(v53);

          uint64_t v139 = v132;
        }
        v148(v139, v134);
        return v61;
      }
      sub_24B56CF38(v53 + 13, (uint64_t)&v186, (uint64_t *)&unk_2697CC340);
      sub_24B56CF38((uint64_t)&v186, v69 + 129, (uint64_t *)&unk_2697CC340);
      float v171 = 0.0;
      sub_24B56CF38((uint64_t)&v186, (uint64_t)&v187, (uint64_t *)&unk_2697CC340);
      if (v187 == 2)
      {
        sub_24B56CF38(v53 + 8, (uint64_t)v185, &qword_2697CC368);
        sub_24B56CF38((uint64_t)v185, (uint64_t)&v188, &qword_2697CC368);
        if ((v189 & 1) == 0) {
          float v171 = v188;
        }
      }
      else
      {
        uint64_t v87 = v71;
        char v88 = v187 & 1;
        float v89 = sub_24B57720C(v187 & 1);
        float v171 = v89;
        BOOL v90 = v147;
        v163(v147, v162, v71);
        uint64_t v91 = sub_24B6824B0();
        os_log_type_t v92 = sub_24B682B30();
        int v93 = v92;
        if (os_log_type_enabled(v91, v92))
        {
          uint64_t v94 = swift_slowAlloc();
          LODWORD(v165) = v93;
          uint64_t v95 = v94;
          uint64_t v96 = swift_slowAlloc();
          *(void *)&long long v174 = v96;
          *(_DWORD *)uint64_t v95 = 136381187;
          unint64_t v166 = v66;
          double v173 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v174));
          sub_24B682CD0();
          *(_WORD *)(v95 + 12) = 2050;
          double v173 = v89;
          uint64_t v61 = v168;
          sub_24B682CD0();
          *(_WORD *)(v95 + 22) = 2082;
          LOBYTE(v173) = v88;
          uint64_t v97 = sub_24B682820();
          double v173 = COERCE_DOUBLE(sub_24B5627B8(v97, v98, (uint64_t *)&v174));
          unint64_t v66 = v166;
          sub_24B682CD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24B55E000, v91, (os_log_type_t)v165, "MeshManager.%{private}s: Computed voxel size: %{public}f from scan extent: %{public}s. Enabled automatic scan extent switching in area mode!", (uint8_t *)v95, 0x20u);
          swift_arrayDestroy();
          uint64_t v99 = v96;
          uint64_t v53 = v169;
          MEMORY[0x24C5D6C00](v99, -1, -1);
          MEMORY[0x24C5D6C00](v95, -1, -1);
        }

        v148(v90, v87);
        uint64_t v71 = v87;
      }
      swift_beginAccess();
      float v100 = v171;
      if (v171 <= 0.0 || (float v101 = *(float *)(v53 + 16), v101 <= 0.0) || (v102 = *(float *)(v53 + 20), v102 <= 0.0))
      {
        unint64_t v112 = v149;
        v163(v149, v162, v71);
        sub_24B59DB48(v53);
        sub_24B59DB48(v53);
        sub_24B59DB48(v53);
        uint64_t v113 = sub_24B6824B0();
        uint64_t v114 = v71;
        os_log_type_t v115 = sub_24B682B20();
        if (!os_log_type_enabled(v113, v115))
        {
          swift_release();
          sub_24B59DB74(v53);
          sub_24B59DB74(v53);
          sub_24B59DB74(v53);
          sub_24B59DB74(v53);

          uint64_t v118 = v112;
          uint64_t v119 = v114;
          goto LABEL_34;
        }
        uint64_t v116 = swift_slowAlloc();
        *(double *)&uint64_t v117 = COERCE_DOUBLE(swift_slowAlloc());
        double v173 = *(double *)&v117;
        *(_DWORD *)uint64_t v116 = 136381443;
        unint64_t v166 = v66;
        double v172 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173));
        sub_24B682CD0();
        *(_WORD *)(v116 + 12) = 2050;
        double v172 = v100;
        sub_24B682CD0();
        *(_WORD *)(v116 + 22) = 2050;
        double v172 = *(float *)(v53 + 16);
        sub_24B682CD0();
        sub_24B59DB74(v53);
        *(_WORD *)(v116 + 32) = 2050;
        double v172 = *(float *)(v53 + 20);
        sub_24B682CD0();
        sub_24B59DB74(v53);
        sub_24B59DB74(v53);
        _os_log_impl(&dword_24B55E000, v113, v115, "MeshManager.%{private}s: Invalid mesh refinement voxel parameters: arkit scene recon voxel size = %{public}f, initial voxel size = %{public}f, voxel size increment = %{public}f", (uint8_t *)v116, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v117, -1, -1);
        MEMORY[0x24C5D6C00](v116, -1, -1);
        sub_24B59DB74(v53);
        swift_release();

        uint64_t v118 = v149;
      }
      else
      {
        *(float *)(v69 + 56) = v101;
        *(float *)(v69 + 60) = v102;
        *(_DWORD *)(v69 + 64) = *(_DWORD *)(v53 + 24);
        *(float *)(v69 + 68) = v100;
        double v103 = *(double *)(v53 + 32);
        if (*(uint64_t *)&v103 >= 1)
        {
          *(double *)(v61 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData + 48) = v103;
          uint64_t v104 = v145;
          v163(v145, v162, v71);
          char v105 = sub_24B6824B0();
          uint64_t v106 = v71;
          os_log_type_t v107 = sub_24B682B30();
          BOOL v108 = os_log_type_enabled(v105, v107);
          unint64_t v166 = v66;
          if (v108)
          {
            uint64_t v109 = swift_slowAlloc();
            *(double *)&uint64_t v110 = COERCE_DOUBLE(swift_slowAlloc());
            double v173 = *(double *)&v110;
            *(_DWORD *)uint64_t v109 = 136381443;
            double v172 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173));
            sub_24B682CD0();
            *(_WORD *)(v109 + 12) = 1026;
            LODWORD(v172) = GESSVersionNumberMajor();
            sub_24B682CD0();
            *(_WORD *)(v109 + 18) = 1026;
            LODWORD(v172) = GESSVersionNumberMinor();
            sub_24B682CD0();
            *(_WORD *)(v109 + 24) = 1026;
            uint64_t v106 = v167;
            LODWORD(v172) = GESSVersionNumberPatch();
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v105, v107, "MeshManager.%{private}s: Found mesh processing library version: %{public}u.%{public}u.%{public}u", (uint8_t *)v109, 0x1Eu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v110, -1, -1);
            MEMORY[0x24C5D6C00](v109, -1, -1);

            uint64_t v111 = v145;
          }
          else
          {

            uint64_t v111 = v104;
          }
          uint64_t v126 = v148;
          v148(v111, v106);
          unint64_t v127 = v146;
          v163(v146, v162, v106);
          uint64_t v128 = sub_24B6824B0();
          os_log_type_t v129 = sub_24B682B30();
          if (os_log_type_enabled(v128, v129))
          {
            uint64_t v130 = (uint8_t *)swift_slowAlloc();
            *(double *)&uint64_t v131 = COERCE_DOUBLE(swift_slowAlloc());
            double v173 = *(double *)&v131;
            *(_DWORD *)uint64_t v130 = 136380675;
            double v172 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173));
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v128, v129, "MeshManager.%{private}s: Enabled mesh simplification", v130, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v131, -1, -1);
            MEMORY[0x24C5D6C00](v130, -1, -1);

            v126(v146, v106);
          }
          else
          {

            v126(v127, v106);
          }
          uint64_t v53 = v169;
          unint64_t v66 = v166;
          uint64_t v71 = v106;
          goto LABEL_42;
        }
        uint64_t v120 = v144;
        v163(v144, v162, v71);
        sub_24B59DB48(v53);
        sub_24B59DB48(v53);
        uint64_t v121 = sub_24B6824B0();
        uint64_t v122 = v71;
        os_log_type_t v123 = sub_24B682B20();
        if (!os_log_type_enabled(v121, v123))
        {
          sub_24B59DB74(v53);
          swift_release();
          sub_24B59DB74(v53);
          sub_24B59DB74(v53);

          uint64_t v118 = v120;
          uint64_t v119 = v122;
          goto LABEL_34;
        }
        uint64_t v124 = swift_slowAlloc();
        *(double *)&uint64_t v125 = COERCE_DOUBLE(swift_slowAlloc());
        double v173 = *(double *)&v125;
        *(_DWORD *)uint64_t v124 = 136380931;
        unint64_t v166 = v66;
        double v172 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v173));
        sub_24B682CD0();
        *(_WORD *)(v124 + 12) = 2050;
        sub_24B59DB74(v53);
        double v172 = v103;
        sub_24B682CD0();
        sub_24B59DB74(v53);
        _os_log_impl(&dword_24B55E000, v121, v123, "MeshManager.%{private}s: Invalid point density threshold %{public}ld!", (uint8_t *)v124, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v125, -1, -1);
        MEMORY[0x24C5D6C00](v124, -1, -1);
        sub_24B59DB74(v53);
        swift_release();

        uint64_t v118 = v144;
      }
      uint64_t v119 = v167;
LABEL_34:
      v148(v118, v119);
      swift_release();
      return 0;
    }
    uint64_t v72 = v151;
    uint64_t v73 = v167;
    v163(v151, v162, v167);
    uint64_t v74 = sub_24B6824B0();
    os_log_type_t v75 = sub_24B682B20();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v26 = v140;
    if (v76)
    {
      BOOL v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(void *)&long long v174 = v78;
      *(_DWORD *)BOOL v77 = 136380675;
      double v173 = COERCE_DOUBLE(sub_24B5627B8(0x6E6F632874696E69, 0xED0000293A676966, (uint64_t *)&v174));
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v74, v75, "MeshManager.%{private}s: Failed to create mesh buffer in area mode mesh manager!", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v78, -1, -1);
      MEMORY[0x24C5D6C00](v77, -1, -1);
      sub_24B59DB74(v169);

      float v79 = v151;
      uint64_t v80 = v167;
    }
    else
    {
      sub_24B59DB74(v53);

      float v79 = v72;
      uint64_t v80 = v73;
    }
    v148(v79, v80);
    sub_24B5661FC(v165);

    swift_unknownObjectRelease();
LABEL_18:
    sub_24B59F0A0(v26, type metadata accessor for FreeformMeshManager.BackgroundData);
    long long v81 = v30[8];
    long long v82 = v30[9];
    long long v83 = v30[6];
    long long v181 = v30[7];
    long long v182 = v81;
    long long v183 = v82;
    char v184 = *((unsigned char *)v30 + 160);
    long long v84 = v30[5];
    long long v178 = v30[4];
    long long v179 = v84;
    long long v180 = v83;
    long long v85 = v30[1];
    long long v174 = *v30;
    long long v175 = v85;
    long long v86 = v30[3];
    long long v176 = v30[2];
    long long v177 = v86;
    sub_24B59DBA0((uint64_t)&v174);
    type metadata accessor for FreeformMeshManager(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_24B58D9AC()
{
  return sub_24B58E5E4();
}

uint64_t sub_24B58D9C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v69 = a3;
  uint64_t v66 = sub_24B6824D0();
  uint64_t v71 = *(void *)(v66 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unsigned int v64 = (char *)&v60 - v6;
  uint64_t v7 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04(&qword_2697CC3F8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v62 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v72 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24B682410();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v60 - v22;
  id v24 = objc_msgSend(a1, sel_identifier);
  sub_24B6823F0();

  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  char v70 = v23;
  v25(v9, v23, v17);
  uint64_t v68 = v18;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v73 = v17;
  v26(v9, 0, 1, v17);
  uint64_t v27 = a1;
  uint64_t v28 = v72;
  sub_24B577230(v27, (unint64_t)v9, (unint64_t)v14);
  sub_24B5632A8((uint64_t)v9, &qword_2697CC460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, v15) == 1)
  {
    sub_24B5632A8((uint64_t)v14, &qword_2697CC3F8);
    uint64_t v29 = sub_24B57CCC8();
    uint64_t v30 = v71;
    unint64_t v31 = v64;
    uint64_t v32 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v64, v29, v66);
    uint64_t v33 = sub_24B6824B0();
    os_log_type_t v34 = sub_24B682B20();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v76[0] = v36;
      *(_DWORD *)uint64_t v35 = 136380675;
      v75[0] = sub_24B5627B8(0xD000000000000012, 0x800000024B68C460, v76);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v33, v34, "MeshManager.%{private}s: Failed to convert ARMeshAnchor to ObjectCaptureSession.Mesh.Anchor", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v36, -1, -1);
      MEMORY[0x24C5D6C00](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v70, v73);
    char v38 = 0;
    goto LABEL_9;
  }
  uint64_t v61 = (void (*)(uint64_t, uint64_t, uint64_t))v25;
  uint64_t v39 = (uint64_t)v21;
  unsigned int v64 = (char *)v15;
  BOOL v40 = v65;
  uint64_t v41 = v71;
  uint64_t v42 = v67;
  sub_24B59EFA4((uint64_t)v14, v67);
  uint64_t v43 = v63 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  uint64_t v44 = *(void *)(v43 + 24);
  swift_bridgeObjectRetain();
  char v45 = sub_24B58E1AC(v42, v44);
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0)
  {
    uint64_t v58 = v73;
    v61(v39, v42, v73);
    uint64_t v59 = v62;
    sub_24B57C210(v42, v62);
    char v38 = 1;
    (*(void (**)(uint64_t, void, uint64_t, char *))(v28 + 56))(v59, 0, 1, v64);
    swift_beginAccess();
    sub_24B58E3C0(v59, v39);
    swift_endAccess();
    sub_24B59F0A0(v42, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v70, v58);
LABEL_9:
    uint64_t v53 = v69;
    goto LABEL_12;
  }
  uint64_t v46 = sub_24B57CCC8();
  uint64_t v47 = v40;
  uint64_t v48 = v40;
  uint64_t v49 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v48, v46, v66);
  uint64_t v50 = sub_24B6824B0();
  os_log_type_t v51 = sub_24B682B20();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v54 = v68;
  uint64_t v53 = v69;
  uint64_t v55 = v73;
  if (v52)
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v75[0] = v57;
    *(_DWORD *)uint64_t v56 = 136380675;
    uint64_t v74 = sub_24B5627B8(0xD000000000000012, 0x800000024B68C460, v75);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v50, v51, "MeshManager.%{private}s: Received mesh anchor from previous session, dropping it!", v56, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v57, -1, -1);
    MEMORY[0x24C5D6C00](v56, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v65, v49);
    sub_24B59F0A0(v67, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v70, v73);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v47, v49);
    sub_24B59F0A0(v67, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v70, v55);
  }
  char v38 = 0;
LABEL_12:
  *uint64_t v53 = v38;
  return result;
}

uint64_t sub_24B58E1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B682410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]),
        uint64_t v7 = sub_24B682750(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_24B5A2198(&qword_2697CC410, MEMORY[0x263F07508]);
      char v15 = sub_24B682780();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_24B58E3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CC3F8);
    sub_24B59F2C0(a2, (uint64_t)v8);
    uint64_t v13 = sub_24B682410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_24B5632A8((uint64_t)v8, &qword_2697CC3F8);
  }
  else
  {
    sub_24B59EFA4(a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B5A00C4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24B682410();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_24B58E5CC()
{
  return sub_24B58E5E4();
}

uint64_t sub_24B58E5E4()
{
  id v1 = *(id *)(v0 + 32);
  sub_24B682BD0();

  return v3;
}

uint64_t sub_24B58E648@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B682410();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v59 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v58 = (char *)&v55 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v57 = (uint64_t)&v55 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v55 - v21;
  MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v55 - v23;
  id v25 = objc_msgSend(a1, sel_identifier);
  sub_24B6823F0();

  uint64_t v65 = v13;
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v62(v22, v24, v12);
  uint64_t v26 = a2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v60 = v6;
  uint64_t v61 = v5;
  unsigned int v64 = v24;
  if (v28)
  {
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_24B59F008((uint64_t)v22);
    if (v30)
    {
      unint64_t v31 = v29;
      uint64_t v55 = *(void *)(v27 + 56);
      uint64_t v32 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v56 = v8;
      uint64_t v34 = v33;
      sub_24B57C210(v55 + *(void *)(v33 + 72) * v31, (uint64_t)v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v32);
      uint64_t v8 = v56;
    }
    else
    {
      uint64_t v32 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
  }
  uint64_t v35 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v36 = v22;
  uint64_t v37 = v65 + 8;
  v35(v36, v12);
  type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v11, 1, v32);
  sub_24B5632A8((uint64_t)v11, &qword_2697CC3F8);
  if (v38 == 1)
  {
    uint64_t v39 = sub_24B57CCC8();
    uint64_t v41 = v60;
    uint64_t v40 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v8, v39, v61);
    uint64_t v42 = v59;
    v62(v59, v64, v12);
    uint64_t v43 = sub_24B6824B0();
    os_log_type_t v44 = sub_24B682B30();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v56 = v8;
      uint64_t v65 = v37;
      uint64_t v46 = v45;
      uint64_t v62 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
      v66[0] = (uint64_t)v62;
      *(_DWORD *)uint64_t v46 = 136380931;
      uint64_t v67 = sub_24B5627B8(0xD000000000000015, 0x800000024B68C440, v66);
      sub_24B682CD0();
      *(_WORD *)(v46 + 12) = 2082;
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v47 = sub_24B682F90();
      uint64_t v67 = sub_24B5627B8(v47, v48, v66);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      v35(v42, v12);
      _os_log_impl(&dword_24B55E000, v43, v44, "MeshManager.%{private}s: No mesh anchor with ID %{public}s in processed data!", (uint8_t *)v46, 0x16u);
      uint64_t v49 = v62;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v49, -1, -1);
      MEMORY[0x24C5D6C00](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v56, v61);
    }
    else
    {

      v35(v42, v12);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v40);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v35)(v64, v12);
    char v54 = 0;
  }
  else
  {
    uint64_t v50 = v58;
    os_log_type_t v51 = v64;
    v62(v58, v64, v12);
    swift_beginAccess();
    uint64_t v52 = v57;
    sub_24B5A0940(v57, v50);
    v35((char *)v52, v12);
    swift_endAccess();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v35)(v51, v12);
    char v54 = 1;
  }
  *uint64_t v63 = v54;
  return result;
}

uint64_t sub_24B58ED78()
{
  id v1 = *(id *)(v0 + 32);
  sub_24B562F04(&qword_2697CC370);
  sub_24B682BD0();

  return v3;
}

double sub_24B58EDF0@<D0>(uint64_t a1@<X8>)
{
  id v3 = *(id *)(v1 + 32);
  sub_24B562F04(&qword_2697CC378);
  sub_24B682BD0();

  double result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_24B58EE78(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  long long v5 = *(void **)(v4 + 32);
  long long v6 = (__n128 *)swift_allocObject();
  v6[1] = a1;
  uint64_t v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  v6[5].n128_u64[0] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24B59DDC8;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_24B59DE88;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B58EFF8;
  aBlock[3] = &unk_26FE8C958;
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B58EFF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_24B58F020()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24B59DEC8;
  *(void *)(v2 + 24) = v0;
  v6[4] = sub_24B5A2598;
  v6[5] = v2;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  uint64_t v6[2] = sub_24B58EFF8;
  v6[3] = &unk_26FE8C9A8;
  id v3 = _Block_copy(v6);
  unint64_t v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B58F160(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  long long v6 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v85 - v7;
  uint64_t v9 = sub_24B562F04(&qword_2697CC3F8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v93 = (uint64_t)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v103 = (uint64_t)v85 - v12;
  uint64_t v13 = sub_24B682410();
  uint64_t v101 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  os_log_type_t v92 = (char *)v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v85 - v17;
  MEMORY[0x270FA5388](v16);
  BOOL v108 = (char *)v85 - v19;
  uint64_t v20 = sub_24B562F04(&qword_2697CC460);
  uint64_t result = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
  if (v24 < 0) {
    goto LABEL_47;
  }
  if (!v24)
  {
    BOOL v90 = v8;
    v85[1] = a1;
    char v30 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
    swift_beginAccess();
    uint64_t v31 = v30[1];
    uint64_t v32 = *(void *)(v31 + 56);
    uint64_t v94 = v31 + 56;
    uint64_t v33 = 1 << *(unsigned char *)(v31 + 32);
    uint64_t v34 = -1;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    unint64_t v35 = v34 & v32;
    int64_t v95 = (unint64_t)(v33 + 63) >> 6;
    uint64_t v107 = v101 + 16;
    uint64_t v99 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    uint64_t v98 = v101 + 48;
    uint64_t v96 = (void (**)(uint64_t, char *, uint64_t))(v101 + 32);
    uint64_t v109 = (uint64_t (**)(char *, uint64_t))(v101 + 8);
    float v89 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    char v88 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v100 = v31;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v36 = 0;
    *(void *)&long long v37 = 136380931;
    long long v87 = v37;
    unint64_t v86 = 0x800000024B68C420;
    v85[2] = MEMORY[0x263F8EE58] + 8;
    uint64_t v91 = v2;
    uint64_t v38 = v103;
    char v105 = v30;
    uint64_t v104 = v18;
    uint64_t v39 = (uint64_t)v108;
    uint64_t v106 = v13;
    uint64_t v97 = v23;
    if (v35) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v41 = v36 + 1;
    if (!__OFADD__(v36, 1))
    {
      if (v41 >= v95) {
        goto LABEL_44;
      }
      unint64_t v42 = *(void *)(v94 + 8 * v41);
      int64_t v43 = v36 + 1;
      if (v42) {
        goto LABEL_25;
      }
      int64_t v43 = v36 + 2;
      if (v36 + 2 >= v95) {
        goto LABEL_44;
      }
      unint64_t v42 = *(void *)(v94 + 8 * v43);
      if (v42) {
        goto LABEL_25;
      }
      int64_t v43 = v36 + 3;
      if (v36 + 3 >= v95) {
        goto LABEL_44;
      }
      unint64_t v42 = *(void *)(v94 + 8 * v43);
      if (v42) {
        goto LABEL_25;
      }
      uint64_t v44 = v36 + 4;
      if (v36 + 4 >= v95)
      {
LABEL_44:
        (*v99)(v23, 1, 1, v13);
LABEL_45:
        swift_release();
        uint64_t v81 = v30[1];
        char v82 = *((unsigned char *)v30 + 160);
        *(void *)&v113[0] = *v30;
        *((void *)&v113[0] + 1) = v81;
        long long v83 = *((_OWORD *)v30 + 7);
        v113[1] = *((_OWORD *)v30 + 6);
        v113[2] = v83;
        long long v84 = *((_OWORD *)v30 + 9);
        v113[3] = *((_OWORD *)v30 + 8);
        v113[4] = v84;
        char v114 = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24B590088(v113);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *char v30 = MEMORY[0x263F8EE80];
        swift_bridgeObjectRelease();
        v30[1] = MEMORY[0x263F8EE88];
        return swift_bridgeObjectRelease();
      }
      unint64_t v42 = *(void *)(v94 + 8 * v44);
      if (v42)
      {
        int64_t v43 = v36 + 4;
LABEL_25:
        uint64_t v110 = (v42 - 1) & v42;
        int64_t v111 = v43;
        for (unint64_t i = __clz(__rbit64(v42)) + (v43 << 6); ; unint64_t i = __clz(__rbit64(v35)) | (v36 << 6))
        {
          uint64_t v45 = v101;
          uint64_t v46 = *(void *)(v101 + 72);
          uint64_t v47 = *(void (**)(char *, unint64_t, uint64_t))(v101 + 16);
          v47(v23, *(void *)(v100 + 48) + v46 * i, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v23, 0, 1, v13);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v23, 1, v13) == 1) {
            break;
          }
          (*v96)(v39, v23, v13);
          v47(v18, v39, v13);
          uint64_t v48 = *v30;
          if (*(void *)(*v30 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v49 = sub_24B59F008((uint64_t)v18);
            if (v50)
            {
              unint64_t v51 = v49;
              uint64_t v52 = *(void *)(v48 + 56);
              uint64_t v53 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
              uint64_t v54 = *(void *)(v53 - 8);
              uint64_t v55 = v52 + *(void *)(v54 + 72) * v51;
              uint64_t v38 = v103;
              sub_24B57C210(v55, v103);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v38, 0, 1, v53);
              uint64_t v18 = v104;
            }
            else
            {
              uint64_t v53 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
              uint64_t v38 = v103;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v103, 1, 1, v53);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v38, 1, 1, v53);
          }
          uint64_t v56 = *v109;
          uint64_t v57 = v106;
          (*v109)(v18, v106);
          type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
          uint64_t v58 = *(void *)(v53 - 8);
          int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v38, 1, v53);
          sub_24B5632A8(v38, &qword_2697CC3F8);
          if (v59 == 1)
          {
            uint64_t v39 = (uint64_t)v108;
            uint64_t result = v56(v108, v57);
            char v30 = v105;
            uint64_t v18 = v104;
            unint64_t v35 = v110;
            int64_t v36 = v111;
            uint64_t v13 = v57;
            uint64_t v23 = v97;
            if (!v110) {
              goto LABEL_12;
            }
          }
          else
          {
            float v102 = v56;
            uint64_t v60 = v105;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            unint64_t v61 = sub_24B59F008((uint64_t)v108);
            char v63 = v62;
            swift_bridgeObjectRelease();
            if (v63)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v65 = *v60;
              uint64_t v112 = *v60;
              *uint64_t v60 = 0x8000000000000000;
              uint64_t v13 = v106;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_24B5A0388();
                uint64_t v65 = v112;
              }
              v102((char *)(*(void *)(v65 + 48) + v61 * v46), v13);
              uint64_t v66 = v112;
              uint64_t v67 = v93;
              sub_24B59EFA4(*(void *)(v112 + 56) + *(void *)(v58 + 72) * v61, v93);
              sub_24B59FD7C(v61, v66);
              *uint64_t v60 = v66;
              swift_bridgeObjectRelease();
              uint64_t v68 = 0;
            }
            else
            {
              uint64_t v68 = 1;
              uint64_t v67 = v93;
              uint64_t v13 = v106;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v67, v68, 1, v53);
            sub_24B5632A8(v67, &qword_2697CC3F8);
            swift_endAccess();
            uint64_t v69 = sub_24B57CCC8();
            char v70 = v90;
            uint64_t v71 = v91;
            (*v89)(v90, v69, v91);
            uint64_t v72 = v92;
            uint64_t v73 = (uint64_t)v108;
            v47(v92, (unint64_t)v108, v13);
            uint64_t v74 = sub_24B6824B0();
            os_log_type_t v75 = sub_24B682B30();
            if (os_log_type_enabled(v74, v75))
            {
              uint64_t v76 = swift_slowAlloc();
              uint64_t v77 = swift_slowAlloc();
              *(void *)&v113[0] = v77;
              *(_DWORD *)uint64_t v76 = v87;
              *(void *)(v76 + 4) = sub_24B5627B8(0xD000000000000013, v86, (uint64_t *)v113);
              *(_WORD *)(v76 + 12) = 2082;
              sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
              uint64_t v78 = sub_24B682F90();
              *(void *)(v76 + 14) = sub_24B5627B8(v78, v79, (uint64_t *)v113);
              swift_bridgeObjectRelease();
              uint64_t v80 = v102;
              v102(v72, v13);
              _os_log_impl(&dword_24B55E000, v74, v75, "MeshManager.%{private}s: Removed mesh anchor %{public}s from the unprocessed mesh anchor set", (uint8_t *)v76, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v77, -1, -1);
              MEMORY[0x24C5D6C00](v76, -1, -1);
            }
            else
            {

              uint64_t v80 = v102;
              v102(v72, v13);
            }
            (*v88)(v70, v71);
            uint64_t result = v80((char *)v73, v13);
            uint64_t v38 = v103;
            char v30 = v105;
            uint64_t v18 = v104;
            uint64_t v39 = v73;
            uint64_t v23 = v97;
            unint64_t v35 = v110;
            int64_t v36 = v111;
            if (!v110) {
              goto LABEL_12;
            }
          }
LABEL_11:
          uint64_t v110 = (v35 - 1) & v35;
          int64_t v111 = v36;
        }
        goto LABEL_45;
      }
      while (1)
      {
        int64_t v43 = v44 + 1;
        if (__OFADD__(v44, 1)) {
          break;
        }
        if (v43 >= v95) {
          goto LABEL_44;
        }
        unint64_t v42 = *(void *)(v94 + 8 * v43);
        ++v44;
        if (v42) {
          goto LABEL_25;
        }
      }
LABEL_48:
      __break(1u);
      return result;
    }
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v25 = sub_24B57CCC8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v25, v2);
  uint64_t v26 = sub_24B6824B0();
  os_log_type_t v27 = sub_24B682B20();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(void *)&v113[0] = v29;
    *(_DWORD *)uint64_t v28 = 136380675;
    uint64_t v115 = sub_24B5627B8(0xD000000000000013, 0x800000024B68C420, (uint64_t *)v113);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v26, v27, "MeshManager.%{private}s: Dropping the new mesh update request because the previous request is still running!", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v29, -1, -1);
    MEMORY[0x24C5D6C00](v28, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_24B58FE70()
{
  uint64_t v1 = sub_24B6826D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (void *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 40);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v8 = *(void **)(v0 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24B5A21E0;
  *(void *)(v9 + 24) = v0;
  aBlock[4] = sub_24B5A2598;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B58EFF8;
  aBlock[3] = &unk_26FE8CC98;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v8;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_24B590088(long long *a1)
{
  uint64_t v38 = sub_24B6824D0();
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6825D0();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24B682640();
  uint64_t v8 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B6826D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v15 = a1[3];
  long long v45 = a1[2];
  long long v46 = v15;
  long long v47 = a1[4];
  char v48 = *((unsigned char *)a1 + 80);
  long long v16 = a1[1];
  long long v43 = *a1;
  long long v44 = v16;
  uint64_t v17 = *(void **)(v1 + 32);
  *uint64_t v14 = v17;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v18 = v17;
  LOBYTE(v17) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(void *)(v43 + 16) || *(void *)(*((void *)&v43 + 1) + 16))
  {
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      *(void *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = v22;
      if (v22 == 1)
      {
        uint64_t v23 = *(void **)(v1 + 40);
        uint64_t v24 = swift_allocObject();
        long long v25 = v46;
        *(_OWORD *)(v24 + 48) = v45;
        *(_OWORD *)(v24 + 64) = v25;
        *(_OWORD *)(v24 + 80) = v47;
        *(unsigned char *)(v24 + 96) = v48;
        long long v26 = v44;
        *(_OWORD *)(v24 + 16) = v43;
        *(_OWORD *)(v24 + 32) = v26;
        *(void *)(v24 + 104) = v1;
        aBlock[4] = (uint64_t)sub_24B5A2154;
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_24B566C04;
        aBlock[3] = (uint64_t)&unk_26FE8CC48;
        os_log_type_t v27 = _Block_copy(aBlock);
        id v28 = v23;
        sub_24B5A2160((uint64_t)&v43);
        swift_retain();
        sub_24B6825F0();
        uint64_t v41 = MEMORY[0x263F8EE78];
        sub_24B5A2198((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
        sub_24B562F04((uint64_t *)&unk_2697CC490);
        sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
        sub_24B682D80();
        MEMORY[0x24C5D4CD0](0, v10, v7, v27);
        _Block_release(v27);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v39);
        return swift_release();
      }
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v29 = sub_24B57CCC8();
  uint64_t v30 = v37;
  uint64_t v31 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v4, v29, v38);
  uint64_t v32 = sub_24B6824B0();
  os_log_type_t v33 = sub_24B682B20();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    aBlock[0] = v35;
    *(_DWORD *)uint64_t v34 = 136380675;
    uint64_t v41 = sub_24B5627B8(0xD000000000000030, 0x800000024B68C3E0, aBlock);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v32, v33, "MeshManager.%{private}s: Received empty mesh update data, not updating mesh!", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v35, -1, -1);
    MEMORY[0x24C5D6C00](v34, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v4, v31);
}

void sub_24B590678(uint64_t *a1, uint64_t a2)
{
  long long v183 = a1;
  uint64_t v3 = sub_24B562F04(&qword_2697CC430);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v179 - v7;
  uint64_t v9 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v209 = (uint64_t)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v194 = (uint64_t)&v179 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v208 = (uint64_t)&v179 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v197 = (uint64_t)&v179 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v196 = (uint64_t)&v179 - v22;
  uint64_t v23 = sub_24B682410();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v202 = (char *)&v179 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  float v188 = (char *)&v179 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v214 = (char *)&v179 - v29;
  uint64_t v191 = sub_24B6824D0();
  uint64_t v30 = *(void *)(v191 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v191);
  long long v180 = (char *)&v179 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  long long v179 = (char *)&v179 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v195 = (char *)&v179 - v36;
  MEMORY[0x270FA5388](v35);
  long long v182 = (char *)&v179 - v37;
  uint64_t v38 = sub_24B562F04(&qword_2697CC460);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  uint64_t v201 = (char *)&v179 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v203 = (char *)&v179 - v41;
  sub_24B680D2C();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v184 = a2;
  unint64_t v42 = (uint64_t *)(a2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  v42[1] = MEMORY[0x263F8EE88];
  swift_bridgeObjectRelease();
  uint64_t v43 = v183[1];
  uint64_t v44 = *(void *)(v43 + 56);
  uint64_t v192 = v43 + 56;
  uint64_t v45 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & v44;
  unint64_t v222 = MEMORY[0x263F8EE78];
  int64_t v193 = (unint64_t)(v45 + 63) >> 6;
  uint64_t v218 = v24 + 16;
  uint64_t v212 = v24 + 48;
  os_log_type_t v213 = (char **)(v24 + 56);
  uint64_t v210 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  BOOL v200 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v217 = v24;
  uint64_t v219 = (void (**)(unint64_t, uint64_t))(v24 + 8);
  os_log_type_t v199 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  char v190 = (void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  char v189 = (void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v204 = (void (*)(char *, uint64_t))v43;
  swift_bridgeObjectRetain();
  int64_t v48 = 0;
  *(void *)&long long v49 = 136380931;
  long long v187 = v49;
  unint64_t v181 = (unint64_t)"removeOverlappingAnchors(_:)";
  unint64_t v186 = 0x800000024B68C3E0;
  uint64_t v185 = MEMORY[0x263F8EE58] + 8;
  unint64_t v216 = v42;
  uint64_t v205 = (uint64_t)v6;
  int64_t v215 = (int64_t)v8;
  uint64_t v207 = v13;
  uint64_t v206 = v12;
  float32x4_t v198 = v11;
  while (1)
  {
    if (v47)
    {
      unint64_t v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      int64_t v211 = v48;
      unint64_t v51 = v50 | (v48 << 6);
      goto LABEL_22;
    }
    int64_t v52 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      goto LABEL_110;
    }
    if (v52 >= v193) {
      break;
    }
    unint64_t v53 = *(void *)(v192 + 8 * v52);
    int64_t v54 = v48 + 1;
    if (!v53)
    {
      int64_t v54 = v48 + 2;
      if (v48 + 2 >= v193) {
        break;
      }
      unint64_t v53 = *(void *)(v192 + 8 * v54);
      if (!v53)
      {
        int64_t v54 = v48 + 3;
        if (v48 + 3 >= v193) {
          break;
        }
        unint64_t v53 = *(void *)(v192 + 8 * v54);
        if (!v53)
        {
          int64_t v55 = v48 + 4;
          if (v48 + 4 >= v193) {
            break;
          }
          unint64_t v53 = *(void *)(v192 + 8 * v55);
          if (!v53)
          {
            while (1)
            {
              int64_t v54 = v55 + 1;
              if (__OFADD__(v55, 1)) {
                goto LABEL_112;
              }
              if (v54 >= v193) {
                goto LABEL_38;
              }
              unint64_t v53 = *(void *)(v192 + 8 * v54);
              ++v55;
              if (v53) {
                goto LABEL_21;
              }
            }
          }
          int64_t v54 = v48 + 4;
        }
      }
    }
LABEL_21:
    unint64_t v47 = (v53 - 1) & v53;
    int64_t v211 = v54;
    unint64_t v51 = __clz(__rbit64(v53)) + (v54 << 6);
LABEL_22:
    uint64_t v56 = v217;
    uint64_t v57 = *(void *)(v217 + 72);
    uint64_t v58 = *(void (**)(char *, unint64_t, uint64_t))(v217 + 16);
    int v59 = v203;
    v58(v203, *((void *)v204 + 6) + v57 * v51, v23);
    uint64_t v60 = *(char **)(v56 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v60)(v59, 0, 1, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v59, 1, v23) == 1)
    {
      uint64_t v214 = v60;
      swift_release();
      uint64_t v8 = (char *)v215;
      unint64_t v42 = v216;
      uint64_t v6 = (char *)v205;
      goto LABEL_39;
    }
    uint64_t v61 = (uint64_t)v214;
    (*v210)(v214, v59, v23);
    unint64_t v42 = v216;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v62 = sub_24B59F008(v61);
    char v64 = v63;
    swift_bridgeObjectRelease();
    if (v64)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v66 = *(double *)v42;
      double v221 = *(double *)v42;
      *unint64_t v42 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24B5A0388();
        double v66 = v221;
      }
      (*v219)(*(void *)(*(void *)&v66 + 48) + v62 * v57, v23);
      uint64_t v67 = *(void *)&v221;
      uint64_t v68 = (uint64_t)v198;
      sub_24B59EFA4(*(void *)(*(void *)&v221 + 56) + *(void *)(v13 + 72) * v62, (uint64_t)v198);
      sub_24B59FD7C(v62, v67);
      *unint64_t v42 = v67;
      swift_bridgeObjectRelease();
      uint64_t v69 = 0;
    }
    else
    {
      uint64_t v69 = 1;
      uint64_t v68 = (uint64_t)v198;
    }
    (*v200)(v68, v69, 1, v12);
    swift_endAccess();
    int v70 = (*v199)(v68, 1, v12);
    uint64_t v6 = (char *)v205;
    if (v70 == 1)
    {
      (*v219)((unint64_t)v214, v23);
      sub_24B5632A8(v68, &qword_2697CC3F8);
    }
    else
    {
      uint64_t v71 = v196;
      sub_24B59EFA4(v68, v196);
      *(unsigned char *)(v71 + *(int *)(v12 + 52)) = 1;
      sub_24B57C210(v71, v197);
      unint64_t v72 = v222;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v72 = sub_24B59D8E0(0, *(void *)(v72 + 16) + 1, 1, v72);
      }
      uint64_t v73 = v195;
      unint64_t v75 = *(void *)(v72 + 16);
      unint64_t v74 = *(void *)(v72 + 24);
      if (v75 >= v74 >> 1) {
        unint64_t v72 = sub_24B59D8E0(v74 > 1, v75 + 1, 1, v72);
      }
      *(void *)(v72 + 16) = v75 + 1;
      sub_24B59EFA4(v197, v72+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v75);
      unint64_t v222 = v72;
      uint64_t v76 = sub_24B57CCC8();
      uint64_t v77 = v191;
      (*v190)(v73, v76, v191);
      uint64_t v78 = v188;
      unint64_t v79 = v214;
      v58(v188, (unint64_t)v214, v23);
      uint64_t v80 = sub_24B6824B0();
      os_log_type_t v81 = sub_24B682B30();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v220 = v83;
        *(_DWORD *)uint64_t v82 = v187;
        *(void *)(v82 + 4) = sub_24B5627B8(0xD000000000000030, v186, &v220);
        *(_WORD *)(v82 + 12) = 2082;
        sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
        uint64_t v84 = sub_24B682F90();
        *(void *)(v82 + 14) = sub_24B5627B8(v84, v85, &v220);
        swift_bridgeObjectRelease();
        unint64_t v86 = *v219;
        (*v219)((unint64_t)v78, v23);
        _os_log_impl(&dword_24B55E000, v80, v81, "MeshManager.%{private}s: Removed mesh anchor %{public}s from processed mesh anchors", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v83, -1, -1);
        MEMORY[0x24C5D6C00](v82, -1, -1);

        (*v189)(v195, v77);
        sub_24B59F0A0(v196, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v86((unint64_t)v214, v23);
      }
      else
      {

        long long v87 = *v219;
        (*v219)((unint64_t)v78, v23);
        (*v189)(v195, v77);
        sub_24B59F0A0(v196, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v87((unint64_t)v79, v23);
      }
      uint64_t v13 = v207;
      unint64_t v42 = v216;
      uint64_t v6 = (char *)v205;
    }
    uint64_t v8 = (char *)v215;
    int64_t v48 = v211;
  }
LABEL_38:
  uint64_t v214 = *v213;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v214)(v203, 1, 1, v23);
  swift_release();
LABEL_39:
  char v88 = v183;
  uint64_t v89 = sub_24B592260(v183);
  sub_24B5920AC(v89);
  type metadata accessor for Util.Timer(0);
  uint64_t v90 = sub_24B5FDB24();
  (*(void (**)(void))(*(void *)v90 + 144))();
  uint64_t v91 = sub_24B593D3C((uint64_t)v88);
  (*(void (**)(uint64_t))(*(void *)v90 + 152))(v91);
  uint64_t v92 = sub_24B57CCC8();
  uint64_t v93 = (char *)*v190;
  uint64_t v94 = v182;
  BOOL v200 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v92;
  uint64_t v95 = v191;
  uint64_t v203 = v93;
  ((void (*)(char *))v93)(v182);
  swift_retain();
  uint64_t v96 = sub_24B6824B0();
  os_log_type_t v97 = sub_24B682B10();
  int v98 = v97;
  BOOL v99 = os_log_type_enabled(v96, v97);
  os_log_type_t v199 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v90;
  if (v99)
  {
    uint64_t v100 = swift_slowAlloc();
    LODWORD(v211) = v98;
    uint64_t v101 = v100;
    uint64_t v205 = swift_slowAlloc();
    uint64_t v220 = v205;
    *(_DWORD *)uint64_t v101 = v187;
    double v221 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000030, v181 | 0x8000000000000000, &v220));
    uint64_t v102 = sub_24B682CD0();
    *(_WORD *)(v101 + 12) = 2048;
    double v221 = (*(float (**)(uint64_t))(*(void *)v90 + 176))(v102);
    uint64_t v8 = (char *)v215;
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v96, (os_log_type_t)v211, "MeshManager.%{private}s: Mesh refinement took %f ms", (uint8_t *)v101, 0x16u);
    uint64_t v103 = v205;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v103, -1, -1);
    MEMORY[0x24C5D6C00](v101, -1, -1);

    uint64_t v104 = *v189;
    char v105 = v182;
  }
  else
  {

    swift_release();
    uint64_t v104 = *v189;
    char v105 = v94;
  }
  uint64_t v204 = v104;
  v104(v105, v95);
  v42[17] = 0;
  double v106 = *(double *)v42;
  uint64_t v107 = *(void *)(*v42 + 64);
  uint64_t v205 = *v42 + 64;
  uint64_t v108 = 1 << *(unsigned char *)(*(void *)&v106 + 32);
  uint64_t v109 = -1;
  if (v108 < 64) {
    uint64_t v109 = ~(-1 << v108);
  }
  unint64_t v110 = v109 & v107;
  int64_t v211 = (unint64_t)(v108 + 63) >> 6;
  float32x4_t v198 = (char *)(v211 - 1);
  swift_bridgeObjectRetain();
  uint64_t v111 = 0;
  if (!v110) {
    goto LABEL_50;
  }
LABEL_48:
  unint64_t v118 = __clz(__rbit64(v110));
  v110 &= v110 - 1;
  unint64_t v119 = v118 | (v111 << 6);
LABEL_49:
  (*(void (**)(char *, unint64_t, uint64_t))(v217 + 16))(v6, *(void *)(*(void *)&v106 + 48) + *(void *)(v217 + 72) * v119, v23);
  uint64_t v120 = *(void *)(*(void *)&v106 + 56) + *(void *)(v207 + 72) * v119;
  uint64_t v121 = sub_24B562F04(&qword_2697CC438);
  sub_24B57C210(v120, (uint64_t)&v6[*(int *)(v121 + 48)]);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v6, 0, 1, v121);
  uint64_t v8 = (char *)v215;
  while (1)
  {
    sub_24B56CF38((uint64_t)v6, (uint64_t)v8, &qword_2697CC430);
    uint64_t v126 = sub_24B562F04(&qword_2697CC438);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v8, 1, v126) == 1) {
      break;
    }
    uint64_t v112 = (uint64_t)&v8[*(int *)(v126 + 48)];
    id v113 = *(id *)(v112 + *(int *)(v206 + 20));
    sub_24B59F0A0(v112, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    char v114 = (char *)objc_msgSend(v113, sel_count);

    uint64_t v115 = v42[17];
    BOOL v116 = __OFADD__(v115, v114);
    uint64_t v117 = &v114[v115];
    if (v116)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    v42[17] = (uint64_t)v117;
    (*v219)((unint64_t)v8, v23);
    if (v110) {
      goto LABEL_48;
    }
LABEL_50:
    int64_t v122 = v111 + 1;
    if (__OFADD__(v111, 1)) {
      goto LABEL_109;
    }
    if (v122 < v211)
    {
      unint64_t v123 = *(void *)(v205 + 8 * v122);
      if (v123) {
        goto LABEL_53;
      }
      uint64_t v124 = v111 + 2;
      ++v111;
      if (v122 + 1 < v211)
      {
        unint64_t v123 = *(void *)(v205 + 8 * v124);
        if (v123) {
          goto LABEL_56;
        }
        uint64_t v111 = v122 + 1;
        if (v122 + 2 < v211)
        {
          unint64_t v123 = *(void *)(v205 + 8 * (v122 + 2));
          if (v123)
          {
            v122 += 2;
LABEL_53:
            unint64_t v110 = (v123 - 1) & v123;
            unint64_t v119 = __clz(__rbit64(v123)) + (v122 << 6);
            uint64_t v111 = v122;
            goto LABEL_49;
          }
          uint64_t v124 = v122 + 3;
          uint64_t v111 = v122 + 2;
          if (v122 + 3 < v211)
          {
            unint64_t v123 = *(void *)(v205 + 8 * v124);
            if (v123)
            {
LABEL_56:
              int64_t v122 = v124;
              goto LABEL_53;
            }
            while (1)
            {
              int64_t v122 = v124 + 1;
              if (__OFADD__(v124, 1)) {
                goto LABEL_114;
              }
              if (v122 >= v211) {
                break;
              }
              unint64_t v123 = *(void *)(v205 + 8 * v122);
              ++v124;
              if (v123) {
                goto LABEL_53;
              }
            }
            uint64_t v111 = (uint64_t)v198;
          }
        }
      }
    }
    uint64_t v125 = sub_24B562F04(&qword_2697CC438);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v6, 1, 1, v125);
    unint64_t v110 = 0;
  }
  swift_release();
  unint64_t v127 = v179;
  uint64_t v128 = v191;
  ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v203)(v179, v200, v191);
  swift_retain();
  os_log_type_t v129 = sub_24B6824B0();
  os_log_type_t v130 = sub_24B682B10();
  if (os_log_type_enabled(v129, v130))
  {
    uint64_t v131 = swift_slowAlloc();
    uint64_t v132 = swift_slowAlloc();
    uint64_t v220 = v132;
    *(_DWORD *)uint64_t v131 = v187;
    double v221 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000030, v181 | 0x8000000000000000, &v220));
    sub_24B682CD0();
    *(_WORD *)(v131 + 12) = 2050;
    uint64_t v133 = v216;
    double v221 = *((double *)v216 + 17);
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v129, v130, "MeshManager.%{private}s: Num vertices all anchors = %{public}ld", (uint8_t *)v131, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v132, -1, -1);
    MEMORY[0x24C5D6C00](v131, -1, -1);

    v204(v127, v128);
  }
  else
  {

    swift_release();
    v204(v127, v128);
    uint64_t v133 = v216;
  }
  uint64_t v134 = (uint64_t)v202;
  sub_24B5958B0();
  uint64_t v135 = v133[1];
  uint64_t v136 = v135 + 56;
  uint64_t v137 = 1 << *(unsigned char *)(v135 + 32);
  uint64_t v138 = -1;
  if (v137 < 64) {
    uint64_t v138 = ~(-1 << v137);
  }
  unint64_t v139 = v138 & *(void *)(v135 + 56);
  int64_t v215 = (unint64_t)(v137 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v140 = 0;
  uint64_t v141 = v207;
  while (2)
  {
    uint64_t v142 = v201;
    if (v139)
    {
      unint64_t v143 = __clz(__rbit64(v139));
      v139 &= v139 - 1;
      unint64_t v144 = v143 | (v140 << 6);
      uint64_t v145 = v216;
LABEL_91:
      uint64_t v149 = v217;
      (*(void (**)(char *, unint64_t, uint64_t))(v217 + 16))(v201, *(void *)(v135 + 48) + *(void *)(v217 + 72) * v144, v23);
      ((void (*)(char *, void, uint64_t, uint64_t))v214)(v142, 0, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v142, 1, v23) == 1) {
        goto LABEL_100;
      }
      (*v210)((char *)v134, v142, v23);
      uint64_t v150 = *v145;
      if (!*(void *)(*v145 + 16)) {
        goto LABEL_107;
      }
      unint64_t v151 = sub_24B59F008(v134);
      if ((v152 & 1) == 0) {
        goto LABEL_108;
      }
      uint64_t v153 = *(void *)(v141 + 72);
      uint64_t v154 = *(void *)(v150 + 56) + v153 * v151;
      uint64_t v155 = v194;
      sub_24B57C210(v154, v194);
      (*v219)(v134, v23);
      uint64_t v156 = v155;
      uint64_t v157 = v208;
      sub_24B59EFA4(v156, v208);
      sub_24B57C210(v157, v209);
      unint64_t v158 = v222;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v158 = sub_24B59D8E0(0, *(void *)(v158 + 16) + 1, 1, v158);
      }
      unint64_t v160 = *(void *)(v158 + 16);
      unint64_t v159 = *(void *)(v158 + 24);
      if (v160 >= v159 >> 1) {
        unint64_t v158 = sub_24B59D8E0(v159 > 1, v160 + 1, 1, v158);
      }
      *(void *)(v158 + 16) = v160 + 1;
      sub_24B59EFA4(v209, v158+ ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80))+ v160 * v153);
      unint64_t v222 = v158;
      sub_24B59F0A0(v208, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      uint64_t v134 = (uint64_t)v202;
      continue;
    }
    break;
  }
  int64_t v146 = v140 + 1;
  uint64_t v145 = v216;
  if (__OFADD__(v140, 1)) {
    goto LABEL_111;
  }
  if (v146 >= v215)
  {
LABEL_99:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v214)(v201, 1, 1, v23);
LABEL_100:
    uint64_t v161 = swift_release();
    if ((*(uint64_t (**)(uint64_t))(*(void *)v184 + 160))(v161))
    {
      uint64_t v163 = v162;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v165 = *(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 8);
      uint64_t v166 = swift_bridgeObjectRetain();
      v165(v166, ObjectType, v163);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v167 = v180;
    uint64_t v168 = v191;
    ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v203)(v180, v200, v191);
    unint64_t v169 = v222;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v170 = sub_24B6824B0();
    os_log_type_t v171 = sub_24B682B30();
    if (os_log_type_enabled(v170, v171))
    {
      uint64_t v172 = swift_slowAlloc();
      uint64_t v173 = swift_slowAlloc();
      uint64_t v220 = v173;
      *(_DWORD *)uint64_t v172 = 136381187;
      double v221 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000030, v181 | 0x8000000000000000, &v220));
      sub_24B682CD0();
      *(_WORD *)(v172 + 12) = 2050;
      long long v174 = v145;
      double v175 = *(double *)(v169 + 16);
      swift_bridgeObjectRelease();
      double v221 = v175;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v172 + 22) = 2050;
      double v176 = *(double *)(*v174 + 16);
      swift_release();
      double v221 = v176;
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v170, v171, "MeshManager.%{private}s: Updated %{public}ld of %{public}ld mesh anchors", (uint8_t *)v172, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v173, -1, -1);
      MEMORY[0x24C5D6C00](v172, -1, -1);

      long long v177 = v180;
      uint64_t v178 = v191;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      long long v177 = v167;
      uint64_t v178 = v168;
    }
    v204(v177, v178);
    sub_24B59D504();
    sub_24B58FE70();
    sub_24B680D38();
    OCSignPostsAriadneDbgCode();
    kdebug_trace();
    swift_release();
    return;
  }
  unint64_t v147 = *(void *)(v136 + 8 * v146);
  ++v140;
  if (v147) {
    goto LABEL_90;
  }
  int64_t v140 = v146 + 1;
  if (v146 + 1 >= v215) {
    goto LABEL_99;
  }
  unint64_t v147 = *(void *)(v136 + 8 * v140);
  if (v147) {
    goto LABEL_90;
  }
  int64_t v140 = v146 + 2;
  if (v146 + 2 >= v215) {
    goto LABEL_99;
  }
  unint64_t v147 = *(void *)(v136 + 8 * v140);
  if (v147)
  {
LABEL_90:
    unint64_t v139 = (v147 - 1) & v147;
    unint64_t v144 = __clz(__rbit64(v147)) + (v140 << 6);
    goto LABEL_91;
  }
  int64_t v148 = v146 + 3;
  if (v148 >= v215) {
    goto LABEL_99;
  }
  unint64_t v147 = *(void *)(v136 + 8 * v148);
  if (v147)
  {
    int64_t v140 = v148;
    goto LABEL_90;
  }
  while (1)
  {
    int64_t v140 = v148 + 1;
    if (__OFADD__(v148, 1)) {
      break;
    }
    if (v140 >= v215) {
      goto LABEL_99;
    }
    unint64_t v147 = *(void *)(v136 + 8 * v140);
    ++v148;
    if (v147) {
      goto LABEL_90;
    }
  }
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
}

uint64_t sub_24B5920AC(uint64_t a1)
{
  uint64_t result = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *v1;
  int64_t v6 = *(void *)(*v1 + 16);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)(result - 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v5;
  if (!result || (int64_t v9 = *(void *)(v5 + 24) >> 1, v9 < v7))
  {
    if (v6 <= v7) {
      int64_t v10 = v6 + v4;
    }
    else {
      int64_t v10 = v6;
    }
    uint64_t result = sub_24B59D8E0(result, v10, 1, v5);
    unint64_t v5 = result;
    *uint64_t v1 = result;
    int64_t v9 = *(void *)(result + 24) >> 1;
  }
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = v9 - v11;
  if (!*(void *)(a1 + 16))
  {
    if (!v4) {
      goto LABEL_19;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v12 < v4)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(v8 + 72);
  unint64_t v15 = v5 + v13 + v14 * v11;
  if (a1 + v13 < v15 + v14 * v4 && v15 < a1 + v13 + v14 * v4) {
    goto LABEL_26;
  }
  swift_arrayInitWithCopy();
  if (v4)
  {
    uint64_t v17 = *(void *)(v5 + 16);
    BOOL v18 = __OFADD__(v17, v4);
    uint64_t v19 = v17 + v4;
    if (!v18)
    {
      *(void *)(v5 + 16) = v19;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = sub_24B682F40();
    __break(1u);
    return result;
  }
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == v12) {
LABEL_23:
  }
    *uint64_t v1 = v5;
  return result;
}

uint64_t sub_24B592260(uint64_t *a1)
{
  uint64_t v210 = sub_24B6824D0();
  uint64_t v212 = *(void *)(v210 - 8);
  MEMORY[0x270FA5388](v210 - 8);
  uint64_t v208 = (char *)&v198 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v4 - 8);
  int64_t v6 = (char *)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CC458);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int64_t v10 = (char *)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v198 - v11;
  uint64_t v13 = sub_24B682410();
  uint64_t v244 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v207 = (char *)&v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v206 = (char *)&v198 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v205 = (uint64_t)&v198 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v237 = (uint64_t)&v198 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v203 = (char *)&v198 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v202 = (char *)&v198 - v25;
  MEMORY[0x270FA5388](v24);
  unint64_t v226 = (void (**)(char *, uint64_t))((char *)&v198 - v26);
  uint64_t v27 = sub_24B562F04(&qword_2697CC460);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v204 = (uint64_t)&v198 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v198 - v30;
  float32x4_t v240 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v234 = *((void *)v240 - 1);
  uint64_t v32 = MEMORY[0x270FA5388](v240);
  uint64_t v211 = (uint64_t)&v198 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v209 = (uint64_t)&v198 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v215 = (uint64_t)&v198 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v216 = (uint64_t)&v198 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (void (**)(char *, uint64_t, uint64_t))((char *)&v198 - v40);
  uint64_t v42 = sub_24B562F04(&qword_2697CC430);
  uint64_t v43 = MEMORY[0x270FA5388](v42 - 8);
  int v230 = (char *)&v198 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v239 = (uint64_t)&v198 - v45;
  uint64_t v46 = *a1;
  unint64_t v229 = sub_24B58B6F8(MEMORY[0x263F8EE78]);
  uint64_t v47 = *(void *)(v46 + 64);
  uint64_t v217 = v46 + 64;
  uint64_t v48 = 1 << *(unsigned char *)(v46 + 32);
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  else {
    uint64_t v49 = -1;
  }
  unint64_t v50 = v49 & v47;
  unint64_t v51 = (uint64_t *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v52 = v10;
  uint64_t v53 = 0;
  unint64_t v54 = v50;
  unint64_t v55 = (unint64_t)(v48 + 63) >> 6;
  long long v243 = (void (**)(char *, uint64_t, uint64_t))(v244 + 16);
  uint64_t v56 = (void (**)(uint64_t, uint64_t))(v244 + 8);
  uint64_t v232 = v51;
  os_log_type_t v213 = v51 + 2;
  *(void *)&long long v224 = v244 + 56;
  unint64_t v223 = v244 + 48;
  uint64_t v238 = (void (**)(uint64_t, char *, uint64_t))(v244 + 32);
  unint64_t v199 = v55 - 1;
  uint64_t v222 = v55;
  unint64_t v201 = v55 - 5;
  unint64_t v228 = (void *)v46;
  uint64_t v200 = v46 + 104;
  uint64_t v57 = (uint64_t *)&unk_2697CC438;
  uint64_t v231 = v6;
  uint64_t v214 = (uint64_t)v52;
  uint64_t v235 = (void (**)(uint64_t, uint64_t))(v244 + 8);
  uint64_t v236 = v12;
  unint64_t v227 = v41;
  if (!v54) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v242 = (void (**)(char *, uint64_t, uint64_t, int *))((v54 - 1) & v54);
  unint64_t v58 = __clz(__rbit64(v54)) | (v53 << 6);
LABEL_6:
  int v59 = v228;
  uint64_t v60 = (uint64_t)v230;
  (*(void (**)(char *, unint64_t, uint64_t))(v244 + 16))(v230, v228[6] + *(void *)(v244 + 72) * v58, v13);
  uint64_t v61 = v59[7] + *(void *)(v234 + 72) * v58;
  uint64_t v62 = sub_24B562F04(v57);
  sub_24B57C210(v61, v60 + *(int *)(v62 + 48));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v60, 0, 1, v62);
  int64_t v6 = v231;
  while (1)
  {
    uint64_t v68 = v239;
    sub_24B56CF38(v60, v239, &qword_2697CC430);
    uint64_t v69 = sub_24B562F04(v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v68, 1, v69) == 1) {
      break;
    }
    float32x4_t v241 = (unsigned int (**)(char *, uint64_t, int *))v53;
    int v70 = v57;
    sub_24B59EFA4(v68 + *(int *)(v69 + 48), (uint64_t)v41);
    type metadata accessor for MeshUtils.AABB();
    uint64_t v71 = sub_24B578C18(*(float32x4_t *)((char *)v41 + v240[11]), *(float32x4_t *)((char *)v41 + v240[12]));
    if (v71)
    {
      unint64_t v72 = v71;
      uint64_t v73 = *v213;
      uint64_t v74 = *(void *)(*v213 + 56);
      uint64_t v220 = (void (*)(uint64_t, uint64_t))(*v213 + 56);
      uint64_t v75 = 1 << *(unsigned char *)(v73 + 32);
      if (v75 < 64) {
        uint64_t v76 = ~(-1 << v75);
      }
      else {
        uint64_t v76 = -1;
      }
      unint64_t v77 = v76 & v74;
      int64_t v221 = (unint64_t)(v75 + 63) >> 6;
      uint64_t v225 = (uint64_t *)v73;
      swift_bridgeObjectRetain();
      for (unint64_t i = 0; ; unint64_t i = v233)
      {
        uint64_t v79 = v239;
        while (1)
        {
          if (v77)
          {
            unint64_t v81 = __clz(__rbit64(v77));
            v77 &= v77 - 1;
            unint64_t v233 = i;
            unint64_t v82 = v81 | (i << 6);
          }
          else
          {
            int64_t v83 = i + 1;
            if (__OFADD__(i, 1)) {
              goto LABEL_135;
            }
            int64_t v6 = v231;
            if (v83 >= v221)
            {
LABEL_79:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v224)(v31, 1, 1, v13);
              swift_release();
              goto LABEL_80;
            }
            unint64_t v84 = *((void *)v220 + v83);
            int64_t v85 = i + 1;
            if (!v84)
            {
              int64_t v85 = i + 2;
              if ((uint64_t)(i + 2) >= v221) {
                goto LABEL_79;
              }
              unint64_t v84 = *((void *)v220 + v85);
              if (!v84)
              {
                int64_t v85 = i + 3;
                if ((uint64_t)(i + 3) >= v221) {
                  goto LABEL_79;
                }
                unint64_t v84 = *((void *)v220 + v85);
                if (!v84)
                {
                  unint64_t v86 = i + 4;
                  if ((uint64_t)(i + 4) >= v221) {
                    goto LABEL_79;
                  }
                  unint64_t v84 = *((void *)v220 + v86);
                  if (!v84)
                  {
                    while (1)
                    {
                      int64_t v85 = v86 + 1;
                      if (__OFADD__(v86, 1)) {
                        goto LABEL_136;
                      }
                      if (v85 >= v221) {
                        goto LABEL_79;
                      }
                      unint64_t v84 = *((void *)v220 + v85);
                      ++v86;
                      if (v84) {
                        goto LABEL_42;
                      }
                    }
                  }
                  int64_t v85 = i + 4;
                }
              }
            }
LABEL_42:
            unint64_t v77 = (v84 - 1) & v84;
            unint64_t v233 = v85;
            unint64_t v82 = __clz(__rbit64(v84)) + (v85 << 6);
          }
          uint64_t v87 = v244;
          uint64_t v88 = *(void *)(v244 + 72);
          uint64_t v89 = *(void (**)(char *, unint64_t, uint64_t))(v244 + 16);
          v89(v31, v225[6] + v88 * v82, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v31, 0, 1, v13);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v31, 1, v13) == 1)
          {
            swift_release();
            int64_t v6 = v231;
            uint64_t v56 = v235;
            uint64_t v41 = v227;
            uint64_t v79 = v239;
            uint64_t v57 = v70;
LABEL_80:
            swift_release();
            sub_24B59F0A0((uint64_t)v41, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            (*v56)(v79, v13);
            uint64_t v12 = v236;
            goto LABEL_16;
          }
          uint64_t v90 = v13;
          uint64_t v91 = v226;
          uint64_t v92 = v31;
          uint64_t v93 = v31;
          uint64_t v94 = v90;
          ((void (*)(void, char *))*v238)(v226, v93);
          uint64_t v95 = *v232;
          if (*(void *)(*v232 + 16))
          {
            unint64_t v96 = sub_24B59F008((uint64_t)v91);
            if (v97) {
              break;
            }
          }
LABEL_26:
          uint64_t v56 = v235;
          uint64_t v80 = v91;
          uint64_t v13 = v94;
          (*v235)((uint64_t)v80, v94);
          uint64_t v31 = v92;
          uint64_t v41 = v227;
          uint64_t v79 = v239;
          uint64_t v57 = v70;
          unint64_t i = v233;
        }
        uint64_t v98 = *(void *)(v95 + 56) + *(void *)(v234 + 72) * v96;
        uint64_t v99 = v215;
        sub_24B57C210(v98, v215);
        uint64_t v100 = v216;
        sub_24B59EFA4(v99, v216);
        uint64_t v101 = v240[12];
        float32x4_t v218 = *(float32x4_t *)(v100 + v240[11]);
        float32x4_t v219 = *(float32x4_t *)(v100 + v101);
        uint64_t v102 = v240[9];
        simd_float4x4 v247 = __invert_f4(*(simd_float4x4 *)((char *)v227 + v102));
        uint64_t v103 = sub_24B579054(v218, v219, vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v247.columns[0], COERCE_FLOAT(*(_OWORD *)(v100 + v102))), (float32x4_t)v247.columns[1], *(float32x2_t *)(v100 + v102), 1), (float32x4_t)v247.columns[2], *(float32x4_t *)(v100 + v102), 2), (float32x4_t)v247.columns[3], *(float32x4_t *)(v100 + v102), 3), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v247.columns[0], COERCE_FLOAT(*(_OWORD *)(v100 + v102 + 16))),
                       (float32x4_t)v247.columns[1],
                       *(float32x2_t *)(v100 + v102 + 16),
                       1),
                     (float32x4_t)v247.columns[2],
                     *(float32x4_t *)(v100 + v102 + 16),
                     2),
                   (float32x4_t)v247.columns[3],
                   *(float32x4_t *)(v100 + v102 + 16),
                   3),
                 vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v247.columns[0], COERCE_FLOAT(*(_OWORD *)(v100 + v102 + 32))), (float32x4_t)v247.columns[1], *(float32x2_t *)(v100 + v102 + 32), 1), (float32x4_t)v247.columns[2], *(float32x4_t *)(v100 + v102 + 32), 2), (float32x4_t)v247.columns[3], *(float32x4_t *)(v100 + v102 + 32), 3), vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v247.columns[0], COERCE_FLOAT(*(_OWORD *)(v100 + v102 + 48))), (float32x4_t)v247.columns[1], *(float32x2_t *)(v100 + v102 + 48), 1),
                     (float32x4_t)v247.columns[2],
                     *(float32x4_t *)(v100 + v102 + 48),
                     2),
                   (float32x4_t)v247.columns[3],
                   *(float32x4_t *)(v100 + v102 + 48),
                   3));
        if (!v103) {
          break;
        }
        uint64_t v104 = *(float (**)(float32x4_t *))(*(void *)v103 + 152);
        v219.i64[0] = v103;
        float v105 = v104(v72);
        double v106 = (void *)v229;
        uint64_t v107 = v226;
        if (*(void *)(v229 + 16) && (unint64_t v108 = sub_24B59F008((uint64_t)v226), (v109 & 1) != 0))
        {
          float v110 = *(float *)(v106[7] + 4 * v108);
          uint64_t v111 = v107;
          uint64_t v13 = v94;
          v89(v202, (unint64_t)v111, v94);
          v218.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v246 = v106;
          unint64_t v113 = sub_24B59F008((uint64_t)v202);
          uint64_t v114 = v106[2];
          BOOL v115 = (v112 & 1) == 0;
          uint64_t v116 = v114 + v115;
          if (__OFADD__(v114, v115)) {
            goto LABEL_140;
          }
          uint64_t v31 = v92;
          if (v106[3] >= v116)
          {
            uint64_t v41 = v227;
            if ((v218.i8[0] & 1) == 0)
            {
              unint64_t v229 = v113;
              v218.i32[0] = v112;
              sub_24B5A06A0();
              LOBYTE(v112) = v218.i8[0];
              unint64_t v113 = v229;
            }
          }
          else
          {
            char v117 = v112;
            sub_24B59F954(v116, v218.i32[0]);
            unint64_t v118 = sub_24B59F008((uint64_t)v202);
            int v119 = v112 & 1;
            LOBYTE(v112) = v117;
            BOOL v120 = (v117 & 1) == v119;
            uint64_t v41 = v227;
            if (!v120) {
              goto LABEL_142;
            }
            unint64_t v113 = v118;
          }
          float v137 = v105 + v110;
          uint64_t v138 = v246;
          unint64_t v229 = (unint64_t)v246;
          if (v112)
          {
            *(float *)(v246[7] + 4 * v113) = v137;
          }
          else
          {
            v246[(v113 >> 6) + 8] |= 1 << v113;
            unint64_t v139 = v138[6] + v113 * v88;
            unint64_t v140 = v113;
            v89((char *)v139, (unint64_t)v202, v13);
            *(float *)(v138[7] + 4 * v140) = v137;
            uint64_t v141 = v138[2];
            BOOL v134 = __OFADD__(v141, 1);
            uint64_t v142 = v141 + 1;
            if (v134) {
              goto LABEL_141;
            }
            v138[2] = v142;
          }
          uint64_t v56 = v235;
          uint64_t v57 = v70;
          swift_bridgeObjectRelease();
          uint64_t v136 = *v56;
          (*v56)((uint64_t)v202, v13);
        }
        else
        {
          uint64_t v121 = v107;
          uint64_t v13 = v94;
          v89(v203, (unint64_t)v121, v94);
          v218.i32[0] = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v246 = v106;
          unint64_t v123 = sub_24B59F008((uint64_t)v203);
          uint64_t v124 = v106[2];
          BOOL v125 = (v122 & 1) == 0;
          uint64_t v126 = v124 + v125;
          if (__OFADD__(v124, v125)) {
            goto LABEL_138;
          }
          uint64_t v31 = v92;
          if (v106[3] >= v126)
          {
            uint64_t v41 = v227;
            if ((v218.i8[0] & 1) == 0)
            {
              unint64_t v229 = v123;
              v218.i32[0] = v122;
              sub_24B5A06A0();
              LOBYTE(v122) = v218.i8[0];
              unint64_t v123 = v229;
            }
          }
          else
          {
            char v127 = v122;
            sub_24B59F954(v126, v218.i32[0]);
            unint64_t v128 = sub_24B59F008((uint64_t)v203);
            int v129 = v122 & 1;
            LOBYTE(v122) = v127;
            BOOL v120 = (v127 & 1) == v129;
            uint64_t v41 = v227;
            if (!v120) {
              goto LABEL_142;
            }
            unint64_t v123 = v128;
          }
          os_log_type_t v130 = v246;
          unint64_t v229 = (unint64_t)v246;
          if (v122)
          {
            *(float *)(v246[7] + 4 * v123) = v105;
          }
          else
          {
            v246[(v123 >> 6) + 8] |= 1 << v123;
            unint64_t v131 = v130[6] + v123 * v88;
            unint64_t v132 = v123;
            v89((char *)v131, (unint64_t)v203, v13);
            *(float *)(v130[7] + 4 * v132) = v105;
            uint64_t v133 = v130[2];
            BOOL v134 = __OFADD__(v133, 1);
            uint64_t v135 = v133 + 1;
            if (v134) {
              goto LABEL_139;
            }
            void v130[2] = v135;
          }
          uint64_t v56 = v235;
          uint64_t v57 = v70;
          swift_bridgeObjectRelease();
          uint64_t v136 = *v56;
          (*v56)((uint64_t)v203, v13);
        }
        swift_release();
        sub_24B59F0A0(v216, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        v136((uint64_t)v226, v13);
      }
      sub_24B59F0A0(v100, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      uint64_t v91 = v226;
      goto LABEL_26;
    }
    sub_24B59F0A0((uint64_t)v41, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    (*v56)(v68, v13);
    uint64_t v12 = v236;
LABEL_16:
    uint64_t v53 = (uint64_t)v241;
    unint64_t v54 = (unint64_t)v242;
    if (v242) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v63 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_134;
    }
    if (v63 >= v222)
    {
      uint64_t v65 = (char *)v53;
      goto LABEL_12;
    }
    unint64_t v64 = *(void *)(v217 + 8 * v63);
    if (v64) {
      goto LABEL_10;
    }
    uint64_t v65 = (char *)(v53 + 1);
    if (v53 + 2 < v222)
    {
      unint64_t v64 = *(void *)(v217 + 8 * (v53 + 2));
      if (v64)
      {
        uint64_t v63 = v53 + 2;
        goto LABEL_10;
      }
      uint64_t v65 = (char *)(v53 + 2);
      if (v53 + 3 < v222)
      {
        unint64_t v64 = *(void *)(v217 + 8 * (v53 + 3));
        if (!v64)
        {
          uint64_t v63 = v53 + 4;
          uint64_t v65 = (char *)(v53 + 3);
          if (v53 + 4 < v222)
          {
            unint64_t v64 = *(void *)(v217 + 8 * v63);
            if (v64) {
              goto LABEL_10;
            }
            while (v201 != v53)
            {
              unint64_t v64 = *(void *)(v200 + 8 * v53++);
              if (v64)
              {
                uint64_t v63 = v53 + 4;
                goto LABEL_10;
              }
            }
            uint64_t v65 = (char *)v199;
          }
          goto LABEL_12;
        }
        uint64_t v63 = v53 + 3;
LABEL_10:
        uint64_t v242 = (void (**)(char *, uint64_t, uint64_t, int *))((v64 - 1) & v64);
        unint64_t v58 = __clz(__rbit64(v64)) + (v63 << 6);
        uint64_t v53 = v63;
        goto LABEL_6;
      }
    }
LABEL_12:
    uint64_t v66 = sub_24B562F04(v57);
    uint64_t v67 = v230;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v230, 1, 1, v66);
    uint64_t v242 = 0;
    uint64_t v53 = (uint64_t)v65;
    uint64_t v60 = (uint64_t)v67;
  }
  swift_release();
  uint64_t v143 = *(void *)(v229 + 64);
  unint64_t v233 = v229 + 64;
  uint64_t v144 = 1 << *(unsigned char *)(v229 + 32);
  uint64_t v145 = -1;
  if (v144 < 64) {
    uint64_t v145 = ~(-1 << v144);
  }
  unint64_t v146 = v145 & v143;
  float32x4_t v241 = (unsigned int (**)(char *, uint64_t, int *))(v234 + 48);
  uint64_t v242 = (void (**)(char *, uint64_t, uint64_t, int *))(v234 + 56);
  unint64_t v228 = v232 + 3;
  unint64_t v227 = (void (**)(char *, uint64_t, uint64_t))(v212 + 16);
  unint64_t v226 = (void (**)(char *, uint64_t))(v212 + 8);
  uint64_t v225 = (uint64_t *)&v246;
  uint64_t v239 = (unint64_t)(v144 + 63) >> 6;
  int64_t v221 = v239 - 1;
  swift_bridgeObjectRetain();
  uint64_t v147 = 0;
  int v230 = (char *)MEMORY[0x263F8EE78];
  *(void *)&long long v148 = 136380931;
  long long v224 = v148;
  unint64_t v223 = 0x800000024B68C3C0;
  uint64_t v222 = MEMORY[0x263F8EE58] + 8;
LABEL_90:
  uint64_t v149 = v214;
  if (v146)
  {
    while (1)
    {
      unint64_t v150 = __clz(__rbit64(v146));
      v146 &= v146 - 1;
      unint64_t v151 = v150 | (v147 << 6);
LABEL_94:
      unint64_t v152 = v229;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v244 + 16))(v149, *(void *)(v229 + 48) + *(void *)(v244 + 72) * v151, v13);
      uint64_t v153 = *(void *)(v152 + 56);
      uint64_t v154 = sub_24B562F04(&qword_2697CC468);
      *(_DWORD *)(v149 + *(int *)(v154 + 48)) = *(_DWORD *)(v153 + 4 * v151);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56))(v149, 0, 1, v154);
LABEL_113:
      sub_24B56CF38(v149, (uint64_t)v12, &qword_2697CC458);
      uint64_t v159 = sub_24B562F04(&qword_2697CC468);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v159 - 8) + 48))(v12, 1, v159) == 1) {
        break;
      }
      float v160 = *(float *)&v12[*(int *)(v159 + 48)];
      uint64_t v161 = v237;
      (*v238)(v237, v12, v13);
      if (v160 < 1.0)
      {
        (*v56)(v161, v13);
        if (!v146) {
          goto LABEL_95;
        }
      }
      else
      {
        uint64_t v162 = v232;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v163 = sub_24B59F008(v161);
        char v165 = v164;
        swift_bridgeObjectRelease();
        if (v165)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v167 = *v162;
          uint64_t v245 = *v162;
          *uint64_t v162 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_24B5A0388();
            uint64_t v167 = v245;
          }
          (*(void (**)(unint64_t, uint64_t))(v244 + 8))(*(void *)(v167 + 48) + *(void *)(v244 + 72) * v163, v13);
          uint64_t v168 = v245;
          sub_24B59EFA4(*(void *)(v245 + 56) + *(void *)(v234 + 72) * v163, (uint64_t)v6);
          sub_24B59FD7C(v163, v168);
          *uint64_t v162 = v168;
          swift_bridgeObjectRelease();
          uint64_t v169 = 0;
        }
        else
        {
          uint64_t v169 = 1;
        }
        uint64_t v12 = v236;
        uint64_t v170 = v240;
        (*v242)(v6, v169, 1, v240);
        swift_endAccess();
        if ((*v241)(v6, 1, v170) != 1)
        {
          uint64_t v171 = v209;
          sub_24B59EFA4((uint64_t)v6, v209);
          *(unsigned char *)(v171 + v240[13]) = 1;
          sub_24B57C210(v171, v211);
          unint64_t v172 = (unint64_t)v230;
          char v173 = swift_isUniquelyReferenced_nonNull_native();
          if ((v173 & 1) == 0) {
            unint64_t v172 = sub_24B59D8E0(0, *(void *)(v172 + 16) + 1, 1, v172);
          }
          unint64_t v175 = *(void *)(v172 + 16);
          unint64_t v174 = *(void *)(v172 + 24);
          if (v175 >= v174 >> 1) {
            unint64_t v172 = sub_24B59D8E0(v174 > 1, v175 + 1, 1, v172);
          }
          *(void *)(v172 + 16) = v175 + 1;
          unint64_t v176 = (*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80);
          int v230 = (char *)v172;
          sub_24B59EFA4(v211, v172 + v176 + *(void *)(v234 + 72) * v175);
          swift_beginAccess();
          uint64_t v177 = v204;
          uint64_t v178 = v237;
          sub_24B5A19B8(v237, v204);
          sub_24B5632A8(v177, &qword_2697CC460);
          long long v179 = *v243;
          long long v180 = v206;
          (*v243)(v206, v178, v13);
          uint64_t v181 = v205;
          sub_24B5A0940(v205, v180);
          uint64_t v220 = *v235;
          v220(v181, v13);
          swift_endAccess();
          uint64_t v182 = sub_24B57CCC8();
          long long v183 = v208;
          (*v227)(v208, v182, v210);
          uint64_t v184 = v207;
          uint64_t v185 = v178;
          unint64_t v186 = v183;
          v179(v207, v185, v13);
          long long v187 = sub_24B6824B0();
          os_log_type_t v188 = sub_24B682B30();
          __int32 v189 = v188;
          if (os_log_type_enabled(v187, v188))
          {
            uint64_t v190 = swift_slowAlloc();
            v219.i64[0] = swift_slowAlloc();
            unint64_t v246 = (void *)v219.i64[0];
            *(_DWORD *)uint64_t v190 = v224;
            v218.i32[0] = v189;
            uint64_t v245 = sub_24B5627B8(0xD00000000000001CLL, v223, (uint64_t *)&v246);
            sub_24B682CD0();
            *(_WORD *)(v190 + 12) = 2082;
            uint64_t v217 = v190 + 14;
            sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
            uint64_t v191 = sub_24B682F90();
            uint64_t v245 = sub_24B5627B8(v191, v192, (uint64_t *)&v246);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            uint64_t v56 = v235;
            int64_t v193 = v220;
            v220((uint64_t)v184, v13);
            _os_log_impl(&dword_24B55E000, v187, (os_log_type_t)v218.i8[0], "MeshManager.%{private}s: Removed mesh anchor %{public}s because of overlap", (uint8_t *)v190, 0x16u);
            uint64_t v194 = v219.i64[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v194, -1, -1);
            uint64_t v195 = v190;
            uint64_t v12 = v236;
            MEMORY[0x24C5D6C00](v195, -1, -1);

            (*v226)(v186, v210);
            sub_24B59F0A0(v209, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            v193(v237, v13);
          }
          else
          {

            uint64_t v56 = v235;
            uint64_t v196 = v220;
            v220((uint64_t)v184, v13);
            (*v226)(v186, v210);
            sub_24B59F0A0(v209, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            v196(v237, v13);
          }
          int64_t v6 = v231;
          goto LABEL_90;
        }
        uint64_t v56 = v235;
        (*v235)(v237, v13);
        sub_24B5632A8((uint64_t)v6, &qword_2697CC3F8);
        if (!v146) {
          goto LABEL_95;
        }
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v230;
  }
  else
  {
LABEL_95:
    uint64_t v155 = v147 + 1;
    if (!__OFADD__(v147, 1))
    {
      if (v155 < v239)
      {
        unint64_t v156 = *(void *)(v233 + 8 * v155);
        if (v156)
        {
LABEL_98:
          unint64_t v146 = (v156 - 1) & v156;
          unint64_t v151 = __clz(__rbit64(v156)) + (v155 << 6);
          uint64_t v147 = v155;
          goto LABEL_94;
        }
        uint64_t v157 = v147 + 2;
        ++v147;
        if (v155 + 1 < v239)
        {
          unint64_t v156 = *(void *)(v233 + 8 * v157);
          if (v156)
          {
LABEL_101:
            uint64_t v155 = v157;
            goto LABEL_98;
          }
          uint64_t v147 = v155 + 1;
          if (v155 + 2 < v239)
          {
            unint64_t v156 = *(void *)(v233 + 8 * (v155 + 2));
            if (v156)
            {
              v155 += 2;
              goto LABEL_98;
            }
            uint64_t v157 = v155 + 3;
            uint64_t v147 = v155 + 2;
            if (v155 + 3 < v239)
            {
              unint64_t v156 = *(void *)(v233 + 8 * v157);
              if (v156) {
                goto LABEL_101;
              }
              while (1)
              {
                uint64_t v155 = v157 + 1;
                if (__OFADD__(v157, 1)) {
                  goto LABEL_137;
                }
                if (v155 >= v239) {
                  break;
                }
                unint64_t v156 = *(void *)(v233 + 8 * v155);
                ++v157;
                if (v156) {
                  goto LABEL_98;
                }
              }
              uint64_t v147 = v221;
            }
          }
        }
      }
      uint64_t v158 = sub_24B562F04(&qword_2697CC468);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v149, 1, 1, v158);
      unint64_t v146 = 0;
      goto LABEL_113;
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    uint64_t result = sub_24B682FF0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24B593D3C(uint64_t a1)
{
  sub_24B6824D0();
  uint64_t v3 = sub_24B6826D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)a1;
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v29 = v7;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = v8;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a1 + 72);
  int v24 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v14 = *(void **)(v1 + 40);
  void *v6 = v14;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v15 = v14;
  LOBYTE(v14) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v14)
  {
    uint64_t v23 = v9;
    uint64_t v17 = v27;
    uint64_t v30 = v29;
    uint64_t v31 = v28;
    uint64_t v18 = v26;
    uint64_t v32 = v27;
    uint64_t v33 = v26;
    uint64_t v34 = v9;
    uint64_t v35 = v11;
    uint64_t v36 = v10;
    uint64_t v37 = v13;
    uint64_t v19 = v25;
    uint64_t v38 = v12;
    uint64_t v39 = v25;
    char v20 = v24;
    char v40 = v24;
    sub_24B593F70(&v30);
    uint64_t v21 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
    swift_beginAccess();
    int v22 = *(unsigned __int8 *)(v21 + 33);
    if (*(unsigned char *)(v21 + 33))
    {
      uint64_t v30 = v29;
      uint64_t v31 = v28;
      uint64_t v32 = v17;
      uint64_t v33 = v18;
      uint64_t v34 = v23;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      uint64_t v37 = v13;
      uint64_t v38 = v12;
      uint64_t v39 = v19;
      char v40 = v20;
      if (v22 == 1) {
        return sub_24B596364(&v30);
      }
      else {
        return sub_24B5971A8((uint64_t)&v30);
      }
    }
    else
    {
      uint64_t v30 = v29;
      uint64_t v31 = v28;
      uint64_t v32 = v17;
      uint64_t v33 = v18;
      uint64_t v34 = v23;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      uint64_t v37 = v13;
      uint64_t v38 = v12;
      uint64_t v39 = v19;
      char v40 = v20;
      return sub_24B59C1AC(&v30);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B593F70(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v178 = sub_24B682410();
  uint64_t v175 = *(void *)(v178 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v178);
  uint64_t v177 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v176 = (uint64_t)&v152 - v6;
  uint64_t v7 = sub_24B562F04(&qword_2697CC430);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  char v173 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v172 = (uint64_t)&v152 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  float v160 = (char *)&v152 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v159 = (char *)&v152 - v14;
  uint64_t v166 = sub_24B6824D0();
  uint64_t v169 = *(void *)(v166 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v166);
  uint64_t v171 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v161 = (char *)&v152 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v158 = (char *)&v152 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v168 = (void (**)(char *, uint64_t, uint64_t))((char *)&v152 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v167 = (void (**)(uint64_t, uint64_t))((char *)&v152 - v23);
  uint64_t v24 = sub_24B6826D0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char **)((char *)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = *a1;
  uint64_t v28 = a1[2];
  uint64_t v29 = a1[3];
  uint64_t v30 = a1[4];
  uint64_t v165 = a1[5];
  uint64_t v31 = a1[6];
  uint64_t v164 = a1[7];
  uint64_t v32 = a1[8];
  uint64_t v163 = a1[9];
  LODWORD(v162) = *((unsigned __int8 *)a1 + 80);
  uint64_t v33 = *(void **)(v2 + 40);
  *uint64_t v27 = v33;
  (*(void (**)(void *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F8F0E0], v24);
  id v34 = v33;
  LOBYTE(v33) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v25 + 8))(v27, v24);
  if ((v33 & 1) == 0)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (*(unsigned char *)(v2 + 62) != 1) {
    return result;
  }
  uint64_t v36 = (float *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  uint64_t result = swift_beginAccess();
  if (*((unsigned char *)v36 + 72) == 1)
  {
    v36[14] = v36[15] + v36[14];
    *((_WORD *)v36 + 16) = 256;
    *((unsigned char *)v36 + 72) = 0;
    return result;
  }
  unint64_t v174 = (char **)v36;
  uint64_t v180 = v28;
  *(void *)&long long v181 = v29;
  *((void *)&v181 + 1) = v30;
  *(void *)&long long v182 = v165;
  *((void *)&v182 + 1) = v31;
  uint64_t v183 = v164;
  uint64_t v184 = v32;
  uint64_t v185 = v163;
  char v186 = v162;
  uint64_t v163 = v2;
  uint64_t v37 = sub_24B595638(&v180);
  uint64_t v38 = sub_24B57CCC8();
  uint64_t v39 = v169;
  char v40 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 16);
  uint64_t v41 = v167;
  uint64_t v157 = v38;
  uint64_t v42 = v166;
  uint64_t v162 = v169 + 16;
  unint64_t v156 = v40;
  ((void (*)(void (**)(uint64_t, uint64_t)))v40)(v167);
  uint64_t v43 = sub_24B6824B0();
  os_log_type_t v44 = sub_24B682B30();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v180 = v46;
    *(_DWORD *)uint64_t v45 = 136380931;
    long long v179 = (char *)sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68C3A0, &v180);
    uint64_t v39 = v169;
    sub_24B682CD0();
    *(_WORD *)(v45 + 12) = 2050;
    long long v179 = (char *)v37;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v43, v44, "MeshManager.%{private}s: Computed uniform point density = %{public}ld", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v46, -1, -1);
    MEMORY[0x24C5D6C00](v45, -1, -1);
  }

  uint64_t v47 = *(uint64_t (**)(char *, uint64_t))(v39 + 8);
  v47((char *)v41, v42);
  uint64_t v48 = v174;
  uint64_t v49 = v168;
  uint64_t v50 = (uint64_t)v174[6];
  uint64_t v155 = v47;
  if (v37 < v50)
  {
    *((unsigned char *)v174 + 33) = 2;
    unint64_t v51 = v171;
  }
  else
  {
    *((float *)v174 + 14) = *((float *)v174 + 15) + *((float *)v174 + 14);
    *((unsigned char *)v48 + 33) = 1;
    v48[5] = (char *)v37;
    v156((char *)v49, v157, v42);
    swift_retain();
    int64_t v52 = sub_24B6824B0();
    uint64_t v53 = v48;
    os_log_type_t v54 = sub_24B682B30();
    if (os_log_type_enabled(v52, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v180 = v57;
      *(_DWORD *)uint64_t v56 = 136380931;
      long long v179 = (char *)sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68C3A0, &v180);
      sub_24B682CD0();
      *(_WORD *)(v56 + 12) = 2050;
      long long v179 = v53[6];
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v52, v54, "MeshManager.%{private}s: Uniform point density is greater than the threshold for simplification (%{public}ld), triggering full mesh refinement in the next update.", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v57, -1, -1);
      uint64_t v58 = v56;
      uint64_t v42 = v166;
      MEMORY[0x24C5D6C00](v58, -1, -1);
    }
    else
    {

      swift_release();
    }
    v47((char *)v49, v42);
    unint64_t v51 = v171;
    uint64_t v48 = v53;
  }
  float v59 = *((float *)v48 + 17);
  float v60 = *((float *)v48 + 14);
  if (v60 < v59)
  {
    float v61 = sub_24B5FDDD8();
    BOOL v62 = sub_24B5FDDE8(v59, v61, v60);
    unint64_t v51 = v171;
    if (!v62)
    {
      *((unsigned char *)v48 + 32) = 1;
LABEL_82:
      v156(v51, v157, v42);
      swift_retain_n();
      BOOL v120 = sub_24B6824B0();
      os_log_type_t v121 = sub_24B682B30();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = swift_slowAlloc();
        uint64_t v123 = swift_slowAlloc();
        long long v179 = (char *)v123;
        *(_DWORD *)uint64_t v122 = 136380931;
        uint64_t v180 = sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68C3A0, (uint64_t *)&v179);
        sub_24B682CD0();
        *(_WORD *)(v122 + 12) = 2082;
        char v124 = *((unsigned char *)v48 + 33);
        char v125 = *((unsigned char *)v48 + 72);
        LOBYTE(v180) = *((unsigned char *)v48 + 32);
        BYTE1(v180) = v124;
        long long v181 = *(_OWORD *)(v48 + 5);
        long long v182 = *(_OWORD *)(v48 + 7);
        LOBYTE(v183) = v125;
        uint64_t v126 = sub_24B682820();
        uint64_t v180 = sub_24B5627B8(v126, v127, (uint64_t *)&v179);
        sub_24B682CD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v120, v121, "MeshManager.%{private}s: Mesh refinement parameters = %{public}s", (uint8_t *)v122, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v123, -1, -1);
        MEMORY[0x24C5D6C00](v122, -1, -1);

        unint64_t v128 = v51;
        uint64_t v129 = v166;
      }
      else
      {

        swift_release_n();
        unint64_t v128 = v51;
        uint64_t v129 = v42;
      }
      return v155(v128, v129);
    }
  }
  int v63 = *((unsigned __int8 *)v48 + 129);
  uint64_t v154 = (unsigned __int8 *)v48 + 129;
  if (v63 == 2) {
    goto LABEL_76;
  }
  float v64 = *((float *)v48 + 16);
  float v65 = sub_24B5FDDD8();
  BOOL v66 = sub_24B5FDDE8(v64, v65, v60);
  unint64_t v51 = v171;
  if (!v66 && v64 >= v60) {
    goto LABEL_76;
  }
  swift_beginAccess();
  if (*((unsigned char *)v48 + 129) == 2) {
    goto LABEL_100;
  }
  char v67 = sub_24B58BFC8();
  swift_endAccess();
  unint64_t v51 = v171;
  if ((v67 & 1) == 0)
  {
LABEL_76:
    if (*((unsigned char *)v48 + 32) == 1)
    {
      BOOL v115 = v161;
      v156(v161, v157, v42);
      uint64_t v116 = sub_24B6824B0();
      os_log_type_t v117 = sub_24B682B30();
      if (os_log_type_enabled(v116, v117))
      {
        unint64_t v118 = (uint8_t *)swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        uint64_t v180 = v119;
        *(_DWORD *)unint64_t v118 = 136380675;
        long long v179 = (char *)sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68C3A0, &v180);
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v116, v117, "MeshManager.%{private}s: Turned off mesh densification", v118, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v119, -1, -1);
        MEMORY[0x24C5D6C00](v118, -1, -1);
      }

      v155(v115, v42);
      unint64_t v51 = v171;
    }
    *((unsigned char *)v48 + 32) = 0;
    goto LABEL_82;
  }
  uint64_t v68 = *(void *)(v170 + 64);
  uint64_t v153 = (char *)(v170 + 64);
  uint64_t v69 = 1 << *(unsigned char *)(v170 + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  unint64_t v71 = v70 & v68;
  uint64_t v165 = v175 + 16;
  uint64_t v168 = (void (**)(char *, uint64_t, uint64_t))(v175 + 32);
  uint64_t v167 = (void (**)(uint64_t, uint64_t))(v175 + 8);
  uint64_t v161 = (char *)((unint64_t)(v69 + 63) >> 6);
  unint64_t v152 = v161 - 1;
  swift_bridgeObjectRetain();
  uint64_t v164 = 0;
  unint64_t v72 = (uint64_t *)&unk_2697CC438;
  uint64_t v73 = (uint64_t)v160;
  uint64_t v74 = (uint64_t)v159;
  if (!v71) {
    goto LABEL_28;
  }
LABEL_26:
  unint64_t v79 = __clz(__rbit64(v71));
  v71 &= v71 - 1;
  unint64_t v80 = v79 | (v164 << 6);
LABEL_27:
  uint64_t v81 = v170;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v175 + 16))(v73, *(void *)(v170 + 48) + *(void *)(v175 + 72) * v80, v178);
  uint64_t v82 = *(void *)(v81 + 56);
  uint64_t v83 = v82
      + *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8) + 72) * v80;
  uint64_t v84 = sub_24B562F04(v72);
  sub_24B57C210(v83, v73 + *(int *)(v84 + 48));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v73, 0, 1, v84);
  while (1)
  {
    sub_24B56CF38(v73, v74, &qword_2697CC430);
    uint64_t v89 = v72;
    uint64_t v90 = sub_24B562F04(v72);
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
    if (v92(v74, 1, v90) == 1) {
      break;
    }
    uint64_t v75 = v74 + *(int *)(v90 + 48);
    unint64_t v77 = v177;
    uint64_t v76 = v178;
    (*v168)(v177, v74, v178);
    swift_beginAccess();
    uint64_t v78 = v176;
    sub_24B5A0940(v176, v77);
    (*v167)(v78, v76);
    swift_endAccess();
    sub_24B59F0A0(v75, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    unint64_t v72 = v89;
    if (v71) {
      goto LABEL_26;
    }
LABEL_28:
    uint64_t v85 = v164 + 1;
    if (__OFADD__(v164, 1)) {
      goto LABEL_96;
    }
    if (v85 < (uint64_t)v161)
    {
      unint64_t v86 = *(void *)&v153[8 * v85];
      if (v86) {
        goto LABEL_31;
      }
      uint64_t v87 = v164 + 2;
      ++v164;
      if (v85 + 1 < (uint64_t)v161)
      {
        unint64_t v86 = *(void *)&v153[8 * v87];
        if (v86) {
          goto LABEL_34;
        }
        uint64_t v164 = v85 + 1;
        if (v85 + 2 < (uint64_t)v161)
        {
          unint64_t v86 = *(void *)&v153[8 * v85 + 16];
          if (v86)
          {
            v85 += 2;
            goto LABEL_31;
          }
          uint64_t v87 = v85 + 3;
          uint64_t v164 = v85 + 2;
          if (v85 + 3 < (uint64_t)v161)
          {
            unint64_t v86 = *(void *)&v153[8 * v87];
            if (v86)
            {
LABEL_34:
              uint64_t v85 = v87;
LABEL_31:
              unint64_t v71 = (v86 - 1) & v86;
              unint64_t v80 = __clz(__rbit64(v86)) + (v85 << 6);
              uint64_t v164 = v85;
              goto LABEL_27;
            }
            while (1)
            {
              uint64_t v85 = v87 + 1;
              if (__OFADD__(v87, 1)) {
                goto LABEL_98;
              }
              if (v85 >= (uint64_t)v161) {
                break;
              }
              unint64_t v86 = *(void *)&v153[8 * v85];
              ++v87;
              if (v86) {
                goto LABEL_31;
              }
            }
            uint64_t v164 = (uint64_t)v152;
          }
        }
      }
    }
    uint64_t v88 = sub_24B562F04(v72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v73, 1, 1, v88);
    unint64_t v71 = 0;
  }
  swift_release();
  uint64_t v48 = v174;
  uint64_t v93 = *v174;
  uint64_t v94 = *((void *)*v174 + 8);
  uint64_t v159 = *v174 + 64;
  uint64_t v95 = 1 << v93[32];
  uint64_t v96 = -1;
  if (v95 < 64) {
    uint64_t v96 = ~(-1 << v95);
  }
  unint64_t v97 = v96 & v94;
  uint64_t v170 = v91 + 56;
  float v160 = (char *)((unint64_t)(v95 + 63) >> 6);
  uint64_t v153 = v160 - 1;
  uint64_t v161 = v93;
  swift_bridgeObjectRetain();
  uint64_t v98 = 0;
  uint64_t v164 = (uint64_t)v92;
  uint64_t v99 = v178;
  if (!v97) {
    goto LABEL_52;
  }
LABEL_50:
  unint64_t v100 = __clz(__rbit64(v97));
  v97 &= v97 - 1;
  unint64_t v101 = v100 | (v98 << 6);
  uint64_t v102 = v173;
LABEL_51:
  uint64_t v103 = v161;
  (*(void (**)(char *, unint64_t, uint64_t))(v175 + 16))(v102, *((void *)v161 + 6) + *(void *)(v175 + 72) * v101, v178);
  uint64_t v104 = *((void *)v103 + 7);
  uint64_t v105 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  sub_24B57C210(v104 + *(void *)(*(void *)(v105 - 8) + 72) * v101, (uint64_t)&v102[*(int *)(v90 + 48)]);
  uint64_t v106 = 0;
  uint64_t v48 = v174;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_64:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v170)(v102, v106, 1, v90);
        uint64_t v109 = (uint64_t)v102;
        uint64_t v110 = v172;
        sub_24B56CF38(v109, v172, &qword_2697CC430);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v164)(v110, 1, v90) == 1)
        {
          swift_release();
          int v130 = *v154;
          if (v130 == 2) {
            goto LABEL_101;
          }
          *((float *)v48 + 17) = sub_24B57720C(v130 & 1);
          *((unsigned char *)v48 + 33) = 1;
          unint64_t v131 = v158;
          uint64_t v42 = v166;
          v156(v158, v157, v166);
          uint64_t v132 = v163;
          swift_retain_n();
          uint64_t v133 = sub_24B6824B0();
          os_log_type_t v134 = sub_24B682B30();
          BOOL v135 = os_log_type_enabled(v133, v134);
          uint64_t v136 = v155;
          if (v135)
          {
            uint64_t v137 = swift_slowAlloc();
            uint64_t v138 = swift_slowAlloc();
            uint64_t v180 = v138;
            *(_DWORD *)uint64_t v137 = 136380931;
            long long v179 = (char *)sub_24B5627B8(0xD00000000000001ELL, 0x800000024B68C3A0, &v180);
            sub_24B682CD0();
            *(_WORD *)(v137 + 12) = 2082;
            int v139 = *v154;
            if (v139 == 2) {
              goto LABEL_103;
            }
            LOBYTE(v179) = v139 & 1;
            uint64_t v140 = sub_24B682820();
            long long v179 = (char *)sub_24B5627B8(v140, v141, &v180);
            sub_24B682CD0();
            uint64_t v142 = v163;
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24B55E000, v133, v134, "MeshManager.%{private}s: Updated scan extent to: %{public}s in area mode.Now triggering scan extent update in scene reconstruction.", (uint8_t *)v137, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v138, -1, -1);
            uint64_t v143 = v137;
            uint64_t v144 = v142;
            MEMORY[0x24C5D6C00](v143, -1, -1);

            uint64_t v145 = v136(v131, v42);
            uint64_t v48 = v174;
          }
          else
          {

            swift_release_n();
            uint64_t v145 = v136(v131, v42);
            uint64_t v144 = v132;
          }
          uint64_t v146 = (*(uint64_t (**)(uint64_t))(*(void *)v144 + 160))(v145);
          unint64_t v51 = v171;
          if (v146)
          {
            int v148 = *v154;
            if (v148 == 2) {
              goto LABEL_102;
            }
            uint64_t v149 = v147;
            uint64_t v150 = v148 & 1;
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 16))(v150, ObjectType, v149);
            swift_unknownObjectRelease();
            unint64_t v51 = v171;
          }
          goto LABEL_82;
        }
        uint64_t v111 = v110 + *(int *)(v90 + 48);
        __int32 v112 = v177;
        (*v168)(v177, v110, v99);
        swift_beginAccess();
        uint64_t v113 = v176;
        sub_24B5A0940(v176, v112);
        (*v167)(v113, v99);
        swift_endAccess();
        sub_24B59F0A0(v111, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        if (v97) {
          goto LABEL_50;
        }
LABEL_52:
        uint64_t v107 = v98 + 1;
        uint64_t v102 = v173;
        if (__OFADD__(v98, 1)) {
          goto LABEL_97;
        }
        if (v107 >= (uint64_t)v160) {
          goto LABEL_63;
        }
        unint64_t v108 = *(void *)&v159[8 * v107];
        if (v108) {
          goto LABEL_55;
        }
        v98 += 2;
        if (v107 + 1 < (uint64_t)v160) {
          break;
        }
        unint64_t v97 = 0;
        uint64_t v106 = 1;
        uint64_t v98 = v107;
      }
      unint64_t v108 = *(void *)&v159[8 * v98];
      if (v108)
      {
        ++v107;
LABEL_55:
        unint64_t v97 = (v108 - 1) & v108;
        unint64_t v101 = __clz(__rbit64(v108)) + (v107 << 6);
        uint64_t v98 = v107;
        goto LABEL_51;
      }
      if (v107 + 2 < (uint64_t)v160) {
        break;
      }
LABEL_63:
      unint64_t v97 = 0;
      uint64_t v106 = 1;
    }
    unint64_t v108 = *(void *)&v159[8 * v107 + 16];
    if (v108)
    {
      v107 += 2;
      goto LABEL_55;
    }
    uint64_t v114 = v107 + 3;
    if (v107 + 3 < (uint64_t)v160) {
      break;
    }
    unint64_t v97 = 0;
    uint64_t v106 = 1;
    uint64_t v98 = v107 + 2;
  }
  unint64_t v108 = *(void *)&v159[8 * v114];
  if (v108)
  {
    v107 += 3;
    goto LABEL_55;
  }
  while (1)
  {
    uint64_t v107 = v114 + 1;
    if (__OFADD__(v114, 1)) {
      break;
    }
    if (v107 >= (uint64_t)v160)
    {
      unint64_t v97 = 0;
      uint64_t v106 = 1;
      uint64_t v98 = (uint64_t)v153;
      goto LABEL_64;
    }
    unint64_t v108 = *(void *)&v159[8 * v107];
    ++v114;
    if (v108) {
      goto LABEL_55;
    }
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24B595638(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6826D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[3];
  uint64_t v29 = a1[2];
  uint64_t v30 = v8;
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v13 = a1[7];
  uint64_t v27 = a1[6];
  uint64_t v28 = v11;
  char v14 = *((unsigned char *)a1 + 64);
  uint64_t v15 = *(void **)(v2 + 40);
  *uint64_t v7 = v15;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v16 = v15;
  LOBYTE(v15) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned char *)(v2 + 76) == 1)
  {
    float v18 = 0.0;
    if (v14) {
      goto LABEL_9;
    }
    uint64_t v31 = v30;
    uint64_t v32 = v9;
    uint64_t v33 = v29;
    uint64_t v34 = v10;
    uint64_t v35 = v28;
    uint64_t v36 = v12;
    uint64_t v37 = v27;
    uint64_t v38 = v13;
    *(__n64 *)v19.f32 = OCBoundingBox.extent.getter();
    goto LABEL_8;
  }
  uint64_t v20 = (float32x2_t *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  float v18 = 0.0;
  if ((v20[12].i8[0] & 1) == 0 && (v20[16].i8[0] & 1) == 0)
  {
    float32x2_t v21 = v20[14];
    float32x2_t v22 = v20[10];
    *(float32x2_t *)v19.f32 = vsub_f32(v21, v22);
    *(float32x2_t *)&v19.u32[2] = vsub_f32(v20[15], v20[11]);
LABEL_8:
    float32x4_t v23 = vmulq_f32(v19, v19);
    float v18 = sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v23, 2), vaddq_f32(v23, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v23.f32, 1))).f32[0]);
  }
LABEL_9:
  uint64_t v24 = v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  uint64_t result = swift_beginAccess();
  float v25 = *(float *)(v24 + 56);
  if (v25 <= 0.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  float v26 = v18 / v25;
  if ((~LODWORD(v26) & 0x7F800000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v26 <= -9.2234e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v26 < 9.2234e18) {
    return (uint64_t)v26;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24B5958B0()
{
  uint64_t v78 = sub_24B6824D0();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  unint64_t v77 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v83 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B562F04(&qword_2697CC430);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v74 - v9;
  uint64_t v11 = sub_24B6826D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (uint64_t *)((char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v0 + 40);
  *char v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    float v18 = (float32x4_t *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
    swift_beginAccess();
    uint64_t v19 = v18->i64[0];
    uint64_t v20 = *(void *)(v18->i64[0] + 64);
    uint64_t v79 = v18->i64[0] + 64;
    uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
    uint64_t v22 = -1;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    unint64_t v23 = v22 & v20;
    int64_t v82 = (unint64_t)(v21 + 63) >> 6;
    int64_t v75 = v82 - 1;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v84 = 0;
    while (!v23)
    {
      int64_t v35 = v84 + 1;
      if (__OFADD__(v84, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v35 < v82)
      {
        unint64_t v36 = *(void *)(v79 + 8 * v35);
        if (v36) {
          goto LABEL_13;
        }
        int64_t v37 = v84 + 2;
        ++v84;
        if (v35 + 1 < v82)
        {
          unint64_t v36 = *(void *)(v79 + 8 * v37);
          if (v36) {
            goto LABEL_16;
          }
          int64_t v84 = v35 + 1;
          if (v35 + 2 < v82)
          {
            unint64_t v36 = *(void *)(v79 + 8 * (v35 + 2));
            if (v36)
            {
              v35 += 2;
              goto LABEL_13;
            }
            int64_t v37 = v35 + 3;
            int64_t v84 = v35 + 2;
            if (v35 + 3 < v82)
            {
              unint64_t v36 = *(void *)(v79 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  int64_t v35 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    goto LABEL_40;
                  }
                  if (v35 >= v82)
                  {
                    int64_t v84 = v75;
                    goto LABEL_27;
                  }
                  unint64_t v36 = *(void *)(v79 + 8 * v35);
                  ++v37;
                  if (v36) {
                    goto LABEL_13;
                  }
                }
              }
LABEL_16:
              int64_t v35 = v37;
LABEL_13:
              unint64_t v23 = (v36 - 1) & v36;
              unint64_t v30 = __clz(__rbit64(v36)) + (v35 << 6);
              int64_t v84 = v35;
LABEL_9:
              uint64_t v31 = *(void *)(v19 + 48);
              uint64_t v32 = sub_24B682410();
              (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v8, v31 + *(void *)(*(void *)(v32 - 8) + 72) * v30, v32);
              uint64_t v33 = *(void *)(v19 + 56) + *(void *)(v83 + 72) * v30;
              uint64_t v34 = sub_24B562F04(&qword_2697CC438);
              sub_24B57C210(v33, (uint64_t)&v8[*(int *)(v34 + 48)]);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v8, 0, 1, v34);
              goto LABEL_28;
            }
          }
        }
      }
LABEL_27:
      uint64_t v38 = sub_24B562F04(&qword_2697CC438);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 1, 1, v38);
      unint64_t v23 = 0;
LABEL_28:
      sub_24B56CF38((uint64_t)v8, (uint64_t)v10, &qword_2697CC430);
      uint64_t v39 = sub_24B562F04(&qword_2697CC438);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v10, 1, v39) == 1)
      {
        uint64_t result = swift_release();
        if ((v18[6].i8[0] & 1) == 0 && (v18[8].i8[0] & 1) == 0)
        {
          float32x2_t v54 = *(float32x2_t *)v18[5].f32;
          uint64_t v53 = v18[5].i64[1];
          float32x2_t v56 = *(float32x2_t *)v18[7].f32;
          unint64_t v55 = v18[7].u64[1];
          uint64_t v57 = sub_24B57CCC8();
          uint64_t v58 = v76;
          float v59 = v77;
          uint64_t v60 = v78;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v77, v57, v78);
          float v61 = sub_24B6824B0();
          os_log_type_t v62 = sub_24B682B30();
          __int32 v63 = v62;
          if (os_log_type_enabled(v61, v62))
          {
            *(float32x2_t *)v64.f32 = v54;
            v64.i64[1] = v53;
            *(float32x2_t *)v65.f32 = vsub_f32(v56, v54);
            v65.i64[1] = vsubq_f32((float32x4_t)vdupq_n_s64(v55), v64).u32[2];
            float32x4_t v89 = v65;
            uint64_t v66 = swift_slowAlloc();
            v92.i64[0] = swift_slowAlloc();
            v93.i64[0] = v92.i64[0];
            *(_DWORD *)uint64_t v66 = 136381443;
            v91.i32[0] = v63;
            v94.i64[0] = sub_24B5627B8(0xD000000000000013, 0x800000024B68C380, (uint64_t *)&v93);
            sub_24B682CD0();
            *(_WORD *)(v66 + 12) = 2082;
            *(float32x2_t *)v90.f32 = v56;
            float32x4_t v94 = v89;
            sub_24B562F04((uint64_t *)&unk_2697CC440);
            v89.i64[0] = v55;
            sub_24B5678F4((unint64_t *)&qword_2697CC0F0, (uint64_t *)&unk_2697CC440);
            uint64_t v67 = sub_24B682FD0();
            v94.i64[0] = sub_24B5627B8(v67, v68, (uint64_t *)&v93);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 22) = 2082;
            *(float32x2_t *)v94.f32 = v54;
            v94.i64[1] = v53;
            uint64_t v69 = sub_24B682FD0();
            v94.i64[0] = sub_24B5627B8(v69, v70, (uint64_t *)&v93);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v66 + 32) = 2082;
            v94.i64[0] = v90.i64[0];
            v94.i64[1] = v89.i64[0];
            uint64_t v71 = sub_24B682FD0();
            v94.i64[0] = sub_24B5627B8(v71, v72, (uint64_t *)&v93);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24B55E000, v61, (os_log_type_t)v91.i8[0], "MeshManager.%{private}s: Updated mesh extents: extent = %{public}s\nminCorner = %{public}s maxCorner = %{public}s", (uint8_t *)v66, 0x2Au);
            uint64_t v73 = v92.i64[0];
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v73, -1, -1);
            MEMORY[0x24C5D6C00](v66, -1, -1);

            return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v77, v78);
          }
          else
          {

            return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v59, v60);
          }
        }
        return result;
      }
      sub_24B59EFA4((uint64_t)&v10[*(int *)(v39 + 48)], (uint64_t)v4);
      char v40 = (float32x4_t *)&v4[v2[9]];
      float32x4_t v41 = v40[1];
      float32x4_t v88 = *v40;
      float32x4_t v89 = v41;
      float32x4_t v42 = v40[2];
      float32x4_t v90 = v40[3];
      float32x4_t v91 = v42;
      float32x4_t v87 = *(float32x4_t *)&v4[v2[11]];
      uint64_t v43 = *(uint64_t *)((char *)v87.i64 + 4);
      float32x4_t v93 = vaddq_f32(v90, vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32(v88, v87.f32[0]), v41, *(float32x2_t *)v87.f32, 1), v42, v87, 2));
      uint64_t v44 = sub_24B562F04(&qword_2697CC450);
      sub_24B5FDBE8(v44);
      float32x4_t v45 = vaddq_f32(v90, vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(v88, v87.f32[0] + *(float *)&v4[v2[12]]), v89, *(float *)&v43 + *(float *)&v4[v2[12] + 4]), v91, *((float *)&v43 + 1) + *(float *)&v4[v2[12] + 8]));
      float32x4_t v92 = v94;
      float32x4_t v93 = v45;
      sub_24B5FDBE8(v44);
      float32x4_t v46 = v94;
      if (v18[6].i8[0] & 1) != 0 || (v18[8].i8[0])
      {
        v46.i32[3] = 0;
        float32x4_t v24 = v92;
        v24.i32[3] = 0;
        float32x4_t v25 = vminnmq_f32(v46, v24);
        v25.i32[3] = v85.i32[3];
        v18[5] = v25;
        v18[6].i8[0] = 0;
        float32x4_t v26 = vmaxnmq_f32(v46, v24);
        v26.i32[3] = v86;
        float32x4_t v85 = v25;
        float32x4_t v92 = v26;
        uint64_t v27 = (float32x4_t *)&v96;
      }
      else
      {
        v46.i32[3] = 0;
        float32x4_t v47 = v92;
        v47.i32[3] = 0;
        float32x4_t v48 = vminnmq_f32(v46, v47);
        v48.i32[3] = 0;
        float32x4_t v49 = v18[5];
        v49.i32[3] = 0;
        float32x4_t v50 = vminnmq_f32(v48, v49);
        v50.i32[3] = v80.i32[3];
        float32x4_t v51 = vmaxnmq_f32(v46, v47);
        v51.i32[3] = 0;
        v18[5] = v50;
        float32x4_t v52 = v18[7];
        v52.i32[3] = 0;
        v18[6].i8[0] = 0;
        float32x4_t v26 = vmaxnmq_f32(v51, v52);
        v26.i32[3] = v81;
        float32x4_t v80 = v50;
        float32x4_t v92 = v26;
        uint64_t v27 = (float32x4_t *)&v95;
      }
      v27[-16] = v26;
      sub_24B59F0A0((uint64_t)v4, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v18[7] = v92;
      v18[8].i8[0] = 0;
      uint64_t v28 = sub_24B682410();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v10, v28);
    }
    unint64_t v29 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    unint64_t v30 = v29 | (v84 << 6);
    goto LABEL_9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_24B596364(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v113 = *(void *)(v111 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v111);
  uint64_t v9 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v110 = (uint64_t)v90 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v90 - v12;
  uint64_t v14 = sub_24B6824D0();
  uint64_t v106 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v99 = (char *)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v98 = (char *)v90 - v18;
  MEMORY[0x270FA5388](v17);
  v109.i64[0] = (uint64_t)v90 - v19;
  uint64_t v20 = sub_24B6826D0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (void *)((char *)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = *a1;
  *(void *)&long long v107 = a1[2];
  uint64_t v94 = a1[3];
  *(void *)&long long v97 = a1[4];
  uint64_t v93 = a1[5];
  *(void *)&long long v96 = a1[6];
  uint64_t v92 = a1[7];
  *(void *)&long long v95 = a1[8];
  uint64_t v91 = a1[9];
  LODWORD(v108) = *((unsigned __int8 *)a1 + 80);
  uint64_t v112 = v2;
  float32x4_t v25 = *(void **)(v2 + 40);
  *unint64_t v23 = v25;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F8F0E0], v20);
  id v26 = v25;
  LOBYTE(v25) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  if ((v25 & 1) == 0) {
    goto LABEL_73;
  }
  uint64_t v28 = sub_24B57CCC8();
  uint64_t v29 = v106;
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
  uint64_t v104 = v28;
  uint64_t v105 = v106 + 16;
  uint64_t v103 = v30;
  ((void (*)(uint64_t))v30)(v109.i64[0]);
  uint64_t v31 = sub_24B6824B0();
  os_log_type_t v32 = sub_24B682B30();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v101 = v14;
  if (v33)
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v116 = swift_slowAlloc();
    uint64_t v35 = v116;
    *(_DWORD *)uint64_t v34 = 136380675;
    uint64_t v102 = (void (*)(uint64_t, uint64_t))(v34 + 4);
    v114[0] = sub_24B5627B8(0xD000000000000018, 0x800000024B68C360, (uint64_t *)&v116);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v31, v32, "MeshManager.%{private}s: Refining all mesh anchors...", v34, 0xCu);
    swift_arrayDestroy();
    uint64_t v36 = v35;
    uint64_t v14 = v101;
    MEMORY[0x24C5D6C00](v36, -1, -1);
    MEMORY[0x24C5D6C00](v34, -1, -1);
  }

  uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v102(v109.i64[0], v14);
  uint64_t v37 = v112;
  uint64_t v38 = (uint64_t *)(v112 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  uint64_t result = swift_beginAccess();
  unint64_t v100 = v38;
  if (!*(void *)(v38[1] + 16))
  {
    char v39 = v108;
    if (v108)
    {
      char v40 = 0;
      long long v41 = 0uLL;
      long long v42 = 0uLL;
      long long v43 = 0uLL;
      long long v44 = 0uLL;
    }
    else
    {
      v45.i64[0] = v107;
      v45.i64[1] = v94;
      float32x4_t v109 = v45;
      v45.i64[0] = v97;
      v45.i64[1] = v93;
      v90[2] = v45;
      v45.i64[0] = v96;
      v45.i64[1] = v92;
      v90[1] = v45;
      v45.i64[0] = v95;
      v45.i64[1] = v91;
      v90[0] = v45;
      v114[0] = v107;
      v114[1] = v94;
      v114[2] = v97;
      v114[3] = v93;
      v114[4] = v96;
      v114[5] = v92;
      v114[6] = v95;
      v114[7] = v91;
      OCBoundingBox.scale(_:)(&v116, *(float32x4_t *)(v37 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
      long long v107 = v116;
      long long v97 = v117;
      long long v96 = v118;
      long long v95 = v119;
      type metadata accessor for MeshUtils.AABB();
      long long v116 = v107;
      long long v117 = v97;
      long long v118 = v96;
      long long v119 = v95;
      char v40 = sub_24B579A94();
      *(double *)&long long v41 = sub_24B5F8CC8(v109);
    }
    long long v116 = v41;
    long long v117 = v42;
    long long v118 = v43;
    long long v119 = v44;
    char v120 = v39;
    uint64_t v46 = v24 + 64;
    uint64_t v47 = 1 << *(unsigned char *)(v24 + 32);
    uint64_t v48 = -1;
    if (v47 < 64) {
      uint64_t v48 = ~(-1 << v47);
    }
    unint64_t v49 = v48 & *(void *)(v24 + 64);
    int64_t v50 = (unint64_t)(v47 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v51 = 0;
    int64_t v52 = 0;
    while (1)
    {
      *(void *)&long long v107 = v51;
      do
      {
        if (v49)
        {
          unint64_t v53 = __clz(__rbit64(v49));
          v49 &= v49 - 1;
          unint64_t v54 = v53 | (v52 << 6);
        }
        else
        {
          int64_t v56 = v52 + 1;
          if (__OFADD__(v52, 1))
          {
            __break(1u);
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
          if (v56 >= v50) {
            goto LABEL_32;
          }
          unint64_t v57 = *(void *)(v46 + 8 * v56);
          ++v52;
          if (!v57)
          {
            int64_t v52 = v56 + 1;
            if (v56 + 1 >= v50) {
              goto LABEL_32;
            }
            unint64_t v57 = *(void *)(v46 + 8 * v52);
            if (!v57)
            {
              int64_t v52 = v56 + 2;
              if (v56 + 2 >= v50) {
                goto LABEL_32;
              }
              unint64_t v57 = *(void *)(v46 + 8 * v52);
              if (!v57)
              {
                int64_t v52 = v56 + 3;
                if (v56 + 3 >= v50) {
                  goto LABEL_32;
                }
                unint64_t v57 = *(void *)(v46 + 8 * v52);
                if (!v57)
                {
                  int64_t v58 = v56 + 4;
                  if (v58 >= v50)
                  {
LABEL_32:
                    v109.i64[0] = (uint64_t)v40;
                    swift_release();
                    uint64_t v59 = *v100;
                    uint64_t v60 = *(void *)(*v100 + 64);
                    uint64_t v108 = *v100 + 64;
                    uint64_t v61 = 1 << *(unsigned char *)(v59 + 32);
                    uint64_t v62 = -1;
                    if (v61 < 64) {
                      uint64_t v62 = ~(-1 << v61);
                    }
                    unint64_t v63 = v62 & v60;
                    int64_t v64 = (unint64_t)(v61 + 63) >> 6;
                    float32x4_t v65 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
                    uint64_t result = swift_bridgeObjectRetain();
                    int64_t v66 = 0;
                    while (1)
                    {
                      if (v63)
                      {
                        unint64_t v68 = __clz(__rbit64(v63));
                        v63 &= v63 - 1;
                        unint64_t v69 = v68 | (v66 << 6);
                      }
                      else
                      {
                        int64_t v70 = v66 + 1;
                        if (__OFADD__(v66, 1)) {
                          goto LABEL_69;
                        }
                        if (v70 >= v64) {
                          goto LABEL_60;
                        }
                        unint64_t v71 = *(void *)(v108 + 8 * v70);
                        ++v66;
                        if (!v71)
                        {
                          int64_t v66 = v70 + 1;
                          if (v70 + 1 >= v64) {
                            goto LABEL_60;
                          }
                          unint64_t v71 = *(void *)(v108 + 8 * v66);
                          if (!v71)
                          {
                            int64_t v66 = v70 + 2;
                            if (v70 + 2 >= v64) {
                              goto LABEL_60;
                            }
                            unint64_t v71 = *(void *)(v108 + 8 * v66);
                            if (!v71)
                            {
                              int64_t v66 = v70 + 3;
                              if (v70 + 3 >= v64) {
                                goto LABEL_60;
                              }
                              unint64_t v71 = *(void *)(v108 + 8 * v66);
                              if (!v71)
                              {
                                int64_t v72 = v70 + 4;
                                if (v72 >= v64) {
                                  goto LABEL_60;
                                }
                                unint64_t v71 = *(void *)(v108 + 8 * v72);
                                if (!v71)
                                {
                                  while (1)
                                  {
                                    int64_t v66 = v72 + 1;
                                    if (__OFADD__(v72, 1)) {
                                      break;
                                    }
                                    if (v66 >= v64) {
                                      goto LABEL_60;
                                    }
                                    unint64_t v71 = *(void *)(v108 + 8 * v66);
                                    ++v72;
                                    if (v71) {
                                      goto LABEL_53;
                                    }
                                  }
LABEL_71:
                                  __break(1u);
LABEL_72:
                                  __break(1u);
LABEL_73:
                                  __break(1u);
                                  goto LABEL_74;
                                }
                                int64_t v66 = v72;
                              }
                            }
                          }
                        }
LABEL_53:
                        unint64_t v63 = (v71 - 1) & v71;
                        unint64_t v69 = __clz(__rbit64(v71)) + (v66 << 6);
                      }
                      uint64_t v73 = *(void *)(v113 + 72);
                      uint64_t v74 = v110;
                      sub_24B57C210(*(void *)(v59 + 56) + v73 * v69, v110);
                      sub_24B59EFA4(v74, (uint64_t)v9);
                      if (*(void *)(v24 + 16) && (unint64_t v75 = sub_24B59F008((uint64_t)v9), (v76 & 1) != 0))
                      {
                        sub_24B57C210(*(void *)(v24 + 56) + v75 * v73, (uint64_t)v6);
                        (*v65)(v6, 0, 1, v111);
                        sub_24B5632A8((uint64_t)v6, &qword_2697CC3F8);
                        uint64_t result = sub_24B59F0A0((uint64_t)v9, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
                      }
                      else
                      {
                        (*v65)(v6, 1, 1, v111);
                        sub_24B5632A8((uint64_t)v6, &qword_2697CC3F8);
                        char v67 = sub_24B597CBC((uint64_t)v9, v109.i64[0], (uint64_t)&v116);
                        uint64_t result = sub_24B59F0A0((uint64_t)v9, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
                        if (v67)
                        {
                          BOOL v77 = __OFADD__((void)v107, 1);
                          *(void *)&long long v107 = v107 + 1;
                          if (v77)
                          {
                            __break(1u);
LABEL_60:
                            swift_release();
                            uint64_t v78 = v101;
                            uint64_t v79 = v99;
                            if (v109.i64[0])
                            {
                              float32x4_t v80 = v98;
                              v103(v98, v104, v101);
                              swift_retain();
                              __int32 v81 = sub_24B6824B0();
                              os_log_type_t v82 = sub_24B682B30();
                              if (os_log_type_enabled(v81, v82))
                              {
                                uint64_t v83 = swift_slowAlloc();
                                uint64_t v84 = swift_slowAlloc();
                                v114[0] = v84;
                                *(_DWORD *)uint64_t v83 = 136381187;
                                uint64_t v115 = sub_24B5627B8(0xD000000000000018, 0x800000024B68C360, v114);
                                sub_24B682CD0();
                                *(_WORD *)(v83 + 12) = 2050;
                                uint64_t v115 = v107;
                                sub_24B682CD0();
                                *(_WORD *)(v83 + 22) = 2050;
                                uint64_t v115 = *(void *)(*v100 + 16);
                                uint64_t v79 = v99;
                                sub_24B682CD0();
                                swift_release();
                                _os_log_impl(&dword_24B55E000, v81, v82, "MeshManager.%{private}s: %{public}ld/%{public}ld all mesh anchors intersect with bounding box.", (uint8_t *)v83, 0x20u);
                                swift_arrayDestroy();
                                MEMORY[0x24C5D6C00](v84, -1, -1);
                                MEMORY[0x24C5D6C00](v83, -1, -1);

                                float32x4_t v85 = v98;
                              }
                              else
                              {

                                swift_release();
                                float32x4_t v85 = v80;
                              }
                              v102((uint64_t)v85, v78);
                            }
                            v103(v79, v104, v78);
                            __int32 v86 = sub_24B6824B0();
                            os_log_type_t v87 = sub_24B682B30();
                            if (os_log_type_enabled(v86, v87))
                            {
                              float32x4_t v88 = (uint8_t *)swift_slowAlloc();
                              uint64_t v89 = swift_slowAlloc();
                              v114[0] = v89;
                              *(_DWORD *)float32x4_t v88 = 136380675;
                              uint64_t v115 = sub_24B5627B8(0xD000000000000018, 0x800000024B68C360, v114);
                              sub_24B682CD0();
                              _os_log_impl(&dword_24B55E000, v86, v87, "MeshManager.%{private}s: Finished refining all mesh anchors.", v88, 0xCu);
                              swift_arrayDestroy();
                              MEMORY[0x24C5D6C00](v89, -1, -1);
                              MEMORY[0x24C5D6C00](v88, -1, -1);
                            }

                            swift_release();
                            v102((uint64_t)v79, v78);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                  unint64_t v57 = *(void *)(v46 + 8 * v58);
                  if (!v57)
                  {
                    while (1)
                    {
                      int64_t v52 = v58 + 1;
                      if (__OFADD__(v58, 1)) {
                        break;
                      }
                      if (v52 >= v50) {
                        goto LABEL_32;
                      }
                      unint64_t v57 = *(void *)(v46 + 8 * v52);
                      ++v58;
                      if (v57) {
                        goto LABEL_31;
                      }
                    }
LABEL_70:
                    __break(1u);
                    goto LABEL_71;
                  }
                  int64_t v52 = v58;
                }
              }
            }
          }
LABEL_31:
          unint64_t v49 = (v57 - 1) & v57;
          unint64_t v54 = __clz(__rbit64(v57)) + (v52 << 6);
        }
        sub_24B57C210(*(void *)(v24 + 56) + *(void *)(v113 + 72) * v54, (uint64_t)v13);
        char v55 = sub_24B597CBC((uint64_t)v13, (uint64_t)v40, (uint64_t)&v116);
        uint64_t result = sub_24B59F0A0((uint64_t)v13, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      }
      while ((v55 & 1) == 0);
      uint64_t v51 = v107 + 1;
      if (__OFADD__((void)v107, 1)) {
        goto LABEL_72;
      }
    }
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_24B5971A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  BOOL v77 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v75 = (char *)v66 - v12;
  MEMORY[0x270FA5388](v11);
  v84.i64[0] = (uint64_t)v66 - v13;
  uint64_t v14 = sub_24B6826D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (void *)((char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void *)a1;
  uint64_t v85 = *(void *)(a1 + 8);
  *(void *)&long long v74 = *(void *)(a1 + 16);
  uint64_t v70 = *(void *)(a1 + 24);
  *(void *)&long long v73 = *(void *)(a1 + 32);
  uint64_t v69 = *(void *)(a1 + 40);
  *(void *)&long long v72 = *(void *)(a1 + 48);
  uint64_t v68 = *(void *)(a1 + 56);
  *(void *)&long long v71 = *(void *)(a1 + 64);
  uint64_t v67 = *(void *)(a1 + 72);
  int v78 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v19 = *(void **)(v1 + 40);
  *uint64_t v17 = v19;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v20 = v19;
  LOBYTE(a1) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((a1 & 1) == 0)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    return result;
  }
  uint64_t v22 = sub_24B57CCC8();
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v79 = v22;
  uint64_t v80 = v8 + 16;
  os_log_type_t v82 = v23;
  ((void (*)(uint64_t))v23)(v84.i64[0]);
  uint64_t v24 = sub_24B6824B0();
  os_log_type_t v25 = sub_24B682B30();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v83 = v7;
  if (v26)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(void *)&long long v89 = v28;
    *(_DWORD *)uint64_t v27 = 136380675;
    v87[0] = sub_24B5627B8(0xD000000000000020, 0x800000024B68C330, (uint64_t *)&v89);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v24, v25, "MeshManager.%{private}s: Refining updated mesh anchors...", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v28, -1, -1);
    MEMORY[0x24C5D6C00](v27, -1, -1);

    uint64_t v29 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v30 = v84.i64[0];
    uint64_t v31 = v83;
  }
  else
  {

    uint64_t v29 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v30 = v84.i64[0];
    uint64_t v31 = v7;
  }
  __int32 v81 = v29;
  v29((char *)v30, v31);
  uint64_t v32 = v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v32 + 8) + 16)) {
    goto LABEL_45;
  }
  char v33 = v78;
  uint64_t v76 = v8;
  if (v78)
  {
    uint64_t v34 = 0;
    long long v35 = 0uLL;
    long long v36 = 0uLL;
    long long v37 = 0uLL;
    long long v38 = 0uLL;
  }
  else
  {
    v39.i64[0] = v74;
    v39.i64[1] = v70;
    float32x4_t v84 = v39;
    v39.i64[0] = v73;
    v39.i64[1] = v69;
    v66[2] = v39;
    v39.i64[0] = v72;
    v39.i64[1] = v68;
    v66[1] = v39;
    v39.i64[0] = v71;
    v39.i64[1] = v67;
    v66[0] = v39;
    v87[0] = v74;
    v87[1] = v70;
    v87[2] = v73;
    v87[3] = v69;
    v87[4] = v72;
    v87[5] = v68;
    v87[6] = v71;
    v87[7] = v67;
    OCBoundingBox.scale(_:)(&v89, *(float32x4_t *)(v2 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
    long long v74 = v89;
    long long v73 = v90;
    long long v72 = v91;
    long long v71 = v92;
    type metadata accessor for MeshUtils.AABB();
    long long v89 = v74;
    long long v90 = v73;
    long long v91 = v72;
    long long v92 = v71;
    uint64_t v34 = sub_24B579A94();
    *(double *)&long long v35 = sub_24B5F8CC8(v84);
  }
  long long v89 = v35;
  long long v90 = v36;
  long long v91 = v37;
  long long v92 = v38;
  char v93 = v33;
  uint64_t v40 = v18 + 64;
  uint64_t v41 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v42 = -1;
  if (v41 < 64) {
    uint64_t v42 = ~(-1 << v41);
  }
  unint64_t v43 = v42 & *(void *)(v18 + 64);
  int64_t v44 = (unint64_t)(v41 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v45 = 0;
  int64_t v46 = 0;
LABEL_13:
  v84.i64[0] = v45;
  while (v43)
  {
    unint64_t v47 = __clz(__rbit64(v43));
    v43 &= v43 - 1;
    unint64_t v48 = v47 | (v46 << 6);
LABEL_15:
    sub_24B57C210(*(void *)(v18 + 56) + *(void *)(v86 + 72) * v48, (uint64_t)v6);
    char v49 = sub_24B597CBC((uint64_t)v6, (uint64_t)v34, (uint64_t)&v89);
    uint64_t result = sub_24B59F0A0((uint64_t)v6, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if (v49)
    {
      uint64_t v45 = v84.i64[0] + 1;
      if (!__OFADD__(v84.i64[0], 1)) {
        goto LABEL_13;
      }
      goto LABEL_43;
    }
  }
  int64_t v50 = v46 + 1;
  if (__OFADD__(v46, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v50 >= v44) {
    goto LABEL_33;
  }
  unint64_t v51 = *(void *)(v40 + 8 * v50);
  ++v46;
  if (v51) {
    goto LABEL_32;
  }
  int64_t v46 = v50 + 1;
  if (v50 + 1 >= v44) {
    goto LABEL_33;
  }
  unint64_t v51 = *(void *)(v40 + 8 * v46);
  if (v51) {
    goto LABEL_32;
  }
  int64_t v46 = v50 + 2;
  if (v50 + 2 >= v44) {
    goto LABEL_33;
  }
  unint64_t v51 = *(void *)(v40 + 8 * v46);
  if (v51) {
    goto LABEL_32;
  }
  int64_t v46 = v50 + 3;
  if (v50 + 3 >= v44) {
    goto LABEL_33;
  }
  unint64_t v51 = *(void *)(v40 + 8 * v46);
  if (v51)
  {
LABEL_32:
    unint64_t v43 = (v51 - 1) & v51;
    unint64_t v48 = __clz(__rbit64(v51)) + (v46 << 6);
    goto LABEL_15;
  }
  int64_t v52 = v50 + 4;
  if (v52 < v44)
  {
    unint64_t v51 = *(void *)(v40 + 8 * v52);
    if (!v51)
    {
      while (1)
      {
        int64_t v46 = v52 + 1;
        if (__OFADD__(v52, 1)) {
          break;
        }
        if (v46 >= v44) {
          goto LABEL_33;
        }
        unint64_t v51 = *(void *)(v40 + 8 * v46);
        ++v52;
        if (v51) {
          goto LABEL_32;
        }
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    int64_t v46 = v52;
    goto LABEL_32;
  }
LABEL_33:
  swift_release();
  uint64_t v53 = v83;
  uint64_t v54 = v79;
  if (v34)
  {
    char v55 = v75;
    v82(v75, v79, v83);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v56 = sub_24B6824B0();
    os_log_type_t v57 = sub_24B682B30();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v87[0] = v59;
      *(_DWORD *)uint64_t v58 = 136381187;
      uint64_t v88 = sub_24B5627B8(0xD000000000000020, 0x800000024B68C330, v87);
      sub_24B682CD0();
      *(_WORD *)(v58 + 12) = 2050;
      uint64_t v88 = v84.i64[0];
      sub_24B682CD0();
      *(_WORD *)(v58 + 22) = 2050;
      uint64_t v88 = *(void *)(v18 + 16);
      uint64_t v53 = v83;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v56, v57, "MeshManager.%{private}s: %{public}ld/%{public}ld updated mesh anchors intersect with bounding box.", (uint8_t *)v58, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v59, -1, -1);
      uint64_t v60 = v58;
      uint64_t v54 = v79;
      MEMORY[0x24C5D6C00](v60, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v81(v55, v53);
  }
  uint64_t v61 = v77;
  v82(v77, v54, v53);
  uint64_t v62 = sub_24B6824B0();
  os_log_type_t v63 = sub_24B682B30();
  if (os_log_type_enabled(v62, v63))
  {
    int64_t v64 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    v87[0] = v65;
    *(_DWORD *)int64_t v64 = 136380675;
    uint64_t v88 = sub_24B5627B8(0xD000000000000020, 0x800000024B68C330, v87);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v62, v63, "MeshManager.%{private}s: Finished refining updated mesh anchors.", v64, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v65, -1, -1);
    MEMORY[0x24C5D6C00](v64, -1, -1);
  }

  swift_release();
  v81(v61, v53);
  return 1;
}

uint64_t sub_24B597CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v100 = sub_24B682410();
  uint64_t v98 = *(void *)(v100 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v100);
  long long v97 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v96 = (char *)v88 - v10;
  uint64_t v11 = sub_24B6824D0();
  uint64_t v101 = *(void *)(v11 - 8);
  uint64_t v102 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v94 = (char *)v88 - v15;
  uint64_t v16 = sub_24B562F04(&qword_2697CC3F8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v95 = (uint64_t)v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v88 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)v88 - v23;
  MEMORY[0x270FA5388](v22);
  BOOL v26 = (char *)v88 - v25;
  uint64_t v27 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v99 = (uint64_t)v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  char v93 = (char *)v88 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v103 = (uint64_t)v88 - v33;
  if (a2 && (sub_24B56CF38(a3, (uint64_t)&v106, &qword_2697CC9A0), (v107 & 1) == 0))
  {
    simd_float4x4 v108 = __invert_f4(v106);
    float32x4_t v39 = (float32x2_t *)(a1 + *(int *)(v27 + 36));
    float32x4_t v40 = *(float32x4_t *)v39[2].f32;
    float32x4_t v41 = *(float32x4_t *)v39[4].f32;
    float32x4_t v42 = *(float32x4_t *)v39[6].f32;
    float32x4_t v92 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v108.columns[0], COERCE_FLOAT(*(_OWORD *)v39->f32)), (float32x4_t)v108.columns[1], *v39, 1), (float32x4_t)v108.columns[2], *(float32x4_t *)v39->f32, 2), (float32x4_t)v108.columns[3], *(float32x4_t *)v39->f32, 3);
    float32x4_t v91 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v108.columns[0], v40.f32[0]), (float32x4_t)v108.columns[1], *(float32x2_t *)v40.f32, 1), (float32x4_t)v108.columns[2], v40, 2), (float32x4_t)v108.columns[3], v40, 3);
    float32x4_t v90 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v108.columns[0], v41.f32[0]), (float32x4_t)v108.columns[1], *(float32x2_t *)v41.f32, 1), (float32x4_t)v108.columns[2], v41, 2), (float32x4_t)v108.columns[3], v41, 3);
    float32x4_t v89 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v108.columns[0], v42.f32[0]), (float32x4_t)v108.columns[1], *(float32x2_t *)v42.f32, 1), (float32x4_t)v108.columns[2], v42, 2), (float32x4_t)v108.columns[3], v42, 3);
    swift_retain();
    sub_24B579B20(a1, v92, v91, v90, v89);
    float v44 = v43;
    swift_release();
    uint64_t v45 = v103;
    sub_24B57C210(a1, v103);
    if (v44 <= 0.0)
    {
      sub_24B59F0A0(v45, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      return 2;
    }
  }
  else
  {
    sub_24B57C210(a1, v103);
  }
  v92.i64[0] = (uint64_t)v14;
  type metadata accessor for Util.Timer(0);
  uint64_t v34 = sub_24B5FDB24();
  (*(void (**)(void))(*(void *)v34 + 144))();
  long long v35 = (unsigned char *)(v4 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  if (v35[32] == 1 && *(void *)(a1 + *(int *)(v27 + 32)))
  {
    sub_24B598990(a1, (uint64_t)v26);
    uint64_t v36 = v103;
    sub_24B59F0A0(v103, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      swift_release();
      uint64_t v37 = (uint64_t)v26;
LABEL_10:
      sub_24B5632A8(v37, &qword_2697CC3F8);
      return 0;
    }
  }
  else
  {
    sub_24B59AFD8(a1, (uint64_t)v24);
    uint64_t v36 = v103;
    sub_24B59F0A0(v103, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27) == 1)
    {
      swift_release();
      uint64_t v37 = (uint64_t)v24;
      goto LABEL_10;
    }
    BOOL v26 = v24;
  }
  sub_24B59EFA4((uint64_t)v26, v36);
  uint64_t v46 = *(void *)v35;
  uint64_t v47 = *(void *)(*(void *)v35 + 16);
  uint64_t v48 = v102;
  char v49 = v94;
  uint64_t v50 = (uint64_t)v93;
  v90.i64[0] = (uint64_t)v35;
  v89.i64[0] = v34;
  if (v47 && (unint64_t v51 = sub_24B59F008(a1), (v52 & 1) != 0))
  {
    uint64_t v53 = a1;
    sub_24B57C210(*(void *)(v46 + 56) + *(void *)(v28 + 72) * v51, (uint64_t)v21);
    uint64_t v54 = v27;
    v91.i64[0] = *(void *)(v28 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v91.i64[0])(v21, 0, 1, v27);
    sub_24B5632A8((uint64_t)v21, &qword_2697CC3F8);
    uint64_t v55 = v103;
  }
  else
  {
    int64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v88[1] = (v28 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v91.i64[0] = (uint64_t)v56;
    v56(v21, 1, 1, v27);
    sub_24B5632A8((uint64_t)v21, &qword_2697CC3F8);
    uint64_t v57 = sub_24B57CCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v49, v57, v48);
    sub_24B57C210(a1, v50);
    uint64_t v58 = sub_24B6824B0();
    os_log_type_t v59 = sub_24B682B30();
    uint64_t v53 = a1;
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      v105[0] = v61;
      *(_DWORD *)uint64_t v60 = 136380931;
      double v104 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000023, 0x800000024B68C300, v105));
      sub_24B682CD0();
      *(_WORD *)(v60 + 12) = 2082;
      v88[0] = v60 + 14;
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v62 = sub_24B682F90();
      double v104 = COERCE_DOUBLE(sub_24B5627B8(v62, v63, v105));
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v50, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v58, v59, "MeshManager.%{private}s: Adding mesh anchor %{public}s after refinement", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v61, -1, -1);
      MEMORY[0x24C5D6C00](v60, -1, -1);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v102);
    }
    else
    {
      sub_24B59F0A0(v50, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v48);
    }
    uint64_t v55 = v103;
    uint64_t v54 = v27;
  }
  uint64_t v64 = v98;
  uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  uint64_t v66 = (uint64_t)v96;
  uint64_t v67 = v100;
  v65(v96, v53, v100);
  uint64_t v68 = v95;
  sub_24B57C210(v55, v95);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v91.i64[0])(v68, 0, 1, v54);
  swift_beginAccess();
  uint64_t v69 = v68;
  uint64_t v70 = v55;
  sub_24B58E3C0(v69, v66);
  long long v71 = v97;
  v65(v97, v53, v67);
  sub_24B5A0940(v66, v71);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v66, v67);
  uint64_t v72 = swift_endAccess();
  uint64_t v73 = v89.i64[0];
  (*(void (**)(uint64_t))(*(void *)v89.i64[0] + 152))(v72);
  uint64_t v74 = sub_24B57CCC8();
  uint64_t v76 = v101;
  uint64_t v75 = v102;
  uint64_t v77 = v92.i64[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v92.i64[0], v74, v102);
  uint64_t v78 = v53;
  uint64_t v79 = v99;
  sub_24B57C210(v78, v99);
  swift_retain_n();
  uint64_t v80 = sub_24B6824B0();
  os_log_type_t v81 = sub_24B682B10();
  int v82 = v81;
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v83 = swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    v105[0] = v103;
    *(_DWORD *)uint64_t v83 = 136381187;
    LODWORD(v98) = v82;
    double v104 = COERCE_DOUBLE(sub_24B5627B8(0xD000000000000023, 0x800000024B68C300, v105));
    sub_24B682CD0();
    *(_WORD *)(v83 + 12) = 2082;
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v84 = sub_24B682F90();
    double v104 = COERCE_DOUBLE(sub_24B5627B8(v84, v85, v105));
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    uint64_t v86 = sub_24B59F0A0(v79, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v83 + 22) = 2048;
    double v104 = (*(float (**)(uint64_t))(*(void *)v73 + 176))(v86);
    sub_24B682CD0();
    swift_release_n();
    _os_log_impl(&dword_24B55E000, v80, (os_log_type_t)v98, "MeshManager.%{private}s: Refine mesh anchor %{public}s took %f ms", (uint8_t *)v83, 0x20u);
    uint64_t v87 = v103;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v87, -1, -1);
    MEMORY[0x24C5D6C00](v83, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v102);
  }
  else
  {
    swift_release_n();

    sub_24B59F0A0(v79, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v75);
  }
  sub_24B59F0A0(v70, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  return 1;
}

void sub_24B598990(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v264[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v237 = (uint64_t)&v227 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v257 = *(void *)(v7 - 8);
  unint64_t v258 = (int *)v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v250 = (char *)&v227 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v249 = (char *)&v227 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  simd_float4x4 v247 = (char *)&v227 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v245 = (char *)&v227 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v242.n128_u64[0] = (unint64_t)&v227 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v240.n128_u64[0] = (unint64_t)&v227 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v236 = (uint64_t)&v227 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v233 = (uint64_t)&v227 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v231 = (uint64_t)&v227 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v230 = (uint64_t)&v227 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v235 = (uint64_t)&v227 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v227 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v227 - v33;
  uint64_t v35 = sub_24B6824D0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v259 = v35;
  uint64_t v260 = v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  float32x4_t v251 = (char *)&v227 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v253 = (char *)&v227 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v248 = (char *)&v227 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  unint64_t v246 = (char *)&v227 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v244.n128_u64[0] = (unint64_t)&v227 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v241.n128_u64[0] = (unint64_t)&v227 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v238 = (char *)&v227 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v239.n128_u64[0] = (unint64_t)&v227 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v234 = (char *)&v227 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v232 = (char *)&v227 - v56;
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (char *)&v227 - v57;
  uint64_t v59 = sub_24B6826D0();
  uint64_t v60 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v62 = (uint64_t *)((char *)&v227 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v243.n128_u64[0] = v2;
  unint64_t v63 = *(void **)(v2 + 40);
  *uint64_t v62 = v63;
  (*(void (**)(void *, void, uint64_t))(v60 + 104))(v62, *MEMORY[0x263F8F0E0], v59);
  id v64 = v63;
  LOBYTE(v63) = sub_24B682700();
  (*(void (**)(void *, uint64_t))(v60 + 8))(v62, v59);
  if ((v63 & 1) == 0)
  {
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v252 = a2;
  uint64_t v65 = sub_24B57CCC8();
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v260 + 16);
  float32x4_t v255 = (void *)(v260 + 16);
  v256 = (char *)v65;
  uint64_t v254 = v66;
  ((void (*)(char *))v66)(v58);
  sub_24B57C210(a1, (uint64_t)v34);
  sub_24B57C210(a1, (uint64_t)v32);
  uint64_t v67 = sub_24B6824B0();
  os_log_type_t v68 = sub_24B682B10();
  id v69 = (id)a1;
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v70 = swift_slowAlloc();
    unint64_t v228 = (void (*)(void, void))swift_slowAlloc();
    uint64_t v263 = v228;
    *(_DWORD *)uint64_t v70 = 136381187;
    v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
    sub_24B682CD0();
    *(_WORD *)(v70 + 12) = 2082;
    sub_24B682410();
    id v229 = v69;
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v71 = sub_24B682F90();
    v264[0] = (id)sub_24B5627B8(v71, v72, (uint64_t *)&v263);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59F0A0((uint64_t)v34, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v70 + 22) = 2050;
    id v73 = objc_msgSend(*(id *)&v32[v258[5]], sel_count);
    sub_24B59F0A0((uint64_t)v32, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    v264[0] = v73;
    id v69 = v229;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v67, v68, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices before densification = %{public}ld", (uint8_t *)v70, 0x20u);
    uint64_t v74 = v228;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v74, -1, -1);
    MEMORY[0x24C5D6C00](v70, -1, -1);
  }
  else
  {
    sub_24B59F0A0((uint64_t)v32, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    sub_24B59F0A0((uint64_t)v34, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
  }

  uint64_t v75 = v259;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v260 + 8);
  v76(v58, v259);
  uint64_t v77 = v253;
  uint64_t v78 = sub_24B5783B8((uint64_t)v69);
  if (!v78)
  {
    BOOL v135 = v251;
    v254(v251, v256, v75);
    uint64_t v136 = (uint64_t)v250;
    sub_24B57C210((uint64_t)v69, (uint64_t)v250);
    uint64_t v137 = sub_24B6824B0();
    os_log_type_t v138 = sub_24B682B20();
    if (os_log_type_enabled(v137, v138))
    {
      uint64_t v139 = swift_slowAlloc();
      uint64_t v140 = swift_slowAlloc();
      uint64_t v263 = (void (*)(void, void))v140;
      *(_DWORD *)uint64_t v139 = 136380931;
      v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
      sub_24B682CD0();
      *(_WORD *)(v139 + 12) = 2082;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v141 = sub_24B682F90();
      v264[0] = (id)sub_24B5627B8(v141, v142, (uint64_t *)&v263);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v136, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v137, v138, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s", (uint8_t *)v139, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v140, -1, -1);
      MEMORY[0x24C5D6C00](v139, -1, -1);

      uint64_t v143 = v259;
      uint64_t v144 = v251;
    }
    else
    {
      sub_24B59F0A0(v136, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      uint64_t v144 = v135;
      uint64_t v143 = v75;
    }
    v76(v144, v143);
    uint64_t v154 = v257;
    uint64_t v153 = v258;
    uint64_t v155 = v252;
    goto LABEL_43;
  }
  uint64_t v79 = (void *)v78;
  uint64_t v80 = (uint64_t)v69;
  os_log_type_t v81 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F838]), sel_init);
  LODWORD(v82) = 0.5;
  objc_msgSend(v81, sel_setRatio_, v82);
  objc_msgSend(v81, sel_setIterations_, 2);
  if (!GESSAlgSplitLongEdges())
  {
    v254(v77, v256, v75);
    uint64_t v145 = (uint64_t)v249;
    sub_24B57C210((uint64_t)v69, (uint64_t)v249);
    uint64_t v146 = sub_24B6824B0();
    os_log_type_t v147 = sub_24B682B20();
    if (os_log_type_enabled(v146, v147))
    {
      uint64_t v148 = swift_slowAlloc();
      uint64_t v149 = swift_slowAlloc();
      uint64_t v253 = v81;
      uint64_t v150 = v149;
      uint64_t v263 = (void (*)(void, void))v149;
      *(_DWORD *)uint64_t v148 = 136380931;
      v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
      id v229 = v79;
      sub_24B682CD0();
      *(_WORD *)(v148 + 12) = 2082;
      sub_24B682410();
      unint64_t v228 = (void (*)(void, void))v76;
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v151 = sub_24B682F90();
      v264[0] = (id)sub_24B5627B8(v151, v152, (uint64_t *)&v263);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v145, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v146, v147, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to subdivide mesh!", (uint8_t *)v148, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v150, -1, -1);
      MEMORY[0x24C5D6C00](v148, -1, -1);

      v228(v77, v259);
LABEL_42:
      uint64_t v155 = v252;
      uint64_t v154 = v257;
      uint64_t v153 = v258;
LABEL_43:
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v154 + 56))(v155, 1, 1, v153);
      return;
    }

    sub_24B59F0A0(v145, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    unint64_t v156 = v77;
    goto LABEL_40;
  }
  unsigned int v83 = objc_msgSend(v79, sel_vertexSize);
  uint64_t v84 = 3 * v83;
  if ((v84 & 0xFFFFFFFF00000000) != 0) {
    goto LABEL_61;
  }
  uint64_t v85 = v84;
  uint64_t v86 = 12 * v83;
  uint64_t v87 = swift_slowAlloc();
  if (!objc_msgSend(v79, sel_getPositions_size_, v87, v85))
  {
    uint64_t v157 = v248;
    v254(v248, v256, v75);
    uint64_t v158 = (uint64_t)v247;
    sub_24B57C210((uint64_t)v69, (uint64_t)v247);
    uint64_t v159 = sub_24B6824B0();
    os_log_type_t v160 = sub_24B682B20();
    if (!os_log_type_enabled(v159, v160))
    {

LABEL_39:
      sub_24B59F0A0(v158, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      unint64_t v156 = v157;
LABEL_40:
      uint64_t v178 = v75;
      goto LABEL_41;
    }
    uint64_t v161 = swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    uint64_t v253 = v81;
    uint64_t v163 = v162;
    uint64_t v263 = (void (*)(void, void))v162;
    *(_DWORD *)uint64_t v161 = 136380931;
    v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
    id v229 = v79;
    sub_24B682CD0();
    *(_WORD *)(v161 + 12) = 2082;
    sub_24B682410();
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v164 = sub_24B682F90();
    v264[0] = (id)sub_24B5627B8(v164, v165, (uint64_t *)&v263);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59F0A0(v158, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    _os_log_impl(&dword_24B55E000, v159, v160, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get positions from tri mesh!", (uint8_t *)v161, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v163, -1, -1);
    MEMORY[0x24C5D6C00](v161, -1, -1);

    uint64_t v166 = &v267;
    goto LABEL_34;
  }
  uint64_t v253 = v81;
  float32x4_t v251 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v87, v86, 1);
  uint64_t v88 = swift_slowAlloc();
  unsigned int v89 = objc_msgSend(v79, sel_getVertexColors_size_, v88, v85);
  id v229 = v79;
  if (!v89)
  {
    uint64_t v157 = v246;
    v254(v246, v256, v75);
    uint64_t v158 = (uint64_t)v245;
    sub_24B57C210((uint64_t)v69, (uint64_t)v245);
    uint64_t v159 = sub_24B6824B0();
    os_log_type_t v167 = sub_24B682B20();
    if (!os_log_type_enabled(v159, v167))
    {

      id v172 = v251;
LABEL_38:

      goto LABEL_39;
    }
    uint64_t v168 = swift_slowAlloc();
    uint64_t v169 = swift_slowAlloc();
    uint64_t v263 = (void (*)(void, void))v169;
    *(_DWORD *)uint64_t v168 = 136380931;
    v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
    sub_24B682CD0();
    *(_WORD *)(v168 + 12) = 2082;
    sub_24B682410();
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v170 = sub_24B682F90();
    v264[0] = (id)sub_24B5627B8(v170, v171, (uint64_t *)&v263);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59F0A0(v158, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    _os_log_impl(&dword_24B55E000, v159, v167, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get colors from tri mesh!", (uint8_t *)v168, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v169, -1, -1);
    MEMORY[0x24C5D6C00](v168, -1, -1);

    uint64_t v166 = &v266;
LABEL_34:
    unint64_t v156 = (char *)*(v166 - 32);
    uint64_t v178 = v259;
LABEL_41:
    v76(v156, v178);
    goto LABEL_42;
  }
  uint64_t v250 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v88, v86, 1);
  unsigned int v90 = objc_msgSend(v79, sel_vertexNormalSize);
  uint64_t v91 = 3 * v90;
  if ((v91 & 0xFFFFFFFF00000000) != 0)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
  }
  uint64_t v92 = v91;
  uint64_t v93 = 12 * v90;
  uint64_t v94 = swift_slowAlloc();
  if (!objc_msgSend(v79, sel_getVertexNormals_size_, v94, v92))
  {
    uint64_t v157 = (char *)v244.n128_u64[0];
    v254((char *)v244.n128_u64[0], v256, v75);
    uint64_t v158 = v242.n128_u64[0];
    sub_24B57C210((uint64_t)v69, v242.n128_i64[0]);
    uint64_t v159 = sub_24B6824B0();
    os_log_type_t v173 = sub_24B682B20();
    if (os_log_type_enabled(v159, v173))
    {
      uint64_t v174 = swift_slowAlloc();
      uint64_t v175 = swift_slowAlloc();
      uint64_t v263 = (void (*)(void, void))v175;
      *(_DWORD *)uint64_t v174 = 136380931;
      v264[0] = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)&v263);
      sub_24B682CD0();
      *(_WORD *)(v174 + 12) = 2082;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v176 = sub_24B682F90();
      v264[0] = (id)sub_24B5627B8(v176, v177, (uint64_t *)&v263);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v158, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v159, v173, "MeshManager.%{private}s: Failed to densify mesh anchor %{public}s - failed to get normals from tri mesh!", (uint8_t *)v174, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v175, -1, -1);
      MEMORY[0x24C5D6C00](v174, -1, -1);

      uint64_t v166 = &v265;
      goto LABEL_34;
    }

    id v172 = v250;
    goto LABEL_38;
  }
  uint64_t v95 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v94, v93, 1);
  id v96 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  id v97 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  id v98 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  uint64_t v99 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F840]), sel_init);
  unint64_t v100 = v243.n128_u64[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  LODWORD(v101) = *(_DWORD *)(v100 + 56);
  objc_msgSend(v99, sel_setVoxelSize_, v101);
  v264[0] = v96;
  id v261 = v98;
  id v262 = v97;
  unint64_t v246 = v95;
  LODWORD(v95) = GESSAlgVertexClusterDownsample();
  uint64_t v249 = (char *)v261;

  uint64_t v102 = (char *)v262;
  uint64_t v103 = (char *)v264[0];

  v248 = v102;
  simd_float4x4 v247 = v103;
  if (!v95)
  {
    unint64_t v179 = v241.n128_u64[0];
    v254((char *)v241.n128_u64[0], v256, v75);
    uint64_t v180 = v240.n128_u64[0];
    sub_24B57C210(v80, v240.n128_i64[0]);
    long long v181 = sub_24B6824B0();
    int v182 = sub_24B682B20();
    if (os_log_type_enabled(v181, (os_log_type_t)v182))
    {
      uint64_t v183 = swift_slowAlloc();
      uint64_t v184 = (void *)swift_slowAlloc();
      v264[0] = v184;
      *(_DWORD *)uint64_t v183 = 136380931;
      id v262 = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)v264);
      uint64_t v245 = v99;
      sub_24B682CD0();
      *(_WORD *)(v183 + 12) = 2082;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v185 = sub_24B682F90();
      id v262 = (id)sub_24B5627B8(v185, v186, (uint64_t *)v264);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v180, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v181, (os_log_type_t)v182, "MeshManager.%{private}s: Failed to densify mesh anchor\n%{public}s - failed to vertex cluster mesh!", (uint8_t *)v183, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v184, -1, -1);
      MEMORY[0x24C5D6C00](v183, -1, -1);

      uint64_t v187 = v259;
      unint64_t v188 = v241.n128_u64[0];
    }
    else
    {

      sub_24B59F0A0(v180, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      unint64_t v188 = v179;
      uint64_t v187 = v75;
    }
    v76((char *)v188, v187);
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v257 + 56))(v252, 1, 1, v258);

    goto LABEL_55;
  }
  id v104 = objc_msgSend(v103, sel_length);
  uint64_t v105 = (char *)objc_msgSend(v102, sel_length);
  BOOL v106 = __OFADD__(v104, v105);
  char v107 = &v105[(void)v104];
  if (v106) {
    goto LABEL_63;
  }
  uint64_t v245 = v99;
  simd_float4x4 v108 = (char *)objc_msgSend(v249, sel_length);
  BOOL v106 = __OFADD__(v107, v108);
  float32x4_t v109 = &v108[(void)v107];
  unint64_t v110 = v243.n128_u64[0];
  if (v106) {
    goto LABEL_64;
  }
  uint64_t v111 = *(uint64_t (**)(char *))(**(void **)(v243.n128_u64[0] + 104) + 280);
  swift_retain();
  char v112 = v111(v109);
  swift_release();
  if ((v112 & 1) == 0)
  {
    unint64_t v189 = v239.n128_u64[0];
    uint64_t v190 = v254;
    v254((char *)v239.n128_u64[0], v256, v75);
    uint64_t v191 = v80;
    uint64_t v192 = v236;
    sub_24B57C210(v191, v236);
    int64_t v193 = sub_24B6824B0();
    uint64_t v194 = v75;
    os_log_type_t v195 = sub_24B682B20();
    BOOL v196 = os_log_type_enabled(v193, v195);
    unint64_t v228 = (void (*)(void, void))v76;
    if (v196)
    {
      uint64_t v197 = swift_slowAlloc();
      v244.n128_u64[0] = swift_slowAlloc();
      v264[0] = (id)v244.n128_u64[0];
      *(_DWORD *)uint64_t v197 = 136380931;
      id v262 = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)v264);
      sub_24B682CD0();
      *(_WORD *)(v197 + 12) = 2082;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v198 = sub_24B682F90();
      id v262 = (id)sub_24B5627B8(v198, v199, (uint64_t *)v264);
      uint64_t v190 = v254;
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v192, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v193, v195, "MeshManager.%{private}s: Failed to copy densify mesh anchor %{public}s. Heap full!", (uint8_t *)v197, 0x16u);
      unint64_t v200 = v244.n128_u64[0];
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v200, -1, -1);
      MEMORY[0x24C5D6C00](v197, -1, -1);

      uint64_t v201 = v259;
      v228(v239.n128_u64[0], v259);
      uint64_t v202 = v252;
    }
    else
    {
      sub_24B59F0A0(v192, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      v76((char *)v189, v194);
      uint64_t v202 = v252;
      uint64_t v201 = v194;
    }
    *(unsigned char *)(v100 + 72) = 1;
    float32x4_t v219 = v238;
    v190(v238, v256, v201);
    uint64_t v220 = sub_24B6824B0();
    os_log_type_t v221 = sub_24B682B00();
    if (os_log_type_enabled(v220, v221))
    {
      uint64_t v222 = (uint8_t *)swift_slowAlloc();
      unint64_t v223 = (void *)swift_slowAlloc();
      v264[0] = v223;
      *(_DWORD *)uint64_t v222 = 136380675;
      id v262 = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)v264);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v220, v221, "MeshManager.%{private}s: Trigerring all mesh anchor refinement in the next update.", v222, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v223, -1, -1);
      MEMORY[0x24C5D6C00](v222, -1, -1);
    }
    else
    {
    }
    v228(v219, v201);
    id v224 = v248;
    id v225 = v247;
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v257 + 56))(v202, 1, 1, v258);

LABEL_55:
    return;
  }
  uint64_t v113 = *(void *)(v110 + 104);
  uint64_t v114 = v258;
  uint64_t v115 = v258[10];
  long long v116 = (__n128 *)(v80 + v258[9]);
  __n128 v239 = *v116;
  __n128 v240 = v116[1];
  __n128 v242 = v116[2];
  __n128 v244 = v116[3];
  double v117 = *(double *)(v80 + v115);
  uint64_t v118 = v258[12];
  __n128 v241 = *(__n128 *)(v80 + v258[11]);
  __n128 v243 = *(__n128 *)(v80 + v118);
  long long v119 = v247;
  char v120 = v248;
  os_log_type_t v121 = v249;
  swift_retain();
  uint64_t v122 = v237;
  sub_24B577948((uint64_t)v119, (uint64_t)v120, v121, v113, v80, v237, v239, v240, v242, v244, v117, v241, v243);
  uint64_t v249 = v119;

  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v257 + 48))(v122, 1, v114) == 1)
  {
    sub_24B5632A8(v122, &qword_2697CC3F8);
    uint64_t v123 = v234;
    v254(v234, v256, v75);
    uint64_t v124 = v233;
    sub_24B57C210(v80, v233);
    char v125 = sub_24B6824B0();
    uint64_t v126 = v75;
    os_log_type_t v127 = sub_24B682B20();
    if (os_log_type_enabled(v125, v127))
    {
      uint64_t v128 = swift_slowAlloc();
      uint64_t v129 = (void *)swift_slowAlloc();
      v256 = v121;
      int v130 = v129;
      v264[0] = v129;
      *(_DWORD *)uint64_t v128 = 136380931;
      id v262 = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)v264);
      unint64_t v228 = (void (*)(void, void))v76;
      sub_24B682CD0();
      *(_WORD *)(v128 + 12) = 2082;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v131 = sub_24B682F90();
      id v262 = (id)sub_24B5627B8(v131, v132, (uint64_t *)v264);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      sub_24B59F0A0(v124, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      _os_log_impl(&dword_24B55E000, v125, v127, "MeshManager.%{private}s: Failed to densify mesh anchor\n%{public}s", (uint8_t *)v128, 0x16u);
      swift_arrayDestroy();
      uint64_t v133 = v130;
      os_log_type_t v121 = v256;
      MEMORY[0x24C5D6C00](v133, -1, -1);
      uint64_t v134 = v128;
      uint64_t v114 = v258;
      MEMORY[0x24C5D6C00](v134, -1, -1);

      v228(v234, v259);
    }
    else
    {

      sub_24B59F0A0(v124, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v76(v123, v126);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v257 + 56))(v252, 1, 1, v114);
  }
  else
  {
    v248 = v120;
    uint64_t v203 = v122;
    uint64_t v204 = v235;
    sub_24B59EFA4(v203, v235);
    uint64_t v205 = v232;
    v254(v232, v256, v75);
    uint64_t v206 = v80;
    uint64_t v207 = v230;
    sub_24B57C210(v206, v230);
    uint64_t v208 = v231;
    sub_24B57C210(v204, v231);
    uint64_t v209 = sub_24B6824B0();
    uint64_t v210 = v75;
    os_log_type_t v211 = sub_24B682B10();
    if (os_log_type_enabled(v209, v211))
    {
      uint64_t v212 = swift_slowAlloc();
      float32x4_t v255 = (void *)swift_slowAlloc();
      v264[0] = v255;
      *(_DWORD *)uint64_t v212 = 136381187;
      id v262 = (id)sub_24B5627B8(0xD000000000000014, 0x800000024B68C2E0, (uint64_t *)v264);
      unint64_t v228 = (void (*)(void, void))v76;
      v256 = v121;
      sub_24B682CD0();
      *(_WORD *)(v212 + 12) = 2082;
      uint64_t v213 = v208;
      sub_24B682410();
      sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
      uint64_t v214 = sub_24B682F90();
      id v262 = (id)sub_24B5627B8(v214, v215, (uint64_t *)v264);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      os_log_type_t v121 = v256;
      sub_24B59F0A0(v207, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      *(_WORD *)(v212 + 22) = 2050;
      id v216 = objc_msgSend(*(id *)(v208 + v258[5]), sel_count);
      sub_24B59F0A0(v213, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      id v262 = v216;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v209, v211, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices after densification = %{public}ld", (uint8_t *)v212, 0x20u);
      uint64_t v217 = v255;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v217, -1, -1);
      uint64_t v218 = v212;
      uint64_t v114 = v258;
      MEMORY[0x24C5D6C00](v218, -1, -1);

      v228(v205, v259);
    }
    else
    {
      sub_24B59F0A0(v208, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      sub_24B59F0A0(v207, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
      v76(v205, v210);
    }
    uint64_t v226 = v252;
    sub_24B59EFA4(v235, v252);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v257 + 56))(v226, 0, 1, v114);
  }
}

void sub_24B59AFD8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v133 = a2;
  v145[3] = *MEMORY[0x263EF8340];
  uint64_t v4 = (int *)type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v126 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v123 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v121 = (uint64_t)&v120 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v140 = (char *)&v120 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v120 - v11;
  v141.n128_u64[0] = sub_24B6824D0();
  unint64_t v13 = *(void *)(v141.n128_u64[0] - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v141.n128_u64[0]);
  uint64_t v124 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  char v120 = (char *)&v120 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v122 = (char *)&v120 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v120 - v20;
  uint64_t v22 = sub_24B6826D0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char **)((char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v134[0] = (id)v2;
  uint64_t v26 = *(void **)(v2 + 40);
  *uint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  id v27 = v26;
  LOBYTE(v26) = sub_24B682700();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v28 = sub_24B57CCC8();
  uint64_t v29 = *(void (**)(char *))(v13 + 16);
  uint64_t v127 = v28;
  v129.n128_u64[0] = v13 + 16;
  v128.n128_u64[0] = (unint64_t)v29;
  v29(v21);
  sub_24B57C210(a1, (uint64_t)v12);
  uint64_t v135 = a1;
  sub_24B57C210(a1, (uint64_t)v140);
  uint64_t v30 = sub_24B6824B0();
  os_log_type_t v31 = sub_24B682B10();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = (SEL *)&unk_2652DE000;
  v139.n128_u64[0] = (unint64_t)v4;
  v136.n128_u64[0] = v13;
  if (v32)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v145[0] = v35;
    *(_DWORD *)uint64_t v34 = 136381187;
    id v144 = (id)sub_24B5627B8(0xD000000000000015, 0x800000024B68C2C0, v145);
    sub_24B682CD0();
    *(_WORD *)(v34 + 12) = 2082;
    sub_24B682410();
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v36 = sub_24B682F90();
    id v144 = (id)sub_24B5627B8(v36, v37, v145);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59F0A0((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    *(_WORD *)(v34 + 22) = 2050;
    uint64_t v38 = (uint64_t)v140;
    id v39 = objc_msgSend(*(id *)&v140[*(int *)(v139.n128_u64[0] + 20)], sel_count);
    sub_24B59F0A0(v38, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    id v144 = v39;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v30, v31, "MeshManager.%{private}s: Mesh anchor %{public}s num vertices before simplification = %{public}ld", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    uint64_t v40 = v35;
    uint64_t v33 = (SEL *)&unk_2652DE000;
    MEMORY[0x24C5D6C00](v40, -1, -1);
    uint64_t v41 = v34;
    uint64_t v4 = (int *)v139.n128_u64[0];
    MEMORY[0x24C5D6C00](v41, -1, -1);

    uint64_t v42 = *(void (**)(char *, unint64_t))(v136.n128_u64[0] + 8);
  }
  else
  {
    sub_24B59F0A0((uint64_t)v140, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    sub_24B59F0A0((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

    uint64_t v42 = *(void (**)(char *, unint64_t))(v13 + 8);
  }
  v42(v21, v141.n128_u64[0]);
  uint64_t v43 = v4[5];
  uint64_t v44 = v135;
  id v45 = objc_msgSend(*(id *)(v135 + v43), sel_buffer);
  id v46 = objc_msgSend(v45, sel_contents);
  id v47 = v45;
  uint64_t v48 = (uint64_t)[*(id *)(v44 + v43) v33[114]];
  if ((unsigned __int128)(v48 * (__int128)3) >> 64 != (3 * v48) >> 63) {
    goto LABEL_29;
  }
  if ((unint64_t)(3 * v48 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  char v125 = v42;
  id v138 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v46, 12 * v48, 0);
  uint64_t v49 = v33;
  uint64_t v50 = v4[6];
  id v51 = objc_msgSend(*(id *)(v44 + v50), sel_buffer);
  id v52 = objc_msgSend(v51, sel_contents);
  id v53 = v51;
  uint64_t v54 = (uint64_t)[*(id *)(v44 + v50) (SEL)v49 + 3608];
  if ((unsigned __int128)(v54 * (__int128)3) >> 64 != (3 * v54) >> 63)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((unint64_t)(3 * v54 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v140 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v52, 12 * v54, 0);
  uint64_t v55 = v4[7];
  id v56 = objc_msgSend(*(id *)(v44 + v55), sel_buffer);
  id v57 = objc_msgSend(v56, sel_contents);
  id v58 = v56;
  uint64_t v59 = (uint64_t)[*(id *)(v44 + v55) (SEL)v49 + 3608];
  if ((unsigned __int128)(v59 * (__int128)3) >> 64 != (3 * v59) >> 63)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)(3 * v59 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithBytesNoCopy_length_freeWhenDone_, v57, 12 * v59, 0);
  id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_init);
  id v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3F840]), sel_init);
  unint64_t v65 = (unint64_t)v134[0];
  unint64_t v66 = (unint64_t)v134[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  LODWORD(v67) = *(_DWORD *)(v66 + 56);
  objc_msgSend(v64, sel_setVoxelSize_, v67);
  id v143 = v62;
  id v144 = v61;
  id v142 = v63;
  id v68 = v138;
  id v130 = v64;
  LODWORD(v64) = GESSAlgVertexClusterDownsample();
  id v137 = v142;

  id v69 = v143;
  id v70 = v144;

  id v132 = v60;
  id v131 = v69;
  if (v64)
  {
    id v71 = objc_msgSend(v70, sel_length);
    unint64_t v72 = (char *)objc_msgSend(v69, sel_length);
    BOOL v73 = __OFADD__(v71, v72);
    uint64_t v74 = &v72[(void)v71];
    if (!v73)
    {
      uint64_t v75 = (char *)objc_msgSend(v137, sel_length);
      BOOL v73 = __OFADD__(v74, v75);
      uint64_t v76 = &v75[(void)v74];
      if (!v73)
      {
        uint64_t v77 = *(uint64_t (**)(char *))(**(void **)(v65 + 104) + 280);
        swift_retain();
        char v78 = v77(v76);
        swift_release();
        if (v78)
        {
          uint64_t v79 = *(void *)(v65 + 104);
          uint64_t v80 = *(int *)(v139.n128_u64[0] + 40);
          os_log_type_t v81 = (__n128 *)(v44 + *(int *)(v139.n128_u64[0] + 36));
          __n128 v128 = *v81;
          __n128 v129 = v81[1];
          __n128 v136 = v81[2];
          __n128 v141 = v81[3];
          double v82 = *(double *)(v44 + v80);
          uint64_t v83 = *(int *)(v139.n128_u64[0] + 48);
          *(_OWORD *)uint64_t v134 = *(_OWORD *)(v44 + *(int *)(v139.n128_u64[0] + 44));
          __n128 v139 = *(__n128 *)(v44 + v83);
          id v84 = v70;
          id v85 = v131;
          id v86 = v137;
          swift_retain();
          sub_24B577948((uint64_t)v84, (uint64_t)v85, v86, v79, v44, v133, v128, v129, v136, v141, v82, *(__n128 *)v134, v139);

          swift_release();
          v134[0] = v68;
          id v87 = v132;
          id v88 = v140;
        }
        else
        {
          v134[0] = v70;
          double v101 = v122;
          uint64_t v102 = v127;
          unint64_t v103 = v141.n128_u64[0];
          id v104 = (void (*)(char *, uint64_t, unint64_t))v128.n128_u64[0];
          ((void (*)(char *, uint64_t, unint64_t))v128.n128_u64[0])(v122, v127, v141.n128_u64[0]);
          uint64_t v105 = v121;
          sub_24B57C210(v44, v121);
          BOOL v106 = sub_24B6824B0();
          os_log_type_t v107 = sub_24B682B20();
          if (os_log_type_enabled(v106, v107))
          {
            uint64_t v108 = swift_slowAlloc();
            float32x4_t v109 = (void *)swift_slowAlloc();
            id v144 = v109;
            *(_DWORD *)uint64_t v108 = 136380931;
            id v143 = (id)sub_24B5627B8(0xD000000000000015, 0x800000024B68C2C0, (uint64_t *)&v144);
            sub_24B682CD0();
            *(_WORD *)(v108 + 12) = 2082;
            uint64_t v135 = v108 + 14;
            sub_24B682410();
            sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
            uint64_t v102 = v127;
            uint64_t v110 = sub_24B682F90();
            id v143 = (id)sub_24B5627B8(v110, v111, (uint64_t *)&v144);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            sub_24B59F0A0(v105, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
            _os_log_impl(&dword_24B55E000, v106, v107, "MeshManager.%{private}s: Failed to copy simplified mesh anchor %{public}s. Heap full!", (uint8_t *)v108, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v109, -1, -1);
            uint64_t v112 = v108;
            id v104 = (void (*)(char *, uint64_t, unint64_t))v128.n128_u64[0];
            MEMORY[0x24C5D6C00](v112, -1, -1);

            uint64_t v113 = v122;
          }
          else
          {
            sub_24B59F0A0(v105, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

            uint64_t v113 = v101;
          }
          uint64_t v114 = v125;
          v125(v113, v103);
          uint64_t v115 = v120;
          *(unsigned char *)(v66 + 72) = 1;
          v104(v115, v102, v103);
          long long v116 = sub_24B6824B0();
          os_log_type_t v117 = sub_24B682B00();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = (uint8_t *)swift_slowAlloc();
            long long v119 = (void *)swift_slowAlloc();
            id v144 = v119;
            *(_DWORD *)uint64_t v118 = 136380675;
            id v143 = (id)sub_24B5627B8(0xD000000000000015, 0x800000024B68C2C0, (uint64_t *)&v144);
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v116, v117, "MeshManager.%{private}s: Trigerring all mesh anchor simplification in the next update.", v118, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v119, -1, -1);
            MEMORY[0x24C5D6C00](v118, -1, -1);
          }
          else
          {
          }
          v114(v115, v103);
          id v88 = v137;
          id v87 = v131;
          (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v126 + 56))(v133, 1, 1, v139.n128_u64[0]);
        }
        goto LABEL_27;
      }
LABEL_36:
      __break(1u);
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v134[0] = v70;
  unsigned int v89 = v124;
  unint64_t v90 = v141.n128_u64[0];
  ((void (*)(char *, uint64_t, unint64_t))v128.n128_u64[0])(v124, v127, v141.n128_u64[0]);
  uint64_t v91 = v44;
  uint64_t v92 = v123;
  sub_24B57C210(v91, v123);
  uint64_t v93 = sub_24B6824B0();
  os_log_type_t v94 = sub_24B682B20();
  if (os_log_type_enabled(v93, v94))
  {
    uint64_t v95 = swift_slowAlloc();
    id v96 = (void *)swift_slowAlloc();
    id v144 = v96;
    *(_DWORD *)uint64_t v95 = 136380931;
    id v143 = (id)sub_24B5627B8(0xD000000000000015, 0x800000024B68C2C0, (uint64_t *)&v144);
    sub_24B682CD0();
    *(_WORD *)(v95 + 12) = 2082;
    sub_24B682410();
    sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
    uint64_t v97 = sub_24B682F90();
    id v143 = (id)sub_24B5627B8(v97, v98, (uint64_t *)&v144);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    sub_24B59F0A0(v92, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    _os_log_impl(&dword_24B55E000, v93, v94, "MeshManager.%{private}s: Failed to simplify mesh anchor %{public}s", (uint8_t *)v95, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v96, -1, -1);
    MEMORY[0x24C5D6C00](v95, -1, -1);

    uint64_t v99 = v89;
    unint64_t v100 = v141.n128_u64[0];
  }
  else
  {

    sub_24B59F0A0(v92, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    uint64_t v99 = v89;
    unint64_t v100 = v90;
  }
  v125(v99, v100);
  id v87 = v131;
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v126 + 56))(v133, 1, 1, v139.n128_u64[0]);
  id v88 = v137;
LABEL_27:
}

uint64_t sub_24B59C1AC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B682410();
  v160.i64[0] = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v140 = (char *)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  __n128 v139 = (char *)&v123 - v7;
  uint64_t v8 = sub_24B562F04(&qword_2697CC3F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v138 = (uint64_t)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v159 = *(void *)(v147 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v147);
  uint64_t v137 = (uint64_t)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v130 = (uint64_t)&v123 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v123 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v123 - v17;
  uint64_t v19 = sub_24B6824D0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v126 = (char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v124 = (char *)&v123 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  __n128 v141 = (char *)&v123 - v26;
  MEMORY[0x270FA5388](v25);
  v163.i64[0] = (uint64_t)&v123 - v27;
  uint64_t v28 = sub_24B6826D0();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  os_log_type_t v31 = (uint64_t *)((char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v148 = *a1;
  uint64_t v123 = a1[1];
  *(void *)&long long v158 = a1[2];
  v154.i64[0] = a1[3];
  v157.i64[0] = a1[4];
  int64_t v153 = a1[5];
  v156.i64[0] = a1[6];
  uint64_t v152 = a1[7];
  v155.i64[0] = a1[8];
  uint64_t v151 = a1[9];
  v161.i32[0] = *((unsigned __int8 *)a1 + 80);
  v162.i64[0] = v2;
  BOOL v32 = *(void **)(v2 + 40);
  *os_log_type_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, *MEMORY[0x263F8F0E0], v28);
  id v33 = v32;
  LOBYTE(v32) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if ((v32 & 1) == 0)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  uint64_t v35 = sub_24B57CCC8();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v145 = v35;
  uint64_t v146 = v20 + 16;
  id v144 = v36;
  ((void (*)(uint64_t))v36)(v163.i64[0]);
  unint64_t v37 = sub_24B6824B0();
  os_log_type_t v38 = sub_24B682B30();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v149 = v19;
  uint64_t v136 = v4;
  if (v39)
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(void *)&long long v172 = v41;
    *(_DWORD *)uint64_t v40 = 136380675;
    uint64_t v19 = v149;
    uint64_t v150 = v40 + 4;
    uint64_t v164 = sub_24B5627B8(0xD000000000000026, 0x800000024B68C290, (uint64_t *)&v172);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v37, v38, "MeshManager.%{private}s: Processing updated mesh anchors without refinement...", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v41, -1, -1);
    MEMORY[0x24C5D6C00](v40, -1, -1);
  }

  id v143 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v143(v163.i64[0], v19);
  uint64_t v42 = v148;
  uint64_t v43 = v147;
  uint64_t v44 = v162.i64[0];
  __int32 v45 = v161.i32[0];
  uint64_t v46 = v162.i64[0] + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  uint64_t result = swift_beginAccess();
  uint64_t v150 = (uint8_t *)v46;
  uint64_t v47 = *(void *)(v46 + 8);
  uint64_t v135 = v46 + 8;
  if (*(void *)(v47 + 16)) {
    goto LABEL_57;
  }
  if (v45)
  {
    double v48 = 0.0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    id v56 = 0;
  }
  else
  {
    v57.i64[0] = v158;
    v57.i64[1] = v154.i64[0];
    float32x4_t v163 = v57;
    v57.i64[0] = v157.i64[0];
    v57.i64[1] = v153;
    float32x4_t v162 = v57;
    v57.i64[0] = v156.i64[0];
    v57.i64[1] = v152;
    float32x4_t v161 = v57;
    v57.i64[0] = v155.i64[0];
    v57.i64[1] = v151;
    float32x4_t v142 = v57;
    uint64_t v164 = v158;
    uint64_t v165 = v154.i64[0];
    uint64_t v166 = v157.i64[0];
    int64_t v167 = v153;
    uint64_t v168 = v156.i64[0];
    uint64_t v169 = v152;
    uint64_t v170 = v155.i64[0];
    uint64_t v171 = v151;
    OCBoundingBox.scale(_:)(&v172, *(float32x4_t *)(v44 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_kScaleFactorForBoundingBoxMeshIntersection));
    long long v158 = v172;
    simd_float4 v157 = v173;
    simd_float4 v156 = v174;
    simd_float4 v155 = v175;
    type metadata accessor for MeshUtils.AABB();
    long long v172 = v158;
    simd_float4 v173 = v157;
    simd_float4 v174 = v156;
    simd_float4 v175 = v155;
    id v56 = sub_24B579A94();
    double v58 = sub_24B5F8CC8(v163);
    uint64_t v49 = v59;
    double v48 = v58;
    uint64_t v51 = v60;
    uint64_t v50 = v61;
    uint64_t v53 = v62;
    uint64_t v52 = v63;
    uint64_t v55 = v64;
    uint64_t v54 = v65;
  }
  uint64_t v66 = *(void *)(v42 + 64);
  uint64_t v152 = v42 + 64;
  uint64_t v67 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v68 = -1;
  if (v67 < 64) {
    uint64_t v68 = ~(-1 << v67);
  }
  unint64_t v69 = v68 & v66;
  int64_t v153 = (unint64_t)(v67 + 63) >> 6;
  if (v56) {
    int v70 = v45;
  }
  else {
    int v70 = 1;
  }
  LODWORD(v158) = v70;
  *(double *)v71.i64 = v48;
  v71.i64[1] = v49;
  simd_float4 v157 = v71;
  v71.i64[0] = v50;
  v71.i64[1] = v51;
  simd_float4 v156 = v71;
  v71.i64[0] = v52;
  v71.i64[1] = v53;
  simd_float4 v155 = v71;
  v71.i64[0] = v54;
  v71.i64[1] = v55;
  simd_float4 v154 = v71;
  uint64_t v133 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56);
  v142.i64[0] = v20 + 8;
  id v132 = (uint64_t *)(v160.i64[0] + 16);
  id v131 = (void (**)(uint64_t, uint64_t))(v160.i64[0] + 8);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v151 = 0;
  int64_t v72 = 0;
  *(void *)&long long v73 = 136380931;
  long long v129 = v73;
  unint64_t v125 = (unint64_t)"kMeshOverlapRemovalThreshold";
  unint64_t v128 = 0x800000024B68C290;
  uint64_t v127 = MEMORY[0x263F8EE58] + 8;
  uint64_t v134 = v18;
  do
  {
    while (1)
    {
      if (v69)
      {
        unint64_t v74 = __clz(__rbit64(v69));
        v69 &= v69 - 1;
        unint64_t v75 = v74 | (v72 << 6);
      }
      else
      {
        int64_t v76 = v72 + 1;
        if (__OFADD__(v72, 1))
        {
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        if (v76 >= v153) {
          goto LABEL_45;
        }
        unint64_t v77 = *(void *)(v152 + 8 * v76);
        ++v72;
        if (!v77)
        {
          int64_t v72 = v76 + 1;
          if (v76 + 1 >= v153) {
            goto LABEL_45;
          }
          unint64_t v77 = *(void *)(v152 + 8 * v72);
          if (!v77)
          {
            int64_t v72 = v76 + 2;
            if (v76 + 2 >= v153) {
              goto LABEL_45;
            }
            unint64_t v77 = *(void *)(v152 + 8 * v72);
            if (!v77)
            {
              int64_t v72 = v76 + 3;
              if (v76 + 3 >= v153) {
                goto LABEL_45;
              }
              unint64_t v77 = *(void *)(v152 + 8 * v72);
              if (!v77)
              {
                int64_t v78 = v76 + 4;
                if (v78 >= v153) {
                  goto LABEL_45;
                }
                unint64_t v77 = *(void *)(v152 + 8 * v78);
                if (!v77)
                {
                  while (1)
                  {
                    int64_t v72 = v78 + 1;
                    if (__OFADD__(v78, 1)) {
                      goto LABEL_55;
                    }
                    if (v72 >= v153) {
                      goto LABEL_45;
                    }
                    unint64_t v77 = *(void *)(v152 + 8 * v72);
                    ++v78;
                    if (v77) {
                      goto LABEL_32;
                    }
                  }
                }
                int64_t v72 = v78;
              }
            }
          }
        }
LABEL_32:
        unint64_t v69 = (v77 - 1) & v77;
        unint64_t v75 = __clz(__rbit64(v77)) + (v72 << 6);
      }
      uint64_t v79 = *(void *)(v159 + 72);
      sub_24B57C210(*(void *)(v42 + 56) + v79 * v75, (uint64_t)v18);
      sub_24B59EFA4((uint64_t)v18, (uint64_t)v16);
      if (v158) {
        break;
      }
      v176.columns[0] = v157;
      v176.columns[1] = v156;
      v176.columns[2] = v155;
      v176.columns[3] = v154;
      simd_float4x4 v177 = __invert_f4(v176);
      uint64_t v80 = (float32x2_t *)&v16[*(int *)(v43 + 36)];
      float32x4_t v81 = *(float32x4_t *)v80[2].f32;
      float32x4_t v82 = *(float32x4_t *)v80[4].f32;
      float32x4_t v83 = *(float32x4_t *)v80[6].f32;
      float32x4_t v163 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v177.columns[0], COERCE_FLOAT(*(_OWORD *)v80->f32)), (float32x4_t)v177.columns[1], *v80, 1), (float32x4_t)v177.columns[2], *(float32x4_t *)v80->f32, 2), (float32x4_t)v177.columns[3], *(float32x4_t *)v80->f32, 3);
      float32x4_t v162 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v177.columns[0], v81.f32[0]), (float32x4_t)v177.columns[1], *(float32x2_t *)v81.f32, 1), (float32x4_t)v177.columns[2], v81, 2), (float32x4_t)v177.columns[3], v81, 3);
      float32x4_t v161 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v177.columns[0], v82.f32[0]), (float32x4_t)v177.columns[1], *(float32x2_t *)v82.f32, 1), (float32x4_t)v177.columns[2], v82, 2), (float32x4_t)v177.columns[3], v82, 3);
      float32x4_t v160 = vmlaq_laneq_f32(vmlaq_laneq_f32(vmlaq_lane_f32(vmulq_n_f32((float32x4_t)v177.columns[0], v83.f32[0]), (float32x4_t)v177.columns[1], *(float32x2_t *)v83.f32, 1), (float32x4_t)v177.columns[2], v83, 2), (float32x4_t)v177.columns[3], v83, 3);
      swift_retain();
      sub_24B579B20((uint64_t)v16, v163, v162, v161, v160);
      float v85 = v84;
      swift_release();
      if (v85 > 0.0) {
        break;
      }
      uint64_t result = sub_24B59F0A0((uint64_t)v16, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    }
    uint64_t v86 = *(void *)v150;
    if (*(void *)(*(void *)v150 + 16) && (unint64_t v87 = sub_24B59F008((uint64_t)v16), (v88 & 1) != 0))
    {
      uint64_t v89 = *(void *)(v86 + 56) + v87 * v79;
      uint64_t v90 = v138;
      sub_24B57C210(v89, v138);
      (*v133)(v90, 0, 1, v43);
      sub_24B5632A8(v90, &qword_2697CC3F8);
    }
    else
    {
      uint64_t v91 = v138;
      (*v133)(v138, 1, 1, v43);
      sub_24B5632A8(v91, &qword_2697CC3F8);
      uint64_t v92 = v141;
      v144(v141, v145, v19);
      uint64_t v93 = v130;
      sub_24B57C210((uint64_t)v16, v130);
      os_log_type_t v94 = sub_24B6824B0();
      os_log_type_t v95 = sub_24B682B30();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = swift_slowAlloc();
        v163.i64[0] = swift_slowAlloc();
        *(void *)&long long v172 = v163.i64[0];
        *(_DWORD *)uint64_t v96 = v129;
        *(void *)(v96 + 4) = sub_24B5627B8(0xD000000000000026, v128, (uint64_t *)&v172);
        *(_WORD *)(v96 + 12) = 2082;
        sub_24B5A2198(&qword_2697CC400, MEMORY[0x263F07508]);
        os_log_type_t v97 = v95;
        uint64_t v98 = v136;
        uint64_t v99 = sub_24B682F90();
        *(void *)(v96 + 14) = sub_24B5627B8(v99, v100, (uint64_t *)&v172);
        swift_bridgeObjectRelease();
        sub_24B59F0A0(v93, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
        _os_log_impl(&dword_24B55E000, v94, v97, "MeshManager.%{private}s: Adding mesh anchor %{public}s without refinement", (uint8_t *)v96, 0x16u);
        uint64_t v101 = v163.i64[0];
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v101, -1, -1);
        MEMORY[0x24C5D6C00](v96, -1, -1);

        v143((uint64_t)v141, v149);
        goto LABEL_42;
      }
      sub_24B59F0A0(v93, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);

      v143((uint64_t)v92, v19);
    }
    uint64_t v98 = v136;
LABEL_42:
    v163.i64[0] = *v132;
    uint64_t v102 = (uint64_t)v139;
    ((void (*)(char *, char *, uint64_t))v163.i64[0])(v139, v16, v98);
    uint64_t v103 = v98;
    id v104 = (uint64_t *)v150;
    swift_beginAccess();
    uint64_t v105 = v137;
    sub_24B57C210((uint64_t)v16, v137);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v164 = *v104;
    *id v104 = 0x8000000000000000;
    sub_24B5A00C4(v105, v102, isUniquelyReferenced_nonNull_native);
    *id v104 = v164;
    swift_bridgeObjectRelease();
    os_log_type_t v107 = *v131;
    (*v131)(v102, v103);
    uint64_t v108 = v140;
    ((void (*)(char *, char *, uint64_t))v163.i64[0])(v140, v16, v103);
    sub_24B5A0940(v102, v108);
    v107(v102, v103);
    swift_endAccess();
    uint64_t result = sub_24B59F0A0((uint64_t)v16, type metadata accessor for ObjectCaptureSession.Mesh.Anchor);
    BOOL v109 = __OFADD__(v151++, 1);
    uint64_t v19 = v149;
    uint64_t v42 = v148;
    uint64_t v43 = v147;
    uint64_t v18 = v134;
  }
  while (!v109);
  __break(1u);
LABEL_45:
  swift_release();
  uint64_t v110 = v126;
  if (v56)
  {
    unint64_t v111 = v124;
    v144(v124, v145, v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v112 = sub_24B6824B0();
    os_log_type_t v113 = sub_24B682B30();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = swift_slowAlloc();
      v163.i64[0] = swift_slowAlloc();
      *(void *)&long long v172 = v163.i64[0];
      *(_DWORD *)uint64_t v114 = 136381187;
      uint64_t v164 = sub_24B5627B8(0xD000000000000026, v125 | 0x8000000000000000, (uint64_t *)&v172);
      sub_24B682CD0();
      *(_WORD *)(v114 + 12) = 2050;
      uint64_t v164 = v151;
      sub_24B682CD0();
      *(_WORD *)(v114 + 22) = 2050;
      uint64_t v164 = *(void *)(v42 + 16);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v112, v113, "MeshManager.%{private}s: %{public}ld/%{public}ld mesh anchors intersect with bounding box.", (uint8_t *)v114, 0x20u);
      uint64_t v115 = v163.i64[0];
      swift_arrayDestroy();
      uint64_t v19 = v149;
      MEMORY[0x24C5D6C00](v115, -1, -1);
      MEMORY[0x24C5D6C00](v114, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v143((uint64_t)v111, v19);
  }
  v144(v110, v145, v19);
  long long v116 = sub_24B6824B0();
  os_log_type_t v117 = sub_24B682B30();
  if (os_log_type_enabled(v116, v117))
  {
    uint64_t v118 = (uint8_t *)swift_slowAlloc();
    uint64_t v119 = v19;
    uint64_t v120 = swift_slowAlloc();
    *(void *)&long long v172 = v120;
    *(_DWORD *)uint64_t v118 = 136380675;
    uint64_t v164 = sub_24B5627B8(0xD000000000000026, v125 | 0x8000000000000000, (uint64_t *)&v172);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v116, v117, "MeshManager.%{private}s: Finished processing all updated mesh anchors.", v118, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v120, -1, -1);
    MEMORY[0x24C5D6C00](v118, -1, -1);
    swift_release();

    uint64_t v121 = v110;
    uint64_t v122 = v119;
  }
  else
  {

    swift_release();
    uint64_t v121 = v110;
    uint64_t v122 = v19;
  }
  return ((uint64_t (*)(char *, uint64_t))v143)(v121, v122);
}

uint64_t sub_24B59D504()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B682680();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_24B6826D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + 40);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
  id v14 = v13;
  LOBYTE(v13) = sub_24B682700();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_24B682660();
  unint64_t v16 = sub_24B682650();
  uint64_t v24 = v1;
  uint64_t v17 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData;
  swift_beginAccess();
  uint64_t v18 = type metadata accessor for FreeformMeshManager.BackgroundData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v17 + *(int *)(v18 + 52), v2);
  unint64_t v19 = sub_24B682650();
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = v20(v6, v2);
  if (v16 < v19)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v16 - v19 >= 0x28FA6AE00)
  {
    uint64_t v21 = *(void (**)(uint64_t))(**(void **)(v24 + 104) + 288);
    uint64_t v22 = swift_retain();
    v21(v22);
    swift_release();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 24))(v17 + *(int *)(v18 + 52), v8, v2);
    swift_endAccess();
  }
  return v20(v8, v2);
}

uint64_t sub_24B59D800()
{
  sub_24B5661FC(v0 + 16);

  swift_unknownObjectRelease();
  swift_release();
  sub_24B59F0A0(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData, type metadata accessor for FreeformMeshManager.BackgroundData);
  long long v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 144);
  v7[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 128);
  v7[9] = v1;
  char v8 = *(unsigned char *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 160);
  long long v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 80);
  v7[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 64);
  v7[5] = v2;
  long long v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 112);
  v7[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 96);
  v7[7] = v3;
  long long v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 16);
  v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
  v7[1] = v4;
  long long v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 48);
  v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData + 32);
  v7[3] = v5;
  sub_24B59DBA0((uint64_t)v7);
  return swift_deallocClassInstance();
}

uint64_t sub_24B59D8E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC478);
  uint64_t v10 = *(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24B682EE0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24B5A1FB4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_24B59DB48(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B59DB74(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B59DBA0(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for FreeformMeshManager(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CDED0);
}

uint64_t sub_24B59DC10@<X0>(char *a1@<X8>)
{
  return sub_24B58D9C4(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24B59DC3C@<X0>(char *a1@<X8>)
{
  return sub_24B58E648(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24B59DC68@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  *a1 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

float sub_24B59DCCC@<S0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  if (*(unsigned char *)(v3 + 48) & 1) != 0 || (*(unsigned char *)(v3 + 80))
  {
    LODWORD(v4) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 32) = 1;
  }
  else
  {
    long long v5 = (const double *)(v3 + 72);
    float32x2_t v6 = *(float32x2_t *)(v3 + 64);
    unint64_t v7 = *(void *)(v3 + 40);
    float32x2_t v8 = *(float32x2_t *)(v3 + 32);
    float32x4_t v9 = (float32x4_t)vld1q_dup_f64(v5);
    *(float32x2_t *)&long long v4 = vsub_f32(v6, v8);
    *((void *)&v4 + 1) = vsubq_f32(v9, (float32x4_t)vdupq_n_s64(v7)).u32[2];
    *(float32x2_t *)a1 = v8;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = v4;
    *(unsigned char *)(a1 + 32) = 0;
  }
  return *(float *)&v4;
}

uint64_t sub_24B59DD90()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 88, 15);
}

uint64_t sub_24B59DDC8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t result = sub_24B5F94A8(*(float32x4_t *)(v0 + 16), *(float32x4_t *)(v0 + 32), *(float32x4_t *)(v0 + 48), *(int8x16_t *)(v0 + 64));
  if (result)
  {
    OCBoundingBox.init(transform:)(&v8, (simd_float4x4 *)result);
    simd_float4 v6 = v8.transform.columns[1];
    simd_float4 v7 = v8.transform.columns[0];
    simd_float4 v5 = v8.transform.columns[2];
    simd_float4 v3 = v8.transform.columns[3];
    long long v4 = (simd_float4 *)(v1 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData);
    uint64_t result = swift_beginAccess();
    void v4[6] = v7;
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v3;
    v4[10].i8[0] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B59DE78()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B59DE88()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24B59DEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B59DEC0()
{
  return swift_release();
}

uint64_t sub_24B59DEC8()
{
  return sub_24B58F160(v0);
}

uint64_t sub_24B59DED0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_24B59DEE4()
{
  unint64_t result = qword_2697CC380;
  if (!qword_2697CC380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC380);
  }
  return result;
}

uint64_t sub_24B59DF38()
{
  return type metadata accessor for FreeformMeshManager(0);
}

uint64_t sub_24B59DF40()
{
  uint64_t result = type metadata accessor for FreeformMeshManager.BackgroundData(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t destroy for FreeformMeshManager.Configuration()
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  int v4 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FreeformMeshManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_WORD *)(a1 + 12) = *(_WORD *)(a2 + 12);
  *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.Configuration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.Configuration()
{
  return &type metadata for FreeformMeshManager.Configuration;
}

__n128 initializeWithCopy for FreeformMeshManager.Extent(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.Extent(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.Extent(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.Extent()
{
  return &type metadata for FreeformMeshManager.Extent;
}

unsigned char *storeEnumTagSinglePayload for FreeformMeshManager.ScanExtent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B59E3C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.ScanExtent()
{
  return &type metadata for FreeformMeshManager.ScanExtent;
}

uint64_t destroy for FreeformMeshManager.MainQueueData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 112) = v6;
  return a1;
}

__n128 initializeWithTake for FreeformMeshManager.MainQueueData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FreeformMeshManager.MainQueueData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MainQueueData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.MainQueueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MainQueueData()
{
  return &type metadata for FreeformMeshManager.MainQueueData;
}

uint64_t sub_24B59E754(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    long long v8 = *((_OWORD *)a2 + 7);
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(_OWORD *)(a1 + 112) = v8;
    *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v9 = *(int *)(a3 + 52);
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = a1 + v9;
    *(void *)(a1 + 136) = a2[17];
    uint64_t v12 = sub_24B682680();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v5;
}

uint64_t sub_24B59E8A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_24B682680();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_24B59E938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  uint64_t v7 = *(int *)(a3 + 52);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v10 = sub_24B682680();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_24B59EA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24B682680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_24B59EB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v9 = sub_24B682680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
  return a1;
}

uint64_t sub_24B59EC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v6 = *(void *)(a2 + 136);
  uint64_t v7 = *(int *)(a3 + 52);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 136) = v6;
  uint64_t v10 = sub_24B682680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v9, v8, v10);
  return a1;
}

uint64_t sub_24B59ED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B59ED68);
}

uint64_t sub_24B59ED68(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24B682680();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24B59EE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B59EE2C);
}

void *sub_24B59EE2C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24B682680();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24B59EED4()
{
  uint64_t result = sub_24B682680();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24B59EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B59F008(uint64_t a1)
{
  sub_24B682410();
  sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
  uint64_t v2 = sub_24B682750();

  return sub_24B59F100(a1, v2);
}

uint64_t sub_24B59F0A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24B59F100(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_24B5A2198(&qword_2697CC410, MEMORY[0x263F07508]);
      char v15 = sub_24B682780();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_24B59F2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24B59F008(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24B5A0388();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24B682410();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24B59EFA4(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_24B59FD7C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_24B59F478(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682410();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_24B562F04((uint64_t *)&unk_2697CC420);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_24B682F20();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  uint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    uint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24B59EFA4(v32 + v33 * v24, v54);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_24B57C210(v34 + v33 * v24, v54);
    }
    sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
    uint64_t result = sub_24B682750();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_24B59EFA4(v54, *(void *)(v13 + 56) + v33 * v22);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_24B59F954(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24B562F04(&qword_2697CC470);
  int v44 = a2;
  uint64_t v10 = sub_24B682F20();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    BOOL v40 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v42 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    int64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v46 = v5;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v41) {
          goto LABEL_34;
        }
        unint64_t v23 = v42[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v23 = v42[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v40;
              if (v44)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
                if (v38 >= 64) {
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v42 = -1 << v38;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v42[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v23 = v42[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = v9;
      uint64_t v26 = *(void *)(v9 + 48);
      uint64_t v27 = v6;
      uint64_t v28 = *(void *)(v6 + 72);
      uint64_t v29 = v26 + v28 * v21;
      if (v44) {
        (*v45)(v8, v29, v46);
      }
      else {
        (*v43)(v8, v29, v46);
      }
      int v30 = *(_DWORD *)(*(void *)(v25 + 56) + 4 * v21);
      sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
      uint64_t result = sub_24B682750();
      uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v45)(*(void *)(v11 + 48) + v28 * v19, v8, v46);
      *(_DWORD *)(*(void *)(v11 + 56) + 4 * v19) = v30;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v27;
      uint64_t v9 = v25;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_24B59FD7C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_24B682D90();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24B682750();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B5A00C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_24B5A0388();
      goto LABEL_7;
    }
    sub_24B59F478(v17, a3 & 1);
    unint64_t v24 = sub_24B59F008(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      unint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_24B5A02AC(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = v21
      + *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8) + 72) * v14;

  return sub_24B5A1954(a1, v22);
}

uint64_t sub_24B5A02AC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24B682410();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t result = sub_24B59EFA4(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

void *sub_24B5A0388()
{
  uint64_t v1 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04((uint64_t *)&unk_2697CC420);
  unint64_t v24 = v0;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_24B682F10();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v24 = v10;
    return result;
  }
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v8 + 64);
  uint64_t v25 = v8 + 64;
  int64_t v26 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v27 = v5 + 32;
  uint64_t v28 = v5 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v19, v4);
    unint64_t v20 = *(void *)(v29 + 72) * v18;
    sub_24B57C210(*(void *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v19, v7, v4);
    uint64_t result = (void *)sub_24B59EFA4((uint64_t)v3, *(void *)(v10 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24B5A06A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B682410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC470);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24B682F10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v23 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 4 * v16;
    int v19 = *(_DWORD *)(*(void *)(v6 + 56) + v18);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    *(_DWORD *)(*(void *)(v8 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24B5A0940(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B682410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  BOOL v33 = a2;
  uint64_t v11 = sub_24B682750();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      int64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_24B5A2198(&qword_2697CC410, MEMORY[0x263F07508]);
      char v21 = sub_24B682780();
      int64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B5A1060((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_24B5A0C64()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24B682410();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_24B562F04(&qword_2697CC418);
  uint64_t v5 = sub_24B682E10();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
      uint64_t result = sub_24B682750();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_24B5A1060(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24B682410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_24B5A0C64();
  }
  else
  {
    if (v11 > v10)
    {
      sub_24B5A1300();
      goto LABEL_12;
    }
    sub_24B5A15A4();
  }
  uint64_t v12 = *v3;
  sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
  uint64_t v13 = sub_24B682750();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24B5A2198(&qword_2697CC410, MEMORY[0x263F07508]);
      char v21 = sub_24B682780();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_24B682FE0();
  __break(1u);
  return result;
}

void *sub_24B5A1300()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B682410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC418);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24B682E00();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24B5A15A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B682410();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_24B562F04(&qword_2697CC418);
  uint64_t v7 = sub_24B682E10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
    uint64_t result = sub_24B682750();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24B5A1954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5A19B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_24B682750();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    int64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    unint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_24B5A2198(&qword_2697CC410, MEMORY[0x263F07508]);
      char v19 = sub_24B682780();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *unint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24B5A1300();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_24B5A1C98(v12);
    *unint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_24B5A1C98(int64_t a1)
{
  uint64_t v3 = sub_24B682410();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_24B682D90();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      int64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_24B5A2198(&qword_2697CC408, MEMORY[0x263F07508]);
        uint64_t v21 = sub_24B682750();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_24B5A1FB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for ObjectCaptureSession.Mesh.Anchor(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5A210C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 112, 15);
}

void sub_24B5A2154()
{
  sub_24B590678((uint64_t *)(v0 + 16), *(void *)(v0 + 104));
}

uint64_t sub_24B5A2160(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B5A2198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5A21E0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundData);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_mainQueueData;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *((unsigned char *)v1 + 96);
  *(_OWORD *)(v3 + 32) = *((_OWORD *)v1 + 5);
  *(unsigned char *)(v3 + 48) = v4;
  char v5 = *((unsigned char *)v1 + 128);
  *(_OWORD *)(v3 + 64) = *((_OWORD *)v1 + 7);
  *(unsigned char *)(v3 + 80) = v5;
  *(void *)(v3 + 24) = v1[2];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v3 + 88) = v1[17];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount);
  BOOL v8 = __OFSUB__(v7, 1);
  uint64_t v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(v0 + OBJC_IVAR____TtC6CoreOC19FreeformMeshManager_backgroundTaskCount) = v9;
  if (v9) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_24B5A22D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

__n128 initializeWithCopy for FreeformMeshManager.MeshRefinementParameters(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MeshRefinementParameters(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[41]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FreeformMeshManager.MeshRefinementParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MeshRefinementParameters()
{
  return &type metadata for FreeformMeshManager.MeshRefinementParameters;
}

uint64_t getEnumTagSinglePayload for FreeformMeshManager.MeshRefinementType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FreeformMeshManager.MeshRefinementType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B5A2508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FreeformMeshManager.MeshRefinementType()
{
  return &type metadata for FreeformMeshManager.MeshRefinementType;
}

unint64_t sub_24B5A2544()
{
  unint64_t result = qword_2697CDF70[0];
  if (!qword_2697CDF70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697CDF70);
  }
  return result;
}

uint64_t sub_24B5A25B8(uint64_t a1, uint64_t a2)
{
  return sub_24B5A2604(a1, a2);
}

uint64_t sub_24B5A2604(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v35[1] = *(CVPixelBufferPoolRef *)MEMORY[0x263EF8340];
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_24B562F04(&qword_2697CC510);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24B685D70;
  BOOL v7 = (void *)*MEMORY[0x263F04180];
  type metadata accessor for CFString(0);
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = v8;
  *(void *)(v6 + 32) = v7;
  uint64_t v10 = MEMORY[0x263F8E8F8];
  *(_DWORD *)(v6 + 64) = 1717855600;
  unint64_t v11 = (void *)*MEMORY[0x263F04240];
  *(void *)(v6 + 88) = v10;
  *(void *)(v6 + 96) = v11;
  uint64_t v12 = MEMORY[0x263F8D9D0];
  uint64_t v13 = (void **)MEMORY[0x263F04118];
  *(void *)(v6 + 120) = v8;
  *(void *)(v6 + 128) = a1;
  unint64_t v14 = *v13;
  *(void *)(v6 + 152) = v12;
  *(void *)(v6 + 160) = v14;
  *(void *)(v6 + 184) = v8;
  *(void *)(v6 + 192) = a2;
  uint64_t v15 = (void *)*MEMORY[0x263F042C0];
  *(void *)(v6 + 248) = v8;
  *(void *)(v6 + 216) = v12;
  *(void *)(v6 + 224) = v15;
  uint64_t v16 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v6 + 256) = 1;
  uint64_t v17 = (void *)*MEMORY[0x263F04130];
  *(void *)(v6 + 312) = v8;
  *(void *)(v6 + 280) = v16;
  *(void *)(v6 + 288) = v17;
  id v18 = objc_allocWithZone(NSDictionary);
  id v19 = v7;
  id v20 = v11;
  id v21 = v14;
  id v22 = v15;
  id v23 = v17;
  id v24 = objc_msgSend(v18, sel_init);
  *(void *)(v6 + 344) = sub_24B5A288C();
  *(void *)(v6 + 320) = v24;
  CFDictionaryRef v25 = (const __CFDictionary *)sub_24B682AF0();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24B6856B0;
  uint64_t v27 = (void *)*MEMORY[0x263F041C0];
  uint64_t v28 = MEMORY[0x263F8D6C8];
  *(void *)(v26 + 32) = *MEMORY[0x263F041C0];
  *(void *)(v26 + 56) = v9;
  *(void *)(v26 + 64) = 1;
  uint64_t v29 = (void *)*MEMORY[0x263F041A8];
  *(void *)(v26 + 88) = v28;
  *(void *)(v26 + 96) = v29;
  *(void *)(v26 + 152) = v28;
  *(void *)(v26 + 120) = v9;
  *(void *)(v26 + 128) = 3;
  id v30 = v27;
  id v31 = v29;
  CFDictionaryRef v32 = (const __CFDictionary *)sub_24B682AF0();
  v35[0] = 0;
  uint64_t result = CVPixelBufferPoolCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v32, v25, v35);
  if (result)
  {

    type metadata accessor for ImageFilter();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if (v35[0])
  {
    uint64_t v34 = v35[0];

    *(void *)(v3 + 32) = v34;
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5A288C()
{
  unint64_t result = qword_2697CC518;
  if (!qword_2697CC518)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CC518);
  }
  return result;
}

uint64_t type metadata accessor for ImageFilter()
{
  return self;
}

uint64_t sub_24B5A28F0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24B5A2928()
{
  return sub_24B5A2964();
}

uint64_t sub_24B5A2964()
{
  swift_retain();
  uint64_t result = OCImageFilterBilateralCreate();
  if (result)
  {
    swift_release();
    type metadata accessor for BilateralImageFilter();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B5A2A34()
{
  uint64_t result = OCImageFilterDestroy();
  if (result)
  {
    __break(1u);
  }
  else
  {

    return swift_deallocClassInstance();
  }
  return result;
}

BOOL sub_24B5A2A7C()
{
  return OCImageFilterStart() == 0;
}

BOOL sub_24B5A2AA0()
{
  return OCImageFilterStop() == 0;
}

CVPixelBufferRef sub_24B5A2AC4()
{
  v4[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  v4[0] = 0;
  CVReturn PixelBuffer = CVPixelBufferPoolCreatePixelBuffer((CFAllocatorRef)*MEMORY[0x263EFFB08], *(CVPixelBufferPoolRef *)(v0 + 32), v4);
  CVPixelBufferRef v2 = v4[0];
  if (PixelBuffer || OCImageFilterApplyFilter())
  {

    return 0;
  }
  return v2;
}

void sub_24B5A2B64()
{
}

CVPixelBufferRef sub_24B5A2B94()
{
  v4[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  v4[0] = 0;
  CVReturn PixelBuffer = CVPixelBufferPoolCreatePixelBuffer((CFAllocatorRef)*MEMORY[0x263EFFB08], *(CVPixelBufferPoolRef *)(v0 + 32), v4);
  CVPixelBufferRef v2 = v4[0];
  if (PixelBuffer || OCImageFilterApplyCrossBilateralFilter())
  {

    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for BilateralImageFilter()
{
  return self;
}

__n128 initializeWithCopy for BilateralImageFilter.BilateralImageFilterConfig(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for BilateralImageFilter.BilateralImageFilterConfig(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BilateralImageFilter.BilateralImageFilterConfig(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BilateralImageFilter.BilateralImageFilterConfig()
{
  return &type metadata for BilateralImageFilter.BilateralImageFilterConfig;
}

uint64_t type metadata accessor for CrossBilateralImageFilter()
{
  return self;
}

void type metadata accessor for OCImageFilterType(uint64_t a1)
{
}

uint64_t sub_24B5A2D10()
{
  uint64_t result = sub_24B5A2F28((uint64_t)&unk_26FE8CEA8);
  qword_2697CE088 = result;
  return result;
}

BOOL sub_24B5A2D38(CVPixelBufferRef pixelBuffer)
{
  if (qword_2697CE080 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2697CE088;
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(pixelBuffer);

  return sub_24B5A2DAC(PixelFormatType, v2);
}

BOOL sub_24B5A2DAC(unsigned int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = MEMORY[0x24C5D5160](*(void *)(a2 + 40), a1, 4);
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_24B5A2E7C(__CVBuffer *a1)
{
  return CVPixelBufferGetPixelFormatType(a1) == 1751410032
      || CVPixelBufferGetPixelFormatType(a1) == 1717855600
      || CVPixelBufferGetPixelFormatType(a1) == 1751411059
      || CVPixelBufferGetPixelFormatType(a1) == 1717856627;
}

BOOL sub_24B5A2F00(__CVBuffer *a1)
{
  return CVPixelBufferGetPixelFormatType(a1) == 1278226488;
}

uint64_t sub_24B5A2F28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC528);
    uint64_t v3 = sub_24B682E20();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = *(void *)(v3 + 40);
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      unsigned int v9 = *(_DWORD *)(v6 + 4 * v4);
      uint64_t result = MEMORY[0x24C5D5160](v7, v9, 4);
      unint64_t v11 = result & v8;
      unint64_t v12 = (result & (unint64_t)v8) >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * v12);
      uint64_t v14 = 1 << (result & v8);
      uint64_t v15 = *(void *)(v3 + 48);
      if ((v14 & v13) != 0)
      {
        while (*(_DWORD *)(v15 + 4 * v11) != v9)
        {
          unint64_t v11 = (v11 + 1) & v8;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v12) = v14 | v13;
        *(_DWORD *)(v15 + 4 * v11) = v9;
        uint64_t v16 = *(void *)(v3 + 16);
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v18;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_24B5A304C()
{
  return 0;
}

double sub_24B5A305C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FE0000000000000;
  double result = 3.80295244e30;
  *(_OWORD *)(a1 + 8) = xmmword_24B685E40;
  return result;
}

uint64_t sub_24B5A3074(float *a1)
{
  return sub_24B5A30B0(a1);
}

uint64_t sub_24B5A30B0(float *a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v2 + 48) = 0;
  uint64_t v8 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  unsigned int v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134350080;
    *(void *)&long long v13 = *(void *)a1;
    sub_24B682CD0();
    *(_WORD *)(v11 + 12) = 2050;
    *(double *)&long long v13 = a1[2];
    sub_24B682CD0();
    *(_WORD *)(v11 + 22) = 2050;
    *(double *)&long long v13 = a1[3];
    sub_24B682CD0();
    *(_WORD *)(v11 + 32) = 2050;
    *(double *)&long long v13 = a1[4];
    sub_24B682CD0();
    *(_WORD *)(v11 + 42) = 2050;
    *(double *)&long long v13 = a1[5];
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "ExplicitFeedbackManager: ExplicitFeedback Configuration: motionTimeWindow %{public}f, isoThresholdLowLight %{public}f, isoThresholdTooDark %{public}f, ratioObjectInFOVThreshold %{public}f, tooFarRatioBoxAreaToImgArea %{public}f", (uint8_t *)v11, 0x34u);
    MEMORY[0x24C5D6C00](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = 0;
  long long v13 = *(_OWORD *)a1;
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t result = OCExplicitFeedbackCreate();
  if (result)
  {
    type metadata accessor for ExplicitFeedbackManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(void *)(v2 + 32) = *((void *)a1 + 2);
  if (v15)
  {
    *(void *)(v2 + 40) = v15;
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5A3374()
{
  uint64_t result = OCExplicitFeedbackDestroy();
  if (result)
  {
    __break(1u);
  }
  else
  {
    return swift_deallocClassInstance();
  }
  return result;
}

uint64_t sub_24B5A33B4()
{
  if (*(unsigned char *)(v0 + 48)) {
    return 1;
  }
  if (OCExplicitFeedbackStart()) {
    return 0;
  }
  uint64_t result = 1;
  *(unsigned char *)(v0 + 48) = 1;
  return result;
}

uint64_t sub_24B5A33FC()
{
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    if (OCExplicitFeedbackStop()) {
      return 0;
    }
    *(unsigned char *)(v0 + 48) = 0;
  }
  return 1;
}

uint64_t sub_24B5A343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(v6 + 48) != 1) {
    return 0;
  }
  sub_24B5A3A44(a4, (uint64_t)&v25);
  if ((v26 & 1) != 0
    || (sub_24B5A3A44(a5, (uint64_t)&v23), v24 == 1)
    || !a2
    || (sub_24B5A3A44(a3, (uint64_t)&v21), (v22 & 1) != 0))
  {
    if (OCExplicitFeedbackProcess()) {
      return 0;
    }
  }
  else
  {
    sub_24B5A3C18((uint64_t)&unk_26FE8CED8);
    double v14 = v13;
    swift_retain();
    uint64_t Size = OCDataBufferGetSize();
    uint64_t v16 = (void *)sub_24B5A384C(Size, v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_24B5A3934(0, v16[2], 0, v16);
    }
    int v17 = OCExplicitFeedbackProcess();
    sub_24B682FB0();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v18 = swift_dynamicCastClass();
    if (!v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
    uint64_t v19 = *(void *)(v18 + 16);
    swift_release();
    if (v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_24B5A3AAC((uint64_t)v16, (uint64_t)(v16 + 4), 0, 1uLL);
      swift_release();
    }
    else
    {
      uint64_t v20 = swift_dynamicCastClass();
      swift_release();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x263F8EE78];
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(a6 + 8) = v20;
    if (v17) {
      return 0;
    }
  }
  *(unsigned char *)a6 = 0;
  v11.i64[0] = *(void *)&vshl_u16((uint16x4_t)vdup_n_s16(0), (uint16x4_t)0xFFFDFFFEFFFBFFFFLL) & 0xFF01FF01FF01FF01;
  *(_DWORD *)(a6 + 1) = vmovn_s16(v11).u32[0];
  *(unsigned char *)(a6 + 5) = 0;
  return 1;
}

uint64_t sub_24B5A384C(uint64_t a1, double a2)
{
  if (a1 < 0)
  {
    uint64_t result = sub_24B682EE0();
    __break(1u);
  }
  else if (a1)
  {
    sub_24B562F04(&qword_2697CC540);
    uint64_t result = sub_24B6829F0();
    uint64_t v5 = 0;
    *(void *)(result + 16) = a1;
    do
    {
      uint64_t v6 = result + 8 * v5++;
      *(double *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t type metadata accessor for ExplicitFeedbackManager()
{
  return self;
}

void *sub_24B5A3934(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC538);
      os_log_type_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      double v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      os_log_type_t v10 = (void *)MEMORY[0x263F8EE78];
      double v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B565114(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5A3A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5A3AAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        double v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_24B562F04(&qword_2697CC538);
      uint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5A3C18(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 2;
    if ((unint64_t)(v1 - 1) < 2) {
      uint64_t v3 = v1 - 1;
    }
    uint64_t v4 = 0;
    do
    {
      if ((unint64_t)(v1 - 1) > 1)
      {
        __break(1u);
        goto LABEL_10;
      }
      int v5 = *(_DWORD *)(result + 32 + 4 * v2);
      uint64_t v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v2 & 1))) = v5;
      uint64_t v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t destroy for ExplicitFeedbackInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s6CoreOC20ExplicitFeedbackInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExplicitFeedbackInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExplicitFeedbackInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExplicitFeedbackInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExplicitFeedbackInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExplicitFeedbackInfo()
{
  return &type metadata for ExplicitFeedbackInfo;
}

void type metadata accessor for OCExplicitFeedbackConfig(uint64_t a1)
{
}

void sub_24B5A3E48()
{
  byte_2697CE098 = 1;
  qword_2697CE0A0 = 0xE100000000000000;
}

void sub_24B5A3E64()
{
  byte_2697CE0B0 = 1;
  qword_2697CE0B8 = 0xE100000000000000;
}

void sub_24B5A3E80()
{
  byte_2697CE0C8 = 1;
  qword_2697CE0D0 = 0xE100000000000000;
}

_OWORD *sub_24B5A3E9C@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>, double a7@<D4>)
{
  long long v7 = result[1];
  long long v8 = result[2];
  *(_OWORD *)a2 = *result;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v8;
  *(__n128 *)(a2 + 48) = a3;
  *(__n128 *)(a2 + 64) = a4;
  *(__n128 *)(a2 + 80) = a5;
  *(__n128 *)(a2 + 96) = a6;
  *(double *)(a2 + 112) = a7;
  return result;
}

unint64_t sub_24B5A3EBC()
{
  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684FC0;
  if (qword_2697CE090 != -1) {
    swift_once();
  }
  uint64_t v2 = 48;
  if (!byte_2697CE098) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = qword_2697CE0A0;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v3;
  long long v4 = *(_OWORD *)(v0 + 16);
  v19[0] = *(_OWORD *)v0;
  v19[1] = v4;
  v19[2] = *(_OWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_24B5F8728((uint64_t)v19);
  uint64_t v6 = v5;
  uint64_t v7 = sub_24B562F04((uint64_t *)&unk_2697CD110);
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 48) = v6;
  if (qword_2697CE0A8 != -1) {
    swift_once();
  }
  uint64_t v8 = 49;
  if (!byte_2697CE0B0) {
    uint64_t v8 = 0;
  }
  uint64_t v9 = qword_2697CE0B8;
  *(void *)(inited + 80) = v8;
  *(void *)(inited + 88) = v9;
  int8x16_t v17 = *(int8x16_t *)(v0 + 64);
  int8x16_t v18 = *(int8x16_t *)(v0 + 48);
  int8x16_t v15 = *(int8x16_t *)(v0 + 96);
  int8x16_t v16 = *(int8x16_t *)(v0 + 80);
  swift_bridgeObjectRetain();
  sub_24B5F87F0(v18, v17, v16, v15);
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v10;
  if (qword_2697CE0C0 != -1) {
    swift_once();
  }
  uint64_t v11 = 50;
  uint64_t v12 = qword_2697CE0D0;
  if (!byte_2697CE0C8) {
    uint64_t v11 = 0;
  }
  *(void *)(inited + 128) = v11;
  *(void *)(inited + 136) = v12;
  sub_24B562F04(&qword_2697CC550);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24B6856B0;
  *(void *)(v13 + 32) = *(void *)(v0 + 112);
  *(void *)(inited + 168) = sub_24B562F04(&qword_2697CC558);
  *(void *)(inited + 144) = v13;
  swift_bridgeObjectRetain();
  return sub_24B560D28(inited);
}

void sub_24B5A40B8()
{
  byte_2697CE0E0 = 1;
  qword_2697CE0E8 = 0xE100000000000000;
}

double sub_24B5A40D4()
{
  swift_beginAccess();
  return *(double *)(v0 + 16);
}

uint64_t sub_24B5A4108(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_24B5A4148())()
{
  return j_j__swift_endAccess;
}

void sub_24B5A419C()
{
  byte_2697CE0F8 = 1;
  qword_2697CE100 = 0xE100000000000000;
}

id sub_24B5A41B8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 24);

  return v1;
}

void sub_24B5A41FC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = a1;
}

void sub_24B5A4244()
{
  byte_2697CE110 = 1;
  qword_2697CE118 = 0xE100000000000000;
}

__n128 sub_24B5A4260@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  __n128 result = *(__n128 *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 48);
  long long v5 = *(_OWORD *)(v1 + 64);
  long long v6 = *(_OWORD *)(v1 + 80);
  long long v7 = *(_OWORD *)(v1 + 96);
  long long v8 = *(_OWORD *)(v1 + 112);
  long long v9 = *(_OWORD *)(v1 + 128);
  uint64_t v10 = *(void *)(v1 + 144);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = v10;
  return result;
}

__n128 sub_24B5A42C4(uint64_t a1)
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 112) = v3;
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 96);
  *(void *)(v1 + 144) = *(void *)(a1 + 112);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(v1 + 64) = result;
  *(_OWORD *)(v1 + 80) = v6;
  return result;
}

uint64_t (*sub_24B5A4328())()
{
  return j_j__swift_endAccess;
}

__n128 sub_24B5A437C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  *(double *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a1;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v6 + 112) = v7;
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a2 + 96);
  *(void *)(v6 + 144) = *(void *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 48) = v8;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(__n128 *)(v6 + 64) = result;
  *(_OWORD *)(v6 + 80) = v10;
  return result;
}

void sub_24B5A43F4(uint64_t a1)
{
}

void sub_24B5A4430(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697CE0D8 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
LABEL_33:
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_34;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_33;
  }
LABEL_3:
  uint64_t v8 = qword_2697CE0E8;
  if (byte_2697CE0E0) {
    uint64_t v9 = 48;
  }
  else {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_24B562E8C(v9, v8);
  if ((v11 & 1) == 0)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  sub_24B562F48(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    sub_24B5A55F0((uint64_t)&v38);
    goto LABEL_36;
  }
  sub_24B5A5674();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  uint64_t v12 = (void *)v37[0];
  if (qword_2697CE0F0 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_11;
    }
LABEL_40:
    long long v38 = 0u;
    long long v39 = 0u;

    goto LABEL_34;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_40;
  }
LABEL_11:
  uint64_t v13 = qword_2697CE100;
  if (byte_2697CE0F8) {
    uint64_t v14 = 49;
  }
  else {
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_24B562E8C(v14, v13);
  if (v16)
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {

    goto LABEL_34;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_29;
  }
  uint64_t v18 = v37[0];
  unint64_t v17 = v37[1];
  if (qword_2697CE108 != -1)
  {
    swift_once();
    if (*(void *)(a1 + 16)) {
      goto LABEL_22;
    }
LABEL_42:
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_43;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_42;
  }
LABEL_22:
  uint64_t v35 = v18;
  unint64_t v36 = v17;
  uint64_t v19 = v12;
  uint64_t v20 = qword_2697CE118;
  if (byte_2697CE110) {
    uint64_t v21 = 50;
  }
  else {
    uint64_t v21 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_24B562E8C(v21, v20);
  if (v23)
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v22, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v19;
  uint64_t v18 = v35;
  unint64_t v17 = v36;
LABEL_43:
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {

    sub_24B586220(v18, v17);
    goto LABEL_35;
  }
  sub_24B562F04(&qword_2697CC060);
  if (swift_dynamicCast())
  {
    sub_24B5A4DBC(v37[0], (uint64_t)v37);
    sub_24B5A5588((uint64_t)v37, (uint64_t)&v38);
    if (sub_24B5A56B4((uint64_t)&v38) != 1)
    {
      long long v50 = v42;
      long long v51 = v43;
      long long v52 = v44;
      uint64_t v53 = v45;
      long long v46 = v38;
      long long v47 = v39;
      long long v48 = v40;
      long long v49 = v41;
      objc_msgSend(v12, sel_doubleValue);
      *(void *)(v2 + 16) = v28;
      uint64_t v29 = (void *)sub_24B682310();
      DepthPointCloudDataBuffer = (void *)OCNonModularSPI_NSData_CreateDepthPointCloudDataBuffer();

      if (DepthPointCloudDataBuffer)
      {
        id v31 = DepthPointCloudDataBuffer;

        sub_24B586220(v18, v17);
        *(void *)(v2 + 24) = v31;
        long long v32 = v51;
        *(_OWORD *)(v2 + 96) = v50;
        *(_OWORD *)(v2 + 112) = v32;
        *(_OWORD *)(v2 + 128) = v52;
        *(void *)(v2 + 144) = v53;
        long long v33 = v47;
        *(_OWORD *)(v2 + 32) = v46;
        *(_OWORD *)(v2 + 48) = v33;
        long long v34 = v49;
        *(_OWORD *)(v2 + 64) = v48;
        *(_OWORD *)(v2 + 80) = v34;
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_24B586220(v18, v17);
  }
  else
  {

    sub_24B586220(v18, v17);
  }
LABEL_36:
  uint64_t v24 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
  long long v25 = sub_24B6824B0();
  os_log_type_t v26 = sub_24B682B20();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_24B55E000, v25, v26, "Temporal pointcloud: Failed to initialize temporal LiDAR point cloud data from dictionary!", v27, 2u);
    MEMORY[0x24C5D6C00](v27, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for TemporalDepthPointCloud();
  swift_deallocPartialClassInstance();
}

unint64_t sub_24B5A4998()
{
  void (*v16)(void *__return_ptr, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void v21[16];

  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)v0 + 128))();
  id v2 = (id)OCNonModularSPI_Serialization_CVBufferToData();

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_24B682320();
  unint64_t v5 = v4;

  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684FC0;
  if (qword_2697CE0D8 != -1) {
    swift_once();
  }
  uint64_t v7 = 48;
  if (!byte_2697CE0E0) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = qword_2697CE0E8;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = *(double (**)(uint64_t))(*(void *)v0 + 104);
  uint64_t v10 = swift_bridgeObjectRetain();
  double v11 = v9(v10);
  *(void *)(inited + 72) = MEMORY[0x263F8D538];
  *(double *)(inited + 48) = v11;
  if (qword_2697CE0F0 != -1) {
    swift_once();
  }
  uint64_t v12 = 49;
  if (!byte_2697CE0F8) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = qword_2697CE100;
  *(void *)(inited + 80) = v12;
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 120) = MEMORY[0x263F06F78];
  *(void *)(inited + 96) = v3;
  *(void *)(inited + 104) = v5;
  swift_bridgeObjectRetain();
  sub_24B586340(v3, v5);
  if (qword_2697CE108 != -1) {
    swift_once();
  }
  uint64_t v14 = 50;
  if (!byte_2697CE110) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = qword_2697CE118;
  *(void *)(inited + 128) = v14;
  *(void *)(inited + 136) = v15;
  char v16 = *(void (**)(void *__return_ptr, uint64_t))(*(void *)v0 + 152);
  unint64_t v17 = swift_bridgeObjectRetain();
  v16(v21, v17);
  uint64_t v18 = sub_24B5A3EBC();
  *(void *)(inited + 168) = sub_24B562F04(&qword_2697CC060);
  *(void *)(inited + 144) = v18;
  uint64_t v19 = sub_24B560D28(inited);
  sub_24B586220(v3, v5);
  return v19;
}

uint64_t sub_24B5A4C04()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24B5A4C3C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24B5A4C5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24B5A4C5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_24B562F04(&qword_2697CCE00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

void sub_24B5A4DBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2697CE090 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
LABEL_32:
    long long v74 = 0u;
    long long v75 = 0u;
    goto LABEL_33;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_32;
  }
LABEL_3:
  uint64_t v8 = qword_2697CE0A0;
  if (byte_2697CE098) {
    uint64_t v9 = 48;
  }
  else {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_24B562E8C(v9, v8);
  if ((v11 & 1) == 0)
  {
    long long v74 = 0u;
    long long v75 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_24B562F48(*(void *)(a1 + 56) + 32 * v10, (uint64_t)&v74);
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1))
  {
LABEL_33:
    swift_bridgeObjectRelease();
    sub_24B5A55F0((uint64_t)&v74);
    goto LABEL_34;
  }
  sub_24B562F04(&qword_2697CC568);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v23 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B20();
    if (os_log_type_enabled(v24, v25))
    {
      os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v26 = 0;
      _os_log_impl(&dword_24B55E000, v24, v25, "Temporal pointcloud: Failed to initialize LiDAR point cloud camera from dictionary!", v26, 2u);
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24B5A5774((uint64_t)v71);
    goto LABEL_37;
  }
  unint64_t v12 = *(void *)&v71[0];
  if (qword_2697CE0A8 == -1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_11;
    }
LABEL_39:
    long long v74 = 0u;
    long long v75 = 0u;
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_once();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_39;
  }
LABEL_11:
  v70.n128_u64[0] = v12;
  uint64_t v13 = qword_2697CE0B8;
  if (byte_2697CE0B0) {
    uint64_t v14 = 49;
  }
  else {
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_24B562E8C(v14, v13);
  if (v16)
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  unint64_t v17 = v70.n128_u64[0];
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1)) {
    goto LABEL_40;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)&v71[0];
  if (qword_2697CE0C0 != -1)
  {
    swift_once();
    if (*(void *)(a1 + 16)) {
      goto LABEL_22;
    }
LABEL_42:
    long long v74 = 0u;
    long long v75 = 0u;
    goto LABEL_43;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_42;
  }
LABEL_22:
  uint64_t v69 = v18;
  uint64_t v19 = qword_2697CE0D0;
  if (byte_2697CE0C8) {
    uint64_t v20 = 50;
  }
  else {
    uint64_t v20 = 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_24B562E8C(v20, v19);
  if (v22)
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v21, (uint64_t)&v74);
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  swift_bridgeObjectRelease();
  unint64_t v18 = v69;
  unint64_t v17 = v70.n128_u64[0];
LABEL_43:
  swift_bridgeObjectRelease();
  if (!*((void *)&v75 + 1)) {
    goto LABEL_40;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v69 = *(void *)&v71[0];
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24B682F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (v27)
  {
    *(void *)&long long v74 = MEMORY[0x263F8EE78];
    sub_24B5A4C3C(0, v27 & ~(v27 >> 63), 0);
    if (v27 < 0)
    {
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    uint64_t v29 = 0;
    uint64_t v30 = v74;
    unint64_t v31 = v17 & 0xC000000000000001;
    do
    {
      if (v31) {
        id v32 = (id)MEMORY[0x24C5D4F60](v29, v17);
      }
      else {
        id v32 = *(id *)(v17 + 8 * v29 + 32);
      }
      long long v33 = v32;
      objc_msgSend(v32, sel_floatValue);
      int v35 = v34;

      *(void *)&long long v74 = v30;
      unint64_t v37 = *(void *)(v30 + 16);
      unint64_t v36 = *(void *)(v30 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_24B5A4C3C(v36 > 1, v37 + 1, 1);
        uint64_t v30 = v74;
      }
      ++v29;
      *(void *)(v30 + 16) = v37 + 1;
      *(_DWORD *)(v30 + 4 * v37 + 32) = v35;
      unint64_t v17 = v70.n128_u64[0];
    }
    while (v27 != v29);
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  sub_24B5F879C(v30, v73, v38, v39, v40);
  __n128 v70 = v73[0];
  __n128 v67 = v73[2];
  __n128 v68 = v73[1];
  swift_bridgeObjectRelease();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_24B682F00();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_62;
    }
LABEL_73:
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x263F8EE78];
    goto LABEL_74;
  }
  uint64_t v41 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v41) {
    goto LABEL_73;
  }
LABEL_62:
  *(void *)&long long v74 = v28;
  sub_24B5A4C3C(0, v41 & ~(v41 >> 63), 0);
  if (v41 < 0)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  uint64_t v42 = 0;
  uint64_t v43 = v74;
  unint64_t v44 = v18;
  unint64_t v45 = v18 & 0xC000000000000001;
  do
  {
    if (v45) {
      id v46 = (id)MEMORY[0x24C5D4F60](v42, v44);
    }
    else {
      id v46 = *(id *)(v44 + 8 * v42 + 32);
    }
    long long v47 = v46;
    objc_msgSend(v46, sel_floatValue);
    int v49 = v48;

    *(void *)&long long v74 = v43;
    unint64_t v51 = *(void *)(v43 + 16);
    unint64_t v50 = *(void *)(v43 + 24);
    if (v51 >= v50 >> 1)
    {
      sub_24B5A4C3C(v50 > 1, v51 + 1, 1);
      uint64_t v43 = v74;
    }
    ++v42;
    *(void *)(v43 + 16) = v51 + 1;
    *(_DWORD *)(v43 + 4 * v51 + 32) = v49;
  }
  while (v41 != v42);
  swift_bridgeObjectRelease();
LABEL_74:
  sub_24B5F88AC(v43);
  long long v65 = v53;
  long long v66 = v52;
  long long v63 = v55;
  long long v64 = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v69;
  if ((v69 & 0xC000000000000001) != 0)
  {
    id v57 = (id)MEMORY[0x24C5D4F60](0, v69);
    goto LABEL_77;
  }
  if (!*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_84;
  }
  id v57 = *(id *)(v69 + 32);
LABEL_77:
  double v58 = v57;
  unsigned int v59 = objc_msgSend(v57, sel_unsignedIntValue);

  if ((v56 & 0xC000000000000001) != 0)
  {
    id v60 = (id)MEMORY[0x24C5D4F60](1, v56);
LABEL_81:
    uint64_t v61 = v60;
    swift_bridgeObjectRelease();
    unsigned int v62 = objc_msgSend(v61, sel_unsignedIntValue);

    v71[0] = v70;
    v71[1] = v68;
    v71[2] = v67;
    _OWORD v71[3] = v66;
    v71[4] = v65;
    v71[5] = v64;
    v71[6] = v63;
    unint64_t v72 = __PAIR64__(v62, v59);
    sub_24B5A5798((uint64_t)v71);
LABEL_37:
    sub_24B5A5588((uint64_t)v71, (uint64_t)&v74);
    sub_24B5A5588((uint64_t)&v74, a2);
    return;
  }
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v60 = *(id *)(v56 + 40);
    goto LABEL_81;
  }
LABEL_86:
  __break(1u);
}

uint64_t sub_24B5A5588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5A55F0(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04((uint64_t *)&unk_2697CCA30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TemporalDepthPointCloud()
{
  return self;
}

unint64_t sub_24B5A5674()
{
  unint64_t result = qword_2697CC560;
  if (!qword_2697CC560)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697CC560);
  }
  return result;
}

uint64_t sub_24B5A56B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

__n128 initializeWithCopy for TemporalDepthPointCloud.Camera(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TemporalDepthPointCloud.Camera(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TemporalDepthPointCloud.Camera(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 120) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TemporalDepthPointCloud.Camera()
{
  return &type metadata for TemporalDepthPointCloud.Camera;
}

double sub_24B5A5774(uint64_t a1)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 120) = 1;
  return result;
}

uint64_t sub_24B5A5798(uint64_t result)
{
  *(unsigned char *)(result + 120) = 0;
  return result;
}

uint64_t sub_24B5A57A4()
{
  return swift_weakLoadStrong();
}

uint64_t sub_24B5A57E8()
{
  return swift_release();
}

void (*sub_24B5A583C(void *a1))(void **a1, char a2)
{
  char v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_24B5A58B8;
}

void sub_24B5A58B8(void **a1, char a2)
{
  char v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }

  free(v3);
}

uint64_t sub_24B5A5938()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t sub_24B5A596C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return result;
}

double sub_24B5A59AC()
{
  swift_beginAccess();
  return *(double *)(v0 + 32);
}

uint64_t sub_24B5A59E0(double a1)
{
  uint64_t result = swift_beginAccess();
  *(double *)(v1 + 32) = a1;
  return result;
}

uint64_t sub_24B5A5A20(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  swift_weakAssign();
  swift_release();
  *(void *)(v5 + 24) = a3;
  *(double *)(v5 + 32) = a1;
  return v5;
}

uint64_t sub_24B5A5AB4()
{
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_24B5A5AEC@<X0>(char a1@<W1>, void *a2@<X8>)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v110 = (char *)&v102 - v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v102 - v11;
  uint64_t v13 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  os_log_type_t v117 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v111 = (char *)&v102 - v16;
  uint64_t v120 = sub_24B6822E0();
  uint64_t v17 = *(void *)(v120 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v120);
  os_log_type_t v107 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v118 = (char *)&v102 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v102 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v108 = (char *)&v102 - v25;
  if (a1)
  {
    QuadMeshUsdaAssetsURLs = (void *)CPGOutputGetQuadMeshUsdaAssetsURLs();
    if (!QuadMeshUsdaAssetsURLs)
    {
LABEL_3:
      uint64_t v27 = 0;
LABEL_19:
      uint64_t v41 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v41, v4);
      uint64_t v42 = sub_24B6824B0();
      os_log_type_t v43 = sub_24B682B20();
      if (os_log_type_enabled(v42, v43))
      {
        unint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v44 = 0;
        _os_log_impl(&dword_24B55E000, v42, v43, "Backend Manager: Failed to get output USDA assets!", v44, 2u);
        MEMORY[0x24C5D6C00](v44, -1, -1);
        unint64_t v45 = v27;
      }
      else
      {
        unint64_t v45 = v42;
        uint64_t v42 = v27;
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      uint64_t v46 = sub_24B562F04(&qword_2697CC570);
      long long v47 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      int v48 = a2;
      return v47(v48, 1, 1, v46);
    }
  }
  else
  {
    QuadMeshUsdaAssetsURLs = (void *)CPGOutputGetUsdaAssetsURLs();
    if (!QuadMeshUsdaAssetsURLs) {
      goto LABEL_3;
    }
  }
  id v104 = v12;
  id v28 = QuadMeshUsdaAssetsURLs;
  unint64_t v122 = 0;
  type metadata accessor for CFURL(0);
  uint64_t v29 = v28;
  sub_24B682990();
  BOOL v109 = v29;

  unint64_t v30 = v122;
  if (!v122)
  {
    uint64_t v27 = v109;
    goto LABEL_19;
  }
  if (v122 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_24B682F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v105 = a2;
  uint64_t v106 = v5;
  uint64_t v103 = v4;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
LABEL_24:
    uint64_t v49 = *(void *)(v34 + 16);
    uint64_t v50 = v120;
    unint64_t v51 = v117;
    if (v49)
    {
      long long v52 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
      uint64_t v114 = v17 + 16;
      uint64_t v115 = v52;
      unint64_t v53 = v34 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v54 = *(void *)(v17 + 72);
      long long v55 = (void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      uint64_t v119 = v17 + 48;
      long long v116 = (void (**)(char *, char *, uint64_t))(v17 + 32);
      uint64_t v112 = v54;
      os_log_type_t v113 = (void (**)(char *, uint64_t))(v17 + 8);
      swift_bridgeObjectRetain();
      while (1)
      {
        v115(v51, v53, v50);
        uint64_t v56 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v55;
        (*v55)(v51, 0, 1, v50);
        id v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))v119;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v119)(v51, 1, v50) == 1) {
          goto LABEL_34;
        }
        double v58 = v51;
        unsigned int v59 = *v116;
        (*v116)(v118, v58, v50);
        if (sub_24B6821D0() == 1633973109 && v60 == 0xE400000000000000) {
          break;
        }
        char v61 = sub_24B682FA0();
        swift_bridgeObjectRelease();
        if (v61)
        {
          swift_bridgeObjectRelease();
          uint64_t v50 = v120;
          goto LABEL_42;
        }
        uint64_t v50 = v120;
        (*v113)(v118, v120);
        v53 += v112;
        --v49;
        unint64_t v51 = v117;
        if (!v49) {
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_42:
      uint64_t v62 = (uint64_t)v111;
      v59(v111, v118, v50);
      v56(v62, 0, 1, v50);
      unsigned int v73 = v57((char *)v62, 1, v50);
      uint64_t v63 = v106;
      long long v64 = v109;
      long long v74 = v104;
      if (v73 == 1) {
        goto LABEL_35;
      }
      long long v75 = v59;
      int64_t v76 = v108;
      v75(v108, (char *)v62, v50);
      id v77 = objc_allocWithZone(MEMORY[0x263F83F00]);
      int64_t v78 = (void *)sub_24B682250();
      id v79 = objc_msgSend(v77, sel_initSceneFromURL_, v78);

      if (v79)
      {

        uint64_t v80 = sub_24B562F04(&qword_2697CC570);
        uint64_t v81 = v50;
        float32x4_t v82 = v105;
        float32x4_t v83 = (char *)v105 + *(int *)(v80 + 48);
        uint64_t v84 = *(int *)(v80 + 64);
        *uint64_t v105 = v79;
        v75(v83, v76, v81);
        *(void *)((char *)v82 + v84) = v34;
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v82, 0, 1, v80);
      }
      swift_bridgeObjectRelease();
      uint64_t v85 = sub_24B57CBE8();
      uint64_t v86 = v103;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v74, v85, v103);
      unint64_t v87 = v107;
      v115(v107, (unint64_t)v76, v50);
      char v88 = v74;
      uint64_t v89 = sub_24B6824B0();
      uint64_t v90 = v50;
      os_log_type_t v91 = sub_24B682B20();
      if (os_log_type_enabled(v89, v91))
      {
        uint64_t v92 = swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = 141558275;
        uint64_t v121 = 1752392040;
        unint64_t v122 = v93;
        sub_24B682CD0();
        *(_WORD *)(v92 + 12) = 2081;
        os_log_type_t v94 = v76;
        uint64_t v95 = v63;
        uint64_t v96 = sub_24B6822D0();
        uint64_t v121 = sub_24B5627B8(v96, v97, (uint64_t *)&v122);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v98 = *v113;
        uint64_t v99 = v120;
        (*v113)(v87, v120);
        _os_log_impl(&dword_24B55E000, v89, v91, "Backend Manager: Failed to create USKScene for USDA URL = %{private,mask.hash}s", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v93, -1, -1);
        MEMORY[0x24C5D6C00](v92, -1, -1);

        (*(void (**)(char *, uint64_t))(v95 + 8))(v104, v103);
        v98(v94, v99);
      }
      else
      {

        unint64_t v100 = *v113;
        (*v113)(v87, v90);

        (*(void (**)(char *, uint64_t))(v63 + 8))(v88, v86);
        v100(v76, v90);
      }
      uint64_t v101 = v105;
      uint64_t v46 = sub_24B562F04(&qword_2697CC570);
      long long v47 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      int v48 = v101;
      return v47(v48, 1, 1, v46);
    }
    uint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    swift_bridgeObjectRetain();
LABEL_33:
    v56((uint64_t)v51, 1, 1, v50);
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v62 = (uint64_t)v111;
    v56((uint64_t)v111, 1, 1, v50);
    uint64_t v63 = v106;
    long long v64 = v109;
LABEL_35:
    swift_bridgeObjectRelease();
    sub_24B5632A8(v62, &qword_2697CC1F0);
    uint64_t v65 = sub_24B57CBE8();
    long long v66 = v110;
    uint64_t v67 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v110, v65, v103);
    __n128 v68 = sub_24B6824B0();
    os_log_type_t v69 = sub_24B682B20();
    if (os_log_type_enabled(v68, v69))
    {
      __n128 v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)__n128 v70 = 0;
      _os_log_impl(&dword_24B55E000, v68, v69, "Backend Manager: Failed to find USDA asset", v70, 2u);
      MEMORY[0x24C5D6C00](v70, -1, -1);
      simd_float4 v71 = v64;
    }
    else
    {
      simd_float4 v71 = v68;
      __n128 v68 = v64;
    }
    unint64_t v72 = v105;

    (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v67);
    uint64_t v46 = sub_24B562F04(&qword_2697CC570);
    long long v47 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
    int v48 = v72;
    return v47(v48, 1, 1, v46);
  }
  unint64_t v122 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24B585DE4(0, v31 & ~(v31 >> 63), 0);
  if ((v31 & 0x8000000000000000) == 0)
  {
    uint64_t v33 = 0;
    uint64_t v34 = v122;
    unint64_t v35 = v30 & 0xC000000000000001;
    uint64_t v119 = v17;
    unint64_t v36 = v30;
    do
    {
      if (v35) {
        id v37 = (id)MEMORY[0x24C5D4F60](v33, v30);
      }
      else {
        id v37 = *(id *)(v30 + 8 * v33 + 32);
      }
      __n128 v38 = v37;
      sub_24B6822B0();

      unint64_t v122 = v34;
      unint64_t v40 = *(void *)(v34 + 16);
      unint64_t v39 = *(void *)(v34 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_24B585DE4(v39 > 1, v40 + 1, 1);
        uint64_t v34 = v122;
      }
      ++v33;
      *(void *)(v34 + 16) = v40 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v119 + 32))(v34+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(void *)(v119 + 72) * v40, v24, v120);
      unint64_t v30 = v36;
    }
    while (v31 != v33);
    swift_bridgeObjectRelease();
    uint64_t v17 = v119;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5A6684(void *a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  float32x4_t v31 = a4;
  float32x4_t v32 = a5;
  float32x4_t v29 = a2;
  float32x4_t v30 = a3;
  v33[2] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_data);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_arraySize);
    id v13 = objc_msgSend(v11, sel_dataNoCopy);
    uint64_t v14 = sub_24B682320();
    unint64_t v16 = v15;

    switch(v16 >> 62)
    {
      case 1uLL:
        if ((int)v14 > v14 >> 32)
        {
          __break(1u);
        }
        else
        {
          swift_retain();
          uint64_t v22 = sub_24B682090();
          if (!v22)
          {
LABEL_11:
            sub_24B6820B0();
            uint64_t v24 = (void *)v22;
LABEL_18:
            unint64_t v21 = sub_24B5A9974((unint64_t)v24, (uint64_t)v12, v29, v30, v31, v32);
LABEL_19:
            sub_24B586220(v14, v16);

            sub_24B586220(v14, v16);
            return v21;
          }
          uint64_t v23 = sub_24B6820C0();
          if (!__OFSUB__((int)v14, v23))
          {
            v22 += (int)v14 - v23;
            goto LABEL_11;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        return result;
      case 2uLL:
        uint64_t v25 = *(void *)(v14 + 16);
        sub_24B586340(v14, v16);
        swift_retain();
        swift_retain();
        unint64_t v26 = sub_24B682090();
        if (!v26) {
          goto LABEL_15;
        }
        uint64_t v27 = sub_24B6820C0();
        if (__OFSUB__(v25, v27)) {
          goto LABEL_23;
        }
        v26 += v25 - v27;
LABEL_15:
        sub_24B6820B0();
        unint64_t v21 = sub_24B5A9974(v26, (uint64_t)v12, v29, v30, v31, v32);
        swift_release();
        swift_release();
        goto LABEL_19;
      case 3uLL:
        memset(v33, 0, 14);
        goto LABEL_17;
      default:
        v33[0] = v14;
        LOWORD(v33[1]) = v16;
        BYTE2(v33[1]) = BYTE2(v16);
        BYTE3(v33[1]) = BYTE3(v16);
        BYTE4(v33[1]) = BYTE4(v16);
        BYTE5(v33[1]) = BYTE5(v16);
LABEL_17:
        uint64_t v24 = v33;
        goto LABEL_18;
    }
  }
  uint64_t v17 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  uint64_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_24B55E000, v18, v19, "Backend Manager: Failed to get the point array property data!", v20, 2u);
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

double sub_24B5A6A4C(void *a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5)
{
  float32x4_t v57 = a4;
  float32x4_t v58 = a5;
  float32x4_t v55 = a2;
  float32x4_t v56 = a3;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_nodeIterator);
  uint64_t v11 = (SEL *)&unk_2652DE000;
  id v12 = objc_msgSend(v10, sel_nextObject);
  if (!v12)
  {
    swift_unknownObjectRelease();
    return 0.0;
  }
  id v13 = v12;
  int v54 = 0;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  unint64_t v15 = (void (**)(char *, uint64_t))(v7 + 8);
  float32x2_t v16 = (float32x2_t)vdup_n_s32(0x7F800000u);
  uint64_t v59 = *MEMORY[0x263F84050];
  float32x2_t v17 = (float32x2_t)0x7F0000007FLL;
  float v18 = -INFINITY;
  float v19 = INFINITY;
  do
  {
    while (1)
    {
      self;
      uint64_t v22 = swift_dynamicCastObjCClass();
      if (v22) {
        break;
      }
      uint64_t v23 = sub_24B57CBE8();
      (*v14)(v9, v23, v6);
      uint64_t v24 = sub_24B6824B0();
      os_log_type_t v25 = sub_24B682B20();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_24B55E000, v24, v25, "Backend Manager: Failed to cast iterator in USKScene to USKNode!", v20, 2u);
        MEMORY[0x24C5D6C00](v20, -1, -1);
        unint64_t v21 = v13;
      }
      else
      {
        unint64_t v21 = v24;
        uint64_t v24 = v13;
      }

      (*v15)(v9, v6);
      id v13 = [v10 v11[160]];
      if (!v13) {
        goto LABEL_30;
      }
    }
    unint64_t v26 = (void *)v22;
    id v52 = v10;
    uint64_t v53 = v6;
    uint64_t v27 = v13;
    id v28 = objc_msgSend(v26, sel_propertyList);
    float32x4_t v29 = v11[160];
    id v60 = v28;
    id v30 = [v28 v29];
    if (!v30) {
      goto LABEL_29;
    }
    id v31 = v30;
    unint64_t v51 = v27;
    while (1)
    {
      float32x4_t v32 = (const char *)v11;
      self;
      uint64_t v33 = (void *)swift_dynamicCastObjCClass();
      if (!v33) {
        break;
      }
      uint64_t v34 = v33;
      id v35 = objc_msgSend(v33, sel_role);
      uint64_t v36 = sub_24B6827D0();
      uint64_t v38 = v37;
      if (v36 == sub_24B6827D0() && v38 == v39)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
      char v41 = sub_24B682FA0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v41)
      {
LABEL_20:
        unint64_t v42 = sub_24B5A6684(v34, v55, v56, v57, v58);
        uint64_t v44 = v43;
        uint64_t v46 = v45;
        char v48 = v47;

        if (v48) {
          goto LABEL_11;
        }
        float32x2_t v16 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v16, (float32x2_t)__PAIR64__(v44, v42)), (int8x8_t)__PAIR64__(v44, v42), (int8x8_t)v16);
        float32x2_t v17 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32((float32x2_t)__PAIR64__(HIDWORD(v44), HIDWORD(v42)), v17), (int8x8_t)__PAIR64__(HIDWORD(v44), HIDWORD(v42)), (int8x8_t)v17);
        if (v19 > *(float *)&v46) {
          float v19 = *(float *)&v46;
        }
        if (v18 <= *((float *)&v46 + 1)) {
          float v18 = *((float *)&v46 + 1);
        }
        uint64_t v11 = (SEL *)v32;
        id v31 = objc_msgSend(v60, v32 + 3632, v51);
        int v54 = 1;
        uint64_t v27 = v51;
        if (!v31) {
          goto LABEL_29;
        }
      }
      else
      {

LABEL_11:
        uint64_t v11 = (SEL *)v32;
        id v31 = objc_msgSend(v60, v32 + 3632, v51);
        if (!v31) {
          goto LABEL_28;
        }
      }
    }

LABEL_28:
    uint64_t v27 = v51;
LABEL_29:
    swift_unknownObjectRelease();

    id v10 = v52;
    id v13 = [v52 v11[160]];
    uint64_t v6 = v53;
  }
  while (v13);
LABEL_30:
  swift_unknownObjectRelease();
  if (v54)
  {
    v49.i64[0] = v16.u32[0];
    v49.i64[1] = v16.u32[1];
    *(void *)&double result = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)v17, 0x20uLL), v49).u64[0];
    return result;
  }
  return 0.0;
}

uint64_t sub_24B5A6EC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, float64_t a3@<X8>)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  id v13 = (char *)&v56 - v12;
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v56 - v14;
  if (!a1 || (uint64_t v16 = CPGSfmMapCopyBoundingBox()) == 0)
  {
    uint64_t v41 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v41, v6);
    unint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_24B55E000, v42, v43, "Backend Manager: Failed to get the initial SfM map bounding box!", v44, 2u);
      MEMORY[0x24C5D6C00](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    sub_24B56BCBC((uint64_t)v70);
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  v69.f64[0] = a3;
  CPGBoundingBoxGetTransform();
  v79[0] = v80;
  v79[1] = v81;
  void v79[2] = v82;
  v79[3] = v83;
  v79[4] = v84;
  v79[5] = v85;
  v79[6] = v86;
  v79[7] = v87;
  *(double *)v18.i64 = sub_24B5F8A08(v79);
  *(double *)v88.columns[0].i64 = sub_24B5F8CC8(v18);
  simd_float4x4 v89 = __invert_f4(v88);
  float32x4_t v67 = (float32x4_t)v89.columns[1];
  float32x4_t v68 = (float32x4_t)v89.columns[0];
  float32x4_t v65 = (float32x4_t)v89.columns[3];
  float32x4_t v66 = (float32x4_t)v89.columns[2];
  sub_24B5A6A4C(a2, (float32x4_t)v89.columns[0], (float32x4_t)v89.columns[1], (float32x4_t)v89.columns[2], (float32x4_t)v89.columns[3]);
  if ((v22 & 1) == 0)
  {
    unsigned int v23 = v19;
    unint64_t v24 = v20;
    unsigned int v25 = v21;
    float v26 = *(float *)&v19;
    unint64_t v62 = HIDWORD(v19);
    float v27 = *((float *)&v19 + 1);
    float v28 = *(float *)&v20;
    float v29 = *(float *)&v21;
    unint64_t v30 = HIDWORD(v21);
    float v31 = *((float *)&v21 + 1);
    uint64_t v32 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v15, v32, v6);
    uint64_t v33 = sub_24B6824B0();
    os_log_type_t v34 = sub_24B682B30();
    *(void *)&v64.f64[0] = v33;
    int v63 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v57 = HIDWORD(v24);
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(void *)&v70[0] = v60;
      uint64_t v61 = v17;
      *(_DWORD *)id v35 = 136315138;
      float32x4_t v58 = v35 + 4;
      uint64_t v59 = v35;
      *(void *)&v80.f64[0] = __PAIR64__(v62, v23);
      *(void *)&v80.f64[1] = __PAIR64__(v57, v24);
      *(void *)&v81.f64[0] = __PAIR64__(v30, v25);
      uint64_t v36 = sub_24B682820();
      *(void *)&v80.f64[0] = sub_24B5627B8(v36, v37, (uint64_t *)v70);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      float64_t v38 = v64.f64[0];
      uint64_t v39 = v59;
      _os_log_impl(&dword_24B55E000, *(os_log_t *)&v64.f64[0], (os_log_type_t)v63, "Found recenter mesh bounds: %s", v59, 0xCu);
      uint64_t v40 = v60;
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v40, -1, -1);
      MEMORY[0x24C5D6C00](v39, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    a3 = v69.f64[0];
    v49.f32[0] = (float)(v26 + v27) * -0.5;
    v49.f32[1] = -v28;
    float64x2_t v69 = vcvtq_f64_f32(v49);
    __asm { FMOV            V1.2D, #1.0 }
    _Q1.f64[0] = (float)((float)(v29 + v31) * -0.5);
    float64x2_t v64 = _Q1;
    sub_24B5F89D4(&v71, v68, v67, v66, v65);
    v70[0] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_24B685F20, v71.f64[0]), (float64x2_t)xmmword_24B685F30, v71, 1), (float64x2_t)0, v72.f64[0]), v69, v72, 1);
    v70[1] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v71.f64[0]), (float64x2_t)0, v71, 1), (float64x2_t)xmmword_24B685F20, v72.f64[0]), v64, v72, 1);
    v70[2] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_24B685F20, v73.f64[0]), (float64x2_t)xmmword_24B685F30, v73, 1), (float64x2_t)0, v74.f64[0]), v69, v74, 1);
    v70[3] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v73.f64[0]), (float64x2_t)0, v73, 1), (float64x2_t)xmmword_24B685F20, v74.f64[0]), v64, v74, 1);
    v70[4] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_24B685F20, v75.f64[0]), (float64x2_t)xmmword_24B685F30, v75, 1), (float64x2_t)0, v76.f64[0]), v69, v76, 1);
    v70[5] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v75.f64[0]), (float64x2_t)0, v75, 1), (float64x2_t)xmmword_24B685F20, v76.f64[0]), v64, v76, 1);
    v70[6] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)xmmword_24B685F20, v77.f64[0]), (float64x2_t)xmmword_24B685F30, v77, 1), (float64x2_t)0, v78.f64[0]), v69, v78, 1);
    v70[7] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64((float64x2_t)0, v77.f64[0]), (float64x2_t)0, v77, 1), (float64x2_t)xmmword_24B685F20, v78.f64[0]), v64, v78, 1);
    sub_24B56D164((uint64_t)v70);
    CPGBoundingBoxRelease();
LABEL_14:
    sub_24B56CF38((uint64_t)v70, (uint64_t)&v80, &qword_2697CC578);
    return sub_24B56CF38((uint64_t)&v80, *(uint64_t *)&a3, &qword_2697CC578);
  }
  uint64_t v45 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v45, v6);
  uint64_t v46 = sub_24B6824B0();
  os_log_type_t v47 = sub_24B682B20();
  if (os_log_type_enabled(v46, v47))
  {
    char v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v48 = 0;
    _os_log_impl(&dword_24B55E000, v46, v47, "Backend Manager: Failed to get the initial mesh bounds!", v48, 2u);
    MEMORY[0x24C5D6C00](v48, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  sub_24B56BCBC((uint64_t)v70);
  CPGBoundingBoxRelease();
  sub_24B56CF38((uint64_t)v70, (uint64_t)&v80, &qword_2697CC578);
  a3 = v69.f64[0];
  return sub_24B56CF38((uint64_t)&v80, *(uint64_t *)&a3, &qword_2697CC578);
}

BOOL sub_24B5A74D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B5A969C(a1, (uint64_t)v4);
  uint64_t v5 = sub_24B562F04(&qword_2697CC580);
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 3, v5);
  if (v6)
  {
    sub_24B5A9700((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = sub_24B6822E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  }
  return v6 == 0;
}

uint64_t sub_24B5A75DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24B5A969C(a1, (uint64_t)v4);
  uint64_t v5 = sub_24B562F04(&qword_2697CC580);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 3, v5))
  {
    sub_24B5A9700((uint64_t)v4);
  }
  else
  {
    sub_24B56CF38((uint64_t)&v4[*(int *)(v5 + 64)], (uint64_t)v9, &qword_2697CC588);
    sub_24B56CF38((uint64_t)v9, (uint64_t)v10, &qword_2697CC588);
    if (sub_24B56DEE8((uint64_t)v10) != 1
      && (sub_24B5F94A8(v10[0], v10[1], v10[2], (int8x16_t)v10[3]) & 1) != 0)
    {
      uint64_t v6 = sub_24B6822E0();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      return 1;
    }
    uint64_t v8 = sub_24B6822E0();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
  }
  return 0;
}

void sub_24B5A777C()
{
  byte_2697CE128 = 1;
  qword_2697CE130 = 0xE700000000000000;
}

void sub_24B5A7798()
{
  byte_2697CE140 = 1;
  qword_2697CE148 = 0xEE00706572707376;
}

void sub_24B5A77C0()
{
  byte_2697CE158 = 1;
  qword_2697CE160 = 0xEA00000000006D66;
}

void sub_24B5A77E0()
{
  byte_2697CE170 = 1;
  qword_2697CE178 = 0xEC0000006F666E69;
}

void sub_24B5A7804()
{
  byte_2697CE188 = 1;
  qword_2697CE190 = 0xEB00000000736564;
}

uint64_t sub_24B5A7828(uint64_t a1)
{
  uint64_t v102 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v102 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v102);
  uint64_t v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v99 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v99 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v99 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v99 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v100 = (char *)&v99 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v99 - v20;
  if (qword_2697CE120 != -1) {
    swift_once();
  }
  if (byte_2697CE128) {
    uint64_t v22 = 0x7374726F706572;
  }
  else {
    uint64_t v22 = 0;
  }
  *(void *)&long long v103 = v22;
  *((void *)&v103 + 1) = qword_2697CE130;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_24B5A975C((uint64_t)v105), (v24 & 1) != 0))
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
    goto LABEL_22;
  }
  uint64_t v101 = v2;
  sub_24B562F04(&qword_2697CC590);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v2 = v101;
LABEL_22:
    uint64_t v29 = sub_24B57CBE8();
    uint64_t v30 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v29, v102);
    float v31 = sub_24B6824B0();
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v2;
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v34 = 136446210;
      v105[0] = v35;
      if (byte_2697CE128) {
        uint64_t v36 = 0x7374726F706572;
      }
      else {
        uint64_t v36 = 0;
      }
      unint64_t v37 = qword_2697CE130;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v36, v37, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v31, v32, "Native dictionary has no \"%{public}s\" key.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v35, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v30);
    }
    goto LABEL_62;
  }
  uint64_t v25 = v103;
  if (qword_2697CE138 != -1) {
    swift_once();
  }
  if (byte_2697CE140) {
    uint64_t v26 = 0x6D5F74726F706572;
  }
  else {
    uint64_t v26 = 0;
  }
  *(void *)&long long v103 = v26;
  *((void *)&v103 + 1) = qword_2697CE148;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v25 + 16) && (unint64_t v27 = sub_24B5A975C((uint64_t)v105), (v28 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v25 + 56) + 32 * v27, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
LABEL_40:
    uint64_t v42 = sub_24B57CBE8();
    uint64_t v43 = v101;
    uint64_t v44 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v8, v42, v102);
    uint64_t v45 = sub_24B6824B0();
    os_log_type_t v46 = sub_24B682B20();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = 0x6D5F74726F706572;
      uint64_t v48 = v43;
      float32x2_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)float32x2_t v49 = 136446210;
      v105[0] = v50;
      if (!byte_2697CE140) {
        uint64_t v47 = 0;
      }
      unint64_t v51 = qword_2697CE148;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v47, v51, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v45, v46, "Native dictionary has no \"%{public}s\" key.", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v50, -1, -1);
      MEMORY[0x24C5D6C00](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
    }
    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v38 = v103;
  if (qword_2697CE168 != -1) {
    swift_once();
  }
  if (byte_2697CE170) {
    uint64_t v39 = 0x5F656D69746E7572;
  }
  else {
    uint64_t v39 = 0;
  }
  *(void *)&long long v103 = v39;
  *((void *)&v103 + 1) = qword_2697CE178;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v38 + 16) && (unint64_t v40 = sub_24B5A975C((uint64_t)v105), (v41 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v38 + 56) + 32 * v40, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
LABEL_57:
    uint64_t v57 = v101;
    uint64_t v58 = sub_24B57CBE8();
    uint64_t v59 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v11, v58, v102);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B20();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = 0x5F656D69746E7572;
      uint64_t v63 = v57;
      float64x2_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)float64x2_t v64 = 136446210;
      v105[0] = v65;
      if (!byte_2697CE170) {
        uint64_t v62 = 0;
      }
      unint64_t v66 = qword_2697CE178;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v62, v66, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v60, v61, "Native dictionary has no \"%{public}s\" key.", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v65, -1, -1);
      MEMORY[0x24C5D6C00](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v59);
    }
    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v52 = v103;
  uint64_t v53 = v101;
  if (qword_2697CE180 != -1) {
    swift_once();
  }
  if (byte_2697CE188) {
    uint64_t v54 = 0x6F635F726F727265;
  }
  else {
    uint64_t v54 = 0;
  }
  *(void *)&long long v103 = v54;
  *((void *)&v103 + 1) = qword_2697CE190;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v52 + 16) && (unint64_t v55 = sub_24B5A975C((uint64_t)v105), (v56 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v52 + 56) + 32 * v55, (uint64_t)&v103);
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v104 + 1))
  {
    sub_24B5632A8((uint64_t)&v103, (uint64_t *)&unk_2697CCA30);
    uint64_t v83 = sub_24B57CBE8();
    uint64_t v84 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v14, v83, v102);
    float64x2_t v85 = sub_24B6824B0();
    os_log_type_t v86 = sub_24B682B20();
    if (os_log_type_enabled(v85, v86))
    {
      float64x2_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)float64x2_t v87 = 136446210;
      v105[0] = v88;
      if (byte_2697CE188) {
        uint64_t v89 = 0x6F635F726F727265;
      }
      else {
        uint64_t v89 = 0;
      }
      unint64_t v90 = qword_2697CE190;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v89, v90, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v85, v86, "Native dictionary has no \"%{public}s\" array...", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v88, -1, -1);
      MEMORY[0x24C5D6C00](v87, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v84);
    }
LABEL_62:
    char v67 = 0;
    return v67 & 1;
  }
  sub_24B563220(&v103, &v106);
  sub_24B562F48((uint64_t)&v106, (uint64_t)v105);
  sub_24B562F04(&qword_2697CC260);
  if (!swift_dynamicCast())
  {
    uint64_t v91 = sub_24B57CBE8();
    uint64_t v92 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v17, v91, v102);
    uint64_t v93 = sub_24B6824B0();
    os_log_type_t v94 = sub_24B682B20();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      *(_DWORD *)uint64_t v95 = 136446210;
      v105[0] = v96;
      if (byte_2697CE188) {
        uint64_t v97 = 0x6F635F726F727265;
      }
      else {
        uint64_t v97 = 0;
      }
      unint64_t v98 = qword_2697CE190;
      swift_bridgeObjectRetain();
      *(void *)&long long v103 = sub_24B5627B8(v97, v98, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v93, v94, "Native dictionary can't coerce \"%{public}s\" array to [String]..", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v96, -1, -1);
      MEMORY[0x24C5D6C00](v95, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v92);
    }
    sub_24B563254((uint64_t)&v106);
    goto LABEL_62;
  }
  float64x2_t v69 = (void *)v103;
  uint64_t v70 = sub_24B57CBE8();
  float64x2_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v71(v21, v70, v102);
  float64x2_t v72 = sub_24B6824B0();
  os_log_type_t v73 = sub_24B682B10();
  if (os_log_type_enabled(v72, v73))
  {
    float64x2_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float64x2_t v74 = 0;
    _os_log_impl(&dword_24B55E000, v72, v73, "Checking error codes for automatic downsampling...", v74, 2u);
    MEMORY[0x24C5D6C00](v74, -1, -1);
  }

  float64x2_t v75 = *(void (**)(char *, uint64_t))(v101 + 8);
  float64x2_t v76 = v21;
  uint64_t v77 = v102;
  v75(v76, v102);
  char v67 = sub_24B5A86F4(0xD00000000000001ALL, 0x800000024B68C5E0, v69);
  swift_bridgeObjectRelease();
  float64x2_t v78 = v100;
  v71(v100, v70, v77);
  id v79 = sub_24B6824B0();
  os_log_type_t v80 = sub_24B682B10();
  if (os_log_type_enabled(v79, v80))
  {
    float64x2_t v81 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)float64x2_t v81 = 67240192;
    LODWORD(v105[0]) = v67 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v79, v80, "... downsampled = %{BOOL,public}d...", v81, 8u);
    float64x2_t v82 = v81;
    uint64_t v77 = v102;
    MEMORY[0x24C5D6C00](v82, -1, -1);
  }

  v75(v78, v77);
  sub_24B563254((uint64_t)&v106);
  return v67 & 1;
}

uint64_t sub_24B5A86F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_24B682FA0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_24B682FA0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5A87BC(uint64_t a1)
{
  uint64_t v102 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v102 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v102);
  uint64_t v5 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v99 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v99 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v99 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v99 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v100 = (char *)&v99 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v99 - v20;
  if (qword_2697CE120 != -1) {
    swift_once();
  }
  if (byte_2697CE128) {
    uint64_t v22 = 0x7374726F706572;
  }
  else {
    uint64_t v22 = 0;
  }
  *(void *)&long long v103 = v22;
  *((void *)&v103 + 1) = qword_2697CE130;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_24B5A975C((uint64_t)v105), (v24 & 1) != 0))
  {
    sub_24B562F48(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
    goto LABEL_22;
  }
  uint64_t v101 = v2;
  sub_24B562F04(&qword_2697CC590);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v2 = v101;
LABEL_22:
    uint64_t v29 = sub_24B57CBE8();
    uint64_t v30 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v29, v102);
    float v31 = sub_24B6824B0();
    os_log_type_t v32 = sub_24B682B20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = v2;
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v34 = 136446210;
      v105[0] = v35;
      if (byte_2697CE128) {
        uint64_t v36 = 0x7374726F706572;
      }
      else {
        uint64_t v36 = 0;
      }
      unint64_t v37 = qword_2697CE130;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v36, v37, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v31, v32, "Native dictionary has no \"%{public}s\" key.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v35, -1, -1);
      MEMORY[0x24C5D6C00](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v30);
    }
    goto LABEL_62;
  }
  uint64_t v25 = v103;
  if (qword_2697CE150 != -1) {
    swift_once();
  }
  if (byte_2697CE158) {
    uint64_t v26 = 0x735F74726F706572;
  }
  else {
    uint64_t v26 = 0;
  }
  *(void *)&long long v103 = v26;
  *((void *)&v103 + 1) = qword_2697CE160;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v25 + 16) && (unint64_t v27 = sub_24B5A975C((uint64_t)v105), (v28 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v25 + 56) + 32 * v27, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
LABEL_40:
    uint64_t v42 = sub_24B57CBE8();
    uint64_t v43 = v101;
    uint64_t v44 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v8, v42, v102);
    uint64_t v45 = sub_24B6824B0();
    os_log_type_t v46 = sub_24B682B20();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = 0x735F74726F706572;
      uint64_t v48 = v43;
      float32x2_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)float32x2_t v49 = 136446210;
      v105[0] = v50;
      if (!byte_2697CE158) {
        uint64_t v47 = 0;
      }
      unint64_t v51 = qword_2697CE160;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v47, v51, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v45, v46, "Native dictionary has no \"%{public}s\" key.", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v50, -1, -1);
      MEMORY[0x24C5D6C00](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
    }
    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v38 = v103;
  if (qword_2697CE168 != -1) {
    swift_once();
  }
  if (byte_2697CE170) {
    uint64_t v39 = 0x5F656D69746E7572;
  }
  else {
    uint64_t v39 = 0;
  }
  *(void *)&long long v103 = v39;
  *((void *)&v103 + 1) = qword_2697CE178;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v38 + 16) && (unint64_t v40 = sub_24B5A975C((uint64_t)v105), (v41 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v38 + 56) + 32 * v40, (uint64_t)&v106);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v107 + 1))
  {
    sub_24B5632A8((uint64_t)&v106, (uint64_t *)&unk_2697CCA30);
LABEL_57:
    uint64_t v57 = v101;
    uint64_t v58 = sub_24B57CBE8();
    uint64_t v59 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v11, v58, v102);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B20();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = 0x5F656D69746E7572;
      uint64_t v63 = v57;
      float64x2_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)float64x2_t v64 = 136446210;
      v105[0] = v65;
      if (!byte_2697CE170) {
        uint64_t v62 = 0;
      }
      unint64_t v66 = qword_2697CE178;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v62, v66, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v60, v61, "Native dictionary has no \"%{public}s\" key.", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v65, -1, -1);
      MEMORY[0x24C5D6C00](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v59);
    }
    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v52 = v103;
  uint64_t v53 = v101;
  if (qword_2697CE180 != -1) {
    swift_once();
  }
  if (byte_2697CE188) {
    uint64_t v54 = 0x6F635F726F727265;
  }
  else {
    uint64_t v54 = 0;
  }
  *(void *)&long long v103 = v54;
  *((void *)&v103 + 1) = qword_2697CE190;
  swift_bridgeObjectRetain();
  sub_24B682DC0();
  if (*(void *)(v52 + 16) && (unint64_t v55 = sub_24B5A975C((uint64_t)v105), (v56 & 1) != 0))
  {
    sub_24B562F48(*(void *)(v52 + 56) + 32 * v55, (uint64_t)&v103);
  }
  else
  {
    long long v103 = 0u;
    long long v104 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_24B5A97A0((uint64_t)v105);
  if (!*((void *)&v104 + 1))
  {
    sub_24B5632A8((uint64_t)&v103, (uint64_t *)&unk_2697CCA30);
    uint64_t v83 = sub_24B57CBE8();
    uint64_t v84 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v14, v83, v102);
    float64x2_t v85 = sub_24B6824B0();
    os_log_type_t v86 = sub_24B682B20();
    if (os_log_type_enabled(v85, v86))
    {
      float64x2_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)float64x2_t v87 = 136446210;
      v105[0] = v88;
      if (byte_2697CE188) {
        uint64_t v89 = 0x6F635F726F727265;
      }
      else {
        uint64_t v89 = 0;
      }
      unint64_t v90 = qword_2697CE190;
      swift_bridgeObjectRetain();
      *(void *)&long long v106 = sub_24B5627B8(v89, v90, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v85, v86, "Native dictionary has no \"%{public}s\" array...", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v88, -1, -1);
      MEMORY[0x24C5D6C00](v87, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v84);
    }
LABEL_62:
    char v67 = 0;
    return v67 & 1;
  }
  sub_24B563220(&v103, &v106);
  sub_24B562F48((uint64_t)&v106, (uint64_t)v105);
  sub_24B562F04(&qword_2697CC260);
  if (!swift_dynamicCast())
  {
    uint64_t v91 = sub_24B57CBE8();
    uint64_t v92 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v17, v91, v102);
    uint64_t v93 = sub_24B6824B0();
    os_log_type_t v94 = sub_24B682B20();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      *(_DWORD *)uint64_t v95 = 136446210;
      v105[0] = v96;
      if (byte_2697CE188) {
        uint64_t v97 = 0x6F635F726F727265;
      }
      else {
        uint64_t v97 = 0;
      }
      unint64_t v98 = qword_2697CE190;
      swift_bridgeObjectRetain();
      *(void *)&long long v103 = sub_24B5627B8(v97, v98, v105);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v93, v94, "Native dictionary can't coerce \"%{public}s\" array to [String]..", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v96, -1, -1);
      MEMORY[0x24C5D6C00](v95, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v92);
    }
    sub_24B563254((uint64_t)&v106);
    goto LABEL_62;
  }
  float64x2_t v69 = (void *)v103;
  uint64_t v70 = sub_24B57CBE8();
  float64x2_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v71(v21, v70, v102);
  float64x2_t v72 = sub_24B6824B0();
  os_log_type_t v73 = sub_24B682B10();
  if (os_log_type_enabled(v72, v73))
  {
    float64x2_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float64x2_t v74 = 0;
    _os_log_impl(&dword_24B55E000, v72, v73, "Checking error codes for incomplete stitcking...", v74, 2u);
    MEMORY[0x24C5D6C00](v74, -1, -1);
  }

  float64x2_t v75 = *(void (**)(char *, uint64_t))(v101 + 8);
  float64x2_t v76 = v21;
  uint64_t v77 = v102;
  v75(v76, v102);
  char v67 = sub_24B5A86F4(0xD00000000000002ALL, 0x800000024B68C600, v69);
  swift_bridgeObjectRelease();
  float64x2_t v78 = v100;
  v71(v100, v70, v77);
  id v79 = sub_24B6824B0();
  os_log_type_t v80 = sub_24B682B10();
  if (os_log_type_enabled(v79, v80))
  {
    float64x2_t v81 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)float64x2_t v81 = 67240192;
    LODWORD(v105[0]) = v67 & 1;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v79, v80, "... has incomplete stitching = %{BOOL,public}d...", v81, 8u);
    float64x2_t v82 = v81;
    uint64_t v77 = v102;
    MEMORY[0x24C5D6C00](v82, -1, -1);
  }

  v75(v78, v77);
  sub_24B563254((uint64_t)&v106);
  return v67 & 1;
}

void type metadata accessor for CFURL(uint64_t a1)
{
}

uint64_t sub_24B5A969C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5A9700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24B5A975C(uint64_t a1)
{
  uint64_t v2 = sub_24B682DA0();

  return sub_24B5A9850(a1, v2);
}

uint64_t sub_24B5A97A0(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for RelocContext()
{
  return self;
}

__n128 initializeBufferWithCopyOfBuffer for MeshBounds(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MeshBounds()
{
  return &type metadata for MeshBounds;
}

void type metadata accessor for simd_double4x4(uint64_t a1)
{
}

unint64_t sub_24B5A9850(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_24B5A9918(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x24C5D4EA0](v9, a1);
      sub_24B5A97A0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_24B5A9918(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_24B5A9974(unint64_t result, uint64_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6)
{
  if (!result) {
    return 0;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
    {
      float32x2_t v6 = (float32x2_t)vdup_n_s32(0x7F800000u);
      char v7 = (float *)(result + 8);
      float32x2_t v8 = (float32x2_t)0x7F0000007FLL;
      uint64_t v9 = 0x2AAAAAAAAAAAAAAALL;
      float v10 = INFINITY;
      float v11 = -INFINITY;
      while (v9)
      {
        float v13 = *(v7 - 2);
        float v12 = *(v7 - 1);
        float v14 = *v7;
        v7 += 3;
        float32x4_t v15 = vaddq_f32(vmlaq_n_f32(vmlaq_n_f32(vmulq_n_f32(a3, v13), a4, v12), a5, v14), a6);
        float32x2_t v6 = (float32x2_t)vbsl_s8((int8x8_t)vcgt_f32(v6, *(float32x2_t *)v15.f32), *(int8x8_t *)v15.f32, (int8x8_t)v6);
        float32x2_t v8 = (float32x2_t)vbsl_s8((int8x8_t)vcge_f32(*(float32x2_t *)v15.f32, v8), *(int8x8_t *)v15.f32, (int8x8_t)v8);
        if (v15.f32[2] < v10) {
          float v10 = v15.f32[2];
        }
        if (v11 <= v15.f32[2]) {
          float v11 = v15.f32[2];
        }
        --v9;
        if (!--a2)
        {
          v16.i64[0] = v6.u32[0];
          v16.i64[1] = v6.u32[1];
          return vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)v8, 0x20uLL), v16).u64[0];
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    return vdupq_n_s64(0xFF8000007F800000).u64[0];
  }
LABEL_16:
  __break(1u);
  return result;
}

double sub_24B5A9A40@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 40);
  int v5 = *(_DWORD *)(v1 + 56);
  char v6 = *(unsigned char *)(v1 + 60);
  char v7 = *(unsigned char *)(v1 + 61);
  char v8 = *(unsigned char *)(v1 + 62);
  char v9 = *(unsigned char *)(v1 + 63);
  char v10 = *(unsigned char *)(v1 + 64);
  char v11 = *(unsigned char *)(v1 + 65);
  char v12 = *(unsigned char *)(v1 + 66);
  char v13 = *(unsigned char *)(v1 + 67);
  char v14 = *(unsigned char *)(v1 + 68);
  *(_DWORD *)a1 = *(_DWORD *)(v1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(v1 + 32);
  *(void *)(a1 + 24) = v4;
  double result = *(double *)(v1 + 48);
  *(double *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 44) = v6;
  *(unsigned char *)(a1 + 45) = v7;
  *(unsigned char *)(a1 + 46) = v8;
  *(unsigned char *)(a1 + 47) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 49) = v11;
  *(unsigned char *)(a1 + 50) = v12;
  *(unsigned char *)(a1 + 51) = v13;
  *(unsigned char *)(a1 + 52) = v14;
  return result;
}

double sub_24B5A9AF4(int *a1)
{
  int v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 3);
  int v6 = a1[10];
  char v7 = *((unsigned char *)a1 + 45);
  char v8 = *((unsigned char *)a1 + 46);
  char v9 = *((unsigned char *)a1 + 47);
  char v10 = *((unsigned char *)a1 + 48);
  char v11 = *((unsigned char *)a1 + 49);
  char v15 = *((unsigned char *)a1 + 50);
  char v16 = *((unsigned char *)a1 + 44);
  char v14 = *((unsigned char *)a1 + 51);
  char v12 = *((unsigned char *)a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  *(void *)(v1 + 32) = *((void *)a1 + 2);
  *(void *)(v1 + 40) = v5;
  double result = *((double *)a1 + 4);
  *(double *)(v1 + 48) = result;
  *(_DWORD *)(v1 + 56) = v6;
  *(unsigned char *)(v1 + 60) = v16;
  *(unsigned char *)(v1 + 61) = v7;
  *(unsigned char *)(v1 + 62) = v8;
  *(unsigned char *)(v1 + 63) = v9;
  *(unsigned char *)(v1 + 64) = v10;
  *(unsigned char *)(v1 + 65) = v11;
  *(unsigned char *)(v1 + 66) = v15;
  *(unsigned char *)(v1 + 67) = v14;
  *(unsigned char *)(v1 + 68) = v12;
  return result;
}

uint64_t sub_24B5A9BE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v10 = swift_allocObject();
  sub_24B5A9C5C(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_24B5A9C5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_24B6824D0();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  float32x4_t v68 = (char *)&v63 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v63 - v18;
  MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v63 - v20;
  sub_24B679E48(v6 + 16);
  *(void *)(v6 + 112) = 0;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(void *)(v6 + 128) = 0;
  *(void *)(v6 + 136) = 0;
  *(void *)(v6 + 160) = 2;
  *(_WORD *)(v6 + 168) = 0;
  *(void *)(v6 + 176) = 0x3FF0000000000000;
  double v22 = COERCE_DOUBLE(sub_24B568280());
  if (v23) {
    double v22 = 0.75;
  }
  *(double *)(v6 + 184) = v22;
  *(_WORD *)(v6 + 192) = 258;
  *(_DWORD *)(v6 + 196) = 1058642330;
  float v24 = sub_24B5F8708(10.0);
  *(float *)(v6 + 200) = v24;
  float v25 = sub_24B5F8708(5.0);
  *(float *)(v6 + 204) = v25;
  *(_DWORD *)(v6 + 208) = 1036831949;
  uint64_t v26 = sub_24B5682B4();
  float v27 = *(float *)&v26;
  if ((v26 & 0x100000000) != 0) {
    float v27 = 0.075;
  }
  *(float *)(v6 + 212) = v27;
  uint64_t v28 = sub_24B5682E4();
  float v29 = *(float *)&v28;
  if ((v28 & 0x100000000) != 0) {
    float v29 = 7.5;
  }
  float v30 = sub_24B5F8708(v29);
  *(float *)(v6 + 216) = cosf(v30);
  *(unsigned char *)(v6 + 220) = 1;
  *(_OWORD *)(v6 + 224) = xmmword_24B686080;
  *(void *)(v6 + 240) = 0;
  *(_OWORD *)(v6 + 248) = xmmword_24B686090;
  sub_24B5AA2F8((uint64_t)v70);
  sub_24B56CF38((uint64_t)v70, v6 + 272, &qword_2697CC5A8);
  __asm { FMOV            V11.2S, #-1.0 }
  *(void *)(v6 + 432) = _D11;
  *(_DWORD *)(v6 + 440) = -1082130432;
  uint64_t v36 = sub_24B567C30();
  float v37 = *(float *)&v36;
  if ((v36 & 0x100000000) != 0) {
    float v37 = 2.0;
  }
  *(float *)(v6 + 444) = v37;
  *(void *)(v6 + 448) = 10;
  *(void *)(v6 + 456) = 0x3FC000003E4CCCCDLL;
  *(void *)(v6 + 472) = _D11;
  *(void *)(v6 + 480) = 0;
  *(void *)(v6 + 488) = 0x41200000BF800000;
  sub_24B673C10(v6 + 496);
  type metadata accessor for OCObjectCentricPoseGraph(0);
  *(void *)(v6 + 72) = sub_24B673C50(a1);
  *(void *)(v6 + 144) = a2;
  *(void *)(v6 + 120) = a4;
  swift_beginAccess();
  *(float *)(v6 + 560) = v24;
  *(float *)(v6 + 564) = v25;
  *(_DWORD *)(v6 + 568) = 1036831949;
  *(double *)(v6 + 152) = a5;
  *(void *)(v6 + 464) = a3;
  uint64_t v66 = a2;
  uint64_t v65 = a3;
  id v64 = a4;
  if (a3)
  {
    swift_retain();
    swift_retain();
    id v38 = a4;
    uint64_t v39 = sub_24B57CD90();
    uint64_t v40 = v67;
    char v41 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v41(v21, v39, v12);
    uint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B30();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = v40;
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_24B55E000, v42, v43, "Internal motion manager is available.", v45, 2u);
      os_log_type_t v46 = v45;
      uint64_t v40 = v44;
      MEMORY[0x24C5D6C00](v46, -1, -1);
    }

    uint64_t v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    v47(v21, v12);
  }
  else
  {
    swift_retain();
    id v48 = a4;
    uint64_t v49 = sub_24B57CD90();
    uint64_t v50 = v67;
    char v41 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v41(v19, v49, v12);
    unint64_t v51 = sub_24B6824B0();
    os_log_type_t v52 = sub_24B682B30();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_24B55E000, v51, v52, "Internal motion manager is not available, gyro gates not applied.", v53, 2u);
      MEMORY[0x24C5D6C00](v53, -1, -1);
    }

    uint64_t v47 = *(void (**)(char *, uint64_t))(v50 + 8);
    v47(v19, v12);
  }
  uint64_t v54 = sub_24B57CD90();
  v41(v68, v54, v12);
  unint64_t v55 = sub_24B6824B0();
  os_log_type_t v56 = sub_24B682B30();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 134349056;
    if (qword_2697CE198 != -1) {
      swift_once();
    }
    double v69 = *(float *)&dword_2697D0C68;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v55, v56, "IMU max angular speed threshold = %{public}f", v57, 0xCu);
    MEMORY[0x24C5D6C00](v57, -1, -1);
  }

  v47(v68, v12);
  uint64_t v58 = v63;
  v41(v63, v54, v12);
  uint64_t v59 = sub_24B6824B0();
  os_log_type_t v60 = sub_24B682B30();
  if (os_log_type_enabled(v59, v60))
  {
    os_log_type_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v61 = 0;
    _os_log_impl(&dword_24B55E000, v59, v60, "Initialized capture manager", v61, 2u);
    MEMORY[0x24C5D6C00](v61, -1, -1);
  }

  swift_release();
  swift_release();
  v47(v58, v12);
  return v6;
}

double sub_24B5AA2F8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 1;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  return result;
}

int *sub_24B5AA31C()
{
  if (qword_2697CE198 != -1) {
    swift_once();
  }
  return &dword_2697D0C68;
}

uint64_t sub_24B5AA368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, float a7)
{
  void (*v59)(void *__return_ptr, uint64_t);
  char v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  double v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  double v78;
  char *v79;
  char *v80;
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  __n128 v86;
  __n128 v87;
  __n128 v88;
  __n128 v89;
  double *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  void v94[8];
  unsigned __int8 v95;
  void v96[8];
  char v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  void v113[5];
  int v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  uint64_t v124[8];
  char v125;
  double v126[8];
  char v127;

  uint64_t v8 = v7;
  float64x2_t v81 = a5;
  float64x2_t v82 = a6;
  sub_24B56CF38(a2, (uint64_t)v94, &qword_2697CC9A0);
  uint64_t v13 = v94[0];
  uint64_t v14 = v94[1];
  v89.n128_u64[0] = v94[2];
  v88.n128_u64[0] = v94[3];
  v87.n128_u64[0] = v94[4];
  float64x2_t v85 = v94[6];
  v86.n128_u64[0] = v94[5];
  uint64_t v83 = v94[7];
  uint64_t v84 = v95;
  uint64_t v15 = type metadata accessor for OCCaptureData(0);
  MEMORY[0x270FA5388](v15);
  unint64_t v90 = (double *)((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_24B6824D0();
  uint64_t v91 = *(void *)(v17 - 8);
  uint64_t v92 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  id v79 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v80 = (char *)&v76 - v20;
  uint64_t v21 = *a4;
  uint64_t v93 = (void *)a1;
  sub_24B5FB5B4(*(__CVBuffer **)(a1 + 8));
  int v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = swift_beginAccess();
  *(_DWORD *)(v8 + 16) = v23;
  *(void *)(v8 + 24) = v25;
  uint64_t v27 = *(void *)(v8 + 464);
  if (v27)
  {
    *(double *)&uint64_t v28 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(void *)v27 + 176))(v26));
    char v31 = v30 & 1;
    float v32 = v29;
    if (v30) {
      float v32 = -1.0;
    }
  }
  else
  {
    char v31 = 1;
    *(double *)&uint64_t v28 = 0.0;
    double v29 = 0.0;
    float v32 = -1.0;
  }
  *(float *)(v8 + 32) = v32;
  if ((*(unsigned char *)(v8 + 168) & 1) != 0
    || (*(unsigned char *)(v8 + 169) & 1) != 0
    || *(void *)(v8 + 128)
    || *(void *)(v8 + 136))
  {
    return 0;
  }
  uint64_t v77 = *(double *)&v28;
  float64x2_t v78 = v29;
  (*(void (**)(void))(**(void **)(v8 + 144) + 120))();
  char v33 = sub_24B5FAE6C(a3);
  if (v33) {
    uint64_t v34 = v13;
  }
  else {
    uint64_t v34 = 0;
  }
  if (v33) {
    uint64_t v35 = v14;
  }
  else {
    uint64_t v35 = 0;
  }
  v96[0] = v34;
  v96[1] = v35;
  unint64_t v36 = v89.n128_u64[0];
  if ((v33 & 1) == 0) {
    unint64_t v36 = 0;
  }
  unint64_t v37 = v88.n128_u64[0];
  if ((v33 & 1) == 0) {
    unint64_t v37 = 0;
  }
  unint64_t v38 = v87.n128_u64[0];
  if ((v33 & 1) == 0) {
    unint64_t v38 = 0;
  }
  uint64_t v40 = v85;
  unint64_t v39 = v86.n128_u64[0];
  if ((v33 & 1) == 0)
  {
    unint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v41 = v83;
  if ((v33 & 1) == 0) {
    uint64_t v41 = 0;
  }
  v96[2] = v36;
  v96[3] = v37;
  v96[4] = v38;
  v96[5] = v39;
  v96[6] = v40;
  v96[7] = v41;
  uint64_t v97 = v84 & 1 | ((v33 & 1) == 0);
  sub_24B56CF38((uint64_t)v96, (uint64_t)v126, &qword_2697CC9A0);
  char v42 = (a7 <= 0.6) & ~v127;
  swift_beginAccess();
  sub_24B677BE0(v42);
  swift_endAccess();
  v124[0] = *(void *)sub_24B611684();
  v113[0] = v21;
  sub_24B5AEB54();
  char v43 = sub_24B682D60();
  swift_beginAccess();
  sub_24B677EF4(v43 & 1);
  swift_endAccess();
  sub_24B56CF38((uint64_t)v96, (uint64_t)v124, &qword_2697CC9A0);
  uint64_t v44 = *(void *)(v8 + 72);
  uint64_t v45 = v93;
  os_log_type_t v46 = (__n128 *)((char *)v93 + *(int *)(v15 + 40));
  __n128 v47 = v46[4];
  os_log_type_t v86 = v46[3];
  float64x2_t v87 = v47;
  __n128 v48 = v46[6];
  uint64_t v88 = v46[5];
  uint64_t v89 = v48;
  if (v125)
  {
    swift_beginAccess();
    uint64_t v49 = *(uint64_t (**)(void *, BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t), uint64_t, uint64_t, __n128, __n128, __n128, __n128))(*(void *)v44 + 184);
    swift_retain();
    swift_retain();
    uint64_t v50 = sub_24B5ADB34;
  }
  else
  {
    swift_beginAccess();
    uint64_t v49 = *(uint64_t (**)(void *, BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t), uint64_t, uint64_t, __n128, __n128, __n128, __n128))(*(void *)v44 + 184);
    swift_retain();
    swift_retain();
    uint64_t v50 = (BOOL (*)(uint64_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t, float32x4_t))sub_24B5AEBA8;
  }
  char v51 = v49(v96, v50, v8, v8 + 496, v86, v87, v88, v89);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_24B678208(v51 & 1);
  uint64_t v52 = swift_endAccess();
  uint64_t v53 = v90;
  uint64_t v54 = *(void *)(v8 + 144);
  char v55 = ((*(uint64_t (**)(uint64_t))(*(void *)v54 + 152))(v52) & 1) != 0
      ? 0
      : (*(uint64_t (**)(void))(*(void *)v54 + 168))() ^ 1;
  swift_beginAccess();
  sub_24B67851C(v55 & 1);
  swift_endAccess();
  *(_DWORD *)(v8 + 472) = -1082130432;
  if (v31)
  {
    char v56 = 1;
  }
  else
  {
    float v57 = v78;
    *(float *)(v8 + 472) = v57;
    if (qword_2697CE198 != -1) {
      swift_once();
    }
    char v56 = *(float *)&dword_2697D0C68 > v57;
  }
  swift_beginAccess();
  sub_24B678830(v56);
  uint64_t v58 = swift_endAccess();
  uint64_t v59 = *(void (**)(void *__return_ptr, uint64_t))(*(void *)v8 + 448);
  v59(v113, v58);
  unint64_t v98 = v113[0];
  uint64_t v99 = v113[1];
  unint64_t v100 = v113[2];
  uint64_t v101 = v113[3];
  uint64_t v102 = v113[4];
  long long v103 = v114;
  long long v104 = v115;
  uint64_t v105 = v116;
  long long v106 = v117;
  long long v107 = v118;
  uint64_t v108 = v119;
  BOOL v109 = v120;
  uint64_t v110 = v121;
  unint64_t v111 = v122;
  uint64_t v112 = v123;
  os_log_type_t v60 = sub_24B679E1C();
  swift_beginAccess();
  sub_24B6778CC(v60 & 1);
  os_log_type_t v61 = swift_endAccess();
  v59(v113, v61);
  if (v115 != 1) {
    return 0;
  }
  uint64_t v62 = sub_24B57CD90();
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
  if (v31)
  {
    id v64 = v79;
    v63(v79, v62, v92);
    uint64_t v65 = sub_24B6824B0();
    uint64_t v66 = sub_24B682B10();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl(&dword_24B55E000, v65, v66, "IMU ahead of video frame timestamp unknown.", v67, 2u);
      MEMORY[0x24C5D6C00](v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v92);
  }
  else
  {
    uint64_t v70 = v80;
    v63(v80, v62, v92);
    sub_24B56730C((uint64_t)v45, (uint64_t)v53);
    swift_retain();
    float64x2_t v71 = sub_24B6824B0();
    float64x2_t v72 = sub_24B682B10();
    if (os_log_type_enabled(v71, v72))
    {
      os_log_type_t v73 = v77;
      float64x2_t v74 = v77;
      float64x2_t v75 = swift_slowAlloc();
      *(_DWORD *)float64x2_t v75 = 134349312;
      v126[0] = v74 - (*v53 + *(double *)(v8 + 152));
      sub_24B682CD0();
      swift_release();
      sub_24B5AEAE4((uint64_t)v53, type metadata accessor for OCCaptureData);
      *(_WORD *)(v75 + 12) = 2050;
      v126[0] = v78;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v71, v72, "IMU ahead of video frame timestamp by = %{public}f with speed = %{public}f", (uint8_t *)v75, 0x16u);
      MEMORY[0x24C5D6C00](v75, -1, -1);
    }
    else
    {
      swift_release();
      sub_24B5AEAE4((uint64_t)v53, type metadata accessor for OCCaptureData);
      os_log_type_t v73 = v77;
    }

    (*(void (**)(char *, uint64_t))(v91 + 8))(v70, v92);
    *(double *)(v8 + 480) = v73;
  }
  *(void *)(v8 + 224) = *v45;
  sub_24B5ADF28();
  float32x4_t v68 = 1;
  sub_24B5ABF98(1, 1, v81, v82);
  return v68;
}

uint64_t sub_24B5AACAC()
{
  return 0;
}

uint64_t sub_24B5AACB4(int a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  int v36 = a1;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_24B57CD90();
  uint64_t v34 = *(void (**)(char *))(v8 + 16);
  uint64_t v35 = v14;
  v34(v13);
  uint64_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v18 = v7;
    uint64_t v19 = a2;
    uint64_t v20 = a3;
    uint64_t v21 = v11;
    int v22 = v17;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_24B55E000, v15, v16, "Trying manual capture...", v17, 2u);
    int v23 = v22;
    char v11 = v21;
    a3 = v20;
    a2 = v19;
    uint64_t v7 = v18;
    uint64_t v8 = v33;
    MEMORY[0x24C5D6C00](v23, -1, -1);
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v13, v7);
  if (*(void *)(v4 + 128))
  {
    swift_retain();
    sub_24B6826B0();
    swift_release();
  }
  *(void *)(v4 + 128) = 0;
  swift_release();
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(**(void **)(v4 + 144) + 104))(1);
  char v26 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 576))(v25);
  if (v26)
  {
    sub_24B5ABF98(0, v36 & 1, a2, a3);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v34)(v11, v35, v7);
    uint64_t v27 = sub_24B6824B0();
    os_log_type_t v28 = sub_24B682B20();
    if (os_log_type_enabled(v27, v28))
    {
      double v29 = v11;
      char v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v30 = 0;
      _os_log_impl(&dword_24B55E000, v27, v28, "Ignoring manual capture, too frequent!", v30, 2u);
      char v31 = v30;
      char v11 = v29;
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    v24(v11, v7);
  }
  return v26 & 1;
}

uint64_t sub_24B5AAFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v58 = a1;
  uint64_t v59 = a3;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  float v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v56 = (char *)&v55 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v55 = (char *)&v55 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  os_log_type_t v16 = (char *)&v55 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = *(int *)(type metadata accessor for OCCaptureData(0) + 48);
  uint64_t v20 = a2;
  int v21 = *(unsigned __int8 *)(a2 + v19);
  uint64_t v22 = sub_24B57CD90();
  uint64_t v60 = v7;
  int v23 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if (v21 == 1)
  {
    v23(v18, v22, v6);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B30();
    if (os_log_type_enabled(v24, v25))
    {
      char v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v26 = 0;
      _os_log_impl(&dword_24B55E000, v24, v25, "Trying to add automatic capture shot...", v26, 2u);
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }

    uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
    uint64_t result = v27(v18, v6);
  }
  else
  {
    v23(v16, v22, v6);
    double v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B30();
    if (os_log_type_enabled(v29, v30))
    {
      char v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v31 = 0;
      _os_log_impl(&dword_24B55E000, v29, v30, "Trying to add manual capture shot...", v31, 2u);
      MEMORY[0x24C5D6C00](v31, -1, -1);
    }

    uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
    uint64_t result = v27(v16, v6);
  }
  char v32 = *(unsigned char *)(v20 + v19);
  uint64_t v33 = (double *)v20;
  if (v32)
  {
    char v34 = sub_24B5AD3A0(v20);
    uint64_t v35 = sub_24B57CD90();
    if ((v34 & 1) == 0)
    {
      char v51 = v57;
      v23(v57, v35, v6);
      uint64_t v52 = sub_24B6824B0();
      os_log_type_t v53 = sub_24B682B30();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v54 = 0;
        _os_log_impl(&dword_24B55E000, v52, v53, "Shot image sharpness is not good, discard this shot!", v54, 2u);
        MEMORY[0x24C5D6C00](v54, -1, -1);
      }

      v27(v51, v6);
      sub_24B5AB548((uint64_t)v33, v4);
      char v50 = 0;
      return v50 & 1;
    }
    int v36 = v56;
    v23(v56, v35, v6);
    unint64_t v37 = sub_24B6824B0();
    os_log_type_t v38 = sub_24B682B30();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v39 = 0;
      _os_log_impl(&dword_24B55E000, v37, v38, "Passed post-capture check, saving image...", v39, 2u);
      MEMORY[0x24C5D6C00](v39, -1, -1);
    }

    uint64_t result = v27(v36, v6);
    uint64_t v40 = *(void *)(v4 + 96);
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (!v41)
    {
      *(void *)(v4 + 96) = v42;
      sub_24B5ADBB8();
      if (*(unsigned char *)(v4 + 193) != 1) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v43 = *(void *)(v4 + 104);
    BOOL v41 = __OFADD__(v43, 1);
    uint64_t v44 = v43 + 1;
    if (!v41)
    {
      *(void *)(v4 + 104) = v44;
      sub_24B5ADBB8();
      if (*(unsigned char *)(v4 + 193) != 1)
      {
LABEL_21:
        sub_24B5AB548((uint64_t)v33, v4);
        char v50 = 1;
        return v50 & 1;
      }
      uint64_t v45 = sub_24B57CD90();
      os_log_type_t v46 = v55;
      v23(v55, v45, v6);
      __n128 v47 = sub_24B6824B0();
      os_log_type_t v48 = sub_24B682B30();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl(&dword_24B55E000, v47, v48, "Adding the manual shot to pose graph. It must be the first hidden shot at start capturing.", v49, 2u);
        MEMORY[0x24C5D6C00](v49, -1, -1);
      }

      v27(v46, v6);
LABEL_20:
      char v50 = sub_24B5AD6E8(v58, v33, v59);
      sub_24B5AB548((uint64_t)v33, v4);
      return v50 & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5AB548(uint64_t a1, uint64_t a2)
{
  sub_24B5FB7EC(*(__CVBuffer **)(a1 + 8));
  int v5 = v4;
  uint64_t v7 = v6;
  swift_beginAccess();
  *(_DWORD *)(a2 + 36) = v5;
  *(void *)(a2 + 40) = v7;
  int v8 = *(_DWORD *)(a2 + 488);
  *(_DWORD *)(a2 + 48) = *(_DWORD *)(a2 + 476);
  *(_DWORD *)(a2 + 52) = v8;
  int v9 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for OCCaptureData(0) + 48));
  if (v9 == 1)
  {
    if (*(void *)(a2 + 128))
    {
      swift_retain();
      sub_24B6826B0();
      swift_release();
    }
    *(void *)(a2 + 128) = 0;
  }
  else
  {
    if (*(void *)(a2 + 136))
    {
      swift_retain();
      sub_24B6826B0();
      swift_release();
    }
    *(void *)(a2 + 136) = 0;
  }
  swift_release();
  uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a2 + 144) + 104))(1);
  *(unsigned char *)(a2 + 192) = v9;
  return result;
}

uint64_t sub_24B5AB668(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, __n128, __n128, __n128, __n128))(**(void **)(v5 + 72) + 160);
  swift_retain();
  LOBYTE(a1) = v7(a1, a2, a3, a4, a5);
  swift_release();
  return a1 & 1;
}

uint64_t sub_24B5AB6EC(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(uint64_t (**)(uint64_t))(**(void **)(v2 + 72) + 152);
  swift_retain();
  char v5 = v4(a1);
  swift_release();
  if ((v5 & 1) == 0) {
    return v5 & 1;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 112);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (!v8)
  {
    *(void *)(v2 + 112) = v9;
    return v5 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5AB7A0()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(v0 + 72) + 168);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_24B5AB808()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(v0 + 72) + 176);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_24B5AB870()
{
  return sub_24B5AB908(1.0);
}

uint64_t sub_24B5AB878()
{
  return sub_24B5AB908(*(double *)(v0 + 184));
}

double sub_24B5AB884(char a1)
{
  double result = 1.0;
  if (a1) {
    return *(double *)(v1 + 184);
  }
  return result;
}

uint64_t sub_24B5AB894()
{
  uint64_t v1 = *(void *)(v0 + 464);
  if (v1) {
    return (*(uint64_t (**)(void))(*(void *)v1 + 184))();
  }
  else {
    return MEMORY[0x263F8EE78];
  }
}

BOOL sub_24B5AB8E8()
{
  return (*(unsigned char *)(v0 + 169) & 1) == 0 && *(void *)(v0 + 136) == 0;
}

uint64_t sub_24B5AB908(double a1)
{
  uint64_t v3 = sub_24B682680();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v39 = (char *)&v36 - v7;
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v36 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = sub_24B6825D0();
  MEMORY[0x270FA5388](v18);
  int v19 = v1[192];
  if (v19 != 2)
  {
    uint64_t v38 = v3;
    if (v19)
    {
      v1[168] = 1;
      uint64_t v30 = swift_allocObject();
      swift_weakInit();
      os_log_type_t v46 = sub_24B5AEA94;
      uint64_t v47 = v30;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_24B566C04;
      uint64_t v45 = &unk_26FE8D2C8;
      unint64_t v37 = _Block_copy(&aBlock);
      uint64_t v41 = MEMORY[0x263F8EE78];
      sub_24B5AE9E0();
      swift_retain();
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5AEA38();
      sub_24B682D80();
      sub_24B6826C0();
      swift_allocObject();
      sub_24B6826A0();
      swift_release();
      swift_release();
      uint64_t v31 = sub_24B57CD90();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v31, v8);
      uint64_t v27 = sub_24B6824B0();
      os_log_type_t v32 = sub_24B682B20();
      if (os_log_type_enabled(v27, v32))
      {
        double v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v29 = 0;
        _os_log_impl(&dword_24B55E000, v27, v32, "Set cooldown time for automatic shot", v29, 2u);
        goto LABEL_10;
      }
    }
    else
    {
      v1[169] = 1;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      os_log_type_t v46 = sub_24B5AE978;
      uint64_t v47 = v25;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_24B566C04;
      uint64_t v45 = &unk_26FE8D2A0;
      unint64_t v37 = _Block_copy(&aBlock);
      uint64_t v41 = MEMORY[0x263F8EE78];
      sub_24B5AE9E0();
      swift_retain();
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5AEA38();
      sub_24B682D80();
      sub_24B6826C0();
      swift_allocObject();
      sub_24B6826A0();
      swift_release();
      swift_release();
      uint64_t v26 = sub_24B57CD90();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v26, v8);
      uint64_t v27 = sub_24B6824B0();
      os_log_type_t v28 = sub_24B682B20();
      if (os_log_type_enabled(v27, v28))
      {
        double v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v29 = 0;
        _os_log_impl(&dword_24B55E000, v27, v28, "Set cooldown time for manual shot", v29, 2u);
        uint64_t v17 = v15;
LABEL_10:
        uint64_t v33 = v38;
        MEMORY[0x24C5D6C00](v29, -1, -1);
LABEL_13:

        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
        sub_24B682660();
        char v34 = v39;
        MEMORY[0x24C5D47E0](v6, a1);
        uint64_t v35 = *(void (**)(char *, uint64_t))(v40 + 8);
        v35(v6, v33);
        sub_24B682BA0();
        swift_release();
        return ((uint64_t (*)(char *, uint64_t))v35)(v34, v33);
      }
      uint64_t v17 = v15;
    }
    uint64_t v33 = v38;
    goto LABEL_13;
  }
  uint64_t v20 = sub_24B57CD90();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v20, v8);
  int v21 = sub_24B6824B0();
  os_log_type_t v22 = sub_24B682B20();
  if (os_log_type_enabled(v21, v22))
  {
    int v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v23 = 0;
    _os_log_impl(&dword_24B55E000, v21, v22, "Failed to set cooldown time because last shot couldn't be added!", v23, 2u);
    MEMORY[0x24C5D6C00](v23, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_24B5ABF98(int a1, int a2, void (*a3)(void), uint64_t a4)
{
  v31[1] = a4;
  os_log_type_t v32 = a3;
  int v36 = a2;
  uint64_t v6 = sub_24B6825C0();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (void *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = sub_24B682680();
  uint64_t v9 = *(void *)(v33 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v33);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t v15 = sub_24B6825D0();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  int v37 = a1;
  if (a1)
  {
    uint64_t v43 = sub_24B5AEB4C;
    uint64_t v44 = v16;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    uint64_t v41 = sub_24B566C04;
    uint64_t v42 = &unk_26FE8D318;
    v31[0] = _Block_copy(&aBlock);
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_24B5AE9E0();
    swift_retain();
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5AEA38();
    sub_24B682D80();
    sub_24B6826C0();
    swift_allocObject();
    uint64_t v17 = sub_24B6826A0();
    swift_release();
    swift_release();
    *(void *)(v4 + 128) = v17;
  }
  else
  {
    uint64_t v43 = sub_24B5AEB44;
    uint64_t v44 = v16;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v40 = 1107296256;
    uint64_t v41 = sub_24B566C04;
    uint64_t v42 = &unk_26FE8D2F0;
    v31[0] = _Block_copy(&aBlock);
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_24B5AE9E0();
    swift_retain();
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5AEA38();
    sub_24B682D80();
    sub_24B6826C0();
    swift_allocObject();
    uint64_t v18 = sub_24B6826A0();
    swift_release();
    swift_release();
    *(void *)(v4 + 136) = v18;
  }
  swift_retain();
  swift_release();
  sub_24B682660();
  *uint64_t v8 = 2;
  uint64_t v20 = v34;
  uint64_t v19 = v35;
  (*(void (**)(void *, void, uint64_t))(v34 + 104))(v8, *MEMORY[0x263F8F018], v35);
  MEMORY[0x24C5D47D0](v12, v8);
  (*(void (**)(void *, uint64_t))(v20 + 8))(v8, v19);
  int v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  os_log_type_t v22 = v12;
  uint64_t v23 = v33;
  v21(v22, v33);
  sub_24B682BA0();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v14, v23);
  *(_DWORD *)(v4 + 436) = *(_DWORD *)(v4 + 432);
  char v25 = v37;
  *(unsigned char *)(v4 + 193) = v36 & 1;
  if (v25)
  {
    uint64_t v26 = *(void *)(v4 + 80);
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      *(void *)(v4 + 80) = v28;
LABEL_9:
      v32(v25 & 1);
      (*(void (**)(void))(**(void **)(v4 + 144) + 104))(0);
      return swift_release();
    }
    __break(1u);
  }
  else
  {
    uint64_t v29 = *(void *)(v4 + 88);
    BOOL v27 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (!v27)
    {
      *(void *)(v4 + 88) = v30;
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5AC498()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_24B57CD90();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Created cancel request for automatic capture", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (*(void *)(v5 + 128))
    {
      swift_retain();
      sub_24B6826B0();
      swift_release();
    }
    *(void *)(v5 + 128) = 0;
    swift_release();
    (*(void (**)(uint64_t))(**(void **)(v5 + 144) + 104))(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5AC684()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_24B57CD90();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    uint64_t v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Created cancel request for manual capture", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (*(void *)(v5 + 136))
    {
      swift_retain();
      sub_24B6826B0();
      swift_release();
    }
    *(void *)(v5 + 136) = 0;
    swift_release();
    (*(void (**)(uint64_t))(**(void **)(v5 + 144) + 104))(1);
    return swift_release();
  }
  return result;
}

BOOL sub_24B5AC870(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v23 - v9;
  if (CVBufferCopyAttachment(*(CVBufferRef *)(a1 + 8), (CFStringRef)*MEMORY[0x263EF8ED8], 0))
  {
    self;
    uint64_t v11 = (void *)swift_dynamicCastObjCClass();
    if (v11)
    {
      objc_msgSend(v11, sel_floatValue);
      *(_DWORD *)(v2 + 488) = v12;
      uint64_t v13 = sub_24B57CD90();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v13, v4);
      swift_retain();
      uint64_t v14 = sub_24B6824B0();
      os_log_type_t v15 = sub_24B682B30();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 134349056;
        v23[1] = *(float *)(v2 + 488);
        sub_24B682CD0();
        swift_release();
        _os_log_impl(&dword_24B55E000, v14, v15, "postcheck: Focus pixel blur score = %{public}f", v16, 0xCu);
        MEMORY[0x24C5D6C00](v16, -1, -1);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      float v22 = *(float *)(v2 + 488);
      return v22 >= 0.0 && v22 < 10.0;
    }
    swift_unknownObjectRelease();
  }
  *(_DWORD *)(v2 + 488) = 0;
  uint64_t v17 = sub_24B57CD90();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v17, v4);
  uint64_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_24B55E000, v18, v19, "postcheck: missing blur score in still image data, not using focus pixel blur score in post capture check.", v20, 2u);
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return 1;
}

BOOL sub_24B5ACB88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  float64x2_t v75 = (char *)&v71 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  float64x2_t v76 = (char *)&v71 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v71 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v71 - v19;
  *(_DWORD *)(v2 + 476) = -1082130432;
  uint64_t v21 = *(void *)(v2 + 464);
  if (!v21) {
    return 1;
  }
  float v22 = *(__CVBuffer **)(a1 + 8);
  swift_retain();
  sub_24B5FB7EC(v22);
  double v24 = v23;
  double v25 = *(double *)a1 - v23;
  double v26 = *(double *)a1 + 0.015;
  double v27 = *(double *)(v2 + 224);
  if (v27 < v26 && v25 <= v27)
  {
    uint64_t v29 = sub_24B57CD90();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v20, v29, v4);
    uint64_t v30 = sub_24B6824B0();
    os_log_type_t v31 = sub_24B682B10();
    if (os_log_type_enabled(v30, v31))
    {
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = v4;
      uint64_t v33 = v11;
      uint64_t v34 = v5;
      uint64_t v35 = v32;
      *(_WORD *)os_log_type_t v32 = 0;
      _os_log_impl(&dword_24B55E000, v30, v31, "postcheck: IMU shot frame hit type 1 (triggering video frame time ~= shot frame time)!", v32, 2u);
      int v36 = v35;
      uint64_t v5 = v34;
      uint64_t v11 = v33;
      uint64_t v4 = v74;
      MEMORY[0x24C5D6C00](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
  }
  double v37 = *(double *)(v2 + 152);
  double v38 = v25 + v37;
  double v39 = v26 + v37;
  double v78 = 0.0;
  *(double *)&uint64_t v40 = COERCE_DOUBLE((*(uint64_t (**)(double *, double, double))(*(void *)v21 + 168))(&v78, v38, v26 + v37));
  if (v41)
  {
    uint64_t v50 = sub_24B57CD90();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v50, v4);
    char v51 = sub_24B6824B0();
    os_log_type_t v52 = sub_24B682B20();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 134349312;
      double v77 = v38;
      sub_24B682CD0();
      *(_WORD *)(v53 + 12) = 2050;
      double v77 = v39;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v51, v52, "postcheck: No IMU data available from %{public}f to %{public}f", (uint8_t *)v53, 0x16u);
      MEMORY[0x24C5D6C00](v53, -1, -1);
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 0;
  }
  double v42 = *(double *)&v40;
  uint64_t v43 = sub_24B57CD90();
  os_log_type_t v73 = *(void (**)(char *))(v5 + 16);
  uint64_t v74 = v43;
  v73(v18);
  swift_retain();
  uint64_t v44 = sub_24B6824B0();
  os_log_type_t v45 = sub_24B682B10();
  BOOL v46 = os_log_type_enabled(v44, v45);
  float64x2_t v71 = v11;
  if (v46)
  {
    uint64_t v47 = (_DWORD *)swift_slowAlloc();
    float64x2_t v72 = (void (*)(char *, uint64_t))(v5 + 16);
    os_log_type_t v48 = v47;
    *uint64_t v47 = 134349312;
    double v77 = *(double *)(v2 + 480) + (v38 + v39) * -0.5;
    sub_24B682CD0();
    swift_release();
    *((_WORD *)v48 + 6) = 2050;
    double v77 = v42;
    uint64_t v11 = v71;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v44, v45, "postcheck: IMU ahead of shot frame timestamp by %{public}f with speed = %{public}f", (uint8_t *)v48, 0x16u);
    MEMORY[0x24C5D6C00](v48, -1, -1);
  }
  else
  {

    swift_release();
  }
  float64x2_t v72 = *(void (**)(char *, uint64_t))(v5 + 8);
  v72(v18, v4);
  double v54 = *(double *)(v2 + 480);
  if (v38 <= v54 && v54 < v39)
  {
    uint64_t v58 = v76;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v76, v74, v4);
    uint64_t v59 = sub_24B6824B0();
    os_log_type_t v60 = sub_24B682B10();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v61 = 0;
      uint64_t v62 = "postcheck: IMU shot frame hit type 2 (current time ~= shot frame time)!";
      goto LABEL_30;
    }
LABEL_31:

    v72(v58, v4);
    goto LABEL_32;
  }
  double v56 = v54 + 0.05;
  if (v38 <= v56 && v56 < v39)
  {
    uint64_t v58 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v75, v74, v4);
    uint64_t v59 = sub_24B6824B0();
    os_log_type_t v60 = sub_24B682B10();
    if (os_log_type_enabled(v59, v60))
    {
      os_log_type_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v61 = 0;
      uint64_t v62 = "postcheck: IMU shot frame hit type 3 (predicted time ~= shot frame time)!";
LABEL_30:
      _os_log_impl(&dword_24B55E000, v59, v60, v62, v61, 2u);
      MEMORY[0x24C5D6C00](v61, -1, -1);
      goto LABEL_31;
    }
    goto LABEL_31;
  }
LABEL_32:
  float v63 = v42;
  *(float *)(v2 + 476) = v63;
  ((void (*)(char *, uint64_t, uint64_t))v73)(v11, v74, v4);
  double v64 = v78;
  swift_retain();
  uint64_t v65 = sub_24B6824B0();
  os_log_type_t v66 = sub_24B682B10();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 134349568;
    double v77 = *(float *)(v2 + 476);
    sub_24B682CD0();
    swift_release();
    *(_WORD *)(v67 + 12) = 2050;
    double v77 = v24;
    sub_24B682CD0();
    *(_WORD *)(v67 + 22) = 2050;
    double v77 = v64;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v65, v66, "postcheck: Max IMU angular speed = %{public}f, exposureTime = %{public}f, computed from %{public}ld samples.", (uint8_t *)v67, 0x20u);
    uint64_t v68 = v67;
    uint64_t v11 = v71;
    MEMORY[0x24C5D6C00](v68, -1, -1);
  }
  else
  {

    swift_release();
  }
  v72(v11, v4);
  float v69 = *(float *)(v2 + 476);
  if (v69 < 0.0)
  {
    swift_release();
    return 0;
  }
  if (qword_2697CE198 != -1) {
    swift_once();
  }
  float v70 = *(float *)&dword_2697D0C68;
  swift_release();
  return v69 < v70;
}

uint64_t sub_24B5AD3A0(uint64_t a1)
{
  void (*v11)(double *__return_ptr, uint64_t);
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _DWORD v20[4];
  double v21;
  double v22;
  double v23;
  double v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  char v33;
  char v34;
  double v35[5];
  int v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  unsigned __int8 v43;
  char v44;
  char v45;

  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v8 = sub_24B5ACB88(a1);
  swift_beginAccess();
  *(unsigned char *)(v2 + 67) = v8;
  BOOL v9 = sub_24B5AC870(a1);
  swift_beginAccess();
  sub_24B678E48(v9);
  uint64_t v10 = swift_endAccess();
  uint64_t v11 = *(void (**)(double *__return_ptr, uint64_t))(*(void *)v2 + 448);
  v11(v35, v10);
  v20[2] = LODWORD(v35[0]);
  uint64_t v21 = v35[1];
  float v22 = v35[2];
  float v23 = v35[3];
  double v24 = v35[4];
  double v25 = v36;
  double v26 = v37;
  double v27 = v38;
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  uint64_t v30 = v41;
  os_log_type_t v31 = v42;
  os_log_type_t v32 = v43;
  uint64_t v33 = v44;
  uint64_t v34 = v45;
  uint64_t v12 = j___s6CoreOC14CaptureFactorsV023focusPixelBlurScorePostC11CheckPassedSbvg();
  swift_beginAccess();
  sub_24B678B40(v12 & 1);
  uint64_t v13 = swift_endAccess();
  uint64_t v14 = ((void *(*)(double *__return_ptr, uint64_t))v11)(v35, v13);
  if (v43 == 1)
  {
    uint64_t v15 = sub_24B57CD90();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    swift_retain();
    uint64_t v16 = sub_24B6824B0();
    uint64_t v17 = sub_24B682B30();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134349056;
      v35[0] = *(float *)(v2 + 488);
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v16, v17, "postCaptureCheck: focus pixel blur score = %{public}f", v18, 0xCu);
      MEMORY[0x24C5D6C00](v18, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v14 = (void *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11(v35, (uint64_t)v14);
  return v43;
}

uint64_t sub_24B5AD6E8(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for VIOPoseNode(0);
  MEMORY[0x270FA5388](v7 - 8);
  BOOL v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B682410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OCObjectCentricPoseNode(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B56CF38(a3, (uint64_t)v37, &qword_2697CC9A0);
  if (v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    double v17 = *a2;
    uint64_t v18 = (char *)a2 + *(int *)(type metadata accessor for OCCaptureData(0) + 40);
    long long v20 = *((_OWORD *)v18 + 2);
    __n128 v19 = *((__n128 *)v18 + 3);
    long long v21 = *((_OWORD *)v18 + 1);
    long long v39 = *(_OWORD *)v18;
    long long v40 = v21;
    long long v41 = v20;
    sub_24B673840((uint64_t)v13, &v39, (uint64_t)v9, v17, v19, *((__n128 *)v18 + 4), *((__n128 *)v18 + 5), *((__n128 *)v18 + 6));
    float v22 = *(uint64_t (**)(char *))(**(void **)(v3 + 72) + 144);
    swift_retain();
    char v23 = v22(v9);
    swift_release();
    double v24 = type metadata accessor for VIOPoseNode;
    uint64_t v25 = (uint64_t)v9;
  }
  else
  {
    __n128 v35 = (__n128)v37[1];
    __n128 v36 = (__n128)v37[0];
    __n128 v34 = (__n128)v37[2];
    __n128 v33 = (__n128)v37[3];
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    double v26 = *a2;
    double v27 = (char *)a2 + *(int *)(type metadata accessor for OCCaptureData(0) + 40);
    long long v28 = *((_OWORD *)v27 + 2);
    __n128 v29 = *((__n128 *)v27 + 3);
    long long v30 = *((_OWORD *)v27 + 1);
    long long v39 = *(_OWORD *)v27;
    long long v40 = v30;
    long long v41 = v28;
    sub_24B6736B8((uint64_t)v13, &v39, (uint64_t)v16, v26, v36, v35, v34, v33, v29, *((__n128 *)v27 + 4), *((__n128 *)v27 + 5), *((__n128 *)v27 + 6));
    os_log_type_t v31 = *(uint64_t (**)(char *))(**(void **)(v3 + 72) + 136);
    swift_retain();
    char v23 = v31(v16);
    swift_release();
    double v24 = type metadata accessor for OCObjectCentricPoseNode;
    uint64_t v25 = (uint64_t)v16;
  }
  sub_24B5AEAE4(v25, v24);
  return v23 & 1;
}

BOOL sub_24B5ADA18(uint64_t a1, double a2, double a3, double a4, float32x4_t a5, double a6, double a7, double a8, float32x4_t a9)
{
  int32x4_t v11 = (int32x4_t)vmulq_f32(a5, a5);
  v11.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v11, 2), vadd_f32(*(float32x2_t *)v11.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v11.i8, 1))).u32[0];
  float32x2_t v12 = vrsqrte_f32((float32x2_t)v11.u32[0]);
  float32x2_t v13 = vmul_f32(v12, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v12, v12)));
  float32x4_t v14 = vmulq_n_f32(a5, vmul_f32(v13, vrsqrts_f32((float32x2_t)v11.u32[0], vmul_f32(v13, v13))).f32[0]);
  int32x4_t v15 = (int32x4_t)vmulq_f32(a9, a9);
  v15.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v15, 2), vadd_f32(*(float32x2_t *)v15.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v15.i8, 1))).u32[0];
  float32x2_t v16 = vrsqrte_f32((float32x2_t)v15.u32[0]);
  float32x2_t v17 = vmul_f32(v16, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v16, v16)));
  float32x4_t v18 = vmulq_f32(v14, vmulq_n_f32(a9, vmul_f32(v17, vrsqrts_f32((float32x2_t)v15.u32[0], vmul_f32(v17, v17))).f32[0]));
  float v19 = sub_24B5F8C18(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v18, 2), vaddq_f32(v18, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v18.f32, 1))).f32[0], -1.0, 1.0);
  float v20 = acosf(v19);
  BOOL result = 0;
  float32x4_t v22 = vsubq_f32(a5, a9);
  int8x16_t v23 = (int8x16_t)vmulq_f32(v22, v22);
  float v24 = sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v23.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL))));
  *(float *)a1 = v20;
  *(unsigned char *)(a1 + 4) = 0;
  *(float *)(a1 + 8) = v24;
  *(unsigned char *)(a1 + 12) = 0;
  if (*(float *)(v9 + 200) >= v20) {
    return v24 <= 0.1 || *(float *)(v9 + 204) >= v20;
  }
  return result;
}

BOOL sub_24B5ADB34(uint64_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, float32x4_t a5, float32x4_t a6, float32x4_t a7, float32x4_t a8, float32x4_t a9)
{
  BOOL result = 0;
  float32x4_t v12 = vmlaq_f32(vmulq_f32(a2, (float32x4_t)0), (float32x4_t)0, a3);
  __asm { FMOV            V1.4S, #-1.0 }
  int8x16_t v18 = (int8x16_t)vmulq_f32(vmlaq_f32(vmlaq_f32(v12, _Q1, a4), (float32x4_t)0, a5), vmlaq_f32(vmlaq_f32(vmlaq_f32(vmulq_f32(a6, (float32x4_t)0), (float32x4_t)0, a7), _Q1, a8), (float32x4_t)0, a9));
  _Q1.f32[0] = vaddv_f32(vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL)));
  float32x4_t v19 = vsubq_f32(a5, a9);
  int8x16_t v20 = (int8x16_t)vmulq_f32(v19, v19);
  float v21 = sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v20.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v20, v20, 8uLL))));
  *(_DWORD *)(a1 + 16) = _Q1.i32[0];
  *(unsigned char *)(a1 + 20) = 0;
  *(float *)(a1 + 24) = v21;
  *(unsigned char *)(a1 + 28) = 0;
  if (_Q1.f32[0] >= *(float *)(v9 + 216)) {
    return *(float *)(v9 + 212) >= v21;
  }
  return result;
}

uint64_t sub_24B5ADBB8()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v8 = v6 + v7;
  if (__OFADD__(v6, v7))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  BOOL v11 = __OFADD__(v9, v10);
  uint64_t v12 = v9 + v10;
  if (v11)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  float v13 = (float)v12 / (float)v8;
  swift_beginAccess();
  *(float *)(v0 + 56) = v13;
  uint64_t v14 = sub_24B57CD90();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v14, v1);
  swift_retain();
  int32x4_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v15, v16))
  {
    float32x2_t v17 = (_DWORD *)swift_slowAlloc();
    double v21 = *(double *)&v8;
    int8x16_t v18 = v17;
    *float32x2_t v17 = 134350336;
    v22[0] = *(double *)(v0 + 80);
    sub_24B682CD0();
    *((_WORD *)v18 + 6) = 2050;
    v22[0] = *(double *)(v0 + 96);
    sub_24B682CD0();
    *((_WORD *)v18 + 11) = 2050;
    v22[0] = *(double *)(v0 + 88);
    sub_24B682CD0();
    *((_WORD *)v18 + 16) = 2050;
    v22[0] = *(double *)(v0 + 104);
    uint64_t v19 = sub_24B682CD0();
    *((_WORD *)v18 + 21) = 2050;
    (*(void (**)(double *__return_ptr, uint64_t))(*(void *)v0 + 448))(v22, v19);
    v22[0] = v23;
    sub_24B682CD0();
    swift_release();
    *((_WORD *)v18 + 26) = 2050;
    v22[0] = v21;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v15, v16, "CaptureStats: Automatic shots attempted = %{public}ld and captured = %{public}ld | Manual shots attempted = %{public}ld and captured = %{public}ld | Shot acceptance rate = %{public}f with attempt count = %{public}ld", (uint8_t *)v18, 0x3Eu);
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_24B5ADEB4()
{
  swift_beginAccess();
  return *(void *)(v0 + 112);
}

uint64_t sub_24B5ADEE8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t sub_24B5ADF28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CD90();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain();
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134349056;
    v11[1] = *(void *)(v1 + 224);
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v7, v8, "Pre-check passed at timestamp = %{public}f", v9, 0xCu);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B5AE0D4()
{
  uint64_t result = sub_24B567C60();
  if ((result & 0x100000000) != 0) {
    int v1 = 1051931443;
  }
  else {
    int v1 = result;
  }
  dword_2697D0C68 = v1;
  return result;
}

uint64_t sub_24B5AE104()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24B56CF38(v0 + 272, (uint64_t)v2, &qword_2697CC5A8);
  sub_24B5AE1AC(v2);
  swift_release();
  return v0;
}

uint64_t sub_24B5AE178()
{
  sub_24B5AE104();

  return swift_deallocClassInstance();
}

uint64_t *sub_24B5AE1AC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24B5AE210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result = a12;
  if (a12 != 1) {
    return sub_24B5AE238(a12);
  }
  return result;
}

uint64_t sub_24B5AE238(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CaptureManager()
{
  return self;
}

uint64_t destroy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 88);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 88);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 96);
    uint64_t v7 = *(void *)(a2 + 104);
    *(void *)(a1 + 88) = v5;
    *(void *)(a1 + 96) = v6;
    uint64_t v8 = *(void *)(a2 + 112);
    uint64_t v9 = *(void *)(a2 + 120);
    *(void *)(a1 + 104) = v7;
    *(void *)(a1 + 112) = v8;
    uint64_t v10 = *(void *)(a2 + 128);
    uint64_t v11 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v9;
    *(void *)(a1 + 128) = v10;
    uint64_t v12 = *(void *)(a2 + 144);
    uint64_t v13 = *(void *)(a2 + 152);
    *(void *)(a1 + 136) = v11;
    *(void *)(a1 + 144) = v12;
    *(void *)(a1 + 152) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v14;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    long long v15 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v15;
  }
  return a1;
}

uint64_t assignWithCopy for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v4 = a1 + 88;
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v7 = a2 + 88;
  uint64_t v6 = *(void *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 88) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24B5AE6C4(v4);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v7;
      long long v9 = *(_OWORD *)(v7 + 32);
      long long v8 = *(_OWORD *)(v7 + 48);
      long long v10 = *(_OWORD *)(v7 + 16);
      *(void *)(v4 + 64) = *(void *)(v7 + 64);
      *(_OWORD *)(v4 + 32) = v9;
      *(_OWORD *)(v4 + 48) = v8;
      *(_OWORD *)(v4 + 16) = v10;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 88) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v7;
    long long v11 = *(_OWORD *)(a2 + 104);
    long long v12 = *(_OWORD *)(a2 + 120);
    long long v13 = *(_OWORD *)(a2 + 136);
    *(void *)(v4 + 64) = *(void *)(a2 + 152);
    *(_OWORD *)(v4 + 32) = v12;
    *(_OWORD *)(v4 + 48) = v13;
    *(_OWORD *)(v4 + 16) = v11;
  }
  return a1;
}

uint64_t sub_24B5AE6C4(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v5 = a1 + 88;
  uint64_t v7 = a2 + 88;
  uint64_t v6 = *(void *)(a2 + 88);
  if (!*(void *)(a1 + 88)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_24B5AE6C4(v5);
LABEL_5:
    long long v9 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(v5 + 48) = v9;
    *(void *)(v5 + 64) = *(void *)(v7 + 64);
    long long v10 = *(_OWORD *)(v7 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v7;
    *(_OWORD *)(v5 + 16) = v10;
    return a1;
  }
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureManager.DepthWarpMotionScoreMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(void *)(result + 88) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureManager.DepthWarpMotionScoreMetadata()
{
  return &type metadata for CaptureManager.DepthWarpMotionScoreMetadata;
}

uint64_t sub_24B5AE940()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B5AE978()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 169) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5AE9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B5AE9D8()
{
  return swift_release();
}

unint64_t sub_24B5AE9E0()
{
  unint64_t result = qword_2697CC9E0;
  if (!qword_2697CC9E0)
  {
    sub_24B6825D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC9E0);
  }
  return result;
}

unint64_t sub_24B5AEA38()
{
  unint64_t result = qword_2697CC9F0;
  if (!qword_2697CC9F0)
  {
    sub_24B566158((uint64_t *)&unk_2697CC490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC9F0);
  }
  return result;
}

uint64_t sub_24B5AEA94()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 168) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5AEAE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B5AEB44()
{
  return sub_24B5AC684();
}

uint64_t sub_24B5AEB4C()
{
  return sub_24B5AC498();
}

unint64_t sub_24B5AEB54()
{
  unint64_t result = qword_2697CD160;
  if (!qword_2697CD160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CD160);
  }
  return result;
}

unint64_t sub_24B5AEBC4()
{
  unint64_t result = sub_24B5AEBEC((uint64_t)&unk_26FE8D340);
  qword_2697CE1A8 = result;
  return result;
}

unint64_t sub_24B5AEBEC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC690);
  uint64_t v2 = (void *)sub_24B682F30();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_24B5D4308(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B5AECE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC5F8);
  uint64_t v2 = sub_24B682F30();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v6, (uint64_t)v15, &qword_2697CC600);
    unint64_t result = sub_24B5A975C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_24B563220(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_24B5AEE2C()
{
  qword_2697CE1B8 = (uint64_t)&unk_26FE8D3D0;
}

unint64_t sub_24B5AEE40()
{
  unint64_t result = sub_24B5D6F04((uint64_t)&unk_26FE8D450, &qword_2697CC6D8);
  qword_2697CE1C8 = result;
  return result;
}

uint64_t sub_24B5AEE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v32) = a5;
  uint64_t v31 = a4;
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = 0xE000000000000000;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_24B5D9F60(a1, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v10 = sub_24B562F04(&qword_2697CC580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 3, v10))
  {
    uint64_t v11 = 0;
    LODWORD(v30) = 0;
  }
  else
  {
    uint64_t v12 = v8[*(int *)(v10 + 48)];
    sub_24B56CF38((uint64_t)&v8[*(int *)(v10 + 64)], (uint64_t)&v36, &qword_2697CC588);
    sub_24B682890();
    switch(v12)
    {
      case 6:
        sub_24B682890();
        int v13 = 1;
        break;
      default:
        sub_24B682890();
        int v13 = 0;
        break;
    }
    sub_24B682890();
    sub_24B56CF38((uint64_t)&v36, (uint64_t)v35, &qword_2697CC588);
    if (sub_24B56DEE8((uint64_t)v35) == 1)
    {
      sub_24B682890();
    }
    else
    {
      int8x16_t v28 = v35[5];
      int8x16_t v29 = v35[4];
      int8x16_t v26 = v35[7];
      int8x16_t v27 = v35[6];
      sub_24B5F8A3C(v35[0], v35[1], v35[2], v35[3]);
      v29.i64[0] = sub_24B5F8A3C(v29, v28, v27, v26);
      v28.i64[0] = v14;
      uint64_t v33 = v37;
      unint64_t v34 = v38;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v33;
      unint64_t v38 = v34;
    }
    LODWORD(v30) = v13;
    sub_24B682890();
    uint64_t v15 = sub_24B6822E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v8, v15);
    uint64_t v11 = v37;
    unint64_t v9 = v38;
  }
  v36.i64[0] = v11;
  v36.i64[1] = v9;
  swift_bridgeObjectRetain();
  v29.i64[0] = 0xD00000000000001ALL;
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24B682890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = v36.i64[0];
  int v17 = v30;
  if (!v31) {
    int v17 = 0;
  }
  if (v17 == 1)
  {
    v27.i64[0] = v36.i64[1];
    v26.i64[0] = v36.i64[0];
    uint64_t MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
    v36.i64[0] = 0;
    v36.i64[1] = 0xE000000000000000;
    sub_24B682E40();
    swift_bridgeObjectRelease();
    strcpy(v36.i8, "maxPolyCount: ");
    v36.i8[15] = -18;
    v35[0].i64[0] = MaxPolyCount;
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    v25[1] = v36;
    MaxTextureint Resolution = CPGOutputModelOptionsGetMaxTextureResolution();
    v36.i64[0] = 0;
    v36.i64[1] = 0xE000000000000000;
    sub_24B682E40();
    swift_bridgeObjectRelease();
    v36.i64[0] = 0xD000000000000013;
    v36.i64[1] = 0x800000024B68D910;
    v35[0].i64[0] = MaxTextureResolution;
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0;
    v25[0] = v36;
    double v21 = &off_26FE8D520;
    v36.i64[0] = 0xD000000000000021;
    v36.i64[1] = 0x800000024B68D930;
    unint64_t v30 = 0x800000024B68D980;
    v29.i64[0] = 0x800000024B68D9A0;
    v28.i64[0] = 0x800000024B68D960;
    do
    {
      swift_bridgeObjectRetain();
      CPGOutputModelOptionsGetTextureDestination();
      int TextureFormat = CPGOutputModelOptionsGetTextureFormat();
      uint64_t v23 = 1735290926;
      if (TextureFormat) {
        uint64_t v23 = 0;
      }
      if (TextureFormat == 1) {
        uint64_t v23 = 0x6765706A2ELL;
      }
      if (TextureFormat == 2) {
        uint64_t v23 = 1920492846;
      }
      uint64_t v32 = v23;
      CPGOutputModelOptionsGetTextureLossyCompressionQuality();
      v35[0] = v36;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      int8x16_t v24 = v35[0];
      v35[0].i64[0] = 0;
      v35[0].i64[1] = 0xE000000000000000;
      sub_24B682E40();
      sub_24B682890();
      sub_24B682A70();
      v35[0] = v24;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int8x16_t v36 = v35[0];
      if (v20 <= 3) {
        sub_24B682890();
      }
      ++v20;
      v21 += 2;
    }
    while (v20 != 5);
    swift_arrayDestroy();
    sub_24B682890();
    v35[0].i64[0] = v26.i64[0];
    v35[0].i64[1] = v27.i64[0];
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24B682890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v35[0].i64[0];
  }
  return result;
}

uint64_t sub_24B5AFAEC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_bridgeObjectRetain_n();
  unint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B20();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = a1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = v13;
    *(_DWORD *)uint64_t v12 = 136380675;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24B5627B8(v16, a2, &v18);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v9, v10, "Backend Manager.%{private}s failed to capture the instance!", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v13, -1, -1);
    MEMORY[0x24C5D6C00](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24B5AFD0C(unsigned __int8 *a1)
{
  unsigned __int8 v3 = *a1;
  unsigned int v4 = a1[1];
  type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_24B5AFD98((uint64_t)a1);
  return v3 | ((unint64_t)v4 << 32);
}

uint64_t sub_24B5AFD98(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  v105[0] = (char *)v105 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v110 = (char *)v105 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v105 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v105 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v105 - v18;
  uint64_t v20 = *(void *)(a1 + 8);
  LODWORD(v21) = *(unsigned __int8 *)(a1 + 16);
  os_log_type_t v113 = *(void (***)(void, void, void))(a1 + 24);
  LODWORD(v108) = *(unsigned __int8 *)(a1 + 36);
  uint64_t v22 = CPGOutputModelOptionsCreate();
  uint64_t v114 = v1;
  *(void *)(v1 + 16) = v22;
  if (!v22)
  {
    uint64_t v73 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v73, v3);
    uint64_t v74 = sub_24B6824B0();
    os_log_type_t v75 = sub_24B682B20();
    if (os_log_type_enabled(v74, v75))
    {
      float64x2_t v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)float64x2_t v76 = 0;
      _os_log_impl(&dword_24B55E000, v74, v75, "Function to create output model options returned nil", v76, 2u);
      MEMORY[0x24C5D6C00](v76, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  sub_24B5F66AC(v118);
  float v23 = sub_24B5F8C18((float)v20, (float)v118[4], (float)v118[3]);
  if ((~LODWORD(v23) & 0x7F800000) == 0)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  if (v23 >= 9.2234e18)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v24 = (uint64_t)v23;
  uint64_t v111 = v4;
  uint64_t v112 = (uint64_t (**)(uint64_t, uint64_t))v3;
  if (v20 != (uint64_t)v23)
  {
    LODWORD(v115) = v21;
    uint64_t v25 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v19, v25, v3);
    int8x16_t v26 = sub_24B6824B0();
    os_log_type_t v27 = sub_24B682B20();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134349312;
      v118[0] = v20;
      sub_24B682CD0();
      *(_WORD *)(v28 + 12) = 2050;
      v118[0] = v24;
      uint64_t v4 = v111;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v26, v27, "Clamped max poly count: %{public}ld to device limit. %{public}ld is used.", (uint8_t *)v28, 0x16u);
      uint64_t v29 = v28;
      uint64_t v3 = (uint64_t)v112;
      MEMORY[0x24C5D6C00](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    LOBYTE(v21) = v115;
  }
  if (CPGOutputModelOptionsSetMaxPolyCount())
  {
    uint64_t MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
    uint64_t v31 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v17, v31, v3);
    uint64_t v32 = sub_24B6824B0();
    os_log_type_t v33 = sub_24B682B20();
    if (os_log_type_enabled(v32, v33))
    {
      char v34 = v21;
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 134349312;
      v118[0] = v20;
      sub_24B682CD0();
      *(_WORD *)(v21 + 12) = 2050;
      v118[0] = MaxPolyCount;
      uint64_t v3 = (uint64_t)v112;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v32, v33, "Error setting max poly count: %{public}ld to output model options for custom detail level, %{public}ld is used.", (uint8_t *)v21, 0x16u);
      uint64_t v35 = v21;
      LOBYTE(v21) = v34;
      MEMORY[0x24C5D6C00](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  }
  LOBYTE(v118[0]) = v21;
  if ((PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter() & 0x8000000000000000) == 0)
  {
    if (!CPGOutputModelOptionsSetMaxTextureResolution())
    {
LABEL_19:
      unint64_t v44 = sub_24B5D6F04((uint64_t)&unk_26FE8D568, &qword_2697CC6E0);
      uint64_t v45 = *(void *)(v44 + 64);
      int64_t v115 = v44 + 64;
      uint64_t v46 = 1 << *(unsigned char *)(v44 + 32);
      uint64_t v47 = -1;
      if (v46 < 64) {
        uint64_t v47 = ~(-1 << v46);
      }
      unint64_t v48 = v47 & v45;
      int64_t v49 = (unint64_t)(v46 + 63) >> 6;
      int64_t v50 = 0;
      uint64_t v51 = swift_bridgeObjectRetain();
      while (1)
      {
        os_log_type_t v52 = v113;
        do
        {
          if (v48)
          {
            unint64_t v53 = __clz(__rbit64(v48));
            v48 &= v48 - 1;
            unint64_t v54 = v53 | (v50 << 6);
          }
          else
          {
            int64_t v56 = v50 + 1;
            if (__OFADD__(v50, 1))
            {
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
              goto LABEL_97;
            }
            if (v56 >= v49) {
              goto LABEL_55;
            }
            unint64_t v57 = *(void *)(v115 + 8 * v56);
            ++v50;
            if (!v57)
            {
              int64_t v50 = v56 + 1;
              if (v56 + 1 >= v49) {
                goto LABEL_55;
              }
              unint64_t v57 = *(void *)(v115 + 8 * v50);
              if (!v57)
              {
                int64_t v50 = v56 + 2;
                if (v56 + 2 >= v49) {
                  goto LABEL_55;
                }
                unint64_t v57 = *(void *)(v115 + 8 * v50);
                if (!v57)
                {
                  int64_t v50 = v56 + 3;
                  if (v56 + 3 >= v49) {
                    goto LABEL_55;
                  }
                  unint64_t v57 = *(void *)(v115 + 8 * v50);
                  if (!v57)
                  {
                    int64_t v50 = v56 + 4;
                    if (v56 + 4 >= v49) {
                      goto LABEL_55;
                    }
                    unint64_t v57 = *(void *)(v115 + 8 * v50);
                    if (!v57)
                    {
                      int64_t v58 = v56 + 5;
                      if (v58 >= v49)
                      {
LABEL_55:
                        swift_release();
                        if (v108)
                        {
                          LODWORD(v111) = 0;
                          unint64_t v71 = 0xE300000000000000;
                          uint64_t v72 = 6778480;
                        }
                        else
                        {
                          LODWORD(v111) = 1;
                          unint64_t v71 = 0xE400000000000000;
                          uint64_t v72 = 1734701162;
                        }
                        uint64_t v107 = v72;
                        uint64_t v78 = v51 + 64;
                        uint64_t v79 = 1 << *(unsigned char *)(v51 + 32);
                        uint64_t v80 = -1;
                        if (v79 < 64) {
                          uint64_t v80 = ~(-1 << v79);
                        }
                        unint64_t v81 = v80 & *(void *)(v51 + 64);
                        int64_t v115 = (unint64_t)(v79 + 63) >> 6;
                        uint64_t v112 = (uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
                        os_log_type_t v113 = (void (**)(void, void, void))(v4 + 16);
                        swift_bridgeObjectRetain();
                        int64_t v82 = 0;
                        *(void *)&long long v83 = 136446466;
                        long long v106 = v83;
                        v105[1] = MEMORY[0x263F8EE58] + 8;
                        uint64_t v108 = v51 + 64;
                        uint64_t v109 = v51;
                        while (1)
                        {
                          if (v81)
                          {
                            unint64_t v84 = __clz(__rbit64(v81));
                            v81 &= v81 - 1;
                            unint64_t v85 = v84 | (v82 << 6);
                          }
                          else
                          {
                            int64_t v86 = v82 + 1;
                            if (__OFADD__(v82, 1)) {
                              goto LABEL_95;
                            }
                            if (v86 >= v115)
                            {
LABEL_91:
                              swift_bridgeObjectRelease();
                              swift_release();
                              swift_bridgeObjectRelease();
                              uint64_t v100 = sub_24B57CBE8();
                              uint64_t v101 = v105[0];
                              (*v113)(v105[0], v100, v3);
                              uint64_t v102 = sub_24B6824B0();
                              os_log_type_t v103 = sub_24B682B30();
                              if (os_log_type_enabled(v102, v103))
                              {
                                long long v104 = (uint8_t *)swift_slowAlloc();
                                *(_WORD *)long long v104 = 0;
                                _os_log_impl(&dword_24B55E000, v102, v103, "Finished populating custom detail output model option.", v104, 2u);
                                MEMORY[0x24C5D6C00](v104, -1, -1);
                              }

                              return (*v112)(v101, v3);
                            }
                            unint64_t v87 = *(void *)(v78 + 8 * v86);
                            ++v82;
                            if (!v87)
                            {
                              int64_t v82 = v86 + 1;
                              if (v86 + 1 >= v115) {
                                goto LABEL_91;
                              }
                              unint64_t v87 = *(void *)(v78 + 8 * v82);
                              if (!v87)
                              {
                                int64_t v82 = v86 + 2;
                                if (v86 + 2 >= v115) {
                                  goto LABEL_91;
                                }
                                unint64_t v87 = *(void *)(v78 + 8 * v82);
                                if (!v87)
                                {
                                  int64_t v88 = v86 + 3;
                                  if (v88 >= v115) {
                                    goto LABEL_91;
                                  }
                                  unint64_t v87 = *(void *)(v78 + 8 * v88);
                                  if (!v87)
                                  {
                                    while (1)
                                    {
                                      int64_t v82 = v88 + 1;
                                      if (__OFADD__(v88, 1)) {
                                        goto LABEL_96;
                                      }
                                      if (v82 >= v115) {
                                        goto LABEL_91;
                                      }
                                      unint64_t v87 = *(void *)(v78 + 8 * v82);
                                      ++v88;
                                      if (v87) {
                                        goto LABEL_81;
                                      }
                                    }
                                  }
                                  int64_t v82 = v88;
                                }
                              }
                            }
LABEL_81:
                            unint64_t v81 = (v87 - 1) & v87;
                            unint64_t v85 = __clz(__rbit64(v87)) + (v82 << 6);
                          }
                          Swift::UInt v89 = *(void *)(*(void *)(v51 + 48) + 8 * v85);
                          if (qword_2697CE1C0 != -1) {
                            swift_once();
                          }
                          if (*(void *)(qword_2697CE1C8 + 16))
                          {
                            sub_24B5D43DC(v89);
                            if ((v90 & 1) != 0
                              && (CPGOutputModelOptionsSetTextureFormat()
                               || CPGOutputModelOptionsSetTextureLossyCompressionQuality()
                               || CPGOutputModelOptionsSetTextureDestination()))
                            {
                              uint64_t v91 = sub_24B57CBE8();
                              uint64_t v92 = v110;
                              (*v113)(v110, v91, v3);
                              swift_bridgeObjectRetain_n();
                              uint64_t v93 = sub_24B6824B0();
                              uint64_t v94 = v3;
                              os_log_type_t v95 = sub_24B682B20();
                              if (os_log_type_enabled(v93, v95))
                              {
                                uint64_t v96 = swift_slowAlloc();
                                uint64_t v97 = swift_slowAlloc();
                                v118[0] = v97;
                                *(_DWORD *)uint64_t v96 = v106;
                                PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(v89);
                                uint64_t v116 = v117;
                                uint64_t v98 = sub_24B682820();
                                *(void *)(v96 + 4) = sub_24B5627B8(v98, v99, v118);
                                swift_bridgeObjectRelease();
                                *(_WORD *)(v96 + 12) = 2082;
                                swift_bridgeObjectRetain();
                                *(void *)(v96 + 14) = sub_24B5627B8(v107, v71, v118);
                                swift_bridgeObjectRelease_n();
                                _os_log_impl(&dword_24B55E000, v93, v95, "Error setting texture format %{public}s to %{public}s for custom detail level!", (uint8_t *)v96, 0x16u);
                                swift_arrayDestroy();
                                MEMORY[0x24C5D6C00](v97, -1, -1);
                                MEMORY[0x24C5D6C00](v96, -1, -1);
                              }
                              else
                              {

                                swift_bridgeObjectRelease_n();
                              }
                              (*v112)((uint64_t)v92, v94);
                              uint64_t v3 = v94;
                              uint64_t v78 = v108;
                              uint64_t v51 = v109;
                            }
                          }
                        }
                      }
                      unint64_t v57 = *(void *)(v115 + 8 * v58);
                      if (!v57)
                      {
                        while (1)
                        {
                          int64_t v50 = v58 + 1;
                          if (__OFADD__(v58, 1)) {
                            goto LABEL_103;
                          }
                          if (v50 >= v49) {
                            goto LABEL_55;
                          }
                          unint64_t v57 = *(void *)(v115 + 8 * v50);
                          ++v58;
                          if (v57) {
                            goto LABEL_43;
                          }
                        }
                      }
                      int64_t v50 = v58;
                    }
                  }
                }
              }
            }
LABEL_43:
            unint64_t v48 = (v57 - 1) & v57;
            unint64_t v54 = __clz(__rbit64(v57)) + (v50 << 6);
          }
          Swift::UInt v55 = *(void *)(*(void *)(v44 + 48) + 8 * v54);
          PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureMapOutputs.init(rawValue:)(v55);
          uint64_t v116 = (uint64_t)v52;
          uint64_t v117 = v118[0];
          sub_24B5D6FD8();
        }
        while ((sub_24B682D60() & 1) == 0);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v118[0] = v51;
        unint64_t v61 = sub_24B5D43DC(v55);
        uint64_t v62 = *(void *)(v51 + 16);
        BOOL v63 = (v60 & 1) == 0;
        uint64_t v64 = v62 + v63;
        if (__OFADD__(v62, v63))
        {
LABEL_97:
          __break(1u);
          goto LABEL_98;
        }
        char v65 = v60;
        if (*(void *)(v51 + 24) >= v64)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_24B5D571C();
          }
        }
        else
        {
          sub_24B5D457C(v64, isUniquelyReferenced_nonNull_native);
          unint64_t v66 = sub_24B5D43DC(v55);
          if ((v65 & 1) != (v67 & 1)) {
            goto LABEL_105;
          }
          unint64_t v61 = v66;
        }
        uint64_t v4 = v111;
        uint64_t v51 = v118[0];
        if (v65)
        {
          *(_DWORD *)(*(void *)(v118[0] + 56) + 4 * v61) = 1;
        }
        else
        {
          *(void *)(v118[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
          *(void *)(*(void *)(v51 + 48) + 8 * v61) = v55;
          *(_DWORD *)(*(void *)(v51 + 56) + 4 * v61) = 1;
          uint64_t v68 = *(void *)(v51 + 16);
          BOOL v69 = __OFADD__(v68, 1);
          uint64_t v70 = v68 + 1;
          if (v69) {
            goto LABEL_102;
          }
          *(void *)(v51 + 16) = v70;
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = (uint64_t)v112;
      }
    }
    MaxTextureint Resolution = CPGOutputModelOptionsGetMaxTextureResolution();
    uint64_t v37 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v37, v3);
    unint64_t v38 = sub_24B6824B0();
    os_log_type_t v39 = sub_24B682B20();
    if (!os_log_type_enabled(v38, v39))
    {
LABEL_18:

      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
      goto LABEL_19;
    }
    long long v40 = (_DWORD *)swift_slowAlloc();
    char v41 = v21;
    double v42 = v40;
    _DWORD *v40 = 134349312;
    LOBYTE(v118[0]) = v41;
    uint64_t v43 = PhotogrammetrySession.Configuration.CustomDetailSpecification.TextureDimension.rawValue.getter();
    if ((v43 & 0x8000000000000000) == 0)
    {
      v118[0] = v43;
      sub_24B682CD0();
      *((_WORD *)v42 + 6) = 2050;
      v118[0] = MaxTextureResolution;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v38, v39, "Error setting texture dimension: %{public}ld to output model options for custom detail level, %{public}ld is used.", (uint8_t *)v42, 0x16u);
      MEMORY[0x24C5D6C00](v42, -1, -1);
      goto LABEL_18;
    }
    goto LABEL_104;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B5B0AD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[8];
  if (!*(void *)(v9 + 16))
  {
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD000000000000025;
    unint64_t v26 = 0x800000024B68D360;
LABEL_23:
    *(void *)(v25 + 8) = v26;
    *(unsigned char *)(v25 + 16) = 5;
    swift_willThrow();
    return a2;
  }
  uint64_t v10 = *a1;
  uint64_t v30 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v44 = a1[4];
  uint64_t v45 = v11;
  if (a2) {
    a2 = 34;
  }
  else {
    a2 = 22;
  }
  uint64_t v12 = a1[6];
  uint64_t v42 = a1[5];
  uint64_t v43 = v12;
  uint64_t v41 = a1[7];
  uint64_t result = CPGDepthPointCloudCreateWithSensorConfig();
  uint64_t v31 = result;
  if (!result)
  {
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    int v48 = a2;
    sub_24B682F90();
    sub_24B682890();
    swift_bridgeObjectRelease();
    uint64_t v27 = v46;
    unint64_t v26 = v47;
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v25 = v27;
    goto LABEL_23;
  }
  v28[1] = v2;
  uint64_t v15 = v30;
  a2 = v31;
  uint64_t v40 = *(void *)(v10 + 16);
  if (!v40) {
    return a2;
  }
  unint64_t v16 = 0;
  uint64_t v38 = v45 + 32;
  uint64_t v39 = v10 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v37 = v30 + 32;
  uint64_t v34 = v42 + 32;
  uint64_t v35 = v43 + 32;
  uint64_t v32 = v9 + 32;
  uint64_t v33 = v41 + 32;
  uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v18 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  *(void *)&long long v14 = 134349056;
  long long v29 = v14;
  while (v16 < *(void *)(v45 + 16))
  {
    if (v16 >= *(void *)(v15 + 16)) {
      goto LABEL_26;
    }
    if (v16 >= *(void *)(v44 + 16)) {
      goto LABEL_27;
    }
    if (v16 >= *(void *)(v43 + 16)) {
      goto LABEL_28;
    }
    if (v16 >= *(void *)(v42 + 16)) {
      goto LABEL_29;
    }
    if (v16 >= *(void *)(v41 + 16)) {
      goto LABEL_30;
    }
    if (v16 >= *(void *)(v9 + 16)) {
      goto LABEL_31;
    }
    uint64_t result = CPGDepthPointCloudAddPoint();
    if (result)
    {
      uint64_t v19 = sub_24B57CBE8();
      (*v17)(v8, v19, v5);
      uint64_t v20 = sub_24B6824B0();
      os_log_type_t v21 = sub_24B682B20();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = v9;
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = v29;
        *(void *)(v23 + 4) = v16;
        _os_log_impl(&dword_24B55E000, v20, v21, "Failed to add point %{public}ld in LiDAR point cloud", (uint8_t *)v23, 0xCu);
        uint64_t v24 = v23;
        uint64_t v9 = v22;
        uint64_t v15 = v30;
        MEMORY[0x24C5D6C00](v24, -1, -1);
      }

      uint64_t result = (*v18)(v8, v5);
      a2 = v31;
    }
    if (v40 == ++v16) {
      return a2;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24B5B0F0C(uint64_t a1, NSObject *a2, int a3)
{
  LODWORD(v219) = a3;
  unint64_t v215 = a2;
  uint64_t v250 = *MEMORY[0x263EF8340];
  id v225 = (int *)type metadata accessor for PhotogrammetrySample(0);
  uint64_t v5 = MEMORY[0x270FA5388](v225);
  uint64_t v209 = (double *)((char *)&v192 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v205 = (double *)((char *)&v192 - v8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v213 = (double *)((char *)&v192 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v204 = (double *)((char *)&v192 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v217 = (uint64_t *)((char *)&v192 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v220 = (double *)((char *)&v192 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v210 = (double *)((char *)&v192 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v222 = (uint64_t)&v192 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (uint64_t *)((char *)&v192 - v21);
  uint64_t v23 = sub_24B6824D0();
  uint64_t v223 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v208 = ((char *)&v192 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  os_log_type_t v211 = ((char *)&v192 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  id v216 = (char *)&v192 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v206 = (char *)&v192 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v212 = (char *)&v192 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  *(void *)&float64_t v224 = (char *)&v192 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  os_log_type_t v221 = (char *)&v192 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v214 = (char *)&v192 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = ((char *)&v192 - v40);
  uint64_t v42 = sub_24B562F04(&qword_2697CC118);
  uint64_t v43 = MEMORY[0x270FA5388](v42 - 8);
  uint64_t v207 = (uint64_t)&v192 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  unint64_t v47 = (float32x4_t *)((char *)&v192 - v46);
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  int64_t v50 = (float32x4_t *)((char *)&v192 - v49);
  MEMORY[0x270FA5388](v48);
  os_log_type_t v52 = (int *)((char *)&v192 - v51);
  uint64_t v226 = a1;
  if (!sub_24B5A2D38(*(CVPixelBufferRef *)(a1 + 8)))
  {
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v60 = 0xD00000000000002DLL;
    *(void *)(v60 + 8) = 0x800000024B68D390;
    *(unsigned char *)(v60 + 16) = 5;
    swift_willThrow();
    return (uint64_t)v41;
  }
  uint64_t v202 = v3;
  uint64_t v203 = v23;
  uint64_t v249 = 0;
  uint64_t v53 = CPGSampleMetadataCreate();
  if (!v53
    || (uint64_t v54 = sub_24B682710(),
        uint64_t v218 = v53,
        Swift::UInt v55 = (void *)v54,
        int v56 = CPGSampleMetadataSetFromCGImageProperties(),
        v55,
        v56))
  {
    sub_24B5D7D94();
    swift_allocError();
    unint64_t v58 = 0xD000000000000030;
    uint64_t v59 = "CPGSampleMetadataSetFromCGImageProperties failed";
LABEL_5:
    *(void *)uint64_t v57 = v58;
    *(void *)(v57 + 8) = (unint64_t)(v59 - 32) | 0x8000000000000000;
    *(unsigned char *)(v57 + 16) = 5;
LABEL_6:
    swift_willThrow();
LABEL_104:
    CPGSampleMetadataRelease();
    return (uint64_t)v41;
  }
  uint64_t v201 = v226 + v225[12];
  sub_24B563A6C(v201, (uint64_t)v52, &qword_2697CC118);
  uint64_t v62 = type metadata accessor for PhotogrammetrySample.Camera(0);
  unint64_t v200 = *(unsigned int (**)(int *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48);
  if (v200(v52, 1, v62) == 1)
  {
    sub_24B5632A8((uint64_t)v52, &qword_2697CC118);
  }
  else
  {
    int v63 = *v52;
    sub_24B5DA128((uint64_t)v52, type metadata accessor for PhotogrammetrySample.Camera);
    if (v63 < 0) {
      __break(1u);
    }
    if (CPGSampleMetadataSetCameraID())
    {
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD000000000000023;
      uint64_t v59 = "CPGSampleMetadataSetCameraID failed";
      goto LABEL_5;
    }
  }
  sub_24B563A6C(v201, (uint64_t)v50, &qword_2697CC118);
  if (v200((int *)v50, 1, v62) == 1)
  {
    sub_24B5632A8((uint64_t)v50, &qword_2697CC118);
  }
  else
  {
    float32x4_t v65 = v50[1];
    float32x4_t v197 = v50[2];
    float32x4_t v198 = v65;
    float32x4_t v199 = v50[3];
    sub_24B5DA128((uint64_t)v50, type metadata accessor for PhotogrammetrySample.Camera);
    if (CPGSampleMetadataSetPrincipalPoint())
    {
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD000000000000029;
      uint64_t v59 = "CPGSampleMetadataSetPrincipalPoint failed";
      goto LABEL_5;
    }
    if (CPGSampleMetadataSetFocalLengthInPixel())
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v74 = 0xD00000000000002DLL;
      *(void *)(v74 + 8) = 0x800000024B68D610;
      *(unsigned char *)(v74 + 16) = 5;
      goto LABEL_6;
    }
  }
  sub_24B563A6C(v201, (uint64_t)v47, &qword_2697CC118);
  if (v200((int *)v47, 1, v62) == 1)
  {
    sub_24B5632A8((uint64_t)v47, &qword_2697CC118);
    float64_t v64 = v224;
  }
  else
  {
    float32x4_t v66 = v47[4];
    float32x4_t v198 = v47[5];
    float32x4_t v199 = v66;
    float32x4_t v67 = v47[6];
    float32x4_t v196 = v47[7];
    float32x4_t v197 = v67;
    sub_24B5DA128((uint64_t)v47, type metadata accessor for PhotogrammetrySample.Camera);
    sub_24B5F89D4(v235, v199, v198, v197, v196);
    float64x2_t v241 = v235[0];
    float64x2_t v242 = v235[1];
    float64x2_t v243 = v235[2];
    float64x2_t v244 = v235[3];
    float64x2_t v245 = v235[4];
    float64x2_t v246 = v235[5];
    float64x2_t v247 = v235[6];
    float64x2_t v248 = v235[7];
    int v68 = CPGSampleMetadataSetCameraTransform();
    float64_t v64 = v224;
    if (v68)
    {
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD00000000000002ALL;
      uint64_t v59 = "CPGSampleMetadataSetCameraTransform failed";
      goto LABEL_5;
    }
  }
  v199.i64[0] = v62;
  uint64_t v69 = v226;
  if ((*(unsigned char *)(v226 + 64) & 1) == 0)
  {
    *(double *)&unint64_t v70 = -*(double *)(v226 + 56);
    float64x2_t v241 = vnegq_f64((float64x2_t)vextq_s8(*(int8x16_t *)(v226 + 40), *(int8x16_t *)(v226 + 40), 8uLL));
    float64x2_t v242 = (float64x2_t)v70;
    if (CPGSampleMetadataSetGravity())
    {
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD000000000000022;
      uint64_t v59 = "CPGSampleMetadataSetGravity failed";
      goto LABEL_5;
    }
  }
  unint64_t v71 = *(void **)(v69 + 24);
  if (v71)
  {
    uint64_t v72 = v71;
    if (CPGSampleMetadataSetDepthMapWithConfidence())
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v73 = 0xD000000000000031;
      *(void *)(v73 + 8) = 0x800000024B68D540;
      *(unsigned char *)(v73 + 16) = 5;
      swift_willThrow();

      goto LABEL_104;
    }
    uint64_t v75 = sub_24B57CBE8();
    (*(void (**)(NSObject *, uint64_t, uint64_t))(v223 + 16))(v41, v75, v203);
    sub_24B5D9F60(v69, (uint64_t)v22, type metadata accessor for PhotogrammetrySample);
    float64x2_t v76 = sub_24B6824B0();
    os_log_type_t v77 = sub_24B682B30();
    if (os_log_type_enabled(v76, v77))
    {
      os_log_type_t v78 = v77;
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 134349056;
      v198.i64[0] = (uint64_t)(v79 + 4);
      v197.i64[0] = *v22;
      sub_24B5DA128((uint64_t)v22, type metadata accessor for PhotogrammetrySample);
      *(void *)&v241.f64[0] = v197.i64[0];
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v76, v78, "Prepared depth data map of sample %{public}ld for reconstruction.", v79, 0xCu);
      uint64_t v69 = v226;
      MEMORY[0x24C5D6C00](v79, -1, -1);
      uint64_t v80 = v72;
    }
    else
    {
      sub_24B5DA128((uint64_t)v22, type metadata accessor for PhotogrammetrySample);
      uint64_t v80 = v76;
      float64x2_t v76 = v72;
    }

    (*(void (**)(NSObject *, uint64_t))(v223 + 8))(v41, v203);
    float64_t v64 = v224;
  }
  unint64_t v81 = *(void **)(v69 + 72);
  if (v81)
  {
    uint64_t v41 = v81;
    if (CPGSampleMetadataSetMaskWithCVPixelBuffer())
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v82 = 0xD000000000000030;
      *(void *)(v82 + 8) = 0x800000024B68D500;
      *(unsigned char *)(v82 + 16) = 5;
      swift_willThrow();

      goto LABEL_104;
    }
  }
  long long v83 = v225;
  sub_24B56CF38(v69 + v225[13], (uint64_t)v240, &qword_2697CC120);
  uint64_t v84 = v69;
  uint64_t v85 = v222;
  sub_24B5D9F60(v84, v222, type metadata accessor for PhotogrammetrySample);
  sub_24B56CF38((uint64_t)v240, (uint64_t)&v241, &qword_2697CC120);
  if (sub_24B56DEE8((uint64_t)&v241) == 1)
  {
    uint64_t v86 = v85 + v83[14];
    uint64_t v87 = *(void *)v86;
    uint64_t v88 = *(void *)(v86 + 8);
    uint64_t v89 = *(void *)(v86 + 16);
    uint64_t v90 = *(void *)(v86 + 24);
    v197.i64[0] = *(void *)(v86 + 32);
    uint64_t v91 = *(void *)(v86 + 40);
    uint64_t v193 = v87;
    uint64_t v194 = v91;
    v198.i64[0] = *(void *)(v86 + 48);
    uint64_t v92 = *(void *)(v86 + 56);
    uint64_t v195 = v89;
    v196.i64[0] = v92;
    char v93 = *(unsigned char *)(v86 + 64);
    sub_24B5DA128(v85, type metadata accessor for PhotogrammetrySample);
    uint64_t v94 = v223;
    if (v93) {
      goto LABEL_50;
    }
  }
  else
  {
    uint64_t v88 = *(void *)&v245.f64[1];
    uint64_t v90 = *(void *)&v246.f64[1];
    uint64_t v193 = *(void *)&v245.f64[0];
    uint64_t v194 = *(void *)&v247.f64[1];
    v197.i64[0] = *(void *)&v247.f64[0];
    uint64_t v195 = *(void *)&v246.f64[0];
    v196.i64[0] = *(void *)&v248.f64[1];
    v198.i64[0] = *(void *)&v248.f64[0];
    sub_24B5DA128(v85, type metadata accessor for PhotogrammetrySample);
    uint64_t v94 = v223;
  }
  uint64_t v96 = (uint64_t)v220;
  os_log_type_t v95 = v221;
  if (v219)
  {
    uint64_t v97 = sub_24B57CBE8();
    (*(void (**)(float64_t, uint64_t, uint64_t))(v94 + 16))(COERCE_FLOAT64_T(*(void *)&v64), v97, v203);
    uint64_t v98 = v217;
    sub_24B5D9F60(v226, (uint64_t)v217, type metadata accessor for PhotogrammetrySample);
    unint64_t v99 = sub_24B6824B0();
    os_log_type_t v100 = sub_24B682B30();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = swift_slowAlloc();
      uint64_t v102 = swift_slowAlloc();
      uint64_t v239 = v102;
      *(_DWORD *)uint64_t v101 = 136446466;
      *(void *)&v227.f64[0] = v193;
      *(void *)&v227.f64[1] = v88;
      *(void *)&v228.f64[0] = v195;
      *(void *)&v228.f64[1] = v90;
      *(void *)&v229.f64[0] = v197.i64[0];
      *(void *)&v229.f64[1] = v194;
      *(void *)&v230.f64[0] = v198.i64[0];
      *(void *)&v230.f64[1] = v196.i64[0];
      type metadata accessor for simd_float4x4(0);
      uint64_t v103 = sub_24B682820();
      *(void *)&v227.f64[0] = sub_24B5627B8(v103, v104, &v239);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v101 + 12) = 2050;
      float64_t v105 = *(double *)v217;
      sub_24B5DA128((uint64_t)v217, type metadata accessor for PhotogrammetrySample);
      v227.f64[0] = v105;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v99, v100, "Ignored setting CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v101, 0x16u);
      swift_arrayDestroy();
      uint64_t v106 = v102;
      uint64_t v94 = v223;
      MEMORY[0x24C5D6C00](v106, -1, -1);
      MEMORY[0x24C5D6C00](v101, -1, -1);
    }
    else
    {
      sub_24B5DA128((uint64_t)v98, type metadata accessor for PhotogrammetrySample);
    }

    (*(void (**)(float64_t, uint64_t))(v94 + 8))(COERCE_FLOAT64_T(*(void *)&v224), v203);
  }
  else
  {
    v107.i64[0] = v193;
    v107.i64[1] = v88;
    v108.i64[0] = v195;
    v108.i64[1] = v90;
    v109.i64[0] = v197.i64[0];
    v109.i64[1] = v194;
    v110.i64[0] = v198.i64[0];
    v110.i64[1] = v196.i64[0];
    uint64_t v239 = 0;
    sub_24B5F89D4(v236, v107, v108, v109, v110);
    float64x2_t v227 = v236[0];
    float64x2_t v228 = v236[1];
    float64x2_t v229 = v236[2];
    float64x2_t v230 = v236[3];
    float64x2_t v231 = v236[4];
    float64x2_t v232 = v236[5];
    float64x2_t v233 = v236[6];
    float64x2_t v234 = v236[7];
    if (CPGBoundingBoxCreateFromTransform())
    {
      uint64_t v111 = sub_24B57CBE8();
      uint64_t v112 = v203;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v95, v111, v203);
      sub_24B5D9F60(v226, v96, type metadata accessor for PhotogrammetrySample);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v113 = sub_24B682B20();
      if (os_log_type_enabled(v41, v113))
      {
        uint64_t v114 = swift_slowAlloc();
        uint64_t v226 = swift_slowAlloc();
        uint64_t v238 = v226;
        *(_DWORD *)uint64_t v114 = 136446466;
        *(void *)&v227.f64[0] = v193;
        *(void *)&v227.f64[1] = v88;
        *(void *)&v228.f64[0] = v195;
        *(void *)&v228.f64[1] = v90;
        *(void *)&v229.f64[0] = v197.i64[0];
        *(void *)&v229.f64[1] = v194;
        *(void *)&v230.f64[0] = v198.i64[0];
        *(void *)&v230.f64[1] = v196.i64[0];
        type metadata accessor for simd_float4x4(0);
        uint64_t v115 = sub_24B682820();
        *(void *)&v227.f64[0] = sub_24B5627B8(v115, v116, &v238);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v114 + 12) = 2050;
        float64_t v117 = *v220;
        sub_24B5DA128((uint64_t)v220, type metadata accessor for PhotogrammetrySample);
        v227.f64[0] = v117;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v41, v113, "Failed to create CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v114, 0x16u);
        uint64_t v118 = v226;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v118, -1, -1);
        MEMORY[0x24C5D6C00](v114, -1, -1);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v221, v203);
      }
      else
      {
        sub_24B5DA128(v96, type metadata accessor for PhotogrammetrySample);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v221, v112);
      }
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD000000000000028;
      uint64_t v59 = "CPGBoundingBoxCreateFromTransform failed";
      goto LABEL_5;
    }
    if (!v239) {
      goto LABEL_107;
    }
    int v132 = CPGSampleMetadataSetObjectBoundingBox();
    uint64_t v133 = v214;
    if (v132)
    {
      uint64_t v134 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v133, v134, v203);
      uint64_t v135 = v210;
      sub_24B5D9F60(v226, (uint64_t)v210, type metadata accessor for PhotogrammetrySample);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v136 = sub_24B682B20();
      if (os_log_type_enabled(v41, v136))
      {
        uint64_t v137 = swift_slowAlloc();
        uint64_t v226 = swift_slowAlloc();
        uint64_t v238 = v226;
        *(_DWORD *)uint64_t v137 = 136446466;
        *(void *)&v227.f64[0] = v193;
        *(void *)&v227.f64[1] = v88;
        *(void *)&v228.f64[0] = v195;
        *(void *)&v228.f64[1] = v90;
        *(void *)&v229.f64[0] = v197.i64[0];
        *(void *)&v229.f64[1] = v194;
        *(void *)&v230.f64[0] = v198.i64[0];
        *(void *)&v230.f64[1] = v196.i64[0];
        type metadata accessor for simd_float4x4(0);
        uint64_t v138 = sub_24B682820();
        *(void *)&v227.f64[0] = sub_24B5627B8(v138, v139, &v238);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v137 + 12) = 2050;
        float64_t v140 = *v135;
        sub_24B5DA128((uint64_t)v135, type metadata accessor for PhotogrammetrySample);
        v227.f64[0] = v140;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v41, v136, "Failed to set CPG bounding box %{public}s for\nsample = %{public}ld", (uint8_t *)v137, 0x16u);
        uint64_t v141 = v226;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v141, -1, -1);
        MEMORY[0x24C5D6C00](v137, -1, -1);

        (*(void (**)(char *, uint64_t))(v223 + 8))(v214, v203);
      }
      else
      {
        sub_24B5DA128((uint64_t)v135, type metadata accessor for PhotogrammetrySample);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v133, v203);
      }
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v151 = 0xD00000000000002CLL;
      *(void *)(v151 + 8) = 0x800000024B68D4D0;
      *(unsigned char *)(v151 + 16) = 5;
      swift_willThrow();
      CPGBoundingBoxRelease();
      goto LABEL_104;
    }
    CPGBoundingBoxRelease();
  }
LABEL_50:
  uint64_t v119 = v226;
  uint64_t v120 = v226 + v225[17];
  if ((*(unsigned char *)(v120 + 8) & 1) == 0)
  {
    sub_24B5F8B94(*(double *)v120);
    uint64_t v121 = (void *)sub_24B6827A0();
    swift_bridgeObjectRelease();
    uint64_t v41 = CPGSampleMetadataSetTimestamp();

    if (v41)
    {
      sub_24B5D7D94();
      swift_allocError();
      unint64_t v58 = 0xD000000000000024;
      uint64_t v59 = "CPGSampleMetadataSetTimestamp failed";
      goto LABEL_5;
    }
  }
  unint64_t v122 = *(void **)(v119 + 80);
  if (v122)
  {
    LOBYTE(v239) = 0;
    id v123 = v122;
    sub_24B5FABB8(&v239, &v227);
    uint64_t v41 = *(NSObject **)&v231.f64[0];
    float64_t v224 = v227.f64[0];
    os_log_type_t v221 = *(char **)&v228.f64[0];
    uint64_t v222 = *(void *)&v227.f64[1];
    uint64_t v124 = v202;
    uint64_t v125 = sub_24B5B0AD8((uint64_t *)&v227, v239);
    uint64_t v202 = v124;
    if (v124)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      CPGSampleMetadataRelease();
      return (uint64_t)v41;
    }
    uint64_t v220 = (double *)v123;
    uint64_t v142 = v125;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v222 = v142;
    uint64_t NumberOfPoints = CPGDepthPointCloudGetNumberOfPoints();
    uint64_t v144 = sub_24B57CBE8();
    uint64_t v127 = *(void (**)(char *))(v223 + 16);
    uint64_t v145 = v212;
    os_log_type_t v221 = (char *)v144;
    v127(v212);
    uint64_t v41 = sub_24B6824B0();
    os_log_type_t v146 = sub_24B682B30();
    if (os_log_type_enabled(v41, v146))
    {
      uint64_t v147 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v147 = 134349056;
      uint64_t v145 = v212;
      *(void *)&v227.f64[0] = NumberOfPoints;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v41, v146, "Created LiDAR point cloud of %{public}llu points", v147, 0xCu);
      MEMORY[0x24C5D6C00](v147, -1, -1);
    }

    float64_t v224 = *(double *)(v223 + 8);
    (*(void (**)(char *, uint64_t))&v224)(v145, v203);
    if (!NumberOfPoints) {
      goto LABEL_83;
    }
    uint64_t v148 = v207;
    sub_24B563A6C(v201, v207, &qword_2697CC118);
    uint64_t v149 = v199.i64[0];
    if (v200((int *)v148, 1, v199.i64[0]) == 1)
    {
      sub_24B5632A8(v148, &qword_2697CC118);
    }
    else
    {
      uint64_t v152 = v148 + *(int *)(v149 + 36);
      uint64_t v153 = *(void *)v152;
      uint64_t v154 = *(void *)(v152 + 8);
      uint64_t v156 = *(void *)(v152 + 16);
      simd_float4 v155 = *(char **)(v152 + 24);
      uint64_t v213 = *(double **)(v152 + 32);
      uint64_t v214 = v155;
      simd_float4 v157 = *(void **)(v152 + 40);
      id v216 = *(char **)(v152 + 48);
      uint64_t v217 = v157;
      uint64_t v219 = *(void *)(v152 + 56);
      char v158 = *(unsigned char *)(v152 + 64);
      sub_24B5DA128(v148, type metadata accessor for PhotogrammetrySample.Camera);
      if ((v158 & 1) == 0)
      {
        v159.i64[0] = v153;
        v159.i64[1] = v154;
        v160.i64[0] = v156;
        v160.i64[1] = (uint64_t)v214;
        v161.i64[0] = (uint64_t)v213;
        v161.i64[1] = (uint64_t)v217;
        v162.i64[0] = (uint64_t)v216;
        v162.i64[1] = v219;
        goto LABEL_77;
      }
    }
    float32x4_t v159 = *(float32x4_t *)MEMORY[0x263EF89A8];
    float32x4_t v160 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
    float32x4_t v161 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
    float32x4_t v162 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 48);
LABEL_77:
    float32x4_t v163 = v220;
    sub_24B5F89D4(v237, v159, v160, v161, v162);
    float64x2_t v227 = v237[0];
    float64x2_t v228 = v237[1];
    float64x2_t v229 = v237[2];
    float64x2_t v230 = v237[3];
    float64x2_t v231 = v237[4];
    float64x2_t v232 = v237[5];
    float64x2_t v233 = v237[6];
    float64x2_t v234 = v237[7];
    uint64_t v41 = v218;
    if (CPGSampleMetadataSetDepthPointCloudWithExtrinsics())
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v164 = 0xD000000000000038;
      *(void *)(v164 + 8) = 0x800000024B68D430;
      *(unsigned char *)(v164 + 16) = 5;
      swift_willThrow();
      CPGDepthPointCloudRelease();

      goto LABEL_104;
    }
    ((void (*)(char *, char *, uint64_t))v127)(v206, v221, v203);
    uint64_t v165 = v204;
    sub_24B5D9F60(v226, (uint64_t)v204, type metadata accessor for PhotogrammetrySample);
    uint64_t v41 = sub_24B6824B0();
    os_log_type_t v166 = sub_24B682B30();
    if (os_log_type_enabled(v41, v166))
    {
      int64_t v167 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int64_t v167 = 134349056;
      float64_t v168 = *v165;
      sub_24B5DA128((uint64_t)v165, type metadata accessor for PhotogrammetrySample);
      v227.f64[0] = v168;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v41, v166, "Successfully added LiDAR point cloud of sample %{public}ld", v167, 0xCu);
      MEMORY[0x24C5D6C00](v167, -1, -1);
    }
    else
    {
      sub_24B5DA128((uint64_t)v165, type metadata accessor for PhotogrammetrySample);
    }

    (*(void (**)(char *, uint64_t))&v224)(v206, v203);
LABEL_83:
    CPGDepthPointCloudRelease();

    uint64_t v150 = v215;
    goto LABEL_84;
  }
  uint64_t v126 = sub_24B57CBE8();
  uint64_t v127 = *(void (**)(char *))(v94 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v127)(v216, v126, v203);
  unint64_t v128 = v213;
  sub_24B5D9F60(v119, (uint64_t)v213, type metadata accessor for PhotogrammetrySample);
  uint64_t v41 = sub_24B6824B0();
  os_log_type_t v129 = sub_24B682B20();
  if (os_log_type_enabled(v41, v129))
  {
    uint64_t v130 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v130 = 134349056;
    float64_t v131 = *v128;
    sub_24B5DA128((uint64_t)v128, type metadata accessor for PhotogrammetrySample);
    v227.f64[0] = v131;
    uint64_t v94 = v223;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v41, v129, "Sample %{public}ld missing LiDAR point cloud!", v130, 0xCu);
    MEMORY[0x24C5D6C00](v130, -1, -1);
  }
  else
  {
    sub_24B5DA128((uint64_t)v128, type metadata accessor for PhotogrammetrySample);
  }
  uint64_t v150 = v215;

  float64_t v224 = *(double *)(v94 + 8);
  (*(void (**)(char *, uint64_t))&v224)(v216, v203);
LABEL_84:
  if (v150)
  {
    uint64_t v169 = v226 + v225[19];
    uint64_t v170 = (uint64_t *)(v226 + v225[20]);
    uint64_t v171 = *v170;
    uint64_t v172 = *((unsigned __int8 *)v170 + 8);
    simd_float4 v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)v150->isa + 13);
    swift_retain();
    uint64_t v174 = v171;
    uint64_t v41 = v150;
    unint64_t v175 = v173(v169, v174, v172);
    swift_release();
  }
  else
  {
    uint64_t v176 = v226 + v225[20];
    if (*(unsigned char *)(v176 + 8)) {
      goto LABEL_100;
    }
    unint64_t v175 = *(void *)v176;
  }
  if ((v175 & 0x8000000000000000) == 0)
  {
    if (!(v175 >> 31))
    {
      int v177 = CPGSampleMetadataSetSegmentID();
      uint64_t v178 = sub_24B57CBE8();
      if (v177)
      {
        uint64_t v41 = v208;
        ((void (*)(NSObject *, uint64_t, uint64_t))v127)(v208, v178, v203);
        unint64_t v179 = v209;
        sub_24B5D9F60(v226, (uint64_t)v209, type metadata accessor for PhotogrammetrySample);
        uint64_t v180 = sub_24B6824B0();
        os_log_type_t v181 = sub_24B682B20();
        if (os_log_type_enabled(v180, v181))
        {
          uint64_t v182 = swift_slowAlloc();
          *(_DWORD *)uint64_t v182 = 134349312;
          *(void *)&v227.f64[0] = v175;
          sub_24B682CD0();
          *(_WORD *)(v182 + 12) = 2050;
          uint64_t v183 = (uint64_t)v179;
          float64_t v184 = *v179;
          sub_24B5DA128(v183, type metadata accessor for PhotogrammetrySample);
          v227.f64[0] = v184;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v180, v181, "Failed to set static segment ID %{public}ld for sample = %{public}ld", (uint8_t *)v182, 0x16u);
          MEMORY[0x24C5D6C00](v182, -1, -1);
        }
        else
        {
          sub_24B5DA128((uint64_t)v179, type metadata accessor for PhotogrammetrySample);
        }
        uint64_t v190 = v41;
      }
      else
      {
        uint64_t v41 = v211;
        ((void (*)(NSObject *, uint64_t, uint64_t))v127)(v211, v178, v203);
        uint64_t v185 = v205;
        sub_24B5D9F60(v226, (uint64_t)v205, type metadata accessor for PhotogrammetrySample);
        uint64_t v180 = sub_24B6824B0();
        os_log_type_t v186 = sub_24B682B30();
        if (os_log_type_enabled(v180, v186))
        {
          uint64_t v187 = swift_slowAlloc();
          *(_DWORD *)uint64_t v187 = 134349312;
          *(void *)&v227.f64[0] = v175;
          sub_24B682CD0();
          *(_WORD *)(v187 + 12) = 2050;
          uint64_t v188 = (uint64_t)v185;
          float64_t v189 = *v185;
          sub_24B5DA128(v188, type metadata accessor for PhotogrammetrySample);
          v227.f64[0] = v189;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v180, v186, "Success in setting static segment ID %{public}ld for sample = %{public}ld", (uint8_t *)v187, 0x16u);
          MEMORY[0x24C5D6C00](v187, -1, -1);
        }
        else
        {
          sub_24B5DA128((uint64_t)v185, type metadata accessor for PhotogrammetrySample);
        }
        uint64_t v190 = v211;
      }

      (*(void (**)(NSObject *, uint64_t))&v224)(v190, v203);
      goto LABEL_100;
    }
    __break(1u);
LABEL_107:
    __break(1u);
    goto LABEL_108;
  }
LABEL_100:
  if ((*(void *)v226 & 0x8000000000000000) == 0)
  {
    if (CPGSampleCreateWithCVPixelBuffer() || (uint64_t v41 = v249) == 0)
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v191 = 0xD000000000000028;
      *(void *)(v191 + 8) = 0x800000024B68D400;
      *(unsigned char *)(v191 + 16) = 5;
      swift_willThrow();
    }
    goto LABEL_104;
  }
LABEL_108:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

void *sub_24B5B2D94(uint64_t a1)
{
  void (*v32)(void *__return_ptr);
  double v33;
  void *v34;
  int v35;
  uint64_t v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  float64x2_t v53;
  float64x2_t v54;
  float64x2_t v55;
  float64x2_t v56;
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  float64x2_t v65;
  long long v66;
  long long v67;
  long long v68;
  long long v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  long long v74;
  long long v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  float64x2_t v80[8];
  _OWORD v81[8];
  _OWORD v82[6];
  uint64_t v83[6];
  float32x4_t v84;
  float32x4_t v85;
  float32x4_t v86;
  float32x4_t v87;
  float64x2_t v88[8];
  uint64_t v89[16];
  _OWORD v90[3];
  float64x2_t v91;
  float64x2_t v92;
  float64x2_t v93;
  float64x2_t v94;
  float64x2_t v95;
  float64x2_t v96;
  float64x2_t v97;
  float64x2_t v98;
  _OWORD v99[6];
  uint64_t v100;
  uint64_t v101;

  uint64_t v101 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B6824D0();
  uint64_t v48 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  MEMORY[0x270FA5388](v2);
  unint64_t v47 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24B562F04(&qword_2697CC118);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (void *)MEMORY[0x263F8EE78];
  uint64_t v7 = type metadata accessor for PhotogrammetrySample(0);
  sub_24B563A6C(a1 + *(int *)(v7 + 48), (uint64_t)v6, &qword_2697CC118);
  uint64_t v8 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_24B5632A8((uint64_t)v6, &qword_2697CC118);
LABEL_4:
    float32x4_t v17 = *(float32x4_t *)MEMORY[0x263EF89A8];
    float32x4_t v18 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 16);
    float32x4_t v19 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 32);
    float32x4_t v20 = *(float32x4_t *)(MEMORY[0x263EF89A8] + 48);
    goto LABEL_6;
  }
  uint64_t v9 = &v6[*(int *)(v8 + 36)];
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  uint64_t v12 = *((void *)v9 + 2);
  uint64_t v13 = *((void *)v9 + 3);
  uint64_t v15 = *((void *)v9 + 4);
  uint64_t v14 = *((void *)v9 + 5);
  float64x2_t v76 = *((void *)v9 + 6);
  os_log_type_t v77 = v14;
  os_log_type_t v78 = *((void *)v9 + 7);
  char v16 = v9[64];
  sub_24B5DA128((uint64_t)v6, type metadata accessor for PhotogrammetrySample.Camera);
  if (v16) {
    goto LABEL_4;
  }
  v17.i64[0] = v10;
  v17.i64[1] = v11;
  v18.i64[0] = v12;
  v18.i64[1] = v13;
  v19.i64[0] = v15;
  v19.i64[1] = v77;
  v20.i64[0] = v76;
  v20.i64[1] = v78;
LABEL_6:
  sub_24B5F89D4(v80, v17, v18, v19, v20);
  int v56 = v80[0];
  uint64_t v57 = v80[1];
  uint64_t v54 = v80[2];
  Swift::UInt v55 = v80[3];
  os_log_type_t v52 = v80[4];
  uint64_t v53 = v80[5];
  int64_t v50 = v80[6];
  uint64_t v51 = v80[7];
  unint64_t v21 = *(void *)(a1 + *(int *)(v7 + 92));
  if (v21 >> 62) {
    goto LABEL_27;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v22; uint64_t v22 = sub_24B682F00())
  {
    uint64_t v72 = v22;
    uint64_t v73 = v21 & 0xC000000000000001;
    uint64_t v23 = 4;
    unint64_t v71 = v21;
    while (1)
    {
      uint64_t v26 = v23 - 4;
      if (!v73) {
        break;
      }
      uint64_t v27 = MEMORY[0x24C5D4F60](v23 - 4, v21);
      uint64_t v28 = v23 - 3;
      if (__OFADD__(v26, 1)) {
        goto LABEL_26;
      }
LABEL_15:
      os_log_type_t v77 = v28;
      os_log_type_t v78 = v23;
      uint64_t v29 = (void *)(*(uint64_t (**)(void))(*(void *)v27 + 128))();
      LOBYTE(v99[0]) = 0;
      sub_24B5FABB8(v99, &v91);
      float64x2_t v76 = v27;
      *(float64_t *)&uint64_t v74 = v91.f64[1];
      *(float64_t *)&uint64_t v75 = v91.f64[0];
      unint64_t v70 = sub_24B5B0AD8((uint64_t *)&v91, LOBYTE(v99[0]));

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = swift_bridgeObjectRelease();
      os_log_type_t v100 = 0;
      uint64_t v31 = v76;
      uint64_t v32 = *(void (**)(void *__return_ptr))(*(void *)v76 + 152);
      ((void (*)(_OWORD *__return_ptr, uint64_t))v32)(v81, v30);
      v90[0] = v81[0];
      v90[1] = v81[1];
      v90[2] = v81[2];
      sub_24B5F897C((float32x2_t *)v90, (uint64_t)v82);
      uint64_t v74 = v82[2];
      uint64_t v75 = v82[0];
      float32x4_t v67 = v82[3];
      int v68 = v82[1];
      uint64_t v69 = v82[4];
      float32x4_t v66 = v82[5];
      v32(v83);
      sub_24B5F89D4(v88, v84, v85, v86, v87);
      float64_t v64 = v88[2];
      float32x4_t v65 = v88[0];
      uint64_t v60 = v88[3];
      unint64_t v61 = v88[1];
      uint64_t v62 = v88[6];
      int v63 = v88[4];
      unint64_t v58 = v88[7];
      uint64_t v59 = v88[5];
      v32(v89);
      v99[0] = v75;
      v99[1] = v68;
      v99[2] = v74;
      v99[3] = v67;
      v99[4] = v69;
      v99[5] = v66;
      uint64_t v92 = v61;
      uint64_t v91 = v65;
      uint64_t v94 = v60;
      char v93 = v64;
      uint64_t v96 = v59;
      os_log_type_t v95 = v63;
      uint64_t v98 = v58;
      uint64_t v97 = v62;
      if (CPGCameraCreateWithIntrinsicsExtrinsicsResolution())
      {
        CPGDepthPointCloudRelease();
        swift_release();
        uint64_t v24 = v72;
        uint64_t v25 = v78;
      }
      else
      {
        *(void *)&v99[0] = 0;
        uint64_t v33 = (*(double (**)(void))(*(void *)v31 + 104))();
        sub_24B5F8B94(v33);
        uint64_t v34 = (void *)sub_24B6827A0();
        swift_bridgeObjectRelease();
        uint64_t v92 = v57;
        uint64_t v91 = v56;
        uint64_t v94 = v55;
        char v93 = v54;
        uint64_t v96 = v53;
        os_log_type_t v95 = v52;
        uint64_t v98 = v51;
        uint64_t v97 = v50;
        uint64_t v35 = CPGTemporalDepthPointFrameCreateWithTimeCameraAndPointCloud();

        uint64_t v25 = v78;
        if (v35)
        {
          CPGCameraRelease();
        }
        else
        {
          uint64_t v36 = *(void *)&v99[0];
          if (!*(void *)&v99[0]) {
            __break(1u);
          }
          uint64_t v37 = v79;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_24B5D40D4(0, v37[2] + 1, 1, v37, &qword_2697CC6A0);
          }
          uint64_t v39 = v37[2];
          uint64_t v38 = v37[3];
          if (v39 >= v38 >> 1) {
            uint64_t v37 = sub_24B5D40D4((void *)(v38 > 1), v39 + 1, 1, v37, &qword_2697CC6A0);
          }
          v37[2] = v39 + 1;
          v37[v39 + 4] = v36;
          uint64_t v79 = v37;
          CPGCameraRelease();
        }
        CPGDepthPointCloudRelease();
        swift_release();
        uint64_t v24 = v72;
      }
      uint64_t v23 = v25 + 1;
      unint64_t v21 = v71;
      if (v77 == v24) {
        goto LABEL_28;
      }
    }
    uint64_t v27 = *(void *)(v21 + 8 * v23);
    swift_retain();
    uint64_t v28 = v23 - 3;
    if (!__OFADD__(v26, 1)) {
      goto LABEL_15;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v40, v49);
  uint64_t v41 = v79;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_24B6824B0();
  uint64_t v43 = sub_24B682B30();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 134349056;
    v91.f64[0] = (float64_t)v41[2];
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v42, v43, "Create %{public}ld temporal LiDAR point frames.", v44, 0xCu);
    MEMORY[0x24C5D6C00](v44, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  swift_beginAccess();
  return v79;
}

uint64_t sub_24B5B3628()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 32);
}

uint64_t sub_24B5B3670(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5B36D4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B5B3754;
}

void sub_24B5B3754(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 40) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_24B5B37D8()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 48);
}

uint64_t sub_24B5B3820(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5B3884(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B5B3904;
}

void sub_24B5B3904(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 56) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_24B5B3988()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 64);
}

uint64_t sub_24B5B39D0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5B3A34(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B5B3AB4;
}

void sub_24B5B3AB4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 72) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_24B5B3B38()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 80);
}

uint64_t sub_24B5B3B80(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 88) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5B3BE4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B5B3C64;
}

void sub_24B5B3C64(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 88) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_24B5B3CE8()
{
  swift_beginAccess();
  return MEMORY[0x24C5D6CB0](v0 + 96);
}

uint64_t sub_24B5B3D30(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 104) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24B5B3D94(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5D6CB0](v1 + 96);
  uint64_t v5 = *(void *)(v1 + 104);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24B5B3E14;
}

void sub_24B5B3E14(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 104) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void *sub_24B5B3E98()
{
  return &unk_24B686290;
}

uint64_t sub_24B5B3EA4(unsigned __int8 *a1)
{
  unint64_t v1 = sub_24B5AFD0C(a1);
  unsigned int v4 = v1 & (v3 == 0);
  if (HIDWORD(v1)) {
    unsigned int v4 = 0;
  }
  if ((v2 & 0x101) != 0) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_24B5B3EE0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CC5D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CC5D0);
    unint64_t v13 = sub_24B5D4374(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24B5D58B0();
        uint64_t v17 = v21;
      }
      sub_24B5D9EF8(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B5D518C(v15, v17);
      *int v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_24B5632A8((uint64_t)v8, &qword_2697CC5D0);
  }
  else
  {
    sub_24B5D9EF8(a1, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *int v3 = 0x8000000000000000;
    sub_24B5D5380((uint64_t)v12, a2, v18);
    *int v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24B5B4140(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  unsigned int v3 = a1[24];
  int v4 = a1[25];
  int v5 = *((_DWORD *)a1 + 2);
  unint64_t v6 = *a1 | ((unint64_t)*((unsigned int *)a1 + 1) << 32);
  if (v4) {
    int v7 = 256;
  }
  else {
    int v7 = 0;
  }
  if (a2[25]) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  return sub_24B5D6EA8(v6, v5, v2, v7 | v3, *a2 | ((unint64_t)*((unsigned int *)a2 + 1) << 32), *((_DWORD *)a2 + 2), *((void *)a2 + 2), v8 | a2[24]);
}

uint64_t sub_24B5B4198()
{
  return sub_24B5D7424();
}

uint64_t sub_24B5B41B4(uint64_t a1, unsigned __int8 *a2)
{
  v25[7] = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  int v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v25 - v9;
  MEMORY[0x270FA5388](v8);
  sub_24B5AFD0C(a2);
  v25[6] = 0;
  uint64_t v11 = (void *)sub_24B682250();
  int v12 = CPGSnapshotInfoLoadFromURL();

  if (v12)
  {
    uint64_t v13 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
    char v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v16 = 0;
      _os_log_impl(&dword_24B55E000, v14, v15, "Failed to load snapshot info from snapshot URL!", v16, 2u);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
LABEL_11:
    uint64_t v23 = 2;
    goto LABEL_12;
  }
  uint64_t v17 = CPGSessionOptionsCreate();
  uint64_t v18 = CPGSfmOptionsCreate();
  if (!v17 || !v18)
  {
    uint64_t v19 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v19, v3);
    uint64_t v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_24B55E000, v20, v21, "Failed to create CPG session options and sfm options!", v22, 2u);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    CPGSfmOptionsRelease();
    CPGSessionOptionsRelease();
    goto LABEL_11;
  }
  sub_24B5D7ABC();
  uint64_t v23 = CPGSnapshotInfoCheckSessionOptionsCompatibility();
  CPGSfmOptionsRelease();
  CPGSessionOptionsRelease();
LABEL_12:
  CPGSnapshotInfoRelease();
  return v23;
}

uint64_t sub_24B5B4674()
{
  v12[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  uint64_t v4 = (void *)sub_24B682250();
  int v5 = CPGSnapshotInfoLoadFromURL();

  if (v5)
  {
    uint64_t v6 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    int v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Failed to load snapshot info from snapshot URL!", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 2;
  }
  else
  {
    uint64_t v10 = CPGSnapshotInfoCheckDeviceCompatibility();
    CPGSnapshotInfoRelease();
  }
  return v10;
}

uint64_t sub_24B5B4840()
{
  v12[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  uint64_t v4 = (void *)sub_24B682250();
  int v5 = CPGSnapshotInfoLoadFromURL();

  if (v5)
  {
    uint64_t v6 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
    int v7 = sub_24B6824B0();
    os_log_type_t v8 = sub_24B682B20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24B55E000, v7, v8, "Failed to load snapshot info from snapshot URL!", v9, 2u);
      MEMORY[0x24C5D6C00](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  else
  {
    uint64_t NumberOfSamples = CPGSnapshotInfoGetNumberOfSamples();
    CPGSnapshotInfoRelease();
  }
  return NumberOfSamples;
}

uint64_t sub_24B5B4A1C(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_24B6822E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = &v23[-v10];
  uint64_t v26 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v26(0xD00000000000002FLL, 0x800000024B68CC30);
  uint64_t v11 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_24B563A6C(a1 + *(int *)(v11 + 32), (uint64_t)v4, &qword_2697CC1F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24B5632A8((uint64_t)v4, &qword_2697CC1F0);
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD000000000000018;
    *(void *)(v12 + 8) = 0x800000024B68CC60;
    *(unsigned char *)(v12 + 16) = 0;
    swift_willThrow();
    sub_24B5DA128(a1, type metadata accessor for PhotogrammetrySession.Configuration);
  }
  else
  {
    uint64_t v13 = v29;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v29, v4, v5);
    uint64_t v25 = a1;
    unint64_t v14 = sub_24B5AFD0C((unsigned __int8 *)a1);
    unsigned int v24 = v15;
    uint64_t v17 = v16;
    a1 = v18;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v9, v13, v5);
    uint64_t v19 = v28;
    uint64_t v20 = (*(uint64_t (**)(unsigned char *, unint64_t, void, uint64_t, uint64_t))(v27 + 560))(v9, v14 & 0xFFFFFFFF00000001, v24, v17, a1 & 0x101);
    os_log_type_t v21 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
    if (!v19)
    {
      a1 = v20;
      v26(0xD000000000000032, 0x800000024B68CC80);
    }
    sub_24B5DA128(v25, type metadata accessor for PhotogrammetrySession.Configuration);
    (*v21)(v29, v5);
  }
  return a1;
}

uint64_t sub_24B5B4D90(uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v10 = swift_allocObject();
  sub_24B5B4E14(a1, a2 & 0xFFFFFFFF00000001, a3, a4, a5 & 0x101);
  return v10;
}

uint64_t sub_24B5B4E14(uint64_t a1, unint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v6 = v5;
  uint64_t v108 = a4;
  int v107 = a3;
  uint64_t v114 = a1;
  uint64_t v123 = *MEMORY[0x263EF8340];
  unint64_t v106 = HIDWORD(a2);
  uint64_t v104 = a2 & 1;
  int v105 = a5 & 1;
  unsigned int v102 = a5 & 0x100;
  uint64_t v7 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v89 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v88 = (uint64_t)&v87 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v103 = (uint64_t)&v87 - v12;
  uint64_t v13 = sub_24B6822E0();
  uint64_t v99 = v13;
  uint64_t v115 = *(void *)(v13 - 8);
  uint64_t v14 = v115;
  uint64_t v110 = v115;
  MEMORY[0x270FA5388](v13);
  float32x4_t v109 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_24B6824D0();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v111 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_24B682BC0();
  uint64_t v17 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24B682B90();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_24B682640();
  MEMORY[0x270FA5388](v21 - 8);
  *(void *)(v6 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v6 + 112) = 1008981770;
  uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
  uint64_t v101 = v14 + 56;
  os_log_type_t v100 = v22;
  v22(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL, 1, 1, v13);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  uint64_t v98 = OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  unint64_t v96 = sub_24B5658E8();
  sub_24B682630();
  id v116 = (id)MEMORY[0x263F8EE78];
  uint64_t v94 = sub_24B5DA358((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  uint64_t v93 = sub_24B562F04(&qword_2697CC0C0);
  uint64_t v95 = sub_24B5D7EA0((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  uint64_t v23 = *MEMORY[0x263F8F130];
  uint64_t v24 = v17 + 104;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  uint64_t v92 = v24;
  uint64_t v91 = v19;
  uint64_t v26 = v97;
  v25(v19, v23, v97);
  *(void *)(v6 + v98) = sub_24B682C00();
  uint64_t v98 = OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_24B682610();
  id v116 = (id)MEMORY[0x263F8EE78];
  sub_24B682D80();
  v25(v91, v23, v26);
  uint64_t v27 = v6;
  *(void *)(v6 + v98) = sub_24B682C00();
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  uint64_t v28 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  uint64_t v29 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  uint64_t v30 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_24B562F04(&qword_2697CC5C0);
  LOBYTE(v116) = 0;
  *(void *)(v6 + v30) = sub_24B680D5C((uint64_t)&v116);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  uint64_t v31 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_24B56BCBC((uint64_t)v122);
  sub_24B56CF38((uint64_t)v122, v31, &qword_2697CC578);
  uint64_t v32 = MEMORY[0x263F8EE78];
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x263F8EE78];
  uint64_t v33 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)uint64_t v33 = 0u;
  *(_OWORD *)(v33 + 16) = 0u;
  *(_OWORD *)(v33 + 32) = 0u;
  *(_OWORD *)(v33 + 48) = 0u;
  *(unsigned char *)(v33 + 64) = 1;
  uint64_t v34 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(void *)(v6 + v34) = sub_24B5D702C(v32);
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v32;
  uint64_t v35 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(void *)(v6 + v35) = sub_24B5D715C(v32);
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  uint64_t v36 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v111, v36, v113);
  uint64_t v37 = *(void (**)(void))(v110 + 16);
  uint64_t v38 = v109;
  uint64_t v39 = v99;
  v37();
  uint64_t v40 = sub_24B6824B0();
  os_log_type_t v41 = sub_24B682B30();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v98 = (uint64_t)v37;
    uint64_t v43 = v42;
    uint64_t v97 = swift_slowAlloc();
    uint64_t v121 = v97;
    *(_DWORD *)uint64_t v43 = 136380931;
    sub_24B5DA358(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v44 = sub_24B682F90();
    id v116 = (id)sub_24B5627B8(v44, v45, &v121);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    uint64_t v46 = v38;
    uint64_t v47 = v39;
    float32x4_t v109 = *(char **)(v115 + 8);
    ((void (*)(char *, uint64_t))v109)(v46, v39);
    *(_WORD *)(v43 + 12) = 2082;
    LOBYTE(v116) = v104;
    HIDWORD(v116) = v106;
    int v117 = v107;
    uint64_t v118 = v108;
    char v119 = v105;
    unsigned int v48 = v102 >> 8;
    char v120 = BYTE1(v102);
    uint64_t v49 = sub_24B682820();
    id v116 = (id)sub_24B5627B8(v49, v50, &v121);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v40, v41, "Backend Manager: Initializing with snapshot URL = %{private}s and configuration = %{public}s", (uint8_t *)v43, 0x16u);
    uint64_t v51 = v97;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v51, -1, -1);
    uint64_t v52 = v43;
    uint64_t v37 = (void (*)(void))v98;
    MEMORY[0x24C5D6C00](v52, -1, -1);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
    uint64_t v53 = v115;
  }
  else
  {
    uint64_t v53 = v115;
    uint64_t v54 = v38;
    uint64_t v47 = v39;
    float32x4_t v109 = *(char **)(v115 + 8);
    ((void (*)(char *, uint64_t))v109)(v54, v39);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
    unsigned int v48 = v102 >> 8;
  }
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = 0;
  uint64_t v55 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL;
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v114, v47);
  v100(v55, 0, 1, v47);
  uint64_t v56 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(unsigned char *)uint64_t v56 = v104;
  int v57 = v107;
  *(_DWORD *)(v56 + 4) = v106;
  *(_DWORD *)(v56 + 8) = v57;
  *(void *)(v56 + 16) = v108;
  *(unsigned char *)(v56 + 24) = v105;
  *(unsigned char *)(v56 + 25) = v48;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = 0;
  type metadata accessor for SegmentIDConverter();
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_24B5FCDCC();
  unint64_t v58 = self;
  id v59 = objc_msgSend(v58, sel_defaultManager);
  uint64_t v60 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL;
  uint64_t v61 = v103;
  sub_24B563A6C(v27 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v103, &qword_2697CC1F0);
  uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  uint64_t v115 = v53 + 48;
  if (v62(v61, 1, v47) == 1) {
    __break(1u);
  }
  sub_24B6822D0();
  int v63 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v109)(v61, v47);
  unsigned __int8 v64 = objc_msgSend(v59, sel_fileExistsAtPath_, v63);

  id v65 = objc_msgSend(v58, sel_defaultManager);
  uint64_t v66 = v60;
  if (v64)
  {
    uint64_t v67 = v89;
    sub_24B563A6C(v60, v89, &qword_2697CC1F0);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v67, 1, v47);
    if (result != 1)
    {
      uint64_t v69 = v47;
      sub_24B6822D0();
      unint64_t v70 = (void *)sub_24B6827A0();
      swift_bridgeObjectRelease();
      uint64_t v71 = v47;
      uint64_t v72 = (void (*)(uint64_t, uint64_t))v109;
      ((void (*)(uint64_t, uint64_t))v109)(v67, v71);
      id v116 = 0;
      id v73 = objc_msgSend(v65, sel_contentsOfDirectoryAtPath_error_, v70, &v116);

      id v74 = v116;
      if (v73)
      {
        uint64_t v75 = sub_24B6829A0();

        uint64_t v76 = *(void *)(v75 + 16);
        swift_bridgeObjectRelease();
        if (v76)
        {
          uint64_t v77 = v90;
          sub_24B5C112C();
          if (!v77) {
            goto LABEL_21;
          }
          goto LABEL_15;
        }
LABEL_13:
        uint64_t v83 = v90;
        sub_24B5C02EC();
        if (!v83)
        {
          sub_24B5C171C();
          sub_24B5C268C();
LABEL_21:
          uint64_t v86 = type metadata accessor for MemoryLogger();
          (*(void (**)(unint64_t, unint64_t))(v86 + 88))(0xD000000000000043, 0x800000024B68CD20);
          goto LABEL_19;
        }
LABEL_15:
        v72(v114, v69);
        swift_release();
        return v27;
      }
      uint64_t v85 = v74;
      swift_release();
      sub_24B6821B0();

LABEL_18:
      swift_willThrow();
LABEL_19:
      v72(v114, v69);
      return v27;
    }
    __break(1u);
  }
  else
  {
    uint64_t v78 = v88;
    sub_24B563A6C(v66, v88, &qword_2697CC1F0);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v78, 1, v47);
    if (result != 1)
    {
      uint64_t v69 = v47;
      uint64_t v79 = (void *)sub_24B682250();
      uint64_t v80 = v47;
      uint64_t v72 = (void (*)(uint64_t, uint64_t))v109;
      ((void (*)(uint64_t, uint64_t))v109)(v78, v80);
      id v116 = 0;
      unsigned int v81 = objc_msgSend(v65, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v79, 1, 0, &v116);

      id v82 = v116;
      if (v81) {
        goto LABEL_13;
      }
      uint64_t v84 = v82;
      swift_release();
      sub_24B6821B0();

      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5B5E2C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v32 = a1;
  uint64_t v3 = sub_24B6822E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = type metadata accessor for MemoryLogger();
  v27[0] = *(void *)(v13 + 88);
  v27[1] = v13;
  ((void (*)(unint64_t, unint64_t))v27[0])(0xD00000000000003ELL, 0x800000024B68CD70);
  uint64_t v14 = type metadata accessor for PhotogrammetrySession.Configuration(0);
  sub_24B563A6C((uint64_t)&a2[*(int *)(v14 + 32)], (uint64_t)v12, &qword_2697CC1F0);
  uint64_t v30 = a2;
  unint64_t v15 = sub_24B5AFD0C(a2);
  int v28 = v16;
  uint64_t v18 = v17;
  __int16 v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v31 = v3;
  v21(v6, v32, v3);
  sub_24B563A6C((uint64_t)v12, (uint64_t)v10, &qword_2697CC1F0);
  type metadata accessor for PGManager();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v18;
  uint64_t v24 = v22;
  uint64_t v25 = v29;
  sub_24B5B60D0((uint64_t)v6, (uint64_t)v10, v15 & 0xFFFFFFFF00000001, v28, v23, v20 & 0x101);
  if (!v25) {
    ((void (*)(unint64_t, unint64_t))v27[0])(0xD000000000000041, 0x800000024B68CDB0);
  }
  sub_24B5DA128((uint64_t)v30, type metadata accessor for PhotogrammetrySession.Configuration);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v32, v31);
  sub_24B5632A8((uint64_t)v12, &qword_2697CC1F0);
  return v24;
}

uint64_t sub_24B5B60D0(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  uint64_t v129 = a5;
  int v128 = a4;
  uint64_t v135 = a2;
  uint64_t v131 = a1;
  uint64_t v143 = *MEMORY[0x263EF8340];
  unint64_t v126 = HIDWORD(a3);
  uint64_t v124 = a3 & 1;
  LODWORD(v116) = a6;
  int v127 = a6 & 1;
  uint64_t v110 = sub_24B6822E0();
  uint64_t v132 = *(void *)(v110 - 8);
  uint64_t v8 = v132;
  uint64_t v9 = MEMORY[0x270FA5388](v110);
  uint64_t v104 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v122 = (char *)&v102 - v12;
  MEMORY[0x270FA5388](v11);
  char v119 = (char *)&v102 - v13;
  uint64_t v133 = sub_24B6824D0();
  uint64_t v134 = *(void *)(v133 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v133);
  uint64_t v130 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v125 = (char *)&v102 - v16;
  uint64_t v17 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v123 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v121 = (char *)&v102 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v113 = ((char *)&v102 - v22);
  uint64_t v115 = sub_24B682BC0();
  uint64_t v23 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v25 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24B682B90();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_24B682640();
  MEMORY[0x270FA5388](v27 - 8);
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v7 + 112) = 1008981770;
  int v28 = *(void (**)(void))(v8 + 56);
  uint64_t v120 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
  uint64_t v118 = v8 + 56;
  int v117 = v28;
  v28();
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  uint64_t v114 = (char *)OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  unint64_t v112 = sub_24B5658E8();
  sub_24B682630();
  id v136 = (id)MEMORY[0x263F8EE78];
  uint64_t v109 = sub_24B5DA358((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  uint64_t v108 = sub_24B562F04(&qword_2697CC0C0);
  uint64_t v111 = sub_24B5D7EA0((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  uint64_t v29 = *MEMORY[0x263F8F130];
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))(v23 + 104);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 104);
  int v107 = v30;
  unint64_t v106 = v25;
  uint64_t v32 = v115;
  v31(v25, v29, v115);
  *(void *)&v114[v7] = sub_24B682C00();
  uint64_t v114 = (char *)OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_24B682610();
  id v136 = (id)MEMORY[0x263F8EE78];
  sub_24B682D80();
  v31(v106, v29, v32);
  uint64_t v33 = v110;
  uint64_t v34 = v113;
  uint64_t v35 = v132;
  *(void *)&v114[v7] = sub_24B682C00();
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  uint64_t v36 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  uint64_t v37 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  uint64_t v38 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_24B562F04(&qword_2697CC5C0);
  LOBYTE(v136) = 0;
  *(void *)(v7 + v38) = sub_24B680D5C((uint64_t)&v136);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  uint64_t v39 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_24B56BCBC((uint64_t)v142);
  sub_24B56CF38((uint64_t)v142, v39, &qword_2697CC578);
  uint64_t v40 = MEMORY[0x263F8EE78];
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x263F8EE78];
  uint64_t v41 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)uint64_t v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(_OWORD *)(v41 + 32) = 0u;
  *(_OWORD *)(v41 + 48) = 0u;
  *(unsigned char *)(v41 + 64) = 1;
  uint64_t v42 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(void *)(v7 + v42) = sub_24B5D702C(v40);
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v40;
  uint64_t v43 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(void *)(v7 + v43) = sub_24B5D715C(v40);
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  sub_24B563A6C(v135, (uint64_t)v34, &qword_2697CC1F0);
  uint64_t v44 = *(char **)(v35 + 48);
  uint64_t v115 = v35 + 48;
  uint64_t v114 = v44;
  if (((unsigned int (*)(NSObject *, uint64_t, uint64_t))v44)(v34, 1, v33) == 1)
  {
    sub_24B5632A8((uint64_t)v34, &qword_2697CC1F0);
    unint64_t v106 = 0;
    unint64_t v45 = 0xE000000000000000;
  }
  else
  {
    unint64_t v106 = (char *)sub_24B6821E0();
    unint64_t v45 = v46;
    (*(void (**)(NSObject *, uint64_t))(v35 + 8))(v34, v33);
  }
  LODWORD(v111) = (unsigned __int16)v116 & 0x100;
  uint64_t v47 = sub_24B57CBE8();
  unsigned int v48 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 16);
  uint64_t v49 = v125;
  uint64_t v108 = v47;
  uint64_t v50 = v133;
  uint64_t v109 = v134 + 16;
  int v107 = v48;
  ((void (*)(char *))v48)(v125);
  uint64_t v51 = v119;
  uint64_t v52 = v131;
  id v116 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  unint64_t v112 = v35 + 16;
  v116(v119, v131, v33);
  swift_bridgeObjectRetain();
  uint64_t v53 = v35;
  uint64_t v54 = sub_24B6824B0();
  int v55 = sub_24B682B30();
  uint64_t v113 = v54;
  uint64_t v56 = v54;
  uint64_t v57 = v53;
  int v103 = v55;
  if (os_log_type_enabled(v56, (os_log_type_t)v55))
  {
    uint64_t v58 = v33;
    uint64_t v59 = swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    uint64_t v141 = v102;
    *(_DWORD *)uint64_t v59 = 136381187;
    sub_24B5DA358(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v60 = sub_24B682F90();
    id v136 = (id)sub_24B5627B8(v60, v61, &v141);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    char v119 = *(char **)(v57 + 8);
    ((void (*)(char *, uint64_t))v119)(v51, v58);
    *(_WORD *)(v59 + 12) = 2081;
    swift_bridgeObjectRetain();
    id v136 = (id)sub_24B5627B8((uint64_t)v106, v45, &v141);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v59 + 22) = 2082;
    char v62 = v124;
    LOBYTE(v136) = v124;
    HIDWORD(v136) = v126;
    int v137 = v128;
    uint64_t v138 = v129;
    char v139 = v127;
    LODWORD(v111) = v111 >> 8;
    char v140 = v111;
    uint64_t v63 = sub_24B682820();
    id v136 = (id)sub_24B5627B8(v63, v64, &v141);
    uint64_t v52 = v131;
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    id v65 = v113;
    _os_log_impl(&dword_24B55E000, v113, (os_log_type_t)v103, "Backend Manager: Initializing with images URL = %{private}s, snapshotURL = %{private}s and configuration = %{public}s", (uint8_t *)v59, 0x20u);
    uint64_t v66 = v102;
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v66, -1, -1);
    MEMORY[0x24C5D6C00](v59, -1, -1);

    uint64_t v67 = v125;
    uint64_t v125 = *(char **)(v134 + 8);
    ((void (*)(char *, uint64_t))v125)(v67, v133);
    uint64_t v68 = v58;
  }
  else
  {
    char v119 = *(char **)(v53 + 8);
    ((void (*)(char *, uint64_t))v119)(v51, v33);

    swift_bridgeObjectRelease_n();
    uint64_t v125 = *(char **)(v134 + 8);
    ((void (*)(char *, uint64_t))v125)(v49, v50);
    LODWORD(v111) = v111 >> 8;
    uint64_t v68 = v33;
    char v62 = v124;
  }
  uint64_t v69 = (uint64_t)v121;
  unint64_t v70 = v116;
  v116(v121, v52, v68);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v117)(v69, 0, 1, v68);
  uint64_t v71 = v52;
  uint64_t v72 = v120;
  swift_beginAccess();
  sub_24B56C254(v69, v72, &qword_2697CC1F0);
  swift_endAccess();
  type metadata accessor for ObjectCaptureImageFolderReader();
  uint64_t v73 = (uint64_t)v122;
  v70(v122, v71, v68);
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = ObjectCaptureImageFolderReader.__allocating_init(url:)(v73);
  sub_24B563A6C(v135, v7 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, &qword_2697CC1F0);
  uint64_t v74 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(unsigned char *)uint64_t v74 = v62;
  int v75 = v128;
  *(_DWORD *)(v74 + 4) = v126;
  *(_DWORD *)(v74 + 8) = v75;
  *(void *)(v74 + 16) = v129;
  *(unsigned char *)(v74 + 24) = v127;
  *(unsigned char *)(v74 + 25) = v111;
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = 0;
  type metadata accessor for SegmentIDConverter();
  *(void *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_24B5FCDCC();
  uint64_t v76 = v123;
  sub_24B563A6C(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, v123, &qword_2697CC1F0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v114)(v76, 1, v68) == 1)
  {
    sub_24B5632A8(v76, &qword_2697CC1F0);
    uint64_t v77 = (void (*)(uint64_t, uint64_t))v119;
  }
  else
  {
    uint64_t v78 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v104, v76, v68);
    uint64_t v79 = self;
    id v80 = objc_msgSend(v79, sel_defaultManager);
    sub_24B6822D0();
    unsigned int v81 = (void *)sub_24B6827A0();
    swift_bridgeObjectRelease();
    unsigned __int8 v82 = objc_msgSend(v80, sel_fileExistsAtPath_, v81);

    if (v82)
    {
      uint64_t v83 = v78;
      uint64_t v77 = (void (*)(uint64_t, uint64_t))v119;
      ((void (*)(char *, uint64_t))v119)(v83, v68);
    }
    else
    {
      id v84 = objc_msgSend(v79, sel_defaultManager);
      uint64_t v85 = (void *)sub_24B682250();
      id v136 = 0;
      unsigned int v86 = objc_msgSend(v84, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v85, 1, 0, &v136);

      if (!v86)
      {
        id v100 = v136;
        swift_release();
        sub_24B6821B0();

        swift_willThrow();
        sub_24B5632A8(v135, &qword_2697CC1F0);
        uint64_t v101 = (void (*)(char *, uint64_t))v119;
        ((void (*)(uint64_t, uint64_t))v119)(v131, v68);
        v101(v78, v68);
        return v7;
      }
      id v87 = v136;
      uint64_t v88 = v78;
      uint64_t v77 = (void (*)(uint64_t, uint64_t))v119;
      ((void (*)(char *, uint64_t))v119)(v88, v68);
    }
  }
  char v89 = sub_24B5BFF5C();
  uint64_t v90 = OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = v89 & 1;
  uint64_t v91 = v133;
  v107(v130, v108, v133);
  swift_retain();
  uint64_t v92 = sub_24B6824B0();
  os_log_type_t v93 = sub_24B682B30();
  if (os_log_type_enabled(v92, v93))
  {
    uint64_t v94 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v94 = 67240192;
    LODWORD(v136) = *(unsigned __int8 *)(v7 + v90);
    sub_24B682CD0();
    swift_release();
    _os_log_impl(&dword_24B55E000, v92, v93, "Backend Manager: ImageURL contains area mode data: %{BOOL,public}d", v94, 8u);
    uint64_t v95 = v94;
    uint64_t v91 = v133;
    MEMORY[0x24C5D6C00](v95, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v96 = v131;
  ((void (*)(char *, uint64_t))v125)(v130, v91);
  uint64_t v97 = v105;
  sub_24B5C02EC();
  if (v97)
  {
    swift_release();
  }
  else
  {
    uint64_t v98 = type metadata accessor for MemoryLogger();
    (*(void (**)(unint64_t, unint64_t))(v98 + 88))(0xD00000000000004FLL, 0x800000024B68DBA0);
  }
  sub_24B5632A8(v135, &qword_2697CC1F0);
  v77(v96, v68);
  return v7;
}

uint64_t sub_24B5B73E0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v20(0xD00000000000003CLL, 0x800000024B68CE00);
  uint64_t v23 = a2;
  unint64_t v9 = sub_24B5AFD0C(a2);
  int v21 = v10;
  uint64_t v12 = v11;
  LOWORD(a2) = v13;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v24 = a1;
  v14(v8, a1, a3);
  sub_24B562F04(&qword_2697CC5C8);
  swift_dynamicCast();
  uint64_t v15 = v25;
  type metadata accessor for PGManager();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v22;
  sub_24B5B75F8(v15, v9 & 0xFFFFFFFF00000001, v21, v12, (unsigned __int16)a2 & 0x101);
  if (!v17) {
    v20(0xD00000000000003FLL, 0x800000024B68CE40);
  }
  sub_24B5DA128((uint64_t)v23, type metadata accessor for PhotogrammetrySession.Configuration);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v24, a3);
  return v16;
}

uint64_t sub_24B5B75F8(uint64_t a1, unint64_t a2, int a3, uint64_t a4, __int16 a5)
{
  uint64_t v6 = v5;
  uint64_t v71 = a4;
  int v70 = a3;
  uint64_t v58 = a1;
  unint64_t v69 = HIDWORD(a2);
  uint64_t v68 = a2 & 1;
  int v67 = a5 & 1;
  unsigned int v55 = a5 & 0x100;
  uint64_t v7 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v56 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_24B6824D0();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v72 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_24B682BC0();
  uint64_t v10 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B682B90();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_24B682640();
  MEMORY[0x270FA5388](v14 - 8);
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 88) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 104) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v5 + 112) = 1008981770;
  uint64_t v15 = v5 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
  uint64_t v16 = sub_24B6822E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v52[0] = v15;
  uint64_t v54 = v16;
  uint64_t v53 = v18;
  v52[1] = v17 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v15, 1, 1);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) = 0;
  uint64_t v66 = OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue;
  unint64_t v64 = sub_24B5658E8();
  sub_24B682630();
  uint64_t v75 = MEMORY[0x263F8EE78];
  uint64_t v62 = sub_24B5DA358((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  uint64_t v61 = sub_24B562F04(&qword_2697CC0C0);
  uint64_t v63 = sub_24B5D7EA0((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  uint64_t v19 = *MEMORY[0x263F8F130];
  uint64_t v20 = v10 + 104;
  int v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  uint64_t v60 = v20;
  uint64_t v59 = v12;
  uint64_t v22 = v65;
  v21(v12, v19, v65);
  *(void *)(v6 + v66) = sub_24B682C00();
  uint64_t v66 = OBJC_IVAR____TtC6CoreOC9PGManager_processQueue;
  sub_24B682610();
  uint64_t v75 = MEMORY[0x263F8EE78];
  sub_24B682D80();
  v21(v59, v19, v22);
  *(void *)(v6 + v66) = sub_24B682C00();
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleProgressBound) = 1036831949;
  *(_DWORD *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameRequestProgressBound) = 1063675494;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = 0;
  uint64_t v23 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  uint64_t v24 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) = 0;
  uint64_t v25 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  sub_24B562F04(&qword_2697CC5C0);
  LOBYTE(v75) = 0;
  *(void *)(v6 + v25) = sub_24B680D5C((uint64_t)&v75);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = 0;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_session) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap) = 0;
  uint64_t v26 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_24B56BCBC((uint64_t)v80);
  sub_24B56CF38((uint64_t)v80, v26, &qword_2697CC578);
  uint64_t v27 = MEMORY[0x263F8EE78];
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) = MEMORY[0x263F8EE78];
  uint64_t v28 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  *(_OWORD *)uint64_t v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)(v28 + 48) = 0u;
  *(unsigned char *)(v28 + 64) = 1;
  uint64_t v29 = OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  *(void *)(v6 + v29) = sub_24B5D702C(v27);
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests) = v27;
  uint64_t v30 = OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  *(void *)(v6 + v30) = sub_24B5D715C(v27);
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated) = 0;
  uint64_t v31 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v31, v74);
  uint64_t v32 = sub_24B6824B0();
  os_log_type_t v33 = sub_24B682B30();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v81 = v35;
    *(_DWORD *)uint64_t v34 = 136446210;
    LOBYTE(v75) = v68;
    HIDWORD(v75) = v69;
    int v76 = v70;
    uint64_t v77 = v71;
    char v78 = v67;
    unsigned int v36 = v55 >> 8;
    char v79 = BYTE1(v55);
    uint64_t v37 = sub_24B682820();
    uint64_t v75 = sub_24B5627B8(v37, v38, &v81);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v32, v33, "Backend Manager: Initializing from source and configuration = %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v35, -1, -1);
    MEMORY[0x24C5D6C00](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
    unsigned int v36 = v55 >> 8;
  }
  uint64_t v39 = v57;
  uint64_t v40 = (uint64_t)v56;
  uint64_t v41 = v71;
  int v42 = v70;
  int v43 = v69;
  char v44 = v67;
  char v45 = v68;
  uint64_t v46 = v54;
  uint64_t v47 = v53;
  uint64_t v48 = v52[0];
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples) = v58;
  uint64_t v49 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  *(unsigned char *)uint64_t v49 = v45;
  *(_DWORD *)(v49 + 4) = v43;
  *(_DWORD *)(v49 + 8) = v42;
  *(void *)(v49 + 16) = v41;
  *(unsigned char *)(v49 + 24) = v44;
  *(unsigned char *)(v49 + 25) = v36;
  v47(v40, 1, 1, v46);
  swift_beginAccess();
  swift_retain();
  sub_24B56C254(v40, v48, &qword_2697CC1F0);
  swift_endAccess();
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader) = 0;
  v47(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, 1, 1, v46);
  type metadata accessor for SegmentIDConverter();
  *(void *)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter) = sub_24B5FCDCC();
  sub_24B5C02EC();
  if (v39)
  {
    swift_release();
  }
  else
  {
    uint64_t v50 = type metadata accessor for MemoryLogger();
    (*(void (**)(unint64_t, unint64_t))(v50 + 88))(0xD00000000000003DLL, 0x800000024B68DB60);
  }
  swift_release();
  return v6;
}

uint64_t sub_24B5B80CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t))(type metadata accessor for MemoryLogger() + 88);
  v6(0xD00000000000001ELL, 0x800000024B68CE80);
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  if (*v7 && (*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    uint64_t v8 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Backend Managercd .. deinit: user did not call close, we do an internal call.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(uint64_t))(*(void *)v1 + 632))(v12);
  }
  v6(0xD000000000000021, 0x800000024B68CEA0);
  sub_24B5661FC(v1 + 16);
  sub_24B5661FC(v1 + 32);
  sub_24B5661FC(v1 + 48);
  sub_24B5661FC(v1 + 64);
  sub_24B5661FC(v1 + 80);
  sub_24B5661FC(v1 + 96);
  sub_24B5632A8(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL, &qword_2697CC1F0);
  swift_release();
  sub_24B5632A8(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, &qword_2697CC1F0);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_24B5632A8(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest, &qword_2697CC5D0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24B5B8448()
{
  sub_24B5B80CC();

  return swift_deallocClassInstance();
}

uint64_t sub_24B5B84A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6825D0();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_24B5D9F60(a1, (uint64_t)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySample);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  sub_24B5D9EF8((uint64_t)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PhotogrammetrySample);
  aBlock[4] = sub_24B5D7E70;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8D628;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v13;
  swift_retain();
  sub_24B6825F0();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v9, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5B8850(uint64_t a1, void *a2)
{
  uint64_t v59 = a2;
  uint64_t v2 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (uint64_t *)((char *)&v58 - v7);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v60 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v60);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  id v18 = (char *)&v58 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v58 - v20;
  MEMORY[0x270FA5388](v19);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0x706D617328646461, 0xEC000000293A656CLL);
  }
  uint64_t v23 = Strong;
  if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted))
    {
      uint64_t v30 = sub_24B57CBE8();
      uint64_t v25 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v30, v60);
      uint64_t v31 = sub_24B6824B0();
      os_log_type_t v32 = sub_24B682B30();
      if (os_log_type_enabled(v31, v32))
      {
        os_log_type_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v33 = 0;
        _os_log_impl(&dword_24B55E000, v31, v32, "Process has started, ignoring new samples.", v33, 2u);
        MEMORY[0x24C5D6C00](v33, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      uint64_t v35 = v15;
      return v34(v35, v25);
    }
    uint64_t v36 = sub_24B5B0F0C((uint64_t)v59, 0, 0);
    swift_beginAccess();
    uint64_t v58 = v36;
    int v37 = CPGSessionAddSampleWithCallbacks();
    if (v37)
    {
      int v38 = v37;
      uint64_t v39 = sub_24B57CBE8();
      uint64_t v40 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v39, v60);
      sub_24B5D9F60((uint64_t)v59, (uint64_t)v5, type metadata accessor for PhotogrammetrySample);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v42 = sub_24B682B20();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 134349312;
        uint64_t v44 = *v5;
        sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySample);
        uint64_t v62 = v44;
        uint64_t v40 = v60;
        sub_24B682CD0();
        *(_WORD *)(v43 + 12) = 1026;
        LODWORD(v62) = v38;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v41, v42, "Failed to add sample of id = %{public}ld, with error code = %{public}d", (uint8_t *)v43, 0x12u);
        MEMORY[0x24C5D6C00](v43, -1, -1);
      }
      else
      {
        sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySample);
      }
      uint64_t v21 = v18;
    }
    else
    {
      char v45 = v59;
      uint64_t v46 = *v59;
      swift_beginAccess();
      sub_24B5865E0(v61, v46);
      swift_endAccess();
      uint64_t v47 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v21, v47, v60);
      sub_24B5D9F60((uint64_t)v45, (uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v48 = sub_24B682B30();
      if (os_log_type_enabled(v41, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 134349056;
        uint64_t v50 = *v8;
        sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
        uint64_t v62 = v50;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v41, v48, "Added sample of id = %{public}ld", v49, 0xCu);
        MEMORY[0x24C5D6C00](v49, -1, -1);
      }
      else
      {
        sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      }
      uint64_t v40 = v60;
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v40);
    CPGSampleRelease();
    uint64_t v51 = v59;
    sub_24B5C2B14((uint64_t)v59);
    uint64_t v52 = (__CVBuffer *)v51[1];
    int64_t Width = CVPixelBufferGetWidth(v52);
    int64_t Height = CVPixelBufferGetHeight(v52);
    int64_t v55 = Width * Height;
    if ((unsigned __int128)(Width * (__int128)Height) >> 64 == (Width * Height) >> 63)
    {
      if (v55 < 0)
      {
LABEL_33:
        uint64_t result = sub_24B682EE0();
        __break(1u);
        return result;
      }
      uint64_t v56 = (void *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated);
      swift_beginAccess();
      if (!__CFADD__(*v56, v55))
      {
        *v56 += v55;
        uint64_t v57 = (void *)(v23 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated);
        swift_beginAccess();
        if (*v57 != -1)
        {
          ++*v57;
          return swift_release();
        }
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v24 = sub_24B57CBE8();
  uint64_t v25 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v24, v60);
  uint64_t v26 = sub_24B6824B0();
  os_log_type_t v27 = sub_24B682B20();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_24B55E000, v26, v27, "Skipped adding sample. Internal manager is closed!", v28, 2u);
    MEMORY[0x24C5D6C00](v28, -1, -1);
    swift_release();
  }
  else
  {

    swift_release();
  }
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v35 = v12;
  return v34(v35, v25);
}

uint64_t sub_24B5B9194(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6825D0();
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24B682640();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_24B5D7EF4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8D678;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24B6825F0();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5B9490(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v80 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v80 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v80 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v80 - v17;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD00000000000002DLL, 0x800000024B68DB30);
  }
  uint64_t v20 = Strong;
  char v21 = *(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed);
  uint64_t v94 = v3;
  if (v21)
  {
    uint64_t v22 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v22, v3);
    uint64_t v23 = sub_24B6824B0();
    os_log_type_t v24 = sub_24B682B20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_24B55E000, v23, v24, "Update VIO camera transform exited. Backend manager is closed.", v25, 2u);
      MEMORY[0x24C5D6C00](v25, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v94);
  }
  os_log_type_t v27 = (void *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  id v87 = v27;
  if (!*v27) {
    return swift_release();
  }
  if (!*(void *)(a2 + 16)) {
    return swift_release();
  }
  if (!CPGSampleCameraTransformMapCreate()) {
    return swift_release();
  }
  uint64_t v92 = v16;
  uint64_t v83 = v13;
  id v84 = v10;
  uint64_t v28 = *(void *)(a2 + 64);
  uint64_t v95 = a2 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(a2 + 32);
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  else {
    uint64_t v30 = -1;
  }
  unint64_t v31 = v30 & v28;
  uint64_t v85 = v20;
  uint64_t v32 = v20 + OBJC_IVAR____TtC6CoreOC9PGManager_sampleIdSet;
  swift_bridgeObjectRetain();
  uint64_t v97 = (uint64_t *)v32;
  swift_beginAccess();
  uint64_t v86 = 0;
  int64_t v33 = 0;
  int64_t v96 = (unint64_t)(v29 + 63) >> 6;
  uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  os_log_type_t v93 = (void (**)(char *, uint64_t))(v4 + 8);
  *(void *)&long long v35 = 134349314;
  long long v88 = v35;
  uint64_t v82 = MEMORY[0x263F8EE58] + 8;
  uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v91 = a2;
  while (1)
  {
    if (v31)
    {
      unint64_t v36 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      unint64_t v37 = v36 | (v33 << 6);
      goto LABEL_30;
    }
    int64_t v38 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      uint64_t result = sub_24B682EE0();
      __break(1u);
      return result;
    }
    if (v38 >= v96) {
      goto LABEL_47;
    }
    unint64_t v39 = *(void *)(v95 + 8 * v38);
    ++v33;
    if (!v39)
    {
      int64_t v33 = v38 + 1;
      if (v38 + 1 >= v96) {
        goto LABEL_47;
      }
      unint64_t v39 = *(void *)(v95 + 8 * v33);
      if (!v39)
      {
        int64_t v33 = v38 + 2;
        if (v38 + 2 >= v96) {
          goto LABEL_47;
        }
        unint64_t v39 = *(void *)(v95 + 8 * v33);
        if (!v39) {
          break;
        }
      }
    }
LABEL_29:
    unint64_t v31 = (v39 - 1) & v39;
    unint64_t v37 = __clz(__rbit64(v39)) + (v33 << 6);
LABEL_30:
    uint64_t v41 = *v97;
    if (*(void *)(*v97 + 16))
    {
      uint64_t v42 = *(void *)(*(void *)(a2 + 48) + 8 * v37);
      uint64_t v43 = (float32x4_t *)(*(void *)(a2 + 56) + (v37 << 6));
      float32x4_t v44 = v43[1];
      float64x2_t v98 = *(float64x2_t *)v43;
      float64x2_t v99 = (float64x2_t)v44;
      float32x4_t v45 = v43[3];
      float32x4_t v100 = v43[2];
      float64x2_t v101 = (float64x2_t)v45;
      uint64_t v46 = sub_24B683080();
      uint64_t v47 = -1 << *(unsigned char *)(v41 + 32);
      unint64_t v48 = v46 & ~v47;
      if ((*(void *)(v41 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48))
      {
        uint64_t v49 = *(void *)(v41 + 48);
        if (*(void *)(v49 + 8 * v48) == v42)
        {
LABEL_36:
          if (v42 < 0) {
            goto LABEL_58;
          }
          sub_24B5F89D4(v111, (float32x4_t)v98, (float32x4_t)v99, v100, (float32x4_t)v101);
          float64x2_t v103 = v111[0];
          float64x2_t v104 = v111[1];
          float64x2_t v105 = v111[2];
          float64x2_t v106 = v111[3];
          float64x2_t v107 = v111[4];
          float64x2_t v108 = v111[5];
          float64x2_t v109 = v111[6];
          float64x2_t v110 = v111[7];
          int v51 = CPGSampleCameraTransformMapAddBySampleID();
          uint64_t v52 = sub_24B57CBE8();
          uint64_t v53 = *v34;
          if (v51)
          {
            uint64_t v54 = v18;
            int64_t v55 = v92;
            v53(v92, v52, v3);
            uint64_t v56 = sub_24B6824B0();
            os_log_type_t v57 = sub_24B682B20();
            if (os_log_type_enabled(v56, v57))
            {
              uint64_t v58 = swift_slowAlloc();
              uint64_t v59 = swift_slowAlloc();
              uint64_t v102 = v59;
              *(_DWORD *)uint64_t v58 = v88;
              *(void *)(v58 + 4) = v42;
              *(_WORD *)(v58 + 12) = 2082;
              float64x2_t v103 = v98;
              float64x2_t v104 = v99;
              float64x2_t v105 = (float64x2_t)v100;
              float64x2_t v106 = v101;
              type metadata accessor for simd_float4x4(0);
              uint64_t v60 = sub_24B682820();
              *(void *)(v58 + 14) = sub_24B5627B8(v60, v61, &v102);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24B55E000, v56, v57, "Failed to update to map sample of id = %{public}ld with updated VIO transform = %{public}s", (uint8_t *)v58, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v59, -1, -1);
              uint64_t v62 = v58;
              uint64_t v3 = v94;
              MEMORY[0x24C5D6C00](v62, -1, -1);
            }

            (*v93)(v55, v3);
            uint64_t v18 = v54;
            uint64_t v34 = v90;
            a2 = v91;
          }
          else
          {
            v53(v18, v52, v3);
            uint64_t v63 = sub_24B6824B0();
            os_log_type_t v64 = sub_24B682B30();
            uint64_t v81 = v18;
            os_log_type_t v65 = v64;
            if (os_log_type_enabled(v63, v64))
            {
              uint64_t v66 = swift_slowAlloc();
              uint64_t v80 = swift_slowAlloc();
              uint64_t v102 = v80;
              *(_DWORD *)uint64_t v66 = v88;
              *(void *)(v66 + 4) = v42;
              *(_WORD *)(v66 + 12) = 2082;
              float64x2_t v103 = v98;
              float64x2_t v104 = v99;
              float64x2_t v105 = (float64x2_t)v100;
              float64x2_t v106 = v101;
              type metadata accessor for simd_float4x4(0);
              uint64_t v67 = sub_24B682820();
              *(void *)(v66 + 14) = sub_24B5627B8(v67, v68, &v102);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24B55E000, v63, v65, "Updated to map sample of id = %{public}ld with updated VIO transform = %{public}s", (uint8_t *)v66, 0x16u);
              uint64_t v86 = 1;
              uint64_t v69 = v80;
              swift_arrayDestroy();
              MEMORY[0x24C5D6C00](v69, -1, -1);
              uint64_t v70 = v66;
              uint64_t v3 = v94;
              MEMORY[0x24C5D6C00](v70, -1, -1);

              uint64_t v18 = v81;
              (*v93)(v81, v3);
            }
            else
            {

              uint64_t v18 = v81;
              (*v93)(v81, v3);
              uint64_t v86 = 1;
            }
          }
        }
        else
        {
          uint64_t v50 = ~v47;
          while (1)
          {
            unint64_t v48 = (v48 + 1) & v50;
            if (((*(void *)(v41 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
              break;
            }
            if (*(void *)(v49 + 8 * v48) == v42) {
              goto LABEL_36;
            }
          }
        }
      }
    }
  }
  int64_t v40 = v38 + 3;
  if (v40 < v96)
  {
    unint64_t v39 = *(void *)(v95 + 8 * v40);
    if (!v39)
    {
      while (1)
      {
        int64_t v33 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_57;
        }
        if (v33 >= v96) {
          goto LABEL_47;
        }
        unint64_t v39 = *(void *)(v95 + 8 * v33);
        ++v40;
        if (v39) {
          goto LABEL_29;
        }
      }
    }
    int64_t v33 = v40;
    goto LABEL_29;
  }
LABEL_47:
  swift_release();
  if (v86)
  {
    int updated = CPGSessionUpdateSampleCameraTransforms();
    uint64_t v72 = sub_24B57CBE8();
    uint64_t v73 = *v34;
    if (updated)
    {
      v73(v84, v72, v3);
      uint64_t v74 = sub_24B6824B0();
      os_log_type_t v75 = sub_24B682B20();
      if (os_log_type_enabled(v74, v75))
      {
        int v76 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v76 = 0;
        _os_log_impl(&dword_24B55E000, v74, v75, "Failed to update the sample camera transform map", v76, 2u);
        MEMORY[0x24C5D6C00](v76, -1, -1);
      }

      (*v93)(v84, v3);
    }
    else
    {
      v73(v83, v72, v3);
      uint64_t v77 = sub_24B6824B0();
      os_log_type_t v78 = sub_24B682B30();
      if (os_log_type_enabled(v77, v78))
      {
        char v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v79 = 0;
        _os_log_impl(&dword_24B55E000, v77, v78, "Success to update the sample camera transform map", v79, 2u);
        MEMORY[0x24C5D6C00](v79, -1, -1);
      }

      (*v93)(v83, v3);
    }
  }
  CPGSampleCameraTransformMapRelease();
  return swift_release();
}

uint64_t sub_24B5B9E5C(uint64_t a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5)
{
  uint64_t v6 = v5;
  __n128 v24 = a4;
  __n128 v25 = a5;
  __n128 v22 = a2;
  __n128 v23 = a3;
  uint64_t v8 = sub_24B6825D0();
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24B682640();
  uint64_t v11 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v6 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a1;
  __n128 v17 = v23;
  *(__n128 *)(v16 + 32) = v22;
  *(__n128 *)(v16 + 48) = v17;
  __n128 v18 = v25;
  *(__n128 *)(v16 + 64) = v24;
  *(__n128 *)(v16 + 80) = v18;
  aBlock[4] = sub_24B5D7F34;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8D6C8;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v14;
  swift_retain();
  sub_24B6825F0();
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v13, v10, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5BA170(float32x4_t a1, float32x4_t a2, float32x4_t a3, float32x4_t a4, uint64_t a5, unint64_t a6)
{
  float32x4_t v61 = a3;
  float32x4_t v62 = a4;
  float64x2_t v59 = (float64x2_t)a1;
  float32x4_t v60 = a2;
  uint64_t v81 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  __n128 v17 = (char *)&v57 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  id v20 = (char *)&v57 - v19;
  MEMORY[0x270FA5388](v18);
  __n128 v22 = (char *)&v57 - v21;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD00000000000003BLL, 0x800000024B68DAF0);
  }
  if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    uint64_t v29 = (void *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_session);
    swift_beginAccess();
    if (!*v29
      || (a6 & 0x8000000000000000) != 0
      || (sub_24B5F94A8((float32x4_t)v59, v60, v61, (int8x16_t)v62) & 1) == 0)
    {
      uint64_t v34 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v14, v34, v7);
      long long v35 = sub_24B6824B0();
      os_log_type_t v36 = sub_24B682B20();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        v72.i64[0] = v38;
        *(_DWORD *)uint64_t v37 = 134349314;
        v63.i64[0] = a6;
        sub_24B682CD0();
        *(_WORD *)(v37 + 12) = 2082;
        float32x4_t v63 = (float32x4_t)v59;
        float32x4_t v64 = v60;
        float32x4_t v65 = v61;
        float32x4_t v66 = v62;
        type metadata accessor for simd_float4x4(0);
        uint64_t v39 = sub_24B682820();
        v62.i64[0] = v7;
        v63.i64[0] = sub_24B5627B8(v39, v40, (uint64_t *)&v72);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24B55E000, v35, v36, "Invalid argument segmentID = %{public}ld or bounding box transform = %{public}s", (uint8_t *)v37, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v38, -1, -1);
        MEMORY[0x24C5D6C00](v37, -1, -1);
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v62.i64[0]);
      }

      swift_release();
      uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      uint64_t v42 = v14;
      return v41(v42, v7);
    }
    uint64_t v80 = 0;
    sub_24B5F89D4((float64x2_t *)&v63, (float32x4_t)v59, v60, v61, v62);
    float32x4_t v72 = v63;
    float32x4_t v73 = v64;
    float32x4_t v74 = v65;
    float32x4_t v75 = v66;
    long long v76 = v67;
    long long v77 = v68;
    long long v78 = v69;
    long long v79 = v70;
    if (CPGBoundingBoxCreateFromTransform())
    {
      uint64_t v30 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v30, v7);
      unint64_t v31 = sub_24B6824B0();
      os_log_type_t v32 = sub_24B682B20();
      if (os_log_type_enabled(v31, v32))
      {
        int64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v33 = 0;
        _os_log_impl(&dword_24B55E000, v31, v32, "Failed to create bounding box from transform.", v33, 2u);
        MEMORY[0x24C5D6C00](v33, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      uint64_t v42 = v17;
      return v41(v42, v7);
    }
    if (a6 >> 31) {
      __break(1u);
    }
    int updated = CPGSessionUpdateBoundingBoxBySegmentID();
    uint64_t v44 = sub_24B57CBE8();
    float32x4_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    if (updated)
    {
      v45(v20, v44, v7);
      uint64_t v46 = sub_24B6824B0();
      os_log_type_t v47 = sub_24B682B20();
      if (os_log_type_enabled(v46, v47))
      {
        unint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v48 = 0;
        _os_log_impl(&dword_24B55E000, v46, v47, "Failed to update bounding box by segment ID.", v48, 2u);
        MEMORY[0x24C5D6C00](v48, -1, -1);
      }

      uint64_t v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v50 = v20;
    }
    else
    {
      v45(v22, v44, v7);
      int v51 = sub_24B6824B0();
      os_log_type_t v52 = sub_24B682B30();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        uint64_t v71 = v58;
        *(_DWORD *)uint64_t v53 = 136446466;
        uint64_t v57 = v53 + 4;
        float32x4_t v72 = (float32x4_t)v59;
        float32x4_t v73 = v60;
        float32x4_t v74 = v61;
        float32x4_t v75 = v62;
        type metadata accessor for simd_float4x4(0);
        uint64_t v54 = sub_24B682820();
        v62.i64[0] = v7;
        v72.i64[0] = sub_24B5627B8(v54, v55, &v71);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2050;
        v72.i64[0] = a6;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v51, v52, "Successfully updated bounding box transform = %{public}s for segmentID = %{public}ld", (uint8_t *)v53, 0x16u);
        uint64_t v56 = v58;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v56, -1, -1);
        MEMORY[0x24C5D6C00](v53, -1, -1);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v62.i64[0]);
LABEL_30:
        CPGBoundingBoxRelease();
        return swift_release();
      }

      uint64_t v49 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v50 = v22;
    }
    v49(v50, v7);
    goto LABEL_30;
  }
  uint64_t v24 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v24, v7);
  __n128 v25 = sub_24B6824B0();
  os_log_type_t v26 = sub_24B682B20();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_24B55E000, v25, v26, "Update bounding box exited. Backend manager is closed.", v27, 2u);
    MEMORY[0x24C5D6C00](v27, -1, -1);
    swift_release();
  }
  else
  {

    swift_release();
  }
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v42 = v11;
  return v41(v42, v7);
}

uint64_t sub_24B5BA928()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6825D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v31 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B682640();
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = sub_24B6824B0();
  os_log_type_t v13 = sub_24B682B30();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v1;
    uint64_t v16 = v15;
    aBlock[0] = v15;
    uint64_t v27 = v3;
    *(_DWORD *)uint64_t v14 = 136380675;
    uint64_t v32 = sub_24B5627B8(0x657A696C616E6966, 0xEF29287475706E49, aBlock);
    uint64_t v3 = v27;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v12, v13, "Backend Manager.%{private}s called.", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v16;
    uint64_t v1 = v26;
    MEMORY[0x24C5D6C00](v17, -1, -1);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_24B5D7F44;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24B566C04;
  aBlock[3] = (uint64_t)&unk_26FE8D6F0;
  id v20 = _Block_copy(aBlock);
  id v21 = v18;
  swift_retain();
  __n128 v22 = v28;
  sub_24B6825F0();
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  __n128 v23 = v31;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v22, v23, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v30);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5BADD4()
{
  uint64_t v0 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v40 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - v11;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0x657A696C616E6966, 0xEF29287475706E49);
  }
  uint64_t v14 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v15 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v15, v3);
    uint64_t v16 = sub_24B6824B0();
    os_log_type_t v17 = sub_24B682B20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_24B55E000, v16, v17, "Finalize input exited. Backend manager is closed.", v18, 2u);
      MEMORY[0x24C5D6C00](v18, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    uint64_t v20 = OBJC_IVAR____TtC6CoreOC9PGManager_processStarted;
    char v21 = *(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted);
    uint64_t v22 = sub_24B57CBE8();
    __n128 v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    if (v21)
    {
      v23(v10, v22, v3);
      uint64_t v24 = sub_24B6824B0();
      os_log_type_t v25 = sub_24B682B30();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_24B55E000, v24, v25, "Process has started, the input must have been finalized.", v26, 2u);
        MEMORY[0x24C5D6C00](v26, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }
    else
    {
      v23(v12, v22, v3);
      uint64_t v27 = sub_24B6824B0();
      os_log_type_t v28 = sub_24B682B30();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v44[0] = v42;
        uint64_t v41 = v29;
        *(_DWORD *)uint64_t v29 = 136380675;
        unint64_t v40 = v29 + 4;
        uint64_t v43 = sub_24B5627B8(0x657A696C616E6966, 0xEF29287475706E49, v44);
        sub_24B682CD0();
        os_log_type_t v30 = v28;
        unint64_t v31 = v41;
        _os_log_impl(&dword_24B55E000, v27, v30, "Backend Manager.%{private}s happened", v41, 0xCu);
        uint64_t v32 = v42;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v32, -1, -1);
        MEMORY[0x24C5D6C00](v31, -1, -1);
      }

      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
      if ((*(unsigned char *)(v14 + v20) & 1) == 0)
      {
        *(unsigned char *)(v14 + v20) = 1;
        if ((*(uint64_t (**)(uint64_t))(*(void *)v14 + 440))(v33))
        {
          uint64_t v35 = v34;
          uint64_t ObjectType = swift_getObjectType();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v35 + 8))(v2, ObjectType, v35);
          swift_unknownObjectRelease();
          sub_24B5DA128((uint64_t)v2, type metadata accessor for PhotogrammetrySession.Output);
        }
      }
      swift_beginAccess();
      if (CPGSessionFinalizeInput() && (*(uint64_t (**)(void))(*(void *)v14 + 512))())
      {
        uint64_t v38 = v37;
        uint64_t v39 = swift_getObjectType();
        (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v38 + 8))(0, 0, 1, v39, v38);
        swift_release();
        return swift_unknownObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
}

uint64_t sub_24B5BB3B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24B6825D0();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    if (*(void *)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader])
    {
      uint64_t v12 = swift_retain();
      sub_24B5C2E90(v12, a1);
      swift_release();
      os_log_type_t v13 = &unk_2697CE000;
LABEL_6:
      uint64_t v20 = 0;
      unint64_t v31 = 0;
LABEL_7:
      char v21 = *(void **)&v2[v13[61]];
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      *(void *)(v23 + 24) = a1;
      unint64_t v40 = sub_24B5D7FA8;
      uint64_t v41 = (void *)v23;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_24B566C04;
      uint64_t v39 = &unk_26FE8D790;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      id v25 = v21;
      swift_retain();
      sub_24B6825F0();
      uint64_t v35 = v11;
      sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      sub_24B682D80();
      MEMORY[0x24C5D4CD0](0, v10, v6, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
      swift_release();
      swift_release();
      return sub_24B5D7FB0(v20);
    }
    uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_pgSamples];
    if (v14)
    {
      uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_processQueue];
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      os_log_type_t v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = v14;
      v17[4] = a1;
      unint64_t v40 = sub_24B5D7FC4;
      uint64_t v41 = v17;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_24B566C04;
      uint64_t v39 = &unk_26FE8D7E0;
      unint64_t v31 = _Block_copy(&aBlock);
      swift_retain_n();
      os_log_type_t v30 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24B6825F0();
      uint64_t v35 = v11;
      sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      uint64_t v11 = MEMORY[0x263F8EE78];
      sub_24B682D80();
      uint64_t v18 = v30;
      uint64_t v19 = v31;
      MEMORY[0x24C5D4CD0](0, v10, v6, v31);
      _Block_release(v19);
      swift_release();

      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
      swift_release();
      swift_release();
      os_log_type_t v13 = &unk_2697CE000;
      goto LABEL_6;
    }
    uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue];
    uint64_t v27 = swift_allocObject();
    os_log_type_t v30 = sub_24B5D7F4C;
    *(void *)(v27 + 16) = sub_24B5D7F4C;
    *(void *)(v27 + 24) = v1;
    unint64_t v40 = sub_24B59DE88;
    uint64_t v41 = (void *)v27;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_24B58EFF8;
    uint64_t v39 = &unk_26FE8D740;
    os_log_type_t v28 = _Block_copy(&aBlock);
    uint64_t v29 = v26;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v29, v28);

    _Block_release(v28);
    LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((v28 & 1) == 0)
    {
      unint64_t v31 = v1;
      uint64_t v11 = MEMORY[0x263F8EE78];
      os_log_type_t v13 = (void *)&unk_2697CE000;
      uint64_t v20 = (uint64_t)v30;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5BBA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v22 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD000000000000018, 0x800000024B68DAD0);
  }
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v13 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v13, v5);
    uint64_t v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_24B55E000, v14, v15, "Process add sample exited. Backend manager is closed.", v16, 2u);
      MEMORY[0x24C5D6C00](v16, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted))
  {
    uint64_t v18 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v18, v5);
    uint64_t v19 = sub_24B6824B0();
    os_log_type_t v20 = sub_24B682B30();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v21 = 0;
      _os_log_impl(&dword_24B55E000, v19, v20, "Process has started, ignoring new samples.", v21, 2u);
      MEMORY[0x24C5D6C00](v21, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    sub_24B5C3E08(a2, a3, 0, 1, 0, 1);
    return swift_release();
  }
}

uint64_t sub_24B5BBCF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhotogrammetrySession.Output(0);
  uint64_t result = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(result);
    if (result)
    {
      uint64_t v7 = v6;
      uint64_t ObjectType = swift_getObjectType();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 8))(v5, ObjectType, v7);
      swift_unknownObjectRelease();
      return sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
  }
  return result;
}

uint64_t sub_24B5BBE24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v170 = a2;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v158 = *(void *)(v2 - 8);
  uint64_t v159 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))((char *)&v148 - v6);
  uint64_t v155 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x270FA5388](v155);
  uint64_t v8 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_24B6822E0();
  uint64_t v153 = *(void (***)(char *, uint64_t))(v162 - 8);
  MEMORY[0x270FA5388](v162);
  float32x4_t v161 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04(&qword_2697CC670);
  *(void *)&long long v152 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  float32x4_t v163 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B562F04(&qword_2697CC678);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  os_log_type_t v15 = (unint64_t *)((char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  os_log_type_t v17 = (uint64_t *)((char *)&v148 - v16);
  uint64_t v173 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v173);
  uint64_t v172 = (uint64_t)&v148 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = (unint64_t *)type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v167 = *(v151 - 1);
  uint64_t v19 = MEMORY[0x270FA5388](v151);
  char v21 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v157 = (uint64_t)&v148 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v156 = (uint64_t)&v148 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  os_log_type_t v166 = (uint64_t (**)(void))((char *)&v148 - v27);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  os_log_type_t v30 = (char *)&v148 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v171 = (uint64_t (*)(uint64_t))((char *)&v148 - v31);
  uint64_t v32 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  *(void *)&long long v150 = (char *)&v148 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  os_log_type_t v36 = (char *)&v148 - v35;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD000000000000018, 0x800000024B68DAD0);
  }
  uint64_t v38 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v39 = sub_24B57CBE8();
    uint64_t v41 = v158;
    uint64_t v40 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v5, v39, v159);
    uint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_24B55E000, v42, v43, "Process exited. Backend manager is closed.", v44, 2u);
      MEMORY[0x24C5D6C00](v44, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v5, v40);
  }
  uint64_t v164 = v8;
  uint64_t v46 = v170;
  uint64_t v47 = sub_24B5C5FF8(v176, (uint64_t)v170);
  LODWORD(v165) = v48;
  uint64_t v49 = *(void *)(v47 + 16);
  if (v49 != *((void *)v46 + 2))
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v50 = *(void *)(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  BOOL v51 = __OFADD__(v50, v49);
  uint64_t v52 = v50 + v49;
  if (v51) {
    goto LABEL_93;
  }
  uint64_t v168 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  uint64_t v169 = v47;
  int v53 = v176[0];
  *(void *)(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v52;
  sub_24B5BFBEC();
  if (*(unsigned char *)(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) != 1)
  {
    uint64_t v93 = *(void *)(v169 + 16);
    if (!v93)
    {
      swift_bridgeObjectRelease();
LABEL_66:
      uint64_t v118 = sub_24B57CBE8();
      uint64_t v120 = v158;
      uint64_t v119 = v159;
      uint64_t v121 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))((char *)v154, v118, v159);
      unint64_t v122 = sub_24B6824B0();
      os_log_type_t v123 = sub_24B682B20();
      if (os_log_type_enabled(v122, v123))
      {
        uint64_t v124 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v124 = 0;
        _os_log_impl(&dword_24B55E000, v122, v123, "Process has not started.", v124, 2u);
        MEMORY[0x24C5D6C00](v124, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v120 + 8))(v121, v119);
    }
    uint64_t v94 = *(uint64_t (**)(uint64_t))(*(void *)v38 + 440);
    uint64_t v170 = (uint64_t (*)(void))(*(void *)v38 + 440);
    uint64_t v171 = v94;
    uint64_t v165 = OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
    os_log_type_t v166 = (uint64_t (**)(void))OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
    uint64_t v95 = v169 + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
    uint64_t v167 = *(void *)(v167 + 72);
    swift_bridgeObjectRetain();
    uint64_t v96 = v168;
    while (1)
    {
      uint64_t v97 = sub_24B5D9F60(v95, (uint64_t)v21, type metadata accessor for PhotogrammetrySession.Request);
      if (v171(v97))
      {
        uint64_t v99 = v98;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v101 = sub_24B562F04(&qword_2697CC638);
        uint64_t v102 = v172;
        uint64_t v103 = v172 + *(int *)(v101 + 48);
        sub_24B5D9F60((uint64_t)v21, v172, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)uint64_t v103 = 4;
        *(unsigned char *)(v103 + 8) = 1;
        uint64_t v96 = v168;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 8))(v102, ObjectType, v99);
        swift_unknownObjectRelease();
        sub_24B5DA128(v102, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v104 = *(void *)(v38 + v96);
      BOOL v51 = __OFSUB__(v104, 1);
      uint64_t v105 = v104 - 1;
      if (v51) {
        break;
      }
      *(void *)(v38 + v96) = v105;
      if (v105 < 0) {
        goto LABEL_88;
      }
      if (!v105)
      {
        swift_retain();
        sub_24B6810B0();
        uint64_t v106 = swift_release();
        if (v176[0] == 1 || *(unsigned char *)(v38 + v165) == 1)
        {
          if (v171(v106))
          {
            uint64_t v108 = v107;
            uint64_t v109 = swift_getObjectType();
            uint64_t v110 = v172;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 8))(v110, v109, v108);
            swift_unknownObjectRelease();
            sub_24B5DA128(v110, type metadata accessor for PhotogrammetrySession.Output);
          }
          v176[0] = 0;
          swift_retain();
          sub_24B6811C0((uint64_t)v176);
          swift_release();
          *(unsigned char *)(v38 + v165) = 0;
        }
        else if (v171(v106))
        {
          uint64_t v112 = v111;
          uint64_t v113 = swift_getObjectType();
          uint64_t v114 = v172;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 8))(v114, v113, v112);
          swift_unknownObjectRelease();
          sub_24B5DA128(v114, type metadata accessor for PhotogrammetrySession.Output);
        }
      }
      sub_24B5DA128((uint64_t)v21, type metadata accessor for PhotogrammetrySession.Request);
      v95 += v167;
      if (!--v93)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_66;
      }
    }
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if ((v165 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v115 = (uint64_t (*)(void))(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest);
  swift_beginAccess();
  uint64_t v170 = v115;
  sub_24B563A6C((uint64_t)v115, (uint64_t)v36, &qword_2697CC5D0);
  uint64_t v159 = *(void *)(v167 + 48);
  LODWORD(v115) = ((uint64_t (*)(char *, uint64_t, unint64_t *))v159)(v36, 1, v151);
  sub_24B5632A8((uint64_t)v36, &qword_2697CC5D0);
  if (v115 == 1) {
    goto LABEL_95;
  }
  if (v53 != 7)
  {
    v176[0] = v53;
    if (sub_24B5C68A4(v176))
    {
      uint64_t v116 = v150;
      sub_24B563A6C((uint64_t)v170, v150, &qword_2697CC5D0);
      if (((unsigned int (*)(uint64_t, uint64_t, unint64_t *))v159)(v116, 1, v151) != 1)
      {
        double v117 = sub_24B5C70D0(v116);
        sub_24B5DA128(v116, type metadata accessor for PhotogrammetrySession.Request);
        *(double *)(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime) = v117;
LABEL_10:
        unint64_t v54 = 0;
        uint64_t v55 = v169;
        unint64_t v56 = *(void *)(v169 + 16);
        uint64_t v159 = v38 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
        float32x4_t v160 = v15;
        uint64_t v151 = (unint64_t *)(v38 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
        uint64_t v171 = (uint64_t (*)(uint64_t))(v152 + 56);
        uint64_t v170 = (uint64_t (*)(void))(v152 + 48);
        uint64_t v158 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
        uint64_t v57 = v153++;
        uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v57 + 4);
        uint64_t v58 = (uint64_t)v164;
        while (1)
        {
          if (v54 == v56)
          {
            uint64_t v59 = 1;
            unint64_t v54 = v56;
          }
          else
          {
            if (v54 >= *(void *)(v55 + 16)) {
              goto LABEL_89;
            }
            uint64_t v60 = (uint64_t)&v163[*(int *)(v10 + 48)];
            sub_24B5D9F60(v55+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v54, v60, type metadata accessor for PhotogrammetrySession.Request);
            uint64_t v61 = (uint64_t)v15 + *(int *)(v10 + 48);
            *os_log_type_t v15 = v54;
            sub_24B5D9EF8(v60, v61, type metadata accessor for PhotogrammetrySession.Request);
            uint64_t v59 = 0;
            ++v54;
            uint64_t v58 = (uint64_t)v164;
          }
          (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))v171)(v15, v59, 1, v10);
          sub_24B56CF38((uint64_t)v15, (uint64_t)v17, &qword_2697CC678);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))v170)(v17, 1, v10) == 1) {
            goto LABEL_58;
          }
          uint64_t v62 = *v17;
          sub_24B5D9EF8((uint64_t)v17 + *(int *)(v10 + 48), (uint64_t)v30, type metadata accessor for PhotogrammetrySession.Request);
          if (v62 || (v165 & 0x100) == 0)
          {
            unint64_t v63 = v56;
            uint64_t v64 = (uint64_t)v166;
            sub_24B5D9F60((uint64_t)v30, (uint64_t)v166, type metadata accessor for PhotogrammetrySession.Request);
            uint64_t v65 = sub_24B562F04(&qword_2697CC580);
            int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v64, 3, v65);
            unint64_t v56 = v63;
            switch(v66)
            {
              case 1:
                sub_24B5C8494((uint64_t)v30);
                goto LABEL_12;
              case 2:
                if (*(unsigned char *)(v159 + 64))
                {
                  sub_24B5D9F60((uint64_t)v30, v157, type metadata accessor for PhotogrammetrySession.Request);
                  long long v70 = v151;
                  swift_beginAccess();
                  unint64_t v71 = *v70;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *long long v70 = v71;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    unint64_t v71 = sub_24B5D3C4C(0, *(void *)(v71 + 16) + 1, 1, v71);
                    unint64_t *v151 = v71;
                  }
                  unint64_t v74 = *(void *)(v71 + 16);
                  unint64_t v73 = *(void *)(v71 + 24);
                  unint64_t v75 = v74 + 1;
                  os_log_type_t v15 = v160;
                  if (v74 >= v73 >> 1)
                  {
                    *(void *)&long long v152 = v74 + 1;
                    uint64_t v91 = sub_24B5D3C4C(v73 > 1, v74 + 1, 1, v71);
                    unint64_t v75 = v152;
                    unint64_t v71 = v91;
                    unint64_t *v151 = v91;
                  }
                  *(void *)(v71 + 16) = v75;
                  sub_24B5D9EF8(v157, v71+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v74, type metadata accessor for PhotogrammetrySession.Request);
                  swift_endAccess();
                  uint64_t v58 = (uint64_t)v164;
                }
                else
                {
                  long long v152 = *(_OWORD *)(v159 + 32);
                  long long v150 = *(_OWORD *)(v159 + 16);
                  long long v148 = *(_OWORD *)v159;
                  uint64_t v76 = *(void *)(v159 + 48);
                  uint64_t v149 = *(void *)(v159 + 56);
                  sub_24B5C8C2C((uint64_t)v30);
                  long long v77 = v150;
                  *(_OWORD *)uint64_t v58 = v148;
                  *(_OWORD *)(v58 + 16) = v77;
                  *(_OWORD *)(v58 + 32) = v152;
                  uint64_t v78 = v149;
                  *(void *)(v58 + 48) = v76;
                  *(void *)(v58 + 56) = v78;
                  uint64_t v79 = swift_storeEnumTagMultiPayload();
                  if ((*(uint64_t (**)(uint64_t))(*(void *)v38 + 440))(v79))
                  {
                    *(void *)&long long v150 = v80;
                    *(void *)&long long v152 = swift_getObjectType();
                    uint64_t v81 = sub_24B562F04(&qword_2697CC640);
                    uint64_t v82 = v172;
                    uint64_t v149 = v172 + *(int *)(v81 + 48);
                    sub_24B5D9F60((uint64_t)v30, v172, type metadata accessor for PhotogrammetrySession.Request);
                    sub_24B5D9F60(v58, v149, type metadata accessor for PhotogrammetrySession.Result);
                    swift_storeEnumTagMultiPayload();
                    (*(void (**)(uint64_t, void))(v150 + 8))(v82, v152);
                    swift_unknownObjectRelease();
                    sub_24B5DA128(v82, type metadata accessor for PhotogrammetrySession.Output);
                  }
                  uint64_t v83 = *(void *)(v38 + v168);
                  BOOL v51 = __OFSUB__(v83, 1);
                  uint64_t v84 = v83 - 1;
                  os_log_type_t v15 = v160;
                  if (v51) {
                    goto LABEL_94;
                  }
                  *(void *)(v38 + v168) = v84;
                  sub_24B5BFBEC();
                  uint64_t v58 = (uint64_t)v164;
                  sub_24B5DA128((uint64_t)v164, type metadata accessor for PhotogrammetrySession.Result);
                }
                break;
              case 3:
                sub_24B5C8854((uint64_t)v30);
LABEL_12:
                os_log_type_t v15 = v160;
                break;
              default:
                uint64_t v67 = (uint64_t)v166;
                __int8 v68 = *((unsigned char *)v166 + *(int *)(v65 + 48));
                sub_24B56CF38((uint64_t)v166 + *(int *)(v65 + 64), (uint64_t)v176, &qword_2697CC588);
                (*v154)(v161, v67, v162);
                if (*(void *)(v38 + v158))
                {
                  __int8 v175 = v68;
                  sub_24B56CF38((uint64_t)v176, (uint64_t)v174, &qword_2697CC588);
                  sub_24B5C731C((uint64_t)v30, v69, &v175, (uint64_t)v174);
                  unint64_t v56 = v63;
                  os_log_type_t v15 = v160;
                }
                else
                {
                  sub_24B5D9F60((uint64_t)v30, v156, type metadata accessor for PhotogrammetrySession.Request);
                  uint64_t v85 = v151;
                  swift_beginAccess();
                  unint64_t v86 = *v85;
                  char v87 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v85 = v86;
                  if ((v87 & 1) == 0)
                  {
                    unint64_t v86 = sub_24B5D3C4C(0, *(void *)(v86 + 16) + 1, 1, v86);
                    unint64_t *v151 = v86;
                  }
                  unint64_t v56 = v63;
                  unint64_t v89 = *(void *)(v86 + 16);
                  unint64_t v88 = *(void *)(v86 + 24);
                  unint64_t v90 = v89 + 1;
                  os_log_type_t v15 = v160;
                  if (v89 >= v88 >> 1)
                  {
                    *(void *)&long long v152 = v89 + 1;
                    uint64_t v92 = sub_24B5D3C4C(v88 > 1, v89 + 1, 1, v86);
                    unint64_t v90 = v152;
                    unint64_t v86 = v92;
                    unint64_t *v151 = v92;
                  }
                  *(void *)(v86 + 16) = v90;
                  sub_24B5D9EF8(v156, v86+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v89, type metadata accessor for PhotogrammetrySession.Request);
                  swift_endAccess();
                }
                (*v153)(v161, v162);
                uint64_t v58 = (uint64_t)v164;
                break;
            }
          }
          sub_24B5DA128((uint64_t)v30, type metadata accessor for PhotogrammetrySession.Request);
          uint64_t v55 = v169;
        }
      }
LABEL_96:
      __break(1u);
      JUMPOUT(0x24B5BD348);
    }
  }
  uint64_t v125 = *(void *)(v169 + 16);
  if (!v125)
  {
LABEL_58:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  unint64_t v126 = (uint64_t (**)(void))(*(void *)v38 + 440);
  uint64_t v170 = *v126;
  uint64_t v165 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  os_log_type_t v166 = v126;
  uint64_t v164 = (char *)OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
  uint64_t v127 = v169 + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
  uint64_t v167 = *(void *)(v167 + 72);
  swift_bridgeObjectRetain();
  uint64_t v128 = v168;
  uint64_t v129 = v171;
  do
  {
    uint64_t v130 = sub_24B5D9F60(v127, (uint64_t)v129, type metadata accessor for PhotogrammetrySession.Request);
    if (v170(v130))
    {
      uint64_t v132 = v131;
      uint64_t v133 = swift_getObjectType();
      uint64_t v134 = sub_24B562F04(&qword_2697CC638);
      uint64_t v135 = v172;
      uint64_t v136 = v172 + *(int *)(v134 + 48);
      sub_24B5D9F60((uint64_t)v129, v172, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v136 = 3;
      *(unsigned char *)(v136 + 8) = 1;
      uint64_t v128 = v168;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 8))(v135, v133, v132);
      swift_unknownObjectRelease();
      sub_24B5DA128(v135, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v137 = *(void *)(v38 + v128);
    BOOL v51 = __OFSUB__(v137, 1);
    uint64_t v138 = v137 - 1;
    if (v51) {
      goto LABEL_90;
    }
    *(void *)(v38 + v128) = v138;
    if (v138 < 0) {
      goto LABEL_91;
    }
    if (!v138)
    {
      swift_retain();
      sub_24B6810B0();
      uint64_t v139 = swift_release();
      if (v176[0] == 1 || v164[v38] == 1)
      {
        if (v170(v139))
        {
          uint64_t v141 = v140;
          uint64_t v142 = swift_getObjectType();
          uint64_t v143 = v172;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 8))(v143, v142, v141);
          swift_unknownObjectRelease();
          sub_24B5DA128(v143, type metadata accessor for PhotogrammetrySession.Output);
        }
        v176[0] = 0;
        swift_retain();
        sub_24B6811C0((uint64_t)v176);
        swift_release();
        v164[v38] = 0;
      }
      else if (v170(v139))
      {
        uint64_t v145 = v144;
        uint64_t v146 = swift_getObjectType();
        uint64_t v147 = v172;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 8))(v147, v146, v145);
        swift_unknownObjectRelease();
        sub_24B5DA128(v147, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
    uint64_t v129 = v171;
    sub_24B5DA128((uint64_t)v171, type metadata accessor for PhotogrammetrySession.Request);
    v127 += v167;
    --v125;
  }
  while (v125);
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24B5BD358()
{
  uint64_t v1 = sub_24B6825D0();
  uint64_t v14 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B682640();
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(aBlock[0]) = 1;
  swift_retain();
  sub_24B6811C0((uint64_t)aBlock);
  swift_release();
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_24B5D7FD0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8D808;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v7;
  swift_retain();
  sub_24B6825F0();
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v6, v3, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5BD65C()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = &v25[-v6];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v25[-v8];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0x29286C65636E6163, 0xE800000000000000);
  }
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted))
  {
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
    {
      uint64_t v11 = sub_24B57CBE8();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v7, v11, v0);
      uint64_t v12 = sub_24B6824B0();
      os_log_type_t v13 = sub_24B682B20();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_24B55E000, v12, v13, "Skip cancel. Backend manager is closed.", v14, 2u);
        MEMORY[0x24C5D6C00](v14, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v0);
    }
    else
    {
      swift_beginAccess();
      int v20 = CPGSessionCancelProcessing();
      if (v20 != -10 && v20)
      {
        uint64_t v21 = sub_24B57CBE8();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v9, v21, v0);
        uint64_t v22 = sub_24B6824B0();
        os_log_type_t v23 = sub_24B682B20();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl(&dword_24B55E000, v22, v23, "Cancel processing submits but failed", v24, 2u);
          MEMORY[0x24C5D6C00](v24, -1, -1);
        }

        (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v9, v0);
      }
    }
  }
  else
  {
    uint64_t v16 = sub_24B57CBE8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v4, v16, v0);
    os_log_type_t v17 = sub_24B6824B0();
    os_log_type_t v18 = sub_24B682B30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_24B55E000, v17, v18, "Process has not started, nothing to cancel.", v19, 2u);
      MEMORY[0x24C5D6C00](v19, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return swift_release();
}

uint64_t sub_24B5BD9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v17[0] = a2;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  uint64_t v12 = sub_24B6824B0();
  os_log_type_t v13 = sub_24B682B30();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134349056;
    v17[1] = v17[0];
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v12, v13, "Processing cancellation status callback with code = %{public}llu", v14, 0xCu);
    MEMORY[0x24C5D6C00](v14, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (a1)
  {
    if (a4)
    {
      uint64_t v16 = *(void (**)(uint64_t, void, uint64_t))(*(void *)a4 + 1688);
      swift_retain();
      v16(a1, v17[0], a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24B5BDBE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = sub_24B6824B0();
  os_log_type_t v8 = sub_24B682B30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t aBlock = v10;
    *(_DWORD *)uint64_t v9 = 136380675;
    v20[1] = sub_24B5627B8(0x292865736F6C63, 0xE700000000000000, &aBlock);
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v7, v8, "Backend Manager.%{private}s called", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v10, -1, -1);
    MEMORY[0x24C5D6C00](v9, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) = 1;
    uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
    uint64_t v25 = nullsub_1;
    uint64_t v26 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v22 = 1107296256;
    os_log_type_t v23 = sub_24B58EFF8;
    uint64_t v24 = &unk_26FE8D830;
    os_log_type_t v13 = _Block_copy(&aBlock);
    uint64_t v14 = v12;
    swift_release();
    dispatch_sync(v14, v13);

    _Block_release(v13);
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if (result)
    {
      __break(1u);
    }
    else
    {
      uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_24B5D7FD8;
      *(void *)(v17 + 24) = v16;
      uint64_t v25 = sub_24B5A2598;
      uint64_t v26 = v17;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v22 = 1107296256;
      os_log_type_t v23 = sub_24B58EFF8;
      uint64_t v24 = &unk_26FE8D880;
      os_log_type_t v18 = _Block_copy(&aBlock);
      uint64_t v19 = v15;
      swift_retain();
      swift_release();
      dispatch_sync(v19, v18);

      _Block_release(v18);
      LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t result = swift_release();
      if ((v18 & 1) == 0) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24B5BDFDC()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v24 - v5;
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return sub_24B5AFAEC(0x292865736F6C63, 0xE700000000000000);
  }
  uint64_t v7 = sub_24B57CBE8();
  os_log_type_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v8(v6, v7, v0);
  uint64_t v9 = sub_24B6824B0();
  os_log_type_t v10 = sub_24B682B30();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v26 = v7;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v25 = v8;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v4;
    uint64_t v14 = v13;
    v30[0] = v13;
    uint64_t v28 = v0;
    *(_DWORD *)uint64_t v12 = 136380675;
    uint64_t v29 = sub_24B5627B8(0x292865736F6C63, 0xE700000000000000, v30);
    uint64_t v7 = v26;
    uint64_t v0 = v28;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v9, v10, "Backend Manager.%{private}s happened.", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v14;
    uint64_t v4 = v27;
    MEMORY[0x24C5D6C00](v15, -1, -1);
    uint64_t v16 = v12;
    os_log_type_t v8 = v25;
    MEMORY[0x24C5D6C00](v16, -1, -1);
  }

  uint64_t v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  v17(v6, v0);
  swift_beginAccess();
  int v18 = CPGSessionCancelProcessing();
  if (v18 != -10 && v18 != 0)
  {
    v8(v4, v7, v0);
    int v20 = sub_24B6824B0();
    os_log_type_t v21 = sub_24B682B20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_24B55E000, v20, v21, "Unexpected return state for cancel.", v22, 2u);
      MEMORY[0x24C5D6C00](v22, -1, -1);
    }

    v17(v4, v0);
  }
  sub_24B5CA90C();
  return swift_release();
}

uint64_t sub_24B5BE34C(uint64_t a1)
{
  uint64_t v3 = sub_24B6825D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B682640();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    uint64_t v20 = v7;
    uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
    sub_24B5D9F60(a1, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySample);
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v1;
    sub_24B5D9EF8((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for PhotogrammetrySample);
    aBlock[4] = sub_24B5D8318;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24B566C04;
    aBlock[3] = &unk_26FE8D8D0;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = v14;
    swift_retain();
    sub_24B6825F0();
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    sub_24B682D80();
    MEMORY[0x24C5D4CD0](0, v9, v6, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5BE6DC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unint64_t v15 = (char *)v42 - v14;
  MEMORY[0x270FA5388](v13);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
  {
    uint64_t v46 = v8;
    uint64_t result = sub_24B5B0F0C((uint64_t)a2, *(NSObject **)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter), 0);
    uint64_t v21 = (char *)a2 + *(int *)(v4 + 80);
    if (v21[8])
    {
      __break(1u);
    }
    else
    {
      uint64_t v22 = (double *)((char *)a2 + *(int *)(v4 + 68));
      if (((_BYTE)v22[1] & 1) == 0)
      {
        uint64_t v23 = *(void *)v21;
        double v24 = *v22;
        type metadata accessor for RelocContext();
        uint64_t v25 = swift_retain();
        sub_24B5A5A20(v24, v25, v23);
        swift_beginAccess();
        int v26 = CPGSessionLocalizeSample();
        if (!v26) {
          return CPGSampleRelease();
        }
        int v27 = v26;
        uint64_t v44 = v22;
        uint64_t v28 = sub_24B57CBE8();
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v28, v46);
        sub_24B5D9F60((uint64_t)a2, (uint64_t)v7, type metadata accessor for PhotogrammetrySample);
        uint64_t v29 = sub_24B6824B0();
        os_log_type_t v30 = sub_24B682B20();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (_DWORD *)swift_slowAlloc();
          os_log_type_t v43 = v21;
          uint64_t v32 = v31;
          *uint64_t v31 = 134349312;
          v42[1] = v31 + 1;
          float32x4_t v45 = a2;
          uint64_t v33 = *v7;
          sub_24B5DA128((uint64_t)v7, type metadata accessor for PhotogrammetrySample);
          *(void *)&v47[0] = v33;
          sub_24B682CD0();
          *((_WORD *)v32 + 6) = 1026;
          LODWORD(v47[0]) = v27;
          a2 = v45;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v29, v30, "Failed to re-localize sample of id = %{public}ld with\nerror = %{public}d", (uint8_t *)v32, 0x12u);
          uint64_t v34 = v32;
          uint64_t v21 = v43;
          MEMORY[0x24C5D6C00](v34, -1, -1);
        }
        else
        {
          sub_24B5DA128((uint64_t)v7, type metadata accessor for PhotogrammetrySample);
        }

        uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v46);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 464))(v35);
        if (!result) {
          return CPGSampleRelease();
        }
        if ((v21[8] & 1) == 0)
        {
          if (((_BYTE)v44[1] & 1) == 0)
          {
            uint64_t v37 = v36;
            uint64_t v38 = *a2;
            uint64_t v39 = *(void *)v21;
            double v40 = *v44;
            uint64_t ObjectType = swift_getObjectType();
            memset(v47, 0, sizeof(v47));
            char v48 = 1;
            (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, double))(v37 + 8))(v47, v38, v39, ObjectType, v37, v40);
            swift_unknownObjectRelease();
            return CPGSampleRelease();
          }
LABEL_19:
          __break(1u);
          return result;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v16, v8);
  uint64_t v17 = sub_24B6824B0();
  os_log_type_t v18 = sub_24B682B30();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_24B55E000, v17, v18, "Process has started, ignore new re-localization queries.", v19, 2u);
    MEMORY[0x24C5D6C00](v19, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_24B5BEE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 104))(result);
  if (!result)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v13 = result;
  uint64_t v23 = (*(uint64_t (**)(void))(*(void *)a4 + 128))();
  double v14 = (*(double (**)(void))(*(void *)a4 + 152))();
  uint64_t v15 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v15, v8);
  uint64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B30();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t v18 = (_DWORD *)swift_slowAlloc();
    uint64_t v22 = a1;
    uint64_t v19 = v18;
    *os_log_type_t v18 = 134349312;
    uint64_t v24 = a2;
    uint64_t v21 = v8;
    sub_24B682CD0();
    *((_WORD *)v19 + 6) = 2050;
    uint64_t v24 = v23;
    uint64_t v8 = v21;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v16, v17, "Processing re-localization callback for query sample of id = %{public}llu in static segment ID = %{public}ld", (uint8_t *)v19, 0x16u);
    uint64_t v20 = v19;
    a1 = v22;
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!a1) {
    goto LABEL_10;
  }
  if (a3)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(void *)v13 + 1712))(a1, a2, a3, v23, v14);
    swift_release();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B5BF104()
{
  uint64_t v1 = sub_24B6825D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B682640();
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader))
  {
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000003ALL;
    *(void *)(v9 + 8) = 0x800000024B68CED0;
    *(unsigned char *)(v9 + 16) = 6;
    return swift_willThrow();
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
    uint64_t v19 = v6;
    uint64_t v12 = swift_allocObject();
    uint64_t v18 = v2;
    uint64_t v13 = v12;
    swift_weakInit();
    aBlock[4] = sub_24B5D83A8;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24B566C04;
    aBlock[3] = &unk_26FE8D8F8;
    os_log_type_t v17 = _Block_copy(aBlock);
    id v16 = v11;
    swift_retain();
    sub_24B6825F0();
    void aBlock[7] = MEMORY[0x263F8EE78];
    sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
    sub_24B562F04((uint64_t *)&unk_2697CC490);
    sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
    sub_24B682D80();
    double v14 = v16;
    uint64_t v15 = v17;
    MEMORY[0x24C5D4CD0](0, v8, v4, v17);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_24B5BF44C()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = &v25[-v6];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v25[-v8];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0x2928656D75736572, 0xE800000000000000);
  }
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v11 = sub_24B57CBE8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v4, v11, v0);
    uint64_t v12 = sub_24B6824B0();
    os_log_type_t v13 = sub_24B682B20();
    if (os_log_type_enabled(v12, v13))
    {
      double v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v14 = 0;
      _os_log_impl(&dword_24B55E000, v12, v13, "Skip resume. PGManager is closed.", v14, 2u);
      MEMORY[0x24C5D6C00](v14, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  }
  else
  {
    swift_beginAccess();
    int v16 = CPGSessionResumeProcessingWithCallbacks();
    uint64_t v17 = sub_24B57CBE8();
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16);
    if (v16)
    {
      v18(v7, v17, v0);
      uint64_t v19 = sub_24B6824B0();
      os_log_type_t v20 = sub_24B682B20();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_24B55E000, v19, v20, "Request resumption failure.", v21, 2u);
        MEMORY[0x24C5D6C00](v21, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v0);
    }
    else
    {
      v18(v9, v17, v0);
      uint64_t v22 = sub_24B6824B0();
      int v23 = sub_24B682B30();
      if (os_log_type_enabled(v22, (os_log_type_t)v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_24B55E000, v22, (os_log_type_t)v23, "Request resumption success.", v24, 2u);
        MEMORY[0x24C5D6C00](v24, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v9, v0);
    }
  }
}

uint64_t sub_24B5BF7F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - v7;
  swift_beginAccess();
  if (*(float *)(v1 + 112) <= 0.0001)
  {
    *(_DWORD *)(v1 + 112) = 1008981770;
    uint64_t v13 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v13, v2);
    swift_retain();
    double v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B20();
    if (os_log_type_enabled(v14, v15))
    {
      int v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v16 = 134349056;
      double v18 = *(float *)(v1 + 112);
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v14, v15, "Invalid mobile sfm point cloud voxel dimension, resume to default value %{public}f", v16, 0xCu);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v9 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v9, v2);
    swift_retain();
    uint64_t v10 = sub_24B6824B0();
    os_log_type_t v11 = sub_24B682B30();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134349056;
      double v18 = *(float *)(v1 + 112);
      sub_24B682CD0();
      swift_release();
      _os_log_impl(&dword_24B55E000, v10, v11, "Mobile sfm point cloud voxel dimension set to %{public}f", v12, 0xCu);
      MEMORY[0x24C5D6C00](v12, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

float sub_24B5BFAE8()
{
  swift_beginAccess();
  return *(float *)(v0 + 112);
}

uint64_t sub_24B5BFB1C(float a1)
{
  swift_beginAccess();
  *(float *)(v1 + 112) = a1;
  return sub_24B5BF7F4();
}

uint64_t (*sub_24B5BFB60(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24B5BFBB8;
}

uint64_t sub_24B5BFBB8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_24B5BF7F4();
  }
  return result;
}

uint64_t sub_24B5BFBEC()
{
  uint64_t v1 = type metadata accessor for PhotogrammetrySession.Output(0);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  if (v5 < 0)
  {
    __break(1u);
  }
  else if (!v5)
  {
    swift_retain();
    sub_24B6810B0();
    uint64_t v6 = swift_release();
    if (v14[1] == 1 || *(unsigned char *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) == 1)
    {
      if ((*(uint64_t (**)(uint64_t))(*(void *)v0 + 440))(v6))
      {
        uint64_t v8 = v7;
        uint64_t ObjectType = swift_getObjectType();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 8))(v4, ObjectType, v8);
        swift_unknownObjectRelease();
        sub_24B5DA128((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
      }
      v14[0] = 0;
      swift_retain();
      sub_24B6811C0((uint64_t)v14);
      uint64_t result = swift_release();
      *(unsigned char *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 0;
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 440))(v6);
      if (result)
      {
        uint64_t v11 = v10;
        uint64_t v12 = swift_getObjectType();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 8))(v4, v12, v11);
        swift_unknownObjectRelease();
        return sub_24B5DA128((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
  }
  return result;
}

uint64_t sub_24B5BFE34()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_24B5BFE7C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_numPixelsAccumulated);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_24B5BFEC8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_24B5BFF10(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_numImagesAccumulated);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t sub_24B5BFF5C()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = sub_24B562F04(&qword_2697CC698);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_pgInputReader);
  if (v9)
  {
    uint64_t v10 = *(void (**)(uint64_t))(*(void *)v9 + 160);
    uint64_t v11 = swift_retain();
    v10(v11);
    swift_retain();
    sub_24B682EC0();
    swift_release();
    swift_retain();
    sub_24B682F50();
    swift_release();
    swift_release();
    swift_release_n();
    uint64_t v18 = type metadata accessor for PhotogrammetrySample(0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v8, 1, v18) != 1)
    {
      char v19 = v8[*(int *)(v18 + 56) + 64];
      sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySample);
      char v16 = v19 ^ 1;
      return v16 & 1;
    }
  }
  else
  {
    uint64_t v12 = sub_24B57CBE8();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v2 + 16))(v5, v12, v1);
    uint64_t v13 = sub_24B6824B0();
    os_log_type_t v14 = sub_24B682B20();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl(&dword_24B55E000, v13, v14, "Backend Manager: Tried to check if image url contain area mode data without a valid input reader!", v15, 2u);
      MEMORY[0x24C5D6C00](v15, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  }
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_24B5C02EC()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v63 = *(void *)(v0 - 8);
  uint64_t v64 = v0;
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v60 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v62 = (char *)&v60 - v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v60 - v5;
  uint64_t v6 = sub_24B682410();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6822E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  char v19 = (char *)&v60 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  __int8 v68 = (char *)&v60 - v21;
  MEMORY[0x270FA5388](v20);
  int v23 = (char *)&v60 - v22;
  uint64_t v24 = CPGSessionOptionsCreate();
  uint64_t v25 = CPGSfmOptionsCreate();
  uint64_t v69 = v24;
  if (v24)
  {
    uint64_t v65 = v25;
    uint64_t v26 = v70;
    sub_24B563A6C(v70 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, (uint64_t)v11, &qword_2697CC1F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_24B5632A8((uint64_t)v11, &qword_2697CC1F0);
      id v27 = objc_msgSend(self, sel_defaultManager);
      id v28 = objc_msgSend(v27, sel_temporaryDirectory);

      sub_24B6822B0();
      sub_24B682270();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
      v29(v16, v12);
      sub_24B682400();
      sub_24B6823D0();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v67);
      os_log_type_t v30 = v68;
      sub_24B682270();
      swift_bridgeObjectRelease();
      v29(v19, v12);
      uint64_t v31 = (void *)sub_24B682250();
      int v32 = CPGSessionOptionsSetWorkingDirectory();

      if (v32)
      {
        sub_24B5D7D94();
        uint64_t v71 = swift_allocError();
        *(void *)uint64_t v33 = 0xD00000000000002BLL;
        *(void *)(v33 + 8) = 0x800000024B68DD50;
        *(unsigned char *)(v33 + 16) = 1;
        swift_willThrow();
        v29(v30, v12);
LABEL_32:
        CPGSfmOptionsRelease();
        return CPGSessionOptionsRelease();
      }
      v29(v30, v12);
      uint64_t v26 = v70;
      if (v65)
      {
LABEL_9:
        if (*(unsigned char *)(v26 + OBJC_IVAR____TtC6CoreOC9PGManager_isImageURLFreeformData) == 1)
        {
          CPGMaskingOptionsCreate();
          if (CPGMaskingOptionsSetMaskingType())
          {
            CPGMaskingOptionsRelease();
            uint64_t v38 = sub_24B57CBE8();
            uint64_t v39 = v62;
            (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v38, v64);
            double v40 = sub_24B6824B0();
            os_log_type_t v41 = sub_24B682B20();
            if (os_log_type_enabled(v40, v41))
            {
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              os_log_type_t v43 = "Backend Manager: Failed to set CPG segmentation masking type";
LABEL_21:
              _os_log_impl(&dword_24B55E000, v40, v41, v43, v42, 2u);
              MEMORY[0x24C5D6C00](v42, -1, -1);
              goto LABEL_22;
            }
            goto LABEL_22;
          }
          int v49 = CPGSessionOptionsSetMaskingOptions();
          CPGMaskingOptionsRelease();
          if (v49)
          {
            uint64_t v50 = sub_24B57CBE8();
            uint64_t v39 = v61;
            (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v61, v50, v64);
            double v40 = sub_24B6824B0();
            os_log_type_t v41 = sub_24B682B20();
            if (os_log_type_enabled(v40, v41))
            {
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              os_log_type_t v43 = "Backend Manager: Failed to set CPG segmentation masking option to session option";
              goto LABEL_21;
            }
LABEL_22:

            (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v64);
            goto LABEL_32;
          }
        }
        uint64_t v51 = v71;
        sub_24B5D7ABC();
        uint64_t v71 = v51;
        if (v51) {
          goto LABEL_32;
        }
        CPGSfmOptionsSetPoseUpdateCallback();
        if (*(unsigned char *)sub_24B567D18()) {
          CPGSfmOptionsSetTrackUpdateCallback();
        }
        if (CPGSessionOptionsSetSfmOptions())
        {
          sub_24B5D7D94();
          uint64_t v52 = swift_allocError();
          *(void *)uint64_t v53 = 0xD000000000000026;
          *(void *)(v53 + 8) = 0x800000024B68DDA0;
          char v54 = 1;
        }
        else
        {
          swift_beginAccess();
          int v55 = CPGSessionCreate();
          swift_endAccess();
          if (!v55)
          {
            uint64_t v57 = v71;
            sub_24B5C1B08();
            uint64_t v71 = v57;
            if (!v57)
            {
              uint64_t v58 = sub_24B57CBE8();
              uint64_t v59 = v60;
              (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v60, v58, v64);
              double v40 = sub_24B6824B0();
              os_log_type_t v41 = sub_24B682B30();
              if (!os_log_type_enabled(v40, v41))
              {
                uint64_t v39 = v59;
                goto LABEL_22;
              }
              uint64_t v39 = v59;
              uint64_t v42 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v42 = 0;
              os_log_type_t v43 = "Successfully initialized the backend session.";
              goto LABEL_21;
            }
            CPGSessionRelease();
LABEL_31:
            swift_willThrow();
            goto LABEL_32;
          }
          sub_24B5D7D94();
          uint64_t v52 = swift_allocError();
          *(void *)uint64_t v53 = 0xD000000000000018;
          *(void *)(v53 + 8) = 0x800000024B68DDD0;
          char v54 = 3;
        }
        *(unsigned char *)(v53 + 16) = v54;
        uint64_t v71 = v52;
        goto LABEL_31;
      }
LABEL_17:
      sub_24B5D7D94();
      uint64_t v47 = swift_allocError();
      *(void *)uint64_t v48 = 0xD00000000000001ALL;
      *(void *)(v48 + 8) = 0x800000024B68DD80;
      *(unsigned char *)(v48 + 16) = 2;
      uint64_t v71 = v47;
      swift_willThrow();
      goto LABEL_32;
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v11, v12);
    if (CPGSessionOptionsSetSnapshotEnabled())
    {
      sub_24B5D7D94();
      uint64_t v36 = swift_allocError();
      *(void *)uint64_t v37 = 0xD00000000000002ALL;
      *(void *)(v37 + 8) = 0x800000024B68DDF0;
      *(unsigned char *)(v37 + 16) = 1;
    }
    else
    {
      uint64_t v44 = (void *)sub_24B682250();
      int v45 = CPGSessionOptionsSetWorkingDirectory();

      if (!v45)
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
        if (v65) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      sub_24B5D7D94();
      uint64_t v36 = swift_allocError();
      *(void *)uint64_t v46 = 0xD00000000000002BLL;
      *(void *)(v46 + 8) = 0x800000024B68DD50;
      *(unsigned char *)(v46 + 16) = 1;
    }
    uint64_t v71 = v36;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v23, v12);
    goto LABEL_32;
  }
  sub_24B5D7D94();
  uint64_t v34 = swift_allocError();
  *(void *)uint64_t v35 = 0xD00000000000001ELL;
  *(void *)(v35 + 8) = 0x800000024B68DD10;
  *(unsigned char *)(v35 + 16) = 1;
  uint64_t v71 = v34;
  swift_willThrow();
  CPGSfmOptionsRelease();
  return CPGSessionOptionsRelease();
}

uint64_t sub_24B5C0CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3)
  {
    uint64_t v11 = CPGUpdatedPosesCopySampleIDs();
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v23 = 0;
      sub_24B682990();

      uint64_t v13 = v23;
      if (v23)
      {
        if (*(void *)(v23 + 16))
        {
          uint64_t v14 = sub_24B57CBE8();
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v6);
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_24B6824B0();
          os_log_type_t v16 = sub_24B682B30();
          int v17 = v16;
          if (os_log_type_enabled(v15, v16))
          {
            uint64_t v18 = (uint8_t *)swift_slowAlloc();
            int v22 = v17;
            char v19 = v18;
            *(_DWORD *)uint64_t v18 = 134349056;
            v21[0] = *(void *)(v13 + 16);
            v21[1] = v18 + 4;
            swift_bridgeObjectRelease();
            uint64_t v23 = v21[0];
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24B55E000, v15, (os_log_type_t)v22, "Processing pose update callback for %{public}ld samples", v19, 0xCu);
            MEMORY[0x24C5D6C00](v19, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)a3 + 1696);
    swift_retain();
    v20(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5C0F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3)
  {
    uint64_t v11 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
    uint64_t v12 = sub_24B6824B0();
    os_log_type_t v13 = sub_24B682B30();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_24B55E000, v12, v13, "Received mobile sfm world tracks.", v14, 2u);
      MEMORY[0x24C5D6C00](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)a3 + 1704);
    swift_retain();
    v15(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5C112C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24B6824D0();
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v43 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24B6822E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v37[-v13];
  sub_24B563A6C(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_snapshotURL, (uint64_t)v7, &qword_2697CC1F0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24B5632A8((uint64_t)v7, &qword_2697CC1F0);
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000039;
    *(void *)(v15 + 8) = 0x800000024B68DBF0;
    *(unsigned char *)(v15 + 16) = 3;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v14, v7, v8);
    uint64_t v17 = CPGSessionResumeOptionsCreate();
    if (v17)
    {
      uint64_t v41 = v3;
      uint64_t v42 = v14;
      uint64_t v18 = v17;
      char v19 = (void *)sub_24B682250();
      swift_beginAccess();
      int v20 = CPGSessionCreateWithSnapshotURL();
      swift_endAccess();

      if (v20)
      {
        sub_24B5D7D94();
        swift_allocError();
        *(void *)uint64_t v21 = 0xD000000000000027;
        *(void *)(v21 + 8) = 0x800000024B68DC60;
        *(unsigned char *)(v21 + 16) = 3;
        swift_willThrow();
        CPGSessionResumeOptionsRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v42, v8);
      }
      else
      {
        uint64_t v23 = v42;
        uint64_t v40 = v18;
        sub_24B5C1B08();
        if (v1)
        {
          CPGSessionRelease();
          swift_willThrow();
          CPGSessionResumeOptionsRelease();
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v23, v8);
        }
        else
        {
          *(unsigned char *)(v2 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
          uint64_t v24 = sub_24B57CBE8();
          uint64_t v26 = v43;
          uint64_t v25 = v44;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v44 + 16))(v43, v24, v41);
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v23, v8);
          id v27 = sub_24B6824B0();
          os_log_type_t v28 = sub_24B682B30();
          int v29 = v28;
          os_log_type_t v30 = v27;
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v31 = swift_slowAlloc();
            uint64_t v39 = swift_slowAlloc();
            v45[0] = v39;
            *(_DWORD *)uint64_t v31 = 141558275;
            uint64_t v46 = 1752392040;
            int v38 = v29;
            sub_24B682CD0();
            *(_WORD *)(v31 + 12) = 2081;
            uint64_t v32 = sub_24B6822D0();
            uint64_t v46 = sub_24B5627B8(v32, v33, v45);
            sub_24B682CD0();
            swift_bridgeObjectRelease();
            uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
            v34(v12, v8);
            uint64_t v35 = v30;
            _os_log_impl(&dword_24B55E000, v30, (os_log_type_t)v38, "Successfully initialized backend session with snapshot = %{private,mask.hash}s", (uint8_t *)v31, 0x16u);
            uint64_t v36 = v39;
            swift_arrayDestroy();
            MEMORY[0x24C5D6C00](v36, -1, -1);
            MEMORY[0x24C5D6C00](v31, -1, -1);

            (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v43, v41);
          }
          else
          {
            uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
            v34(v12, v8);

            (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v26, v41);
          }
          CPGSessionResumeOptionsRelease();
          return ((uint64_t (*)(unsigned char *, uint64_t))v34)(v42, v8);
        }
      }
    }
    else
    {
      sub_24B5D7D94();
      swift_allocError();
      *(void *)uint64_t v22 = 0xD000000000000025;
      *(void *)(v22 + 8) = 0x800000024B68DC30;
      *(unsigned char *)(v22 + 16) = 1;
      swift_willThrow();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
}

uint64_t sub_24B5C171C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle) = CPGAddSampleCallbackBundleCreate();
  if (CPGAddSampleCallbackBundleSetStreamProcessingCallback())
  {
    CPGAddSampleCallbackBundleRelease();
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000003CLL;
    *(void *)(v6 + 8) = 0x800000024B68DCD0;
    *(unsigned char *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  else
  {
    uint64_t v8 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Successfully set the add sample callback bundle.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_24B5C1904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a3 && a4)
  {
    uint64_t v13 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
    uint64_t v14 = sub_24B6824B0();
    os_log_type_t v15 = sub_24B682B30();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 134349056;
      v18[1] = a2;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v14, v15, "Add sample stream processing callback for id = %{public}llu", v16, 0xCu);
      MEMORY[0x24C5D6C00](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a4 + 1632);
    swift_retain();
    v17(a1, a2, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5C1B08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle) = CPGProcessingCallbackBundleCreate();
  if (CPGProcessingCallbackBundleSetCompleteOutputCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000003CLL;
    uint64_t v7 = "CPGProcessingCallbackBundleSetCompleteOutputCallback failed!";
LABEL_7:
    *(void *)(v6 + 8) = (unint64_t)(v7 - 32) | 0x8000000000000000;
    *(unsigned char *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  if (CPGProcessingCallbackBundleSetProgressCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000036;
    uint64_t v7 = "CPGProcessingCallbackBundleSetProgressCallback failed!";
    goto LABEL_7;
  }
  if (CPGProcessingCallbackBundleSetWarningCallback())
  {
    CPGProcessingCallbackBundleRelease();
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000034;
    uint64_t v7 = "CPGProcessingCallbackBundleSetWarningCallback failed";
    goto LABEL_7;
  }
  uint64_t v9 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  os_log_type_t v10 = sub_24B6824B0();
  os_log_type_t v11 = sub_24B682B30();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_24B55E000, v10, v11, "Successfully set callback bundle.", v12, 2u);
    MEMORY[0x24C5D6C00](v12, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24B5C1DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v51 = a2;
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v15 = (char *)v43 - v14;
  uint64_t v16 = sub_24B6822E0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  char v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v23 = (char *)v43 - v22;
  if (a1 && v51 && a3 && v50)
  {
    uint64_t v49 = v21;
    if (CPGOutputGetFailure())
    {
LABEL_11:
      uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v50 + 1680);
      swift_retain();
      v25(a1, v51, a3);
      return swift_release();
    }
    uint64_t v46 = a3;
    ModelURL = (void *)CPGOutputGetModelURL();
    uint64_t v47 = *(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
    uint64_t v48 = v49 + 56;
    if (ModelURL
      && (int v45 = ModelURL,
          v47(v13, 1, 1, v16),
          sub_24B5DA358(&qword_2697CC6A8, MEMORY[0x263F06EA8]),
          sub_24B682F70(),
          v45,
          int v45 = *(NSObject **)(v49 + 48),
          ((unsigned int (*)(char *, uint64_t, uint64_t))v45)(v13, 1, v16) != 1))
    {
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      id v27 = v13;
      uint64_t v44 = v49 + 32;
      os_log_type_t v28 = v26;
      v26(v15, v27, v16);
      v47(v15, 0, 1, v16);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v45)(v15, 1, v16) != 1)
      {
        v28(v23, v15, v16);
        uint64_t v29 = sub_24B57CBE8();
        uint64_t v30 = v7;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v29, v6);
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v19, v23, v16);
        uint64_t v31 = sub_24B6824B0();
        os_log_type_t v32 = sub_24B682B30();
        int v33 = v32;
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v34 = swift_slowAlloc();
          int v45 = v31;
          uint64_t v35 = v49;
          uint64_t v36 = v34;
          uint64_t v37 = swift_slowAlloc();
          uint64_t v47 = (void (*)(char *, void, uint64_t, uint64_t))v37;
          *(_DWORD *)uint64_t v36 = 141558275;
          uint64_t v52 = 1752392040;
          uint64_t v53 = v37;
          uint64_t v48 = v30;
          sub_24B682CD0();
          *(_WORD *)(v36 + 12) = 2081;
          v43[1] = v36 + 14;
          LODWORD(v44) = v33;
          uint64_t v38 = sub_24B6822D0();
          uint64_t v52 = sub_24B5627B8(v38, v39, &v53);
          sub_24B682CD0();
          swift_bridgeObjectRelease();
          uint64_t v40 = *(void (**)(char *, uint64_t))(v35 + 8);
          v40(v19, v16);
          uint64_t v41 = v45;
          _os_log_impl(&dword_24B55E000, v45, (os_log_type_t)v44, "Processing output callback at url = %{private,mask.hash}s", (uint8_t *)v36, 0x16u);
          uint64_t v42 = (void (*)(void, void, void, void))v47;
          swift_arrayDestroy();
          MEMORY[0x24C5D6C00](v42, -1, -1);
          MEMORY[0x24C5D6C00](v36, -1, -1);

          (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v6);
        }
        else
        {

          uint64_t v40 = *(void (**)(char *, uint64_t))(v49 + 8);
          v40(v19, v16);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
        }
        v40(v23, v16);
        goto LABEL_10;
      }
    }
    else
    {
      v47(v15, 1, 1, v16);
    }
    sub_24B5632A8((uint64_t)v15, &qword_2697CC1F0);
LABEL_10:
    a3 = v46;
    goto LABEL_11;
  }
  return result;
}

void *sub_24B5C238C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (void *)MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a2 && a3 && a4)
  {
    CPGProgressGetFractionCompleted();
    float v14 = v13;
    uint64_t result = (void *)CPGProgressGetMessage();
    if (result)
    {
      id v15 = result;
      uint64_t v16 = sub_24B6827D0();
      unint64_t v18 = v17;

      uint64_t v19 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v19, v8);
      swift_bridgeObjectRetain();
      int v20 = sub_24B6824B0();
      os_log_type_t v21 = sub_24B682B30();
      int v31 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v28 = v16;
        uint64_t v23 = v22;
        uint64_t v30 = swift_slowAlloc();
        uint64_t v33 = v30;
        *(_DWORD *)uint64_t v23 = 134349314;
        double v32 = v14;
        os_log_t v29 = v20;
        sub_24B682CD0();
        *(_WORD *)(v23 + 12) = 2082;
        v27[1] = v23 + 14;
        swift_bridgeObjectRetain();
        double v32 = COERCE_DOUBLE(sub_24B5627B8(v28, v18, &v33));
        sub_24B682CD0();
        swift_bridgeObjectRelease_n();
        os_log_t v24 = v29;
        _os_log_impl(&dword_24B55E000, v29, (os_log_type_t)v31, "Processing progress callback with fraction completed = %{public}f, message = %{public}s", (uint8_t *)v23, 0x16u);
        uint64_t v25 = v30;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v25, -1, -1);
        MEMORY[0x24C5D6C00](v23, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a4 + 1640);
      swift_retain();
      v26(a1, a2, a3);
      return (void *)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24B5C2684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24B5D8AE8(a3);
}

uint64_t sub_24B5C268C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle) = CPGFinalizeInputCallbackBundleCreate();
  if (CPGFinalizeInputCallbackBundleSetCompletionCallback())
  {
    CPGFinalizeInputCallbackBundleRelease();
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD00000000000003BLL;
    *(void *)(v6 + 8) = 0x800000024B68DC90;
    *(unsigned char *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  else
  {
    uint64_t v8 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Successfully set finalizing input callback bundle.", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_24B5C2874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  os_log_type_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  float v13 = (char *)&v25 - v12;
  if (a1 && a2 && a3)
  {
    uint64_t v28 = a2;
    uint64_t v14 = sub_24B57CBE8();
    uint64_t v26 = *(void (**)(char *))(v7 + 16);
    uint64_t v27 = v14;
    v26(v13);
    id v15 = sub_24B6824B0();
    os_log_type_t v16 = sub_24B682B30();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v17 = 0;
      _os_log_impl(&dword_24B55E000, v15, v16, "Finalize input C-callback", v17, 2u);
      MEMORY[0x24C5D6C00](v17, -1, -1);
    }

    unint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v13, v6);
    uint64_t v19 = v28;
    if (CPGFinalizeInputResultGetErrorCode())
    {
      ((void (*)(char *, uint64_t, uint64_t))v26)(v10, v27, v6);
      int v20 = sub_24B6824B0();
      os_log_type_t v21 = sub_24B682B20();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_24B55E000, v20, v21, "Error in finalizing input result!", v22, 2u);
        uint64_t v23 = v22;
        uint64_t v19 = v28;
        MEMORY[0x24C5D6C00](v23, -1, -1);
      }

      v18(v10, v6);
    }
    os_log_t v24 = *(void (**)(uint64_t, uint64_t))(*(void *)a3 + 1720);
    swift_retain();
    v24(a1, v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5C2B14(uint64_t a1)
{
  uint64_t v3 = sub_24B6824D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = sub_24B5B2D94(a1);
  uint64_t v10 = v9[2];
  if (v10)
  {
    uint64_t v37 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_session;
    swift_beginAccess();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v32 = v4;
    uint64_t v35 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v34 = v8;
    while (1)
    {
      uint64_t result = CPGSessionAddTemporalDepthPointFrame();
      if (result)
      {
        BOOL v15 = __OFADD__(v11++, 1);
        if (v15)
        {
          __break(1u);
          return result;
        }
        uint64_t v16 = sub_24B57CBE8();
        (*v36)(v8, v16, v3);
        unint64_t v17 = sub_24B6824B0();
        os_log_type_t v18 = sub_24B682B20();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = v12;
          uint64_t v20 = v10;
          os_log_type_t v21 = v9;
          uint64_t v22 = v3;
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl(&dword_24B55E000, v17, v18, "Failed to add temporal LiDAR point frame.", v23, 2u);
          os_log_t v24 = v23;
          uint64_t v3 = v22;
          uint64_t v9 = v21;
          uint64_t v10 = v20;
          uint64_t v12 = v19;
          uint64_t v8 = v34;
          MEMORY[0x24C5D6C00](v24, -1, -1);
        }

        (*v35)(v8, v3);
      }
      else
      {
        BOOL v15 = __OFADD__(v12++, 1);
        if (v15)
        {
          __break(1u);
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v4 = v32;
          goto LABEL_14;
        }
      }
      ++v13;
      CPGTemporalDepthPointFrameRelease();
      if (v10 == v13) {
        goto LABEL_12;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
LABEL_14:
  uint64_t v25 = v33;
  uint64_t v26 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v25, v26, v3);
  uint64_t v27 = sub_24B6824B0();
  os_log_type_t v28 = sub_24B682B30();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = v3;
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134349312;
    uint64_t v38 = v12;
    sub_24B682CD0();
    *(_WORD *)(v30 + 12) = 2050;
    uint64_t v38 = v11;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v27, v28, "Passed %{public}ld temporal LiDAR point frames to backend session, failed for %{public}ld frames.", (uint8_t *)v30, 0x16u);
    uint64_t v31 = v30;
    uint64_t v3 = v29;
    MEMORY[0x24C5D6C00](v31, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v25, v3);
}

uint64_t sub_24B5C2E90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B682640();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  unsigned char v14[2] = v13;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_24B5DA67C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8DD88;
  BOOL v15 = _Block_copy(aBlock);
  id v16 = v12;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24B6825F0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5C319C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v77 = a3;
  uint64_t v79 = a2;
  uint64_t v84 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v84);
  uint64_t v4 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6822E0();
  uint64_t v78 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B6824D0();
  uint64_t v85 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v73 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v73 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v73 - v21;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD000000000000023, 0x800000024B68DA50);
  }
  uint64_t v24 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v25 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v14, v25, v11);
    uint64_t v26 = sub_24B6824B0();
    os_log_type_t v27 = sub_24B682B20();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v28 = 0;
      _os_log_impl(&dword_24B55E000, v26, v27, "Can't add new samples. Backend manager is closed", v28, 2u);
      MEMORY[0x24C5D6C00](v28, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v14, v11);
  }
  else
  {
    char v30 = *(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted);
    uint64_t v31 = sub_24B57CBE8();
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
    if (v30)
    {
      v32(v17, v31, v11);
      uint64_t v33 = sub_24B6824B0();
      os_log_type_t v34 = sub_24B682B30();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_24B55E000, v33, v34, "Process has started, ignore new samples.", v35, 2u);
        MEMORY[0x24C5D6C00](v35, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v17, v11);
    }
    else
    {
      uint64_t v82 = v85 + 16;
      uint64_t v83 = v31;
      uint64_t v81 = v32;
      ((void (*)(char *))v32)(v22);
      uint64_t v36 = sub_24B6824B0();
      os_log_type_t v37 = sub_24B682B30();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        os_log_t v80 = v36;
        unint64_t v39 = v38;
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_24B55E000, v80, v37, "Reconstruct from images url. The images url should be not nil.", v38, 2u);
        uint64_t v40 = v39;
        uint64_t v36 = v80;
        MEMORY[0x24C5D6C00](v40, -1, -1);
      }

      uint64_t v41 = *(NSObject **)(v85 + 8);
      v85 += 8;
      os_log_t v80 = v41;
      ((void (*)(char *, uint64_t))v41)(v22, v11);
      uint64_t v42 = v24 + OBJC_IVAR____TtC6CoreOC9PGManager_imagesURL;
      swift_beginAccess();
      sub_24B563A6C(v42, (uint64_t)v7, &qword_2697CC1F0);
      uint64_t v43 = v78;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v7, 1, v8) == 1)
      {
        uint64_t v44 = sub_24B5632A8((uint64_t)v7, &qword_2697CC1F0);
        uint64_t v45 = 0;
        int v46 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v10, v7, v8);
        uint64_t v45 = sub_24B5D7424();
        int v46 = v47 & 1;
        uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v8);
      }
      uint64_t v48 = v79;
      uint64_t v49 = (*(uint64_t (**)(uint64_t))(*(void *)v79 + 160))(v44);
      uint64_t v50 = *(void *)(v24 + OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter);
      uint64_t v51 = *(void *)v48;
      uint64_t v78 = v45;
      uint64_t v52 = *(uint64_t (**)(uint64_t))(v51 + 184);
      LODWORD(v76) = v46;
      uint64_t v53 = v49;
      uint64_t v54 = swift_retain();
      char v55 = v52(v54);
      (*(void (**)(void))(*(void *)v50 + 120))(v55 & 1);
      uint64_t v56 = swift_release();
      uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 128))(v56);
      uint64_t v73 = v53;
      uint64_t v58 = sub_24B5C3E08(v53, v77, v57, 0, v78, v76);
      uint64_t v74 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 176))(v58);
      uint64_t v60 = *(void *)(v74 + 16);
      if (v60)
      {
        uint64_t v61 = (uint64_t *)(v74 + 32);
        uint64_t v62 = *(uint64_t (**)(void))(*(void *)v24 + 440);
        uint64_t v78 = *(void *)v24 + 440;
        uint64_t v79 = v62;
        *(void *)&long long v59 = 134349056;
        long long v75 = v59;
        unint64_t v76 = 0x800000024B68DA80;
        uint64_t v77 = 0xD00000000000004ELL;
        do
        {
          uint64_t v64 = *v61++;
          uint64_t v63 = v64;
          v81(v20, v83, v11);
          uint64_t v65 = sub_24B6824B0();
          os_log_type_t v66 = sub_24B682B30();
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v67 = swift_slowAlloc();
            *(_DWORD *)uint64_t v67 = v75;
            *(void *)(v67 + 4) = v63;
            _os_log_impl(&dword_24B55E000, v65, v66, "invalidSample: id = %{public}ld", (uint8_t *)v67, 0xCu);
            MEMORY[0x24C5D6C00](v67, -1, -1);
          }

          uint64_t v68 = ((uint64_t (*)(char *, uint64_t))v80)(v20, v11);
          if (v79(v68))
          {
            uint64_t v70 = v69;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v72 = v77;
            *uint64_t v4 = v63;
            v4[1] = v72;
            CVPixelBufferRef v4[2] = v76;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, uint64_t, uint64_t))(v70 + 8))(v4, ObjectType, v70);
            swift_unknownObjectRelease();
            sub_24B5DA128((uint64_t)v4, type metadata accessor for PhotogrammetrySession.Output);
          }
          --v60;
        }
        while (v60);
      }
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
}

uint64_t sub_24B5C3A28(uint64_t a1, char a2, float a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&ObjectType - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04(&qword_2697CC5D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&ObjectType - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v4 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_24B563A6C(v17, (uint64_t)v12, &qword_2697CC5D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_24B5632A8((uint64_t)v12, &qword_2697CC5D0);
  }
  char v19 = a2 & 1;
  uint64_t v20 = sub_24B5D9EF8((uint64_t)v12, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)v4 + 440);
  if (v21(v20))
  {
    uint64_t v23 = v22;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = *(int *)(sub_24B562F04(&qword_2697CC648) + 48);
    sub_24B5D9F60((uint64_t)v16, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Request);
    *(double *)&v9[v24] = a3;
    char v19 = a2 & 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 8))(v9, ObjectType, v23);
    swift_unknownObjectRelease();
    sub_24B5DA128((uint64_t)v9, type metadata accessor for PhotogrammetrySession.Output);
  }
  char v35 = 0;
  uint64_t v25 = sub_24B600BFC(v34, v19, &v35, (uint64_t)&v36);
  uint64_t v26 = v36;
  char v27 = v37;
  char v28 = v38;
  if (v21(v25))
  {
    uint64_t v30 = v29;
    uint64_t v31 = swift_getObjectType();
    uint64_t v32 = &v9[*(int *)(sub_24B562F04(&qword_2697CC650) + 48)];
    sub_24B5D9F60((uint64_t)v16, (uint64_t)v9, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v32 = v26;
    v32[8] = v27;
    v32[9] = v28;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 8))(v9, v31, v30);
    swift_unknownObjectRelease();
    sub_24B5DA128((uint64_t)v9, type metadata accessor for PhotogrammetrySession.Output);
  }
  return sub_24B5DA128((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
}

uint64_t sub_24B5C3E08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v7 = v6;
  LODWORD(v198) = a6;
  uint64_t v171 = a5;
  int v183 = a4;
  uint64_t v162 = a3;
  uint64_t v199 = a1;
  uint64_t v9 = sub_24B6824D0();
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v195 = v9;
  float32x4_t v196 = (void (*)(char *, uint64_t, uint64_t))v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v188 = (char *)&v154 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v180 = (char *)&v154 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v178 = (char *)&v154 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v190 = (char *)&v154 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v167 = (char *)&v154 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v164 = (char *)&v154 - v21;
  uint64_t v186 = type metadata accessor for PhotogrammetrySample(0);
  uint64_t v191 = *(void *)(v186 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v186);
  uint64_t v169 = (unint64_t *)((char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  float32x4_t v163 = (unint64_t *)((char *)&v154 - v25);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v156 = (unint64_t *)((char *)&v154 - v27);
  MEMORY[0x270FA5388](v26);
  uint64_t v187 = (char **)((char *)&v154 - v28);
  uint64_t v29 = sub_24B562F04(&qword_2697CC698);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v185 = (char *)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v172);
  uint64_t v173 = (char **)((char *)&v154 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  char v35 = (char *)&v154 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v37 = MEMORY[0x270FA5388](v36 - 8);
  uint64_t v161 = (uint64_t)&v154 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v154 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v154 - v43;
  MEMORY[0x270FA5388](v42);
  int v46 = (char *)&v154 - v45;
  uint64_t v181 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  LOBYTE(v203) = 0;
  swift_retain();
  sub_24B6811C0((uint64_t)&v203);
  uint64_t result = swift_release();
  uint64_t v48 = *(void *)(a2 + 16);
  if (!v48) {
    goto LABEL_72;
  }
  uint64_t result = sub_24B5C5FF8(&v203, a2);
  if (*(void *)(result + 16) == v48)
  {
    int v170 = v198 & 1;
    sub_24B5D9F60(result + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), (uint64_t)v46, type metadata accessor for PhotogrammetrySession.Request);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v32);
    sub_24B56CF38((uint64_t)v46, (uint64_t)v44, &qword_2697CC5D0);
    uint64_t v49 = v6 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
    swift_beginAccess();
    sub_24B56C254((uint64_t)v44, v49, &qword_2697CC5D0);
    swift_endAccess();
    uint64_t v158 = v49;
    sub_24B563A6C(v49, (uint64_t)v41, &qword_2697CC5D0);
    uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    uint64_t v160 = v32;
    uint64_t v159 = v33 + 48;
    uint64_t v157 = v50;
    int v51 = v50((uint64_t)v41, 1, v32);
    uint64_t v184 = v6;
    if (v51 == 1)
    {
      sub_24B5632A8((uint64_t)v41, &qword_2697CC5D0);
    }
    else
    {
      uint64_t v52 = sub_24B5D9EF8((uint64_t)v41, (uint64_t)v35, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v53 = *(uint64_t (**)(uint64_t))(*(void *)v6 + 440);
      if (v53(v52))
      {
        uint64_t v55 = v54;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v57 = *(int *)(sub_24B562F04(&qword_2697CC648) + 48);
        uint64_t v58 = v173;
        sub_24B5D9F60((uint64_t)v35, (uint64_t)v173, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)((char *)v58 + v57) = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, uint64_t, uint64_t))(v55 + 8))(v58, ObjectType, v55);
        swift_unknownObjectRelease();
        sub_24B5DA128((uint64_t)v58, type metadata accessor for PhotogrammetrySession.Output);
      }
      LOBYTE(v201) = 0;
      uint64_t v59 = sub_24B600BFC(v171, v170, (char *)&v201, (uint64_t)&v203);
      uint64_t v60 = v203;
      char v61 = v204;
      char v62 = BYTE1(v204);
      if (v53(v59))
      {
        uint64_t v64 = v63;
        uint64_t v65 = swift_getObjectType();
        uint64_t v66 = sub_24B562F04(&qword_2697CC650);
        uint64_t v67 = v173;
        uint64_t v68 = (char *)v173 + *(int *)(v66 + 48);
        sub_24B5D9F60((uint64_t)v35, (uint64_t)v173, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)uint64_t v68 = v60;
        v68[8] = v61;
        v68[9] = v62;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, uint64_t, uint64_t))(v64 + 8))(v67, v65, v64);
        swift_unknownObjectRelease();
        sub_24B5DA128((uint64_t)v67, type metadata accessor for PhotogrammetrySession.Output);
      }
      sub_24B5DA128((uint64_t)v35, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v7 = v184;
    }
    uint64_t v69 = v187;
    sub_24B5F66AC(&v203);
    int64_t v182 = v204;
    swift_retain();
    uint64_t v70 = sub_24B682EC0();
    swift_release();
    uint64_t v179 = OBJC_IVAR____TtC6CoreOC9PGManager_segmentIDConverter;
    uint64_t v71 = OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
    uint64_t v72 = v7 + OBJC_IVAR____TtC6CoreOC9PGManager_session;
    swift_retain();
    uint64_t v199 = v72;
    swift_beginAccess();
    uint64_t v73 = (uint64_t)v185;
    sub_24B682F50();
    uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
    v191 += 48;
    int v177 = v74;
    int v75 = v74(v73, 1, v186);
    uint64_t v77 = 0;
    uint64_t v78 = v188;
    if (v75 == 1)
    {
LABEL_11:
      swift_release_n();
    }
    else
    {
      uint64_t v77 = 0;
      int64_t v189 = 0;
      uint64_t v194 = 0;
      uint64_t v176 = v7 + v71;
      uint64_t v86 = v162;
      if (v182 < v162) {
        uint64_t v86 = v182;
      }
      float32x4_t v197 = (void (**)(char *, uint64_t, uint64_t))((char *)v196 + 16);
      __int8 v175 = &v202;
      float32x4_t v198 = (void (**)(char *, uint64_t))((char *)v196 + 8);
      uint64_t v154 = (char *)&v201 + 4;
      float v87 = (float)v86;
      *(void *)&long long v76 = 134349056;
      long long v166 = v76;
      unint64_t v155 = 0x800000024B68D2F0;
      *(void *)&long long v76 = 134349312;
      long long v168 = v76;
      unint64_t v165 = 0x800000024B68D2D0;
      uint64_t v174 = v70;
      while (1)
      {
        sub_24B5D9EF8(v73, (uint64_t)v69, type metadata accessor for PhotogrammetrySample);
        swift_retain();
        sub_24B6810B0();
        swift_release();
        if (v201)
        {
          sub_24B5DA128((uint64_t)v69, type metadata accessor for PhotogrammetrySample);
          return swift_release_n();
        }
        if (v189 >= v182) {
          break;
        }
        unint64_t v89 = v194;
        sub_24B5B0F0C((uint64_t)v69, *(NSObject **)(v7 + v179), *(unsigned __int8 *)(v176 + 24));
        uint64_t v90 = v195;
        uint64_t v193 = v77;
        if (v89)
        {

          if ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 440))(v91))
          {
            uint64_t v93 = v92;
            uint64_t v94 = swift_getObjectType();
            uint64_t v95 = v173;
            *uint64_t v173 = *v69;
            v95[1] = 0xD00000000000001CLL;
            v95[2] = v165;
            swift_storeEnumTagMultiPayload();
            uint64_t v96 = v94;
            uint64_t v90 = v195;
            (*(void (**)(void *, uint64_t, uint64_t))(v93 + 8))(v95, v96, v93);
            swift_unknownObjectRelease();
            sub_24B5DA128((uint64_t)v95, type metadata accessor for PhotogrammetrySession.Output);
          }
          uint64_t v97 = sub_24B57CBE8();
          float32x4_t v196 = *v197;
          v196(v190, v97, v90);
          uint64_t v98 = v169;
          sub_24B5D9F60((uint64_t)v69, (uint64_t)v169, type metadata accessor for PhotogrammetrySample);
          uint64_t v99 = sub_24B6824B0();
          os_log_type_t v100 = sub_24B682B20();
          if (os_log_type_enabled(v99, v100))
          {
            uint64_t v101 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v101 = v166;
            unint64_t v102 = *v98;
            sub_24B5DA128((uint64_t)v98, type metadata accessor for PhotogrammetrySample);
            unint64_t v201 = v102;
            sub_24B682CD0();
            _os_log_impl(&dword_24B55E000, v99, v100, "Failed to convert sample of id = %{public}ld to internal sample type!", v101, 0xCu);
            uint64_t v103 = v101;
            uint64_t v90 = v195;
            MEMORY[0x24C5D6C00](v103, -1, -1);
          }
          else
          {
            sub_24B5DA128((uint64_t)v98, type metadata accessor for PhotogrammetrySample);
          }
          uint64_t v114 = v180;

          uint64_t v115 = *v198;
          (*v198)(v190, v90);
          uint64_t v194 = 0;
        }
        else
        {
          int v104 = CPGSessionAddSample();
          uint64_t v194 = 0;
          if (v104)
          {
            int v105 = v104;
            unint64_t v201 = 0;
            unint64_t v202 = 0xE000000000000000;
            sub_24B682E40();
            swift_bridgeObjectRelease();
            unint64_t v201 = 0xD00000000000002FLL;
            unint64_t v202 = v155;
            int v200 = v105;
            sub_24B682F90();
            sub_24B682890();
            uint64_t v106 = swift_bridgeObjectRelease();
            unint64_t v107 = v201;
            unint64_t v108 = v202;
            if ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 440))(v106))
            {
              uint64_t v110 = v109;
              uint64_t v111 = swift_getObjectType();
              uint64_t v112 = v173;
              *uint64_t v173 = *v69;
              v112[1] = v107;
              v112[2] = v108;
              swift_storeEnumTagMultiPayload();
              uint64_t v113 = v111;
              uint64_t v90 = v195;
              (*(void (**)(void *, uint64_t, uint64_t))(v110 + 8))(v112, v113, v110);
              swift_unknownObjectRelease();
              sub_24B5DA128((uint64_t)v112, type metadata accessor for PhotogrammetrySession.Output);
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            unint64_t v122 = v163;
            uint64_t v123 = sub_24B57CBE8();
            float32x4_t v196 = *v197;
            v196(v167, v123, v90);
            sub_24B5D9F60((uint64_t)v69, (uint64_t)v122, type metadata accessor for PhotogrammetrySample);
            uint64_t v124 = sub_24B6824B0();
            os_log_type_t v125 = sub_24B682B20();
            if (os_log_type_enabled(v124, v125))
            {
              uint64_t v126 = swift_slowAlloc();
              *(_DWORD *)uint64_t v126 = v168;
              unint64_t v127 = *v122;
              sub_24B5DA128((uint64_t)v122, type metadata accessor for PhotogrammetrySample);
              unint64_t v201 = v127;
              sub_24B682CD0();
              *(_WORD *)(v126 + 12) = 1026;
              LODWORD(v201) = v105;
              sub_24B682CD0();
              _os_log_impl(&dword_24B55E000, v124, v125, "Failed to add sample of id = %{public}ld, with error code = %{public}d", (uint8_t *)v126, 0x12u);
              uint64_t v128 = v126;
              uint64_t v90 = v195;
              MEMORY[0x24C5D6C00](v128, -1, -1);
            }
            else
            {
              sub_24B5DA128((uint64_t)v122, type metadata accessor for PhotogrammetrySample);
            }
            uint64_t v114 = v180;

            uint64_t v115 = *v198;
            (*v198)(v167, v90);
          }
          else
          {
            uint64_t v116 = sub_24B57CBE8();
            float32x4_t v196 = *v197;
            v196(v164, v116, v90);
            double v117 = v156;
            sub_24B5D9F60((uint64_t)v69, (uint64_t)v156, type metadata accessor for PhotogrammetrySample);
            uint64_t v118 = sub_24B6824B0();
            os_log_type_t v119 = sub_24B682B30();
            if (os_log_type_enabled(v118, v119))
            {
              uint64_t v120 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v120 = v166;
              unint64_t v121 = *v117;
              sub_24B5DA128((uint64_t)v117, type metadata accessor for PhotogrammetrySample);
              unint64_t v201 = v121;
              uint64_t v90 = v195;
              sub_24B682CD0();
              _os_log_impl(&dword_24B55E000, v118, v119, "Added sample of id = %{public}ld", v120, 0xCu);
              MEMORY[0x24C5D6C00](v120, -1, -1);
            }
            else
            {
              sub_24B5DA128((uint64_t)v117, type metadata accessor for PhotogrammetrySample);
            }
            uint64_t v114 = v180;
            ++v189;

            uint64_t v115 = *v198;
            (*v198)(v164, v90);
          }
          CPGSampleRelease();
        }
        uint64_t v129 = sub_24B5B2D94((uint64_t)v69);
        uint64_t v130 = v129[2];
        uint64_t v192 = v129;
        unint64_t v131 = 0;
        unint64_t v132 = 0;
        if (v130)
        {
          uint64_t v133 = v129 + 4;
          do
          {
            uint64_t result = CPGSessionAddTemporalDepthPointFrame();
            if (result)
            {
              BOOL v134 = __OFADD__(v131++, 1);
              if (v134)
              {
                __break(1u);
LABEL_70:
                __break(1u);
LABEL_71:
                __break(1u);
LABEL_72:
                __break(1u);
                goto LABEL_73;
              }
              uint64_t v135 = sub_24B57CBE8();
              v196(v114, v135, v90);
              uint64_t v136 = sub_24B6824B0();
              uint64_t v137 = v114;
              os_log_type_t v138 = sub_24B682B20();
              if (os_log_type_enabled(v136, v138))
              {
                uint64_t v139 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v139 = 0;
                _os_log_impl(&dword_24B55E000, v136, v138, "Failed to add temporal LiDAR point frame.", v139, 2u);
                uint64_t v140 = v139;
                uint64_t v90 = v195;
                MEMORY[0x24C5D6C00](v140, -1, -1);
              }

              v115(v137, v90);
              uint64_t v114 = v137;
            }
            else
            {
              BOOL v134 = __OFADD__(v132++, 1);
              if (v134) {
                goto LABEL_70;
              }
            }
            CPGTemporalDepthPointFrameRelease();
            ++v133;
            --v130;
          }
          while (v130);
        }
        swift_bridgeObjectRelease();
        uint64_t v141 = sub_24B57CBE8();
        uint64_t v142 = v178;
        v196(v178, v141, v90);
        uint64_t v143 = sub_24B6824B0();
        os_log_type_t v144 = sub_24B682B30();
        if (os_log_type_enabled(v143, v144))
        {
          uint64_t v145 = swift_slowAlloc();
          *(_DWORD *)uint64_t v145 = v168;
          unint64_t v201 = v132;
          sub_24B682CD0();
          *(_WORD *)(v145 + 12) = 2050;
          unint64_t v201 = v131;
          sub_24B682CD0();
          _os_log_impl(&dword_24B55E000, v143, v144, "Passed %{public}ld temporal LiDAR point frames to backend session, failed for %{public}ld frames.", (uint8_t *)v145, 0x16u);
          uint64_t v146 = v145;
          uint64_t v90 = v195;
          MEMORY[0x24C5D6C00](v146, -1, -1);
        }

        uint64_t result = ((uint64_t (*)(char *, uint64_t))v115)(v142, v90);
        uint64_t v77 = v193 + 1;
        if (__OFADD__(v193, 1)) {
          goto LABEL_71;
        }
        uint64_t v7 = v184;
        if ((v183 & 1) == 0)
        {
          float v147 = (float)((float)v77 / v87) * 0.1;
          if (v147 > 0.1) {
            float v147 = 0.1;
          }
          sub_24B5C3A28(v171, v170, v147);
        }
        uint64_t v69 = v187;
        sub_24B5DA128((uint64_t)v187, type metadata accessor for PhotogrammetrySample);
        uint64_t v73 = (uint64_t)v185;
        sub_24B682F50();
        int v88 = v177(v73, 1, v186);
        uint64_t v78 = v188;
        if (v88 == 1) {
          goto LABEL_11;
        }
      }
      swift_release();
      uint64_t v148 = sub_24B57CBE8();
      uint64_t v149 = v195;
      (*v197)(v78, v148, v195);
      long long v150 = sub_24B6824B0();
      os_log_type_t v151 = sub_24B682B20();
      if (os_log_type_enabled(v150, v151))
      {
        long long v152 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)long long v152 = v166;
        unint64_t v201 = v182;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v150, v151, "Stop adding sample, exceeded max number of samples device limit: %{public}ld.", v152, 0xCu);
        uint64_t v153 = v152;
        uint64_t v149 = v195;
        MEMORY[0x24C5D6C00](v153, -1, -1);
      }

      swift_release();
      (*v198)(v78, v149);
      sub_24B5DA128((uint64_t)v69, type metadata accessor for PhotogrammetrySample);
    }
    uint64_t v79 = v160;
    if ((v183 & 1) != 0 || v77 < v162) {
      sub_24B5C3A28(v171, v170, 0.1);
    }
    uint64_t v80 = v161;
    sub_24B563A6C(v158, v161, &qword_2697CC5D0);
    int v81 = v157(v80, 1, v79);
    uint64_t result = sub_24B5632A8(v80, &qword_2697CC5D0);
    if (v81 != 1) {
      *(_DWORD *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 1036831949;
    }
    if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) & 1) == 0)
    {
      *(unsigned char *)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processStarted) = 1;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 440))(result);
      if (result)
      {
        uint64_t v83 = v82;
        uint64_t v84 = swift_getObjectType();
        uint64_t v85 = v173;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, uint64_t, uint64_t))(v83 + 8))(v85, v84, v83);
        swift_unknownObjectRelease();
        return sub_24B5DA128((uint64_t)v85, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
  }
  else
  {
LABEL_73:
    __break(1u);
  }
  return result;
}

uint64_t sub_24B5C548C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v23 = 6;
  if (qword_2697CE1B0 != -1) {
    swift_once();
  }
  if (a1 <= 25000)
  {
    uint64_t v9 = 0;
  }
  else if (a1 < 50001)
  {
    uint64_t v9 = 1;
  }
  else if (a1 < 100001)
  {
    uint64_t v9 = 2;
  }
  else if (a1 < 250001)
  {
    uint64_t v9 = 4;
  }
  else
  {
    if (a1 >= 30000001)
    {
      char v8 = 6;
      goto LABEL_15;
    }
    uint64_t v9 = 5;
  }
  char v8 = *(unsigned char *)(qword_2697CE1B8 + 32 + 16 * v9);
  char v23 = v8;
LABEL_15:
  uint64_t v10 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  uint64_t v11 = sub_24B6824B0();
  os_log_type_t v12 = sub_24B682B30();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = a2;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    v22[0] = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    LOBYTE(v21) = v8;
    uint64_t v16 = sub_24B682820();
    uint64_t v21 = sub_24B5627B8(v16, v17, v22);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v11, v12, "Selected %{public}s as next high detail level", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v15, -1, -1);
    uint64_t v18 = v14;
    a2 = v20;
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = swift_beginAccess();
  *a2 = v23;
  return result;
}

uint64_t sub_24B5C5774(char *a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v52 = sub_24B6824D0();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  char v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = sub_24B562F04(&qword_2697CC670);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24B562F04(&qword_2697CC678);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v17 = (unint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (uint64_t *)((char *)&v50 - v18);
  char v69 = 3;
  uint64_t v68 = -1;
  uint64_t v67 = 0;
  char v66 = 0;
  unint64_t v20 = *(void *)(a2 + 16);
  uint64_t v54 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration;
  uint64_t v58 = a2;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t result = swift_beginAccess();
  unint64_t i = 0;
  uint64_t v60 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  char v61 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  unint64_t v59 = v20;
  BOOL v23 = v20 == 0;
  if (v20) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v24 = 1;
  for (unint64_t i = v20; ; ++i)
  {
    (*v61)(v17, v24, 1, v11);
    sub_24B56CF38((uint64_t)v17, (uint64_t)v19, &qword_2697CC678);
    if ((*v60)(v19, 1, v11) == 1) {
      break;
    }
    uint64_t v27 = *v19;
    sub_24B5D9EF8((uint64_t)v19 + *(int *)(v11 + 48), (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
    sub_24B5D9F60((uint64_t)v10, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v28 = sub_24B562F04(&qword_2697CC580);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v8, 3, v28))
    {
      sub_24B5DA128((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t result = sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
      BOOL v23 = i >= v20;
      if (i == v20) {
        goto LABEL_4;
      }
      goto LABEL_5;
    }
    uint64_t v55 = v27;
    uint64_t v29 = v8[*(int *)(v28 + 48)];
    char v63 = v8[*(int *)(v28 + 48)];
    char v62 = 6;
    sub_24B5D9FC8();
    sub_24B682960();
    sub_24B682960();
    if (v65 == v64)
    {
      uint64_t MaxPolyCount = CPGOutputModelOptionsGetMaxPolyCount();
      sub_24B5C548C(MaxPolyCount, (char *)&v65);
      uint64_t v31 = v65;
      if (qword_2697CE1A0 != -1) {
        swift_once();
      }
      uint64_t v32 = qword_2697CE1A8;
      if (*(void *)(qword_2697CE1A8 + 16))
      {
        unint64_t v33 = sub_24B5D4308(v31);
        if (v34) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      if (qword_2697CE1A0 != -1) {
        swift_once();
      }
      uint64_t v32 = qword_2697CE1A8;
      if (*(void *)(qword_2697CE1A8 + 16))
      {
        unint64_t v33 = sub_24B5D4308(v29);
        if (v35)
        {
LABEL_19:
          char v36 = 0;
          uint64_t v37 = *(void *)(*(void *)(v32 + 56) + 8 * v33);
          goto LABEL_21;
        }
      }
    }
    uint64_t v37 = 0;
    char v36 = 1;
LABEL_21:
    char v38 = sub_24B5A75DC((uint64_t)v10);
    sub_24B5DA128((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
    if ((v36 & 1) == 0)
    {
      if (v68 >= v37)
      {
        if (!((v37 != v68) | v38 & 1) && v66 == 1)
        {
          char v69 = v29;
          uint64_t v68 = v37;
          uint64_t v67 = v55;
          char v66 = 0;
        }
      }
      else
      {
        char v69 = v29;
        uint64_t v68 = v37;
        uint64_t v67 = v55;
        char v66 = v38 & 1;
      }
    }
    uint64_t v39 = sub_24B6822E0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v8, v39);
    unint64_t v20 = v59;
    BOOL v23 = i >= v59;
    if (i == v59) {
      goto LABEL_4;
    }
LABEL_5:
    if (v23)
    {
      __break(1u);
      return result;
    }
    uint64_t v25 = (uint64_t)&v56[*(int *)(v11 + 48)];
    sub_24B5D9F60(v58+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * i, v25, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v26 = (uint64_t)v17 + *(int *)(v11 + 48);
    *unint64_t v17 = i;
    sub_24B5D9EF8(v25, v26, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v24 = 0;
    unint64_t v20 = v59;
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_24B57CBE8();
  uint64_t v41 = v51;
  uint64_t v42 = v50;
  uint64_t v43 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v40, v52);
  uint64_t v44 = sub_24B6824B0();
  os_log_type_t v45 = sub_24B682B10();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v65 = v47;
    *(_DWORD *)uint64_t v46 = 136446466;
    LOBYTE(v64) = v69;
    uint64_t v48 = sub_24B682820();
    uint64_t v64 = sub_24B5627B8(v48, v49, &v65);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2050;
    uint64_t v64 = v67;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v44, v45, "Request with the highest detail level = %{public}s is at the index = %{public}ld", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v47, -1, -1);
    MEMORY[0x24C5D6C00](v46, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  *uint64_t v53 = v69;
  return v67;
}

uint64_t sub_24B5C5FF8(unsigned char *a1, uint64_t a2)
{
  uint64_t v68 = a1;
  uint64_t v4 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v65 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (unint64_t)&v58[-v8];
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = &v58[-v10];
  uint64_t v11 = sub_24B562F04(&qword_2697CC670);
  uint64_t v66 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v72 = &v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_24B562F04(&qword_2697CC678);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (unint64_t *)&v58[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t *)&v58[-v17];
  uint64_t v19 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v67 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v58[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  v76.i64[0] = (uint64_t)&v58[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = &v58[-v26];
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v31 = &v58[-v30];
  uint64_t v69 = a2;
  unint64_t v32 = *(void *)(a2 + 16);
  v77.i64[0] = v32;
  if (!v32)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v62 = v28;
  unint64_t v63 = v9;
  unint64_t v9 = v2;
  unint64_t v33 = v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  swift_beginAccess();
  if (*(void *)(*(void *)v33 + 16) || *(void *)(v9 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
  {
    *uint64_t v68 = 7;
    return swift_bridgeObjectRetain();
  }
  uint64_t v35 = v69;
  unint64_t v61 = v9;
  unint64_t v2 = v9;
  unint64_t v36 = sub_24B5C5774((char *)v79, v69);
  unint64_t v32 = v77.i64[0];
  if (v36 >= v77.i64[0]) {
    goto LABEL_29;
  }
  int v59 = LOBYTE(v79[0]);
  unint64_t v71 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  uint64_t v37 = *(void *)(v67 + 72);
  v73.i64[0] = v36;
  unint64_t v70 = v35 + v71;
  v74.i64[0] = v37;
  sub_24B5D9F60(v35 + v71 + v37 * v36, (uint64_t)v31, type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v29 = sub_24B5D3C4C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v2 = *(void *)(v29 + 16);
  unint64_t v32 = *(void *)(v29 + 24);
  unint64_t v9 = v2 + 1;
  uint64_t v60 = v22;
  if (v2 >= v32 >> 1) {
LABEL_30:
  }
    unint64_t v29 = sub_24B5D3C4C(v32 > 1, v9, 1, v29);
  *(void *)(v29 + 16) = v9;
  unint64_t v75 = v29;
  sub_24B5D9EF8((uint64_t)v31, v29 + v71 + v2 * v74.i64[0], type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v2 = v66 + 56;
  char v38 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v66 + 48);
  swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  uint64_t v31 = (unsigned char *)v77.i64[0];
  while (1)
  {
    if ((unsigned char *)v9 == v31)
    {
      uint64_t v39 = 1;
      unint64_t v9 = (unint64_t)v31;
    }
    else
    {
      if (v9 >= (unint64_t)v31)
      {
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v40 = (uint64_t)&v72[*(int *)(v11 + 48)];
      sub_24B5D9F60(v70 + v9 * v74.i64[0], v40, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v41 = (uint64_t)v16 + *(int *)(v11 + 48);
      *uint64_t v16 = v9;
      uint64_t v42 = v40;
      uint64_t v31 = (unsigned char *)v77.i64[0];
      sub_24B5D9EF8(v42, v41, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v39 = 0;
      ++v9;
    }
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))v2)(v16, v39, 1, v11);
    sub_24B56CF38((uint64_t)v16, (uint64_t)v18, &qword_2697CC678);
    if ((*v38)(v18, 1, v11) == 1) {
      break;
    }
    uint64_t v43 = *v18;
    sub_24B5D9EF8((uint64_t)v18 + *(int *)(v11 + 48), (uint64_t)v27, type metadata accessor for PhotogrammetrySession.Request);
    if (v43 != v73.i64[0])
    {
      sub_24B5D9F60((uint64_t)v27, v76.i64[0], type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v44 = v75;
      unint64_t v46 = *(void *)(v75 + 16);
      unint64_t v45 = *(void *)(v75 + 24);
      if (v46 >= v45 >> 1) {
        uint64_t v44 = sub_24B5D3C4C(v45 > 1, v46 + 1, 1, v75);
      }
      *(void *)(v44 + 16) = v46 + 1;
      unint64_t v75 = v44;
      sub_24B5D9EF8(v76.i64[0], v44 + v71 + v46 * v74.i64[0], type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v31 = (unsigned char *)v77.i64[0];
    }
    sub_24B5DA128((uint64_t)v27, type metadata accessor for PhotogrammetrySession.Request);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!*(void *)(v75 + 16))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v47 = v64;
  sub_24B5D9F60(v75 + v71, (uint64_t)v64, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v48 = v67;
  uint64_t v49 = v62;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v67 + 56))(v47, 0, 1, v62);
  uint64_t v50 = v63;
  sub_24B56CF38((uint64_t)v47, v63, &qword_2697CC5D0);
  uint64_t v51 = v61 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_24B56C254(v50, v51, &qword_2697CC5D0);
  swift_endAccess();
  *uint64_t v68 = v59;
  uint64_t v52 = v51;
  uint64_t v53 = v65;
  sub_24B563A6C(v52, (uint64_t)v65, &qword_2697CC5D0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v48 + 48))(v53, 1, v49);
  uint64_t v54 = (uint64_t)v60;
  if (result == 1)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  sub_24B5D9F60((uint64_t)v53, (uint64_t)v60, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v55 = sub_24B562F04(&qword_2697CC580);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v54, 3, v55))
  {
    unint64_t v56 = v75;
    swift_bridgeObjectRetain();
    sub_24B5DA128(v54, type metadata accessor for PhotogrammetrySession.Request);
  }
  else
  {
    sub_24B56CF38(v54 + *(int *)(v55 + 64), (uint64_t)v78, &qword_2697CC588);
    sub_24B56CF38((uint64_t)v78, (uint64_t)v79, &qword_2697CC588);
    if (sub_24B56DEE8((uint64_t)v79) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      float32x4_t v76 = (float32x4_t)v79[1];
      float32x4_t v77 = (float32x4_t)v79[0];
      int8x16_t v73 = (int8x16_t)v79[3];
      float32x4_t v74 = (float32x4_t)v79[2];
      swift_bridgeObjectRetain();
      sub_24B5F94A8(v77, v76, v74, v73);
    }
    uint64_t v57 = sub_24B6822E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v54, v57);
    unint64_t v56 = v75;
  }
  sub_24B5DA128((uint64_t)v53, type metadata accessor for PhotogrammetrySession.Request);
  swift_bridgeObjectRelease();
  return v56;
}

uint64_t sub_24B5C68A4(char *a1)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  uint64_t v65 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v65 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v65);
  unint64_t v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v64 = (char *)&v58 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v58 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v58 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v15 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v63 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v60 = (uint64_t)&v58 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v58 - v20;
  char v22 = *a1;
  uint64_t v66 = v1;
  uint64_t v23 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_24B563A6C(v23, (uint64_t)v21, &qword_2697CC5D0);
  uint64_t v24 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v25 = v62(v21, 1, v24);
  sub_24B5632A8((uint64_t)v21, &qword_2697CC5D0);
  if (v25 == 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v71 = 0;
  if (CPGRequestCreateWithDetail()) {
    return 0;
  }
  char v68 = v22;
  char v67 = 6;
  sub_24B5D9FC8();
  sub_24B682960();
  sub_24B682960();
  uint64_t v27 = v65;
  uint64_t v26 = v66;
  if (v70 != v69) {
    goto LABEL_10;
  }
  if (!*(void *)(v66 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16))
  {
    uint64_t v41 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v41, v27);
    uint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_24B55E000, v42, v43, "Output model options is nil", v44, 2u);
      MEMORY[0x24C5D6C00](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v27);
    return 0;
  }
  uint64_t v28 = v71;
  if (CPGRequestSetCustomOutputModelOptions()) {
    return 0;
  }
  if (!v28) {
    goto LABEL_33;
  }
  uint64_t v29 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v14, v29, v27);
  uint64_t v30 = sub_24B6824B0();
  os_log_type_t v31 = sub_24B682B30();
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v32 = 0;
    _os_log_impl(&dword_24B55E000, v30, v31, "Set custom detail level for base frame request", v32, 2u);
    unint64_t v33 = v32;
    uint64_t v26 = v66;
    MEMORY[0x24C5D6C00](v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v27);
LABEL_10:
  if (!v71)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (*(unsigned char *)(v26 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) == 1)
  {
    int v34 = CPGRequestSetOutputQuadMeshEnabled();
    uint64_t v35 = sub_24B57CBE8();
    unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    if (v34)
    {
      uint64_t v37 = v64;
      v36(v64, v35, v27);
      char v38 = sub_24B6824B0();
      os_log_type_t v39 = sub_24B682B20();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_24B55E000, v38, v39, "Error setting quad mesh output for base frame request", v40, 2u);
        MEMORY[0x24C5D6C00](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v37, v27);
      goto LABEL_23;
    }
    unint64_t v45 = v58;
    v36(v58, v35, v27);
    unint64_t v46 = sub_24B6824B0();
    os_log_type_t v47 = sub_24B682B30();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_24B55E000, v46, v47, "Set quad mesh model file for base frame request", v48, 2u);
      MEMORY[0x24C5D6C00](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v45, v27);
  }
  swift_beginAccess();
  uint64_t v49 = v71;
  uint64_t result = CPGSessionProcessRequestWithCallbacks();
  if (result)
  {
LABEL_23:
    CPGRequestRelease();
    return 0;
  }
  *(void *)(v26 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest) = v49;
  if (!v49)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v51 = v63;
  sub_24B563A6C(v23, v63, &qword_2697CC5D0);
  uint64_t result = v62((char *)v51, 1, v24);
  if (result == 1)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  uint64_t v52 = v60;
  sub_24B5D9EF8(v51, v60, type metadata accessor for PhotogrammetrySession.Request);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v52, 0, 1, v24);
  swift_beginAccess();
  sub_24B5B3EE0(v52, v49);
  swift_endAccess();
  uint64_t v53 = sub_24B57CBE8();
  uint64_t v54 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v61, v53, v27);
  uint64_t v55 = sub_24B6824B0();
  os_log_type_t v56 = sub_24B682B30();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    _os_log_impl(&dword_24B55E000, v55, v56, "Successfully passed a base frame request to backend session.", v57, 2u);
    MEMORY[0x24C5D6C00](v57, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v54, v27);
  CPGRequestRelease();
  return 1;
}

double sub_24B5C70D0(uint64_t a1)
{
  v12[5] = *MEMORY[0x263EF8340];
  uint64_t v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B5D9F60(a1, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v6 = sub_24B562F04(&qword_2697CC580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 3, v6))
  {
    sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    return 0.0;
  }
  else
  {
    v12[4] = 0;
    if (!CPGRequestCreateWithDetail())
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) != 1
        || !CPGRequestSetOutputQuadMeshEnabled())
      {
        swift_beginAccess();
        CPGSessionGetEstimatedProcessingTime();
        double v7 = v9;
        CPGRequestRelease();
        uint64_t v10 = sub_24B6822E0();
        (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v5, v10);
        return v7;
      }
      CPGRequestRelease();
    }
    uint64_t v8 = sub_24B6822E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
    return INFINITY;
  }
}

uint64_t sub_24B5C731C(uint64_t a1, uint64_t a2, __int8 *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v118 = a1;
  v133[18] = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24B562F04(&qword_2697CC5D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v112 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v115 = v10;
  uint64_t v116 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v113 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v114 = (char *)&v104 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v104 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v104 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v104 - v22;
  uint64_t v117 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v117);
  int v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int8 v26 = *a3;
  sub_24B56CF38(a4, (uint64_t)v129, &qword_2697CC588);
  uint64_t v27 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
  if (!*(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap)) {
    goto LABEL_81;
  }
  uint64_t v28 = v5 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform;
  sub_24B56CF38(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v127, &qword_2697CC578);
  sub_24B56CF38((uint64_t)v127, (uint64_t)v128, &qword_2697CC578);
  if (sub_24B56DEE8((uint64_t)v128) == 1) {
    goto LABEL_82;
  }
  uint64_t v125 = 0;
  sub_24B56CF38((uint64_t)v129, (uint64_t)v126, &qword_2697CC588);
  if (sub_24B56DEE8((uint64_t)v126) == 1) {
    goto LABEL_15;
  }
  uint64_t result = sub_24B5F94A8(v126[0], v126[1], v126[2], (int8x16_t)v126[3]);
  if ((result & 1) == 0) {
    goto LABEL_15;
  }
  if (!*(void *)(v5 + v27))
  {
    __break(1u);
    goto LABEL_84;
  }
  sub_24B56CF38(v28, (uint64_t)v123, &qword_2697CC578);
  sub_24B56CF38((uint64_t)v123, (uint64_t)v124, &qword_2697CC578);
  uint64_t result = sub_24B56DEE8((uint64_t)v124);
  if (result == 1)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  sub_24B56CF38((uint64_t)v123, (uint64_t)v122, &qword_2697CC578);
  float32x4_t v110 = (float32x4_t)v122[3];
  float32x4_t v111 = (float32x4_t)v122[1];
  float32x4_t v106 = (float32x4_t)v122[2];
  float32x4_t v107 = (float32x4_t)v122[0];
  float32x4_t v108 = (float32x4_t)v122[7];
  float32x4_t v109 = (float32x4_t)v122[5];
  float32x4_t v104 = (float32x4_t)v122[6];
  float32x4_t v105 = (float32x4_t)v122[4];
  sub_24B56CF38((uint64_t)v129, (uint64_t)v121, &qword_2697CC588);
  sub_24B56CF38((uint64_t)v121, (uint64_t)v133, &qword_2697CC588);
  uint64_t MutableCopy = CPGSfmMapCreateMutableCopy();
  if (MutableCopy)
  {
    v132[0] = v107;
    v132[1] = v111;
    v132[2] = v106;
    v132[3] = v110;
    v132[4] = v105;
    v132[5] = v109;
    v132[6] = v104;
    v132[7] = v108;
    if (!CPGSfmMapTransformBy())
    {
      sub_24B56CF38((uint64_t)v133, (uint64_t)v132, &qword_2697CC588);
      if (sub_24B56DEE8((uint64_t)v132) == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
        float32x4_t v110 = v43;
        float32x4_t v111 = v42;
        float32x4_t v108 = v45;
        float32x4_t v109 = v44;
        sub_24B60014C();
        PhotogrammetrySession.Request.Geometry.init(orientedBoundsTransform:rootTransform:)(&v130, v46, v47);
      }
      else
      {
        sub_24B56CF38((uint64_t)v133, (uint64_t)&v130, &qword_2697CC588);
      }
      float32x4_t v110 = (float32x4_t)v130.rootTransform.columns[1];
      float32x4_t v111 = (float32x4_t)v130.rootTransform.columns[0];
      float32x4_t v108 = (float32x4_t)v130.rootTransform.columns[3];
      float32x4_t v109 = (float32x4_t)v130.rootTransform.columns[2];
      float32x4_t v106 = (float32x4_t)v130.orientedBoundsTransform.columns[1];
      float32x4_t v107 = (float32x4_t)v130.orientedBoundsTransform.columns[0];
      float32x4_t v104 = (float32x4_t)v130.orientedBoundsTransform.columns[3];
      float32x4_t v105 = (float32x4_t)v130.orientedBoundsTransform.columns[2];
      if ((sub_24B5F94A8((float32x4_t)v130.orientedBoundsTransform.columns[0], (float32x4_t)v130.orientedBoundsTransform.columns[1], (float32x4_t)v130.orientedBoundsTransform.columns[2], (int8x16_t)v130.orientedBoundsTransform.columns[3]) & 1) == 0)goto LABEL_88; {
      uint64_t v131 = 0;
      }
      sub_24B5F89D4(v119, v107, v106, v105, v104);
      v130.orientedBoundsTransform.columns[1] = (simd_float4)v119[1];
      v130.orientedBoundsTransform.columns[0] = (simd_float4)v119[0];
      v130.orientedBoundsTransform.columns[3] = (simd_float4)v119[3];
      v130.orientedBoundsTransform.columns[2] = (simd_float4)v119[2];
      v130.rootTransform.columns[1] = (simd_float4)v119[5];
      v130.rootTransform.columns[0] = (simd_float4)v119[4];
      v130.rootTransform.columns[3] = (simd_float4)v119[7];
      v130.rootTransform.columns[2] = (simd_float4)v119[6];
      if (!CPGBoundingBoxCreateFromTransform())
      {
        int v48 = CPGSfmMapSetBoundingBox();
        CPGBoundingBoxRelease();
        if (!v48)
        {
LABEL_88:
          sub_24B5F89D4(v120, v111, v110, v109, v108);
          v130.orientedBoundsTransform.columns[1] = (simd_float4)v120[1];
          v130.orientedBoundsTransform.columns[0] = (simd_float4)v120[0];
          v130.orientedBoundsTransform.columns[3] = (simd_float4)v120[3];
          v130.orientedBoundsTransform.columns[2] = (simd_float4)v120[2];
          v130.rootTransform.columns[1] = (simd_float4)v120[5];
          v130.rootTransform.columns[0] = (simd_float4)v120[4];
          v130.rootTransform.columns[3] = (simd_float4)v120[7];
          v130.rootTransform.columns[2] = (simd_float4)v120[6];
          if (!CPGSfmMapTransformBy())
          {
            CPGSfmMapRetain();
            CPGSfmMapRelease();
            if (CPGRequestCreateWithDetailAndSfmMap())
            {
              if ((*(uint64_t (**)(void))(*(void *)v5 + 440))())
              {
                uint64_t v50 = v49;
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v52 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
                sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
                *(void *)uint64_t v52 = 3;
                v52[8] = 1;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *, uint64_t, uint64_t))(v50 + 8))(v25, ObjectType, v50);
                swift_unknownObjectRelease();
                sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
              }
              uint64_t v53 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
              BOOL v35 = __OFSUB__(v53, 1);
              uint64_t v54 = v53 - 1;
              if (!v35)
              {
                *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v54;
                sub_24B5BFBEC();
                return CPGSfmMapRelease();
              }
              goto LABEL_80;
            }
            CPGSfmMapRelease();
            goto LABEL_34;
          }
        }
      }
    }
    uint64_t MutableCopy = CPGSfmMapRelease();
  }
  if ((*(uint64_t (**)(uint64_t))(*(void *)v5 + 440))(MutableCopy))
  {
    uint64_t v21 = v31;
    uint64_t v32 = swift_getObjectType();
    uint64_t v18 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
    sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v18 = 3;
    v18[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(char *, uint64_t, char *))v21 + 1))(v25, v32, v21);
    swift_unknownObjectRelease();
    sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  uint64_t v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  uint64_t v34 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (!v35) {
    goto LABEL_19;
  }
  __break(1u);
LABEL_15:
  if (CPGRequestCreateWithDetail())
  {
    if ((*(uint64_t (**)(void))(*(void *)v5 + 440))())
    {
      uint64_t v38 = v37;
      uint64_t v39 = swift_getObjectType();
      uint64_t v40 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
      sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v40 = 3;
      v40[8] = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 8))(v25, v39, v38);
      swift_unknownObjectRelease();
      sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
    uint64_t v41 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    BOOL v35 = __OFSUB__(v41, 1);
    uint64_t v36 = v41 - 1;
    if (!v35)
    {
LABEL_19:
      *(void *)(v5 + v33) = v36;
      return sub_24B5BFBEC();
    }
    __break(1u);
    goto LABEL_75;
  }
LABEL_34:
  if (!v125)
  {
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v130.orientedBoundsTransform.columns[0].i8[0] = v26;
  v124[0] = 6;
  sub_24B5D9FC8();
  sub_24B682960();
  uint64_t v55 = sub_24B682960();
  uint64_t v56 = v115;
  if (v133[0] != *(void *)&v132[0]) {
    goto LABEL_52;
  }
  if (!*(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16)) {
    goto LABEL_43;
  }
  if (!CPGRequestSetCustomOutputModelOptions())
  {
    uint64_t v72 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v23, v72, v56);
    int8x16_t v73 = sub_24B6824B0();
    os_log_type_t v74 = sub_24B682B30();
    if (os_log_type_enabled(v73, v74))
    {
      unint64_t v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v75 = 0;
      _os_log_impl(&dword_24B55E000, v73, v74, "Set custom detail level model file request", v75, 2u);
      MEMORY[0x24C5D6C00](v75, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v23, v56);
LABEL_52:
    uint64_t v76 = v116;
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25) == 1)
    {
      uint64_t v77 = v125;
      if (CPGRequestSetOutputQuadMeshEnabled())
      {
        if ((*(uint64_t (**)(void))(*(void *)v5 + 440))())
        {
          uint64_t v79 = v78;
          uint64_t v80 = swift_getObjectType();
          int v81 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
          sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
          *(void *)int v81 = 3;
          v81[8] = 1;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v79 + 8))(v25, v80, v79);
          swift_unknownObjectRelease();
          sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
        }
        uint64_t v82 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
        BOOL v35 = __OFSUB__(v82, 1);
        uint64_t v83 = v82 - 1;
        if (!v35)
        {
          *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v83;
          sub_24B5BFBEC();
          uint64_t v84 = sub_24B57CBE8();
          uint64_t v85 = v114;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v114, v84, v56);
          uint64_t v86 = sub_24B6824B0();
          os_log_type_t v87 = sub_24B682B20();
          if (os_log_type_enabled(v86, v87))
          {
            int v88 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int v88 = 0;
            unint64_t v89 = "Error setting quad mesh output model";
LABEL_71:
            _os_log_impl(&dword_24B55E000, v86, v87, v89, v88, 2u);
            MEMORY[0x24C5D6C00](v88, -1, -1);
            goto LABEL_72;
          }
          goto LABEL_72;
        }
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      if (!v77)
      {
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
      }
      uint64_t v90 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v18, v90, v56);
      uint64_t v91 = sub_24B6824B0();
      os_log_type_t v92 = sub_24B682B30();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl(&dword_24B55E000, v91, v92, "Set quad mesh model file request", v93, 2u);
        MEMORY[0x24C5D6C00](v93, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v76 + 8))(v18, v56);
    }
    uint64_t result = swift_beginAccess();
    uint64_t v94 = v125;
    if (v125)
    {
      if (!CPGSessionProcessRequestWithCallbacks())
      {
        uint64_t v101 = v112;
        sub_24B5D9F60(v118, v112, type metadata accessor for PhotogrammetrySession.Request);
        uint64_t v102 = type metadata accessor for PhotogrammetrySession.Request(0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v101, 0, 1, v102);
        swift_beginAccess();
        sub_24B5B3EE0(v101, v94);
        swift_endAccess();
        uint64_t v103 = sub_24B57CBE8();
        uint64_t v85 = v113;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v113, v103, v56);
        uint64_t v86 = sub_24B6824B0();
        os_log_type_t v87 = sub_24B682B30();
        if (os_log_type_enabled(v86, v87))
        {
          int v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v88 = 0;
          unint64_t v89 = "Successfully passed the model file request to backend session.";
          goto LABEL_71;
        }
LABEL_72:

        (*(void (**)(char *, uint64_t))(v76 + 8))(v85, v56);
        return CPGRequestRelease();
      }
      if ((*(uint64_t (**)(void))(*(void *)v5 + 440))())
      {
        uint64_t v96 = v95;
        uint64_t v97 = swift_getObjectType();
        uint64_t v98 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
        sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)uint64_t v98 = 3;
        v98[8] = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 8))(v25, v97, v96);
        swift_unknownObjectRelease();
        sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v99 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      BOOL v35 = __OFSUB__(v99, 1);
      uint64_t v100 = v99 - 1;
      if (!v35)
      {
        *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v100;
        sub_24B5BFBEC();
        return CPGRequestRelease();
      }
      goto LABEL_76;
    }
LABEL_85:
    __break(1u);
    return result;
  }
  uint64_t v55 = (*(uint64_t (**)(void))(*(void *)v5 + 440))();
  if (v55)
  {
    uint64_t v21 = v57;
    uint64_t v58 = swift_getObjectType();
    uint64_t v59 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
    sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v59 = 3;
    v59[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(char *, uint64_t, char *))v21 + 1))(v25, v58, v21);
    swift_unknownObjectRelease();
    uint64_t v55 = sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  uint64_t v33 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  uint64_t v60 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  BOOL v35 = __OFSUB__(v60, 1);
  uint64_t v36 = v60 - 1;
  if (!v35) {
    goto LABEL_19;
  }
  __break(1u);
LABEL_43:
  if ((*(uint64_t (**)(uint64_t))(*(void *)v5 + 440))(v55))
  {
    uint64_t v62 = v61;
    uint64_t v63 = swift_getObjectType();
    uint64_t v64 = &v25[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
    sub_24B5D9F60(v118, (uint64_t)v25, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v64 = 3;
    v64[8] = 1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 8))(v25, v63, v62);
    swift_unknownObjectRelease();
    sub_24B5DA128((uint64_t)v25, type metadata accessor for PhotogrammetrySession.Output);
  }
  uint64_t v65 = *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
  BOOL v35 = __OFSUB__(v65, 1);
  uint64_t v66 = v65 - 1;
  if (v35) {
    goto LABEL_78;
  }
  *(void *)(v5 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v66;
  sub_24B5BFBEC();
  uint64_t v67 = sub_24B57CBE8();
  uint64_t v68 = v116;
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v21, v67, v56);
  uint64_t v69 = sub_24B6824B0();
  os_log_type_t v70 = sub_24B682B20();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v71 = 0;
    _os_log_impl(&dword_24B55E000, v69, v70, "Output model options is nil", v71, 2u);
    MEMORY[0x24C5D6C00](v71, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v21, v56);
}

uint64_t sub_24B5C8494(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  double v7 = (void (**)(char *, uint64_t, char *))((char *)&v28[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v28[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(*(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) + 16))
  {
    uint64_t v5 = (uint64_t)v2;
    sub_24B5C8C2C(a1);
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_24B600A5C(v14, v28);
    *uint64_t v13 = v28[0];
    uint64_t v15 = swift_storeEnumTagMultiPayload();
    uint64_t v16 = (*(uint64_t (**)(uint64_t))(*v2 + 440))(v15);
    if (v16)
    {
      uint64_t v5 = v16;
      double v7 = v17;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v19 = (uint64_t)&v10[*(int *)(sub_24B562F04(&qword_2697CC640) + 48)];
      sub_24B5D9F60(a1, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B5D9F60((uint64_t)v13, v19, type metadata accessor for PhotogrammetrySession.Result);
      swift_storeEnumTagMultiPayload();
      v7[1](v10, ObjectType, (char *)v7);
      swift_unknownObjectRelease();
      sub_24B5DA128((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    BOOL v21 = __OFSUB__(v20, 1);
    uint64_t v22 = v20 - 1;
    if (!v21)
    {
      *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v22;
      sub_24B5BFBEC();
      return sub_24B5DA128((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Result);
    }
    __break(1u);
    goto LABEL_11;
  }
  sub_24B5D9F60(a1, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v2 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
  swift_beginAccess();
  a1 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v2 = a1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_11:
    a1 = sub_24B5D3C4C(0, *(void *)(a1 + 16) + 1, 1, a1);
    *unint64_t v2 = a1;
  }
  unint64_t v26 = *(void *)(a1 + 16);
  unint64_t v25 = *(void *)(a1 + 24);
  if (v26 >= v25 >> 1)
  {
    a1 = sub_24B5D3C4C(v25 > 1, v26 + 1, 1, a1);
    *unint64_t v2 = a1;
  }
  *(void *)(a1 + 16) = v26 + 1;
  sub_24B5D9EF8((uint64_t)v7, a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v26, type metadata accessor for PhotogrammetrySession.Request);
  return swift_endAccess();
}

uint64_t sub_24B5C8854(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  double v7 = (void (**)(char *, uint64_t, char *))((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (void *)((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  swift_beginAccess();
  if (*(void *)(*(void *)v14 + 16))
  {
    uint64_t v5 = (uint64_t)v2;
    sub_24B5C8C2C(a1);
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_24B600A5C(v15, v28);
    *uint64_t v13 = v28[0];
    uint64_t v16 = swift_storeEnumTagMultiPayload();
    uint64_t v17 = (*(uint64_t (**)(uint64_t))(*v2 + 440))(v16);
    if (v17)
    {
      uint64_t v5 = v17;
      double v7 = v18;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = (uint64_t)&v10[*(int *)(sub_24B562F04(&qword_2697CC640) + 48)];
      sub_24B5D9F60(a1, (uint64_t)v10, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B5D9F60((uint64_t)v13, v20, type metadata accessor for PhotogrammetrySession.Result);
      swift_storeEnumTagMultiPayload();
      v7[1](v10, ObjectType, (char *)v7);
      swift_unknownObjectRelease();
      sub_24B5DA128((uint64_t)v10, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    BOOL v22 = __OFSUB__(v21, 1);
    uint64_t v23 = v21 - 1;
    if (!v22)
    {
      *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v23;
      sub_24B5BFBEC();
      return sub_24B5DA128((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Result);
    }
    __break(1u);
    goto LABEL_11;
  }
  sub_24B5D9F60(a1, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v2 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
  swift_beginAccess();
  a1 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v2 = a1;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_11:
    a1 = sub_24B5D3C4C(0, *(void *)(a1 + 16) + 1, 1, a1);
    *unint64_t v2 = a1;
  }
  unint64_t v27 = *(void *)(a1 + 16);
  unint64_t v26 = *(void *)(a1 + 24);
  if (v27 >= v26 >> 1)
  {
    a1 = sub_24B5D3C4C(v26 > 1, v27 + 1, 1, a1);
    *unint64_t v2 = a1;
  }
  *(void *)(a1 + 16) = v27 + 1;
  sub_24B5D9EF8((uint64_t)v7, a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, type metadata accessor for PhotogrammetrySession.Request);
  return swift_endAccess();
}

uint64_t sub_24B5C8C2C(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v58 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62[0] = 6;
  sub_24B600BFC(0, 1, v62, (uint64_t)&v63);
  uint64_t v59 = v63;
  int v60 = v64;
  int v61 = v65;
  uint64_t v16 = (uint64_t)v2 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_24B563A6C(v16, (uint64_t)v11, &qword_2697CC5D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t v17 = sub_24B5632A8((uint64_t)v11, &qword_2697CC5D0);
    uint64_t v18 = a1;
LABEL_10:
    uint64_t v32 = (uint64_t (**)(uint64_t))(*v2 + 440);
    uint64_t v33 = *v32;
    uint64_t v34 = (*v32)(v17);
    if (v34)
    {
      uint64_t v36 = v35;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v38 = *(int *)(sub_24B562F04(&qword_2697CC648) + 48);
      sub_24B5D9F60(v18, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)&v5[v38] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 8))(v5, ObjectType, v36);
      swift_unknownObjectRelease();
      uint64_t v34 = sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v39 = v33(v34);
    if (v39)
    {
      uint64_t v41 = v40;
      uint64_t v42 = swift_getObjectType();
      float32x4_t v43 = &v5[*(int *)(sub_24B562F04(&qword_2697CC650) + 48)];
      sub_24B5D9F60(v18, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)float32x4_t v43 = v59;
      v43[8] = v60;
      v43[9] = v61;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 8))(v5, v42, v41);
      swift_unknownObjectRelease();
      uint64_t v39 = sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v44 = v33(v39);
    if (v44)
    {
      uint64_t v46 = v45;
      uint64_t v47 = swift_getObjectType();
      uint64_t v48 = *(int *)(sub_24B562F04(&qword_2697CC648) + 48);
      sub_24B5D9F60(v18, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)&v5[v48] = 0x3FF0000000000000;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 8))(v5, v47, v46);
      swift_unknownObjectRelease();
      uint64_t v44 = sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t result = v33(v44);
    if (result)
    {
      uint64_t v50 = v49;
      uint64_t v51 = swift_getObjectType();
      uint64_t v52 = &v5[*(int *)(sub_24B562F04(&qword_2697CC650) + 48)];
      sub_24B5D9F60(v18, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v52 = v59;
      v52[8] = v60;
      v52[9] = v61;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 8))(v5, v51, v50);
      swift_unknownObjectRelease();
      return sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
    }
    return result;
  }
  sub_24B5D9EF8((uint64_t)v11, (uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v18 = a1;
  if ((static PhotogrammetrySession.Request.== infix(_:_:)(v15, a1) & 1) == 0)
  {
    uint64_t v17 = sub_24B5DA128((uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
    goto LABEL_10;
  }
  uint64_t v57 = a1;
  uint64_t v19 = (uint64_t (**)(void))(*v2 + 440);
  uint64_t v20 = *v19;
  uint64_t v21 = v19;
  uint64_t v22 = (*v19)();
  if (v22)
  {
    uint64_t v54 = v23;
    uint64_t v55 = swift_getObjectType();
    uint64_t v24 = sub_24B562F04(&qword_2697CC648);
    uint64_t v56 = v21;
    unint64_t v25 = v20;
    uint64_t v26 = *(int *)(v24 + 48);
    sub_24B5D9F60(v57, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)&v5[v26] = 0x3FF0000000000000;
    uint64_t v20 = v25;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v5, v55);
    swift_unknownObjectRelease();
    uint64_t v22 = sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  }
  if (((uint64_t (*)(uint64_t))v20)(v22))
  {
    uint64_t v28 = v27;
    uint64_t v29 = swift_getObjectType();
    uint64_t v30 = &v5[*(int *)(sub_24B562F04(&qword_2697CC650) + 48)];
    sub_24B5D9F60(v57, (uint64_t)v5, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v30 = v59;
    _WORD v30[8] = v60;
    v30[9] = v61;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 8))(v5, v29, v28);
    swift_unknownObjectRelease();
    sub_24B5DA128((uint64_t)v5, type metadata accessor for PhotogrammetrySession.Output);
  }
  sub_24B5DA128((uint64_t)v15, type metadata accessor for PhotogrammetrySession.Request);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
  swift_beginAccess();
  sub_24B56C254((uint64_t)v9, v16, &qword_2697CC5D0);
  return swift_endAccess();
}

uint64_t sub_24B5C93BC()
{
  uint64_t v1 = v0;
  uint64_t v88 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (uint64_t)v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for PhotogrammetrySession.Result(0);
  uint64_t v3 = MEMORY[0x270FA5388](v93);
  uint64_t v5 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)v77 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (void *)((char *)v77 - v9);
  uint64_t v85 = sub_24B6822E0();
  uint64_t v11 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v95 = (uint64_t)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v77 - v17;
  uint64_t v83 = OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud;
  if (!*(void *)(*(void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud) + 16))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v19 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64)) {
    goto LABEL_32;
  }
  uint64_t v20 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_poses;
  swift_beginAccess();
  uint64_t v82 = v20;
  if (!*(void *)(*(void *)v20 + 16))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    JUMPOUT(0x24B5C9CD4);
  }
  uint64_t v90 = v8;
  uint64_t v21 = (void *)(v1 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests);
  swift_beginAccess();
  uint64_t v78 = v21;
  uint64_t v22 = *v21;
  uint64_t v23 = *(void *)(*v21 + 16);
  if (!v23)
  {
    unint64_t v75 = v78;
    goto LABEL_25;
  }
  unint64_t v89 = v5;
  uint64_t v24 = v11;
  uint64_t v25 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  uint64_t v26 = v22 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  uint64_t v81 = v19;
  uint64_t v79 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v94 = *(void *)(v14 + 72);
  v77[1] = v22;
  swift_bridgeObjectRetain();
  uint64_t v91 = v10;
  uint64_t v92 = v25;
  while (2)
  {
    sub_24B5D9F60(v26, (uint64_t)v18, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v27 = v95;
    sub_24B5D9F60((uint64_t)v18, v95, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v28 = sub_24B562F04(&qword_2697CC580);
    switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 3, v28))
    {
      case 1u:
        sub_24B5C8C2C((uint64_t)v18);
        uint64_t v36 = swift_bridgeObjectRetain();
        sub_24B600A5C(v36, v98);
        *uint64_t v10 = v98[0];
        uint64_t v37 = swift_storeEnumTagMultiPayload();
        if ((*(uint64_t (**)(uint64_t))(*(void *)v1 + 440))(v37))
        {
          uint64_t v39 = v38;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v40 = sub_24B562F04(&qword_2697CC640);
          uint64_t v41 = v87;
          uint64_t v42 = v87 + *(int *)(v40 + 48);
          sub_24B5D9F60((uint64_t)v18, v87, type metadata accessor for PhotogrammetrySession.Request);
          sub_24B5D9F60((uint64_t)v10, v42, type metadata accessor for PhotogrammetrySession.Result);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 8))(v41, ObjectType, v39);
          swift_unknownObjectRelease();
          uint64_t v43 = v41;
          uint64_t v25 = v92;
          sub_24B5DA128(v43, type metadata accessor for PhotogrammetrySession.Output);
        }
        uint64_t v44 = *(void *)(v1 + v25);
        BOOL v45 = __OFSUB__(v44, 1);
        uint64_t v46 = v44 - 1;
        if (v45)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        *(void *)(v1 + v25) = v46;
        sub_24B5BFBEC();
        uint64_t v10 = v91;
        uint64_t v47 = (uint64_t)v91;
LABEL_6:
        sub_24B5DA128(v47, type metadata accessor for PhotogrammetrySession.Result);
LABEL_7:
        sub_24B5DA128((uint64_t)v18, type metadata accessor for PhotogrammetrySession.Request);
        v26 += v94;
        if (--v23) {
          continue;
        }
        swift_bridgeObjectRelease();
        unint64_t v75 = v78;
LABEL_25:
        void *v75 = MEMORY[0x263F8EE78];
        return swift_bridgeObjectRelease();
      case 2u:
        sub_24B5C8C2C((uint64_t)v18);
        if (*(unsigned char *)(v81 + 64)) {
          goto LABEL_31;
        }
        long long v49 = *(_OWORD *)(v81 + 16);
        long long v48 = *(_OWORD *)(v81 + 32);
        uint64_t v50 = *(void *)(v81 + 48);
        uint64_t v51 = *(void *)(v81 + 56);
        uint64_t v52 = (uint64_t)v90;
        *uint64_t v90 = *(_OWORD *)v81;
        *(_OWORD *)(v52 + 16) = v49;
        *(_OWORD *)(v52 + 32) = v48;
        *(void *)(v52 + 48) = v50;
        *(void *)(v52 + 56) = v51;
        uint64_t v53 = swift_storeEnumTagMultiPayload();
        if ((*(uint64_t (**)(uint64_t))(*(void *)v1 + 440))(v53))
        {
          uint64_t v55 = v54;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v56 = sub_24B562F04(&qword_2697CC640);
          uint64_t v57 = v87;
          uint64_t v58 = v87 + *(int *)(v56 + 48);
          sub_24B5D9F60((uint64_t)v18, v87, type metadata accessor for PhotogrammetrySession.Request);
          uint64_t v59 = v58;
          uint64_t v10 = v91;
          sub_24B5D9F60(v52, v59, type metadata accessor for PhotogrammetrySession.Result);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 8))(v57, ObjectType, v55);
          swift_unknownObjectRelease();
          uint64_t v60 = v57;
          uint64_t v25 = v92;
          sub_24B5DA128(v60, type metadata accessor for PhotogrammetrySession.Output);
        }
        uint64_t v61 = *(void *)(v1 + v25);
        BOOL v45 = __OFSUB__(v61, 1);
        uint64_t v62 = v61 - 1;
        if (v45) {
          goto LABEL_27;
        }
        *(void *)(v1 + v25) = v62;
        sub_24B5BFBEC();
        uint64_t v47 = (uint64_t)v90;
        goto LABEL_6;
      case 3u:
        sub_24B5C8C2C((uint64_t)v18);
        uint64_t v63 = swift_bridgeObjectRetain();
        sub_24B600A5C(v63, v98);
        uint64_t v64 = (uint64_t)v89;
        *unint64_t v89 = v98[0];
        uint64_t v65 = swift_storeEnumTagMultiPayload();
        if ((*(uint64_t (**)(uint64_t))(*(void *)v1 + 440))(v65))
        {
          uint64_t v67 = v66;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v68 = sub_24B562F04(&qword_2697CC640);
          uint64_t v69 = v87;
          uint64_t v70 = v87 + *(int *)(v68 + 48);
          sub_24B5D9F60((uint64_t)v18, v87, type metadata accessor for PhotogrammetrySession.Request);
          uint64_t v71 = v70;
          uint64_t v10 = v91;
          sub_24B5D9F60(v64, v71, type metadata accessor for PhotogrammetrySession.Result);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 8))(v69, ObjectType, v67);
          swift_unknownObjectRelease();
          uint64_t v72 = v69;
          uint64_t v25 = v92;
          sub_24B5DA128(v72, type metadata accessor for PhotogrammetrySession.Output);
        }
        uint64_t v73 = *(void *)(v1 + v25);
        BOOL v45 = __OFSUB__(v73, 1);
        uint64_t v74 = v73 - 1;
        if (v45) {
          goto LABEL_28;
        }
        *(void *)(v1 + v25) = v74;
        sub_24B5BFBEC();
        uint64_t v47 = (uint64_t)v89;
        goto LABEL_6;
      default:
        uint64_t v29 = v95;
        __int8 v30 = *(unsigned char *)(v95 + *(int *)(v28 + 48));
        sub_24B56CF38(v95 + *(int *)(v28 + 64), (uint64_t)v98, &qword_2697CC588);
        os_log_type_t v31 = v84;
        uint64_t v32 = v29;
        uint64_t v33 = v85;
        (*v80)(v84, v32, v85);
        __int8 v97 = v30;
        sub_24B56CF38((uint64_t)v98, (uint64_t)v96, &qword_2697CC588);
        sub_24B5C731C((uint64_t)v18, v34, &v97, (uint64_t)v96);
        uint64_t v35 = v31;
        uint64_t v25 = v92;
        (*v79)(v35, v33);
        goto LABEL_7;
    }
  }
}

uint64_t sub_24B5C9CE4()
{
  uint64_t v1 = v0;
  uint64_t v109 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v109);
  uint64_t v108 = (uint64_t)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v101 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v99 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v92 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v98 = (uint64_t)&v92 - v10;
  MEMORY[0x270FA5388](v9);
  float32x4_t v111 = (uint64_t (*)(uint64_t))((char *)&v92 - v11);
  uint64_t v12 = sub_24B562F04(&qword_2697CC628);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (unint64_t *)((char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (unint64_t *)((char *)&v92 - v16);
  uint64_t v18 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest);
  swift_beginAccess();
  uint64_t v95 = v18;
  uint64_t v19 = *v18;
  uint64_t v20 = *(void *)(*v18 + 64);
  uint64_t v96 = *v18 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v106 = OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest;
  uint64_t v24 = OBJC_IVAR____TtC6CoreOC9PGManager_requestNum;
  uint64_t v103 = OBJC_IVAR____TtC6CoreOC9PGManager_isAddSampleCancelled;
  uint64_t v100 = OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled;
  unint64_t v25 = (unint64_t)(v21 + 63) >> 6;
  unint64_t v92 = v25 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v27 = 0;
  int64_t v97 = v25;
  unint64_t v94 = v25 - 5;
  uint64_t v102 = result;
  uint64_t v93 = result + 104;
  uint64_t v107 = v24;
  float32x4_t v104 = v17;
  float32x4_t v105 = v15;
  while (1)
  {
    if (v23)
    {
      unint64_t v28 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v29 = v28 | (v27 << 6);
LABEL_8:
      uint64_t v30 = *(void *)(v102 + 56);
      *uint64_t v15 = *(void *)(*(void *)(v102 + 48) + 8 * v29);
      uint64_t v31 = v30 + *(void *)(v101 + 72) * v29;
      uint64_t v32 = sub_24B562F04(&qword_2697CC630);
      sub_24B5D9F60(v31, (uint64_t)v15 + *(int *)(v32 + 48), type metadata accessor for PhotogrammetrySession.Request);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 0, 1, v32);
      goto LABEL_15;
    }
    int64_t v33 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_68;
    }
    if (v33 >= v97)
    {
      unint64_t v35 = v27;
    }
    else
    {
      unint64_t v34 = *(void *)(v96 + 8 * v33);
      if (v34) {
        goto LABEL_12;
      }
      unint64_t v35 = v27 + 1;
      if ((uint64_t)(v27 + 2) < v97)
      {
        unint64_t v34 = *(void *)(v96 + 8 * (v27 + 2));
        if (v34)
        {
          int64_t v33 = v27 + 2;
LABEL_12:
          unint64_t v23 = (v34 - 1) & v34;
          unint64_t v29 = __clz(__rbit64(v34)) + (v33 << 6);
          unint64_t v27 = v33;
          goto LABEL_8;
        }
        unint64_t v35 = v27 + 2;
        if ((uint64_t)(v27 + 3) < v97)
        {
          unint64_t v34 = *(void *)(v96 + 8 * (v27 + 3));
          if (v34)
          {
            int64_t v33 = v27 + 3;
            goto LABEL_12;
          }
          int64_t v33 = v27 + 4;
          unint64_t v35 = v27 + 3;
          if ((uint64_t)(v27 + 4) < v97)
          {
            unint64_t v34 = *(void *)(v96 + 8 * v33);
            if (v34) {
              goto LABEL_12;
            }
            while (v94 != v27)
            {
              unint64_t v34 = *(void *)(v93 + 8 * v27++);
              if (v34)
              {
                int64_t v33 = v27 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v35 = v92;
          }
        }
      }
    }
    uint64_t v36 = sub_24B562F04(&qword_2697CC630);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 1, 1, v36);
    unint64_t v23 = 0;
    unint64_t v27 = v35;
LABEL_15:
    sub_24B56CF38((uint64_t)v15, (uint64_t)v17, &qword_2697CC628);
    uint64_t v37 = sub_24B562F04(&qword_2697CC630);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v17, 1, v37) == 1) {
      break;
    }
    unint64_t v110 = v27;
    uint64_t v38 = *v17;
    uint64_t v39 = sub_24B5D9EF8((uint64_t)v17 + *(int *)(v37 + 48), (uint64_t)v111, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v40 = *(void *)(v1 + v106);
    if (v40)
    {
      uint64_t v41 = v98;
      sub_24B5D9F60((uint64_t)v111, v98, type metadata accessor for PhotogrammetrySession.Request);
      if (v38 == v40)
      {
        BOOL v61 = sub_24B5A74D4(v41);
        sub_24B5D9F60(v41, (uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
        if (!v61)
        {
          sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
          uint64_t v63 = v41;
          uint64_t v64 = type metadata accessor for PhotogrammetrySession.Request;
LABEL_34:
          sub_24B5DA128(v63, v64);
          goto LABEL_5;
        }
        char v62 = sub_24B5A75DC((uint64_t)v8);
        sub_24B5DA128((uint64_t)v8, type metadata accessor for PhotogrammetrySession.Request);
        uint64_t v39 = sub_24B5DA128(v41, type metadata accessor for PhotogrammetrySession.Request);
        if (v62) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v39 = sub_24B5DA128(v41, type metadata accessor for PhotogrammetrySession.Request);
      }
    }
    uint64_t v42 = v8;
    uint64_t v43 = (uint64_t (**)(uint64_t))(*(void *)v1 + 440);
    uint64_t v44 = *v43;
    uint64_t result = (*v43)(v39);
    if (result)
    {
      uint64_t v46 = v45;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v48 = sub_24B562F04(&qword_2697CC638);
      uint64_t v49 = v108;
      uint64_t v50 = v108 + *(int *)(v48 + 48);
      sub_24B5D9F60((uint64_t)v111, v108, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v50 = 5;
      *(unsigned char *)(v50 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8))(v49, ObjectType, v46);
      swift_unknownObjectRelease();
      uint64_t v51 = v49;
      uint64_t v24 = v107;
      uint64_t result = sub_24B5DA128(v51, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v52 = *(void *)(v1 + v24);
    BOOL v53 = __OFSUB__(v52, 1);
    uint64_t v54 = v52 - 1;
    if (v53)
    {
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    *(void *)(v1 + v24) = v54;
    if (v54 < 0) {
      goto LABEL_65;
    }
    uint64_t v8 = v42;
    if (!v54)
    {
      swift_retain();
      sub_24B6810B0();
      uint64_t v55 = swift_release();
      if (v113[0] != 1 && *(unsigned char *)(v1 + v100) != 1)
      {
        if (!v44(v55)) {
          goto LABEL_5;
        }
        uint64_t v66 = v65;
        uint64_t v67 = swift_getObjectType();
        uint64_t v68 = v108;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 8))(v68, v67, v66);
        swift_unknownObjectRelease();
        uint64_t v64 = type metadata accessor for PhotogrammetrySession.Output;
        uint64_t v63 = v68;
        uint64_t v8 = v42;
        goto LABEL_34;
      }
      if (v44(v55))
      {
        uint64_t v57 = v56;
        uint64_t v58 = swift_getObjectType();
        uint64_t v59 = v108;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 8))(v59, v58, v57);
        swift_unknownObjectRelease();
        uint64_t v60 = v59;
        uint64_t v8 = v42;
        sub_24B5DA128(v60, type metadata accessor for PhotogrammetrySession.Output);
      }
      v113[0] = 0;
      swift_retain();
      sub_24B6811C0((uint64_t)v113);
      swift_release();
      *(unsigned char *)(v1 + v100) = 0;
    }
LABEL_5:
    uint64_t result = sub_24B5DA128((uint64_t)v111, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v17 = v104;
    uint64_t v15 = v105;
    unint64_t v27 = v110;
  }
  swift_release();
  uint64_t v69 = v1 + OBJC_IVAR____TtC6CoreOC9PGManager_cachedRequests;
  swift_beginAccess();
  uint64_t v70 = *(void **)v69;
  uint64_t v71 = *(void *)(*(void *)v69 + 16);
  if (!v71)
  {
LABEL_63:
    *(void *)uint64_t v69 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    *uint64_t v95 = MEMORY[0x263F8EE80];
    return swift_bridgeObjectRelease();
  }
  uint64_t v106 = v69;
  float32x4_t v111 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 440);
  uint64_t v72 = v101;
  uint64_t v73 = (uint64_t)v70 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
  float32x4_t v105 = v70;
  swift_bridgeObjectRetain();
  unint64_t v110 = *(void *)(v72 + 72);
  uint64_t v74 = (uint64_t)v99;
  uint64_t v75 = v108;
  while (1)
  {
    uint64_t v76 = sub_24B5D9F60(v73, v74, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t result = v111(v76);
    if (result)
    {
      uint64_t v78 = v77;
      uint64_t v79 = swift_getObjectType();
      uint64_t v80 = v75 + *(int *)(sub_24B562F04(&qword_2697CC638) + 48);
      sub_24B5D9F60(v74, v75, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v80 = 5;
      *(unsigned char *)(v80 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 8))(v75, v79, v78);
      swift_unknownObjectRelease();
      uint64_t result = sub_24B5DA128(v75, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v81 = *(void *)(v1 + v107);
    BOOL v53 = __OFSUB__(v81, 1);
    uint64_t v82 = v81 - 1;
    if (v53) {
      break;
    }
    *(void *)(v1 + v107) = v82;
    if (v82 < 0) {
      goto LABEL_67;
    }
    uint64_t v74 = (uint64_t)v99;
    if (!v82)
    {
      swift_retain();
      sub_24B6810B0();
      uint64_t v83 = swift_release();
      if (v112 == 1 || *(unsigned char *)(v1 + v100) == 1)
      {
        if (v111(v83))
        {
          uint64_t v85 = v84;
          uint64_t v86 = swift_getObjectType();
          uint64_t v87 = v108;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 8))(v87, v86, v85);
          swift_unknownObjectRelease();
          sub_24B5DA128(v87, type metadata accessor for PhotogrammetrySession.Output);
        }
        char v112 = 0;
        swift_retain();
        sub_24B6811C0((uint64_t)&v112);
        swift_release();
        *(unsigned char *)(v1 + v100) = 0;
      }
      else if (v111(v83))
      {
        uint64_t v89 = v88;
        uint64_t v90 = swift_getObjectType();
        uint64_t v91 = v108;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 8))(v91, v90, v89);
        swift_unknownObjectRelease();
        sub_24B5DA128(v91, type metadata accessor for PhotogrammetrySession.Output);
      }
    }
    sub_24B5DA128(v74, type metadata accessor for PhotogrammetrySession.Request);
    v73 += v110;
    if (!--v71)
    {
      swift_bridgeObjectRelease();
      uint64_t v69 = v106;
      goto LABEL_63;
    }
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_24B5CA90C()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_session);
  swift_beginAccess();
  if (*v1) {
    CPGSessionRelease();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleCallbackBundle)) {
    CPGAddSampleCallbackBundleRelease();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processingCallbackBundle)) {
    CPGProcessingCallbackBundleRelease();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_finalizeInputCallbackBundle)) {
    CPGFinalizeInputCallbackBundleRelease();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap)) {
    CPGSfmMapRelease();
  }
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 16);
  if (result) {
    return CPGOutputModelOptionsRelease();
  }
  return result;
}

uint64_t sub_24B5CA9C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void))
{
  uint64_t v277 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(char **)(v7 - 8);
  uint64_t v268 = (void (*)(void, void, void))v7;
  uint64_t v269 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v259 = (char *)&v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v239 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v239 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v261 = (char *)&v239 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v258 = (char *)&v239 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v257 = (char *)&v239 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v256 = (char *)&v239 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v263 = (char *)&v239 - v25;
  uint64_t v26 = sub_24B562F04(&qword_2697CC610);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (uint64_t)&v239 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24B6822E0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v271 = v29;
  uint64_t v272 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  int64_t v33 = (char *)&v239 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v260 = (char *)&v239 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v264 = (char *)&v239 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  float32x4_t v255 = (char *)&v239 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v239 - v41;
  uint64_t v43 = MEMORY[0x270FA5388](v40);
  uint64_t v265 = (char *)&v239 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  id v262 = (char *)&v239 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v254 = (char *)&v239 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)&v239 - v50;
  uint64_t v52 = MEMORY[0x270FA5388](v49);
  uint64_t v267 = (char *)&v239 - v53;
  MEMORY[0x270FA5388](v52);
  uint64_t v270 = (char *)&v239 - v54;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24B5AFAEC(0xD00000000000002BLL, 0x800000024B68D840);
    return CPGOutputRelease();
  }
  uint64_t v56 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v57 = sub_24B57CBE8();
    uint64_t v59 = v268;
    uint64_t v58 = v269;
    (*((void (**)(char *, uint64_t, void))v269 + 2))(v16, v57, v268);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B20();
    if (os_log_type_enabled(v60, v61))
    {
      char v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v62 = 0;
      _os_log_impl(&dword_24B55E000, v60, v61, "Can't copy to URL. Backend manager is closed.", v62, 2u);
      MEMORY[0x24C5D6C00](v62, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*((void (**)(char *, void (*)(void, void, void)))v58 + 1))(v16, v59);
    return CPGOutputRelease();
  }
  float64x2_t v245 = v42;
  uint64_t v250 = swift_allocObject();
  *(unsigned char *)(v250 + 16) = 1;
  uint64_t v63 = (void *)sub_24B6821F0();
  char v64 = sub_24B682230();
  uint64_t v253 = a1;
  uint64_t v251 = a3;
  if ((v64 & 1) == 0)
  {
    if (v63[2])
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v65 = v63[2];
        if (v65)
        {
LABEL_10:
          v63[2] = v65 - 1;
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v63 = sub_24B5D6E94(v63);
    uint64_t v65 = v63[2];
    if (v65) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_11:
  uint64_t v266 = v56;
  uint64_t v252 = a4;
  uint64_t v66 = self;
  swift_bridgeObjectRetain();
  uint64_t v67 = (void *)sub_24B682980();
  uint64_t v249 = v63;
  swift_bridgeObjectRelease();
  id v68 = objc_msgSend(v66, sel_pathWithComponents_, v67);

  uint64_t v69 = v68;
  if (!v68)
  {
    sub_24B6827D0();
    uint64_t v69 = (void *)sub_24B6827A0();
    swift_bridgeObjectRelease();
  }
  sub_24B6827D0();
  sub_24B682220();
  swift_bridgeObjectRelease();
  uint64_t v70 = self;
  id v71 = objc_msgSend(v70, sel_defaultManager);
  unsigned __int8 v72 = objc_msgSend(v71, sel_fileExistsAtPath_, v69);

  if ((v72 & 1) == 0)
  {
    id v73 = objc_msgSend(v70, sel_defaultManager);
    uint64_t v74 = v270;
    uint64_t v75 = (void *)sub_24B682250();
    *(void *)&long long v275 = 0;
    unsigned int v76 = objc_msgSend(v73, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v75, 1, 0, &v275);

    if (!v76)
    {
      id v102 = (id)v275;
      swift_bridgeObjectRelease();
      uint64_t v103 = (char *)sub_24B6821B0();

      swift_willThrow();
      uint64_t v104 = sub_24B57CBE8();
      float32x4_t v105 = v268;
      uint64_t v106 = v269;
      (*((void (**)(char *, uint64_t, void))v269 + 2))(v13, v104, v268);
      uint64_t v107 = v271;
      uint64_t v108 = v272;
      (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v33, v74, v271);
      uint64_t v109 = sub_24B6824B0();
      unint64_t v110 = v74;
      os_log_type_t v111 = sub_24B682B20();
      if (os_log_type_enabled(v109, v111))
      {
        uint64_t v112 = swift_slowAlloc();
        uint64_t v265 = (char *)swift_slowAlloc();
        *(void *)&long long v275 = v265;
        *(_DWORD *)uint64_t v112 = 141558275;
        uint64_t v273 = 1752392040;
        uint64_t v267 = v103;
        sub_24B682CD0();
        *(_WORD *)(v112 + 12) = 2081;
        uint64_t v113 = sub_24B6822D0();
        uint64_t v273 = sub_24B5627B8(v113, v114, (uint64_t *)&v275);
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        uint64_t v115 = *(void (**)(char *, uint64_t))(v108 + 8);
        v115(v33, v107);
        _os_log_impl(&dword_24B55E000, v109, v111, "Failed to create directory = %{private,mask.hash}s", (uint8_t *)v112, 0x16u);
        uint64_t v116 = v265;
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v116, -1, -1);
        MEMORY[0x24C5D6C00](v112, -1, -1);

        (*((void (**)(char *, void (*)(void, void, void)))v269 + 1))(v13, v268);
        v115(v270, v107);
      }
      else
      {

        uint64_t v140 = *(void (**)(char *, uint64_t))(v108 + 8);
        v140(v33, v107);
        (*((void (**)(char *, void (*)(void, void, void)))v106 + 1))(v13, v105);
        v140(v110, v107);
      }
      uint64_t v141 = (uint64_t)v252;
      uint64_t v142 = v251;
      uint64_t v143 = v250;
      *(unsigned char *)(v250 + 16) = 0;
      uint64_t v144 = v266;
      uint64_t v145 = v143;
      goto LABEL_88;
    }
    id v77 = (id)v275;
  }
  uint64_t v78 = v266;
  uint64_t v79 = (unsigned __int8 *)(v266 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration);
  sub_24B5A5AEC(*(unsigned char *)(v266 + OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25), (void *)v28);
  uint64_t v80 = sub_24B562F04(&qword_2697CC570);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v28, 1, v80) == 1)
  {
    (*(void (**)(char *, uint64_t))(v272 + 8))(v270, v271);
    swift_bridgeObjectRelease();
    sub_24B5632A8(v28, &qword_2697CC610);
    uint64_t v81 = v250;
    *(unsigned char *)(v250 + 16) = 0;
    uint64_t v82 = v78;
    uint64_t v83 = v81;
    uint64_t v84 = v251;
LABEL_96:
    sub_24B5CCB64(v82, v83, v84, (uint64_t)v252);
    swift_release();
    goto LABEL_97;
  }
  uint64_t v85 = *(void **)v28;
  uint64_t v86 = v28 + *(int *)(v80 + 48);
  uint64_t v87 = *(void *)(v28 + *(int *)(v80 + 64));
  uint64_t v88 = *(void (**)(unint64_t, char *, uint64_t))(v272 + 32);
  uint64_t v248 = v272 + 32;
  float64x2_t v247 = v88;
  v88((unint64_t)v267, (char *)v86, v271);
  id v246 = v85;
  id v89 = objc_msgSend(v85, sel_rootNode);
  id v90 = objc_msgSend(objc_msgSend(v89, sel_subtreeIterator), sel_nextObject);
  uint64_t result = swift_unknownObjectRelease();
  id v244 = v90;
  if (v90)
  {
    id v240 = v89;
    uint64_t v92 = sub_24B6827A0();
    uint64_t v242 = sub_24B6827A0();
    type metadata accessor for PGManager();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v94 = self;
    id v95 = objc_msgSend(v94, sel_bundleForClass_, ObjCClassFromMetadata);
    id v96 = objc_msgSend(v95, sel_infoDictionary);

    uint64_t v241 = v87;
    float64x2_t v243 = (void *)v92;
    if (v96)
    {
      uint64_t v97 = sub_24B682740();

      if (*(void *)(v97 + 16) && (unint64_t v98 = sub_24B562E8C(0x656C646E75424643, 0xEF6E6F6973726556), (v99 & 1) != 0))
      {
        sub_24B562F48(*(void *)(v97 + 56) + 32 * v98, (uint64_t)&v275);
        swift_bridgeObjectRelease();
        if (*((void *)&v276 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v100 = v273;
            unint64_t v101 = v274;
LABEL_33:
            OCGitHash()();
            *(void *)&long long v275 = v100;
            *((void *)&v275 + 1) = v101;
            swift_bridgeObjectRetain();
            sub_24B682890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            sub_24B682890();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v117 = (void *)sub_24B6827A0();
            id v118 = objc_msgSend(v94, sel_bundleWithIdentifier_, v117);

            if (v118
              && (id v119 = objc_msgSend(v118, sel_infoDictionary),
                  v118,
                  v119))
            {
              uint64_t v120 = sub_24B682740();

              if (*(void *)(v120 + 16)
                && (unint64_t v121 = sub_24B562E8C(0x656C646E75424643, 0xEF6E6F6973726556), (v122 & 1) != 0))
              {
                sub_24B562F48(*(void *)(v120 + 56) + 32 * v121, (uint64_t)&v275);
              }
              else
              {
                long long v275 = 0u;
                long long v276 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((void *)&v276 + 1))
              {
                swift_dynamicCast();
LABEL_40:
                *(void *)&long long v275 = 0xD00000000000001BLL;
                *((void *)&v275 + 1) = 0x800000024B68DA00;
                sub_24B682890();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                sub_24B682890();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                sub_24B682890();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                sub_24B682890();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRetain();
                sub_24B682890();
                swift_bridgeObjectRelease();
                id v123 = objc_allocWithZone(MEMORY[0x263F83ED8]);
                uint64_t v124 = (void *)sub_24B6827A0();
                swift_bridgeObjectRelease();
                id v125 = objc_msgSend(v123, sel_initWithString_, v124);

                id v126 = v244;
                unint64_t v127 = v243;
                uint64_t v128 = (void *)v242;
                objc_msgSend(v244, sel_setDictionaryMetadataWithKey_dictionaryKey_value_, v243, v242, v125);

                uint64_t v129 = (void *)sub_24B6827A0();
                CoreOC::PhotogrammetrySession::Request::Geometry v130 = (void *)sub_24B6827A0();
                if (v79[25]) {
                  int v131 = 256;
                }
                else {
                  int v131 = 0;
                }
                sub_24B5AEE70((uint64_t)v252, *v79 | ((unint64_t)*((unsigned int *)v79 + 1) << 32), *((unsigned int *)v79 + 2), *((void *)v79 + 2), v131 | v79[24]);
                id v132 = objc_allocWithZone(MEMORY[0x263F83ED8]);
                uint64_t v133 = (void *)sub_24B6827A0();
                swift_bridgeObjectRelease();
                id v134 = objc_msgSend(v132, sel_initWithString_, v133);

                objc_msgSend(v126, sel_setDictionaryMetadataWithKey_dictionaryKey_value_, v129, v130, v134);
                objc_msgSend(v246, sel_save);
                uint64_t v135 = v251;
                if (sub_24B682230())
                {
                  a1 = v241;
                  a4 = v268;
                  if (v79[25] == 1) {
                    QuadMeshObjAssetsURLs = (void *)CPGOutputGetQuadMeshObjAssetsURLs();
                  }
                  else {
                    QuadMeshObjAssetsURLs = (void *)CPGOutputGetObjAssetsURLs();
                  }
                  uint64_t v13 = v269;
                  uint64_t v172 = v263;
                  if (QuadMeshObjAssetsURLs)
                  {
                    id v173 = QuadMeshObjAssetsURLs;
                    *(void *)&long long v275 = 0;
                    type metadata accessor for CFURL(0);
                    uint64_t v174 = (char *)v173;
                    sub_24B682990();
                    uint64_t v265 = v174;

                    uint64_t v28 = v275;
                    if ((void)v275)
                    {
                      if (!((unint64_t)v275 >> 62))
                      {
                        uint64_t v175 = *(void *)((v275 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v175)
                        {
LABEL_65:
                          *(void *)&long long v275 = MEMORY[0x263F8EE78];
                          sub_24B585DE4(0, v175 & ~(v175 >> 63), 0);
                          if (v175 < 0) {
                            __break(1u);
                          }
                          uint64_t v176 = 0;
                          uint64_t v177 = v275;
                          do
                          {
                            if ((v28 & 0xC000000000000001) != 0) {
                              id v178 = (id)MEMORY[0x24C5D4F60](v176, v28);
                            }
                            else {
                              id v178 = *(id *)(v28 + 8 * v176 + 32);
                            }
                            uint64_t v179 = v178;
                            sub_24B6822B0();

                            *(void *)&long long v275 = v177;
                            unint64_t v181 = *(void *)(v177 + 16);
                            unint64_t v180 = *(void *)(v177 + 24);
                            if (v181 >= v180 >> 1)
                            {
                              sub_24B585DE4(v180 > 1, v181 + 1, 1);
                              uint64_t v177 = v275;
                            }
                            ++v176;
                            *(void *)(v177 + 16) = v181 + 1;
                            v247(v177+ ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80))+ *(void *)(v272 + 72) * v181, v51, v271);
                          }
                          while (v175 != v176);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v13 = v269;
                          goto LABEL_95;
                        }
LABEL_94:
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v177 = MEMORY[0x263F8EE78];
LABEL_95:
                        uint64_t v216 = sub_24B5D9290(v177);
                        swift_bridgeObjectRelease();
                        uint64_t v217 = sub_24B5D9290(a1);
                        swift_bridgeObjectRelease();
                        uint64_t v218 = sub_24B5CCFCC(v217, v216);
                        MEMORY[0x270FA5388](v218);
                        uint64_t v161 = v251;
                        *(&v239 - 2) = v251;
                        sub_24B5CD5A8((void (*)(char *))sub_24B5DA33C, (uint64_t)(&v239 - 4), v218);
                        swift_bridgeObjectRelease();
                        uint64_t v222 = sub_24B57CBE8();
                        uint64_t v223 = v256;
                        float64_t v224 = a4;
                        (*((void (**)(char *, uint64_t, void))v13 + 2))(v256, v222, a4);
                        uint64_t v225 = v271;
                        uint64_t v226 = v272;
                        float64x2_t v227 = v254;
                        (*(void (**)(char *, uint64_t, uint64_t))(v272 + 16))(v254, v161, v271);
                        float64x2_t v228 = sub_24B6824B0();
                        os_log_type_t v229 = sub_24B682B30();
                        if (os_log_type_enabled(v228, v229))
                        {
                          float64x2_t v231 = v227;
                          uint64_t v232 = swift_slowAlloc();
                          uint64_t v233 = swift_slowAlloc();
                          *(void *)&long long v275 = v233;
                          *(_DWORD *)uint64_t v232 = 141558275;
                          uint64_t v273 = 1752392040;
                          sub_24B682CD0();
                          *(_WORD *)(v232 + 12) = 2081;
                          uint64_t v234 = sub_24B6822D0();
                          uint64_t v273 = sub_24B5627B8(v234, v235, (uint64_t *)&v275);
                          sub_24B682CD0();
                          swift_bridgeObjectRelease();
                          uint64_t v236 = *(void (**)(char *, uint64_t))(v226 + 8);
                          v236(v231, v225);
                          _os_log_impl(&dword_24B55E000, v228, v229, "Save OBJ+USDA assets to directory = %{private,mask.hash}s", (uint8_t *)v232, 0x16u);
                          swift_arrayDestroy();
                          uint64_t v237 = v233;
                          uint64_t v161 = v251;
                          MEMORY[0x24C5D6C00](v237, -1, -1);
                          MEMORY[0x24C5D6C00](v232, -1, -1);

                          (*((void (**)(char *, void (*)(void, void, void)))v269 + 1))(v256, v268);
                          v236(v267, v225);
                          v236(v270, v225);
                        }
                        else
                        {

                          uint64_t v238 = *(void (**)(char *, uint64_t))(v226 + 8);
                          v238(v227, v225);

                          (*((void (**)(char *, void (*)(void, void, void)))v13 + 1))(v223, v224);
                          v238(v267, v225);
                          v238(v270, v225);
                        }
LABEL_87:
                        uint64_t v141 = (uint64_t)v252;
                        uint64_t v144 = v266;
                        uint64_t v145 = v250;
                        uint64_t v142 = v161;
                        goto LABEL_88;
                      }
LABEL_93:
                      swift_bridgeObjectRetain();
                      uint64_t v175 = sub_24B682F00();
                      swift_bridgeObjectRelease();
                      if (v175) {
                        goto LABEL_65;
                      }
                      goto LABEL_94;
                    }
                    id v196 = v265;
                  }
                  else
                  {
                    id v196 = 0;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v197 = sub_24B57CBE8();
                  float32x4_t v198 = a4;
                  (*((void (**)(char *, uint64_t, void))v13 + 2))(v172, v197, a4);
                  uint64_t v199 = sub_24B6824B0();
                  os_log_type_t v200 = sub_24B682B20();
                  if (os_log_type_enabled(v199, v200))
                  {
                    id v201 = v196;
                    unint64_t v202 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)unint64_t v202 = 0;
                    _os_log_impl(&dword_24B55E000, v199, v200, "Failed to get output OBJ assets!", v202, 2u);
                    uint64_t v203 = v202;
                    id v196 = v201;
                    MEMORY[0x24C5D6C00](v203, -1, -1);
                  }

                  (*((void (**)(char *, void (*)(void, void, void)))v13 + 1))(v172, v198);
                  uint64_t v219 = v271;
                  uint64_t v220 = *(void (**)(char *, uint64_t))(v272 + 8);
                  v220(v267, v271);
                  v220(v270, v219);
                  uint64_t v221 = v250;
                  *(unsigned char *)(v250 + 16) = 0;
                  uint64_t v82 = v78;
                  uint64_t v83 = v221;
                  uint64_t v84 = v135;
                  goto LABEL_96;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a1 = v271;
                uint64_t v136 = v272;
                uint64_t v28 = v272 + 16;
                a4 = *(void (**)(void, void, void))(v272 + 16);
                uint64_t v13 = v262;
                a4(v262, v135, v271);
                uint64_t v137 = sub_24B6821D0();
                uint64_t v139 = v268;
                if (v137 == 2053403509 && v138 == 0xE400000000000000)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v51 = 0;
                }
                else
                {
                  int v146 = sub_24B682FA0();
                  swift_bridgeObjectRelease();
                  uint64_t v51 = (char *)(v146 ^ 1u);
                }
                float v147 = v264;
                uint64_t v272 = *(void *)(v136 + 8);
                ((void (*)(char *, uint64_t))v272)(v13, a1);
                if ((v51 & 1) == 0)
                {
                  uint64_t v148 = v245;
                  sub_24B682260();
                  uint64_t v149 = v265;
                  sub_24B682290();
                  ((void (*)(char *, uint64_t))v272)(v148, a1);
                  long long v150 = (void *)sub_24B682250();
                  unsigned int v151 = objc_msgSend(v246, sel_exportToURL_, v150);

                  long long v152 = v269;
                  if (v151)
                  {
                    id v153 = objc_allocWithZone(MEMORY[0x263F83F00]);
                    uint64_t v154 = (void *)sub_24B682250();
                    unint64_t v155 = (char *)objc_msgSend(v153, sel_initSceneFromURL_, v154);

                    v264 = v155;
                    if (v155)
                    {
                      uint64_t v156 = v251;
                      uint64_t v157 = (void *)sub_24B682250();
                      objc_msgSend(v264, sel_saveAndCreateUSDZPackageWithURL_, v157);

                      uint64_t v158 = sub_24B57CBE8();
                      uint64_t v159 = (void (*)(char *, uint64_t, void))*((void *)v152 + 2);
                      uint64_t v160 = v258;
                      uint64_t v161 = v156;
                      v159(v258, v158, v139);
                      a4(v147, v156, a1);
                      uint64_t v162 = sub_24B6824B0();
                      float32x4_t v163 = v147;
                      os_log_type_t v164 = sub_24B682B30();
                      if (os_log_type_enabled(v162, v164))
                      {
                        uint64_t v165 = swift_slowAlloc();
                        uint64_t v166 = swift_slowAlloc();
                        *(void *)&long long v275 = v166;
                        *(_DWORD *)uint64_t v165 = 141558275;
                        uint64_t v273 = 1752392040;
                        sub_24B682CD0();
                        *(_WORD *)(v165 + 12) = 2081;
                        uint64_t v167 = sub_24B6822D0();
                        uint64_t v273 = sub_24B5627B8(v167, v168, (uint64_t *)&v275);
                        sub_24B682CD0();
                        swift_bridgeObjectRelease();
                        uint64_t v169 = (void (*)(char *, uint64_t))v272;
                        ((void (*)(char *, uint64_t))v272)(v163, a1);
                        _os_log_impl(&dword_24B55E000, v162, v164, "Save USD scene to USDZ = %{private,mask.hash}s", (uint8_t *)v165, 0x16u);
                        swift_arrayDestroy();
                        uint64_t v170 = v166;
                        uint64_t v161 = v251;
                        MEMORY[0x24C5D6C00](v170, -1, -1);
                        MEMORY[0x24C5D6C00](v165, -1, -1);

                        (*((void (**)(char *, void (*)(void, void, void)))v269 + 1))(v258, v268);
                        v169(v265, a1);
                        v169(v267, a1);
                        v169(v270, a1);
                      }
                      else
                      {

                        uint64_t v214 = v163;
                        unint64_t v215 = (void (*)(char *, uint64_t))v272;
                        ((void (*)(char *, uint64_t))v272)(v214, a1);
                        (*((void (**)(char *, void (*)(void, void, void)))v269 + 1))(v160, v139);
                        v215(v149, a1);
                        v215(v267, a1);
                        v215(v270, a1);
                      }
                      goto LABEL_87;
                    }
                    uint64_t v204 = sub_24B57CBE8();
                    int v183 = v257;
                    (*((void (**)(char *, uint64_t, void))v152 + 2))(v257, v204, v139);
                    uint64_t v184 = v255;
                    a4(v255, v149, a1);
                    uint64_t v185 = sub_24B6824B0();
                    os_log_type_t v205 = sub_24B682B20();
                    if (os_log_type_enabled(v185, v205))
                    {
                      uint64_t v206 = swift_slowAlloc();
                      v264 = (char *)swift_slowAlloc();
                      *(void *)&long long v275 = v264;
                      *(_DWORD *)uint64_t v206 = 141558275;
                      uint64_t v273 = 1752392040;
                      uint64_t v207 = v152;
                      sub_24B682CD0();
                      *(_WORD *)(v206 + 12) = 2081;
                      uint64_t v208 = sub_24B6822D0();
                      uint64_t v273 = sub_24B5627B8(v208, v209, (uint64_t *)&v275);
                      uint64_t v192 = v251;
                      sub_24B682CD0();
                      swift_bridgeObjectRelease();
                      uint64_t v193 = (void (*)(char *, uint64_t))v272;
                      ((void (*)(char *, uint64_t))v272)(v184, a1);
                      _os_log_impl(&dword_24B55E000, v185, v205, "Failed to load the compiled USDC (%{private,mask.hash}s scene for archival.", (uint8_t *)v206, 0x16u);
                      uint64_t v210 = v264;
                      swift_arrayDestroy();
                      MEMORY[0x24C5D6C00](v210, -1, -1);
                      MEMORY[0x24C5D6C00](v206, -1, -1);

                      (*((void (**)(char *, void (*)(void, void, void)))v207 + 1))(v257, v268);
                      uint64_t v194 = v265;
                      uint64_t v195 = a1;
                      goto LABEL_83;
                    }
                  }
                  else
                  {
                    uint64_t v182 = sub_24B57CBE8();
                    int v183 = v261;
                    (*((void (**)(char *, uint64_t, void))v152 + 2))(v261, v182, v139);
                    uint64_t v184 = v260;
                    a4(v260, v149, a1);
                    uint64_t v185 = sub_24B6824B0();
                    os_log_type_t v186 = sub_24B682B20();
                    if (os_log_type_enabled(v185, v186))
                    {
                      uint64_t v187 = swift_slowAlloc();
                      uint64_t v188 = v184;
                      uint64_t v189 = swift_slowAlloc();
                      *(void *)&long long v275 = v189;
                      *(_DWORD *)uint64_t v187 = 141558275;
                      uint64_t v273 = 1752392040;
                      sub_24B682CD0();
                      *(_WORD *)(v187 + 12) = 2081;
                      uint64_t v190 = sub_24B6822D0();
                      uint64_t v273 = sub_24B5627B8(v190, v191, (uint64_t *)&v275);
                      uint64_t v192 = v251;
                      sub_24B682CD0();
                      swift_bridgeObjectRelease();
                      uint64_t v193 = (void (*)(char *, uint64_t))v272;
                      ((void (*)(char *, uint64_t))v272)(v188, a1);
                      _os_log_impl(&dword_24B55E000, v185, v186, "Failed to compile USDA to USDC = %{private,mask.hash}s", (uint8_t *)v187, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x24C5D6C00](v189, -1, -1);
                      MEMORY[0x24C5D6C00](v187, -1, -1);

                      (*((void (**)(char *, void (*)(void, void, void)))v269 + 1))(v261, v268);
                      uint64_t v194 = v265;
                      uint64_t v195 = a1;
LABEL_83:
                      v193(v194, v195);
                      v193(v267, a1);
                      v193(v270, a1);
                      uint64_t v211 = v266;
                      uint64_t v212 = v250;
LABEL_85:
                      *(unsigned char *)(v212 + 16) = 0;
                      uint64_t v144 = v211;
                      uint64_t v145 = v212;
                      uint64_t v142 = v192;
                      uint64_t v141 = (uint64_t)v252;
LABEL_88:
                      sub_24B5CCB64(v144, v145, v142, v141);
                      swift_release();
LABEL_97:
                      swift_release();
                      return CPGOutputRelease();
                    }
                  }

                  uint64_t v213 = (void (*)(char *, uint64_t))v272;
                  ((void (*)(char *, uint64_t))v272)(v184, a1);
                  (*((void (**)(char *, void (*)(void, void, void)))v152 + 1))(v183, v139);
                  v213(v149, a1);
                  v213(v267, a1);
                  v213(v270, a1);
                  uint64_t v211 = v266;
                  uint64_t v212 = v250;
                  uint64_t v192 = v251;
                  goto LABEL_85;
                }
LABEL_92:
                __break(1u);
                goto LABEL_93;
              }
            }
            else
            {
              long long v275 = 0u;
              long long v276 = 0u;
            }
            sub_24B5632A8((uint64_t)&v275, (uint64_t *)&unk_2697CCA30);
            goto LABEL_40;
          }
LABEL_32:
          unint64_t v101 = 0xE500000000000000;
          uint64_t v100 = 0x302E302E30;
          goto LABEL_33;
        }
      }
      else
      {
        long long v275 = 0u;
        long long v276 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v275 = 0u;
      long long v276 = 0u;
    }
    sub_24B5632A8((uint64_t)&v275, (uint64_t *)&unk_2697CCA30);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5CCB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a2;
  uint64_t v31 = sub_24B6825D0();
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682640();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B6822E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *(id *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, v13);
  sub_24B5D9F60(v28, (uint64_t)v12, type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v29;
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  sub_24B5D9EF8((uint64_t)v12, v19 + v18, type metadata accessor for PhotogrammetrySession.Request);
  aBlock[4] = sub_24B5DA534;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8DD38;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v26;
  swift_retain();
  swift_retain();
  sub_24B6825F0();
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  uint64_t v24 = v30;
  uint64_t v23 = v31;
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v8, v24, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  return swift_release();
}

uint64_t sub_24B5CCFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_24B562F04(&qword_2697CC1F0);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = a1 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v28 = v17;
  int64_t v29 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v31 = v5 + 16;
  uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v30 = v5 + 48;
  if ((v20 & v16) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v22 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(void *)(v33 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_24B5D5E80((uint64_t)v10, v8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v21) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v28 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 3;
          if (v24 + 3 >= v29) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v28 + 8 * v15);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v21 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v29)
  {
LABEL_24:
    (*v32)(v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v34;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24B5CD338()
{
  v20[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v19 = sub_24B6822E0();
  uint64_t v0 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B682240();
  sub_24B682280();
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_defaultManager);
  uint64_t v5 = (void *)sub_24B682250();
  v20[0] = 0;
  unsigned int v6 = objc_msgSend(v4, sel_removeItemAtURL_error_, v5, v20);

  if (v6)
  {
    id v7 = v20[0];
  }
  else
  {
    id v8 = v20[0];
    uint64_t v9 = (void *)sub_24B6821B0();

    swift_willThrow();
  }
  id v10 = objc_msgSend(v3, sel_defaultManager);
  uint64_t v11 = (void *)sub_24B682250();
  uint64_t v12 = (void *)sub_24B682250();
  v20[0] = 0;
  unsigned __int8 v13 = objc_msgSend(v10, sel_copyItemAtURL_toURL_error_, v11, v12, v20);

  if (v13)
  {
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v0 + 8);
    id v15 = v20[0];
    return v14(v2, v19);
  }
  else
  {
    id v17 = v20[0];
    sub_24B6821B0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v19);
  }
}

uint64_t sub_24B5CD5A8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v5 = sub_24B6822E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v24 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v29 = v6 + 16;
  uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v28 = v6 + 48;
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  int64_t v26 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v31 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v31 + 48) + *(void *)(v6 + 72) * i, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v27(v8);
    if (v3)
    {
      (*v26)(v8, v5);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v26)(v8, v5);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v25) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v25) {
        goto LABEL_27;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v25) {
        goto LABEL_27;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v25) {
        goto LABEL_27;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v25)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_30;
            }
            if (v17 >= v25) {
              goto LABEL_27;
            }
            unint64_t v21 = *(void *)(v24 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_27:
      (*v30)(v11, 1, 1, v5);
      return swift_release();
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24B5CD938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_24B6825D0();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24B682640();
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGAddSampleStreamProcessingOutputRetain();
  uint64_t v13 = *(void **)(v4 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  unint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a3;
  v15[3] = v14;
  v15[4] = a2;
  aBlock[4] = sub_24B5D83B0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8D948;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v13;
  swift_retain();
  sub_24B6825F0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5CDC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_24B6824D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
    {
      uint64_t v10 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
      uint64_t v11 = sub_24B6824B0();
      os_log_type_t v12 = sub_24B682B30();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_24B55E000, v11, v12, "Skip add sample callback. Backend manager is closed.", v13, 2u);
        MEMORY[0x24C5D6C00](v13, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      int FlipRecommendation = CPGAddSampleStreamProcessingOutputGetFlipRecommendation();
      if ((*(uint64_t (**)(void))(*(void *)v9 + 416))())
      {
        uint64_t v16 = v15;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, BOOL, uint64_t, uint64_t))(v16 + 8))(a3, FlipRecommendation == 1, ObjectType, v16);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  return CPGAddSampleStreamProcessingOutputRelease();
}

uint64_t sub_24B5CDE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24B5CFEB0(a1, a2, a3, MEMORY[0x263F36D98], (uint64_t)&unk_26FE8D980, (uint64_t)sub_24B5D83F4, (uint64_t)&unk_26FE8D998);
}

uint64_t sub_24B5CDED0(uint64_t a1, uint64_t a2)
{
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v74);
  id v73 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B562F04(&qword_2697CC5D0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v71 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v71 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v72 = (uint64_t)&v71 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v71 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v75 = (uint64_t)&v71 - v25;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24B5AFAEC(0xD00000000000002BLL, 0x800000024B68DA20);
    goto LABEL_16;
  }
  uint64_t v27 = (void *)Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v28 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v28, v2);
    uint64_t v29 = sub_24B6824B0();
    os_log_type_t v30 = sub_24B682B20();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_24B55E000, v29, v30, "Skip progress callback. Backend manager is closed.", v31, 2u);
      MEMORY[0x24C5D6C00](v31, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_16;
  }
  uint64_t v32 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  swift_beginAccess();
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = v76;
  if (!*(void *)(*(void *)v32 + 16) || (unint64_t v35 = sub_24B5D4374(v76), (v36 & 1) == 0))
  {
    swift_release();
    goto LABEL_16;
  }
  sub_24B5D9F60(*(void *)(v33 + 56) + *(void *)(v11 + 72) * v35, (uint64_t)v24, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v37 = v75;
  sub_24B5D9EF8((uint64_t)v24, v75, type metadata accessor for PhotogrammetrySession.Request);
  CPGProgressGetFractionCompleted();
  float v39 = v38;
  CPGProgressGetEstimatedRemainingTime();
  double v41 = v40;
  unsigned int ProcessingStep = CPGProgressGetProcessingStep();
  if (ProcessingStep >= 7) {
    char v43 = 6;
  }
  else {
    char v43 = 0x5040302010006uLL >> (8 * ProcessingStep);
  }
  uint64_t v44 = (uint64_t)v27 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  sub_24B563A6C(v44, (uint64_t)v9, &qword_2697CC5D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    uint64_t v47 = v72;
    sub_24B5D9EF8((uint64_t)v9, v72, type metadata accessor for PhotogrammetrySession.Request);
    if ((static PhotogrammetrySession.Request.== infix(_:_:)(v47, v37) & 1) == 0)
    {
      uint64_t v45 = sub_24B5DA128(v47, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_24;
    }
    uint64_t v48 = *(void *)((char *)v27 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest);
    if (!v48 || v48 != v34)
    {
      uint64_t v53 = v71;
      sub_24B5D9EF8(v47, v71, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v54 = sub_24B562F04(&qword_2697CC580);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 3, v54))
      {
        uint64_t v45 = sub_24B5DA128(v53, type metadata accessor for PhotogrammetrySession.Request);
        float v52 = 1.0;
        char v43 = 1;
      }
      else
      {
        uint64_t v55 = sub_24B6822E0();
        uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v53, v55);
        float v52 = 1.0;
        char v43 = 5;
      }
      uint64_t v51 = (uint64_t)v73;
      goto LABEL_31;
    }
    sub_24B5D9F60(v37, (uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
    BOOL v49 = sub_24B5A74D4((uint64_t)v19);
    sub_24B5D9F60((uint64_t)v19, (uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
    if (v49)
    {
      char v50 = sub_24B5A75DC((uint64_t)v16);
      sub_24B5DA128((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B5DA128((uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v51 = (uint64_t)v73;
      if ((v50 & 1) == 0)
      {
        uint64_t v45 = sub_24B5DA128(v47, type metadata accessor for PhotogrammetrySession.Request);
        float v52 = 1.0;
LABEL_31:
        float v39 = *(float *)((char *)v27 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase)
            + (float)(v39
                    * (float)(v52 - *(float *)((char *)v27 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase)));
        goto LABEL_32;
      }
    }
    else
    {
      sub_24B5DA128((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Request);
      sub_24B5DA128((uint64_t)v19, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v51 = (uint64_t)v73;
    }
    uint64_t v45 = sub_24B5DA128(v47, type metadata accessor for PhotogrammetrySession.Request);
    double v41 = v41 + *(double *)((char *)v27 + OBJC_IVAR____TtC6CoreOC9PGManager_modelFileRequestEstimatedTime);
    float v52 = 0.9;
    goto LABEL_31;
  }
  uint64_t v45 = sub_24B5632A8((uint64_t)v9, &qword_2697CC5D0);
LABEL_24:
  uint64_t v51 = (uint64_t)v73;
LABEL_32:
  uint64_t v56 = (uint64_t (**)(uint64_t))(*v27 + 440);
  uint64_t v57 = *v56;
  if ((*v56)(v45))
  {
    uint64_t v59 = v58;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v61 = *(int *)(sub_24B562F04(&qword_2697CC648) + 48);
    sub_24B5D9F60(v75, v51, type metadata accessor for PhotogrammetrySession.Request);
    *(double *)(v51 + v61) = v39;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 8))(v51, ObjectType, v59);
    swift_unknownObjectRelease();
    sub_24B5DA128(v51, type metadata accessor for PhotogrammetrySession.Output);
  }
  char v78 = v43;
  uint64_t v62 = sub_24B600BFC(*(uint64_t *)&v41, 0, &v78, (uint64_t)&v79);
  uint64_t v63 = v79;
  char v64 = v80;
  char v65 = v81;
  if (v57(v62))
  {
    uint64_t v67 = v66;
    uint64_t v68 = swift_getObjectType();
    uint64_t v69 = v51 + *(int *)(sub_24B562F04(&qword_2697CC650) + 48);
    uint64_t v70 = v75;
    sub_24B5D9F60(v75, v51, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)uint64_t v69 = v63;
    *(unsigned char *)(v69 + 8) = v64;
    *(unsigned char *)(v69 + 9) = v65;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 8))(v51, v68, v67);
    swift_release();
    swift_unknownObjectRelease();
    sub_24B5DA128(v51, type metadata accessor for PhotogrammetrySession.Output);
    sub_24B5DA128(v70, type metadata accessor for PhotogrammetrySession.Request);
  }
  else
  {
    sub_24B5DA128(v75, type metadata accessor for PhotogrammetrySession.Request);
    swift_release();
  }
LABEL_16:
  CPGRequestRelease();
  return CPGProgressRelease();
}

uint64_t sub_24B5CE83C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v186 = a1;
  uint64_t v224 = *MEMORY[0x263EF8340];
  uint64_t v189 = sub_24B6824D0();
  *(void *)&long long v188 = *(void *)(v189 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v189);
  uint64_t v187 = (char *)v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v157 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v157 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v157 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v157 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)v157 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)v157 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  int64_t v26 = (char *)v157 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v157 - v27;
  uint64_t v29 = sub_24B562F04(&qword_2697CC610);
  MEMORY[0x270FA5388](v29 - 8);
  if (*(void *)&v3[OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap])
  {
    sub_24B56CF38((uint64_t)&v3[OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform], (uint64_t)v220, &qword_2697CC578);
    sub_24B56CF38((uint64_t)v220, (uint64_t)v221, &qword_2697CC578);
    if (sub_24B56DEE8((uint64_t)v221) == 1) {
      goto LABEL_101;
    }
    uint64_t v31 = v3;
    uint64_t v32 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud] + 16);
    uint64_t v33 = v189;
    unint64_t v35 = v187;
    uint64_t v34 = v188;
    if (v32)
    {
      if (v31[OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64]) {
        goto LABEL_102;
      }
      char v36 = &v31[OBJC_IVAR____TtC6CoreOC9PGManager_poses];
      swift_beginAccess();
      if (*(void *)(*(void *)v36 + 16))
      {
        uint64_t v37 = sub_24B57CBE8();
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v37, v33);
        float v38 = sub_24B6824B0();
        os_log_type_t v39 = sub_24B682B30();
        if (os_log_type_enabled(v38, v39))
        {
          double v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)double v40 = 0;
          _os_log_impl(&dword_24B55E000, v38, v39, "Base coordinate system built.", v40, 2u);
          MEMORY[0x24C5D6C00](v40, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
        return 1;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_89;
  }
  uint64_t v185 = (char *)v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = v8;
  int v183 = v26;
  *(void *)&v184.f64[0] = v11;
  unint64_t v180 = v28;
  v181.n128_u64[0] = (unint64_t)v14;
  uint64_t v178 = OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap;
  uint64_t v179 = v17;
  *(void *)&v177.f64[0] = v20;
  uint64_t v182 = v23;
  uint64_t v42 = (uint64_t)&v3[OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform];
  sub_24B56CF38((uint64_t)&v3[OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform], (uint64_t)v218, &qword_2697CC578);
  sub_24B56CF38((uint64_t)v218, (uint64_t)v219, &qword_2697CC578);
  int v43 = sub_24B56DEE8((uint64_t)v219);
  int64_t v26 = (char *)v188;
  if (v43 != 1) {
    goto LABEL_100;
  }
  uint64_t v44 = v3;
  uint64_t v45 = OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud;
  if (*(void *)(*(void *)&v44[OBJC_IVAR____TtC6CoreOC9PGManager_pointCloud] + 16))
  {
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v46 = &v44[OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform];
  if (v44[OBJC_IVAR____TtC6CoreOC9PGManager_orientedBoundsTransform + 64] != 1) {
    goto LABEL_100;
  }
  uint64_t v47 = &v44[OBJC_IVAR____TtC6CoreOC9PGManager_poses];
  swift_beginAccess();
  if (*(void *)(*(void *)v47 + 16))
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
  }
  uint64_t v176 = v45;
  uint64_t SfmMap = CPGOutputGetSfmMap();
  if (!SfmMap) {
    goto LABEL_21;
  }
  uint64_t v49 = SfmMap;
  uint64_t v50 = CPGSfmMapCopyAllSampleIDs();
  if (!v50) {
    goto LABEL_21;
  }
  uint64_t v51 = (void *)v50;
  *(void *)&v221[0] = 0;
  sub_24B682990();

  uint64_t v52 = *(void *)&v221[0];
  if (!*(void *)&v221[0]) {
    goto LABEL_21;
  }
  uint64_t v53 = *(void *)(*(void *)&v221[0] + 16);
  if (!v53)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v57 = sub_24B57CBE8();
    uint64_t v58 = v187;
    uint64_t v59 = v189;
    (*((void (**)(char *, uint64_t, uint64_t))v26 + 2))(v187, v57, v189);
    uint64_t v60 = sub_24B6824B0();
    os_log_type_t v61 = sub_24B682B20();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_24B55E000, v60, v61, "Failed to get sfmMap or the sampleID array is empty.", v62, 2u);
      MEMORY[0x24C5D6C00](v62, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v26 + 1))(v58, v59);
    return 0;
  }
  uint64_t v187 = v44;
  char v54 = v44[OBJC_IVAR____TtC6CoreOC9PGManager_configuration + 25];
  uint64_t v55 = (char **)v185;
  sub_24B5A5AEC(v54, v185);
  uint64_t v56 = sub_24B562F04(&qword_2697CC570);
  if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56) == 1)
  {
    swift_bridgeObjectRelease();
    sub_24B5632A8((uint64_t)v55, &qword_2697CC610);
    unint64_t v35 = (char *)v189;
LABEL_27:
    uint64_t v66 = sub_24B57CBE8();
    float64_t v67 = v184.f64[0];
    (*((void (**)(void, uint64_t, char *))v26 + 2))(*(void *)&v184.f64[0], v66, v35);
    uint64_t v68 = sub_24B6824B0();
    os_log_type_t v69 = sub_24B682B20();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl(&dword_24B55E000, v68, v69, "Failed to get mesh in world coordinate.", v70, 2u);
      MEMORY[0x24C5D6C00](v70, -1, -1);
    }

LABEL_34:
    (*((void (**)(float64_t, char *))v26 + 1))(COERCE_FLOAT64_T(*(void *)&v67), v35);
    return 0;
  }
  uint64_t v168 = v42;
  uint64_t v186 = v53;
  uint64_t v20 = *v55;
  uint64_t v63 = (char *)v55 + *(int *)(v56 + 48);
  swift_bridgeObjectRelease();
  uint64_t v64 = sub_24B6822E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
  sub_24B5A6EC4(v49, v20, COERCE_FLOAT64_T(v220));
  sub_24B56CF38((uint64_t)v220, (uint64_t)v221, &qword_2697CC578);
  int v65 = sub_24B56DEE8((uint64_t)v221);
  unint64_t v35 = (char *)v189;
  if (v65 == 1)
  {

    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  uint64_t v166 = v46;
  uint64_t v185 = v47;
  float64x2_t v184 = (float64x2_t)v221[1];
  float64x2_t v174 = (float64x2_t)v221[3];
  float64x2_t v175 = (float64x2_t)v221[0];
  float64x2_t v172 = (float64x2_t)v221[5];
  float64x2_t v173 = (float64x2_t)v221[2];
  float64x2_t v170 = (float64x2_t)v221[7];
  float64x2_t v171 = (float64x2_t)v221[4];
  float64x2_t v169 = (float64x2_t)v221[6];
  uint64_t v217 = 0;
  if (CPGSfmMapCopyTracksInsideBoundingBoxInWorldCoordinate() || (uint64_t v75 = v217) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_24B57CBE8();
    float64_t v67 = v181.n128_f64[0];
    (*((void (**)(unint64_t, uint64_t, char *))v26 + 2))(v181.n128_u64[0], v71, v35);
    uint64_t v72 = sub_24B6824B0();
    os_log_type_t v73 = sub_24B682B20();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl(&dword_24B55E000, v72, v73, "Failed to copy tracks inside bounding box in world coordinate.", v74, 2u);
      MEMORY[0x24C5D6C00](v74, -1, -1);
    }

    goto LABEL_34;
  }
  uint64_t v167 = v52;
  v181.n128_u64[0] = CPGSfmWorldTracksGetCount();
  if (v181.n128_i64[0] < 1
    || (uint64_t Positions = CPGSfmWorldTracksGetPositions()) == 0
    || (uint64_t v77 = Positions, (Colors = CPGSfmWorldTracksGetColors()) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v95 = sub_24B57CBE8();
    float64_t v96 = *(double *)&v179;
    (*((void (**)(char *, uint64_t, char *))v26 + 2))(v179, v95, v35);
    uint64_t v97 = sub_24B6824B0();
    os_log_type_t v98 = sub_24B682B20();
    if (!os_log_type_enabled(v97, v98))
    {
LABEL_50:

      (*((void (**)(float64_t, char *))v26 + 1))(COERCE_FLOAT64_T(*(void *)&v96), v35);
      CPGSfmWorldTracksRelease();

      return 0;
    }
    char v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v99 = 0;
    uint64_t v100 = "Failed to get positions or colors of world tracks.";
LABEL_49:
    _os_log_impl(&dword_24B55E000, v97, v98, v100, v99, 2u);
    MEMORY[0x24C5D6C00](v99, -1, -1);
    goto LABEL_50;
  }
  uint64_t v79 = (_DWORD *)Colors;
  uint64_t v80 = CPGSfmMapCopyBoundingBox();
  if (!v80)
  {
LABEL_89:
    swift_bridgeObjectRelease();
    uint64_t v156 = sub_24B57CBE8();
    float64_t v96 = v177.f64[0];
    (*((void (**)(void, uint64_t, char *))v26 + 2))(*(void *)&v177.f64[0], v156, v35);
    uint64_t v97 = sub_24B6824B0();
    os_log_type_t v98 = sub_24B682B20();
    if (!os_log_type_enabled(v97, v98)) {
      goto LABEL_50;
    }
    char v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v99 = 0;
    uint64_t v100 = "Failed to get bounding box in world coordinate.";
    goto LABEL_49;
  }
  uint64_t v179 = (char *)v49;
  v157[2] = v75;
  id v158 = v20;
  v157[1] = v80;
  CPGBoundingBoxGetTransform();
  float64x2_t v159 = v209;
  float64x2_t v160 = v210;
  float64x2_t v161 = v211;
  float64x2_t v162 = v212;
  float64x2_t v163 = v213;
  float64x2_t v164 = v214;
  float64x2_t v177 = v216;
  float64x2_t v165 = v215;
  float64x2_t v209 = v175;
  float64x2_t v210 = v184;
  float64x2_t v211 = v173;
  float64x2_t v212 = v174;
  float64x2_t v213 = v171;
  float64x2_t v214 = v172;
  float64x2_t v215 = v169;
  float64x2_t v216 = v170;
  sub_24B56D164((uint64_t)&v209);
  sub_24B56CF38((uint64_t)&v209, v168, &qword_2697CC578);
  v199[0] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v159.f64[0]), v173, v159, 1), v171, v160.f64[0]), v169, v160, 1);
  v199[1] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v159.f64[0]), v174, v159, 1), v172, v160.f64[0]), v170, v160, 1);
  v199[2] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v161.f64[0]), v173, v161, 1), v171, v162.f64[0]), v169, v162, 1);
  v199[3] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v161.f64[0]), v174, v161, 1), v172, v162.f64[0]), v170, v162, 1);
  v199[4] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v163.f64[0]), v173, v163, 1), v171, v164.f64[0]), v169, v164, 1);
  v199[5] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v163.f64[0]), v174, v163, 1), v172, v164.f64[0]), v170, v164, 1);
  v199[6] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v165.f64[0]), v173, v165, 1), v171, v177.f64[0]), v169, v177, 1);
  v199[7] = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v165.f64[0]), v174, v165, 1), v172, v177.f64[0]), v170, v177, 1);
  *(double *)&long long v81 = sub_24B5F8A08(v199);
  uint64_t v82 = v166;
  *(_OWORD *)uint64_t v166 = v81;
  *((_OWORD *)v82 + 1) = v83;
  *((_OWORD *)v82 + 2) = v84;
  *((_OWORD *)v82 + 3) = v85;
  v82[64] = 0;
  uint64_t v86 = (void *)MEMORY[0x263F8EE78];
  unint64_t v87 = v181.n128_u64[0];
  uint64_t v88 = v187;
  do
  {
    __n128 v89 = *(__n128 *)(v77 + 16);
    float64_t v90 = vaddq_f64(v170, vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, *(double *)v77), v174, *(float64x2_t *)v77, 1), v172, v89.n128_f64[0])).f64[0];
    v89.n128_u64[0] = (unint64_t)vcvt_f32_f64(vaddq_f64(v169, vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, *(double *)v77), v173, *(float64x2_t *)v77, 1), v171, v89.n128_f64[0])));
    *(float *)&float64_t v90 = v90;
    v89.n128_u64[1] = LODWORD(v90);
    LODWORD(v90) = *v79;
    int16x8_t v91 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v90);
    v91.i16[3] = 255;
    sub_24B600A48(vmovn_s16(v91).u32[0], (__n128 *)&v191, v89);
    __n128 v181 = (__n128)v191;
    v2.i32[0] = LODWORD(v192.f64[0]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v86 = sub_24B5D3FC4(0, v86[2] + 1, 1, v86);
    }
    unint64_t v93 = v86[2];
    unint64_t v92 = v86[3];
    if (v93 >= v92 >> 1) {
      uint64_t v86 = sub_24B5D3FC4((void *)(v92 > 1), v93 + 1, 1, v86);
    }
    v86[2] = v93 + 1;
    unint64_t v94 = (__n128 *)&v86[4 * v93];
    v94[2] = v181;
    v94[3].n128_u32[0] = vmovn_s16((int16x8_t)vmovl_u8(v2)).u32[0];
    ++v79;
    v77 += 32;
    --v87;
  }
  while (v87);
  *(void *)&v88[v176] = v86;
  swift_bridgeObjectRelease();
  uint64_t v101 = 0;
  v181.n128_u64[0] = (unint64_t)(v26 + 16);
  id v102 = (void (**)(char *, uint64_t))(v26 + 8);
  *(void *)&long long v103 = 134349056;
  long long v188 = v103;
  float32x4_t v105 = v182;
  uint64_t v104 = v183;
  uint64_t v106 = v185;
  while (1)
  {
    uint64_t v108 = *(void *)(v167 + 8 * v101 + 32);
    if (CPGSfmMapIsSampleRegistered()) {
      break;
    }
    uint64_t v124 = sub_24B57CBE8();
    id v125 = v180;
    (*(void (**)(char *, uint64_t, uint64_t))v181.n128_u64[0])(v180, v124, v189);
    id v126 = sub_24B6824B0();
    os_log_type_t v127 = sub_24B682B20();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = swift_slowAlloc();
      *(_DWORD *)uint64_t v128 = v188;
      *(void *)(v128 + 4) = v108;
      _os_log_impl(&dword_24B55E000, v126, v127, "Sample %{public}llu is not registered.", (uint8_t *)v128, 0xCu);
      uint64_t v129 = v128;
      uint64_t v106 = v185;
      MEMORY[0x24C5D6C00](v129, -1, -1);
    }

    (*v102)(v125, v189);
    if (v108 < 0) {
      goto LABEL_93;
    }
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v208 = *(void **)v106;
    int v131 = v208;
    *(void *)uint64_t v106 = 0x8000000000000000;
    unint64_t v117 = sub_24B5D43DC(v108);
    uint64_t v133 = v131[2];
    BOOL v134 = (v132 & 1) == 0;
    uint64_t v135 = v133 + v134;
    if (__OFADD__(v133, v134)) {
      goto LABEL_94;
    }
    char v136 = v132;
    if (v131[3] >= v135)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24B5D5B2C();
      }
    }
    else
    {
      sub_24B5D4BC0(v135, isUniquelyReferenced_nonNull_native);
      unint64_t v137 = sub_24B5D43DC(v108);
      if ((v136 & 1) != (v138 & 1)) {
        goto LABEL_103;
      }
      unint64_t v117 = v137;
    }
    float32x4_t v105 = v182;
    uint64_t v139 = v208;
    if ((v136 & 1) == 0)
    {
      v208[(v117 >> 6) + 8] |= 1 << v117;
      *(void *)(v139[6] + 8 * v117) = v108;
      uint64_t v140 = v139[7] + 80 * v117;
      *(_OWORD *)(v140 + 32) = 0u;
      *(_OWORD *)(v140 + 48) = 0u;
      *(_OWORD *)uint64_t v140 = 0u;
      *(_OWORD *)(v140 + 16) = 0u;
      *(unsigned char *)(v140 + 64) = 1;
      uint64_t v141 = v139[2];
      BOOL v142 = __OFADD__(v141, 1);
      uint64_t v143 = v141 + 1;
      if (v142) {
        goto LABEL_97;
      }
LABEL_80:
      v139[2] = v143;
      goto LABEL_52;
    }
LABEL_51:
    uint64_t v107 = v139[7] + 80 * v117;
    *(_OWORD *)(v107 + 32) = 0u;
    *(_OWORD *)(v107 + 48) = 0u;
    *(_OWORD *)uint64_t v107 = 0u;
    *(_OWORD *)(v107 + 16) = 0u;
    *(unsigned char *)(v107 + 64) = 1;
LABEL_52:
    uint64_t v104 = v183;
    uint64_t v106 = v185;
    *(void *)uint64_t v185 = v139;
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_53:
    if (v186 == ++v101)
    {
      swift_bridgeObjectRelease();
      *(void *)&v88[v178] = v179;
      CPGSfmMapRetain();
      CPGBoundingBoxRelease();
      CPGSfmWorldTracksRelease();

      return 1;
    }
  }
  uint64_t v208 = 0;
  if (CPGSfmMapGetCameraBySampleID() || !v208)
  {
    uint64_t v109 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))v181.n128_u64[0])(v105, v109, v189);
    unint64_t v110 = sub_24B6824B0();
    os_log_type_t v111 = sub_24B682B20();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = swift_slowAlloc();
      *(_DWORD *)uint64_t v112 = v188;
      *(void *)(v112 + 4) = v108;
      _os_log_impl(&dword_24B55E000, v110, v111, "Failed to get the camera of sample %{public}llu", (uint8_t *)v112, 0xCu);
      uint64_t v113 = v112;
      uint64_t v106 = v185;
      MEMORY[0x24C5D6C00](v113, -1, -1);
    }

    (*v102)(v105, v189);
    if (v108 < 0) {
      goto LABEL_95;
    }
    swift_beginAccess();
    char v114 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v190 = *(void **)v106;
    uint64_t v115 = v190;
    *(void *)uint64_t v106 = 0x8000000000000000;
    unint64_t v117 = sub_24B5D43DC(v108);
    uint64_t v118 = v115[2];
    BOOL v119 = (v116 & 1) == 0;
    uint64_t v120 = v118 + v119;
    if (__OFADD__(v118, v119)) {
      goto LABEL_96;
    }
    char v121 = v116;
    if (v115[3] >= v120)
    {
      if ((v114 & 1) == 0) {
        sub_24B5D5B2C();
      }
    }
    else
    {
      sub_24B5D4BC0(v120, v114);
      unint64_t v122 = sub_24B5D43DC(v108);
      if ((v121 & 1) != (v123 & 1)) {
        goto LABEL_103;
      }
      unint64_t v117 = v122;
    }
    float32x4_t v105 = v182;
    uint64_t v139 = v190;
    if ((v121 & 1) == 0)
    {
      v190[(v117 >> 6) + 8] |= 1 << v117;
      *(void *)(v139[6] + 8 * v117) = v108;
      uint64_t v144 = v139[7] + 80 * v117;
      *(_OWORD *)(v144 + 32) = 0u;
      *(_OWORD *)(v144 + 48) = 0u;
      *(_OWORD *)uint64_t v144 = 0u;
      *(_OWORD *)(v144 + 16) = 0u;
      *(unsigned char *)(v144 + 64) = 1;
      uint64_t v145 = v139[2];
      BOOL v142 = __OFADD__(v145, 1);
      uint64_t v143 = v145 + 1;
      if (v142) {
        goto LABEL_98;
      }
      goto LABEL_80;
    }
    goto LABEL_51;
  }
  if ((v108 & 0x8000000000000000) == 0)
  {
    CPGCameraGetTransform();
    float64x2_t v191 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v200.f64[0]), v173, v200, 1), v171, v201.f64[0]), v169, v201, 1);
    float64x2_t v192 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v200.f64[0]), v174, v200, 1), v172, v201.f64[0]), v170, v201, 1);
    float64x2_t v193 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v202.f64[0]), v173, v202, 1), v171, v203.f64[0]), v169, v203, 1);
    float64x2_t v194 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v202.f64[0]), v174, v202, 1), v172, v203.f64[0]), v170, v203, 1);
    float64x2_t v195 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v204.f64[0]), v173, v204, 1), v171, v205.f64[0]), v169, v205, 1);
    float64x2_t v196 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v204.f64[0]), v174, v204, 1), v172, v205.f64[0]), v170, v205, 1);
    float64x2_t v197 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v175, v206.f64[0]), v173, v206, 1), v171, v207.f64[0]), v169, v207, 1);
    float64x2_t v198 = vmlaq_laneq_f64(vmlaq_n_f64(vmlaq_laneq_f64(vmulq_n_f64(v184, v206.f64[0]), v174, v206, 1), v172, v207.f64[0]), v170, v207, 1);
    *(double *)&long long v146 = sub_24B5F8A08(&v191);
    v222[0] = v146;
    v222[1] = v147;
    v222[2] = v148;
    v222[3] = v149;
    char v223 = 0;
    swift_beginAccess();
    char v150 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v190 = *(void **)v106;
    *(void *)uint64_t v106 = 0x8000000000000000;
    sub_24B5D54CC((uint64_t)v222, v108, v150);
    *(void *)uint64_t v106 = v190;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v151 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))v181.n128_u64[0])(v104, v151, v189);
    long long v152 = sub_24B6824B0();
    os_log_type_t v153 = sub_24B682B30();
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v154 = swift_slowAlloc();
      *(_DWORD *)uint64_t v154 = v188;
      *(void *)(v154 + 4) = v108;
      _os_log_impl(&dword_24B55E000, v152, v153, "Get the camera pose of sample %{public}llu", (uint8_t *)v154, 0xCu);
      uint64_t v155 = v154;
      uint64_t v106 = v185;
      MEMORY[0x24C5D6C00](v155, -1, -1);
    }

    uint64_t v104 = v183;
    (*v102)(v183, v189);
    goto LABEL_53;
  }
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B5CFB7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v30 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v30);
  uint64_t v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B5D9624(a1);
  uint64_t v6 = v5;
  uint64_t v31 = *(void *)(v5 + 16);
  if (v31)
  {
    uint64_t v28 = a1;
    uint64_t v7 = 0;
    uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 440);
    uint64_t v9 = v29;
    do
    {
      uint64_t v10 = *(void *)(v6 + 8 * v7 + 32);
      uint64_t v5 = v8(v5);
      if (v5)
      {
        uint64_t v12 = v11;
        uint64_t v13 = v2;
        uint64_t ObjectType = swift_getObjectType();
        *uint64_t v9 = v10;
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = ObjectType;
        uint64_t v2 = v13;
        (*(void (**)(void *, uint64_t, uint64_t))(v12 + 8))(v9, v15, v12);
        swift_unknownObjectRelease();
        uint64_t v5 = sub_24B5DA128((uint64_t)v9, type metadata accessor for PhotogrammetrySession.Output);
      }
      ++v7;
    }
    while (v31 != v7);
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_24B5D9D30();
  uint64_t v17 = sub_24B5A7828(v16);
  if ((v17 & 1) != 0 && (*(uint64_t (**)(uint64_t))(*(void *)v2 + 440))(v17))
  {
    uint64_t v19 = v18;
    uint64_t v20 = swift_getObjectType();
    uint64_t v21 = (uint64_t)v29;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v21, v20, v19);
    swift_unknownObjectRelease();
    sub_24B5DA128(v21, type metadata accessor for PhotogrammetrySession.Output);
  }
  char v22 = sub_24B5A87BC(v16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 440))(result);
    if (result)
    {
      uint64_t v25 = v24;
      uint64_t v26 = swift_getObjectType();
      uint64_t v27 = (uint64_t)v29;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8))(v27, v26, v25);
      swift_unknownObjectRelease();
      return sub_24B5DA128(v27, type metadata accessor for PhotogrammetrySession.Output);
    }
  }
  return result;
}

uint64_t sub_24B5CFE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24B5CFEB0(a1, a2, a3, MEMORY[0x263F36D90], (uint64_t)&unk_26FE8D9D0, (uint64_t)sub_24B5D8400, (uint64_t)&unk_26FE8D9E8);
}

uint64_t sub_24B5CFEB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v11 = sub_24B6825D0();
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24B682640();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGRequestRetain();
  a4(a3);
  uint64_t v17 = *(void **)(v7 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  _OWORD v19[4] = v18;
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = v25;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v17;
  swift_retain();
  sub_24B6825F0();
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5D01B4(uint64_t a1, uint64_t a2)
{
  uint64_t v151 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v4 - 8);
  CoreOC::PhotogrammetrySession::Request::Geometry v130 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_24B6822E0();
  uint64_t v131 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v129 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v132);
  uint64_t v133 = (uint64_t)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B562F04(&qword_2697CC5D0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v127 = (uint64_t)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  BOOL v134 = (char *)&v122 - v11;
  uint64_t v12 = sub_24B6824D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v138 = v12;
  uint64_t v139 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v122 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v124 = (char *)&v122 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v122 - v22;
  uint64_t v24 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v135 = v24;
  uint64_t v136 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v128 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v125 = (uint64_t)&v122 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v122 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  unint64_t v35 = (char *)&v122 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  float v38 = (char *)&v122 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v137 = (uint64_t)&v122 - v39;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24B5AFAEC(0xD000000000000027, 0x800000024B68D810);
LABEL_22:
    CPGRequestRelease();
    return CPGOutputRelease();
  }
  uint64_t v41 = a1;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v42 = sub_24B57CBE8();
    uint64_t v43 = v138;
    uint64_t v44 = v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v16, v42, v138);
    uint64_t v45 = sub_24B6824B0();
    os_log_type_t v46 = sub_24B682B20();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_24B55E000, v45, v46, "Skip output callback. Backend manager is closed.", v47, 2u);
      MEMORY[0x24C5D6C00](v47, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v43);
    goto LABEL_22;
  }
  uint64_t v123 = Strong;
  uint64_t v48 = Strong + OBJC_IVAR____TtC6CoreOC9PGManager_requestByCPGRequest;
  swift_beginAccess();
  uint64_t v49 = *(void *)v48;
  if (!*(void *)(*(void *)v48 + 16) || (unint64_t v50 = sub_24B5D4374(v41), (v51 & 1) == 0))
  {
    uint64_t v69 = sub_24B57CBE8();
    uint64_t v70 = v138;
    uint64_t v71 = v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v23, v69, v138);
    uint64_t v72 = sub_24B6824B0();
    os_log_type_t v73 = sub_24B682B20();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl(&dword_24B55E000, v72, v73, "Resumed request handling is not implemented.", v74, 2u);
      MEMORY[0x24C5D6C00](v74, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v70);
    goto LABEL_22;
  }
  sub_24B5D9F60(*(void *)(v49 + 56) + *(void *)(v136 + 72) * v50, (uint64_t)v38, type metadata accessor for PhotogrammetrySession.Request);
  sub_24B5D9EF8((uint64_t)v38, v137, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v52 = a2;
  if (CPGOutputGetFailure())
  {
    int Code = CPGProcessingFailureGetCode();
    uint64_t v54 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v139 + 16))(v19, v54, v138);
    uint64_t v55 = sub_24B6824B0();
    os_log_type_t v56 = sub_24B682B20();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 67240192;
      LODWORD(v149[0]) = Code;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v55, v56, "Output error with code = %{public}d", v57, 8u);
      MEMORY[0x24C5D6C00](v57, -1, -1);
    }

    uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v19, v138);
    if (!*(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_sfmMap))
    {
      sub_24B5C9CE4();
      goto LABEL_28;
    }
    if ((*(uint64_t (**)(uint64_t))(*(void *)v123 + 440))(v58))
    {
      uint64_t v60 = v59;
      uint64_t v61 = Code;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v63 = sub_24B562F04(&qword_2697CC638);
      uint64_t v64 = v133;
      uint64_t v65 = v133 + *(int *)(v63 + 48);
      sub_24B5D9F60(v137, v133, type metadata accessor for PhotogrammetrySession.Request);
      *(void *)uint64_t v65 = v61;
      *(unsigned char *)(v65 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 8))(v64, ObjectType, v60);
      swift_unknownObjectRelease();
      sub_24B5DA128(v64, type metadata accessor for PhotogrammetrySession.Output);
    }
    uint64_t v66 = *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
    BOOL v67 = __OFSUB__(v66, 1);
    uint64_t v68 = v66 - 1;
    if (!v67)
    {
      *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v68;
      sub_24B5BFBEC();
LABEL_28:
      uint64_t v83 = (uint64_t)v134;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v134, 1, 1, v135);
      swift_beginAccess();
      sub_24B5B3EE0(v83, v41);
      swift_endAccess();
      swift_release();
      sub_24B5DA128(v137, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v76 = OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest;
  uint64_t v77 = v123;
  uint64_t v78 = *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_baseFrameCPGRequest);
  uint64_t v79 = v41;
  uint64_t v80 = (uint64_t)v134;
  if (v78 && v78 == v79)
  {
    sub_24B5D9F60(v137, (uint64_t)v35, type metadata accessor for PhotogrammetrySession.Request);
    BOOL v81 = sub_24B5A74D4((uint64_t)v35);
    sub_24B5D9F60((uint64_t)v35, (uint64_t)v32, type metadata accessor for PhotogrammetrySession.Request);
    if (v81) {
      char v82 = sub_24B5A75DC((uint64_t)v32);
    }
    else {
      char v82 = 1;
    }
    sub_24B5DA128((uint64_t)v32, type metadata accessor for PhotogrammetrySession.Request);
    sub_24B5DA128((uint64_t)v35, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v84 = v123;
    uint64_t v77 = v123;
    if ((sub_24B5CE83C(v52) & 1) == 0)
    {
      sub_24B5C9CE4();
      *(_DWORD *)(v84 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
      goto LABEL_65;
    }
    sub_24B5C93BC();
    if (v82) {
      *(_DWORD *)(v77 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 1063675494;
    }
    uint64_t v85 = OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted;
    if ((*(unsigned char *)(v77 + OBJC_IVAR____TtC6CoreOC9PGManager_isOneTimeOutputEmitted) & 1) == 0)
    {
      sub_24B5CFB7C(v52);
      uint64_t v77 = v123;
      *(unsigned char *)(v123 + v85) = 1;
    }
    *(void *)(v77 + v76) = 0;
    if (v82) {
      goto LABEL_65;
    }
  }
  uint64_t v86 = v77 + OBJC_IVAR____TtC6CoreOC9PGManager_firstRequest;
  swift_beginAccess();
  uint64_t v87 = v127;
  sub_24B563A6C(v86, v127, &qword_2697CC5D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v87, 1, v135) == 1)
  {
    sub_24B5632A8(v87, &qword_2697CC5D0);
    uint64_t v88 = v139;
    uint64_t v89 = v131;
    uint64_t v90 = (uint64_t)v129;
  }
  else
  {
    uint64_t v91 = v125;
    sub_24B5D9EF8(v87, v125, type metadata accessor for PhotogrammetrySession.Request);
    char v92 = static PhotogrammetrySession.Request.== infix(_:_:)(v91, v137);
    sub_24B5DA128(v91, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v88 = v139;
    uint64_t v89 = v131;
    uint64_t v90 = (uint64_t)v129;
    if (v92)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v80, 1, 1, v135);
      swift_beginAccess();
      sub_24B56C254(v80, v86, &qword_2697CC5D0);
      swift_endAccess();
      *(_DWORD *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_adjustedProgressBase) = 0;
    }
  }
  uint64_t v150 = 0;
  if (sub_24B5A75DC(v137))
  {
    uint64_t v150 = v52;
    uint64_t v93 = v52;
    uint64_t v94 = (uint64_t)v130;
    uint64_t v95 = (uint64_t)v128;
LABEL_52:
    uint64_t v111 = v126;
    if (!v93)
    {
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    sub_24B5D9F60(v137, v95, type metadata accessor for PhotogrammetrySession.Request);
    uint64_t v112 = sub_24B562F04(&qword_2697CC580);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 48))(v95, 3, v112))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v94, 1, 1, v111);
      sub_24B5DA128(v95, type metadata accessor for PhotogrammetrySession.Request);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v94, v95, v111);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v94, 0, 1, v111);
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v94, 1, v111) == 1)
    {
      uint64_t v113 = sub_24B5632A8(v94, &qword_2697CC1F0);
LABEL_61:
      if ((*(uint64_t (**)(uint64_t))(*(void *)v123 + 440))(v113))
      {
        uint64_t v115 = v114;
        uint64_t v116 = swift_getObjectType();
        uint64_t v117 = sub_24B562F04(&qword_2697CC638);
        uint64_t v118 = v133;
        uint64_t v119 = v133 + *(int *)(v117 + 48);
        sub_24B5D9F60(v137, v133, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)uint64_t v119 = 3;
        *(unsigned char *)(v119 + 8) = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 8))(v118, v116, v115);
        swift_unknownObjectRelease();
        sub_24B5DA128(v118, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v120 = *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      BOOL v67 = __OFSUB__(v120, 1);
      uint64_t v121 = v120 - 1;
      if (v67) {
        goto LABEL_69;
      }
      *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v121;
      sub_24B5BFBEC();
      goto LABEL_65;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v90, v94, v111);
    if (!v150)
    {
      uint64_t v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 8))(v90, v111);
      goto LABEL_61;
    }
    sub_24B5D8C40(v150, v137, v90);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v90, v111);
LABEL_65:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v80, 1, 1, v135);
    swift_beginAccess();
    sub_24B5B3EE0(v80, v79);
    goto LABEL_66;
  }
  sub_24B56CF38(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_reCenterTransform, (uint64_t)v148, &qword_2697CC578);
  sub_24B56CF38((uint64_t)v148, (uint64_t)v149, &qword_2697CC578);
  uint64_t result = sub_24B56DEE8((uint64_t)v149);
  uint64_t v95 = (uint64_t)v128;
  if (result != 1)
  {
    long long v140 = v149[0];
    long long v141 = v149[1];
    long long v142 = v149[2];
    long long v143 = v149[3];
    long long v144 = v149[4];
    long long v145 = v149[5];
    long long v146 = v149[6];
    long long v147 = v149[7];
    int v96 = CPGOutputCreateWithTransform();
    uint64_t v94 = (uint64_t)v130;
    if (v96)
    {
      uint64_t v139 = v48;
      uint64_t v97 = sub_24B57CBE8();
      os_log_type_t v98 = v124;
      (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v124, v97, v138);
      char v99 = sub_24B6824B0();
      os_log_type_t v100 = sub_24B682B20();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v101 = 0;
        _os_log_impl(&dword_24B55E000, v99, v100, "Backend Manager: Failed to transform backend output to base coordinate frame", v101, 2u);
        MEMORY[0x24C5D6C00](v101, -1, -1);
      }

      uint64_t v102 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v98, v138);
      if ((*(uint64_t (**)(uint64_t))(*(void *)v123 + 440))(v102))
      {
        uint64_t v104 = v103;
        uint64_t v105 = swift_getObjectType();
        uint64_t v106 = sub_24B562F04(&qword_2697CC638);
        uint64_t v107 = v133;
        uint64_t v108 = v133 + *(int *)(v106 + 48);
        sub_24B5D9F60(v137, v133, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)uint64_t v108 = 3;
        *(unsigned char *)(v108 + 8) = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 8))(v107, v105, v104);
        swift_unknownObjectRelease();
        sub_24B5DA128(v107, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v109 = *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      BOOL v67 = __OFSUB__(v109, 1);
      uint64_t v110 = v109 - 1;
      if (v67) {
LABEL_70:
      }
        __break(1u);
      *(void *)(v123 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v110;
      sub_24B5BFBEC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v80, 1, 1, v135);
      swift_beginAccess();
      sub_24B5B3EE0(v80, v79);
LABEL_66:
      swift_endAccess();
      swift_release();
      sub_24B5DA128(v137, type metadata accessor for PhotogrammetrySession.Request);
      goto LABEL_22;
    }
    uint64_t v93 = v150;
    goto LABEL_52;
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5D1330()
{
  uint64_t v1 = sub_24B6825D0();
  uint64_t v14 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B682640();
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC6CoreOC9PGManager_processQueue);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_24B5D840C;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8DA10;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v7;
  swift_retain();
  sub_24B6825F0();
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v6, v3, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5D1604()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_24B5AFAEC(0xD000000000000037, 0x800000024B68D7D0);
  }
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v5 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    uint64_t v6 = sub_24B6824B0();
    os_log_type_t v7 = sub_24B682B20();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_24B55E000, v6, v7, "Skip cancellation status callback. Backend manager is closed.", v8, 2u);
      MEMORY[0x24C5D6C00](v8, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    *(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isProcessCancelled) = 1;
    sub_24B5C9CE4();
    return swift_release();
  }
}

uint64_t sub_24B5D17F8(uint64_t a1, uint64_t a2)
{
  return sub_24B5D21A0(a1, a2, MEMORY[0x263F36DA8], (uint64_t)&unk_26FE8DA48, (uint64_t)sub_24B5D844C, (uint64_t)&unk_26FE8DA60);
}

uint64_t sub_24B5D1834()
{
  uint64_t v116 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v93 - v5;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24B5AFAEC(0xD000000000000029, 0x800000024B68D7A0);
    return CPGUpdatedPosesRelease();
  }
  uint64_t v8 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v9 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v9, v0);
    uint64_t v10 = sub_24B6824B0();
    os_log_type_t v11 = sub_24B682B20();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_24B55E000, v10, v11, "Skip pose update callback. Backend manager is closed.", v12, 2u);
      MEMORY[0x24C5D6C00](v12, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return CPGUpdatedPosesRelease();
  }
  uint64_t v13 = CPGUpdatedPosesCopySampleIDs();
  if (!v13
    || (uint64_t v14 = (void *)v13,
        v115[0].f64[0] = 0.0,
        sub_24B682990(),
        v14,
        float64_t v100 = v115[0].f64[0],
        !*(void *)&v115[0].f64[0]))
  {
    if ((*(uint64_t (**)(void))(*(void *)v8 + 464))())
    {
      uint64_t v24 = v23;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v26 = sub_24B5D7320(MEMORY[0x263F8EE78]);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 16))(v26, ObjectType, v24);
LABEL_63:
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      return CPGUpdatedPosesRelease();
    }
    swift_release();
    return CPGUpdatedPosesRelease();
  }
  uint64_t v15 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v6, v15, v0);
  unint64_t v16 = sub_24B6824B0();
  os_log_type_t v17 = sub_24B682B10();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_24B55E000, v16, v17, "Received pose updates from mobileSfM.", v18, 2u);
    MEMORY[0x24C5D6C00](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  uint64_t v19 = (void *)MEMORY[0x263F8EE78];
  unint64_t v102 = sub_24B5D7320(MEMORY[0x263F8EE78]);
  unint64_t v20 = sub_24B5D7320((uint64_t)v19);
  int v111 = 0;
  uint64_t v21 = *(void *)(*(void *)&v100 + 16);
  unint64_t v101 = v20;
  if (!v21)
  {
LABEL_55:
    uint64_t v78 = swift_bridgeObjectRelease();
    if ((*(uint64_t (**)(uint64_t))(*(void *)v8 + 464))(v78))
    {
      uint64_t v80 = v79;
      uint64_t v81 = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v80 + 16))(v102, v81, v80);
      swift_bridgeObjectRelease();
      uint64_t v82 = swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v82 = swift_bridgeObjectRelease();
    }
    uint64_t v83 = (uint64_t (**)(uint64_t))(*(void *)v8 + 488);
    uint64_t v84 = *v83;
    if ((*v83)(v82))
    {
      uint64_t v86 = v85;
      uint64_t v87 = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v86 + 8))(v101, v87, v86);
      swift_bridgeObjectRelease();
      uint64_t v88 = swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v88 = swift_bridgeObjectRelease();
    }
    if (!v84(v88))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return CPGUpdatedPosesRelease();
    }
    uint64_t v90 = v89;
    uint64_t v91 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v90 + 16))(v19, v91, v90);
    goto LABEL_63;
  }
  uint64_t v22 = (uint64_t *)(*(void *)&v100 + 32);
  while (1)
  {
    uint64_t v31 = *v22++;
    uint64_t v30 = v31;
    if (CPGUpdatedPosesGetStateBySampleID()) {
      goto LABEL_19;
    }
    if ((v111 - 1) < 2) {
      break;
    }
    if (v111 == 3)
    {
      if (v30 < 0)
      {
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_24B5D40D4(0, v19[2] + 1, 1, v19, &qword_2697CCDB0);
      }
      unint64_t v47 = v19[2];
      unint64_t v46 = v19[3];
      if (v47 >= v46 >> 1) {
        uint64_t v19 = sub_24B5D40D4((void *)(v46 > 1), v47 + 1, 1, v19, &qword_2697CCDB0);
      }
      v19[2] = v47 + 1;
      v19[v47 + 4] = v30;
    }
LABEL_19:
    if (!--v21) {
      goto LABEL_55;
    }
  }
  uint64_t v114 = 0;
  if (!CPGUpdatedPosesCopyObjectTransformBySampleID() && v114)
  {
    char v99 = v19;
    if (v30 < 0) {
      goto LABEL_67;
    }
    uint64_t v94 = v114;
    CPGObjectTransformGetTransformMatrix();
    v115[0] = v103;
    v115[1] = v104;
    v115[2] = v105;
    v115[3] = v106;
    v115[4] = v107;
    v115[5] = v108;
    v115[6] = v109;
    v115[7] = v110;
    *(double *)&long long v32 = sub_24B5F8A08(v115);
    long long v95 = v32;
    long long v96 = v33;
    long long v97 = v34;
    long long v98 = v35;
    unint64_t v36 = v102;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v103.f64[0] = v36;
    unint64_t v39 = sub_24B5D43DC(v30);
    uint64_t v40 = *(void *)(v36 + 16);
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      goto LABEL_69;
    }
    char v43 = v38;
    if (*(void *)(v36 + 24) >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24B5D5CDC();
      }
    }
    else
    {
      sub_24B5D4EC0(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_24B5D43DC(v30);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_73;
      }
      unint64_t v39 = v44;
    }
    uint64_t v19 = v99;
    float64_t v48 = v103.f64[0];
    unint64_t v102 = *(void *)&v103.f64[0];
    if (v43)
    {
      uint64_t v49 = (_OWORD *)(*(void *)(*(void *)&v103.f64[0] + 56) + (v39 << 6));
      long long v50 = v96;
      *uint64_t v49 = v95;
      v49[1] = v50;
      long long v51 = v98;
      v49[2] = v97;
      v49[3] = v51;
    }
    else
    {
      *(void *)(*(void *)&v103.f64[0] + 8 * (v39 >> 6) + 64) |= 1 << v39;
      *(void *)(*(void *)(*(void *)&v48 + 48) + 8 * v39) = v30;
      uint64_t v52 = (_OWORD *)(*(void *)(*(void *)&v48 + 56) + (v39 << 6));
      long long v53 = v96;
      *uint64_t v52 = v95;
      v52[1] = v53;
      long long v54 = v98;
      void v52[2] = v97;
      v52[3] = v54;
      uint64_t v55 = *(void *)(*(void *)&v48 + 16);
      BOOL v56 = __OFADD__(v55, 1);
      uint64_t v57 = v55 + 1;
      if (v56) {
        goto LABEL_71;
      }
      *(void *)(*(void *)&v48 + 16) = v57;
    }
    swift_bridgeObjectRelease();
    CPGObjectTransformRelease();
  }
  uint64_t v113 = 0;
  if (CPGUpdatedPosesCopyCameraBySampleID() || !v113) {
    goto LABEL_19;
  }
  char v99 = v19;
  if (v30 < 0) {
    goto LABEL_68;
  }
  uint64_t v94 = v113;
  CPGCameraGetTransform();
  v112[0] = v103;
  v112[1] = v104;
  v112[2] = v105;
  v112[3] = v106;
  v112[4] = v107;
  v112[5] = v108;
  v112[6] = v109;
  v112[7] = v110;
  *(double *)&long long v58 = sub_24B5F8A08(v112);
  long long v95 = v58;
  long long v96 = v59;
  long long v97 = v60;
  long long v98 = v61;
  float64_t v62 = *(double *)&v101;
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  v103.f64[0] = v62;
  unint64_t v65 = sub_24B5D43DC(v30);
  uint64_t v66 = *(void *)(*(void *)&v62 + 16);
  BOOL v67 = (v64 & 1) == 0;
  uint64_t v68 = v66 + v67;
  if (__OFADD__(v66, v67)) {
    goto LABEL_70;
  }
  char v69 = v64;
  if (*(void *)(*(void *)&v62 + 24) >= v68)
  {
    if ((v63 & 1) == 0) {
      sub_24B5D5CDC();
    }
    goto LABEL_52;
  }
  sub_24B5D4EC0(v68, v63);
  unint64_t v70 = sub_24B5D43DC(v30);
  if ((v69 & 1) == (v71 & 1))
  {
    unint64_t v65 = v70;
LABEL_52:
    uint64_t v19 = v99;
    float64_t v72 = v103.f64[0];
    unint64_t v101 = *(void *)&v103.f64[0];
    if (v69)
    {
      uint64_t v27 = (_OWORD *)(*(void *)(*(void *)&v103.f64[0] + 56) + (v65 << 6));
      long long v28 = v96;
      *uint64_t v27 = v95;
      v27[1] = v28;
      long long v29 = v98;
      void v27[2] = v97;
      v27[3] = v29;
    }
    else
    {
      *(void *)(*(void *)&v103.f64[0] + 8 * (v65 >> 6) + 64) |= 1 << v65;
      *(void *)(*(void *)(*(void *)&v72 + 48) + 8 * v65) = v30;
      os_log_type_t v73 = (_OWORD *)(*(void *)(*(void *)&v72 + 56) + (v65 << 6));
      long long v74 = v96;
      *os_log_type_t v73 = v95;
      v73[1] = v74;
      long long v75 = v98;
      v73[2] = v97;
      __n128 v73[3] = v75;
      uint64_t v76 = *(void *)(*(void *)&v72 + 16);
      BOOL v56 = __OFADD__(v76, 1);
      uint64_t v77 = v76 + 1;
      if (v56) {
        goto LABEL_72;
      }
      *(void *)(*(void *)&v72 + 16) = v77;
    }
    swift_bridgeObjectRelease();
    CPGCameraRelease();
    goto LABEL_19;
  }
LABEL_73:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

uint64_t sub_24B5D2164(uint64_t a1, uint64_t a2)
{
  return sub_24B5D21A0(a1, a2, MEMORY[0x263F36DA0], (uint64_t)&unk_26FE8DA98, (uint64_t)sub_24B5D8454, (uint64_t)&unk_26FE8DAB0);
}

uint64_t sub_24B5D21A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = sub_24B6825D0();
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_24B682640();
  uint64_t v14 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(a2);
  os_log_type_t v17 = *(void **)(v9 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = a5;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = v23;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v17;
  swift_retain();
  sub_24B6825F0();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5D2498(uint64_t a1)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v91 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v91 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  float64_t v100 = (char *)&v91 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  os_log_type_t v17 = (char *)&v91 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v91 - v18;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24B5AFAEC(0xD000000000000029, 0x800000024B68D770);
    return CPGSfmWorldTracksRelease();
  }
  uint64_t v21 = Strong;
  if (*(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed))
  {
    uint64_t v22 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v22, v2);
    uint64_t v23 = sub_24B6824B0();
    os_log_type_t v24 = sub_24B682B20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = v2;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_24B55E000, v23, v24, "Skip track update callback. Backend manager is closed.", v26, 2u);
      uint64_t v27 = v26;
      uint64_t v2 = v25;
      MEMORY[0x24C5D6C00](v27, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return CPGSfmWorldTracksRelease();
  }
  long long v95 = v17;
  uint64_t Count = CPGSfmWorldTracksGetCount();
  uint64_t v29 = sub_24B57CBE8();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  if (Count < 1)
  {
    v30(v9, v29, v2);
    BOOL v67 = sub_24B6824B0();
    os_log_type_t v68 = sub_24B682B20();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = v2;
      unint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v70 = 0;
      _os_log_impl(&dword_24B55E000, v67, v68, "Failed to fetch non-empty mobile sfm point cloud.", v70, 2u);
      char v71 = v70;
      uint64_t v2 = v69;
      MEMORY[0x24C5D6C00](v71, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    return CPGSfmWorldTracksRelease();
  }
  uint64_t v96 = v29;
  uint64_t v98 = v3 + 16;
  long long v97 = v30;
  ((void (*)(char *))v30)(v19);
  uint64_t v31 = sub_24B6824B0();
  os_log_type_t v32 = sub_24B682B30();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v102 = v21;
  if (v33)
  {
    long long v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)long long v34 = 134349056;
    uint64_t v21 = v102;
    id v105 = (id)Count;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v31, v32, "Fetched mobile sfm point cloud of size = %{public}ld", v34, 0xCu);
    MEMORY[0x24C5D6C00](v34, -1, -1);
  }

  long long v35 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v99 = v3 + 8;
  v35(v19, v2);
  uint64_t Positions = CPGSfmWorldTracksGetPositions();
  if (!Positions
    || (uint64_t v37 = (double *)Positions, (Normals = CPGSfmWorldTracksGetNormals()) == 0)
    || (unint64_t v39 = (float64x2_t *)Normals, (Colors = CPGSfmWorldTracksGetColors()) == 0))
  {
    v97(v12, v96, v2);
    float64_t v62 = sub_24B6824B0();
    os_log_type_t v63 = sub_24B682B20();
    if (os_log_type_enabled(v62, v63))
    {
      char v64 = v35;
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v65 = 0;
      _os_log_impl(&dword_24B55E000, v62, v63, "Failed to get positions/normals/colors of world tracks.", v65, 2u);
      uint64_t v66 = v65;
      long long v35 = v64;
      MEMORY[0x24C5D6C00](v66, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    v35(v12, v2);
    return CPGSfmWorldTracksRelease();
  }
  BOOL v41 = (int *)Colors;
  char v92 = v35;
  uint64_t v94 = v2;
  uint64_t v93 = a1;
  unint64_t v101 = *(float (**)(void))(*(void *)v21 + 656);
  uint64_t v42 = (void *)MEMORY[0x263F8EE78];
  do
  {
    double v43 = *v37;
    unint64_t v44 = v101;
    float v45 = v101();
    double v46 = v37[1];
    float v47 = v44();
    double v48 = v37[2];
    float v49 = v44();
    float64x2_t v103 = *v39;
    double v50 = v39[1].f64[0];
    int v51 = sub_24B5F9698(*v41);
    uint64_t v52 = v41 + 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v42 = sub_24B5D41E0(0, v42[2] + 1, 1, v42);
    }
    unint64_t v54 = v42[2];
    unint64_t v53 = v42[3];
    if (v54 >= v53 >> 1) {
      uint64_t v42 = sub_24B5D41E0((void *)(v53 > 1), v54 + 1, 1, v42);
    }
    float v55 = v43;
    float v56 = v46;
    float v57 = v48;
    *(float *)&long long v58 = v55 / v45;
    *((float *)&v58 + 1) = v56 / v47;
    *((void *)&v58 + 1) = COERCE_UNSIGNED_INT(v57 / v49);
    *(float32x2_t *)&long long v59 = vcvt_f32_f64(v103);
    *(float *)&unsigned int v60 = v50;
    *((void *)&v59 + 1) = v60;
    void v42[2] = v54 + 1;
    uint64_t v61 = (uint64_t)&v42[6 * v54 + 4];
    *(_OWORD *)uint64_t v61 = v58;
    *(_OWORD *)(v61 + 16) = v59;
    *(_DWORD *)(v61 + 32) = v51;
    *(_DWORD *)(v61 + 36) = 0;
    v39 += 2;
    v37 += 4;
    --Count;
    BOOL v41 = v52;
  }
  while (Count);
  id v105 = 0;
  swift_bridgeObjectRetain();
  int v72 = OCDataBufferCreateWithIOSurface();
  id v73 = v105;
  uint64_t result = swift_bridgeObjectRelease();
  if (v72)
  {
    swift_bridgeObjectRelease();
    long long v75 = v100;
    uint64_t v76 = v94;
    v97(v100, v96, v94);
    uint64_t v77 = sub_24B6824B0();
    os_log_type_t v78 = sub_24B682B20();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl(&dword_24B55E000, v77, v78, "Failed to convert world tracks to data buffer.", v79, 2u);
      MEMORY[0x24C5D6C00](v79, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    v92(v75, v76);
LABEL_42:

    return CPGSfmWorldTracksRelease();
  }
  uint64_t v80 = v94;
  if (v73)
  {
    type metadata accessor for OCDataBuffer();
    id v81 = v73;
    swift_bridgeObjectRelease();
    uint64_t v82 = sub_24B681D6C((uint64_t)v81);
    uint64_t v83 = v95;
    v97(v95, v96, v80);
    uint64_t v84 = sub_24B6824B0();
    os_log_type_t v85 = sub_24B682B30();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v86 = 134349056;
      uint64_t v104 = (*(uint64_t (**)(void))(*(void *)v82 + 96))();
      uint64_t v83 = v95;
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v84, v85, "Data buffer size of mobile sfm point cloud is %{public}ld", v86, 0xCu);
      MEMORY[0x24C5D6C00](v86, -1, -1);
    }

    uint64_t v87 = ((uint64_t (*)(char *, uint64_t))v92)(v83, v94);
    if ((*(uint64_t (**)(uint64_t))(*(void *)v102 + 536))(v87))
    {
      uint64_t v89 = v88;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 8))(v82, ObjectType, v89);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    swift_release();
    goto LABEL_42;
  }
  __break(1u);
  return result;
}

void sub_24B5D2EF4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (CPGLocalizationUpdatesGetState() != 1 || !CPGLocalizationUpdatesGetObjectTransform())
  {
    if (!(*(uint64_t (**)(void))(*(void *)v5 + 464))()) {
      return;
    }
    uint64_t v17 = v16;
    uint64_t ObjectType = swift_getObjectType();
    v19.n128_u64[1] = 0;
    memset(v22, 0, sizeof(v22));
    LOBYTE(v23) = 1;
    if ((a3 & 0x8000000000000000) == 0)
    {
      v19.n128_f64[0] = a1;
      (*(void (**)(float64x2_t *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v17 + 8))(v22, a3, a5, ObjectType, v17, v19);
      goto LABEL_9;
    }
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  if (!(*(uint64_t (**)(void))(*(void *)v5 + 464))()) {
    return;
  }
  uint64_t v10 = v9;
  uint64_t v11 = swift_getObjectType();
  CPGObjectTransformGetTransformMatrix();
  v12.n128_f64[0] = sub_24B5F8A08(v22);
  v20[0] = v12;
  v20[1] = v13;
  id v20[2] = v14;
  v20[3] = v15;
  char v21 = 0;
  if (a3 < 0) {
    goto LABEL_14;
  }
  v12.n128_f64[0] = a1;
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 8))(v20, a3, a5, v11, v10, v12);
LABEL_9:

  swift_unknownObjectRelease();
}

uint64_t sub_24B5D30C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6825D0();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24B682640();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGFinalizeInputResultRetain();
  __n128 v12 = *(void **)(v3 + OBJC_IVAR____TtC6CoreOC9PGManager_addSampleQueue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  long long v14 = (void *)swift_allocObject();
  unsigned char v14[2] = a2;
  void v14[3] = v13;
  v14[4] = a1;
  aBlock[4] = sub_24B5D8494;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8DB00;
  long long v15 = _Block_copy(aBlock);
  id v16 = v12;
  swift_retain();
  sub_24B6825F0();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5D33CC()
{
  v27[5] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v27 - v5;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    char v9 = *(unsigned char *)(Strong + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed);
    uint64_t v10 = sub_24B57CBE8();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    if (v9)
    {
      v11(v4, v10, v0);
      __n128 v12 = sub_24B6824B0();
      os_log_type_t v13 = sub_24B682B20();
      if (os_log_type_enabled(v12, v13))
      {
        long long v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v14 = 0;
        _os_log_impl(&dword_24B55E000, v12, v13, "Skip finalize input callback exited. Backend Manager is closed.", v14, 2u);
        MEMORY[0x24C5D6C00](v14, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    }
    else
    {
      v11(v6, v10, v0);
      long long v15 = sub_24B6824B0();
      os_log_type_t v16 = sub_24B682B30();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_24B55E000, v15, v16, "Finalize input Swift callback", v17, 2u);
        MEMORY[0x24C5D6C00](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      Errorint Code = CPGFinalizeInputResultGetErrorCode();
      int v19 = ErrorCode;
      if (ErrorCode)
      {
        uint64_t v20 = 0;
        BOOL v21 = 1;
      }
      else
      {
        v27[1] = 0;
        Errorint Code = CPGRequestCreateWithDetail();
        uint64_t v20 = 0;
        BOOL v21 = ErrorCode != 0;
        if (!ErrorCode)
        {
          CPGSessionGetEstimatedProcessingTime();
          uint64_t v20 = v22;
          Errorint Code = CPGRequestRelease();
        }
      }
      if ((*(uint64_t (**)(uint64_t))(*(void *)v8 + 512))(ErrorCode))
      {
        uint64_t v24 = v23;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(BOOL, uint64_t, BOOL, uint64_t, uint64_t))(v24 + 8))(v19 == 0, v20, v21, ObjectType, v24);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    sub_24B5AFAEC(0xD000000000000030, 0x800000024B68D730);
  }
  return CPGFinalizeInputResultRelease();
}

uint64_t sub_24B5D3784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v7 = sub_24B6824D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PhotogrammetrySession.Output(0);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PhotogrammetrySession.Result(0);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_isClosed) & 1) == 0)
  {
    uint64_t v22 = swift_beginAccess();
    if (*(unsigned char *)(a2 + 16) == 1)
    {
      uint64_t v23 = sub_24B6822E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v16, a3, v23);
      uint64_t v24 = swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(v24);
      if (result)
      {
        uint64_t v26 = v25;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v28 = (uint64_t)&v13[*(int *)(sub_24B562F04(&qword_2697CC640) + 48)];
        sub_24B5D9F60(v38, (uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
        sub_24B5D9F60((uint64_t)v16, v28, type metadata accessor for PhotogrammetrySession.Result);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 8))(v13, ObjectType, v26);
        swift_unknownObjectRelease();
        uint64_t result = sub_24B5DA128((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      BOOL v30 = __OFSUB__(v29, 1);
      uint64_t v31 = v29 - 1;
      if (!v30)
      {
        *(void *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v31;
        sub_24B5BFBEC();
        return sub_24B5DA128((uint64_t)v16, type metadata accessor for PhotogrammetrySession.Result);
      }
      __break(1u);
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 440))(v22);
      if (result)
      {
        uint64_t v33 = v32;
        uint64_t v34 = swift_getObjectType();
        long long v35 = &v13[*(int *)(sub_24B562F04(&qword_2697CC638) + 48)];
        sub_24B5D9F60(v38, (uint64_t)v13, type metadata accessor for PhotogrammetrySession.Request);
        *(void *)long long v35 = 5;
        v35[8] = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 8))(v13, v34, v33);
        swift_unknownObjectRelease();
        uint64_t result = sub_24B5DA128((uint64_t)v13, type metadata accessor for PhotogrammetrySession.Output);
      }
      uint64_t v36 = *(void *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum);
      BOOL v30 = __OFSUB__(v36, 1);
      uint64_t v37 = v36 - 1;
      if (!v30)
      {
        *(void *)(a1 + OBJC_IVAR____TtC6CoreOC9PGManager_requestNum) = v37;
        return sub_24B5BFBEC();
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v17 = sub_24B57CBE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17, v7);
  uint64_t v18 = sub_24B6824B0();
  os_log_type_t v19 = sub_24B682B20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_24B55E000, v18, v19, "Defer in copy fails. Backend manager is closed.", v20, 2u);
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24B5D3C4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    os_log_type_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC658);
  uint64_t v10 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  os_log_type_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24B682EE0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24B5D8990(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_24B5D3EB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC198);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      os_log_type_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      os_log_type_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B5D919C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24B5D3FC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC620);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      os_log_type_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      os_log_type_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B5D9538(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24B5D40D4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_24B562F04(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      void v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      size_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B565114(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_24B5D41E0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC6B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24B567938(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5D4308(uint64_t a1)
{
  sub_24B5DA080();
  uint64_t v2 = sub_24B682750();
  return sub_24B5D4418(a1, v2);
}

unint64_t sub_24B5D4374(uint64_t a1)
{
  sub_24B683090();
  sub_24B6830A0();
  uint64_t v2 = sub_24B6830D0();
  return sub_24B5D44E0(a1, v2);
}

unint64_t sub_24B5D43DC(uint64_t a1)
{
  uint64_t v2 = sub_24B683080();
  return sub_24B5D44E0(a1, v2);
}

unint64_t sub_24B5D4418(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_24B5DA0D4();
    do
    {
      if (sub_24B682780()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24B5D44E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_24B5D457C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CC6E0);
  uint64_t result = sub_24B682F20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      int v22 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v17);
      uint64_t result = sub_24B683080();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(_DWORD *)(*(void *)(v7 + 56) + 4 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B5D481C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24B562F04(&qword_2697CC668);
  int v38 = a2;
  uint64_t result = sub_24B682F20();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v34 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v38) {
        sub_24B5D9EF8(v25, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      }
      else {
        sub_24B5D9F60(v25, (uint64_t)v7, type metadata accessor for PhotogrammetrySession.Request);
      }
      sub_24B683090();
      sub_24B6830A0();
      uint64_t result = sub_24B6830D0();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
      uint64_t result = sub_24B5D9EF8((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, type metadata accessor for PhotogrammetrySession.Request);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24B5D4BC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CC618);
  uint64_t result = sub_24B682F20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    int64_t v8 = 0;
    unint64_t v39 = (uint64_t *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = v3;
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v17 >= v38) {
          goto LABEL_31;
        }
        unint64_t v18 = v39[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v38) {
            goto LABEL_31;
          }
          unint64_t v18 = v39[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v38)
            {
LABEL_31:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_38;
              }
              if (v35 >= 64) {
                bzero(v39, 8 * v38);
              }
              else {
                *unint64_t v39 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v39[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v38) {
                  goto LABEL_31;
                }
                unint64_t v18 = v39[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 80 * v16;
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v44 = *(unsigned char *)(v20 + 64);
      uint64_t v42 = *(void *)(v20 + 48);
      uint64_t v43 = *(void *)(v20 + 56);
      uint64_t v22 = *(void *)(v20 + 32);
      uint64_t v41 = *(void *)(v20 + 40);
      uint64_t v23 = *(void *)(v20 + 16);
      uint64_t v24 = *(void *)(v20 + 24);
      uint64_t v25 = *(void *)v20;
      uint64_t v26 = *(void *)(v20 + 8);
      uint64_t result = sub_24B683080();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v12 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 80 * v13;
      *(void *)uint64_t v14 = v25;
      *(void *)(v14 + 8) = v26;
      *(void *)(v14 + 16) = v23;
      *(void *)(v14 + 24) = v24;
      *(void *)(v14 + 32) = v22;
      *(void *)(v14 + 40) = v41;
      *(void *)(v14 + 48) = v42;
      *(void *)(v14 + 56) = v43;
      *(unsigned char *)(v14 + 64) = v44;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B5D4EC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CCD70);
  uint64_t result = sub_24B682F20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    uint64_t v33 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v33;
                goto LABEL_38;
              }
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v31;
              }
              uint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
      uint64_t v23 = (long long *)(*(void *)(v5 + 56) + (v18 << 6));
      long long v37 = v23[2];
      long long v38 = v23[3];
      long long v35 = *v23;
      long long v36 = v23[1];
      uint64_t result = sub_24B683080();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
      unint64_t v16 = (_OWORD *)(*(void *)(v7 + 56) + (v15 << 6));
      *unint64_t v16 = v35;
      v16[1] = v36;
      v16[2] = v37;
      v16[3] = v38;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_24B5D518C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24B682D90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24B683090();
        sub_24B6830A0();
        uint64_t result = sub_24B6830D0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v3);
        unint64_t v12 = (void *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *int64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24B5D5380(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24B5D4374(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24B5D58B0();
      goto LABEL_7;
    }
    sub_24B5D481C(v13, a3 & 1);
    unint64_t v20 = sub_24B5D4374(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      int64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8) + 72) * v10;
    return sub_24B5DA01C(a1, v18);
  }
LABEL_13:

  return sub_24B5D55FC(v10, a2, a1, v16);
}

uint64_t sub_24B5D54CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24B5D43DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    int64_t v16 = *v4;
    if (v14) {
      return sub_24B56CF38(a1, v16[7] + 80 * v10, &qword_2697CC9A0);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_24B5D5B2C();
    goto LABEL_7;
  }
  sub_24B5D4BC0(v13, a3 & 1);
  unint64_t v18 = sub_24B5D43DC(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v18;
  int64_t v16 = *v4;
  if (v14) {
    return sub_24B56CF38(a1, v16[7] + 80 * v10, &qword_2697CC9A0);
  }
LABEL_11:

  return sub_24B5D56A4(v10, a2, a1, v16);
}

uint64_t sub_24B5D55FC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t result = sub_24B5D9EF8(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, type metadata accessor for PhotogrammetrySession.Request);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_24B5D56A4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_24B56CF38(a3, a4[7] + 80 * a1, &qword_2697CC9A0);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_24B5D571C()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CC6E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 4 * v15;
    int v19 = *(_DWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_DWORD *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24B5D58B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC668);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24B682F10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_24B5D9F60(*(void *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for PhotogrammetrySession.Request);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    uint64_t result = (void *)sub_24B5D9EF8((uint64_t)v4, *(void *)(v7 + 56) + v20, type metadata accessor for PhotogrammetrySession.Request);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24B5D5B2C()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CC618);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v29 = __clz(__rbit64(v27));
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = v29 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 80 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 64);
    long long v21 = *(_OWORD *)v19;
    long long v22 = *(_OWORD *)(v19 + 16);
    long long v23 = *(_OWORD *)(v19 + 32);
    long long v24 = *(_OWORD *)(v19 + 48);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v25 = v21;
    *(_OWORD *)(v25 + 16) = v22;
    *(_OWORD *)(v25 + 32) = v23;
    *(_OWORD *)(v25 + 48) = v24;
    *(unsigned char *)(v25 + 64) = v20;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24B5D5CDC()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CCD70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v28 = __clz(__rbit64(v26));
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = v28 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t v18 = v15 << 6;
    uint64_t v19 = (long long *)(*(void *)(v2 + 56) + v18);
    long long v20 = *v19;
    long long v21 = v19[1];
    long long v22 = v19[2];
    long long v23 = v19[3];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    long long v24 = (_OWORD *)(*(void *)(v4 + 56) + v18);
    *long long v24 = v20;
    v24[1] = v21;
    void v24[2] = v22;
    v24[3] = v23;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24B5D5E80(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_24B5DA358(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_24B682750();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      long long v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_24B5DA358(&qword_2697CC6C0, MEMORY[0x263F06EA8]);
      char v21 = sub_24B682780();
      long long v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B5D65A0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_24B5D61A4()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24B6822E0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_24B562F04(&qword_2697CC6C8);
  uint64_t v5 = sub_24B682E10();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    long long v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    long long v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_24B5DA358(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
      uint64_t result = sub_24B682750();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_24B5D65A0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_24B5D61A4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_24B5D6840();
      goto LABEL_12;
    }
    sub_24B5D6AE4();
  }
  uint64_t v12 = *v3;
  sub_24B5DA358(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
  uint64_t v13 = sub_24B682750();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_24B5DA358(&qword_2697CC6C0, MEMORY[0x263F06EA8]);
      char v21 = sub_24B682780();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_24B682FE0();
  __break(1u);
  return result;
}

void *sub_24B5D6840()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC6C8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24B682E00();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24B5D6AE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_24B562F04(&qword_2697CC6C8);
  uint64_t v7 = sub_24B682E10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_24B5DA358(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
    uint64_t result = sub_24B682750();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_24B5D6E94(void *a1)
{
  return sub_24B5D3EB4(0, a1[2], 0, a1);
}

uint64_t sub_24B5D6EA8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  BOOL v8 = ((a1 & 1) == 0) != (a5 & 1) && HIDWORD(a1) == HIDWORD(a5);
  uint64_t result = 0;
  if (v8 && a2 == a6)
  {
    if (a3)
    {
      if (!a7 || a3 != a7) {
        return result;
      }
    }
    else if (a7)
    {
      return result;
    }
    if (((a4 ^ a8) & 1) == 0) {
      return ((a4 & 0x100) == 0) ^ ((unsigned __int16)(a8 & 0x100) >> 8);
    }
  }
  return result;
}

unint64_t sub_24B5D6F04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_24B562F04(a2);
    uint64_t v4 = (void *)sub_24B682F30();
    for (unint64_t i = (_DWORD *)(a1 + 40); ; i += 4)
    {
      uint64_t v6 = *((void *)i - 1);
      int v7 = *i;
      unint64_t result = sub_24B5D43DC(v6);
      if (v9) {
        break;
      }
      *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v4[6] + 8 * result) = v6;
      *(_DWORD *)(v4[7] + 4 * result) = v7;
      uint64_t v10 = v4[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      CVPixelBufferRef v4[2] = v12;
      if (!--v2) {
        return (unint64_t)v4;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B5D6FD8()
{
  unint64_t result = qword_2697CC5B0;
  if (!qword_2697CC5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC5B0);
  }
  return result;
}

unint64_t sub_24B5D702C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC618);
    uint64_t v3 = (void *)sub_24B682F30();
    for (unint64_t i = (uint64_t *)(a1 + 56); ; i += 12)
    {
      uint64_t v19 = v1;
      uint64_t v5 = *(i - 3);
      uint64_t v6 = *(i - 1);
      uint64_t v7 = *i;
      uint64_t v9 = i[1];
      uint64_t v8 = i[2];
      uint64_t v11 = i[3];
      uint64_t v10 = i[4];
      uint64_t v12 = i[5];
      uint64_t v21 = i[6];
      char v20 = *((unsigned char *)i + 56);
      unint64_t result = sub_24B5D43DC(v5);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v15 = v3[7] + 80 * result;
      *(void *)uint64_t v15 = v6;
      *(void *)(v15 + 8) = v7;
      *(void *)(v15 + 16) = v9;
      *(void *)(v15 + 24) = v8;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v10;
      *(void *)(v15 + 48) = v12;
      *(void *)(v15 + 56) = v21;
      *(unsigned char *)(v15 + 64) = v20;
      uint64_t v16 = v3[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      v3[2] = v18;
      uint64_t v1 = v19 - 1;
      if (v19 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B5D715C(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC6D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_24B562F04(&qword_2697CC668);
    uint64_t v7 = (void *)sub_24B682F30();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_24B563A6C(v9, (uint64_t)v5, &qword_2697CC6D0);
      uint64_t v11 = *v5;
      unint64_t result = sub_24B5D4374(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for PhotogrammetrySession.Request(0);
      unint64_t result = sub_24B5D9EF8(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, type metadata accessor for PhotogrammetrySession.Request);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B5D7320(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CCD70);
    uint64_t v3 = (void *)sub_24B682F30();
    for (unint64_t i = (_OWORD *)(a1 + 48); ; i += 5)
    {
      uint64_t v5 = *((void *)i - 2);
      long long v14 = i[1];
      long long v15 = *i;
      long long v12 = i[3];
      long long v13 = i[2];
      unint64_t result = sub_24B5D43DC(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v8 = (_OWORD *)(v3[7] + (result << 6));
      *uint64_t v8 = v15;
      v8[1] = v14;
      v8[2] = v13;
      void v8[3] = v12;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_24B5D7424()
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  char v7 = (char *)v49 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  BOOL v10 = (char *)v49 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v13 = (char *)v49 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v49 - v15;
  MEMORY[0x270FA5388](v14);
  BOOL v18 = (char *)v49 - v17;
  type metadata accessor for ObjectCaptureImageFolderReader();
  v49[0] = sub_24B581778();
  uint64_t v21 = v1;
  if (!CPGSessionOptionsCreate())
  {
    uint64_t v27 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v27, v0);
    unint64_t v28 = sub_24B6824B0();
    os_log_type_t v29 = sub_24B682B20();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v30 = 0;
      _os_log_impl(&dword_24B55E000, v28, v29, "Failed to create session options!", v30, 2u);
      MEMORY[0x24C5D6C00](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    CPGSessionOptionsRelease();
    goto LABEL_2;
  }
  uint64_t v22 = v0;
  if (CPGSessionOptionsSetAutoMaskingEnabled())
  {
    uint64_t v23 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v7, v23, v0);
    uint64_t v24 = sub_24B6824B0();
    os_log_type_t v25 = sub_24B682B20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_24B55E000, v24, v25, "Failed to enable auto masking in session options!", v26, 2u);
      MEMORY[0x24C5D6C00](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v0);
    CPGSessionOptionsRelease();
  }
  else
  {
    if (*sub_24B5F7424() == 1)
    {
      int v31 = CPGSessionOptionsSetReconstructionPowerSetting();
      uint64_t v32 = sub_24B57CBE8();
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      if (v31)
      {
        v33(v16, v32, v0);
        uint64_t v34 = sub_24B6824B0();
        os_log_type_t v35 = sub_24B682B20();
        if (os_log_type_enabled(v34, v35))
        {
          int64_t v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int64_t v36 = 0;
          _os_log_impl(&dword_24B55E000, v34, v35, "Failed to set reconstruction power setting in session options!", v36, 2u);
          MEMORY[0x24C5D6C00](v36, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v0);
        CPGSessionOptionsRelease();
        goto LABEL_2;
      }
      v33(v18, v32, v0);
      uint64_t v37 = sub_24B6824B0();
      os_log_type_t v38 = sub_24B682B30();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl(&dword_24B55E000, v37, v38, "Use low power mode to reconstruct on iPhones.", v39, 2u);
        MEMORY[0x24C5D6C00](v39, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v0);
    }
    uint64_t v50 = 0;
    if (CPGRequestCreateWithDetail() || !v50)
    {
      uint64_t v40 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v10, v40, v0);
      uint64_t v41 = sub_24B6824B0();
      os_log_type_t v42 = sub_24B682B20();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_24B55E000, v41, v42, "Failed to create request with detail level!", v43, 2u);
        MEMORY[0x24C5D6C00](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
    }
    else
    {
      CPGSessionGetEstimatedProcessingTimeByNumberOfPixels();
      if (v44 > 0.0)
      {
        double v19 = v44;
        CPGRequestRelease();
        CPGSessionOptionsRelease();
        return *(void *)&v19;
      }
      uint64_t v45 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v13, v45, v0);
      double v46 = sub_24B6824B0();
      os_log_type_t v47 = sub_24B682B20();
      if (os_log_type_enabled(v46, v47))
      {
        double v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v48 = 0;
        _os_log_impl(&dword_24B55E000, v46, v47, "Failed to get estimated processing time by number of pixels!", v48, 2u);
        MEMORY[0x24C5D6C00](v48, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v22);
    }
    CPGRequestRelease();
    CPGSessionOptionsRelease();
  }
LABEL_2:
  double v19 = 0.0;
  return *(void *)&v19;
}

uint64_t sub_24B5D7ABC()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CPGSessionOptionsSetAutoMaskingEnabled())
  {
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD00000000000002DLL;
    uint64_t v5 = "CPGSessionOptionsSetAutoMaskingEnabled failed";
  }
  else
  {
    if (*sub_24B5F7424() == 1)
    {
      if (CPGSessionOptionsSetReconstructionPowerSetting())
      {
        sub_24B5D7D94();
        swift_allocError();
        *(void *)uint64_t v4 = 0xD000000000000035;
        uint64_t v5 = "CPGSessionOptionsSetReconstructionPowerSetting failed";
        goto LABEL_11;
      }
      uint64_t v6 = sub_24B57CBE8();
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
      uint64_t v12 = sub_24B6824B0();
      os_log_type_t v7 = sub_24B682B30();
      int v11 = v7;
      if (os_log_type_enabled(v12, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        BOOL v10 = v8;
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_24B55E000, v12, (os_log_type_t)v11, "Using low power mode for reconstruction on iPhones", v8, 2u);
        MEMORY[0x24C5D6C00](v10, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    CPGSfmOptionsSetSampleOrdering();
    CPGSfmOptionsSetFeatureSensitivity();
    CPGSfmOptionsSetProcessingMode();
    CPGSfmOptionsSetUsePriors();
    CPGSfmOptionsSetPowerSetting();
    uint64_t result = CPGSessionOptionsSetSfmOptions();
    if (!result) {
      return result;
    }
    sub_24B5D7D94();
    swift_allocError();
    *(void *)uint64_t v4 = 0xD000000000000026;
    uint64_t v5 = "CPGSessionOptionsSetSfmOptions failed!";
  }
LABEL_11:
  *(void *)(v4 + 8) = (unint64_t)(v5 - 32) | 0x8000000000000000;
  *(unsigned char *)(v4 + 16) = 1;
  return swift_willThrow();
}

unint64_t sub_24B5D7D94()
{
  unint64_t result = qword_2697CC5B8;
  if (!qword_2697CC5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC5B8);
  }
  return result;
}

uint64_t type metadata accessor for PGManager()
{
  uint64_t result = qword_2697CE460;
  if (!qword_2697CE460) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24B5D7E34()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B5D7E70()
{
  return sub_24B5D8330((uint64_t (*)(uint64_t, uint64_t))sub_24B5B8850);
}

uint64_t sub_24B5D7E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B5D7E98()
{
  return swift_release();
}

uint64_t sub_24B5D7EA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24B566158(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5D7EF4()
{
  return sub_24B5B9490(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B5D7EFC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 96, 15);
}

uint64_t sub_24B5D7F34()
{
  return sub_24B5BA170(v0[2], v0[3], v0[4], v0[5], v0[1].i64[0], v0[1].u64[1]);
}

uint64_t sub_24B5D7F44()
{
  return sub_24B5BADD4();
}

uint64_t sub_24B5D7F4C()
{
  return sub_24B5BBCF8(v0);
}

uint64_t sub_24B5D7F54()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5D7F68()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5D7FA8()
{
  return sub_24B5BBE24(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_24B5D7FB0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5D7FC4()
{
  return sub_24B5BBA0C(v0[2], v0[3], v0[4]);
}

uint64_t sub_24B5D7FD0()
{
  return sub_24B5BD65C();
}

uint64_t sub_24B5D7FD8()
{
  return sub_24B5BDFDC();
}

uint64_t sub_24B5D7FE0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5D7FF4()
{
  uint64_t v1 = (int *)type metadata accessor for PhotogrammetrySample(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[12];
  uint64_t v7 = type metadata accessor for PhotogrammetrySample.Camera(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v18 = v4;
    uint64_t v8 = v6 + *(int *)(v7 + 28);
    uint64_t v9 = sub_24B682C80();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }

    uint64_t v4 = v18;
  }

  uint64_t v11 = v5 + v1[18];
  uint64_t v12 = sub_24B6823B0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = v5 + v1[19];
  uint64_t v15 = sub_24B682410();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24B5D8318()
{
  return sub_24B5D8330((uint64_t (*)(uint64_t, uint64_t))sub_24B5BE6DC);
}

uint64_t sub_24B5D8330(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PhotogrammetrySample(0) - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_24B5D83A8()
{
  return sub_24B5BF44C();
}

uint64_t sub_24B5D83B0()
{
  return sub_24B5CDC3C(v0[2], v0[3], v0[4]);
}

uint64_t sub_24B5D83BC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24B5D83F4()
{
  return sub_24B5CDED0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B5D8400()
{
  return sub_24B5D01B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24B5D840C()
{
  return sub_24B5D1604();
}

uint64_t sub_24B5D8414()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5D844C()
{
  return sub_24B5D1834();
}

uint64_t sub_24B5D8454()
{
  return sub_24B5D2498(*(void *)(v0 + 16));
}

uint64_t sub_24B5D845C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24B5D8494()
{
  return sub_24B5D33CC();
}

uint64_t sub_24B5D84A4()
{
  return type metadata accessor for PGManager();
}

void sub_24B5D84AC()
{
  sub_24B5D8678(319, (unint64_t *)&qword_2697CC5D8, MEMORY[0x263F06EA8]);
  if (v0 <= 0x3F)
  {
    sub_24B5D8678(319, &qword_2697CC5E0, (void (*)(uint64_t))type metadata accessor for PhotogrammetrySession.Request);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_24B5D8678(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24B682CC0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24B5D86D0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for PGManager.Error(uint64_t a1)
{
  return sub_24B5D86F8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24B5D86F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 6u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6CoreOC9PGManagerC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24B5D86D0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PGManager.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24B5D86D0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24B5D86F8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PGManager.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24B5D86F8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PGManager.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PGManager.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24B5D8888(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24B5D8890(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PGManager.Error()
{
  return &type metadata for PGManager.Error;
}

__n128 initializeWithCopy for PGManager.Configuration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PGManager.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[26]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PGManager.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PGManager.Configuration()
{
  return &type metadata for PGManager.Configuration;
}

void type metadata accessor for CPGSfmFeatureSensitivity(uint64_t a1)
{
}

void type metadata accessor for CPGSfmSampleOrdering(uint64_t a1)
{
}

uint64_t sub_24B5D8990(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5D8AE8(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2);
  unsigned __int8 v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
    uint64_t v8 = sub_24B6824B0();
    os_log_type_t v9 = sub_24B682B30();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_24B55E000, v8, v9, "Processing warning generated.", v10, 2u);
      MEMORY[0x24C5D6C00](v10, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_24B5D8C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  uint64_t v26 = a1;
  uint64_t v33 = sub_24B6825D0();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24B682640();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  int v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PhotogrammetrySession.Request(0);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = sub_24B6822E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6825E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  CPGOutputRetain();
  sub_24B5658E8();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F080], v12);
  uint64_t v28 = sub_24B682C10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v29, v8);
  sub_24B5D9F60(v30, (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PhotogrammetrySession.Request);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v27 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v26;
  *(void *)(v19 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v11, v8);
  sub_24B5D9EF8((uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for PhotogrammetrySession.Request);
  aBlock[4] = sub_24B5DA314;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8DCC0;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v21 = v31;
  sub_24B6825F0();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_24B5DA358((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5D7EA0((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  uint64_t v23 = v32;
  uint64_t v22 = v33;
  sub_24B682D80();
  uint64_t v24 = (void *)v28;
  MEMORY[0x24C5D4CD0](0, v21, v23, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v22);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v35);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5D919C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5D9290(uint64_t a1)
{
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_24B562F04(&qword_2697CC1F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_24B5DA358(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
  uint64_t v29 = sub_24B682AB0();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    os_log_type_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_24B5D5E80(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

char *sub_24B5D9538(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5D9624(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  size_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v57 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t SfmMap = CPGOutputGetSfmMap();
  if (!SfmMap)
  {
    uint64_t v34 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v34, v2);
    uint64_t v35 = sub_24B6824B0();
    os_log_type_t v36 = sub_24B682B20();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v61 = a1;
      uint64_t v62 = v38;
      unsigned int v60 = (void (**)(char *, uint64_t, uint64_t))v2;
      *(_DWORD *)uint64_t v37 = 136446210;
      uint64_t v39 = sub_24B682820();
      uint64_t v61 = sub_24B5627B8(v39, v40, &v62);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v35, v36, "Can't get SfM map from native output %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v38, -1, -1);
      MEMORY[0x24C5D6C00](v37, -1, -1);

      (*(void (**)(char *, void (**)(char *, uint64_t, uint64_t)))(v3 + 8))(v6, v60);
      return MEMORY[0x263F8EE78];
    }

    double v48 = *(void (**)(char *, uint64_t))(v3 + 8);
    float v49 = v6;
LABEL_27:
    v48(v49, v2);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = SfmMap;
  uint64_t v17 = CPGSfmMapCopyAllSampleIDs();
  if (!v17)
  {
    uint64_t v41 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v41, v2);
    os_log_type_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, v43))
    {
      double v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v61 = v16;
      uint64_t v62 = v45;
      unsigned int v60 = (void (**)(char *, uint64_t, uint64_t))v2;
      *(_DWORD *)double v44 = 136446210;
      uint64_t v46 = sub_24B682820();
      uint64_t v61 = sub_24B5627B8(v46, v47, &v62);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v42, v43, "Can't get sample ids from SfM map %{public}s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v45, -1, -1);
      MEMORY[0x24C5D6C00](v44, -1, -1);

      (*(void (**)(char *, void (**)(char *, uint64_t, uint64_t)))(v3 + 8))(v9, v60);
      return MEMORY[0x263F8EE78];
    }

    double v48 = *(void (**)(char *, uint64_t))(v3 + 8);
    float v49 = v9;
    goto LABEL_27;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v62 = 0;
  sub_24B682990();

  uint64_t v20 = v62;
  if (!v62)
  {
    uint64_t v50 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v50, v2);
    uint64_t v51 = sub_24B6824B0();
    os_log_type_t v52 = sub_24B682B20();
    if (os_log_type_enabled(v51, v52))
    {
      unint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v61 = (uint64_t)v18;
      uint64_t v62 = v54;
      unsigned int v60 = (void (**)(char *, uint64_t, uint64_t))v2;
      *(_DWORD *)unint64_t v53 = 136446210;
      sub_24B562F04(&qword_2697CC608);
      uint64_t v55 = sub_24B682820();
      uint64_t v61 = sub_24B5627B8(v55, v56, &v62);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v51, v52, "Can't convert sample ids array: %{public}s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v54, -1, -1);
      MEMORY[0x24C5D6C00](v53, -1, -1);

      (*(void (**)(char *, void (**)(char *, uint64_t, uint64_t)))(v3 + 8))(v12, v60);
      return MEMORY[0x263F8EE78];
    }

    double v48 = *(void (**)(char *, uint64_t))(v3 + 8);
    float v49 = v12;
    goto LABEL_27;
  }
  uint64_t v21 = *(void *)(v62 + 16);
  if (v21)
  {
    uint64_t v22 = 0;
    long long v59 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
    unsigned int v60 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    *(void *)&long long v19 = 134349056;
    long long v57 = v19;
    uint64_t v58 = v62;
    while (1)
    {
      uint64_t v24 = *(void *)(v20 + 8 * v22 + 32);
      if ((CPGSfmMapIsSampleRegistered() & 1) == 0)
      {
        uint64_t v25 = v16;
        uint64_t v26 = sub_24B57CBE8();
        uint64_t v27 = v2;
        (*v60)(v14, v26, v2);
        uint64_t v28 = sub_24B6824B0();
        os_log_type_t v29 = sub_24B682B10();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = v57;
          *(void *)(v30 + 4) = v24;
          _os_log_impl(&dword_24B55E000, v28, v29, "Adding low quality sample: id=%{public}llu...", (uint8_t *)v30, 0xCu);
          MEMORY[0x24C5D6C00](v30, -1, -1);
        }

        uint64_t v2 = v27;
        uint64_t result = (*v59)(v14, v27);
        if (v24 < 0)
        {
          __break(1u);
          return result;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_24B5D40D4(0, v23[2] + 1, 1, v23, &qword_2697CCDB0);
        }
        uint64_t v16 = v25;
        unint64_t v33 = v23[2];
        unint64_t v32 = v23[3];
        uint64_t v20 = v58;
        if (v33 >= v32 >> 1) {
          uint64_t v23 = sub_24B5D40D4((void *)(v32 > 1), v33 + 1, 1, v23, &qword_2697CCDB0);
        }
        double v23[2] = v33 + 1;
        v23[v33 + 4] = v24;
      }
      if (v21 == ++v22)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v23;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_24B5D9D30()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Properties = (void *)CPGOutputGetProperties();
  if (!Properties
    || (CFDictionaryRef v5 = Properties, Copy = CFDictionaryCreateCopy(0, v5), v5, !Copy)
    || (unint64_t v13 = 0, sub_24B682730(), Copy, (result = v13) == 0))
  {
    uint64_t v8 = sub_24B57CBE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
    uint64_t v9 = sub_24B6824B0();
    os_log_type_t v10 = sub_24B682B20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24B55E000, v9, v10, "Can't convert backend properties dict to [AnyHashable: Any]!", v11, 2u);
      MEMORY[0x24C5D6C00](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return sub_24B5AECE8(MEMORY[0x263F8EE78]);
  }
  return result;
}

uint64_t sub_24B5D9EF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B5D9F60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24B5D9FC8()
{
  unint64_t result = qword_2697CC660;
  if (!qword_2697CC660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC660);
  }
  return result;
}

uint64_t sub_24B5DA01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotogrammetrySession.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24B5DA080()
{
  unint64_t result = qword_2697CC680;
  if (!qword_2697CC680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC680);
  }
  return result;
}

unint64_t sub_24B5DA0D4()
{
  unint64_t result = qword_2697CC688;
  if (!qword_2697CC688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC688);
  }
  return result;
}

uint64_t sub_24B5DA128(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B5DA188()
{
  uint64_t v1 = sub_24B6822E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();
  os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  uint64_t v11 = sub_24B562F04(&qword_2697CC580);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v8, 3, v11)) {
    v10(v0 + v8, v1);
  }

  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_24B5DA314()
{
  return sub_24B5DA54C((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24B5CA9C4);
}

uint64_t sub_24B5DA32C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24B5DA33C()
{
  return sub_24B5CD338();
}

uint64_t sub_24B5DA358(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5DA3A0()
{
  uint64_t v1 = sub_24B6822E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();
  swift_release();
  os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  uint64_t v11 = sub_24B562F04(&qword_2697CC580);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v8, 3, v11)) {
    v10(v0 + v8, v1);
  }

  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_24B5DA534()
{
  return sub_24B5DA54C((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24B5D3784);
}

uint64_t sub_24B5DA54C(uint64_t (*a1)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_24B6822E0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for PhotogrammetrySession.Request(0) - 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + ((v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a1(v6, v7, v1 + v3, v8);
}

uint64_t sub_24B5DA634()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24B5DA67C()
{
  return sub_24B5C319C(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

void type metadata accessor for CPGOutputModelTextureDestination(uint64_t a1)
{
}

void type metadata accessor for CPGOutputModelTextureType(uint64_t a1)
{
}

void type metadata accessor for OCCoveragePoint(uint64_t a1)
{
}

void type metadata accessor for CFArray(uint64_t a1)
{
}

unint64_t sub_24B5DA798@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24B5E5EB8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24B5DA7C4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v8 = sub_24B682C80();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
      uint64_t v5 = v8;
      uint64_t v6 = a2;
      uint64_t v7 = 2;
      break;
    case 2:
      uint64_t v9 = (unsigned int *)MEMORY[0x263F8C948];
      goto LABEL_9;
    case 3:
      uint64_t v9 = (unsigned int *)MEMORY[0x263F8C950];
      goto LABEL_9;
    case 4:
      uint64_t v9 = (unsigned int *)MEMORY[0x263F8C958];
      goto LABEL_9;
    case 5:
      uint64_t v9 = (unsigned int *)MEMORY[0x263F8C960];
LABEL_9:
      uint64_t v10 = *v9;
      uint64_t v11 = sub_24B682C80();
      uint64_t v13 = *(void *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(a2, v10, v11);
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      uint64_t v6 = a2;
      uint64_t v7 = 0;
      uint64_t v5 = v11;
      break;
    default:
      uint64_t v3 = sub_24B682C80();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
      uint64_t v5 = v3;
      uint64_t v6 = a2;
      uint64_t v7 = 1;
      break;
  }

  return v4(v6, v7, 2, v5);
}

uint64_t sub_24B5DA968()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B682C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B682C90();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B5E7148(v1, (uint64_t)v8, MEMORY[0x263F8C968]);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  if (v9)
  {
    return v9 != 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x263F8C948])
    {
      return 2;
    }
    else if (v11 == *MEMORY[0x263F8C958])
    {
      return 4;
    }
    else if (v11 == *MEMORY[0x263F8C960])
    {
      return 5;
    }
    else
    {
      if (v11 != *MEMORY[0x263F8C950])
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return 0;
      }
      return 3;
    }
  }
}

void *sub_24B5DAB78(__CVBuffer *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v10 = sub_24B560D28(MEMORY[0x263F8EE78]);
  unint64_t v65 = v10;
  CFStringRef v11 = (const __CFString *)*MEMORY[0x263F0F248];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x263F0F248]))
  {
    CFTypeRef v12 = CVBufferCopyAttachment(a1, v11, 0);
    if (v12)
    {
      *(void *)&long long v63 = v12;
      uint64_t v13 = sub_24B562F04(&qword_2697CC060);
      if (swift_dynamicCast())
      {
        uint64_t v14 = sub_24B6827D0();
        uint64_t v16 = v15;
        uint64_t ObjectType = v13;
        *(void *)&long long v63 = *(void *)&v62[0];
        sub_24B563220(&v63, v62);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v65 = 0x8000000000000000;
        sub_24B5E4AB0(v62, v14, v16, isUniquelyReferenced_nonNull_native);
        unint64_t v65 = v10;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  CFStringRef v18 = (const __CFString *)*MEMORY[0x263F0F518];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x263F0F518]))
  {
    CFTypeRef v19 = CVBufferCopyAttachment(a1, v18, 0);
    if (v19)
    {
      *(void *)&long long v63 = v19;
      uint64_t v20 = sub_24B562F04(&qword_2697CC060);
      if (swift_dynamicCast())
      {
        uint64_t v21 = *(void *)&v62[0];
        uint64_t v22 = sub_24B6827D0();
        uint64_t v24 = v23;
        uint64_t ObjectType = v20;
        *(void *)&long long v63 = v21;
        sub_24B563220(&v63, v62);
        unint64_t v25 = v65;
        char v26 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v65 = 0x8000000000000000;
        sub_24B5E4AB0(v62, v22, v24, v26);
        unint64_t v65 = v25;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  CFTypeRef v27 = CVBufferCopyAttachment(a1, (CFStringRef)*MEMORY[0x263F0F4C8], 0);
  uint64_t v28 = sub_24B6827D0();
  uint64_t v30 = v28;
  uint64_t v31 = v29;
  if (v27)
  {
    uint64_t ObjectType = swift_getObjectType();
    *(void *)&long long v63 = v27;
    sub_24B563220(&v63, v62);
    swift_unknownObjectRetain();
    unint64_t v32 = v65;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v65 = 0x8000000000000000;
    sub_24B5E4AB0(v62, v30, v31, v33);
    unint64_t v65 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24B5E3458(v28, v29, &v63);
    swift_bridgeObjectRelease();
    sub_24B5632A8((uint64_t)&v63, (uint64_t *)&unk_2697CCA30);
  }
  CFStringRef v34 = (const __CFString *)*MEMORY[0x263F0F3C0];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x263F0F3C0]))
  {
    CFTypeRef v35 = CVBufferCopyAttachment(a1, v34, 0);
    if (v35)
    {
      *(void *)&long long v63 = v35;
      uint64_t v36 = sub_24B562F04(&qword_2697CC060);
      if (swift_dynamicCast())
      {
        char v37 = a5;
        uint64_t v38 = a2;
        uint64_t v39 = a3;
        uint64_t v40 = a4;
        uint64_t v41 = *(void *)&v62[0];
        uint64_t v61 = sub_24B6827D0();
        uint64_t v43 = v42;
        uint64_t ObjectType = v36;
        *(void *)&long long v63 = v41;
        a4 = v40;
        a3 = v39;
        a2 = v38;
        a5 = v37;
        sub_24B563220(&v63, v62);
        unint64_t v44 = v65;
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v65 = 0x8000000000000000;
        sub_24B5E4AB0(v62, v61, v43, v45);
        unint64_t v65 = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  if (a5)
  {
    swift_unknownObjectRelease();
    return (void *)v65;
  }
  sub_24B562F04(&qword_2697CC0B0);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_24B684FC0;
  *(void *)(v46 + 32) = a2;
  *(void *)(v46 + 40) = a3;
  *(void *)(v46 + 48) = a4;
  unint64_t v47 = sub_24B560D28(MEMORY[0x263F8EE78]);
  CFStringRef v48 = (const __CFString *)*MEMORY[0x263F0F4A0];
  if (CVBufferHasAttachment(a1, (CFStringRef)*MEMORY[0x263F0F4A0]))
  {
    swift_bridgeObjectRelease();
    CFTypeRef v49 = CVBufferCopyAttachment(a1, v48, 0);
    if (v49 && (*(void *)&long long v63 = v49, sub_24B562F04(&qword_2697CC060), swift_dynamicCast())) {
      unint64_t v47 = *(void *)&v62[0];
    }
    else {
      unint64_t v47 = sub_24B560D28(MEMORY[0x263F8EE78]);
    }
  }
  unint64_t result = (void *)OCNonModularSPI_AppleMakerNote_FocusAccelerometerVector();
  if (result)
  {
    id v51 = result;
    uint64_t v52 = sub_24B6827D0();
    uint64_t v54 = v53;

    uint64_t ObjectType = sub_24B562F04(&qword_2697CC708);
    *(void *)&long long v63 = v46;
    sub_24B563220(&v63, v62);
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    sub_24B5E4AB0(v62, v52, v54, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_24B6827D0();
    uint64_t v58 = v57;
    uint64_t ObjectType = sub_24B562F04(&qword_2697CC060);
    *(void *)&long long v63 = v47;
    sub_24B563220(&v63, v62);
    unint64_t v59 = v65;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v65 = 0x8000000000000000;
    sub_24B5E4AB0(v62, v56, v58, v60);
    unint64_t v65 = v59;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)v65;
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5DB148(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC818);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC808);
  uint64_t v6 = sub_24B682F30();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, &qword_2697CC818);
    unint64_t result = sub_24B5E333C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B6822E0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24B5DB33C(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC810);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC7C8);
  uint64_t v6 = sub_24B682F30();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24B563A6C(v12, (uint64_t)v5, &qword_2697CC810);
    unint64_t result = sub_24B59F008((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24B682410();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B5DB530(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24B5632A8(a1, &qword_2697CCC90);
    unint64_t v13 = sub_24B5E3410(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24B5E59B4();
        uint64_t v17 = v21;
      }
      sub_24B5E7B08(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8);
      sub_24B5E45E0(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_24B5632A8((uint64_t)v8, &qword_2697CCC90);
  }
  else
  {
    sub_24B5E7B08(a1, (uint64_t)v12);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24B5E4DA0((uint64_t)v12, v18, a2);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24B5DB770@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (!result)
  {
    char v11 = 0;
    goto LABEL_12;
  }
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(sub_24B682AD0() + 16);
  unint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_10:
    char v11 = 1;
LABEL_12:
    *a2 = v11;
    return result;
  }
  unint64_t v5 = 0;
  uint64_t v6 = v3 + 16;
  while (1)
  {
    unint64_t result = sub_24B682AD0();
    if (v5 >= *(void *)(result + 16)) {
      break;
    }
    float v7 = *(float *)(result + 16 * v5 + 32);
    swift_bridgeObjectRelease();
    *(double *)(v6 - 16) = v7;
    unint64_t result = sub_24B682AD0();
    if (v5 >= *(void *)(result + 16)) {
      goto LABEL_14;
    }
    float v8 = *(float *)(result + 16 * v5 + 36);
    swift_bridgeObjectRelease();
    *(double *)(v6 - 8) = v8;
    unint64_t result = sub_24B682AD0();
    if (v5 >= *(void *)(result + 16)) {
      goto LABEL_15;
    }
    float v9 = *(float *)(result + 16 * v5 + 40);
    swift_bridgeObjectRelease();
    *(double *)uint64_t v6 = v9;
    unint64_t result = sub_24B682AC0();
    if (v5 >= *(void *)(result + 16)) {
      goto LABEL_16;
    }
    unint64_t v10 = *(void *)(result + 8 * v5 + 32);
    unint64_t result = swift_bridgeObjectRelease();
    if (v10 >> 31) {
      goto LABEL_17;
    }
    ++v5;
    *(_DWORD *)(v6 + 8) = v10;
    v6 += 32;
    if (v4 == v5) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_24B5DB894()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B562F04(&qword_2697CC710);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_24B682520();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B5DB930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6825D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  float v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24B682640();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(a3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  char v14 = (void *)swift_allocObject();
  unsigned char v14[2] = v13;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_24B5E8A70;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8E118;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24B6825F0();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24B5E897C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5DBC3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 280))();
  *a2 = result;
  return result;
}

uint64_t sub_24B5DBC90(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 24) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B5DBCD4()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B5DB894();
    sub_24B562F04(&qword_2697CC710);
    sub_24B5678F4(&qword_2697CC718, &qword_2697CC710);
    uint64_t v1 = sub_24B682580();
    swift_release();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B5DBD98(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.shotID.getter()
{
  return *(void *)v0;
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 20);
  uint64_t v4 = sub_24B6822E0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.error.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_24B5E5EE8(v4, v5);
}

BOOL ObjectCaptureHEICBundleWriter.WriteInfo.isSuccess.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24) + 8) == 3;
}

BOOL ObjectCaptureHEICBundleWriter.WriteInfo.isError.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0) + 24) + 8) != 3;
}

uint64_t ObjectCaptureHEICBundleWriter.WriteInfo.init(shotID:url:error:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  *a4 = a1;
  uint64_t v8 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  float v9 = (char *)a4 + *(int *)(v8 + 20);
  uint64_t v10 = sub_24B6822E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a2, v10);
  uint64_t v12 = (void *)((char *)a4 + *(int *)(v8 + 24));
  *uint64_t v12 = v6;
  v12[1] = v7;
  return result;
}

uint64_t sub_24B5DBF68()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B562F04(&qword_2697CC720);
    swift_allocObject();
    uint64_t v1 = sub_24B682510();
    *(void *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B5DBFE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 328))();
  *a2 = result;
  return result;
}

uint64_t sub_24B5DC038(void *a1, uint64_t a2)
{
  *(void *)(*(void *)a2 + 40) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_24B5DC07C()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B5DBF68();
    sub_24B562F04(&qword_2697CC720);
    sub_24B5678F4(&qword_2697CC728, &qword_2697CC720);
    uint64_t v1 = sub_24B682580();
    swift_release();
    *(void *)(v2 + 40) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B5DC140(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t ObjectCaptureHEICBundleWriter.__allocating_init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ObjectCaptureHEICBundleWriter.init(publishers:url:)(a1, a2);
  return v4;
}

uint64_t ObjectCaptureHEICBundleWriter.init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v100 = a2;
  uint64_t v94 = a1;
  v103[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v87 = sub_24B562F04(&qword_2697CC730);
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  os_log_type_t v85 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_24B562F04(&qword_2697CC738);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  id v81 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B562F04(&qword_2697CC740);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v84 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_24B562F04(&qword_2697CC748);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  os_log_type_t v78 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_24B6824D0();
  uint64_t v93 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v98 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v97 = (void *)sub_24B682BC0();
  uint64_t v101 = *(v97 - 1);
  MEMORY[0x270FA5388](v97);
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B682B90();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_24B682640();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v96 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_subscriptions) = MEMORY[0x263F8EE88];
  unint64_t v15 = (void *)(v2 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
  *unint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotMetadataMap;
  uint64_t v17 = (void *)MEMORY[0x263F8EE78];
  *(void *)(v3 + v16) = sub_24B5E5F0C(MEMORY[0x263F8EE78]);
  uint64_t v18 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotFeatureMatchabilityScoreMap;
  *(void *)(v3 + v18) = sub_24B5E60C4((uint64_t)v17);
  *(void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID) = -1;
  uint64_t v19 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap;
  *(void *)(v3 + v19) = sub_24B5DB148((uint64_t)v17);
  *(void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle) = 0;
  uint64_t v92 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue;
  unint64_t v95 = sub_24B5658E8();
  sub_24B682630();
  v103[0] = v17;
  uint64_t v91 = sub_24B5E897C((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  uint64_t v90 = sub_24B562F04(&qword_2697CC0C0);
  sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  unsigned int v88 = *MEMORY[0x263F8F130];
  uint64_t v89 = *(void (**)(char *))(v101 + 104);
  v101 += 104;
  uint64_t v20 = v97;
  v89(v11);
  *(void *)(v3 + v92) = sub_24B682C00();
  uint64_t v92 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveQueue;
  sub_24B682630();
  v103[0] = (id)MEMORY[0x263F8EE78];
  sub_24B682D80();
  uint64_t v21 = v11;
  uint64_t v22 = v11;
  uint64_t v23 = v88;
  uint64_t v24 = v89;
  ((void (*)(char *, void, void *))v89)(v22, v88, v20);
  *(void *)(v3 + v92) = sub_24B682C00();
  uint64_t v92 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateQueue;
  sub_24B682630();
  sub_24B682B80();
  ((void (*)(char *, uint64_t, void *))v24)(v21, v23, v97);
  *(void *)(v3 + v92) = sub_24B682C00();
  uint64_t v25 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup;
  *(void *)(v3 + v25) = dispatch_group_create();
  uint64_t v26 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup;
  *(void *)(v3 + v26) = dispatch_group_create();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) = 0;
  uint64_t v27 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  sub_24B562F04(&qword_2697CC750);
  uint64_t v28 = swift_allocObject();
  *(_DWORD *)(v28 + 16) = 0;
  *(void *)(v3 + v27) = v28;
  uint64_t v29 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems;
  *(void *)(v3 + v29) = sub_24B5DB33C(MEMORY[0x263F8EE78]);
  *(void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_meshWriter) = 0;
  uint64_t v30 = v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  uint64_t v31 = sub_24B6822E0();
  unint64_t v32 = *(void **)(v31 - 8);
  ((void (*)(uint64_t, uint64_t, uint64_t))v32[2])(v30, v100, v31);
  uint64_t v33 = sub_24B57CB70();
  uint64_t v34 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v98, v33, v99);
  swift_retain_n();
  CFTypeRef v35 = sub_24B6824B0();
  os_log_type_t v36 = sub_24B682B30();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    long long v97 = v32;
    uint64_t v101 = v31;
    uint64_t v38 = v37;
    uint64_t v39 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 141558275;
    uint64_t v102 = 1752392040;
    v103[0] = v39;
    sub_24B682CD0();
    *(_WORD *)(v38 + 12) = 2081;
    uint64_t v40 = sub_24B6822D0();
    uint64_t v102 = sub_24B5627B8(v40, v41, (uint64_t *)v103);
    sub_24B682CD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v35, v36, "HEIC Writer: Writer output URL: %{private,mask.hash}s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v39, -1, -1);
    uint64_t v42 = v38;
    uint64_t v31 = v101;
    unint64_t v32 = v97;
    MEMORY[0x24C5D6C00](v42, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v98, v99);
  uint64_t v43 = (void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle);
  swift_beginAccess();
  int v44 = OCNonModularSPI_CMPhoto_HeicWriteCreate();
  swift_endAccess();
  if (v44)
  {
    swift_release();
    sub_24B5E619C();
    swift_allocError();
    unint64_t v46 = 0xD000000000000039;
    unint64_t v47 = "HEIC Writer: Failed to initialize the HEIC bundle writer.";
LABEL_8:
    *char v45 = v46;
    v45[1] = (unint64_t)(v47 - 32) | 0x8000000000000000;
    goto LABEL_9;
  }
  if (OCNonModularSPI_CMPhoto_HeicWriteStart())
  {
    OCNonModularSPI_CMPhoto_HeicReadDestroy();
    *uint64_t v43 = 0;
    swift_release();
    sub_24B5E619C();
    swift_allocError();
    unint64_t v46 = 0xD000000000000034;
    unint64_t v47 = "HEIC Writer: Failed to start the HEIC bundle writer.";
    goto LABEL_8;
  }
  id v49 = objc_msgSend(self, sel_defaultManager);
  uint64_t v50 = (void *)sub_24B682250();
  v103[0] = 0;
  unsigned __int8 v51 = objc_msgSend(v49, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v50, 1, 0, v103);

  if (v51)
  {
    uint64_t v52 = v94;
    uint64_t v53 = (void *)(*(uint64_t (**)(id))(*(void *)v94 + 216))(v103[0]);
    uint64_t v92 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue;
    uint64_t v102 = *(void *)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_writerQueue);
    id v54 = (id)v102;
    v103[0] = v53;
    uint64_t v98 = (char *)sub_24B682BB0();
    uint64_t v55 = *((void *)v98 - 1);
    long long v97 = *(void **)(v55 + 56);
    uint64_t v99 = v55 + 56;
    uint64_t v56 = (uint64_t)v84;
    ((void (*)(char *, uint64_t, uint64_t, char *))v97)(v84, 1, 1, v98);
    id v57 = v54;
    sub_24B562F04(&qword_2697CC760);
    uint64_t v101 = v31;
    uint64_t v96 = (char *)MEMORY[0x263EFDCF8];
    sub_24B5678F4(&qword_2697CC768, &qword_2697CC760);
    uint64_t v93 = sub_24B5E897C(&qword_2697CC770, (void (*)(uint64_t))sub_24B5658E8);
    uint64_t v58 = v78;
    sub_24B6825A0();
    sub_24B5632A8(v56, &qword_2697CC740);

    swift_release();
    uint64_t v59 = swift_allocObject();
    swift_weakInit();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_24B5E6228;
    *(void *)(v60 + 24) = v59;
    uint64_t v61 = v3;
    uint64_t v91 = MEMORY[0x263EFDCB0];
    sub_24B5678F4(&qword_2697CC778, &qword_2697CC748);
    uint64_t v62 = v80;
    sub_24B682590();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v62);
    uint64_t v63 = v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_subscriptions;
    swift_beginAccess();
    sub_24B6824E0();
    swift_endAccess();
    uint64_t v64 = swift_release();
    unint64_t v65 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v52 + 264))(v64);
    uint64_t v102 = *(void *)(v3 + v92);
    id v66 = (id)v102;
    v103[0] = v65;
    ((void (*)(uint64_t, uint64_t, uint64_t, char *))v97)(v56, 1, 1, v98);
    id v67 = v66;
    sub_24B562F04(&qword_2697CC780);
    sub_24B5678F4(&qword_2697CC788, &qword_2697CC780);
    os_log_type_t v68 = v81;
    sub_24B6825A0();
    sub_24B5632A8(v56, &qword_2697CC740);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_24B5678F4(&qword_2697CC790, &qword_2697CC738);
    uint64_t v69 = v83;
    sub_24B682590();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v69);
    uint64_t v90 = v63;
    swift_beginAccess();
    sub_24B6824E0();
    swift_endAccess();
    uint64_t v70 = swift_release();
    char v71 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v52 + 312))(v70);
    uint64_t v102 = *(void *)(v61 + v92);
    id v72 = (id)v102;
    v103[0] = v71;
    ((void (*)(uint64_t, uint64_t, uint64_t, char *))v97)(v56, 1, 1, v98);
    id v73 = v72;
    sub_24B562F04(&qword_2697CC798);
    sub_24B5678F4(&qword_2697CC7A0, &qword_2697CC798);
    long long v74 = v85;
    sub_24B6825A0();
    sub_24B5632A8(v56, &qword_2697CC740);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    uint64_t v3 = v61;
    sub_24B5678F4(&qword_2697CC7A8, &qword_2697CC730);
    uint64_t v75 = v87;
    sub_24B682590();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v74, v75);
    swift_beginAccess();
    sub_24B6824E0();
    swift_endAccess();
    swift_release();
    swift_release();
    ((void (*)(uint64_t, uint64_t))v32[1])(v100, v101);
    return v3;
  }
  id v76 = v103[0];
  swift_release();
  sub_24B6821B0();

LABEL_9:
  swift_willThrow();
  swift_release();
  ((void (*)(uint64_t, uint64_t))v32[1])(v100, v31);
  return v3;
}

uint64_t sub_24B5DD2D8(uint64_t *a1, double *a2)
{
  uint64_t v4 = sub_24B6822E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v14 = a1[4];
  uint64_t v31 = a1[3];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v30 = v14;
    sub_24B680CE4();
    OCSignPostsAriadneDbgCode();
    uint64_t result = kdebug_trace();
    uint64_t v17 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID;
    uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID) = v20;
      sub_24B5E2F70(*a2);
      sub_24B682210();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
      uint64_t v28 = v12;
      uint64_t v29 = a2;
      uint64_t v21 = *(void *)(v16 + v17);
      uint64_t v22 = v13;
      uint64_t v23 = (uint64_t *)(v16 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = *v23;
      *uint64_t v23 = 0x8000000000000000;
      sub_24B5E4C04(v21, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
      *uint64_t v23 = v36;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      swift_endAccess();
      uint64_t v26 = *(void *)(v16 + v17);
      *(void *)&long long v32 = v11;
      *((void *)&v32 + 1) = v28;
      uint64_t v33 = v22;
      uint64_t v34 = v31;
      uint64_t v35 = v30;
      sub_24B5DEE64(v26, &v32, (uint64_t)v29, (uint64_t)v10);
      sub_24B680CF0();
      OCSignPostsAriadneDbgCode();
      kdebug_trace();
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v25)(v10, v4);
    }
  }
  return result;
}

uint64_t sub_24B5DD574(double *a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    double v6 = *a1;
    sub_24B5E7148((uint64_t)a1, (uint64_t)v4, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
    swift_beginAccess();
    sub_24B5DB530((uint64_t)v4, v6);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

unint64_t sub_24B5DD6C0(id *a1, unint64_t a2)
{
  unint64_t v141 = a2;
  uint64_t v127 = sub_24B562F04(&qword_2697CC7E0);
  MEMORY[0x270FA5388](v127);
  uint64_t v128 = (int64_t *)((char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_24B6822E0();
  uint64_t v131 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v5 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v138 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v143 = (uint64_t)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  CoreOC::PhotogrammetrySession::Request::Geometry v130 = (char *)&v119 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v120 = (char *)&v119 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v126 = (char *)&v119 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v129 = (char *)&v119 - v19;
  uint64_t v20 = sub_24B562F04(&qword_2697CC7E8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (int64_t *)((char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (double *)((char *)&v119 - v24);
  uint64_t v26 = sub_24B682680();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  BOOL v134 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v119 - v30;
  id v133 = *a1;
  swift_beginAccess();
  unint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  unint64_t v33 = result;
  uint64_t v121 = v27;
  uint64_t v122 = v26;
  uint64_t v123 = v12;
  uint64_t v124 = v9;
  uint64_t v125 = v8;
  sub_24B680D14();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  uint64_t v132 = v31;
  sub_24B682660();
  unint64_t v34 = v33;
  id v35 = *(id *)(v33 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup);
  sub_24B682B70();

  uint64_t v36 = (uint64_t *)(v34 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotMetadataMap);
  swift_beginAccess();
  uint64_t v37 = *v36;
  uint64_t v38 = *(void *)(*v36 + 64);
  uint64_t v135 = *v36 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v37 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & v38;
  unint64_t v141 = v34 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  unint64_t v136 = v34;
  uint64_t v42 = (uint64_t *)(v34 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_urlToShotIDMap);
  swift_bridgeObjectRetain();
  long long v140 = v42;
  unint64_t result = swift_beginAccess();
  int64_t v43 = 0;
  int v44 = (void (**)(char *, uint64_t))(v131 + 8);
  int64_t v137 = (unint64_t)(v39 + 63) >> 6;
  int64_t v119 = v137 - 1;
  long long v139 = xmmword_24B6856B0;
  for (i = v143; ; unint64_t result = sub_24B5E829C(i, type metadata accessor for ObjectCaptureSession.Metadata.Shot))
  {
    if (v41)
    {
      unint64_t v46 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      unint64_t v47 = v46 | (v43 << 6);
LABEL_9:
      uint64_t v48 = *(void *)(v37 + 56);
      *uint64_t v23 = *(void *)(*(void *)(v37 + 48) + 8 * v47);
      uint64_t v49 = v48 + *(void *)(v138 + 72) * v47;
      uint64_t v50 = sub_24B562F04(&qword_2697CC7F0);
      sub_24B5E7148(v49, (uint64_t)v23 + *(int *)(v50 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v23, 0, 1, v50);
      goto LABEL_28;
    }
    int64_t v51 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v51 < v137)
    {
      unint64_t v52 = *(void *)(v135 + 8 * v51);
      if (v52) {
        goto LABEL_13;
      }
      int64_t v53 = v43 + 2;
      ++v43;
      if (v51 + 1 < v137)
      {
        unint64_t v52 = *(void *)(v135 + 8 * v53);
        if (v52) {
          goto LABEL_16;
        }
        int64_t v43 = v51 + 1;
        if (v51 + 2 < v137)
        {
          unint64_t v52 = *(void *)(v135 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
LABEL_13:
            unint64_t v41 = (v52 - 1) & v52;
            unint64_t v47 = __clz(__rbit64(v52)) + (v51 << 6);
            int64_t v43 = v51;
            goto LABEL_9;
          }
          int64_t v53 = v51 + 3;
          int64_t v43 = v51 + 2;
          if (v51 + 3 < v137)
          {
            unint64_t v52 = *(void *)(v135 + 8 * v53);
            if (!v52)
            {
              while (1)
              {
                int64_t v51 = v53 + 1;
                if (__OFADD__(v53, 1)) {
                  goto LABEL_57;
                }
                if (v51 >= v137)
                {
                  int64_t v43 = v119;
                  goto LABEL_27;
                }
                unint64_t v52 = *(void *)(v135 + 8 * v51);
                ++v53;
                if (v52) {
                  goto LABEL_13;
                }
              }
            }
LABEL_16:
            int64_t v51 = v53;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    uint64_t v54 = sub_24B562F04(&qword_2697CC7F0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v23, 1, 1, v54);
    unint64_t v41 = 0;
LABEL_28:
    sub_24B56CF38((uint64_t)v23, (uint64_t)v25, &qword_2697CC7E8);
    uint64_t v55 = sub_24B562F04(&qword_2697CC7F0);
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v25, 1, v55) == 1) {
      break;
    }
    double v56 = *v25;
    sub_24B5E7B08((uint64_t)v25 + *(int *)(v55 + 48), i);
    sub_24B562F04(&qword_2697CC198);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v139;
    *(void *)(v57 + 32) = sub_24B6822D0();
    *(void *)(v57 + 40) = v58;
    double v145 = COERCE_DOUBLE(sub_24B5F8B94(v56));
    uint64_t v146 = v59;
    uint64_t v60 = self;
    sub_24B682890();
    uint64_t v61 = v146;
    *(double *)(v57 + 48) = v145;
    *(void *)(v57 + 56) = v61;
    uint64_t v62 = (void *)sub_24B682980();
    swift_bridgeObjectRelease();
    id v63 = objc_msgSend(v60, sel_pathWithComponents_, v62);

    sub_24B6827D0();
    uint64_t i = v143;
    sub_24B682210();
    swift_bridgeObjectRelease();
    uint64_t v64 = *v140;
    if (*(void *)(*v140 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_24B5E333C((uint64_t)v5);
      if (v66)
      {
        uint64_t v67 = *(void *)(*(void *)(v64 + 56) + 8 * v65);
        swift_bridgeObjectRelease();
        uint64_t v68 = v67;
        uint64_t i = v143;
        sub_24B5E079C(v68, v143, (uint64_t)v5);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    (*v44)(v5, v142);
  }
  swift_release();
  id v69 = *(id *)(v136 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup);
  sub_24B682B70();

  sub_24B682660();
  unint64_t v70 = sub_24B682650();
  unint64_t result = sub_24B682650();
  unint64_t v71 = v70 - result;
  if (v70 < result)
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  uint64_t v72 = sub_24B57CB70();
  uint64_t v73 = v124;
  long long v74 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
  uint64_t v75 = v129;
  uint64_t v76 = v125;
  v74(v129, v72, v125);
  uint64_t v77 = sub_24B6824B0();
  os_log_type_t v78 = sub_24B682B30();
  if (os_log_type_enabled(v77, v78))
  {
    double v79 = (double)v71;
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v80 = 134349056;
    double v145 = v79 / 1000000000.0;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v77, v78, "HEIC Writer: Update all images used %{public}f seconds.", v80, 0xCu);
    MEMORY[0x24C5D6C00](v80, -1, -1);
  }

  id v81 = *(void (**)(char *, uint64_t))(v73 + 8);
  v81(v75, v76);
  sub_24B680D20();
  OCSignPostsAriadneDbgCode();
  kdebug_trace();
  id v82 = v133;
  if (v133 == (id)7)
  {
    if (*(uint64_t *)(v136 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) < 1)
    {
      uint64_t v102 = v120;
      v74(v120, v72, v76);
      float64x2_t v103 = sub_24B6824B0();
      os_log_type_t v104 = sub_24B682B30();
      if (os_log_type_enabled(v103, v104))
      {
        id v105 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v105 = 0;
        _os_log_impl(&dword_24B55E000, v103, v104, "HEIC Writer: Failed to write HEIC bundle, no files written!", v105, 2u);
        uint64_t v106 = v105;
        uint64_t v102 = v120;
        MEMORY[0x24C5D6C00](v106, -1, -1);
      }

      v81(v102, v76);
      unint64_t v88 = v136;
      uint64_t v89 = *(void (**)(uint64_t))(v136
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
      if (v89)
      {
        uint64_t v90 = (uint64_t)v128;
        uint64_t *v128 = 0xD00000000000001DLL;
        *(void *)(v90 + 8) = 0x800000024B68E280;
LABEL_49:
        swift_storeEnumTagMultiPayload();
        swift_retain();
        v89(v90);
        unint64_t v88 = v136;
        sub_24B5D7FB0((uint64_t)v89);
        sub_24B5632A8(v90, &qword_2697CC7E0);
      }
    }
    else
    {
      uint64_t v83 = v126;
      v74(v126, v72, v76);
      uint64_t v84 = sub_24B6824B0();
      os_log_type_t v85 = sub_24B682B30();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v86 = 0;
        _os_log_impl(&dword_24B55E000, v84, v85, "HEIC Writer: Successfully wrote HEIC bundle.", v86, 2u);
        uint64_t v87 = v86;
        uint64_t v83 = v126;
        MEMORY[0x24C5D6C00](v87, -1, -1);
      }

      v81(v83, v76);
      unint64_t v88 = v136;
      uint64_t v89 = *(void (**)(uint64_t))(v136
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
      if (v89)
      {
        uint64_t v90 = (uint64_t)v128;
        (*(void (**)(uint64_t *, unint64_t, uint64_t))(v131 + 16))(v128, v141, v142);
        goto LABEL_49;
      }
    }
  }
  else
  {
    v74(v130, v72, v76);
    sub_24B5E88F8(v82);
    uint64_t v91 = sub_24B6824B0();
    os_log_type_t v92 = sub_24B682B20();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v93 = 0;
      _os_log_impl(&dword_24B55E000, v91, v92, "HEIC Writer: Failed to write HEIC bundle.", v93, 2u);
      MEMORY[0x24C5D6C00](v93, -1, -1);
    }

    v81(v130, v76);
    unint64_t v88 = v136;
    uint64_t v94 = *(void (**)(uint64_t *))(v136
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    if (v94)
    {
      id v95 = v133;
      double v145 = *(double *)&v133;
      sub_24B5E8908();
      uint64_t v143 = v72;
      uint64_t v96 = v74;
      long long v97 = v81;
      swift_retain();
      uint64_t v98 = sub_24B683020();
      uint64_t v99 = v128;
      uint64_t *v128 = v98;
      v99[1] = v100;
      swift_storeEnumTagMultiPayload();
      v94(v99);
      unint64_t v88 = v136;
      sub_24B5D7FB0((uint64_t)v94);
      sub_24B5E895C(v95);
      uint64_t v101 = (uint64_t)v99;
      id v81 = v97;
      long long v74 = v96;
      uint64_t v72 = v143;
      sub_24B5632A8(v101, &qword_2697CC7E0);
    }
    else
    {
      sub_24B5E895C(v133);
    }
  }
  float64x2_t v107 = (void *)(v88 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_heicWriteHandle);
  swift_beginAccess();
  int v108 = OCNonModularSPI_CMPhoto_HeicWriteStop();
  int v109 = OCNonModularSPI_CMPhoto_HeicWriteDestroy();
  *float64x2_t v107 = 0;
  float64x2_t v110 = v123;
  v74(v123, v72, v76);
  int v111 = v110;
  uint64_t v112 = sub_24B6824B0();
  os_log_type_t v113 = sub_24B682B30();
  if (os_log_type_enabled(v112, v113))
  {
    uint64_t v114 = v81;
    uint64_t v115 = swift_slowAlloc();
    *(_DWORD *)uint64_t v115 = 67240448;
    int v144 = v108;
    sub_24B682CD0();
    *(_WORD *)(v115 + 8) = 1026;
    int v144 = v109;
    sub_24B682CD0();
    _os_log_impl(&dword_24B55E000, v112, v113, "HEIC Writer: HEIC bundle writer stopped with state %{public}d and destroyed with state %{public}d", (uint8_t *)v115, 0xEu);
    uint64_t v116 = v115;
    id v81 = v114;
    MEMORY[0x24C5D6C00](v116, -1, -1);
  }
  swift_release();

  v81(v111, v76);
  uint64_t v117 = *(void (**)(char *, uint64_t))(v121 + 8);
  uint64_t v118 = v122;
  v117(v134, v122);
  return ((uint64_t (*)(char *, uint64_t))v117)(v132, v118);
}

uint64_t sub_24B5DE6E8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_24B5E62F0();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_24B5DE764(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC7D0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v33 = a1;
  uint64_t v8 = (unint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  unint64_t v9 = *v8;
  uint64_t v10 = *(void *)(*v8 + 64);
  uint64_t v34 = *v8 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  int64_t v31 = v14 - 1;
  long long v32 = v8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v19 = v18 | (v16 << 6);
  while (2)
  {
    uint64_t v20 = *(void *)(v9 + 48);
    uint64_t v21 = sub_24B682410();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v5, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v19, v21);
    uint64_t v22 = *(void *)(v9 + 56);
    uint64_t v23 = sub_24B562F04(&qword_2697CC7D8);
    *(void *)&v5[*(int *)(v23 + 48)] = *(void *)(v22 + 8 * v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
    swift_retain();
    while (1)
    {
      sub_24B56CF38((uint64_t)v5, (uint64_t)v7, &qword_2697CC7D0);
      uint64_t v28 = sub_24B562F04(&qword_2697CC7D8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v7, 1, v28) == 1)
      {
        swift_release();
        *(unsigned char *)(v33 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) = 1;
        unint64_t v29 = sub_24B5DB33C(MEMORY[0x263F8EE78]);
        *long long v32 = v29;
        return swift_bridgeObjectRelease();
      }
      sub_24B6826B0();
      swift_release();
      uint64_t v17 = sub_24B682410();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v7, v17);
      if (v13) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v24 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v24 < v14)
      {
        unint64_t v25 = *(void *)(v34 + 8 * v24);
        if (v25) {
          goto LABEL_11;
        }
        int64_t v26 = v16 + 2;
        ++v16;
        if (v24 + 1 < v14)
        {
          unint64_t v25 = *(void *)(v34 + 8 * v26);
          if (v25) {
            goto LABEL_14;
          }
          int64_t v16 = v24 + 1;
          if (v24 + 2 < v14)
          {
            unint64_t v25 = *(void *)(v34 + 8 * (v24 + 2));
            if (v25)
            {
              v24 += 2;
              goto LABEL_11;
            }
            int64_t v26 = v24 + 3;
            int64_t v16 = v24 + 2;
            if (v24 + 3 < v14) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v27 = sub_24B562F04(&qword_2697CC7D8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v5, 1, 1, v27);
      unint64_t v13 = 0;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v26);
    if (v25)
    {
LABEL_14:
      int64_t v24 = v26;
LABEL_11:
      unint64_t v13 = (v25 - 1) & v25;
      unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
      int64_t v16 = v24;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v14)
    {
      int64_t v16 = v31;
      goto LABEL_25;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24B5DEB40()
{
  uint64_t v1 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems;
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  uint64_t v5 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  return v4;
}

uint64_t sub_24B5DEBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B682410();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v10;
  *uint64_t v10 = 0x8000000000000000;
  sub_24B5E4EE8(a3, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v10 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_endAccess();
}

uint64_t sub_24B5DED3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItems);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24B59F008(a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v5;
    uint64_t v14 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24B5E5C20();
      uint64_t v10 = v14;
    }
    uint64_t v11 = *(void *)(v10 + 48);
    uint64_t v12 = sub_24B682410();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11 + *(void *)(*(void *)(v12 - 8) + 72) * v6, v12);
    uint64_t v8 = *(void *)(*(void *)(v14 + 56) + 8 * v6);
    sub_24B5E47B8(v6, v14);
    *uint64_t v5 = v14;
    swift_bridgeObjectRelease();
  }
  *a3 = v8;
  return swift_endAccess();
}

uint64_t sub_24B5DEE64(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v77 = a4;
  uint64_t v76 = a3;
  uint64_t v79 = a1;
  uint64_t v70 = sub_24B6824D0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v83 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_24B6825D0();
  MEMORY[0x270FA5388](v81);
  uint64_t v80 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_24B6822E0();
  uint64_t v88 = *(void *)(v89 - 8);
  uint64_t v75 = *(void *)(v88 + 64);
  MEMORY[0x270FA5388](v89);
  uint64_t v87 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v73 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_24B682410();
  uint64_t v86 = *(void **)(v90 - 8);
  uint64_t v12 = v86[8];
  uint64_t v13 = MEMORY[0x270FA5388](v90);
  id v82 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  int64_t v16 = (char *)&v63 - v15;
  unint64_t v71 = (char *)&v63 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v63 - v17;
  long long v19 = a2[1];
  long long v96 = *a2;
  long long v97 = v19;
  uint64_t v20 = *((void *)a2 + 4);
  uint64_t v64 = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  uint64_t v21 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  uint64_t v98 = v20;
  uint64_t v91 = sub_24B5E8340;
  uint64_t v92 = v5;
  swift_retain();
  os_unfair_lock_lock(v21 + 4);
  sub_24B5E8B0C();
  uint64_t v65 = 0;
  os_unfair_lock_unlock(v21 + 4);
  swift_release();
  sub_24B682400();
  uint64_t v22 = swift_allocObject();
  uint64_t v84 = v22;
  *(void *)(v22 + 16) = 0;
  os_log_type_t v78 = (uint64_t *)(v22 + 16);
  uint64_t v72 = swift_allocObject();
  uint64_t v68 = v5;
  swift_weakInit();
  uint64_t v23 = v86;
  int64_t v24 = (void (*)(char *, char *, uint64_t))v86[2];
  os_log_type_t v85 = v18;
  uint64_t v25 = v90;
  uint64_t v67 = v86 + 2;
  char v66 = v24;
  v24(v16, v18, v90);
  sub_24B5E7148(v76, (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  uint64_t v26 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v77, v89);
  uint64_t v27 = v23;
  unint64_t v28 = (*((unsigned __int8 *)v23 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v23 + 80);
  unint64_t v29 = (v12 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v74 + 80) + v30 + 40) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  unint64_t v32 = (v11 + *(unsigned __int8 *)(v26 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v33 = (v75 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v72;
  uint64_t v35 = v25;
  uint64_t v36 = v84;
  ((void (*)(unint64_t, char *, uint64_t))v27[4])(v34 + v28, v71, v35);
  *(void *)(v34 + v29) = v36;
  unint64_t v37 = v34 + v30;
  *(void *)(v37 + 32) = v98;
  long long v38 = v97;
  *(_OWORD *)unint64_t v37 = v96;
  *(_OWORD *)(v37 + 16) = v38;
  sub_24B5E7B08(v73, v34 + v31);
  (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))(v34 + v32, v87, v89);
  *(void *)(v34 + v33) = v79;
  aBlock[4] = sub_24B5E86DC;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8E0C8;
  _Block_copy(aBlock);
  uint64_t v94 = MEMORY[0x263F8EE78];
  swift_retain();
  swift_retain();
  sub_24B5E882C((uint64_t)&v96);
  sub_24B5E897C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  sub_24B6826C0();
  swift_allocObject();
  uint64_t v39 = sub_24B6826A0();
  swift_release();
  swift_release();
  uint64_t v40 = v78;
  swift_beginAccess();
  uint64_t *v40 = v39;
  uint64_t v41 = swift_release();
  uint64_t v42 = *v40;
  if (*v40)
  {
    uint64_t v43 = v68;
    int v44 = *(os_unfair_lock_s **)(v68 + v64);
    uint64_t v45 = MEMORY[0x270FA5388](v41);
    unint64_t v46 = v85;
    *(&v63 - 4) = v43;
    *(&v63 - 3) = (uint64_t)v46;
    *(&v63 - 2) = v42;
    MEMORY[0x270FA5388](v45);
    *(&v63 - 2) = (uint64_t)sub_24B5E8B44;
    *(&v63 - 1) = v47;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v44 + 4);
    sub_24B5E8B0C();
    os_unfair_lock_unlock(v44 + 4);
    swift_release();
    dispatch_group_enter(*(dispatch_group_t *)(v43
                                             + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup));
    sub_24B682BF0();
    uint64_t v48 = sub_24B57CB70();
    uint64_t v49 = v69;
    uint64_t v50 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v83, v48, v70);
    v66(v82, v46, v90);
    int64_t v51 = sub_24B6824B0();
    os_log_type_t v52 = sub_24B682B00();
    if (os_log_type_enabled(v51, v52))
    {
      int64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v94 = v54;
      *(_DWORD *)int64_t v53 = 136315138;
      uint64_t v55 = v82;
      uint64_t v56 = sub_24B6823D0();
      uint64_t v93 = sub_24B5627B8(v56, v57, &v94);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      uint64_t v58 = (void (*)(char *, uint64_t))v86[1];
      uint64_t v59 = v90;
      v58(v55, v90);
      _os_log_impl(&dword_24B55E000, v51, v52, "HEIC Writer: Save work item submitted: %s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v54, -1, -1);
      MEMORY[0x24C5D6C00](v53, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v83, v70);
      v58(v85, v59);
    }
    else
    {

      swift_release();
      uint64_t v60 = (void (*)(char *, uint64_t))v86[1];
      uint64_t v61 = v90;
      v60(v82, v90);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v83, v50);
      v60(v85, v61);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v86[1])(v85, v90);
  }
  return swift_release();
}

uint64_t sub_24B5DF8D4(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_isWritingCancelled) == 1)
  {
    uint64_t v7 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
    uint64_t v8 = sub_24B6824B0();
    os_log_type_t v9 = sub_24B682B20();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_24B55E000, v8, v9, "HEIC Writer: Writer is cancelled!", v10, 2u);
      MEMORY[0x24C5D6C00](v10, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_24B5DFA3C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v44 = a5;
  uint64_t v48 = a2;
  uint64_t v42 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  MEMORY[0x270FA5388](v42);
  os_log_t v43 = (os_log_t)&v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_24B682410();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v41[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_24B6824D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = &v41[-v16];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v46 = a4;
    swift_beginAccess();
    uint64_t v45 = (void *)(a3 + 16);
    if (*(void *)(a3 + 16) && (swift_retain(), char v20 = sub_24B682690(), swift_release(), (v20 & 1) == 0))
    {
      uint64_t v34 = v46;
      long long v35 = *(_OWORD *)(v46 + 16);
      v50[0] = *(_OWORD *)v46;
      v50[1] = v35;
      uint64_t v51 = *(void *)(v46 + 32);
      sub_24B5E1D70((uint64_t *)v50, v44, v47);
      sub_24B5DBF68();
      uint64_t v36 = *(objc_class **)(v19 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
      uint64_t v37 = v42;
      os_log_t v38 = v43;
      uint64_t v39 = (char *)v43 + *(int *)(v42 + 20);
      uint64_t v40 = sub_24B6822E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v47, v40);
      v38->isa = v36;
      *(_OWORD *)((char *)&v38->isa + *(int *)(v37 + 24)) = xmmword_24B686600;
      sub_24B682500();
      swift_release();
      sub_24B5E829C((uint64_t)v38, type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo);
      uint64_t v23 = v48;
    }
    else
    {
      uint64_t v21 = sub_24B57CB70();
      uint64_t v22 = v13;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
      uint64_t v23 = v48;
      (*(void (**)(unsigned char *, char *, uint64_t))(v10 + 16))(v12, v48, v9);
      int64_t v24 = sub_24B6824B0();
      os_log_type_t v25 = sub_24B682B00();
      if (os_log_type_enabled(v24, v25))
      {
        os_log_t v43 = v24;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v44 = v19;
        uint64_t v27 = (uint8_t *)v26;
        uint64_t v28 = swift_slowAlloc();
        uint64_t v47 = v22;
        uint64_t v29 = v28;
        *(void *)&v50[0] = v28;
        *(_DWORD *)uint64_t v27 = 136315138;
        uint64_t v42 = (uint64_t)(v27 + 4);
        uint64_t v30 = sub_24B6823D0();
        uint64_t v49 = sub_24B5627B8(v30, v31, (uint64_t *)v50);
        uint64_t v23 = v48;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
        os_log_t v32 = v43;
        _os_log_impl(&dword_24B55E000, v43, v25, "HEIC Writer: Save work item cancelled: %s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v29, -1, -1);
        unint64_t v33 = v27;
        uint64_t v19 = v44;
        MEMORY[0x24C5D6C00](v33, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v47);
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);

        (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v22);
      }
      uint64_t v34 = v46;
    }
    sub_24B5E02C4(v19, v23, v45, v34);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5E02C4(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v44 = (uint64_t *)a4;
  uint64_t v39 = a2;
  uint64_t v7 = sub_24B682410();
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B6824D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  os_log_t v43 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  uint64_t v42 = a1;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v46 = sub_24B5E8B2C;
  uint64_t v47 = &v48;
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  sub_24B5E8328(v53);
  os_unfair_lock_unlock(v16 + 4);
  swift_release();
  swift_release();
  swift_beginAccess();
  *a3 = 0;
  swift_release();
  uint64_t v17 = sub_24B57CB70();
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v15, v17, v10);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v38 = v7;
  v19(v9, v39, v7);
  uint64_t v39 = v15;
  char v20 = sub_24B6824B0();
  os_log_type_t v21 = sub_24B682B00();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v17;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v52 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v25 = sub_24B6823D0();
    uint64_t v51 = sub_24B5627B8(v25, v26, &v52);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v38);
    _os_log_impl(&dword_24B55E000, v20, v21, "HEIC Writer: Save work item removed from active: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v24, -1, -1);
    uint64_t v27 = v23;
    uint64_t v17 = v37;
    MEMORY[0x24C5D6C00](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v38);
  }

  uint64_t v28 = v41;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v40 + 8);
  v29(v39, v41);
  dispatch_group_leave(*(dispatch_group_t *)(v42
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_saveDispatchGroup));
  uint64_t v30 = v43;
  v18(v43, v17, v28);
  unint64_t v31 = v44;
  sub_24B5E882C((uint64_t)v44);
  os_log_t v32 = sub_24B6824B0();
  os_log_type_t v33 = sub_24B682B00();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134349056;
    uint64_t v52 = *v31;
    sub_24B682CD0();
    sub_24B5E8870((uint64_t)v31);
    _os_log_impl(&dword_24B55E000, v32, v33, "HEIC Writer: High-resolution pixel buffer %{public}f released after saving HEIC.", v34, 0xCu);
    MEMORY[0x24C5D6C00](v34, -1, -1);
  }
  else
  {
    sub_24B5E8870((uint64_t)v31);
  }

  return ((uint64_t (*)(char *, uint64_t))v29)(v30, v28);
}

uint64_t sub_24B5E079C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v67 = a2;
  uint64_t v69 = a1;
  uint64_t v60 = sub_24B6824D0();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v73 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24B6825D0();
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_24B6822E0();
  uint64_t v78 = *(void *)(v65 - 8);
  uint64_t v66 = *(void *)(v78 + 64);
  MEMORY[0x270FA5388](v65);
  uint64_t v77 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v61 = (uint64_t)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_24B682410();
  uint64_t v76 = *(void **)(v79 - 8);
  uint64_t v9 = v76[8];
  uint64_t v10 = MEMORY[0x270FA5388](v79);
  uint64_t v72 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v55 - v12;
  uint64_t v62 = (char *)v55 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v55 - v14;
  v55[0] = OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock;
  uint64_t v16 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  uint64_t v80 = nullsub_1;
  uint64_t v81 = v3;
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  sub_24B5E8B0C();
  v55[1] = 0;
  os_unfair_lock_unlock(v16 + 4);
  swift_release();
  sub_24B682400();
  uint64_t v17 = swift_allocObject();
  uint64_t v74 = v17;
  *(void *)(v17 + 16) = 0;
  uint64_t v64 = (uint64_t *)(v17 + 16);
  uint64_t v18 = swift_allocObject();
  uint64_t v58 = v3;
  swift_weakInit();
  uint64_t v19 = v76;
  char v20 = (void (*)(char *, char *, uint64_t))v76[2];
  uint64_t v75 = v15;
  uint64_t v21 = v79;
  unint64_t v57 = v76 + 2;
  uint64_t v56 = v20;
  v20(v13, v15, v79);
  sub_24B5E7148(v67, (uint64_t)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  uint64_t v22 = v78;
  uint64_t v23 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v68, v65);
  uint64_t v24 = v19;
  unint64_t v25 = (*((unsigned __int8 *)v19 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v19 + 80);
  unint64_t v26 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (*(unsigned __int8 *)(v63 + 80) + v26 + 8) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v28 = (v8 + *(unsigned __int8 *)(v22 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v29 = (v66 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v18;
  ((void (*)(unint64_t, char *, uint64_t))v24[4])(v30 + v25, v62, v21);
  *(void *)(v30 + v26) = v74;
  sub_24B5E7B08(v61, v30 + v27);
  (*(void (**)(unint64_t, char *, uint64_t))(v78 + 32))(v30 + v28, v77, v23);
  *(void *)(v30 + v29) = v69;
  aBlock[4] = sub_24B5E7B6C;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8E078;
  _Block_copy(aBlock);
  uint64_t v83 = MEMORY[0x263F8EE78];
  sub_24B5E897C((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  swift_retain();
  swift_retain();
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  sub_24B6826C0();
  swift_allocObject();
  uint64_t v31 = sub_24B6826A0();
  swift_release();
  swift_release();
  os_log_t v32 = v64;
  swift_beginAccess();
  *os_log_t v32 = v31;
  uint64_t v33 = swift_release();
  uint64_t v34 = *v32;
  if (*v32)
  {
    uint64_t v35 = v58;
    uint64_t v36 = *(os_unfair_lock_s **)(v58 + v55[0]);
    uint64_t v37 = MEMORY[0x270FA5388](v33);
    uint64_t v38 = v75;
    v55[-4] = v35;
    v55[-3] = v38;
    v55[-2] = v34;
    MEMORY[0x270FA5388](v37);
    v55[-2] = sub_24B5E7CC8;
    v55[-1] = v39;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v36 + 4);
    sub_24B5E8B0C();
    os_unfair_lock_unlock(v36 + 4);
    swift_release();
    sub_24B682BF0();
    dispatch_group_enter(*(dispatch_group_t *)(v35
                                             + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup));
    uint64_t v40 = sub_24B57CB70();
    uint64_t v41 = v59;
    uint64_t v42 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v73, v40, v60);
    v56(v72, v38, v79);
    os_log_t v43 = sub_24B6824B0();
    os_log_type_t v44 = sub_24B682B00();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v83 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v47 = v72;
      uint64_t v48 = sub_24B6823D0();
      uint64_t v82 = sub_24B5627B8(v48, v49, &v83);
      sub_24B682CD0();
      swift_bridgeObjectRelease();
      uint64_t v50 = (void (*)(char *, uint64_t))v76[1];
      uint64_t v51 = v79;
      v50(v47, v79);
      _os_log_impl(&dword_24B55E000, v43, v44, "HEIC Writer: Update work item submitted: %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v46, -1, -1);
      MEMORY[0x24C5D6C00](v45, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v73, v60);
      v50(v75, v51);
    }
    else
    {

      swift_release();
      uint64_t v52 = (void (*)(char *, uint64_t))v76[1];
      uint64_t v53 = v79;
      v52(v72, v79);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v73, v42);
      v52(v75, v53);
    }
  }
  else
  {
    ((void (*)(char *, uint64_t))v76[1])(v75, v79);
  }
  return swift_release();
}

uint64_t sub_24B5E1158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  os_log_t v48 = a5;
  uint64_t v49 = a2;
  uint64_t v46 = a4;
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  MEMORY[0x270FA5388](v6 - 8);
  os_log_type_t v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(0);
  MEMORY[0x270FA5388](v45);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B682410();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24B6824D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v41 - v17;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    os_log_t v43 = v9;
    swift_beginAccess();
    uint64_t v47 = (void *)(a3 + 16);
    if (*(void *)(a3 + 16) && (swift_retain(), char v21 = sub_24B682690(), swift_release(), (v21 & 1) == 0))
    {
      os_log_t v35 = v48;
      sub_24B5E7CF8(v46);
      sub_24B5DBF68();
      uint64_t v36 = *(void *)(v20 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_shotID);
      uint64_t v37 = v45;
      uint64_t v38 = v43;
      uint64_t v39 = (char *)v43 + *(int *)(v45 + 20);
      uint64_t v40 = sub_24B6822E0();
      (*(void (**)(char *, os_log_t, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v35, v40);
      *uint64_t v38 = v36;
      *(_OWORD *)((char *)v38 + *(int *)(v37 + 24)) = xmmword_24B686600;
      sub_24B682500();
      swift_release();
      sub_24B5E829C((uint64_t)v38, type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo);
      uint64_t v24 = v49;
    }
    else
    {
      uint64_t v22 = sub_24B57CB70();
      uint64_t v23 = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v22, v14);
      uint64_t v24 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v49, v10);
      unint64_t v25 = sub_24B6824B0();
      os_log_type_t v26 = sub_24B682B00();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_t v48 = v25;
        uint64_t v27 = swift_slowAlloc();
        uint64_t v42 = v20;
        unint64_t v28 = (uint8_t *)v27;
        uint64_t v29 = swift_slowAlloc();
        uint64_t v46 = v14;
        uint64_t v30 = v29;
        v50[0] = v29;
        *(_DWORD *)unint64_t v28 = 136315138;
        uint64_t v45 = (uint64_t)(v28 + 4);
        uint64_t v31 = sub_24B6823D0();
        _OWORD v50[2] = sub_24B5627B8(v31, v32, v50);
        uint64_t v24 = v49;
        sub_24B682CD0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        os_log_t v33 = v48;
        _os_log_impl(&dword_24B55E000, v48, v26, "HEIC Writer: Update work item cancelled: %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5D6C00](v30, -1, -1);
        uint64_t v34 = v28;
        uint64_t v20 = v42;
        MEMORY[0x24C5D6C00](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v46);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v14);
      }
    }
    sub_24B5E19F4(v20, v24, v47);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5E19F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_24B682410();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_queueActiveWorkItemsLock);
  uint64_t v26 = a1;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v29 = sub_24B5E82FC;
  uint64_t v30 = &v31;
  swift_retain();
  os_unfair_lock_lock(v12 + 4);
  sub_24B5E8328(v35);
  os_unfair_lock_unlock(v12 + 4);
  swift_release();
  swift_release();
  uint64_t v13 = sub_24B57CB70();
  uint64_t v24 = v9;
  uint64_t v25 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v23 = v5;
  v14(v7, a2, v5);
  uint64_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v35[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_24B6823D0();
    uint64_t v34 = sub_24B5627B8(v19, v20, v35);
    sub_24B682CD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v23);
    _os_log_impl(&dword_24B55E000, v15, v16, "HEIC Writer: Update work item removed from active: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v18, -1, -1);
    MEMORY[0x24C5D6C00](v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v23);
  }

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  dispatch_group_leave(*(dispatch_group_t *)(v26
                                           + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_updateDispatchGroup));
  char v21 = v27;
  swift_beginAccess();
  *char v21 = 0;
  return swift_release();
}

void sub_24B5E1D70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v194 = a3;
  uint64_t v255 = *MEMORY[0x263EF8340];
  uint64_t v199 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v199 - 8);
  MEMORY[0x270FA5388](v199);
  uint64_t v8 = (char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v195 = (uint64_t)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B682410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  float64x2_t v192 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v206 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v14 = MEMORY[0x270FA5388](v206);
  uint64_t v203 = (uint64_t)&v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v196 = (uint64_t)&v180 - v16;
  uint64_t v17 = *a1;
  uint64_t v19 = (__CVBuffer *)a1[1];
  uint64_t v18 = (void *)a1[2];
  id v20 = (id)a1[3];
  id v200 = (id)a1[4];
  id v204 = v18;
  id v205 = v20;
  if (v18)
  {
    char v21 = v18;
    if (!sub_24B5A2E7C(v21)) {
      goto LABEL_23;
    }

    id v20 = v205;
  }
  if (v20)
  {
    char v21 = (__CVBuffer *)v20;
    if (sub_24B5A3048(v21))
    {

      goto LABEL_7;
    }
LABEL_23:
    sub_24B5E619C();
    swift_allocError();
    *uint64_t v54 = 0;
    v54[1] = 0;
    swift_willThrow();

    return;
  }
LABEL_7:
  uint64_t v201 = a2 + *(int *)(v206 + 28);
  sub_24B56CF38(v201, (uint64_t)v252, &qword_2697CC9C0);
  sub_24B56CF38((uint64_t)v252, (uint64_t)v253, &qword_2697CC9C0);
  int v22 = sub_24B56CF9C((uint64_t)v253);
  uint64_t v191 = v12;
  if (v22 != 1)
  {
    uint64_t v23 = v254;
    if (v254)
    {
      sub_24B56CF38((uint64_t)v252, (uint64_t)&v224, &qword_2697CC9C0);
      id v24 = (id)v232;
      if (!sub_24B5A2F00(v23)
        || (uint64_t v25 = v11, v26 = a2, Width = CVPixelBufferGetWidth(v23), Width != CVPixelBufferGetWidth(v19))
        || (a2 = v26, uint64_t v11 = v25, Height = CVPixelBufferGetHeight(v23), Height != CVPixelBufferGetHeight(v19)))
      {
        sub_24B5E619C();
        swift_allocError();
        void *v55 = 0;
        v55[1] = 0;
        swift_willThrow();
        sub_24B5E761C((uint64_t)v252);
        return;
      }
      sub_24B5E761C((uint64_t)v252);
    }
  }
  uint64_t v184 = v11;
  uint64_t v190 = v3;
  int v231 = 0;
  long long v229 = 0u;
  long long v230 = 0u;
  long long v227 = 0u;
  long long v228 = 0u;
  long long v225 = 0u;
  long long v226 = 0u;
  long long v224 = 0u;
  long long v232 = 0u;
  long long v233 = 0u;
  long long v234 = 0u;
  id v235 = 0;
  long long v236 = 0u;
  long long v237 = 0u;
  long long v238 = 0u;
  long long v239 = 0u;
  long long v240 = 0u;
  long long v241 = 0u;
  long long v242 = 0u;
  long long v243 = 0u;
  long long v244 = 0u;
  long long v245 = 0u;
  long long v246 = 0u;
  long long v247 = 0u;
  long long v248 = 0u;
  int v249 = 0;
  long long v250 = 0u;
  long long v251 = 0u;
  uint64_t v29 = v19;
  *(void *)&long long v224 = v29;
  if (v204)
  {
    id v30 = v204;
    *(void *)&long long v225 = v204;
  }
  if (v205)
  {
    id v31 = v205;
    *((void *)&v225 + 1) = v205;
  }
  __n128 v181 = v8;
  uint64_t v193 = v6;
  sub_24B56CF38(v201, (uint64_t)v221, &qword_2697CC9C0);
  sub_24B56CF38((uint64_t)v221, (uint64_t)v222, &qword_2697CC9C0);
  if (sub_24B56CF9C((uint64_t)v222) != 1)
  {
    id v32 = v223;
    if (v223)
    {
      uint64_t v33 = v29;
      id v34 = v223;
      sub_24B56CF38((uint64_t)v221, (uint64_t)&v216, &qword_2697CC9C0);
      id v35 = v220;

      uint64_t v29 = v33;
      *(void *)&long long v226 = v32;
    }
  }
  uint64_t v36 = (_OWORD *)(a2 + *(int *)(v206 + 20));
  long long v37 = v36[1];
  long long v232 = *v36;
  long long v233 = v37;
  long long v38 = v36[3];
  long long v234 = v36[2];
  long long v39 = v36[4];
  long long v40 = v36[5];
  float64x2_t v197 = v36;
  uint64_t v198 = a2;
  long long v41 = v36[6];
  long long v227 = v38;
  long long v228 = v39;
  long long v229 = v40;
  long long v230 = v41;
  uint64_t v42 = a2 + *(int *)(v206 + 40);
  uint64_t v43 = *(void *)v42;
  uint64_t v44 = *(void *)(v42 + 8);
  uint64_t v45 = *(void *)(v42 + 16);
  char v46 = *(unsigned char *)(v42 + 24);
  unint64_t v180 = v29;
  uint64_t v47 = sub_24B5DAB78(v29, v43, v44, v45, v46);
  uint64_t v48 = sub_24B6827D0();
  uint64_t v50 = v49;
  if (v47[2])
  {
    uint64_t v51 = v48;
    swift_bridgeObjectRetain();
    unint64_t v52 = sub_24B562E8C(v51, v50);
    if (v53)
    {
      sub_24B562F48(v47[7] + 32 * v52, (uint64_t)&v216);
    }
    else
    {
      long long v216 = 0u;
      long long v217 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v216 = 0u;
    long long v217 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v217 + 1))
  {
    sub_24B562F04(&qword_2697CC060);
    if (swift_dynamicCast())
    {
      unint64_t v56 = *(void *)&v215[0];
      goto LABEL_33;
    }
  }
  else
  {
    sub_24B5632A8((uint64_t)&v216, (uint64_t *)&unk_2697CCA30);
  }
  unint64_t v56 = sub_24B560D28(MEMORY[0x263F8EE78]);
LABEL_33:
  unint64_t v57 = (void *)OCNonModularSPI_AppleMakerNote_Timestamp();
  if (!v57)
  {
    __break(1u);
    goto LABEL_109;
  }
  id v58 = v57;
  uint64_t v50 = sub_24B6827D0();
  uint64_t v60 = v59;

  *((void *)&v217 + 1) = MEMORY[0x263F8D538];
  *(void *)&long long v216 = v17;
  sub_24B563220(&v216, v215);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v211 = v56;
  sub_24B5E4AB0(v215, v50, v60, isUniquelyReferenced_nonNull_native);
  uint64_t v62 = (void *)v211;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = (void *)OCNonModularSPI_AppleMakerNote_Camera();
  if (!v63)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  id v64 = v63;
  uint64_t v65 = sub_24B6827D0();
  uint64_t v67 = v66;

  int v68 = OCNonModularSPI_AppleMakerNote_BackWideAngleCamera();
  uint64_t v212 = MEMORY[0x263F8E548];
  LODWORD(v211) = v68;
  sub_24B563220(&v211, v210);
  char v69 = swift_isUniquelyReferenced_nonNull_native();
  float64x2_t v209 = v62;
  sub_24B5E4AB0(v210, v65, v67, v69);
  uint64_t v70 = v209;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = sub_24B6827D0();
  uint64_t v73 = v72;
  uint64_t v182 = sub_24B562F04(&qword_2697CC060);
  uint64_t v212 = v182;
  *(void *)&long long v211 = v70;
  sub_24B563220(&v211, v210);
  uint64_t v185 = v70;
  swift_bridgeObjectRetain();
  char v74 = swift_isUniquelyReferenced_nonNull_native();
  float64x2_t v209 = v47;
  sub_24B5E4AB0(v210, v71, v73, v74);
  uint64_t v75 = v209;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v76 = (void *)sub_24B682710();
  int v183 = v75;
  swift_bridgeObjectRelease();
  id v77 = v76;

  *((void *)&v224 + 1) = v77;
  uint64_t v78 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  LOBYTE(v231) = sub_24B5DA968();
  int v231 = v231;
  OCNonModularSPI_Serialization_InvalidObjectTransform();
  long long v240 = v79;
  long long v241 = v80;
  long long v242 = v81;
  long long v243 = v82;
  sub_24B56CF38(v201, (uint64_t)v215, &qword_2697CC9C0);
  uint64_t v83 = v198;
  uint64_t v84 = v196;
  sub_24B5E7148(v198, v196, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  sub_24B56CF38((uint64_t)v215, (uint64_t)&v216, &qword_2697CC9C0);
  if (sub_24B56CF9C((uint64_t)&v216) == 1)
  {
    os_log_type_t v85 = (int *)v206;
    uint64_t v86 = v84 + *(int *)(v206 + 32);
    uint64_t v87 = v193;
    if (*(unsigned char *)(v86 + 73))
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      long long v188 = v89;
      long long v189 = v88;
      long long v186 = v91;
      long long v187 = v90;
    }
    else
    {
      long long v189 = *(_OWORD *)v86;
      long long v188 = *(_OWORD *)(v86 + 16);
      long long v187 = *(_OWORD *)(v86 + 32);
      long long v186 = *(_OWORD *)(v86 + 48);
    }
  }
  else
  {
    long long v188 = v217;
    long long v189 = v216;
    long long v186 = v219;
    long long v187 = v218;
    uint64_t v87 = v193;
    os_log_type_t v85 = (int *)v206;
  }
  sub_24B5E829C(v84, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  long long v244 = v189;
  long long v245 = v188;
  long long v246 = v187;
  long long v247 = v186;
  uint64_t v92 = *(void **)(v83 + v85[11]);
  if (v92)
  {
    id v93 = v92;
    uint64_t v94 = *(void *)(sub_24B682AD0() + 16);
    swift_bridgeObjectRelease();
    if (v94)
    {
      unint64_t v95 = *(void *)(sub_24B682AD0() + 16);
      swift_bridgeObjectRelease();
      if (v95 >> 58)
      {
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      *(void *)&long long v211 = sub_24B5E71B0(32 * v95);
      *((void *)&v211 + 1) = v96;
      id v97 = v93;
      uint64_t v98 = v190;
      char v99 = sub_24B5E72EC((uint64_t *)&v211, v97);
      uint64_t v190 = v98;

      long long v100 = v211;
      if (v99)
      {
        id v101 = (id)sub_24B682310();

        sub_24B586220(v100, *((unint64_t *)&v100 + 1));
        id v102 = v101;

        *(void *)&long long v248 = v102;
      }
      else
      {
        sub_24B586220(v211, *((unint64_t *)&v211 + 1));
      }
      uint64_t v83 = v198;
    }
    else
    {
    }
  }
  id v103 = v200;
  if (v200)
  {
    id v104 = v200;
    *((void *)&v226 + 1) = v103;
  }
  id v105 = *(void **)((char *)v197 + *(int *)(v78 + 28));
  if (!v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  uint64_t v50 = v78;
  id v106 = v105;
  id v107 = (id)OCNonModularSPI_AVCameraCalibrationData_CreateDictionaryFrom();
  if (!v107)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  int v108 = v107;
  sub_24B682740();
  swift_bridgeObjectRelease();

  int v109 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  id v110 = v109;

  id v235 = v110;
  uint64_t v87 = v193;
  uint64_t v83 = v198;
  os_log_type_t v85 = (int *)v206;
LABEL_54:
  sub_24B681D60();
  swift_bridgeObjectRetain();
  int v111 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  id v112 = v111;

  *((void *)&v248 + 1) = v112;
  sub_24B56CF38(v201, (uint64_t)v210, &qword_2697CC9C0);
  sub_24B56CF38((uint64_t)v210, (uint64_t)&v211, &qword_2697CC9C0);
  LODWORD(v112) = sub_24B56CF9C((uint64_t)&v211);
  uint64_t v113 = v213;
  char v114 = v214;
  sub_24B5E7148(v83, v203, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  if v112 == 1 || (v114)
  {
    uint64_t v115 = v203 + v85[8];
    uint64_t v113 = *(void *)(v115 + 64);
    char v116 = *(unsigned char *)(v115 + 72);
    char v117 = *(unsigned char *)(v115 + 73);
    sub_24B5E829C(v203, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    int v118 = -1;
    if (v117 & 1) != 0 || (v116) {
      goto LABEL_61;
    }
  }
  else
  {
    sub_24B5E829C(v203, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  }
  if (v113 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_89;
  }
  int v118 = v113;
  if (v113 > 0x7FFFFFFF)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
LABEL_61:
  int v249 = v118;
  uint64_t v119 = v83;
  uint64_t v120 = v85;
  uint64_t v121 = v195;
  sub_24B563A6C(v119 + v85[6], v195, &qword_2697CC460);
  uint64_t v122 = v191;
  uint64_t v123 = v184;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48))(v121, 1, v184) == 1)
  {
    sub_24B5632A8(v121, &qword_2697CC460);
  }
  else
  {
    uint64_t v124 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 32);
    unint64_t v206 = v78;
    uint64_t v125 = v192;
    v124(v192, v121, v123);
    sub_24B6823D0();
    uint64_t v126 = v87;
    uint64_t v127 = sub_24B6827A0();
    swift_bridgeObjectRelease();
    uint64_t v128 = *(void (**)(char *, uint64_t))(v122 + 8);
    uint64_t v129 = (void *)v127;
    uint64_t v87 = v126;
    id v130 = v129;
    uint64_t v131 = v125;
    uint64_t v78 = v206;
    v128(v131, v123);

    *(void *)&long long v250 = v130;
  }
  uint64_t v132 = v198;
  int v133 = *(unsigned __int8 *)(v198 + v120[9]);
  if (v133 != 2)
  {
    LOBYTE(v209) = v133 & 1;
    uint64_t v134 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
    if (v134 >= (uint64_t)0xFFFFFFFF80000000)
    {
      if (v134 <= 0x7FFFFFFF) {
        goto LABEL_68;
      }
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  LODWORD(v134) = -1;
LABEL_68:
  DWORD2(v250) = v134;
  uint64_t v135 = v132 + v120[12];
  if (*(unsigned char *)(v135 + 8))
  {
    LODWORD(v136) = -1;
  }
  else
  {
    uint64_t v136 = *(void *)v135;
    if (v136 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    if (v136 > 0x7FFFFFFF)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
  }
  HIDWORD(v250) = v136;
  int64_t v137 = (char *)v197 + *(int *)(v78 + 32);
  if ((v137[64] & 1) == 0)
  {
    long long v139 = *((_OWORD *)v137 + 1);
    long long v138 = *((_OWORD *)v137 + 2);
    long long v140 = *(_OWORD *)v137;
    uint64_t v142 = *((void *)v137 + 6);
    uint64_t v141 = *((void *)v137 + 7);
    long long v236 = v140;
    long long v237 = v139;
    long long v238 = v138;
    *((void *)&v239 + 1) = v141;
    *(void *)&long long v239 = v142;
  }
  unint64_t v206 = *(void *)(v132 + v120[13]);
  unint64_t v143 = v206;
  if (!(v206 >> 62))
  {
    uint64_t v50 = *(void *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v144 = v202;
    if (!v50) {
      goto LABEL_101;
    }
    swift_bridgeObjectRetain();
    goto LABEL_77;
  }
LABEL_92:
  swift_bridgeObjectRetain();
  uint64_t v153 = sub_24B682F00();
  swift_bridgeObjectRelease();
  if (v153)
  {
    swift_bridgeObjectRetain();
    uint64_t v154 = sub_24B682F00();
    if (!v154)
    {
LABEL_99:
      swift_bridgeObjectRelease();
      uint64_t v155 = (void *)sub_24B682980();
      swift_bridgeObjectRelease();
      id v156 = v155;

      *(void *)&long long v251 = v156;
      uint64_t v87 = v193;
      goto LABEL_100;
    }
    uint64_t v50 = v154;
    if (v154 < 1)
    {
      __break(1u);
      goto LABEL_96;
    }
LABEL_111:
    unint64_t v143 = v206;
LABEL_77:
    uint64_t v145 = 0;
    unint64_t v146 = v143 & 0xC000000000000001;
    long long v147 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if (v146)
      {
        uint64_t v148 = MEMORY[0x24C5D4F60](v145, v143);
      }
      else
      {
        uint64_t v148 = *(void *)(v143 + 8 * v145 + 32);
        swift_retain();
      }
      uint64_t v149 = (*(uint64_t (**)(void))(*(void *)v148 + 192))();
      if (v149)
      {
        uint64_t v150 = v149;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v147 = sub_24B5E322C(0, v147[2] + 1, 1, v147);
        }
        unint64_t v152 = v147[2];
        unint64_t v151 = v147[3];
        if (v152 >= v151 >> 1) {
          long long v147 = sub_24B5E322C((void *)(v151 > 1), v152 + 1, 1, v147);
        }
        v147[2] = v152 + 1;
        v147[v152 + 4] = v150;
        unint64_t v143 = v206;
      }
      ++v145;
      swift_release();
    }
    while (v50 != v145);
    goto LABEL_99;
  }
LABEL_100:
  uint64_t v144 = v202;
LABEL_101:
  swift_beginAccess();
  uint64_t v157 = (void *)sub_24B682250();
  int v158 = OCNonModularSPI_CMPhoto_write();

  uint64_t v159 = v199;
  if (v158)
  {
    swift_bridgeObjectRelease();
    uint64_t v207 = 0;
    unint64_t v208 = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    sub_24B682A50();
    uint64_t v160 = v207;
    unint64_t v161 = v208;
    sub_24B5E619C();
    swift_allocError();
    *float64x2_t v162 = v160;
    v162[1] = v161;
    swift_willThrow();
  }
  else
  {
    uint64_t v163 = *(void *)(v144 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten);
    BOOL v164 = __OFADD__(v163, 1);
    uint64_t v165 = v163 + 1;
    if (v164) {
      __break(1u);
    }
    *(void *)(v144 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_numFilesWritten) = v165;
    uint64_t v166 = sub_24B57CB70();
    uint64_t v167 = v181;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v181, v166, v159);
    id v168 = v200;
    float64x2_t v169 = v180;
    id v170 = v204;
    uint64_t v171 = v87;
    id v172 = v205;
    id v173 = v168;
    float64x2_t v174 = v169;
    id v175 = v170;
    id v176 = v172;
    float64x2_t v177 = sub_24B6824B0();
    os_log_type_t v178 = sub_24B682B30();
    if (os_log_type_enabled(v177, v178))
    {
      uint64_t v179 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v179 = 134349056;
      uint64_t v207 = v17;
      sub_24B682CD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24B55E000, v177, v178, "HEIC Writer: Successfully saved image HEIC file at time = %{public}f", v179, 0xCu);
      MEMORY[0x24C5D6C00](v179, -1, -1);

      (*(void (**)(char *, uint64_t))(v193 + 8))(v167, v199);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v171 + 8))(v167, v199);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_24B5E2F70(double a1)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24B6856B0;
  *(void *)(v2 + 32) = sub_24B6822D0();
  *(void *)(v2 + 40) = v3;
  uint64_t v10 = sub_24B5F8B94(a1);
  uint64_t v11 = v4;
  uint64_t v5 = self;
  sub_24B682890();
  *(void *)(v2 + 48) = v10;
  *(void *)(v2 + 56) = v11;
  uint64_t v6 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_pathWithComponents_, v6);

  uint64_t v8 = sub_24B6827D0();
  return v8;
}

uint64_t ObjectCaptureHEICBundleWriter.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_url;
  uint64_t v2 = sub_24B6822E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_24B5D7FB0(*(void *)(v0 + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ObjectCaptureHEICBundleWriter.__deallocating_deinit()
{
  ObjectCaptureHEICBundleWriter.deinit();

  return swift_deallocClassInstance();
}

void *sub_24B5E322C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24B562F04(&qword_2697CC7C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24B5E7680(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_24B5E333C(uint64_t a1)
{
  sub_24B6822E0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
  sub_24B5E897C(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
  uint64_t v3 = sub_24B682750();
  return sub_24B5E5300(a1, v3, MEMORY[0x263F06EA8], &qword_2697CC6C0, v2, MEMORY[0x263F06EC0]);
}

unint64_t sub_24B5E3410(double a1)
{
  uint64_t v2 = sub_24B683080();

  return sub_24B5E54A0(v2, a1);
}

double sub_24B5E3458@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24B562E8C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24B5E5538();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_24B563220((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_24B5E4408(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_24B5E355C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04((uint64_t *)&unk_2697CCDE0);
  uint64_t v6 = sub_24B682F20();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    id v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      char v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      id v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_24B563220(v24, v35);
      }
      else
      {
        sub_24B562F48((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24B683090();
      sub_24B682860();
      uint64_t result = sub_24B6830D0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_24B563220(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B5E385C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24B6822E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24B562F04(&qword_2697CC808);
  int v42 = a2;
  uint64_t v10 = sub_24B682F20();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    long long v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    long long v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    long long v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_24B5E897C(&qword_2697CC6B8, MEMORY[0x263F06EA8]);
      uint64_t result = sub_24B682750();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24B5E3C80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24B562F04(&qword_2697CC7F8);
  char v9 = a2;
  uint64_t result = sub_24B682F20();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    long long v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    uint64_t v35 = v3;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_24B5E7B08(v26, (uint64_t)v7);
      }
      else {
        sub_24B5E7148(v26, (uint64_t)v7, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      }
      uint64_t result = sub_24B683080();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_24B5E7B08((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24B5E3FE4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24B562F04(&qword_2697CC7C8);
  int v46 = a2;
  uint64_t v10 = sub_24B682F20();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_24B5E897C(&qword_2697CC408, MEMORY[0x263F07508]);
    uint64_t result = sub_24B682750();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

unint64_t sub_24B5E4408(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24B682D90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24B683090();
        swift_bridgeObjectRetain();
        sub_24B682860();
        uint64_t v10 = sub_24B6830D0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24B5E45E0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24B682D90();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_24B683080();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24B5E47B8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682410();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_24B682D90();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      unint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_24B5E897C(&qword_2697CC408, MEMORY[0x263F07508]);
        uint64_t v17 = sub_24B682750();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    BOOL v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    BOOL v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *BOOL v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_24B5E4AB0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24B562E8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24B5E5538();
      goto LABEL_7;
    }
    sub_24B5E355C(v15, a4 & 1);
    unint64_t v21 = sub_24B562E8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)sub_24B682FF0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_24B563254((uint64_t)v19);
    return sub_24B563220(a1, v19);
  }
LABEL_13:
  sub_24B5E5090(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_24B5E4C04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B6822E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24B5E333C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B5E5720();
    goto LABEL_7;
  }
  sub_24B5E385C(result, a3 & 1);
  uint64_t result = sub_24B5E333C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B5E50FC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24B5E4DA0(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24B5E3410(a3);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a2 & 1) == 0)
  {
    if (v15 >= v13 && (a2 & 1) == 0)
    {
      sub_24B5E59B4();
      goto LABEL_7;
    }
    sub_24B5E3C80(v13, a2 & 1);
    unint64_t v20 = sub_24B5E3410(a3);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17
        + *(void *)(*(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8) + 72) * v10;
    return sub_24B5E89C4(a1, v18);
  }
LABEL_13:

  return sub_24B5E51B4(v10, a1, v16, a3);
}

uint64_t sub_24B5E4EE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24B682410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_24B59F008(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24B5E5C20();
    goto LABEL_7;
  }
  sub_24B5E3FE4(v17, a3 & 1);
  unint64_t v23 = sub_24B59F008(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_24B682FF0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24B5E5248(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_24B5E5090(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_24B563220(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_24B5E50FC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24B6822E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_24B5E51B4(unint64_t a1, uint64_t a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  *(double *)(a3[6] + 8 * a1) = a4;
  uint64_t v7 = a3[7];
  uint64_t v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t result = sub_24B5E7B08(a2, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a3[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a3[2] = v12;
  }
  return result;
}

uint64_t sub_24B5E5248(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24B682410();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_24B5E5300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  char v24 = a5;
  uint64_t v25 = a6;
  unint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_24B5E897C(v23, v24);
      char v19 = sub_24B682780();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_24B5E54A0(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

void *sub_24B5E5538()
{
  uint64_t v1 = v0;
  sub_24B562F04((uint64_t *)&unk_2697CCDE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_24B562F48(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_24B563220(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24B5E5720()
{
  uint64_t v1 = sub_24B6822E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC808);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24B682F10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_24B5E59B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC7F8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24B682F10();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  unint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    uint64_t v19 = 8 * v18;
    uint64_t v20 = *(void *)(*(void *)(v6 + 48) + 8 * v18);
    unint64_t v21 = *(void *)(v3 + 72) * v18;
    sub_24B5E7148(*(void *)(v6 + 56) + v21, (uint64_t)v5, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    *(void *)(*(void *)(v8 + 48) + v19) = v20;
    unint64_t result = (void *)sub_24B5E7B08((uint64_t)v5, *(void *)(v8 + 56) + v21);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24B5E5C20()
{
  uint64_t v1 = sub_24B682410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CC7C8);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24B682F10();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_24B5E5EB8(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t type metadata accessor for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CE890);
}

uint64_t sub_24B5E5EE8(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return sub_24B5E5EF8(a1, a2);
  }
  return a1;
}

uint64_t sub_24B5E5EF8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24B5E5F0C(uint64_t a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC828);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (double *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_24B562F04(&qword_2697CC7F8);
    uint64_t v7 = (void *)sub_24B682F30();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_24B563A6C(v9, (uint64_t)v5, &qword_2697CC828);
      double v11 = *v5;
      unint64_t result = sub_24B5E3410(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(double *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      unint64_t result = sub_24B5E7B08(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B5E60C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC820);
    uint64_t v3 = (void *)sub_24B682F30();
    for (uint64_t i = (double *)(a1 + 40); ; i += 2)
    {
      double v5 = *(i - 1);
      int v6 = *(_DWORD *)i;
      unint64_t result = sub_24B5E3410(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(double *)(v3[6] + 8 * result) = v5;
      *(_DWORD *)(v3[7] + 4 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_24B5E619C()
{
  unint64_t result = qword_2697CC758;
  if (!qword_2697CC758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC758);
  }
  return result;
}

uint64_t sub_24B5E61F0()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B5E6228(uint64_t *a1, double *a2)
{
  return sub_24B5DD2D8(a1, a2);
}

uint64_t sub_24B5E6230()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5E6268(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  uint64_t v4 = sub_24B562F04(&qword_2697CC800);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_24B5E62B4(double *a1)
{
  return sub_24B5DD574(a1);
}

unint64_t sub_24B5E62BC(id *a1)
{
  return sub_24B5DD6C0(a1, v1);
}

uint64_t sub_24B5E62C4()
{
  return sub_24B5DE764(v0);
}

uint64_t sub_24B5E62F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_24B5E631C()
{
  unint64_t result = qword_2697CC7B0;
  if (!qword_2697CC7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CC7B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ARCameraTrackingStateFlattened(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ARCameraTrackingStateFlattened(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24B5E64CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ARCameraTrackingStateFlattened()
{
  return &type metadata for ARCameraTrackingStateFlattened;
}

uint64_t sub_24B5E6504()
{
  return type metadata accessor for ObjectCaptureHEICBundleWriter(0);
}

uint64_t type metadata accessor for ObjectCaptureHEICBundleWriter(uint64_t a1)
{
  return sub_24B56BBFC(a1, (uint64_t *)&unk_2697CE880);
}

uint64_t sub_24B5E652C()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureHEICBundleWriter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureHEICBundleWriter);
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.completionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.writeStatusPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.__allocating_init(publishers:url:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.cancelActiveWritingWorkItems()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of ObjectCaptureHEICBundleWriter.activeWriteQueueSize.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

unint64_t destroy for ObjectCaptureHEICBundleWriter.Error(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s6CoreOC29ObjectCaptureHEICBundleWriterC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ObjectCaptureHEICBundleWriter.Error(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ObjectCaptureHEICBundleWriter.Error(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_24B5E6934(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24B5E694C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectCaptureHEICBundleWriter.Error()
{
  return &type metadata for ObjectCaptureHEICBundleWriter.Error;
}

uint64_t *initializeBufferWithCopyOfBuffer for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24B6822E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    char v13 = (char *)a2 + v11;
    unint64_t v14 = *((void *)v13 + 1);
    if (v14 < 4)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = v14;
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

unint64_t destroy for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24B6822E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 24) + 8);
  if (result >= 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ObjectCaptureHEICBundleWriter.WriteInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B6822E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  unint64_t v13 = *((void *)v12 + 1);
  if (v13 < 4)
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  else
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ObjectCaptureHEICBundleWriter.WriteInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B6822E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  unint64_t v13 = *(void *)((char *)a1 + v10 + 8);
  unint64_t v14 = v12[1];
  if (v13 == 3)
  {
    if (v14 >= 4) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v14 == 3)
  {
    sub_24B5E6D20((uint64_t)v11);
    goto LABEL_11;
  }
  if (v13 >= 3)
  {
    if (v14 >= 3)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24B5632A8((uint64_t)v11, &qword_2697CC7B8);
    goto LABEL_11;
  }
  if (v14 < 3)
  {
LABEL_11:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    return a1;
  }
LABEL_8:
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24B5E6D20(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *initializeWithTake for ObjectCaptureHEICBundleWriter.WriteInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B6822E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ObjectCaptureHEICBundleWriter.WriteInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24B6822E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  unint64_t v13 = *(void *)((char *)a1 + v10 + 8);
  unint64_t v14 = v12[1];
  if (v13 != 3)
  {
    if (v14 == 3)
    {
      sub_24B5E6D20((uint64_t)v11);
    }
    else if (v13 >= 3)
    {
      if (v14 >= 3)
      {
        *uint64_t v11 = *v12;
        v11[1] = v14;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_24B5632A8((uint64_t)v11, &qword_2697CC7B8);
    }
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24B5E6F00);
}

uint64_t sub_24B5E6F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 - 3) & ~(((int)v12 - 3) >> 31);
  }
}

uint64_t storeEnumTagSinglePayload for ObjectCaptureHEICBundleWriter.WriteInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24B5E6FE0);
}

uint64_t sub_24B5E6FE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24B6822E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 + 3);
  }
  return result;
}

uint64_t sub_24B5E70A4()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24B5E7148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B5E71B0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_24B6820D0();
      swift_allocObject();
      sub_24B6820A0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24B682300();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_24B5E7250(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24B682090();
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v6 = result;
  uint64_t result = sub_24B6820C0();
  uint64_t v7 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_24B6820B0();
  sub_24B5DB770(v6 + v7, &v9);
  if (!v2) {
    char v8 = v9;
  }
  return v8 & 1;
}

uint64_t sub_24B5E72EC(uint64_t *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v8 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_24B686610;
      id v9 = a2;
      uint64_t v10 = v5 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_16;
      }
      if (v10 < (int)v5) {
        goto LABEL_20;
      }
      if (sub_24B682090() && __OFSUB__((int)v5, sub_24B6820C0())) {
        goto LABEL_21;
      }
      sub_24B6820D0();
      swift_allocObject();
      uint64_t v16 = sub_24B682080();
      swift_release();
      uint64_t v8 = v16;
LABEL_16:
      if (v10 < (int)v5)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
      id v17 = v9;
      LOBYTE(v2) = sub_24B5E7250((int)v5, v5 >> 32);

      *a1 = v5;
      a1[1] = v8 | 0x4000000000000000;
      return v2 & 1;
    case 2uLL:
      *(void *)&long long v20 = *a1;
      *((void *)&v20 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      id v11 = a2;
      sub_24B6822F0();
      uint64_t v12 = *((void *)&v20 + 1);
      uint64_t v2 = *(void *)(v20 + 16);
      uint64_t v13 = *(void *)(v20 + 24);
      id v14 = v11;
      char v15 = sub_24B5E7250(v2, v13);
      if (!v3) {
        LOBYTE(v2) = v15;
      }

      *a1 = v20;
      a1[1] = v12 | 0x8000000000000000;
      return v2 & 1;
    case 3uLL:
      *(void *)((char *)&v20 + 7) = 0;
      *(void *)&long long v20 = 0;
      sub_24B5DB770((uint64_t)&v20, &v19);
      if (!v3) {
        LOBYTE(v2) = v19;
      }
      return v2 & 1;
    default:
      *(void *)&long long v20 = *a1;
      WORD4(v20) = v4;
      BYTE10(v20) = BYTE2(v4);
      BYTE11(v20) = BYTE3(v4);
      BYTE12(v20) = BYTE4(v4);
      BYTE13(v20) = BYTE5(v4);
      BYTE14(v20) = BYTE6(v4);
      sub_24B5DB770((uint64_t)&v20, &v19);
      if (!v3) {
        LOBYTE(v2) = v19;
      }
      unint64_t v7 = DWORD2(v20) | ((unint64_t)BYTE12(v20) << 32) | ((unint64_t)BYTE13(v20) << 40) | ((unint64_t)BYTE14(v20) << 48);
      *a1 = v20;
      a1[1] = v7;
      return v2 & 1;
  }
}

uint64_t sub_24B5E761C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24B5E7680(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_24B562F04(&qword_2697CC060);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5E778C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B5E77C4()
{
  uint64_t v1 = sub_24B682410();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v26 + 24) & ~v26;
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v6 = sub_24B6822E0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v19 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v18 = *(void *)(v24 + 64);
  swift_release();
  uint64_t v22 = v1;
  id v17 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v17(v0 + v3, v1);
  swift_release();
  uint64_t v21 = (v4 + v23 + 8) & ~v23;
  uint64_t v7 = v0 + v21;
  uint64_t v8 = v0 + v21 + v5[5];
  uint64_t v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v10 = v8 + *(int *)(v9 + 24);
  uint64_t v11 = sub_24B682C80();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + v5[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v22)) {
    v17(v13, v22);
  }
  id v14 = *(void **)(v7 + v5[7] + 128);
  if (v14 != (void *)1) {

  }
  uint64_t v15 = (v21 + v20 + v19) & ~v19;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v0 + v15, v25);

  return MEMORY[0x270FA0238](v0, ((v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v26 | v23 | v19 | 7);
}

uint64_t sub_24B5E7B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5E7B6C()
{
  uint64_t v1 = *(void *)(sub_24B682410() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_24B6822E0() - 8);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + v3);
  uint64_t v10 = (v0 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_24B5E1158(v8, v0 + v2, v9, v0 + v5, v10);
}

uint64_t sub_24B5E7CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B5E7CC0()
{
  return swift_release();
}

uint64_t sub_24B5E7CC8()
{
  return sub_24B5DEBE0(v0[2], v0[3], v0[4]);
}

uint64_t sub_24B5E7CF8(uint64_t a1)
{
  uint64_t v42 = sub_24B6824D0();
  uint64_t v47 = *(void *)(v42 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v42);
  uint64_t v37 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v37 - v4;
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (uint64_t *)((char *)&v37 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v37 - v14;
  sub_24B56CF38(a1 + *(int *)(v13 + 28), (uint64_t)v45, &qword_2697CC9C0);
  sub_24B5E7148(a1, (uint64_t)v15, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  sub_24B56CF38((uint64_t)v45, (uint64_t)v46, &qword_2697CC9C0);
  if (sub_24B56CF9C((uint64_t)v46) == 1)
  {
    uint64_t v16 = &v15[*(int *)(v6 + 32)];
    if (v16[73])
    {
      OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      long long v40 = v18;
      long long v41 = v17;
      long long v38 = v20;
      long long v39 = v19;
    }
    else
    {
      long long v41 = *(_OWORD *)v16;
      long long v40 = *((_OWORD *)v16 + 1);
      long long v39 = *((_OWORD *)v16 + 2);
      long long v38 = *((_OWORD *)v16 + 3);
    }
  }
  else
  {
    long long v40 = v46[1];
    long long v41 = v46[0];
    long long v38 = v46[3];
    long long v39 = v46[2];
  }
  uint64_t v21 = v42;
  sub_24B5E829C((uint64_t)v15, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  uint64_t v22 = (void *)sub_24B682250();
  int updated = OCNonModularSPI_CMPhoto_updateInplace();

  uint64_t v24 = sub_24B57CB70();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  if (updated)
  {
    v25(v5, v24, v21);
    sub_24B5E7148(a1, (uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v26 = sub_24B6824B0();
    os_log_type_t v27 = sub_24B682B20();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134349056;
      uint64_t v21 = v42;
      uint64_t v43 = *v12;
      sub_24B682CD0();
      sub_24B5E829C((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      _os_log_impl(&dword_24B55E000, v26, v27, "HEIC Writer: Failed to update image HEIC file at\ntime = %{public}f!\nTry updating with new file.", v28, 0xCu);
      MEMORY[0x24C5D6C00](v28, -1, -1);
    }
    else
    {
      sub_24B5E829C((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v21);
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_24B682E40();
    sub_24B682890();
    sub_24B682A50();
    uint64_t v33 = v43;
    unint64_t v34 = v44;
    sub_24B5E619C();
    swift_allocError();
    void *v35 = v33;
    v35[1] = v34;
    return swift_willThrow();
  }
  else
  {
    BOOL v29 = v37;
    v25(v37, v24, v21);
    sub_24B5E7148(a1, (uint64_t)v9, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v30 = sub_24B6824B0();
    int v31 = sub_24B682B30();
    if (os_log_type_enabled(v30, (os_log_type_t)v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 134349056;
      uint64_t v43 = *v9;
      sub_24B682CD0();
      sub_24B5E829C((uint64_t)v9, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      _os_log_impl(&dword_24B55E000, v30, (os_log_type_t)v31, "HEIC Writer: Success updating image HEIC file at time = %{public}f", v32, 0xCu);
      MEMORY[0x24C5D6C00](v32, -1, -1);
    }
    else
    {
      sub_24B5E829C((uint64_t)v9, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v29, v21);
  }
}

uint64_t sub_24B5E829C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24B5E82FC@<X0>(void *a1@<X8>)
{
  return sub_24B5DED3C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_24B5E8328@<X0>(void *a1@<X8>)
{
  return sub_24B5E88B4(a1);
}

uint64_t sub_24B5E8340()
{
  return sub_24B5DF8D4(v0);
}

uint64_t sub_24B5E836C()
{
  uint64_t v1 = sub_24B682410();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v26 + 24) & ~v26;
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v6 = sub_24B6822E0();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  uint64_t v19 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v18 = *(void *)(v24 + 64);
  swift_release();
  uint64_t v22 = v1;
  long long v17 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v17(v0 + v3, v1);
  swift_release();

  uint64_t v21 = (v4 + v23 + 40) & ~v23;
  uint64_t v7 = v0 + v21;
  uint64_t v8 = v0 + v21 + v5[5];
  uint64_t v9 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v10 = v8 + *(int *)(v9 + 24);
  uint64_t v11 = sub_24B682C80();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 2, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v7 + v5[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v22)) {
    v17(v13, v22);
  }
  uint64_t v14 = *(void **)(v7 + v5[7] + 128);
  if (v14 != (void *)1) {

  }
  uint64_t v15 = (v21 + v20 + v19) & ~v19;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v0 + v15, v25);

  return MEMORY[0x270FA0238](v0, ((v18 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v26 | v23 | v19 | 7);
}

uint64_t sub_24B5E86DC()
{
  uint64_t v1 = *(void *)(sub_24B682410() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_24B6822E0() - 8);
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + v3);
  uint64_t v11 = v0 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_24B5DFA3C(v9, (char *)(v0 + v2), v10, v0 + v4, v0 + v6, v11);
}

uint64_t sub_24B5E882C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
  unint64_t v3 = *(void **)(a1 + 16);
  unint64_t v4 = *(void **)(a1 + 24);
  id v5 = *(id *)(a1 + 32);
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return a1;
}

uint64_t sub_24B5E8870(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
  unint64_t v3 = *(void **)(a1 + 24);
  unint64_t v4 = *(void **)(a1 + 32);

  return a1;
}

void *sub_24B5E88B4@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

id sub_24B5E88F8(id result)
{
  if ((unint64_t)result >= 7) {
    return result;
  }
  return result;
}

unint64_t sub_24B5E8908()
{
  unint64_t result = qword_2697CCE40;
  if (!qword_2697CCE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697CCE40);
  }
  return result;
}

void sub_24B5E895C(id a1)
{
  if (a1 != (id)7) {
    sub_24B5E896C(a1);
  }
}

void sub_24B5E896C(id a1)
{
  if ((unint64_t)a1 >= 7) {
}
  }

uint64_t sub_24B5E897C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5E89C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24B5E8A28(uint64_t a1, uint64_t a2)
{
  return sub_24B5DB930(a1, a2, v2);
}

uint64_t sub_24B5E8A30()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24B5E8A70()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)(result + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC6CoreOC29ObjectCaptureHEICBundleWriter_completionPromise);
    *uint64_t v4 = v1;
    v4[1] = v2;
    swift_retain();
    sub_24B5D7FB0(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5E8B0C()
{
  return sub_24B5E62F0();
}

uint64_t sub_24B5E8B2C@<X0>(void *a1@<X8>)
{
  return sub_24B5E82FC(a1);
}

uint64_t sub_24B5E8B44()
{
  return sub_24B5E7CC8();
}

uint64_t sub_24B5E8B5C(uint64_t a1)
{
  v19[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B6822E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = self;
  v19[0] = 0;
  id v7 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, a1, 3, v19);
  id v8 = v19[0];
  if (v7)
  {
    uint64_t v9 = sub_24B682320();
    unint64_t v11 = v10;

    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t v13 = (__CFString *)sub_24B6827A0();
    CFURLRef v14 = CFURLCreateWithFileSystemPath(v12, v13, kCFURLPOSIXPathStyle, 0);

    if (v14)
    {
      sub_24B6822B0();
      sub_24B682330();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

      sub_24B586220(v9, v11);
      return 1;
    }
    sub_24B586220(v9, v11);
  }
  else
  {
    uint64_t v15 = v8;
    uint64_t v16 = (void *)sub_24B6821B0();

    swift_willThrow();
  }
  return 0;
}

BOOL sub_24B5E8D98(CGImage *a1)
{
  uint64_t v2 = sub_24B6824A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  id v7 = (__CFString *)sub_24B6827A0();
  CFURLRef v8 = CFURLCreateWithFileSystemPath(v6, v7, kCFURLPOSIXPathStyle, 0);

  if (!v8) {
    return 0;
  }
  sub_24B682490();
  sub_24B682480();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = (__CFString *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  unint64_t v10 = CGImageDestinationCreateWithURL(v8, v9, 1uLL, 0);

  if (v10)
  {
    CGImageDestinationAddImage(v10, a1, 0);
    BOOL v11 = CGImageDestinationFinalize(v10);

    CFURLRef v8 = v10;
  }
  else
  {
    BOOL v11 = 0;
  }

  return v11;
}

uint64_t sub_24B5E8F30()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B562F04(&qword_2697CC830);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_24B682520();
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_24B5E8FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24B6825D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24B682640();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  CFAllocatorRef v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(a3 + 32);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  CFURLRef v14 = (void *)swift_allocObject();
  unsigned char v14[2] = v13;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_24B5F65DC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24B566C04;
  aBlock[3] = &unk_26FE8E2A8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24B6825F0();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24B5F4624((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
  sub_24B562F04((uint64_t *)&unk_2697CC490);
  sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
  sub_24B682D80();
  MEMORY[0x24C5D4CD0](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_24B5E92D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t sub_24B5E931C()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    sub_24B5E8F30();
    sub_24B562F04(&qword_2697CC830);
    sub_24B5678F4(&qword_2697CC838, &qword_2697CC830);
    uint64_t v1 = sub_24B682580();
    swift_release();
    *(void *)(v2 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t ObjectCaptureBundleWriter.__allocating_init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ObjectCaptureBundleWriter.init(publishers:url:)(a1, a2);
  return v4;
}

uint64_t ObjectCaptureBundleWriter.init(publishers:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v180 = a2;
  uint64_t v175 = a1;
  v182[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B562F04(&qword_2697CC840);
  uint64_t v170 = *(void *)(v3 - 8);
  uint64_t v171 = v3;
  MEMORY[0x270FA5388](v3);
  float64x2_t v169 = (char *)v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_24B562F04(&qword_2697CC848);
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_24B562F04(&qword_2697CC850);
  uint64_t v163 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  float64x2_t v162 = (char *)v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_24B562F04(&qword_2697CC730);
  uint64_t v160 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v159 = (char *)v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_24B562F04(&qword_2697CC738);
  uint64_t v157 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  id v156 = (char *)v151 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24B562F04(&qword_2697CC740);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v165 = (char *)v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_24B562F04(&qword_2697CC748);
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v153 = (char *)v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B6824D0();
  uint64_t v178 = *(void *)(v12 - 8);
  *(void *)&long long v179 = v12;
  MEMORY[0x270FA5388](v12);
  float64x2_t v177 = (char *)v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_24B682BC0();
  uint64_t v14 = *(void *)(v174 - 8);
  MEMORY[0x270FA5388](v174);
  id v173 = (char *)v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24B682B90();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_24B682640();
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v18 = sub_24B5658E8();
  uint64_t v176 = v2;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  sub_24B682620();
  v182[0] = (id)MEMORY[0x263F8EE78];
  sub_24B5F4624((unint64_t *)&qword_2697CC350, MEMORY[0x263F8F0F8]);
  sub_24B562F04(&qword_2697CC0C0);
  sub_24B5678F4((unint64_t *)&qword_2697CC360, &qword_2697CC0C0);
  sub_24B682D80();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v173, *MEMORY[0x263F8F130], v174);
  unint64_t v172 = v18;
  uint64_t v19 = v176;
  *(void *)(v19 + 32) = sub_24B682C00();
  *(void *)(v19 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_subscriptions) = MEMORY[0x263F8EE88];
  uint64_t v20 = (void *)(v19 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = v19 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
  *(_DWORD *)(v21 + 32) = 0;
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  uint64_t v22 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap;
  uint64_t v23 = MEMORY[0x263F8EE78];
  *(void *)(v19 + v22) = sub_24B5E5F0C(MEMORY[0x263F8EE78]);
  uint64_t v24 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap;
  *(void *)(v19 + v24) = sub_24B5F4548(v23);
  *(void *)(v19 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID) = 0;
  uint64_t v25 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot;
  *(unsigned char *)(v19 + v25) = sub_24B5F8164();
  uint64_t v26 = v19 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
  uint64_t v27 = sub_24B6822E0();
  id v173 = *(char **)(v27 - 8);
  (*((void (**)(uint64_t, uint64_t, uint64_t))v173 + 2))(v26, v180, v27);
  uint64_t v28 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, void))(v178 + 16))(v177, v28, v179);
  swift_retain_n();
  BOOL v29 = sub_24B6824B0();
  os_log_type_t v30 = sub_24B682B30();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v174 = v27;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 141558275;
    uint64_t v181 = 1752392040;
    v182[0] = v33;
    sub_24B682CD0();
    *(_WORD *)(v32 + 12) = 2081;
    sub_24B5F4624(&qword_2697CCB30, MEMORY[0x263F06EA8]);
    uint64_t v34 = sub_24B682F90();
    uint64_t v181 = sub_24B5627B8(v34, v35, (uint64_t *)v182);
    sub_24B682CD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24B55E000, v29, v30, "Bundle Writer: Writer output URL: %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v33, -1, -1);
    MEMORY[0x24C5D6C00](v32, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, void))(v178 + 8))(v177, v179);
  uint64_t v36 = v19;
  uint64_t v37 = self;
  id v38 = objc_msgSend(v37, sel_defaultManager);
  long long v39 = (void *)sub_24B682250();
  v182[0] = 0;
  unsigned int v40 = objc_msgSend(v38, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v39, 1, 0, v182);

  if (!v40)
  {
    id v149 = v182[0];
    swift_release();
LABEL_18:
    sub_24B6821B0();

    swift_willThrow();
    swift_release();
    (*((void (**)(uint64_t, uint64_t))v173 + 1))(v180, v174);
    return v36;
  }
  id v41 = v182[0];
  id v42 = objc_msgSend(v37, sel_defaultManager);
  sub_24B562F04(&qword_2697CC198);
  uint64_t v43 = swift_allocObject();
  long long v179 = xmmword_24B6856B0;
  *(_OWORD *)(v43 + 16) = xmmword_24B6856B0;
  *(void *)(v43 + 32) = sub_24B6822D0();
  *(void *)(v43 + 40) = v44;
  uint64_t v45 = self;
  *(void *)(v43 + 48) = 0x736567616D69;
  *(void *)(v43 + 56) = 0xE600000000000000;
  int v46 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v45, sel_pathWithComponents_, v46);

  sub_24B6827D0();
  uint64_t v48 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v49 = objc_msgSend(v42, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v48, 1, 0, v182);

  id v50 = v182[0];
  if (!v49) {
    goto LABEL_17;
  }
  id v51 = v182[0];
  id v52 = objc_msgSend(v37, sel_defaultManager);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v179;
  *(void *)(v53 + 32) = sub_24B6822D0();
  *(void *)(v53 + 40) = v54;
  *(void *)(v53 + 48) = 0x616D5F6874706564;
  *(void *)(v53 + 56) = 0xEA00000000007370;
  uint64_t v55 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v45, sel_pathWithComponents_, v55);

  sub_24B6827D0();
  unint64_t v57 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  LODWORD(v55) = objc_msgSend(v52, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v57, 1, 0, v182);

  id v50 = v182[0];
  if (!v55) {
    goto LABEL_17;
  }
  id v58 = v182[0];
  id v59 = objc_msgSend(v37, sel_defaultManager);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v179;
  *(void *)(v60 + 32) = sub_24B6822D0();
  *(void *)(v60 + 40) = v61;
  *(void *)(v60 + 48) = 0x6E656469666E6F63;
  *(void *)(v60 + 56) = 0xEF7370616D5F6563;
  uint64_t v62 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v63 = objc_msgSend(v45, sel_pathWithComponents_, v62);

  sub_24B6827D0();
  id v64 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  LODWORD(v62) = objc_msgSend(v59, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v64, 1, 0, v182);

  id v50 = v182[0];
  if (!v62)
  {
LABEL_17:
    id v149 = v50;
    uint64_t v36 = v176;
    swift_release();
    goto LABEL_18;
  }
  id v65 = v182[0];
  id v66 = objc_msgSend(v37, sel_defaultManager);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v179;
  *(void *)(v67 + 32) = sub_24B6822D0();
  *(void *)(v67 + 40) = v68;
  *(void *)(v67 + 48) = 0x6775626564;
  *(void *)(v67 + 56) = 0xE500000000000000;
  char v69 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(v45, sel_pathWithComponents_, v69);

  sub_24B6827D0();
  uint64_t v71 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v72 = objc_msgSend(v66, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v71, 1, 0, v182);

  id v73 = v182[0];
  uint64_t v36 = v176;
  if (!v72) {
    goto LABEL_20;
  }
  id v74 = v182[0];
  id v75 = objc_msgSend(v37, sel_defaultManager);
  sub_24B5EE3B8();
  uint64_t v76 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v77 = objc_msgSend(v75, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v76, 1, 0, v182);

  id v73 = v182[0];
  if (!v77) {
    goto LABEL_20;
  }
  id v78 = v182[0];
  id v79 = objc_msgSend(v37, sel_defaultManager);
  sub_24B5EE3CC();
  long long v80 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v81 = objc_msgSend(v79, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v80, 1, 0, v182);

  id v73 = v182[0];
  if (!v81) {
    goto LABEL_20;
  }
  id v82 = v182[0];
  id v83 = objc_msgSend(v37, sel_defaultManager);
  sub_24B5EE3E8();
  uint64_t v84 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v85 = objc_msgSend(v83, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v84, 1, 0, v182);

  id v73 = v182[0];
  if (!v85) {
    goto LABEL_20;
  }
  id v86 = v182[0];
  id v87 = objc_msgSend(v37, sel_defaultManager);
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = v179;
  *(void *)(v88 + 32) = sub_24B5EE400();
  *(void *)(v88 + 40) = v89;
  *(void *)(v88 + 48) = 0xD000000000000012;
  *(void *)(v88 + 56) = 0x800000024B68E2D0;
  long long v90 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v91 = objc_msgSend(v45, sel_pathWithComponents_, v90);

  sub_24B6827D0();
  uint64_t v92 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v93 = objc_msgSend(v87, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v92, 1, 0, v182);

  id v73 = v182[0];
  if (!v93) {
    goto LABEL_20;
  }
  id v94 = v182[0];
  id v95 = objc_msgSend(v37, sel_defaultManager);
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v179;
  *(void *)(v96 + 32) = sub_24B5EE400();
  *(void *)(v96 + 40) = v97;
  *(void *)(v96 + 48) = 0x736172656D6163;
  *(void *)(v96 + 56) = 0xE700000000000000;
  uint64_t v98 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v99 = objc_msgSend(v45, sel_pathWithComponents_, v98);

  sub_24B6827D0();
  long long v100 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned int v101 = objc_msgSend(v95, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v100, 1, 0, v182);

  id v73 = v182[0];
  if (!v101) {
    goto LABEL_20;
  }
  id v102 = v182[0];
  id v103 = objc_msgSend(v37, sel_defaultManager);
  sub_24B5EE5AC();
  id v104 = (void *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  v182[0] = 0;
  unsigned __int8 v105 = objc_msgSend(v103, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v104, 1, 0, v182);

  id v73 = v182[0];
  if ((v105 & 1) == 0)
  {
LABEL_20:
    id v149 = v73;
    swift_release();
    goto LABEL_18;
  }
  uint64_t v106 = v175;
  id v107 = (void *)(*(uint64_t (**)(id))(*(void *)v175 + 216))(v182[0]);
  uint64_t v181 = *(void *)(v36 + 32);
  id v108 = (id)v181;
  v182[0] = v107;
  uint64_t v109 = sub_24B682BB0();
  uint64_t v110 = *(void *)(v109 - 8);
  int v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56);
  v151[1] = v110 + 56;
  uint64_t v112 = (uint64_t)v165;
  *(void *)&long long v179 = v109;
  v111(v165, 1, 1, v109);
  unint64_t v152 = v111;
  id v113 = v108;
  sub_24B562F04(&qword_2697CC760);
  v151[2] = MEMORY[0x263EFDCF8];
  sub_24B5678F4(&qword_2697CC768, &qword_2697CC760);
  v151[3] = sub_24B5F4624(&qword_2697CC770, (void (*)(uint64_t))sub_24B5658E8);
  char v114 = v153;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  uint64_t v115 = swift_allocObject();
  swift_weakInit();
  uint64_t v116 = swift_allocObject();
  *(void *)(v116 + 16) = sub_24B5F46A4;
  *(void *)(v116 + 24) = v115;
  uint64_t v178 = MEMORY[0x263EFDCB0];
  sub_24B5678F4(&qword_2697CC778, &qword_2697CC748);
  uint64_t v117 = v155;
  sub_24B682590();
  swift_release();
  (*(void (**)(char *, uint64_t))(v154 + 8))(v114, v117);
  float64x2_t v177 = (char *)(v176 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_subscriptions);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  uint64_t v118 = swift_release();
  uint64_t v119 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v106 + 264))(v118);
  uint64_t v181 = *(void *)(v176 + 32);
  id v120 = (id)v181;
  v182[0] = v119;
  v111((char *)v112, 1, 1, v109);
  id v121 = v120;
  sub_24B562F04(&qword_2697CC780);
  sub_24B5678F4(&qword_2697CC788, &qword_2697CC780);
  uint64_t v122 = v156;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24B5678F4(&qword_2697CC790, &qword_2697CC738);
  uint64_t v123 = v158;
  sub_24B682590();
  swift_release();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v122, v123);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  uint64_t v124 = swift_release();
  uint64_t v125 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v175 + 312))(v124);
  uint64_t v181 = *(void *)(v176 + 32);
  id v126 = (id)v181;
  v182[0] = v125;
  v152((char *)v112, 1, 1, v179);
  id v127 = v126;
  sub_24B562F04(&qword_2697CC798);
  sub_24B5678F4(&qword_2697CC7A0, &qword_2697CC798);
  uint64_t v128 = v159;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_24B5678F4(&qword_2697CC7A8, &qword_2697CC730);
  uint64_t v129 = v161;
  sub_24B682590();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v128, v129);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  uint64_t v130 = swift_release();
  uint64_t v131 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v175 + 360))(v130);
  uint64_t v181 = *(void *)(v176 + 32);
  id v132 = (id)v181;
  v182[0] = v131;
  int v133 = v152;
  v152((char *)v112, 1, 1, v179);
  id v134 = v132;
  sub_24B562F04(&qword_2697CC858);
  sub_24B5678F4(&qword_2697CC860, &qword_2697CC858);
  uint64_t v135 = v162;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24B5678F4(&qword_2697CC868, &qword_2697CC850);
  uint64_t v136 = v164;
  sub_24B6825B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v135, v136);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  uint64_t v137 = swift_release();
  long long v138 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v175 + 408))(v137);
  uint64_t v181 = *(void *)(v176 + 32);
  id v139 = (id)v181;
  v182[0] = v138;
  v133((char *)v112, 1, 1, v179);
  id v140 = v139;
  sub_24B562F04(&qword_2697CC870);
  sub_24B5678F4(&qword_2697CC878, &qword_2697CC870);
  uint64_t v141 = v166;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24B5678F4(&qword_2697CC880, &qword_2697CC848);
  uint64_t v142 = v168;
  sub_24B6825B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v141, v142);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  uint64_t v143 = swift_release();
  uint64_t v144 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v175 + 504))(v143);
  uint64_t v181 = *(void *)(v176 + 32);
  id v145 = (id)v181;
  v182[0] = v144;
  v152((char *)v112, 1, 1, v179);
  uint64_t v36 = v176;
  id v146 = v145;
  sub_24B562F04(&qword_2697CC888);
  sub_24B5678F4(&qword_2697CC890, &qword_2697CC888);
  long long v147 = v169;
  sub_24B6825A0();
  sub_24B5632A8(v112, &qword_2697CC740);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24B5678F4(&qword_2697CC898, &qword_2697CC840);
  uint64_t v148 = v171;
  sub_24B6825B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v170 + 8))(v147, v148);
  swift_beginAccess();
  sub_24B6824E0();
  swift_endAccess();
  swift_release();
  swift_release();
  (*((void (**)(uint64_t, uint64_t))v173 + 1))(v180, v174);
  return v36;
}

uint64_t sub_24B5EB21C(long long *a1, double *a2)
{
  id v42 = a2;
  uint64_t v3 = sub_24B6825D0();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24B682640();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v35 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_24B6825E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a1[1];
  long long v45 = *a1;
  long long v46 = v15;
  uint64_t v47 = *((void *)a1 + 4);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    double v18 = *v42;
    sub_24B5F5A70((uint64_t)v42, (uint64_t)v14, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v14, 0, 1, v6);
    swift_beginAccess();
    sub_24B5DB530((uint64_t)v14, v18);
    swift_endAccess();
    double v19 = *(double *)&v45;
    uint64_t v20 = OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID;
    uint64_t v21 = *(void *)(v17 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sequenceID);
    uint64_t v22 = (uint64_t *)(v17 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    sub_24B5F1F44(v21, isUniquelyReferenced_nonNull_native, v19);
    *uint64_t v22 = v44;
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    uint64_t v24 = *(void *)(v17 + v20);
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v17 + v20) = v26;
      sub_24B5658E8();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F080], v8);
      uint64_t v27 = (void *)sub_24B682C10();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_24B5F5A70((uint64_t)v42, (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      unint64_t v28 = (*(unsigned __int8 *)(v41 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v17;
      long long v30 = v46;
      *(_OWORD *)(v29 + 24) = v45;
      *(_OWORD *)(v29 + 40) = v30;
      *(void *)(v29 + 56) = v47;
      sub_24B5E7B08((uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
      aBlock[4] = sub_24B5F652C;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24B566C04;
      aBlock[3] = &unk_26FE8E258;
      BOOL v31 = _Block_copy(aBlock);
      swift_retain();
      sub_24B5E882C((uint64_t)&v45);
      uint64_t v32 = v35;
      sub_24B6825F0();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24B5F4624((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      uint64_t v33 = v37;
      uint64_t v34 = v40;
      sub_24B682D80();
      MEMORY[0x24C5D4CD0](0, v32, v33, v31);
      _Block_release(v31);
      swift_release();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v38);
      return swift_release();
    }
  }
  return result;
}

void sub_24B5EB850(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v6 = sub_24B6824D0();
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(v14 + 16))
  {
    double v15 = *(double *)a2;
    unint64_t v16 = sub_24B5E3410(*(double *)a2);
    if (v17)
    {
      uint64_t v60 = v8;
      uint64_t v61 = v6;
      uint64_t v63 = v10;
      uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 8 * v16);
      sub_24B5EE5C8(v18, v15);
      double v19 = (void *)sub_24B6827A0();
      swift_bridgeObjectRelease();
      id v62 = v19;
      objc_msgSend(v62, sel_UTF8String);
      savePixelBufferToJpeg();
      uint64_t v20 = *(void **)(a2 + 16);
      if (v20)
      {
        id v21 = v20;
        sub_24B5EE5E8(v18, v15);
        uint64_t v22 = (void *)sub_24B6827A0();
        swift_bridgeObjectRelease();
        id v23 = v21;
        id v24 = v22;
        objc_msgSend(v24, sel_UTF8String);
        savePixelBufferFloat32ToTiff();
      }
      uint64_t v64 = v18;
      BOOL v25 = *(void **)(a2 + 24);
      if (v25)
      {
        id v26 = v25;
        sub_24B5EE834(v64, v15);
        uint64_t v27 = (void *)sub_24B6827A0();
        swift_bridgeObjectRelease();
        id v28 = v26;
        id v29 = v27;
        objc_msgSend(v29, sel_UTF8String);
        savePixelBufferOneComponent8ToPng();
      }
      sub_24B56CF38((uint64_t)a3 + v9[7], (uint64_t)v68, &qword_2697CC9C0);
      sub_24B56CF38((uint64_t)v68, (uint64_t)v69, &qword_2697CC9C0);
      int v30 = sub_24B56CF9C((uint64_t)v69);
      uint64_t v31 = v69[17];
      char v32 = v70;
      sub_24B5F5A70((uint64_t)a3, (uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v33 = v63;
      uint64_t v34 = v60;
      if (v30 == 1 || (v32 & 1) != 0)
      {
        unint64_t v35 = &v12[v9[8]];
        uint64_t v36 = *((void *)v35 + 8);
        char v37 = v35[72];
        char v38 = v35[73];
        sub_24B5F5AD8((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        if ((v38 | v37)) {
          uint64_t v31 = -1;
        }
        else {
          uint64_t v31 = v36;
        }
      }
      else
      {
        sub_24B5F5AD8((uint64_t)v12, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      }
      uint64_t v39 = v65;
      double v40 = *a3;
      uint64_t v41 = sub_24B5EEC34(v64, *a3);
      char v43 = sub_24B5F49C0((uint64_t)a3 + v9[5], v31, v40, v41, v42);
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0)
      {
        uint64_t v44 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v34, v44, v61);
        long long v45 = sub_24B6824B0();
        os_log_type_t v46 = sub_24B682B20();
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v47 = 0;
          _os_log_impl(&dword_24B55E000, v45, v46, "Bundle Writer: Failed to write shot camera to bundle!", v47, 2u);
          MEMORY[0x24C5D6C00](v47, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v61);
      }
      sub_24B5F14E4(a3);
      double v48 = *a3;
      unsigned int v49 = sub_24B5EE35C();
      id v50 = sub_24B5EBDF8(v66, v48);
      uint64_t v52 = v51;
      uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v33 + 48);
      if (!v53(v51, 1, v9))
      {
        *(void *)(v52 + v9[13]) = MEMORY[0x263F8EE78];
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v50)(v66, 0);
      ((void (*)(unsigned char *, void))v49)(v67, 0);
      uint64_t v54 = sub_24B5EE35C();
      uint64_t v55 = sub_24B5EBDF8(v66, v48);
      uint64_t v57 = v56;
      if (!v53(v56, 1, v9))
      {
        uint64_t v58 = v9[11];
        id v59 = *(void **)(v57 + v58);
        *(void *)(v57 + v58) = 0;
      }
      ((void (*)(void *, void))v55)(v66, 0);
      ((void (*)(unsigned char *, void))v54)(v67, 0);
    }
  }
}

void (*sub_24B5EBDF8(void *a1, double a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_24B5F2200(v4, a2);
  return sub_24B5EBE60;
}

void sub_24B5EBE60(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_24B5EBEAC(double *a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    double v6 = *a1;
    sub_24B5F5A70((uint64_t)a1, (uint64_t)v4, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    uint64_t v7 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
    swift_beginAccess();
    sub_24B5DB530((uint64_t)v4, v6);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5EBFF8(void **a1)
{
  uint64_t v2 = sub_24B562F04(&qword_2697CC8D8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24B6824D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v35 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  double v15 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    if (sub_24B5EF0B4())
    {
      if (sub_24B5F0784())
      {
        if (sub_24B5F0E6C())
        {
          uint64_t v18 = *(void (**)(uint64_t *))(v17
                                                 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
          if (v15 == (void *)7)
          {
            if (v18)
            {
              uint64_t v19 = v17 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
              uint64_t v20 = sub_24B6822E0();
              (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v4, v19, v20);
              swift_storeEnumTagMultiPayload();
              swift_retain();
              v18(v4);
              sub_24B5D7FB0((uint64_t)v18);
              swift_release();
              return sub_24B5632A8((uint64_t)v4, &qword_2697CC8D8);
            }
          }
          else if (v18)
          {
            sub_24B5E8908();
            uint64_t v33 = swift_allocError();
            *uint64_t v34 = v15;
            *uint64_t v4 = v33;
            swift_storeEnumTagMultiPayload();
            sub_24B5F62B4(v15);
            sub_24B5F62B4(v15);
            sub_24B5F62C4((uint64_t)v18);
            v18(v4);
            sub_24B5D7FB0((uint64_t)v18);
            swift_release();
            sub_24B5E895C(v15);
            return sub_24B5632A8((uint64_t)v4, &qword_2697CC8D8);
          }
          return swift_release();
        }
        else
        {
          uint64_t v29 = sub_24B57CB70();
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v29, v5);
          int v30 = sub_24B6824B0();
          os_log_type_t v31 = sub_24B682B20();
          if (os_log_type_enabled(v30, v31))
          {
            char v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v32 = 0;
            _os_log_impl(&dword_24B55E000, v30, v31, "Bundle Writer: Failed to write thumbnail image to bundle!", v32, 2u);
            MEMORY[0x24C5D6C00](v32, -1, -1);
          }

          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        }
      }
      else
      {
        uint64_t v25 = sub_24B57CB70();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, v25, v5);
        id v26 = sub_24B6824B0();
        os_log_type_t v27 = sub_24B682B20();
        if (os_log_type_enabled(v26, v27))
        {
          id v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v28 = 0;
          _os_log_impl(&dword_24B55E000, v26, v27, "Bundle Writer: Failed to write cameras with mobileSfM poses to bundle!", v28, 2u);
          MEMORY[0x24C5D6C00](v28, -1, -1);
        }

        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      }
    }
    else
    {
      uint64_t v21 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v14, v21, v5);
      uint64_t v22 = sub_24B6824B0();
      os_log_type_t v23 = sub_24B682B20();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_24B55E000, v22, v23, "Bundle Writer: Failed to write metadata to bundle!", v24, 2u);
        MEMORY[0x24C5D6C00](v24, -1, -1);
      }

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    }
  }
  return result;
}

uint64_t sub_24B5EC4E4(uint64_t *a1)
{
  uint64_t v2 = sub_24B6825D0();
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v56 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_24B682640();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_24B6825E0();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24B6824D0();
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24B562F04((uint64_t *)&unk_2697CCCF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24B562F04(&qword_2697CC460);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v51 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v16 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v50 = v7;
    uint64_t v20 = *(int *)(v10 + 48);
    uint64_t v21 = (uint64_t)&v12[v20];
    uint64_t v22 = result;
    uint64_t v23 = *(int *)(v10 + 64);
    uint64_t v49 = *a1;
    sub_24B563A6C((uint64_t)a1 + v20, v21, &qword_2697CC460);
    double v24 = *(double *)((char *)a1 + v23);
    uint64_t v25 = v22;
    sub_24B56CF38(v21, (uint64_t)v18, &qword_2697CC460);
    id v26 = (uint64_t *)(v22 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    uint64_t v27 = *v26;
    uint64_t v28 = (uint64_t)v18;
    if (*(void *)(v27 + 16) && (unint64_t v29 = sub_24B5E3410(v24), (v30 & 1) != 0))
    {
      uint64_t v31 = *(void *)(*(void *)(v27 + 56) + 8 * v29);
      sub_24B5658E8();
      uint64_t v32 = v52;
      uint64_t v33 = v53;
      (*(void (**)(char *, void, uint64_t))(v52 + 104))(v6, *MEMORY[0x263F8F080], v53);
      uint64_t v34 = v49;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_24B682C10();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
      sub_24B563A6C(v28, (uint64_t)v16, &qword_2697CC460);
      uint64_t v35 = v28;
      unint64_t v36 = (*(unsigned __int8 *)(v51 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      char v37 = (double *)swift_allocObject();
      *((void *)v37 + 2) = v25;
      v37[3] = v24;
      *((void *)v37 + 4) = v31;
      sub_24B56CF38((uint64_t)v16, (uint64_t)v37 + v36, &qword_2697CC460);
      *(void *)((char *)v37 + ((v14 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
      aBlock[4] = sub_24B5F6218;
      aBlock[5] = v37;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24B566C04;
      aBlock[3] = &unk_26FE8E208;
      char v38 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v39 = v54;
      sub_24B6825F0();
      uint64_t v61 = MEMORY[0x263F8EE78];
      sub_24B5F4624((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      double v40 = v56;
      uint64_t v41 = v59;
      sub_24B682D80();
      uint64_t v42 = (void *)v60;
      MEMORY[0x24C5D4CD0](0, v39, v40, v38);
      _Block_release(v38);
      swift_release();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v41);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v57);
      sub_24B5632A8(v35, &qword_2697CC460);
      return swift_release();
    }
    else
    {
      uint64_t v43 = sub_24B57CB70();
      uint64_t v44 = v60;
      uint64_t v45 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v9, v43, v50);
      os_log_type_t v46 = sub_24B6824B0();
      os_log_type_t v47 = sub_24B682B20();
      if (os_log_type_enabled(v46, v47))
      {
        double v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v48 = 0;
        _os_log_impl(&dword_24B55E000, v46, v47, "Bundle Writer: Failed to get sequence id for plane!", v48, 2u);
        MEMORY[0x24C5D6C00](v48, -1, -1);
      }
      swift_release();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
      return sub_24B5632A8((uint64_t)v18, &qword_2697CC460);
    }
  }
  return result;
}

uint64_t sub_24B5ECC2C(double a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v117 = a4;
  uint64_t v122 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24B6824D0();
  uint64_t v97 = *(void *)(v8 - 8);
  uint64_t v98 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24B682410();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24B6822E0();
  uint64_t v94 = *(void *)(v15 - 8);
  uint64_t v95 = v15;
  MEMORY[0x270FA5388](v15);
  id v99 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24B562F04(&qword_2697CC460);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v112 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v94 - v20;
  sub_24B5EEA60(a3, a1);
  uint64_t v100 = sub_24B6827A0();
  swift_bridgeObjectRelease();
  uint64_t v106 = sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684E60;
  *(void *)(inited + 32) = 0x64657463656C6573;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 72) = sub_24B562F04(&qword_2697CC8D0);
  sub_24B563A6C(v117, (uint64_t)v21, &qword_2697CC460);
  uint64_t v109 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v110 = v12 + 48;
  int v23 = v109(v21, 1, v11);
  uint64_t v96 = v10;
  if (v23 == 1)
  {
    sub_24B5632A8((uint64_t)v21, &qword_2697CC460);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v24 = sub_24B6823D0();
    uint64_t v25 = v26;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }
  uint64_t v27 = v12;
  *(void *)(inited + 48) = v24;
  *(void *)(inited + 56) = v25;
  unint64_t v117 = sub_24B560D28(inited);
  uint64_t v28 = *(void *)(a5 + 64);
  uint64_t v101 = a5 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  int64_t v102 = (unint64_t)(v29 + 63) >> 6;
  int v111 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  id v107 = (void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v108 = v27 + 16;
  unsigned __int8 v105 = (void (**)(char *, uint64_t))(v27 + 8);
  id v113 = (void *)a5;
  swift_bridgeObjectRetain();
  int64_t v32 = 0;
  long long v104 = xmmword_24B684FC0;
  uint64_t v103 = v27;
  uint64_t v33 = v112;
  if (!v31) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v34 = __clz(__rbit64(v31));
  v31 &= v31 - 1;
  unint64_t v35 = v34 | (v32 << 6);
  unint64_t v36 = v113;
  while (1)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v33, v36[6] + *(void *)(v27 + 72) * v35, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v33, 0, 1, v11);
    if (v109(v33, 1, v11) == 1) {
      goto LABEL_32;
    }
    (*v107)(v14, v33, v11);
    if (!v36[2])
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    unint64_t v40 = sub_24B59F008((uint64_t)v14);
    if ((v41 & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v42 = *(void **)(v36[7] + 8 * v40);
    uint64_t v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = v104;
    *(void *)(v43 + 32) = 0x726F66736E617274;
    *(void *)(v43 + 40) = 0xE90000000000006DLL;
    uint64_t v44 = v11;
    int64_t v45 = v32;
    id v46 = v42;
    objc_msgSend(v46, sel_transform);
    sub_24B5F87F0(v47, v48, v49, v50);
    uint64_t v52 = v51;
    uint64_t v53 = sub_24B562F04((uint64_t *)&unk_2697CD110);
    *(void *)(v43 + 48) = v52;
    *(void *)(v43 + 72) = v53;
    *(void *)(v43 + 80) = 0x7265746E6563;
    *(void *)(v43 + 88) = 0xE600000000000000;
    objc_msgSend(v46, sel_center);
    __n128 v55 = v54;
    v55.n128_u32[3] = v116.n128_u32[3];
    __n128 v116 = v55;
    *(void *)&double v56 = sub_24B5F8928(v55).n128_u64[0];
    *(void *)(v43 + 96) = v57;
    *(void *)(v43 + 120) = v53;
    *(void *)(v43 + 128) = 0x746E65747865;
    *(void *)(v43 + 136) = 0xE600000000000000;
    id v58 = objc_msgSend(v46, sel_planeExtent, v56);
    objc_msgSend(v58, sel_width);
    uint64_t v115 = v59;

    id v60 = objc_msgSend(v46, sel_planeExtent);
    objc_msgSend(v60, sel_height);
    uint64_t v114 = v61;

    v62.n128_u64[0] = v115;
    v62.n128_u64[1] = v114;
    sub_24B5F8928(v62);
    *(void *)(v43 + 168) = v53;
    *(void *)(v43 + 144) = v63;
    unint64_t v64 = sub_24B560D28(v43);
    uint64_t v65 = sub_24B6823D0();
    uint64_t v67 = v66;
    uint64_t v121 = sub_24B562F04(&qword_2697CC060);
    *(void *)&long long v120 = v64;
    sub_24B563220(&v120, v119);
    unint64_t v68 = v117;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v118 = v68;
    sub_24B5E4AB0(v119, v65, v67, isUniquelyReferenced_nonNull_native);
    unint64_t v117 = v118;

    int64_t v32 = v45;
    uint64_t v11 = v44;
    uint64_t v27 = v103;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v105)(v14, v44);
    uint64_t v33 = v112;
    if (v31) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v37 = v32 + 1;
    unint64_t v36 = v113;
    if (__OFADD__(v32, 1)) {
      goto LABEL_43;
    }
    if (v37 >= v102) {
      break;
    }
    unint64_t v38 = *(void *)(v101 + 8 * v37);
    ++v32;
    if (!v38)
    {
      int64_t v32 = v37 + 1;
      if (v37 + 1 >= v102) {
        break;
      }
      unint64_t v38 = *(void *)(v101 + 8 * v32);
      if (!v38)
      {
        int64_t v32 = v37 + 2;
        if (v37 + 2 >= v102) {
          break;
        }
        unint64_t v38 = *(void *)(v101 + 8 * v32);
        if (!v38)
        {
          int64_t v32 = v37 + 3;
          if (v37 + 3 >= v102) {
            break;
          }
          unint64_t v38 = *(void *)(v101 + 8 * v32);
          if (!v38)
          {
            int64_t v32 = v37 + 4;
            if (v37 + 4 >= v102) {
              break;
            }
            unint64_t v38 = *(void *)(v101 + 8 * v32);
            if (!v38)
            {
              int64_t v39 = v37 + 5;
              if (v39 >= v102) {
                break;
              }
              unint64_t v38 = *(void *)(v101 + 8 * v39);
              if (v38)
              {
                int64_t v32 = v39;
                goto LABEL_25;
              }
              while (1)
              {
                int64_t v32 = v39 + 1;
                if (__OFADD__(v39, 1)) {
                  break;
                }
                if (v32 >= v102) {
                  goto LABEL_31;
                }
                unint64_t v38 = *(void *)(v101 + 8 * v32);
                ++v39;
                if (v38) {
                  goto LABEL_25;
                }
              }
LABEL_44:
              __break(1u);
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v31 = (v38 - 1) & v38;
    unint64_t v35 = __clz(__rbit64(v38)) + (v32 << 6);
  }
LABEL_31:
  (*v111)(v33, 1, 1, v11);
LABEL_32:
  swift_release();
  char v70 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  uint64_t v71 = v100;
  sub_24B6827D0();
  unsigned int v72 = self;
  *(void *)&long long v120 = 0;
  id v73 = objc_msgSend(v72, sel_dataWithJSONObject_options_error_, v70, 3, &v120);
  id v74 = v99;
  if (v73)
  {
    id v75 = v73;
    id v76 = (id)v120;
    uint64_t v77 = sub_24B682320();
    unint64_t v79 = v78;

    CFAllocatorRef v80 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    unsigned int v81 = (__CFString *)sub_24B6827A0();
    CFURLRef v82 = CFURLCreateWithFileSystemPath(v80, v81, kCFURLPOSIXPathStyle, 0);

    if (v82)
    {
      sub_24B6822B0();
      sub_24B682330();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v74, v95);

      sub_24B586220(v77, v79);
      return swift_bridgeObjectRelease();
    }
    sub_24B586220(v77, v79);
  }
  else
  {
    id v83 = (id)v120;
    uint64_t v84 = (void *)sub_24B6821B0();

    swift_willThrow();
  }

  swift_bridgeObjectRelease();
  uint64_t v85 = sub_24B57CB70();
  id v87 = v96;
  uint64_t v86 = v97;
  uint64_t v88 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v85, v98);
  uint64_t v89 = sub_24B6824B0();
  os_log_type_t v90 = sub_24B682B20();
  if (os_log_type_enabled(v89, v90))
  {
    id v91 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v91 = 0;
    _os_log_impl(&dword_24B55E000, v89, v90, "Bundle Writer: Failed to write plane data to bundle!", v91, 2u);
    MEMORY[0x24C5D6C00](v91, -1, -1);
    uint64_t v92 = v71;
  }
  else
  {
    uint64_t v92 = v89;
    uint64_t v89 = v71;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v87, v88);
}

unint64_t sub_24B5ED688(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24B562F04(&qword_2697CC8C0);
  uint64_t v2 = (void *)sub_24B682F30();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24B562E8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24B5ED7A4(double *a1)
{
  uint64_t v2 = sub_24B6825D0();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24B682640();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B6825E0();
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24B6824D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *a1;
  uint64_t v12 = *((void *)a1 + 1);
  uint64_t v14 = *((void *)a1 + 2);
  uint64_t v57 = *((void *)a1 + 3);
  uint64_t v49 = *((void *)a1 + 4);
  uint64_t v48 = *((void *)a1 + 5);
  uint64_t v47 = *((void *)a1 + 6);
  uint64_t v46 = *((void *)a1 + 7);
  uint64_t v45 = *((void *)a1 + 8);
  double v15 = a1[9];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = (uint64_t *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16) && (unint64_t v20 = sub_24B5E3410(v15), (v21 & 1) != 0))
    {
      uint64_t v43 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      sub_24B5658E8();
      uint64_t v22 = v50;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v7, *MEMORY[0x263F8F080], v5);
      double v42 = v13;
      swift_bridgeObjectRetain();
      uint64_t v41 = v12;
      swift_bridgeObjectRetain();
      uint64_t v40 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = v49;
      swift_bridgeObjectRetain();
      uint64_t v24 = v48;
      swift_bridgeObjectRetain();
      uint64_t v25 = v47;
      swift_bridgeObjectRetain();
      uint64_t v26 = v46;
      swift_bridgeObjectRetain();
      uint64_t v27 = v45;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_24B682C10();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
      uint64_t v28 = (double *)swift_allocObject();
      *((void *)v28 + 2) = v17;
      void v28[3] = v15;
      double v29 = v42;
      *((void *)v28 + 4) = v43;
      v28[5] = v29;
      uint64_t v30 = v40;
      *((void *)v28 + 6) = v41;
      *((void *)v28 + 7) = v30;
      *((void *)v28 + 8) = v57;
      *((void *)v28 + 9) = v23;
      *((void *)v28 + 10) = v24;
      *((void *)v28 + 11) = v25;
      *((void *)v28 + 12) = v26;
      *((void *)v28 + 13) = v27;
      aBlock[4] = sub_24B5F60A8;
      aBlock[5] = v28;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24B566C04;
      aBlock[3] = &unk_26FE8E1B8;
      unint64_t v31 = _Block_copy(aBlock);
      swift_retain();
      int64_t v32 = v51;
      sub_24B6825F0();
      uint64_t v58 = MEMORY[0x263F8EE78];
      sub_24B5F4624((unint64_t *)&qword_2697CC9E0, MEMORY[0x263F8F030]);
      sub_24B562F04((uint64_t *)&unk_2697CC490);
      sub_24B5678F4((unint64_t *)&qword_2697CC9F0, (uint64_t *)&unk_2697CC490);
      uint64_t v33 = v53;
      uint64_t v34 = v56;
      sub_24B682D80();
      unint64_t v35 = (void *)v44;
      MEMORY[0x24C5D4CD0](0, v32, v33, v31);
      _Block_release(v31);
      swift_release();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v54);
      return swift_release();
    }
    else
    {
      uint64_t v36 = sub_24B57CB70();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v36, v8);
      int64_t v37 = sub_24B6824B0();
      os_log_type_t v38 = sub_24B682B20();
      if (os_log_type_enabled(v37, v38))
      {
        int64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)int64_t v39 = 134217984;
        *(double *)uint64_t aBlock = v15;
        sub_24B682CD0();
        _os_log_impl(&dword_24B55E000, v37, v38, "Bundle Writer: Failed to get sequence id for depth point cloud for timestamp: %f!", v39, 0xCu);
        MEMORY[0x24C5D6C00](v39, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

uint64_t sub_24B5EDE60(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_24B6822E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B5EEA88(a3, a1);
  long long v11 = *(_OWORD *)(a4 + 48);
  unsigned char v14[2] = *(_OWORD *)(a4 + 32);
  void v14[3] = v11;
  uint64_t v15 = *(void *)(a4 + 64);
  long long v12 = *(_OWORD *)(a4 + 16);
  v14[0] = *(_OWORD *)a4;
  v14[1] = v12;
  sub_24B682220();
  swift_bridgeObjectRelease();
  sub_24B5F4F50((uint64_t *)v14, (uint64_t)v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24B5EDF9C(uint64_t a1)
{
  uint64_t v2 = sub_24B6824D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v33 = v5;
    uint64_t v34 = v3;
    uint64_t v35 = v2;
    uint64_t v12 = sub_24B5EEC5C(0, *(double *)a1);
    uint64_t v36 = v13;
    uint64_t v37 = v12;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v17 = *(void *)(a1 + 24);
    uint64_t v16 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v39 = v6;
    uint64_t v40 = v11;
    uint64_t v38 = v7;
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 64);
    uint64_t v22 = *(void *)(a1 + 72);
    v41[0] = v14;
    v41[1] = v15;
    v41[2] = v17;
    v41[3] = v16;
    v41[4] = v18;
    v41[5] = v19;
    v41[6] = v21;
    v41[7] = v20;
    v41[8] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24B682220();
    swift_bridgeObjectRelease();
    sub_24B5F4F50(v41, (uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v23 = *(double *)a1;
    sub_24B5EEE74(0, *(double *)a1);
    uint64_t v24 = type metadata accessor for OCBundleData(0);
    LOBYTE(v16) = sub_24B5F5B4C(a1 + *(int *)(v24 + 24), v23);
    swift_bridgeObjectRelease();
    if (v16)
    {
      return swift_release();
    }
    else
    {
      uint64_t v25 = sub_24B57CB70();
      uint64_t v27 = v34;
      uint64_t v26 = v35;
      uint64_t v28 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v25, v35);
      double v29 = sub_24B6824B0();
      os_log_type_t v30 = sub_24B682B20();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl(&dword_24B55E000, v29, v30, "Bundle Writer: Failed to write camera to bundle!", v31, 2u);
        MEMORY[0x24C5D6C00](v31, -1, -1);
      }

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    }
  }
  return result;
}

uint64_t (*sub_24B5EE35C())()
{
  return j__swift_endAccess;
}

uint64_t sub_24B5EE3B8()
{
  return sub_24B5EE41C(0x73656E616C70, 0xE600000000000000);
}

uint64_t sub_24B5EE3CC()
{
  return sub_24B5EE41C(0xD000000000000012, 0x800000024B68E2D0);
}

uint64_t sub_24B5EE3E8()
{
  return sub_24B5EE41C(0x736172656D6163, 0xE700000000000000);
}

uint64_t sub_24B5EE400()
{
  return sub_24B5EE41C(0x6D6172665F6C6C61, 0xEA00000000007365);
}

uint64_t sub_24B5EE41C(uint64_t a1, uint64_t a2)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24B6856B0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24B6856B0;
  *(void *)(v5 + 32) = sub_24B6822D0();
  *(void *)(v5 + 40) = v6;
  uint64_t v7 = self;
  strcpy((char *)(v5 + 48), "experimental");
  *(unsigned char *)(v5 + 61) = 0;
  *(_WORD *)(v5 + 62) = -5120;
  uint64_t v8 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  uint64_t v10 = sub_24B6827D0();
  uint64_t v12 = v11;

  *(void *)(v4 + 32) = v10;
  *(void *)(v4 + 40) = v12;
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 56) = a2;
  uint64_t v13 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v7, sel_pathWithComponents_, v13);

  uint64_t v15 = sub_24B6827D0();
  return v15;
}

uint64_t sub_24B5EE5AC()
{
  return sub_24B5EE41C(0xD00000000000001BLL, 0x800000024B68E4E0);
}

uint64_t sub_24B5EE5C8(uint64_t a1, double a2)
{
  return sub_24B5EE614(a1, 0x736567616D69, 0xE600000000000000, a2);
}

uint64_t sub_24B5EE5E8(uint64_t a1, double a2)
{
  return sub_24B5EE614(a1, 0x616D5F6874706564, 0xEA00000000007370, a2);
}

uint64_t sub_24B5EE614(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24B6856B0;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24B6856B0;
  *(void *)(v9 + 32) = sub_24B6822D0();
  *(void *)(v9 + 40) = v10;
  uint64_t v11 = self;
  *(void *)(v9 + 48) = a2;
  *(void *)(v9 + 56) = a3;
  uint64_t v12 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_pathWithComponents_, v12);

  uint64_t v14 = sub_24B6827D0();
  uint64_t v16 = v15;

  *(void *)(v8 + 32) = v14;
  *(void *)(v8 + 40) = v16;
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v17 + 16) = xmmword_24B684E60;
  uint64_t v19 = MEMORY[0x263F8D750];
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = v19;
  *(void *)(v17 + 32) = a1;
  uint64_t v25 = sub_24B6827F0();
  uint64_t v26 = v20;
  sub_24B682890();
  sub_24B5F8B94(a4);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  *(void *)(v8 + 48) = v25;
  *(void *)(v8 + 56) = v26;
  uint64_t v21 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v11, sel_pathWithComponents_, v21);

  uint64_t v23 = sub_24B6827D0();
  return v23;
}

uint64_t sub_24B5EE834(uint64_t a1, double a2)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24B6856B0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24B6856B0;
  *(void *)(v5 + 32) = sub_24B6822D0();
  *(void *)(v5 + 40) = v6;
  uint64_t v7 = self;
  *(void *)(v5 + 48) = 0x6E656469666E6F63;
  *(void *)(v5 + 56) = 0xEF7370616D5F6563;
  uint64_t v8 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  uint64_t v10 = sub_24B6827D0();
  uint64_t v12 = v11;

  *(void *)(v4 + 32) = v10;
  *(void *)(v4 + 40) = v12;
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
  uint64_t v15 = MEMORY[0x263F8D750];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  *(void *)(v13 + 32) = a1;
  uint64_t v21 = sub_24B6827F0();
  uint64_t v22 = v16;
  sub_24B682890();
  sub_24B5F8B94(a2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  *(void *)(v4 + 48) = v21;
  *(void *)(v4 + 56) = v22;
  uint64_t v17 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v7, sel_pathWithComponents_, v17);

  uint64_t v19 = sub_24B6827D0();
  return v19;
}

uint64_t sub_24B5EEA60(uint64_t a1, double a2)
{
  return sub_24B5EEAAC(a1, sub_24B5EE3B8, a2);
}

uint64_t sub_24B5EEA88(uint64_t a1, double a2)
{
  return sub_24B5EEAAC(a1, sub_24B5EE3CC, a2);
}

uint64_t sub_24B5EEAAC(uint64_t a1, uint64_t (*a2)(void), double a3)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24B6856B0;
  *(void *)(v6 + 32) = a2();
  *(void *)(v6 + 40) = v7;
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v8 + 16) = xmmword_24B684E60;
  uint64_t v10 = MEMORY[0x263F8D750];
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = a1;
  uint64_t v17 = sub_24B6827F0();
  uint64_t v18 = v11;
  sub_24B682890();
  sub_24B5F8B94(a3);
  sub_24B682890();
  swift_bridgeObjectRelease();
  uint64_t v12 = self;
  sub_24B682890();
  *(void *)(v6 + 48) = v17;
  *(void *)(v6 + 56) = v18;
  uint64_t v13 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_pathWithComponents_, v13);

  uint64_t v15 = sub_24B6827D0();
  return v15;
}

uint64_t sub_24B5EEC34(uint64_t a1, double a2)
{
  return sub_24B5EEAAC(a1, sub_24B5EE3E8, a2);
}

uint64_t sub_24B5EEC5C(uint64_t a1, double a2)
{
  uint64_t v4 = self;
  sub_24B562F04(&qword_2697CC198);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24B6856B0;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24B6856B0;
  *(void *)(v6 + 32) = sub_24B5EE400();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = 0xD000000000000012;
  *(void *)(v6 + 56) = 0x800000024B68E2D0;
  uint64_t v8 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v4, sel_pathWithComponents_, v8);

  uint64_t v10 = sub_24B6827D0();
  uint64_t v12 = v11;

  *(void *)(v5 + 32) = v10;
  *(void *)(v5 + 40) = v12;
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
  uint64_t v15 = MEMORY[0x263F8D750];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  *(void *)(v13 + 32) = a1;
  uint64_t v21 = sub_24B6827F0();
  uint64_t v22 = v16;
  sub_24B682890();
  sub_24B5F8B94(a2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  *(void *)(v5 + 48) = v21;
  *(void *)(v5 + 56) = v22;
  uint64_t v17 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v4, sel_pathWithComponents_, v17);

  uint64_t v19 = sub_24B6827D0();
  return v19;
}

uint64_t sub_24B5EEE74(uint64_t a1, double a2)
{
  sub_24B562F04(&qword_2697CC198);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24B6856B0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24B6856B0;
  *(void *)(v5 + 32) = sub_24B5EE400();
  *(void *)(v5 + 40) = v6;
  uint64_t v7 = self;
  *(void *)(v5 + 48) = 0x736172656D6163;
  *(void *)(v5 + 56) = 0xE700000000000000;
  uint64_t v8 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_pathWithComponents_, v8);

  uint64_t v10 = sub_24B6827D0();
  uint64_t v12 = v11;

  *(void *)(v4 + 32) = v10;
  *(void *)(v4 + 40) = v12;
  sub_24B562F04((uint64_t *)&unk_2697CD150);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8D6C8];
  *(_OWORD *)(v13 + 16) = xmmword_24B684E60;
  uint64_t v15 = MEMORY[0x263F8D750];
  *(void *)(v13 + 56) = v14;
  *(void *)(v13 + 64) = v15;
  *(void *)(v13 + 32) = a1;
  uint64_t v21 = sub_24B6827F0();
  uint64_t v22 = v16;
  sub_24B682890();
  sub_24B5F8B94(a2);
  sub_24B682890();
  swift_bridgeObjectRelease();
  sub_24B682890();
  *(void *)(v4 + 48) = v21;
  *(void *)(v4 + 56) = v22;
  uint64_t v17 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v7, sel_pathWithComponents_, v17);

  uint64_t v19 = sub_24B6827D0();
  return v19;
}

uint64_t sub_24B5EF08C(uint64_t a1, double a2)
{
  return sub_24B5EEAAC(a1, sub_24B5EE5AC, a2);
}

uint64_t sub_24B5EF0B4()
{
  uint64_t v1 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v227 = (uint64_t)&v204 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24B562F04(&qword_2697CC460);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v226 = (uint64_t)&v204 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  long long v225 = (uint64_t *)((char *)&v204 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  long long v224 = (uint64_t *)((char *)&v204 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v223 = (uint64_t *)((char *)&v204 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v222 = (uint64_t *)((char *)&v204 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v221 = (uint64_t *)((char *)&v204 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  float64x2_t v209 = (uint64_t *)((char *)&v204 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  long long v238 = (uint64_t *)((char *)&v204 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v220 = (uint64_t *)((char *)&v204 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  long long v219 = (uint64_t *)((char *)&v204 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  long long v218 = (uint64_t *)((char *)&v204 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  long long v237 = (uint64_t *)((char *)&v204 - v28);
  MEMORY[0x270FA5388](v27);
  long long v228 = (uint64_t *)((char *)&v204 - v29);
  uint64_t v30 = sub_24B6823B0();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v204 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24B682440();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v204 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = v0;
  uint64_t v39 = v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
  uint64_t v40 = *(int **)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8);
  if (!v40)
  {
    char v54 = 0;
    return v54 & 1;
  }
  uint64_t v233 = v36;
  long long v234 = v6;
  uint64_t v235 = v31;
  uint64_t v41 = v30;
  uint64_t v242 = *(void *)v39;
  uint64_t v42 = *(void *)(v39 + 24);
  v240.i64[0] = *(void *)(v39 + 16);
  LODWORD(v236) = *(_DWORD *)(v39 + 32);
  type metadata accessor for ObjectCaptureSession(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v44 = self;
  long long v241 = v40;
  swift_bridgeObjectRetain();
  uint64_t v45 = v42;
  swift_bridgeObjectRetain();
  id v207 = objc_msgSend(v44, sel_bundleForClass_, ObjCClassFromMetadata);
  id v46 = objc_msgSend(v207, sel_infoDictionary);
  uint64_t v239 = v5;
  if (!v46)
  {
    long long v247 = 0u;
    long long v248 = 0u;
    uint64_t v49 = v41;
LABEL_11:
    uint64_t v51 = v235;
    goto LABEL_13;
  }
  uint64_t v47 = v46;
  uint64_t v48 = sub_24B682740();

  uint64_t v49 = v41;
  if (!*(void *)(v48 + 16))
  {
    long long v247 = 0u;
    long long v248 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unint64_t v50 = sub_24B562E8C(0xD00000000000001ALL, 0x800000024B68E4A0);
  uint64_t v51 = v235;
  if ((v52 & 1) == 0)
  {
    long long v247 = 0u;
    long long v248 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_24B562F48(*(void *)(v48 + 56) + 32 * v50, (uint64_t)&v247);
  swift_bridgeObjectRelease();
  if (!*((void *)&v248 + 1))
  {
LABEL_13:
    sub_24B5632A8((uint64_t)&v247, (uint64_t *)&unk_2697CCA30);
    goto LABEL_14;
  }
  if (!swift_dynamicCast())
  {
LABEL_14:
    v232.i64[0] = 0xE300000000000000;
    uint64_t v53 = 4271950;
    goto LABEL_15;
  }
  v232.i64[0] = *((void *)&v246[0] + 1);
  uint64_t v53 = *(void *)&v246[0];
LABEL_15:
  id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_24B682420();
  uint64_t v56 = (void *)sub_24B682430();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v233);
  objc_msgSend(v55, sel_setLocale_, v56);

  uint64_t v57 = (void *)sub_24B6827A0();
  objc_msgSend(v55, sel_setDateFormat_, v57);

  sub_24B6823A0();
  uint64_t v58 = (void *)sub_24B682350();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v49);
  id v206 = v55;
  id v59 = objc_msgSend(v55, sel_stringFromDate_, v58);

  uint64_t v235 = sub_24B6827D0();
  uint64_t v233 = v60;

  uint64_t v217 = sub_24B562F04(&qword_2697CCD90);
  uint64_t v61 = swift_allocObject();
  long long v216 = xmmword_24B686820;
  *(_OWORD *)(v61 + 16) = xmmword_24B686820;
  *(void *)(v61 + 32) = 0x6E6F6973726576;
  *(void *)(v61 + 40) = 0xE700000000000000;
  __n128 v62 = v241;
  *(void *)(v61 + 48) = v242;
  *(void *)(v61 + 56) = v62;
  uint64_t v63 = MEMORY[0x263F8D310];
  *(void *)(v61 + 72) = MEMORY[0x263F8D310];
  *(void *)(v61 + 80) = 0x696669746E656469;
  uint64_t v64 = v240.i64[0];
  *(void *)(v61 + 88) = 0xEA00000000007265;
  *(void *)(v61 + 96) = v64;
  *(void *)(v61 + 104) = v45;
  *(void *)(v61 + 120) = v63;
  *(void *)(v61 + 128) = 0x6567617265766F63;
  *(void *)(v61 + 136) = 0xE800000000000000;
  uint64_t v65 = MEMORY[0x263F8D5C8];
  *(_DWORD *)(v61 + 144) = v236;
  *(void *)(v61 + 168) = v65;
  *(void *)(v61 + 176) = 0x6F69737265567773;
  *(void *)(v61 + 184) = 0xE90000000000006ELL;
  *(void *)(v61 + 192) = v53;
  *(void *)(v61 + 200) = v232.i64[0];
  *(void *)(v61 + 216) = v63;
  strcpy((char *)(v61 + 224), "systemVersion");
  *(_WORD *)(v61 + 238) = -4864;
  uint64_t v66 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v67 = objc_msgSend(v66, sel_currentDevice);
  id v68 = objc_msgSend(v67, sel_systemVersion);

  uint64_t v69 = sub_24B6827D0();
  uint64_t v71 = v70;

  uint64_t v72 = v63;
  *(void *)(v61 + 240) = v69;
  *(void *)(v61 + 248) = v71;
  *(void *)(v61 + 264) = v63;
  *(void *)(v61 + 272) = 0x7954656369766564;
  *(void *)(v61 + 280) = 0xEA00000000006570;
  id v73 = objc_msgSend(v66, sel_currentDevice);
  id v74 = objc_msgSend(v73, sel_model);

  uint64_t v75 = sub_24B6827D0();
  uint64_t v77 = v76;

  *(void *)(v61 + 288) = v75;
  *(void *)(v61 + 296) = v77;
  *(void *)(v61 + 312) = v63;
  *(void *)(v61 + 320) = 0x656D695465746164;
  uint64_t v78 = v235;
  *(void *)(v61 + 328) = 0xE800000000000000;
  *(void *)(v61 + 336) = v78;
  *(void *)(v61 + 344) = v233;
  *(void *)(v61 + 360) = v63;
  *(void *)(v61 + 368) = 1936154996;
  *(void *)(v61 + 376) = 0xE400000000000000;
  uint64_t v79 = sub_24B562F04(&qword_2697CC8A0);
  uint64_t v80 = MEMORY[0x263F8EE78];
  *(void *)(v61 + 384) = MEMORY[0x263F8EE78];
  *(void *)(v61 + 408) = v79;
  *(void *)(v61 + 416) = 1953066613;
  *(void *)(v61 + 424) = 0xE400000000000000;
  *(void *)(v61 + 432) = 109;
  *(void *)(v61 + 440) = 0xE100000000000000;
  *(void *)(v61 + 456) = v72;
  *(void *)(v61 + 464) = 0x6F64697265507369;
  *(void *)(v61 + 472) = 0xE900000000000074;
  uint64_t v81 = v208;
  CFURLRef v82 = (char *)(v208 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot);
  swift_beginAccess();
  char v83 = *v82;
  *(void *)(v61 + 504) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v61 + 480) = v83;
  sub_24B5F47DC(v242, (uint64_t)v241);
  unint64_t v84 = sub_24B560D28(v61);
  uint64_t v251 = v80;
  uint64_t v85 = (uint64_t *)(v81 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap);
  swift_beginAccess();
  uint64_t v86 = *v85;
  swift_bridgeObjectRetain_n();
  size_t v87 = sub_24B5F2840(v86);
  swift_bridgeObjectRelease();
  *(void *)&long long v247 = v87;
  sub_24B5F2794((void **)&v247);
  swift_bridgeObjectRelease();
  uint64_t v88 = *(void *)(v247 + 16);
  uint64_t v89 = v239;
  os_log_type_t v90 = v234;
  if (v88)
  {
    uint64_t v204 = v247;
    unint64_t v205 = v84;
    uint64_t v215 = (uint64_t)v228 + *(int *)(v239 + 48);
    uint64_t v91 = v247 + ((*((unsigned __int8 *)v234 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v234 + 80));
    char v214 = (uint64_t *)(v208 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
    swift_beginAccess();
    uint64_t v235 = v88 - 1;
    uint64_t v211 = v90[9];
    uint64_t v92 = MEMORY[0x263F8D6C8];
    long long v236 = xmmword_24B6856B0;
    long long v213 = xmmword_24B684E60;
    uint64_t v212 = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      uint64_t v229 = v91;
      unsigned int v93 = v228;
      sub_24B563A6C(v91, (uint64_t)v228, &qword_2697CC7F0);
      uint64_t v94 = *(int *)(v89 + 48);
      uint64_t v95 = v237;
      uint64_t v96 = (uint64_t)v237 + v94;
      uint64_t v97 = *v93;
      *long long v237 = *v93;
      sub_24B5E7B08(v215, (uint64_t)v95 + v94);
      uint64_t v98 = *(int *)(v89 + 48);
      id v99 = v218;
      uint64_t v100 = (uint64_t)v218 + v98;
      void *v218 = v97;
      uint64_t v242 = v96;
      sub_24B5F5A70(v96, (uint64_t)v99 + v98, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      long long v241 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      uint64_t v101 = v100 + v241[12];
      uint64_t v102 = *(void *)v101;
      char v103 = *(unsigned char *)(v101 + 8);
      sub_24B5F5AD8(v100, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      long long v104 = (void *)MEMORY[0x263F8EE78];
      if ((v103 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        *(void *)&long long v247 = v102;
        long long v104 = sub_24B679F34();
      }
      long long v234 = v104;
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v216;
      *(void *)(v105 + 32) = 0x64496172656D6163;
      *(void *)(v105 + 40) = 0xE800000000000000;
      *(void *)(v105 + 48) = 0;
      *(void *)(v105 + 72) = v92;
      *(void *)(v105 + 80) = 0x556E6F6973736573;
      *(void *)(v105 + 88) = 0xEB00000000444955;
      uint64_t v106 = *(int *)(v89 + 48);
      id v107 = v219;
      uint64_t v108 = (uint64_t)v219 + v106;
      *long long v219 = v97;
      sub_24B5F5A70(v242, (uint64_t)v107 + v106, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v109 = v226;
      sub_24B563A6C(v108 + v241[6], v226, &qword_2697CC460);
      sub_24B5F5AD8(v108, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v110 = sub_24B682410();
      uint64_t v111 = *(void *)(v110 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110) == 1)
      {
        sub_24B5632A8(v109, &qword_2697CC460);
        uint64_t v112 = (uint64_t *)(v105 + 96);
        *(void *)(v105 + 120) = v72;
      }
      else
      {
        uint64_t v113 = sub_24B6823D0();
        unint64_t v115 = v114;
        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v109, v110);
        uint64_t v112 = (uint64_t *)(v105 + 96);
        *(void *)(v105 + 120) = v72;
        if (v115)
        {
          *uint64_t v112 = v113;
          uint64_t v92 = MEMORY[0x263F8D6C8];
          goto LABEL_25;
        }
        uint64_t v92 = MEMORY[0x263F8D6C8];
      }
      *uint64_t v112 = 0;
      unint64_t v115 = 0xE000000000000000;
LABEL_25:
      *(void *)(v105 + 104) = v115;
      *(void *)(v105 + 128) = 0x49746E656D676573;
      *(void *)(v105 + 136) = 0xE900000000000064;
      uint64_t v116 = *(int *)(v89 + 48);
      unint64_t v117 = v220;
      uint64_t v118 = (uint64_t)v220 + v116;
      *id v220 = v97;
      sub_24B5F5A70(v242, (uint64_t)v117 + v116, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B56CF38(v118 + v241[7], (uint64_t)v246, &qword_2697CC9C0);
      sub_24B56D16C((uint64_t)v246, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56CFC0);
      sub_24B5F5AD8(v118, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B56CF38((uint64_t)v246, (uint64_t)&v247, &qword_2697CC9C0);
      if (sub_24B56CF9C((uint64_t)&v247) == 1)
      {
        uint64_t v119 = 0;
        int v120 = 1;
      }
      else
      {
        uint64_t v119 = v249;
        int v120 = v250;
        sub_24B56D16C((uint64_t)v246, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
      }
      uint64_t v121 = *(int *)(v89 + 48);
      uint64_t v122 = v238;
      uint64_t v123 = (uint64_t)v238 + v121;
      void *v238 = v97;
      sub_24B5F5A70(v242, (uint64_t)v122 + v121, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      *(void *)(v105 + 168) = v92;
      if (v120)
      {
        uint64_t v124 = *(int *)(v89 + 48);
        uint64_t v125 = v209;
        uint64_t v126 = (uint64_t)v209 + v124;
        *float64x2_t v209 = v97;
        sub_24B5F5A70(v123, (uint64_t)v125 + v124, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        uint64_t v127 = v126 + v241[8];
        uint64_t v128 = *(void *)(v127 + 64);
        unsigned __int8 v129 = *(unsigned char *)(v127 + 72);
        unsigned __int8 v130 = *(unsigned char *)(v127 + 73);
        sub_24B5F5AD8(v126, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
        if ((v130 | v129)) {
          uint64_t v119 = -1;
        }
        else {
          uint64_t v119 = v128;
        }
      }
      *(void *)(v105 + 144) = v119;
      sub_24B5632A8((uint64_t)v238, &qword_2697CC7F0);
      *(void *)(v105 + 176) = 0x6D617473656D6974;
      *(void *)(v105 + 184) = 0xE900000000000070;
      uint64_t v131 = *(int *)(v89 + 48);
      id v132 = v221;
      int v133 = (double *)((char *)v221 + v131);
      void *v221 = v97;
      uint64_t v134 = v242;
      sub_24B5F5A70(v242, (uint64_t)v132 + v131, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      double v135 = *v133;
      sub_24B5F5AD8((uint64_t)v133, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      *(void *)(v105 + 192) = sub_24B5F8B94(v135);
      *(void *)(v105 + 200) = v136;
      *(void *)(v105 + 216) = v72;
      *(void *)(v105 + 224) = 0x6172656D6163;
      *(void *)(v105 + 232) = 0xE600000000000000;
      uint64_t v233 = sub_24B562F04(&qword_2697CC8A8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v236;
      *(void *)(inited + 32) = 0x69736E6972746E69;
      *(void *)(inited + 40) = 0xEA00000000007363;
      uint64_t v138 = (uint64_t)v132 + *(int *)(v89 + 48);
      *id v132 = v97;
      sub_24B5F5A70(v134, v138, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      id v139 = v241;
      uint64_t v140 = v227;
      sub_24B5F5A70(v138 + v241[5], v227, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_24B5F5AD8(v138, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      long long v141 = *(_OWORD *)(v140 + 16);
      v252[0] = *(_OWORD *)v140;
      v252[1] = v141;
      v252[2] = *(_OWORD *)(v140 + 32);
      sub_24B5F5AD8(v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_24B5F8728((uint64_t)v252);
      *(void *)(inited + 48) = v142;
      *(void *)(inited + 56) = 0x726F66736E617274;
      *(void *)(inited + 64) = 0xE90000000000006DLL;
      uint64_t v143 = (uint64_t)v132 + *(int *)(v89 + 48);
      *id v132 = v97;
      uint64_t v144 = v242;
      sub_24B5F5A70(v242, v143, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B5F5A70(v143 + v139[5], v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_24B5F5AD8(v143, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      int8x16_t v240 = *(int8x16_t *)(v140 + 48);
      int8x16_t v145 = *(int8x16_t *)(v140 + 64);
      int8x16_t v231 = *(int8x16_t *)(v140 + 80);
      int8x16_t v232 = v145;
      int8x16_t v230 = *(int8x16_t *)(v140 + 96);
      sub_24B5F5AD8(v140, type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera);
      sub_24B5F87F0(v240, v232, v231, v230);
      *(void *)(inited + 72) = v146;
      unint64_t v147 = sub_24B5ED688(inited);
      uint64_t v148 = sub_24B562F04(&qword_2697CC8B0);
      *(void *)(v105 + 240) = v147;
      v240.i64[0] = v148;
      *(void *)(v105 + 264) = v148;
      *(void *)(v105 + 272) = 0x7463656A626FLL;
      *(void *)(v105 + 280) = 0xE600000000000000;
      uint64_t v149 = swift_initStackObject();
      *(_OWORD *)(v149 + 16) = v236;
      *(void *)(v149 + 32) = 0x676E69646E756F62;
      *(void *)(v149 + 40) = 0xEB00000000786F42;
      uint64_t v150 = *(int *)(v89 + 48);
      unint64_t v151 = v222;
      uint64_t v152 = (uint64_t)v222 + v150;
      void *v222 = v97;
      sub_24B5F5A70(v144, (uint64_t)v151 + v150, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B56CF38(v152 + v139[7], (uint64_t)v244, &qword_2697CC9C0);
      sub_24B56D16C((uint64_t)v244, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56CFC0);
      sub_24B5F5AD8(v152, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      sub_24B56CF38((uint64_t)v244, (uint64_t)v245, &qword_2697CC9C0);
      if (sub_24B56CF9C((uint64_t)v245) == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      }
      else
      {
        int8x16_t v231 = (int8x16_t)v245[1];
        int8x16_t v232 = (int8x16_t)v245[0];
        int8x16_t v230 = (int8x16_t)v245[2];
        int8x16_t v210 = (int8x16_t)v245[3];
        sub_24B56D16C((uint64_t)v244, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_24B56D1D8);
        int8x16_t v156 = v210;
        int8x16_t v155 = v230;
        int8x16_t v154 = v231;
        int8x16_t v153 = v232;
      }
      sub_24B5F87F0(v153, v154, v155, v156);
      *(void *)(v149 + 48) = v157;
      *(void *)(v149 + 56) = 0x726F66736E617274;
      *(void *)(v149 + 64) = 0xE90000000000006DLL;
      OCNonModularSPI_Serialization_InvalidObjectTransform();
      sub_24B5F87F0(v158, v159, v160, v161);
      *(void *)(v149 + 72) = v162;
      *(void *)(v105 + 288) = sub_24B5ED688(v149);
      *(void *)(v105 + 312) = v240.i64[0];
      *(void *)(v105 + 320) = 0x656E656373;
      *(void *)(v105 + 328) = 0xE500000000000000;
      uint64_t v163 = swift_initStackObject();
      *(_OWORD *)(v163 + 16) = v213;
      *(void *)(v163 + 32) = 0x676E69646E756F62;
      *(void *)(v163 + 40) = 0xEB00000000786F42;
      uint64_t v164 = *(int *)(v239 + 48);
      uint64_t v165 = v223;
      uint64_t v166 = (uint64_t)v223 + v164;
      *id v223 = v97;
      sub_24B5F5A70(v242, (uint64_t)v165 + v164, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v167 = v166 + v241[8];
      uint64_t v168 = *(void *)v167;
      uint64_t v169 = *(void *)(v167 + 8);
      uint64_t v170 = *(void *)(v167 + 16);
      uint64_t v171 = *(void *)(v167 + 24);
      v230.i64[0] = *(void *)(v167 + 32);
      v232.i64[0] = *(void *)(v167 + 40);
      v231.i64[0] = *(void *)(v167 + 48);
      uint64_t v233 = *(void *)(v167 + 56);
      int v172 = *(unsigned __int8 *)(v167 + 73);
      sub_24B5F5AD8(v166, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if (v172 == 1)
      {
        OCNonModularSPI_Serialization_InvalidBoundingBoxTransform();
      }
      else
      {
        v173.i64[0] = v168;
        v173.i64[1] = v169;
        v174.i64[0] = v170;
        v174.i64[1] = v171;
        v175.i64[0] = v230.i64[0];
        v175.i64[1] = v232.i64[0];
        v176.i64[0] = v231.i64[0];
        v176.i64[1] = v233;
      }
      uint64_t v72 = MEMORY[0x263F8D310];
      uint64_t v177 = v235;
      uint64_t v92 = MEMORY[0x263F8D6C8];
      sub_24B5F87F0(v173, v174, v175, v176);
      *(void *)(v163 + 48) = v178;
      *(void *)(v105 + 336) = sub_24B5ED688(v163);
      uint64_t v89 = v239;
      *(void *)(v105 + 360) = v240.i64[0];
      *(void *)(v105 + 368) = 0x4D65727574706163;
      *(void *)(v105 + 376) = 0xEB0000000065646FLL;
      uint64_t v179 = *(int *)(v89 + 48);
      uint64_t v180 = v224;
      uint64_t v181 = (uint64_t)v224 + v179;
      *long long v224 = v97;
      sub_24B5F5A70(v242, (uint64_t)v180 + v179, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      int v182 = *(unsigned __int8 *)(v181 + v241[9]);
      sub_24B5F5AD8(v181, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if (v182 == 2)
      {
        uint64_t v183 = -1;
      }
      else
      {
        char v243 = v182 & 1;
        uint64_t v183 = ObjectCaptureSession.Metadata.Shot.CaptureMode.rawValue.getter();
      }
      uint64_t v184 = v234;
      *(void *)(v105 + 384) = v183;
      *(void *)(v105 + 408) = v92;
      *(void *)(v105 + 416) = 0x6B63616264656566;
      *(void *)(v105 + 424) = 0xE800000000000000;
      uint64_t v185 = sub_24B562F04(&qword_2697CC260);
      *(void *)(v105 + 432) = v184;
      *(void *)(v105 + 456) = v185;
      *(void *)(v105 + 464) = 0x65636E6575716573;
      *(void *)(v105 + 472) = 0xEA00000000006449;
      uint64_t v186 = *(int *)(v89 + 48);
      long long v187 = v225;
      long long v188 = (double *)((char *)v225 + v186);
      *long long v225 = v97;
      sub_24B5F5A70(v242, (uint64_t)v187 + v186, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      double v189 = *v188;
      sub_24B5F5AD8((uint64_t)v188, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      uint64_t v190 = *v214;
      if (*(void *)(*v214 + 16) && (unint64_t v191 = sub_24B5E3410(v189), (v192 & 1) != 0)) {
        uint64_t v193 = *(void *)(*(void *)(v190 + 56) + 8 * v191);
      }
      else {
        uint64_t v193 = -1;
      }
      *(void *)(v105 + 504) = v92;
      *(void *)(v105 + 480) = v193;
      sub_24B560D28(v105);
      sub_24B682710();
      uint64_t v194 = swift_bridgeObjectRelease();
      MEMORY[0x24C5D4A60](v194);
      sub_24B5F1C6C(*(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10));
      sub_24B682A10();
      sub_24B6829C0();
      sub_24B5632A8((uint64_t)v237, &qword_2697CC7F0);
      if (!v177)
      {
        swift_release();
        unint64_t v84 = v205;
        goto LABEL_49;
      }
      uint64_t v235 = v177 - 1;
      uint64_t v91 = v229 + v211;
    }
  }
  swift_release();
LABEL_49:
  uint64_t v195 = v251;
  *((void *)&v248 + 1) = sub_24B562F04(&qword_2697CC8B8);
  *(void *)&long long v247 = v195;
  sub_24B563220(&v247, v246);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v245[0] = v84;
  sub_24B5E4AB0(v246, 0x73746F6873, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  float64x2_t v197 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  sub_24B562F04(&qword_2697CC198);
  uint64_t v198 = swift_allocObject();
  *(_OWORD *)(v198 + 16) = xmmword_24B6856B0;
  *(void *)(v198 + 32) = sub_24B6822D0();
  *(void *)(v198 + 40) = v199;
  id v200 = self;
  strcpy((char *)(v198 + 48), "metadata.json");
  *(_WORD *)(v198 + 62) = -4864;
  uint64_t v201 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v202 = objc_msgSend(v200, sel_pathWithComponents_, v201);

  sub_24B6827D0();
  char v54 = sub_24B5E8B5C((uint64_t)v197);

  swift_bridgeObjectRelease();
  return v54 & 1;
}

uint64_t sub_24B5F0784()
{
  uint64_t v1 = sub_24B6824D0();
  uint64_t v56 = *(void *)(v1 - 8);
  uint64_t v57 = v1;
  MEMORY[0x270FA5388](v1);
  id v55 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v60 = *((void *)v66 - 1);
  uint64_t v3 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v53 - v5;
  uint64_t v7 = sub_24B562F04(&qword_2697CC7E8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)((char *)&v53 - v11);
  uint64_t v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotMetadataMap);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 64);
  uint64_t v58 = *v13 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v61 = v14;
  uint64_t v62 = v0;
  uint64_t v19 = (uint64_t *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_bridgeObjectRetain();
  uint64_t v63 = v19;
  uint64_t result = swift_beginAccess();
  int64_t v64 = 0;
  int64_t v59 = (unint64_t)(v16 + 63) >> 6;
  int64_t v54 = v59 - 1;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v64 << 6);
LABEL_6:
      uint64_t v23 = *(void *)(v61 + 56);
      *uint64_t v10 = *(void *)(*(void *)(v61 + 48) + 8 * v22);
      uint64_t v24 = v23 + *(void *)(v60 + 72) * v22;
      uint64_t v25 = sub_24B562F04(&qword_2697CC7F0);
      sub_24B5F5A70(v24, (uint64_t)v10 + *(int *)(v25 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
      goto LABEL_25;
    }
    int64_t v26 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v26 < v59)
    {
      unint64_t v27 = *(void *)(v58 + 8 * v26);
      if (v27) {
        goto LABEL_10;
      }
      int64_t v28 = v64 + 2;
      ++v64;
      if (v26 + 1 < v59)
      {
        unint64_t v27 = *(void *)(v58 + 8 * v28);
        if (v27) {
          goto LABEL_13;
        }
        int64_t v64 = v26 + 1;
        if (v26 + 2 < v59)
        {
          unint64_t v27 = *(void *)(v58 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_10;
          }
          int64_t v28 = v26 + 3;
          int64_t v64 = v26 + 2;
          if (v26 + 3 < v59) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v29 = sub_24B562F04(&qword_2697CC7F0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    unint64_t v18 = 0;
LABEL_25:
    sub_24B56CF38((uint64_t)v10, (uint64_t)v12, &qword_2697CC7E8);
    uint64_t v30 = sub_24B562F04(&qword_2697CC7F0);
    int v31 = (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30);
    if (v31 == 1)
    {
      swift_release();
      uint64_t v46 = sub_24B57CB70();
      uint64_t v48 = v55;
      uint64_t v47 = v56;
      uint64_t v49 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v46, v57);
      unint64_t v50 = sub_24B6824B0();
      os_log_type_t v51 = sub_24B682B10();
      if (os_log_type_enabled(v50, v51))
      {
        char v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v52 = 0;
        _os_log_impl(&dword_24B55E000, v50, v51, "Bundle Writer: Saved shot cameras with mobileSfM poses to the bundle!", v52, 2u);
        MEMORY[0x24C5D6C00](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
      return v31 == 1;
    }
    double v32 = *v12;
    sub_24B5E7B08((uint64_t)v12 + *(int *)(v30 + 48), (uint64_t)v6);
    sub_24B56CF38((uint64_t)&v6[v66[7]], (uint64_t)v67, &qword_2697CC9C0);
    sub_24B56CF38((uint64_t)v67, (uint64_t)v68, &qword_2697CC9C0);
    int v33 = sub_24B56CF9C((uint64_t)v68);
    uint64_t v34 = v68[17];
    char v35 = v69;
    sub_24B5F5A70((uint64_t)v6, v65, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if (v33 == 1 || (v35 & 1) != 0)
    {
      uint64_t v36 = v65 + v66[8];
      uint64_t v37 = *(void *)(v36 + 64);
      unsigned __int8 v38 = *(unsigned char *)(v36 + 72);
      unsigned __int8 v39 = *(unsigned char *)(v36 + 73);
      sub_24B5F5AD8(v65, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
      if ((v39 | v38)) {
        uint64_t v34 = -1;
      }
      else {
        uint64_t v34 = v37;
      }
    }
    else
    {
      sub_24B5F5AD8(v65, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    }
    uint64_t v40 = *v63;
    if (!*(void *)(*v63 + 16) || (unint64_t v41 = sub_24B5E3410(v32), (v42 & 1) == 0))
    {
      sub_24B5F5AD8((uint64_t)v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
LABEL_37:
      swift_release();
      return v31 == 1;
    }
    uint64_t v43 = sub_24B5EF08C(*(void *)(*(void *)(v40 + 56) + 8 * v41), v32);
    char v45 = sub_24B5F49C0((uint64_t)&v6[v66[5]], v34, v32, v43, v44);
    swift_bridgeObjectRelease();
    uint64_t result = sub_24B5F5AD8((uint64_t)v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    if ((v45 & 1) == 0) {
      goto LABEL_37;
    }
  }
  unint64_t v27 = *(void *)(v58 + 8 * v28);
  if (v27)
  {
LABEL_13:
    int64_t v26 = v28;
LABEL_10:
    unint64_t v18 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v64 = v26;
    goto LABEL_6;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v59)
    {
      int64_t v64 = v54;
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v58 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_10;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

BOOL sub_24B5F0E6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24B562F04(&qword_2697CC7E8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (double *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24B562F04(&qword_2697CC828);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (double *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_24B5F12EC(v8, v4);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_24B562F04(&qword_2697CC7F0);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_24B5632A8((uint64_t)v4, &qword_2697CC7E8);
    return 0;
  }
  uint64_t v10 = (uint64_t)v4 + *(int *)(v9 + 48);
  uint64_t v11 = (uint64_t)v7 + *(int *)(v5 + 48);
  *uint64_t v7 = *v4;
  sub_24B5E7B08(v10, v11);
  double v12 = *v7;
  sub_24B5F5AD8((uint64_t)v7 + *(int *)(v5 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (!*(void *)(v14 + 16)) {
    return 0;
  }
  unint64_t v15 = sub_24B5E3410(v12);
  if ((v16 & 1) == 0) {
    return 0;
  }
  CFAllocatorRef v17 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  sub_24B5EE5C8(*(void *)(*(void *)(v14 + 56) + 8 * v15), v12);
  unint64_t v18 = (__CFString *)sub_24B6827A0();
  swift_bridgeObjectRelease();
  CFURLRef v19 = CFURLCreateWithFileSystemPath(v17, v18, kCFURLPOSIXPathStyle, 0);

  if (!v19) {
    return 0;
  }
  CGImageSourceRef v20 = CGImageSourceCreateWithURL(v19, 0);
  if (!v20)
  {

    return 0;
  }
  unint64_t v21 = v20;
  sub_24B562F04(&qword_2697CC0C8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B684FC0;
  uint64_t v23 = (void *)*MEMORY[0x263F0F5B8];
  *(void *)(inited + 32) = *MEMORY[0x263F0F5B8];
  uint64_t v24 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 40) = 1;
  uint64_t v25 = (void *)*MEMORY[0x263F0F5A8];
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 72) = v25;
  *(unsigned char *)(inited + 80) = 1;
  int64_t v26 = (void *)*MEMORY[0x263F0F638];
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 144) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 120) = 640;
  id v27 = v23;
  id v28 = v25;
  id v29 = v26;
  sub_24B565928(inited);
  type metadata accessor for CFString(0);
  sub_24B5F4624(&qword_2697CC0D0, type metadata accessor for CFString);
  CFDictionaryRef v30 = (const __CFDictionary *)sub_24B682710();
  swift_bridgeObjectRelease();
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v21, 0, v30);
  if (!ThumbnailAtIndex)
  {

    return 0;
  }
  double v32 = ThumbnailAtIndex;
  sub_24B562F04(&qword_2697CC198);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24B6856B0;
  *(void *)(v33 + 32) = sub_24B6822D0();
  *(void *)(v33 + 40) = v34;
  char v35 = self;
  strcpy((char *)(v33 + 48), "thumbnail.jpg");
  *(_WORD *)(v33 + 62) = -4864;
  uint64_t v36 = (void *)sub_24B682980();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v35, sel_pathWithComponents_, v36);

  sub_24B6827D0();
  BOOL v38 = sub_24B5E8D98(v32);

  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_24B5F12EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_24B562F04(&qword_2697CC7F0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v25 = v5;
    unint64_t v9 = sub_24B5F3C70(v8);
    uint64_t v10 = sub_24B5F42AC(a1);
    uint64_t v12 = v11;
    char v14 = v13 & 1;
    uint64_t v15 = sub_24B5F4334(v10, v11, v13 & 1, v9, a1);
    uint64_t v17 = v16;
    uint64_t v19 = v18 & 1;
    sub_24B5F5A58(v10, v12, v14);
    uint64_t v20 = (uint64_t)v7 + *(int *)(v4 + 48);
    sub_24B5F4488(v20, v15, v17, v19, a1);
    *uint64_t v7 = v21;
    *a2 = v21;
    sub_24B5F5A70(v20, (uint64_t)a2 + *(int *)(v4 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    sub_24B5632A8((uint64_t)v7, &qword_2697CC7F0);
    sub_24B5F5A58(v15, v17, v19);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v4);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v23(a2, 1, 1, v4);
  }
}

uint64_t sub_24B5F14E4(double *a1)
{
  uint64_t v55 = sub_24B6824D0();
  uint64_t v2 = *(void *)(v55 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v55);
  char v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v51 = (char *)&v42 - v5;
  uint64_t v50 = sub_24B6822E0();
  uint64_t v6 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) + 52);
  int64_t v54 = a1;
  unint64_t v9 = *(void *)((char *)a1 + v8);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_24:
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24B682F00();
  if (!v10) {
    goto LABEL_24;
  }
LABEL_3:
  uint64_t v46 = (unsigned char *)(v61 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_isPeridot);
  char v52 = (uint64_t *)(v61 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_shotSquenceIDMap);
  unint64_t v53 = v9 & 0xC000000000000001;
  swift_beginAccess();
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v44 = (void (**)(char *, uint64_t))(v2 + 8);
  char v45 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v6 = 4;
  uint64_t v47 = v10;
  unint64_t v48 = v9;
  while (1)
  {
    uint64_t v2 = v6 - 4;
    if (v53)
    {
      uint64_t v12 = MEMORY[0x24C5D4F60](v6 - 4, v9);
      uint64_t v13 = v6 - 3;
      if (__OFADD__(v2, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v9 + 8 * v6);
      swift_retain();
      uint64_t v13 = v6 - 3;
      if (__OFADD__(v2, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    uint64_t v14 = *v52;
    if (!*(void *)(*v52 + 16)) {
      break;
    }
    unint64_t v15 = sub_24B5E3410(*v54);
    if ((v16 & 1) == 0) {
      break;
    }
    uint64_t v59 = v13;
    uint64_t v60 = v6;
    uint64_t v58 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    uint64_t v17 = v58;
    char v18 = (double (**)(void))(*(void *)v12 + 104);
    uint64_t v56 = *v18;
    uint64_t v57 = v18;
    double v19 = v56();
    sub_24B5EEC5C(v17, v19);
    uint64_t v20 = (void *)(*(uint64_t (**)(void))(*(void *)v12 + 128))();
    uint64_t v21 = v46;
    swift_beginAccess();
    sub_24B5FABB8(v21, v64);
    swift_endAccess();

    v62[0] = v64[0];
    v62[1] = v64[1];
    _OWORD v62[2] = v64[2];
    v62[3] = v64[3];
    uint64_t v63 = v65;
    uint64_t v22 = (uint64_t)v49;
    sub_24B682220();
    swift_bridgeObjectRelease();
    sub_24B5F4F50((uint64_t *)v62, v22);
    (*v45)(v22, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRelease();
    uint64_t v24 = v56;
    double v25 = ((double (*)(uint64_t))v56)(v23);
    uint64_t v26 = sub_24B5EEE74(v58, v25);
    uint64_t v28 = v27;
    id v29 = (*(void *(**)(void *__return_ptr))(*(void *)v12 + 152))(v66);
    double v30 = ((double (*)(void *))v24)(v29);
    LOBYTE(v22) = sub_24B5F56D0((uint64_t)v66, v30, v26, v28);
    swift_bridgeObjectRelease();
    if (v22)
    {
      swift_release();
      uint64_t v11 = v47;
      unint64_t v9 = v48;
      uint64_t v31 = v59;
    }
    else
    {
      uint64_t v32 = sub_24B57CB70();
      (*v43)(v51, v32, v55);
      uint64_t v33 = sub_24B6824B0();
      os_log_type_t v34 = sub_24B682B20();
      BOOL v35 = os_log_type_enabled(v33, v34);
      uint64_t v31 = v59;
      if (v35)
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_24B55E000, v33, v34, "Bundle Writer: Failed to write camera to bundle!", v36, 2u);
        MEMORY[0x24C5D6C00](v36, -1, -1);
      }

      swift_release();
      (*v44)(v51, v55);
      uint64_t v11 = v47;
      unint64_t v9 = v48;
    }
    uint64_t v6 = v60 + 1;
    if (v31 == v11) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_24B57CB70();
  (*v43)(v42, v37, v55);
  BOOL v38 = sub_24B6824B0();
  os_log_type_t v39 = sub_24B682B20();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl(&dword_24B55E000, v38, v39, "Bundle Writer: Failed to get sequence ID from temporal depth point cloud timestamp", v40, 2u);
    MEMORY[0x24C5D6C00](v40, -1, -1);
  }

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))*v44)(v42, v55);
}

uint64_t ObjectCaptureBundleWriter.deinit()
{
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_url;
  uint64_t v2 = sub_24B6822E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_24B5D7FB0(*(void *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise));
  sub_24B5F47DC(*(void *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata), *(void *)(v0 + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ObjectCaptureBundleWriter.__deallocating_deinit()
{
  ObjectCaptureBundleWriter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_24B5F1C6C(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_24B6829D0();
  }
  return result;
}

uint64_t sub_24B5F1C98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_24B562F04(&qword_2697CC8E0);
  uint64_t result = sub_24B682F20();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    os_log_type_t v34 = v3;
    int64_t v8 = 0;
    unint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *unint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_24B683080();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24B5F1F44(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24B5E3410(a3);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24B5F2070();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(double *)(v16[6] + v18) = a3;
    *(void *)(v16[7] + v18) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_24B5F1C98(result, a2 & 1);
  uint64_t result = sub_24B5E3410(a3);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24B682FF0();
  __break(1u);
  return result;
}

void *sub_24B5F2070()
{
  uint64_t v1 = v0;
  sub_24B562F04(&qword_2697CC8E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24B682F10();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_24B5F2200(void *a1, double a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_24B5F2570(v4);
  v4[9] = sub_24B5F22F8(v4 + 4, isUniquelyReferenced_nonNull_native, a2);
  return sub_24B5F2298;
}

void sub_24B5F2298(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

void (*sub_24B5F22F8(void *a1, char a2, double a3))(double **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = v3;
  *(double *)uint64_t v8 = a3;
  uint64_t v9 = sub_24B562F04(&qword_2697CCC90);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_24B5E3410(a3);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a2 & 1) != 0)
    {
LABEL_7:
      void v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_24B5E7B08(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_24B5F250C;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a2 & 1) == 0)
    {
      sub_24B5E59B4();
      goto LABEL_7;
    }
    sub_24B5E3C80(v16, a2 & 1);
    unint64_t v23 = sub_24B5E3410(a3);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      void v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(double **))sub_24B682FF0();
  __break(1u);
  return result;
}

void sub_24B5F250C(double **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)*((void *)*a1 + 2);
  sub_24B5F25AC((uint64_t)v2, *((unsigned char *)*a1 + 32), *((uint64_t **)*a1 + 1), *((void *)*a1 + 3), **a1);
  sub_24B5632A8((uint64_t)v2, &qword_2697CCC90);
  free(v2);

  free(v1);
}

uint64_t (*sub_24B5F2570(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_24B5F25A0;
}

uint64_t sub_24B5F25A0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_24B5F25AC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, double a5)
{
  uint64_t v10 = sub_24B562F04(&qword_2697CCC90);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v22 - v18;
  sub_24B563A6C(a1, (uint64_t)v12, &qword_2697CCC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_24B5632A8((uint64_t)v12, &qword_2697CCC90);
    if (a2) {
      return sub_24B5E45E0(a4, *a3);
    }
  }
  else
  {
    sub_24B5E7B08((uint64_t)v12, (uint64_t)v19);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_24B5E7B08((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4);
    }
    else
    {
      sub_24B5E7B08((uint64_t)v19, (uint64_t)v17);
      return sub_24B5E51B4(a4, (uint64_t)v17, v21, a5);
    }
  }
  return result;
}

uint64_t sub_24B5F2794(void **a1)
{
  uint64_t v2 = *(void *)(sub_24B562F04(&qword_2697CC7F0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_24B5F4298(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_24B5F29D4(v6);
  *a1 = v3;
  return result;
}

size_t sub_24B5F2840(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_24B562F04(&qword_2697CC8C8);
  uint64_t v3 = *(void *)(sub_24B562F04(&qword_2697CC7F0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = *(void *)(sub_24B562F04(&qword_2697CC7F0) - 8);
      uint64_t v10 = sub_24B5F3F44(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_24B563218();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24B5F29D4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v4 = *(void *)(v129 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v129);
  uint64_t v125 = (uint64_t)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v135 = (uint64_t)&v120 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v132 = (double *)((char *)&v120 - v10);
  MEMORY[0x270FA5388](v9);
  uint64_t v131 = (double *)((char *)&v120 - v11);
  uint64_t v12 = a1[1];
  uint64_t result = sub_24B682F80();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      return sub_24B5F340C(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v128 = v4;
  uint64_t v122 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v127 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v121 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_106:
      uint64_t v113 = v18;
      if (v20 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_135;
          }
          if (!v114) {
            goto LABEL_147;
          }
          uint64_t v116 = *(void *)&v113[16 * v115 + 32];
          uint64_t v117 = *(void *)&v113[16 * v20 + 24];
          sub_24B5F368C(v114 + *(void *)(v128 + 72) * v116, v114 + *(void *)(v128 + 72) * *(void *)&v113[16 * v20 + 16], v114 + *(void *)(v128 + 72) * v117, v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_24B5882C4((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_137;
          }
          uint64_t v118 = &v113[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v20 > v119) {
            goto LABEL_138;
          }
          memmove(&v113[16 * v20 + 16], &v113[16 * v20 + 32], 16 * (v119 - v20));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_24B6829F0();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v121 = v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  uint64_t v134 = a1;
  while (1)
  {
    uint64_t v21 = v19 + 1;
    uint64_t v126 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v30 = v19 + 1;
    }
    else
    {
      uint64_t v22 = *a1;
      uint64_t v23 = *(void *)(v4 + 72);
      uint64_t v24 = *a1 + v23 * v21;
      uint64_t v25 = v131;
      uint64_t v133 = v12;
      sub_24B563A6C(v24, (uint64_t)v131, &qword_2697CC7F0);
      unint64_t v26 = v132;
      sub_24B563A6C(v22 + v23 * v126, (uint64_t)v132, &qword_2697CC7F0);
      double v27 = *v25;
      double v28 = *v26;
      sub_24B5632A8((uint64_t)v26, &qword_2697CC7F0);
      uint64_t v29 = (uint64_t)v25;
      uint64_t v19 = v126;
      uint64_t v12 = v133;
      sub_24B5632A8(v29, &qword_2697CC7F0);
      uint64_t v30 = v19 + 2;
      uint64_t v124 = v22;
      uint64_t v136 = v23;
      if (v19 + 2 >= v12)
      {
        uint64_t v37 = v23;
        uint64_t v4 = v128;
        if (v27 >= v28) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v123 = v2;
        int v120 = v18;
        uint64_t v130 = v23 * v21;
        uint64_t v31 = v22;
        uint64_t v32 = v19 + 2;
        uint64_t v33 = v23 * (v19 + 2);
        while (1)
        {
          os_log_type_t v34 = v131;
          sub_24B563A6C(v31 + v33, (uint64_t)v131, &qword_2697CC7F0);
          char v35 = v132;
          sub_24B563A6C(v31 + v130, (uint64_t)v132, &qword_2697CC7F0);
          BOOL v36 = *v34 >= *v35;
          sub_24B5632A8((uint64_t)v35, &qword_2697CC7F0);
          sub_24B5632A8((uint64_t)v34, &qword_2697CC7F0);
          if (v27 < v28 == v36) {
            break;
          }
          uint64_t v37 = v136;
          v31 += v136;
          ++v32;
          uint64_t v12 = v133;
          if (v133 == v32)
          {
            uint64_t v30 = v133;
            uint64_t v4 = v128;
            uint64_t v18 = v120;
            uint64_t v2 = v123;
            uint64_t v22 = v124;
            uint64_t v19 = v126;
            if (v27 < v28) {
              goto LABEL_26;
            }
            goto LABEL_39;
          }
        }
        uint64_t v4 = v128;
        uint64_t v18 = v120;
        uint64_t v30 = v32;
        uint64_t v2 = v123;
        uint64_t v22 = v124;
        uint64_t v19 = v126;
        uint64_t v12 = v133;
        uint64_t v37 = v136;
        if (v27 >= v28) {
          goto LABEL_39;
        }
      }
LABEL_26:
      if (v30 < v19) {
        goto LABEL_141;
      }
      if (v19 < v30)
      {
        uint64_t v123 = v2;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v30 - 1);
        uint64_t v40 = v30 * v37;
        uint64_t v41 = v19 * v37;
        do
        {
          if (v19 != v30 + v38 - 1)
          {
            if (!v22) {
              goto LABEL_146;
            }
            uint64_t v130 = v22 + v39;
            sub_24B56CF38(v22 + v41, v125, &qword_2697CC7F0);
            if (v41 < v39 || v22 + v41 >= (unint64_t)(v22 + v40))
            {
              uint64_t v42 = v130;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v42 = v130;
              if (v41 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_24B56CF38(v125, v42, &qword_2697CC7F0);
            a1 = v134;
            uint64_t v22 = v124;
            uint64_t v37 = v136;
          }
          ++v19;
          --v38;
          v39 -= v37;
          v40 -= v37;
          v41 += v37;
        }
        while (v19 < v30 + v38);
        uint64_t v4 = v128;
        uint64_t v2 = v123;
        uint64_t v19 = v126;
        uint64_t v12 = v133;
      }
    }
LABEL_39:
    if (v30 >= v12) {
      goto LABEL_57;
    }
    if (__OFSUB__(v30, v19)) {
      goto LABEL_139;
    }
    if (v30 - v19 >= v122) {
      goto LABEL_57;
    }
    if (__OFADD__(v19, v122)) {
      goto LABEL_142;
    }
    uint64_t v43 = v19 + v122 >= v12 ? v12 : v19 + v122;
    if (v43 < v19) {
      break;
    }
    if (v30 != v43)
    {
      int v120 = v18;
      uint64_t v123 = v2;
      uint64_t v124 = v43;
      uint64_t v44 = *(void *)(v4 + 72);
      uint64_t v136 = v44 * (v30 - 1);
      uint64_t v130 = v44;
      uint64_t v45 = v30 * v44;
      do
      {
        uint64_t v47 = 0;
        uint64_t v133 = v30;
        while (1)
        {
          uint64_t v48 = *a1;
          uint64_t v49 = v45;
          uint64_t v50 = v45 + v47 + *a1;
          os_log_type_t v51 = a1;
          char v52 = v131;
          sub_24B563A6C(v50, (uint64_t)v131, &qword_2697CC7F0);
          uint64_t v53 = v136 + v47 + v48;
          int64_t v54 = v132;
          sub_24B563A6C(v53, (uint64_t)v132, &qword_2697CC7F0);
          double v55 = *v52;
          double v56 = *v54;
          sub_24B5632A8((uint64_t)v54, &qword_2697CC7F0);
          sub_24B5632A8((uint64_t)v52, &qword_2697CC7F0);
          if (v55 >= v56) {
            break;
          }
          uint64_t v57 = *v51;
          if (!*v51) {
            goto LABEL_144;
          }
          uint64_t v45 = v49;
          uint64_t v58 = v57 + v136 + v47;
          sub_24B56CF38(v57 + v49 + v47, v135, &qword_2697CC7F0);
          swift_arrayInitWithTakeFrontToBack();
          sub_24B56CF38(v135, v58, &qword_2697CC7F0);
          v47 -= v130;
          ++v19;
          uint64_t v46 = v133;
          a1 = v134;
          if (v133 == v19) {
            goto LABEL_50;
          }
        }
        a1 = v51;
        uint64_t v46 = v133;
        uint64_t v45 = v49;
LABEL_50:
        uint64_t v30 = v46 + 1;
        v136 += v130;
        v45 += v130;
        uint64_t v19 = v126;
      }
      while (v30 != v124);
      uint64_t v30 = v124;
      uint64_t v2 = v123;
      uint64_t v18 = v120;
    }
LABEL_57:
    if (v30 < v19) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v133 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_24B588084(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v61 = *((void *)v18 + 2);
    unint64_t v60 = *((void *)v18 + 3);
    unint64_t v20 = v61 + 1;
    if (v61 >= v60 >> 1) {
      uint64_t v18 = sub_24B588084((char *)(v60 > 1), v61 + 1, 1, v18);
    }
    uint64_t v62 = v2;
    *((void *)v18 + 2) = v20;
    uint64_t v63 = v18 + 32;
    int64_t v64 = &v18[16 * v61 + 32];
    uint64_t v65 = v133;
    *(void *)int64_t v64 = v19;
    *((void *)v64 + 1) = v65;
    if (v61)
    {
      while (1)
      {
        unint64_t v66 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v71 = &v63[16 * v20];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_123;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_124;
          }
          unint64_t v78 = v20 - 2;
          uint64_t v79 = &v63[16 * v20 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_126;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_129;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v63[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_133;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_94;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v95 = *((void *)v18 + 4);
            uint64_t v96 = *((void *)v18 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_88;
          }
          uint64_t v68 = *((void *)v18 + 4);
          uint64_t v67 = *((void *)v18 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_125;
        }
        unint64_t v78 = v20 - 2;
        unint64_t v84 = &v63[16 * v20 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_128;
        }
        os_log_type_t v90 = &v63[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_131;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_132;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_94:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v89) {
          goto LABEL_127;
        }
        uint64_t v97 = &v63[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_130;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v106 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        id v107 = v18;
        uint64_t v108 = &v63[16 * v105];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v63[16 * v66];
        uint64_t v111 = *((void *)v110 + 1);
        sub_24B5F368C(v106 + *(void *)(v128 + 72) * *(void *)v108, v106 + *(void *)(v128 + 72) * *(void *)v110, v106 + *(void *)(v128 + 72) * v111, v127);
        if (v62) {
          goto LABEL_117;
        }
        if (v111 < v109) {
          goto LABEL_120;
        }
        if (v66 > *((void *)v107 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v108 = v109;
        *(void *)&v63[16 * v105 + 8] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v66 >= v112) {
          goto LABEL_122;
        }
        uint64_t v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v63[16 * v66], v110 + 16, 16 * (v112 - 1 - v66));
        *((void *)v107 + 2) = v112 - 1;
        a1 = v134;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v19 = v133;
    uint64_t v2 = v62;
    uint64_t v12 = a1[1];
    uint64_t v4 = v128;
    if (v133 >= v12) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_24B682EE0();
  __break(1u);
  return result;
}

uint64_t sub_24B5F340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t v28 = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v7 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v29 = (double *)((char *)&v25 - v10);
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (double *)((char *)&v25 - v13);
  uint64_t v31 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v34 = v15 * (v31 - 1);
    uint64_t v30 = v15;
    uint64_t v33 = v15 * v31;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v27;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_24B563A6C(v33 + v16 + *a4, (uint64_t)v14, &qword_2697CC7F0);
      uint64_t v19 = v34 + v16 + v18;
      unint64_t v20 = v29;
      sub_24B563A6C(v19, (uint64_t)v29, &qword_2697CC7F0);
      double v21 = *v14;
      double v22 = *v20;
      sub_24B5632A8((uint64_t)v20, &qword_2697CC7F0);
      uint64_t result = sub_24B5632A8((uint64_t)v14, &qword_2697CC7F0);
      if (v21 >= v22)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v26) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v34 + v16;
      sub_24B56CF38(v23 + v33 + v16, v32, &qword_2697CC7F0);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_24B56CF38(v32, v24, &qword_2697CC7F0);
      v16 -= v30;
      if (v31 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24B5F368C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v8 = MEMORY[0x270FA5388](v40);
  uint64_t v10 = (double *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (double *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_71;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v28 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v30 = -v14;
        do
        {
          unint64_t v31 = a3 + v30;
          sub_24B563A6C(v28 + v30, (uint64_t)v12, &qword_2697CC7F0);
          unint64_t v32 = a2 + v30;
          sub_24B563A6C(a2 + v30, (uint64_t)v10, &qword_2697CC7F0);
          double v33 = *v12;
          double v34 = *v10;
          sub_24B5632A8((uint64_t)v10, &qword_2697CC7F0);
          sub_24B5632A8((uint64_t)v12, &qword_2697CC7F0);
          if (v33 >= v34)
          {
            unint64_t v35 = v41;
            v41 += v30;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 += v30;
          }
          unint64_t v28 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 += v30;
        }
        while (v32 > v39);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v39 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_24B563A6C(a2, (uint64_t)v12, &qword_2697CC7F0);
        sub_24B563A6C(a4, (uint64_t)v10, &qword_2697CC7F0);
        double v21 = *v12;
        double v22 = *v10;
        sub_24B5632A8((uint64_t)v10, &qword_2697CC7F0);
        sub_24B5632A8((uint64_t)v12, &qword_2697CC7F0);
        unint64_t v23 = v43;
        if (v21 >= v22)
        {
          unint64_t v26 = v42 + v14;
          if (v43 < v42 || v43 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v26;
          unint64_t v24 = a2;
        }
        else
        {
          unint64_t v24 = a2 + v14;
          if (v43 < a2 || v43 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v23 + v14;
        a4 = v42;
        if (v42 >= v39) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_68:
    sub_24B5F3B2C(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_72:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5F3B2C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_24B682F40();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

unint64_t sub_24B5F3C70(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x24C5D6C10](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x24C5D6C10](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24B5F3CFC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_24B562F04(&qword_2697CC8C8);
  uint64_t v10 = *(void *)(sub_24B562F04(&qword_2697CC7F0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24B562F04(&qword_2697CC7F0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  double v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24B682F40();
  __break(1u);
  return result;
}

uint64_t sub_24B5F3F44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24B562F04(&qword_2697CC7F0);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v9);
  size_t v14 = (char *)&v31 - v13;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v36 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v30 = v36;
    *a1 = a4;
    a1[1] = v30;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  double v34 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v35 = (unint64_t)(63 - v16) >> 6;
  int64_t v32 = v35 - 1;
  uint64_t v21 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v27 = *(void *)(a4 + 56);
    uint64_t v28 = *(void *)(*(void *)(a4 + 48) + 8 * v23);
    uint64_t v29 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    sub_24B5F5A70(v27 + *(void *)(*(void *)(v29 - 8) + 72) * v23, (uint64_t)v11 + *(int *)(v38 + 48), type metadata accessor for ObjectCaptureSession.Metadata.Shot);
    *uint64_t v11 = v28;
    sub_24B56CF38((uint64_t)v11, (uint64_t)v14, &qword_2697CC7F0);
    uint64_t result = sub_24B56CF38((uint64_t)v14, a2, &qword_2697CC7F0);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(void *)(v37 + 72);
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v24 >= v35) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v36 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v35)
      {
        unint64_t v18 = 0;
        int64_t v19 = v24;
      }
      else
      {
        unint64_t v25 = *(void *)(v36 + 8 * v19);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v26 = v24 + 2;
        if (v24 + 2 >= v35) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v36 + 8 * v26);
        if (v25)
        {
LABEL_17:
          int64_t v24 = v26;
          goto LABEL_18;
        }
        int64_t v19 = v24 + 3;
        if (v24 + 3 < v35)
        {
          unint64_t v25 = *(void *)(v36 + 8 * v19);
          if (v25)
          {
LABEL_14:
            int64_t v24 = v19;
            goto LABEL_18;
          }
          int64_t v26 = v24 + 4;
          if (v24 + 4 >= v35)
          {
LABEL_33:
            unint64_t v18 = 0;
            goto LABEL_37;
          }
          unint64_t v25 = *(void *)(v36 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              int64_t v24 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_42;
              }
              if (v24 >= v35)
              {
                unint64_t v18 = 0;
                int64_t v19 = v32;
                goto LABEL_37;
              }
              unint64_t v25 = *(void *)(v36 + 8 * v24);
              ++v26;
              if (v25) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v18 = 0;
        int64_t v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      uint64_t v16 = v33;
      a1 = v34;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v18 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_24B5F4298(void *a1)
{
  return sub_24B5F3CFC(0, a1[2], 0, a1);
}

uint64_t sub_24B5F42AC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24B5F4334(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4 < 0) {
    goto LABEL_25;
  }
  if (!a4)
  {
    unint64_t v11 = result;
LABEL_22:
    sub_24B5F5A64(result, a2, a3 & 1);
    return v11;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a5 + 32);
  int v8 = *(_DWORD *)(a5 + 36);
  unint64_t v9 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = a5 + 88;
  unint64_t v11 = result;
  int v12 = a2;
  while ((v11 & 0x8000000000000000) == 0 && (uint64_t)v11 < v7)
  {
    if (v12 != v8) {
      goto LABEL_24;
    }
    unint64_t v13 = v11 >> 6;
    uint64_t v14 = *(void *)(v6 + 8 * (v11 >> 6));
    if ((v14 & (1 << v11)) == 0) {
      goto LABEL_24;
    }
    unint64_t v15 = v14 & (-2 << (v11 & 0x3F));
    if (v15)
    {
      unint64_t v11 = __clz(__rbit64(v15)) | v11 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v16 = v13 + 1;
      unint64_t v11 = v7;
      if (v13 + 1 < v9)
      {
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          unint64_t v16 = v13 + 2;
          unint64_t v11 = v7;
          if (v13 + 2 >= v9) {
            goto LABEL_5;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17)
          {
            while (v9 - 3 != v13)
            {
              unint64_t v17 = *(void *)(v10 + 8 * v13++);
              if (v17)
              {
                unint64_t v16 = v13 + 2;
                goto LABEL_13;
              }
            }
            unint64_t v11 = v7;
            goto LABEL_5;
          }
        }
LABEL_13:
        unint64_t v11 = __clz(__rbit64(v17)) + (v16 << 6);
      }
    }
LABEL_5:
    ++v5;
    int v12 = v8;
    if (v5 == a4) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24B5F4488(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 56);
    uint64_t v8 = type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
    return sub_24B5F5A70(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a2, v6, type metadata accessor for ObjectCaptureSession.Metadata.Shot);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_24B5F4548(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24B562F04(&qword_2697CC8E0);
    uint64_t v3 = (void *)sub_24B682F30();
    for (uint64_t i = (double *)(a1 + 40); ; i += 2)
    {
      double v5 = *(i - 1);
      double v6 = *i;
      unint64_t result = sub_24B5E3410(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(double *)(v3[6] + v9) = v5;
      *(double *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_24B5F4624(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24B5F466C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24B5F46A4(long long *a1, double *a2)
{
  return sub_24B5EB21C(a1, a2);
}

uint64_t sub_24B5F46AC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24B5F46E4(double *a1)
{
  return sub_24B5EBEAC(a1);
}

uint64_t sub_24B5F46EC(void **a1)
{
  return sub_24B5EBFF8(a1);
}

uint64_t sub_24B5F46F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  int v5 = *((_DWORD *)a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata;
    uint64_t v8 = v2;
    uint64_t v9 = *(void *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata);
    uint64_t v10 = *(void *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_sessionMetadata + 8);
    *(void *)uint64_t v7 = v8;
    *(void *)(v7 + 8) = v1;
    *(void *)(v7 + 16) = v4;
    *(void *)(v7 + 24) = v3;
    *(_DWORD *)(v7 + 32) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24B5F47DC(v9, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_24B5F47C4(uint64_t *a1)
{
  return sub_24B5EC4E4(a1);
}

uint64_t sub_24B5F47CC(double *a1)
{
  return sub_24B5ED7A4(a1);
}

uint64_t sub_24B5F47D4(uint64_t a1)
{
  return sub_24B5EDF9C(a1);
}

uint64_t sub_24B5F47DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24B5F4820()
{
  return type metadata accessor for ObjectCaptureBundleWriter();
}

uint64_t type metadata accessor for ObjectCaptureBundleWriter()
{
  uint64_t result = qword_2697CE8E0;
  if (!qword_2697CE8E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24B5F4874()
{
  uint64_t result = sub_24B6822E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ObjectCaptureBundleWriter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjectCaptureBundleWriter);
}

uint64_t dispatch thunk of ObjectCaptureBundleWriter.completionPublisher.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ObjectCaptureBundleWriter.__allocating_init(publishers:url:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t sub_24B5F49C0(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  v47[1] = a5;
  uint64_t v53 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24B6822E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B685D70;
  *(void *)(inited + 32) = 0x64496172656D6163;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v13 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = 0x49746E656D676573;
  *(void *)(inited + 88) = 0xE900000000000064;
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 120) = v13;
  *(void *)(inited + 128) = 0x6D617473656D6974;
  *(void *)(inited + 136) = 0xE900000000000070;
  uint64_t v14 = sub_24B5F8B94(a3);
  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(inited + 144) = v14;
  *(void *)(inited + 152) = v16;
  *(void *)(inited + 168) = v15;
  *(void *)(inited + 176) = 0x69736E6972746E69;
  *(void *)(inited + 184) = 0xEA00000000007363;
  long long v17 = *(_OWORD *)(a1 + 16);
  v49[0] = *(_OWORD *)a1;
  v49[1] = v17;
  void v49[2] = *(_OWORD *)(a1 + 32);
  sub_24B5F8728((uint64_t)v49);
  uint64_t v19 = v18;
  uint64_t v20 = sub_24B562F04((uint64_t *)&unk_2697CD110);
  *(void *)(inited + 192) = v19;
  *(void *)(inited + 216) = v20;
  *(void *)(inited + 224) = 0x726F66736E617274;
  *(void *)(inited + 232) = 0xE90000000000006DLL;
  sub_24B5F87F0(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(void *)(inited + 264) = v20;
  *(void *)(inited + 240) = v21;
  unint64_t v22 = sub_24B560D28(inited);
  unint64_t v23 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  int64_t v24 = (int8x16_t *)(a1 + v23[8]);
  if ((v24[4].i8[0] & 1) == 0)
  {
    sub_24B5F87F0(*v24, v24[1], v24[2], v24[3]);
    uint64_t v52 = v20;
    *(void *)&long long v51 = v25;
    sub_24B563220(&v51, v50);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v48 = v22;
    sub_24B5E4AB0(v50, 0xD000000000000014, 0x800000024B68E460, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = (int8x16_t *)(a1 + v23[9]);
  if ((v27[4].i8[0] & 1) == 0)
  {
    sub_24B5F87F0(*v27, v27[1], v27[2], v27[3]);
    uint64_t v52 = v20;
    *(void *)&long long v51 = v28;
    sub_24B563220(&v51, v50);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v48 = v22;
    sub_24B5E4AB0(v50, 0xD000000000000021, 0x800000024B68E430, v29);
    unint64_t v22 = v48;
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = (int8x16_t *)(a1 + v23[10]);
  if ((v30[4].i8[0] & 1) == 0)
  {
    sub_24B5F87F0(*v30, v30[1], v30[2], v30[3]);
    uint64_t v52 = v20;
    *(void *)&long long v51 = v31;
    sub_24B563220(&v51, v50);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v48 = v22;
    sub_24B5E4AB0(v50, 0xD00000000000001FLL, 0x800000024B68E410, v32);
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  double v34 = self;
  *(void *)&long long v51 = 0;
  id v35 = objc_msgSend(v34, sel_dataWithJSONObject_options_error_, v33, 3, &v51);
  id v36 = (id)v51;
  if (!v35)
  {
    unint64_t v43 = v36;
    uint64_t v44 = (void *)sub_24B6821B0();

    swift_willThrow();
LABEL_12:
    uint64_t v46 = 0;
    goto LABEL_13;
  }
  uint64_t v37 = sub_24B682320();
  unint64_t v39 = v38;

  CFAllocatorRef v40 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  unint64_t v41 = (__CFString *)sub_24B6827A0();
  CFURLRef v42 = CFURLCreateWithFileSystemPath(v40, v41, kCFURLPOSIXPathStyle, 0);

  if (!v42)
  {
    sub_24B586220(v37, v39);
    goto LABEL_12;
  }
  sub_24B6822B0();
  sub_24B682330();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  sub_24B586220(v37, v39);
  uint64_t v46 = 1;
LABEL_13:

  return v46;
}

unint64_t sub_24B5F4F50(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_24B682810();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v15 = a1[6];
  uint64_t v14 = a1[7];
  uint64_t v16 = a1[8];
  unint64_t v17 = 0xD00000000000007FLL;
  unint64_t v18 = 0x800000024B68E390;
  unint64_t v60 = 0xD00000000000007FLL;
  unint64_t v61 = 0x800000024B68E390;
  unint64_t result = *(void *)(v14 + 16);
  if (!result) {
    goto LABEL_13;
  }
  if (result > *(void *)(v9 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (result > *(void *)(v8 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (result > *(void *)(v11 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (result > *(void *)(v10 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result > *(void *)(v13 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (result > *(void *)(v12 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (result > *(void *)(v15 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result <= *(void *)(v16 + 16))
  {
    v45[0] = v7;
    v45[1] = a2;
    uint64_t v46 = v5;
    uint64_t v47 = v4;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v55 = v8 + 32;
    uint64_t v56 = v9 + 32;
    uint64_t v53 = v10 + 32;
    uint64_t v54 = v11 + 32;
    uint64_t v51 = v12 + 32;
    uint64_t v52 = v13 + 32;
    uint64_t v49 = v14 + 32;
    uint64_t v50 = v15 + 32;
    unint64_t v48 = result;
    do
    {
      uint64_t v57 = v21 + 1;
      LOBYTE(v58) = *(unsigned char *)(v56 + v21);
      uint64_t v58 = sub_24B682F90();
      unint64_t v59 = v22;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v23 = v58;
      unint64_t v24 = v59;
      LOBYTE(v58) = *(unsigned char *)(v55 + v21);
      sub_24B682F90();
      uint64_t v58 = v23;
      unint64_t v59 = v24;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v25 = v58;
      unint64_t v26 = v59;
      LOBYTE(v58) = *(unsigned char *)(v54 + v21);
      sub_24B682F90();
      uint64_t v58 = v25;
      unint64_t v59 = v26;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v27 = v58;
      unint64_t v28 = v59;
      sub_24B682A60();
      uint64_t v58 = v27;
      unint64_t v59 = v28;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v29 = v58;
      unint64_t v30 = v59;
      sub_24B682A60();
      uint64_t v58 = v29;
      unint64_t v59 = v30;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v31 = v58;
      unint64_t v32 = v59;
      sub_24B682A60();
      uint64_t v58 = v31;
      unint64_t v59 = v32;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v33 = v58;
      unint64_t v34 = v59;
      sub_24B682A60();
      uint64_t v58 = v33;
      unint64_t v59 = v34;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v35 = v58;
      unint64_t v36 = v59;
      sub_24B682A60();
      uint64_t v58 = v35;
      unint64_t v59 = v36;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v37 = v58;
      unint64_t v38 = v59;
      sub_24B682A60();
      uint64_t v58 = v37;
      unint64_t v59 = v38;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v39 = v58;
      unint64_t v40 = v59;
      sub_24B682A60();
      uint64_t v58 = v39;
      unint64_t v59 = v40;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v41 = v58;
      unint64_t v42 = v59;
      sub_24B682A60();
      uint64_t v58 = v41;
      unint64_t v59 = v42;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      uint64_t v43 = v58;
      unint64_t v44 = v59;
      sub_24B682A60();
      uint64_t v58 = v43;
      unint64_t v59 = v44;
      swift_bridgeObjectRetain();
      sub_24B682890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = 10;
      unint64_t v59 = 0xE100000000000000;
      sub_24B682890();
      swift_bridgeObjectRelease();
      sub_24B682890();
      swift_bridgeObjectRelease();
      v20 += 16;
      uint64_t v21 = v57;
    }
    while (v48 != v57);
    unint64_t v17 = v60;
    unint64_t v18 = v61;
    uint64_t v5 = v46;
    uint64_t v4 = v47;
    uint64_t v7 = (char *)v45[0];
LABEL_13:
    uint64_t v58 = v17;
    unint64_t v59 = v18;
    sub_24B682800();
    sub_24B57C484();
    sub_24B682D20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24B5F56D0(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  v32[1] = a4;
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_24B6822E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B685480;
  *(void *)(inited + 32) = 0x64496172656D6163;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v11 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 1;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = 0x6D617473656D6974;
  *(void *)(inited + 88) = 0xE900000000000070;
  uint64_t v12 = MEMORY[0x263F8D538];
  *(double *)(inited + 96) = a2;
  *(void *)(inited + 120) = v12;
  *(void *)(inited + 128) = 0x69736E6972746E69;
  *(void *)(inited + 136) = 0xEA00000000007363;
  long long v13 = *(_OWORD *)(a1 + 16);
  v34[0] = *(_OWORD *)a1;
  v34[1] = v13;
  v34[2] = *(_OWORD *)(a1 + 32);
  sub_24B5F8728((uint64_t)v34);
  uint64_t v15 = v14;
  uint64_t v16 = sub_24B562F04((uint64_t *)&unk_2697CD110);
  *(void *)(inited + 144) = v15;
  *(void *)(inited + 168) = v16;
  *(void *)(inited + 176) = 0x726F66736E617274;
  *(void *)(inited + 184) = 0xE90000000000006DLL;
  sub_24B5F87F0(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(void *)(inited + 216) = v16;
  *(void *)(inited + 192) = v17;
  sub_24B560D28(inited);
  unint64_t v18 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  uint64_t v19 = self;
  id v33 = 0;
  id v20 = objc_msgSend(v19, sel_dataWithJSONObject_options_error_, v18, 3, &v33);
  id v21 = v33;
  if (!v20)
  {
    unint64_t v28 = v21;
    uint64_t v29 = (void *)sub_24B6821B0();

    swift_willThrow();
LABEL_6:
    uint64_t v31 = 0;
    goto LABEL_7;
  }
  uint64_t v22 = sub_24B682320();
  unint64_t v24 = v23;

  CFAllocatorRef v25 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  unint64_t v26 = (__CFString *)sub_24B6827A0();
  CFURLRef v27 = CFURLCreateWithFileSystemPath(v25, v26, kCFURLPOSIXPathStyle, 0);

  if (!v27)
  {
    sub_24B586220(v22, v24);
    goto LABEL_6;
  }
  sub_24B6822B0();
  sub_24B682330();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  sub_24B586220(v22, v24);
  uint64_t v31 = 1;
LABEL_7:

  return v31;
}

uint64_t sub_24B5F5A58(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24B5F5A64(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24B5F5A70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24B5F5AD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
}

uint64_t sub_24B5F5B4C(uint64_t a1, double a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B6822E0();
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24B562F04(&qword_2697CCD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24B685480;
  *(void *)(inited + 32) = 0x64496172656D6163;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v8 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 48) = 1;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = 0x6D617473656D6974;
  *(void *)(inited + 88) = 0xE900000000000070;
  uint64_t v9 = sub_24B5F8B94(a2);
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 0x69736E6972746E69;
  *(void *)(inited + 136) = 0xEA00000000007363;
  long long v12 = *(_OWORD *)(a1 + 16);
  v42[0] = *(_OWORD *)a1;
  v42[1] = v12;
  void v42[2] = *(_OWORD *)(a1 + 32);
  sub_24B5F8728((uint64_t)v42);
  uint64_t v14 = v13;
  uint64_t v15 = sub_24B562F04((uint64_t *)&unk_2697CD110);
  *(void *)(inited + 144) = v14;
  *(void *)(inited + 168) = v15;
  *(void *)(inited + 176) = 0x726F66736E617274;
  *(void *)(inited + 184) = 0xE90000000000006DLL;
  sub_24B5F87F0(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 64), *(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 96));
  *(void *)(inited + 216) = v15;
  *(void *)(inited + 192) = v16;
  unint64_t v17 = sub_24B560D28(inited);
  uint64_t v18 = type metadata accessor for ObjectCaptureSession.Frame.Camera(0);
  uint64_t v19 = (int8x16_t *)(a1 + *(int *)(v18 + 28));
  if ((v19[4].i8[0] & 1) == 0)
  {
    sub_24B5F87F0(*v19, v19[1], v19[2], v19[3]);
    uint64_t v45 = v15;
    *(void *)&long long v44 = v20;
    sub_24B563220(&v44, v43);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v17;
    sub_24B5E4AB0(v43, 0xD000000000000014, 0x800000024B68E460, isUniquelyReferenced_nonNull_native);
    unint64_t v17 = v41;
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (int8x16_t *)(a1 + *(int *)(v18 + 36));
  if ((v22[4].i8[0] & 1) == 0)
  {
    sub_24B5F87F0(*v22, v22[1], v22[2], v22[3]);
    uint64_t v45 = v15;
    *(void *)&long long v44 = v23;
    sub_24B563220(&v44, v43);
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v17;
    sub_24B5E4AB0(v43, 0xD00000000000001ALL, 0x800000024B68E4C0, v24);
    swift_bridgeObjectRelease();
  }
  CFAllocatorRef v25 = (void *)sub_24B682710();
  swift_bridgeObjectRelease();
  unint64_t v26 = self;
  *(void *)&long long v44 = 0;
  id v27 = objc_msgSend(v26, sel_dataWithJSONObject_options_error_, v25, 3, &v44);
  id v28 = (id)v44;
  if (!v27)
  {
    uint64_t v35 = v28;
    unint64_t v36 = (void *)sub_24B6821B0();

    swift_willThrow();
LABEL_10:
    uint64_t v38 = 0;
    goto LABEL_11;
  }
  uint64_t v29 = sub_24B682320();
  unint64_t v31 = v30;

  CFAllocatorRef v32 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  id v33 = (__CFString *)sub_24B6827A0();
  CFURLRef v34 = CFURLCreateWithFileSystemPath(v32, v33, kCFURLPOSIXPathStyle, 0);

  if (!v34)
  {
    sub_24B586220(v29, v31);
    goto LABEL_10;
  }
  sub_24B6822B0();
  sub_24B682330();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);

  sub_24B586220(v29, v31);
  uint64_t v38 = 1;
LABEL_11:

  return v38;
}

uint64_t sub_24B5F6028()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_24B5F60A8()
{
  return sub_24B5EDE60(*(double *)(v0 + 24), *(void *)(v0 + 16), *(void *)(v0 + 32), v0 + 40);
}

uint64_t sub_24B5F60BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24B5F60CC()
{
  return swift_release();
}

uint64_t sub_24B5F60D4()
{
  uint64_t v1 = *(void *)(sub_24B562F04(&qword_2697CC460) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = sub_24B682410();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_24B5F6218()
{
  uint64_t v1 = *(void *)(sub_24B562F04(&qword_2697CC460) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *((void *)v0 + 2);
  double v4 = v0[3];
  uint64_t v5 = *((void *)v0 + 4);
  uint64_t v6 = *(void *)((char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24B5ECC2C(v4, v3, v5, (unint64_t)v0 + v2, v6);
}

id sub_24B5F62B4(id result)
{
  if (result != (id)7) {
    return sub_24B5E88F8(result);
  }
  return result;
}

uint64_t sub_24B5F62C4(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24B5F62D4()
{
  uint64_t v1 = (int *)type metadata accessor for ObjectCaptureSession.Metadata.Shot(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();

  double v4 = (char *)v0 + v3;
  uint64_t v5 = (char *)v0 + v3 + v1[5];
  uint64_t v6 = type metadata accessor for ObjectCaptureSession.Metadata.Shot.Camera(0);
  uint64_t v7 = &v5[*(int *)(v6 + 24)];
  uint64_t v8 = sub_24B682C80();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 2, v8)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = &v4[v1[6]];
  uint64_t v11 = sub_24B682410();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = *(void **)&v4[v1[7] + 128];
  if (v13 != (void *)1) {

  }
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v3 + v15, v2 | 7);
}

void sub_24B5F652C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ObjectCaptureSession.Metadata.Shot(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (double *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  sub_24B5EB850(v2, v0 + 24, v3);
}

uint64_t sub_24B5F6594(uint64_t a1, uint64_t a2)
{
  return sub_24B5E8FCC(a1, a2, v2);
}

uint64_t sub_24B5F659C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24B5F65DC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    double v4 = (void *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC6CoreOC25ObjectCaptureBundleWriter_completionPromise);
    *double v4 = v1;
    v4[1] = v2;
    swift_retain();
    sub_24B5D7FB0(v5);
    return swift_release();
  }
  return result;
}

void *sub_24B5F6688()
{
  return &unk_24B6869A0;
}

void *sub_24B5F6694()
{
  return &unk_24B6869A4;
}

void *sub_24B5F66A0()
{
  return &unk_24B6869A8;
}

uint64_t sub_24B5F66AC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = CPGProcessingLimitsForCurrentDevice();
  uint64_t MaxImageDimension = CPGProcessingLimitsGetMaxImageDimension();
  Maxuint64_t NumberOfSamples = CPGProcessingLimitsGetMaxNumberOfSamples();
  MaxTotalPixeluint64_t Count = CPGProcessingLimitsGetMaxTotalPixelCount();
  MaxBakedOutputTriangleuint64_t Count = CPGProcessingLimitsGetMaxBakedOutputTriangleCount();
  MinBakedOutputTriangleuint64_t Count = CPGProcessingLimitsGetMinBakedOutputTriangleCount();
  sub_24B601F88(MaxImageDimension, MaxNumberOfSamples, MaxTotalPixelCount, MaxBakedOutputTriangleCount, MinBakedOutputTriangleCount, a1);

  return MEMORY[0x270F1B968](v2);
}

void sub_24B5F6748()
{
  qword_2697CE8F8 = (uint64_t)&unk_26FE8E300;
}

void *sub_24B5F675C(void *a1)
{
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a1 = sub_24B5D3EB4(0, a1[2] + 1, 1, a1);
  }
  unint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    a1 = sub_24B5D3EB4((void *)(v2 > 1), v3 + 1, 1, a1);
    unint64_t v2 = a1[3];
    int64_t v4 = v2 >> 1;
  }
  a1[2] = v5;
  uint64_t v6 = &a1[2 * v3];
  v6[4] = 0x332C363164615069;
  v6[5] = 0xE800000000000000;
  int64_t v7 = v3 + 2;
  if (v4 < v7) {
    a1 = sub_24B5D3EB4((void *)(v2 > 1), v7, 1, a1);
  }
  a1[2] = v7;
  uint64_t v8 = &a1[2 * v5];
  v8[4] = 0x342C363164615069;
  v8[5] = 0xE800000000000000;
  unint64_t v10 = a1[2];
  unint64_t v9 = a1[3];
  int64_t v11 = v9 >> 1;
  unint64_t v12 = v10 + 1;
  if (v9 >> 1 <= v10)
  {
    a1 = sub_24B5D3EB4((void *)(v9 > 1), v10 + 1, 1, a1);
    unint64_t v9 = a1[3];
    int64_t v11 = v9 >> 1;
  }
  a1[2] = v12;
  uint64_t v13 = &a1[2 * v10];
  v13[4] = 0x352C363164615069;
  v13[5] = 0xE800000000000000;
  int64_t v14 = v10 + 2;
  if (v11 < v14) {
    a1 = sub_24B5D3EB4((void *)(v9 > 1), v14, 1, a1);
  }
  a1[2] = v14;
  uint64_t v15 = &a1[2 * v12];
  v15[4] = 0x362C363164615069;
  v15[5] = 0xE800000000000000;
  unint64_t v17 = a1[2];
  unint64_t v16 = a1[3];
  int64_t v18 = v16 >> 1;
  unint64_t v19 = v17 + 1;
  if (v16 >> 1 <= v17)
  {
    a1 = sub_24B5D3EB4((void *)(v16 > 1), v17 + 1, 1, a1);
    unint64_t v16 = a1[3];
    int64_t v18 = v16 >> 1;
  }
  a1[2] = v19;
  uint64_t v20 = &a1[2 * v17];
  _OWORD v20[4] = 0x3731656E6F685069;
  v20[5] = 0xEA0000000000312CLL;
  int64_t v21 = v17 + 2;
  if (v18 < v21) {
    a1 = sub_24B5D3EB4((void *)(v16 > 1), v21, 1, a1);
  }
  a1[2] = v21;
  uint64_t v22 = &a1[2 * v19];
  float64x2_t v22[4] = 0x3731656E6F685069;
  double v22[5] = 0xEA0000000000322CLL;
  return a1;
}

uint64_t sub_24B5F699C()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  int64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_24B5F6E74();
  if (v8)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    uint64_t v11 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v6, v11, v0);
    swift_bridgeObjectRetain_n();
    unint64_t v12 = sub_24B6824B0();
    os_log_type_t v13 = sub_24B682B30();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v31 = v15;
      *(_DWORD *)uint64_t v14 = 136380931;
      uint64_t v29 = v0;
      uint64_t v30 = sub_24B5627B8(0x70707553434F7369, 0xEF2928646574726FLL, &v31);
      sub_24B682CD0();
      *(_WORD *)(v14 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_24B5627B8(v9, v10, &v31);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B55E000, v12, v13, "%{private}s: Device model detected at runtime: %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v15, -1, -1);
      MEMORY[0x24C5D6C00](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v29);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
    if (qword_2697CE8F0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_24B5F675C((void *)qword_2697CE8F8);
    int v23 = sub_24B5A86F4(v9, v10, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v24 = (void *)type metadata accessor for ARWorldTrackingConfigurationForObjectCapture();
    uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    unsigned int v26 = objc_msgSend(ObjCClassFromMetadata, sel_isSupported);
    if (!v26) {
      return v23 & v26;
    }
    id v27 = objc_msgSend(v24, sel_recommendedVideoFormatForHighResolutionFrameCapturing);

    if (v27)
    {
      unsigned int v26 = objc_msgSend(ObjCClassFromMetadata, sel_supportsFrameSemantics_, 8);
      if (v26) {
        unsigned int v26 = objc_msgSend(ObjCClassFromMetadata, sel_supportsFrameSemantics_, 16);
      }
      return v23 & v26;
    }
    return 0;
  }
  else
  {
    uint64_t v16 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v16, v0);
    unint64_t v17 = sub_24B6824B0();
    os_log_type_t v18 = sub_24B682B20();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = v20;
      *(_DWORD *)unint64_t v19 = 136380675;
      uint64_t v30 = sub_24B5627B8(0x70707553434F7369, 0xEF2928646574726FLL, &v31);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v17, v18, "%{private}s: Failed to get device model at runtime.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v20, -1, -1);
      MEMORY[0x24C5D6C00](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
}

uint64_t sub_24B5F6E74()
{
  uint64_t v0 = sub_24B682810();
  MEMORY[0x270FA5388](v0 - 8);
  mach_port_t v1 = *MEMORY[0x263F0EC88];
  CFDictionaryRef v2 = IOServiceMatching("IOPlatformExpertDevice");
  io_service_t MatchingService = IOServiceGetMatchingService(v1, v2);
  int64_t v4 = (__CFString *)sub_24B6827A0();
  CFTypeRef CFProperty = IORegistryEntryCreateCFProperty(MatchingService, v4, (CFAllocatorRef)*MEMORY[0x263EFFB08], 0);

  if (!CFProperty) {
    goto LABEL_15;
  }
  CFTypeID v6 = CFGetTypeID(CFProperty);
  if (v6 == CFStringGetTypeID())
  {
    if (swift_dynamicCast()) {
      uint64_t v8 = v18;
    }
    else {
      uint64_t v8 = 0;
    }
    goto LABEL_6;
  }
  CFTypeID v9 = CFGetTypeID(CFProperty);
  if (v9 != CFDataGetTypeID() || (swift_unknownObjectRetain(), !swift_dynamicCast()))
  {
    swift_unknownObjectRelease();
LABEL_15:
    IOObjectRelease(MatchingService);
    return 0;
  }
  sub_24B682800();
  uint64_t v8 = sub_24B6827E0();
  unint64_t v11 = v10;
  if (!v10) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24B5F74B8(v8, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_19;
  }
  if (v12 || v14 != 0xE100000000000000)
  {
    char v17 = sub_24B682FA0();
    uint64_t v15 = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_18;
    }
LABEL_19:
    swift_unknownObjectRelease();
    sub_24B586220(v18, v19);
    goto LABEL_6;
  }
  uint64_t v15 = swift_bridgeObjectRelease();
LABEL_18:
  sub_24B5F7538(v15);
  swift_unknownObjectRelease();
  sub_24B586220(v18, v19);
  swift_bridgeObjectRelease();
LABEL_6:
  IOObjectRelease(MatchingService);
  return v8;
}

uint64_t sub_24B5F7104()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_currentDevice);
  id v5 = objc_msgSend(v4, sel_model);

  uint64_t v6 = sub_24B6827D0();
  unint64_t v8 = v7;

  uint64_t v9 = sub_24B57CB70();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
  swift_bridgeObjectRetain_n();
  unint64_t v10 = sub_24B6824B0();
  os_log_type_t v11 = sub_24B682B30();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v6;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    v22[0] = v14;
    *(_DWORD *)uint64_t v13 = 136380931;
    uint64_t v20 = sub_24B5627B8(0xD000000000000013, 0x800000024B68E520, v22);
    sub_24B682CD0();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_24B5627B8(v19, v8, v22);
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v10, v11, "%{private}s: Device type detected at runtime: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v14, -1, -1);
    uint64_t v15 = v13;
    uint64_t v6 = v19;
    MEMORY[0x24C5D6C00](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v22[0] = v6;
  v22[1] = v8;
  uint64_t v20 = 0x656E6F685069;
  unint64_t v21 = 0xE600000000000000;
  sub_24B57C484();
  char v16 = sub_24B682D40();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_24B5F7400()
{
  uint64_t result = sub_24B5F7104();
  byte_2697D0C80 = result & 1;
  return result;
}

char *sub_24B5F7424()
{
  if (qword_2697CE900 != -1) {
    swift_once();
  }
  return &byte_2697D0C80;
}

uint64_t sub_24B5F7470@<X0>(void *a1@<X8>)
{
  uint64_t v2 = CPGProcessingLimitsForCurrentDevice();
  Maxuint64_t NumberOfSamples = CPGProcessingLimitsGetMaxNumberOfSamples();
  sub_24B600A5C(MaxNumberOfSamples, a1);

  return MEMORY[0x270F1B968](v2);
}

uint64_t sub_24B5F74B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_24B682870();
  return sub_24B682930();
}

uint64_t sub_24B5F7538(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x270F9D7B8](a1);
  }
LABEL_5:
  a1 = sub_24B682870();

  return MEMORY[0x270F9D7B8](a1);
}

uint64_t sub_24B5F75A0()
{
  uint64_t v0 = sub_24B6824D0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  id v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  unint64_t v7 = (char *)&v60 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v60 - v8;
  uint64_t v10 = sub_24B5F6E74();
  if (!v11)
  {
    uint64_t v21 = sub_24B57CB70();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v21, v0);
    uint64_t v22 = sub_24B6824B0();
    os_log_type_t v23 = sub_24B682B20();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = v1;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v69 = v26;
      *(_DWORD *)char v24 = 136380675;
      uint64_t v67 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B68E540, &v69);
      sub_24B682CD0();
      _os_log_impl(&dword_24B55E000, v22, v23, "%{private}s: Failed to get device model at runtime!", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v26, -1, -1);
      MEMORY[0x24C5D6C00](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v0);
      return 0;
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  uint64_t v63 = v7;
  uint64_t v14 = sub_24B57CB70();
  unint64_t v61 = *(void (**)(char *))(v1 + 16);
  uint64_t v62 = v14;
  v61(v9);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_24B6824B0();
  os_log_type_t v16 = sub_24B682B30();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v64 = v12;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v69 = v19;
    *(_DWORD *)uint64_t v18 = 136380931;
    uint64_t v60 = v0;
    uint64_t v67 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B68E540, &v69);
    sub_24B682CD0();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_24B5627B8(v64, v13, &v69);
    uint64_t v0 = v60;
    sub_24B682CD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24B55E000, v15, v16, "%{private}s: Device model detected at runtime: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5D6C00](v19, -1, -1);
    uint64_t v20 = v18;
    uint64_t v12 = v64;
    MEMORY[0x24C5D6C00](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v28 = *(void (**)(char *, uint64_t))(v1 + 8);
  v28(v9, v0);
  uint64_t v69 = v12;
  uint64_t v70 = v13;
  uint64_t v67 = 44;
  unint64_t v68 = 0xE100000000000000;
  sub_24B57C484();
  uint64_t v29 = (void *)sub_24B682CF0();
  if (!v29[2])
  {
    uint64_t v64 = v12;
    swift_bridgeObjectRelease();
    unint64_t v41 = v63;
    ((void (*)(char *, uint64_t, uint64_t))v61)(v63, v62, v0);
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_24B6824B0();
    os_log_type_t v43 = sub_24B682B20();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v69 = v45;
      *(_DWORD *)uint64_t v44 = 136380931;
      uint64_t v67 = sub_24B5627B8(0xD00000000000001DLL, 0x800000024B68E540, &v69);
      sub_24B682CD0();
      *(_WORD *)(v44 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_24B5627B8(v64, v13, &v69);
      sub_24B682CD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24B55E000, v42, v43, "%{private}s: Failed to parse device model: %{public}s!", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5D6C00](v45, -1, -1);
      MEMORY[0x24C5D6C00](v44, -1, -1);

      uint64_t v46 = v63;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v46 = v41;
    }
    v28(v46, v0);
    return 0;
  }
  swift_bridgeObjectRelease();
  if (!v29[2])
  {
    __break(1u);
LABEL_70:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v30 = v29[4];
  uint64_t v31 = v29[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((sub_24B5F7F3C() & 1) == 0) {
    goto LABEL_70;
  }
  uint64_t v69 = v30;
  uint64_t v70 = v31;
  uint64_t v67 = 0x656E6F685069;
  unint64_t v68 = 0xE600000000000000;
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  uint64_t v32 = sub_24B682D10();
  unint64_t v34 = v33;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v35 = HIBYTE(v34) & 0xF;
  uint64_t v36 = v32 & 0xFFFFFFFFFFFFLL;
  if (!((v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v32 & 0xFFFFFFFFFFFFLL)) {
    goto LABEL_70;
  }
  if ((v34 & 0x1000000000000000) == 0)
  {
    if ((v34 & 0x2000000000000000) == 0)
    {
      if ((v32 & 0x1000000000000000) != 0) {
        uint64_t v38 = (unsigned __int8 *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v38 = (unsigned __int8 *)sub_24B682E80();
      }
      uint64_t v39 = (uint64_t)sub_24B563304(v38, v36, 10);
      LOBYTE(v32) = v40 & 1;
      goto LABEL_60;
    }
    uint64_t v69 = v32;
    uint64_t v70 = v34 & 0xFFFFFFFFFFFFFFLL;
    if (v32 == 43)
    {
      if (!v35) {
        goto LABEL_74;
      }
      if (v35 == 1 || (BYTE1(v32) - 48) > 9u) {
        goto LABEL_47;
      }
      uint64_t v39 = (BYTE1(v32) - 48);
      if (v35 != 2)
      {
        if ((BYTE2(v32) - 48) > 9u) {
          goto LABEL_47;
        }
        uint64_t v39 = 10 * (BYTE1(v32) - 48) + (BYTE2(v32) - 48);
        uint64_t v47 = v35 - 3;
        if (v47)
        {
          unint64_t v48 = (unsigned __int8 *)&v69 + 3;
          while (1)
          {
            unsigned int v49 = *v48 - 48;
            if (v49 > 9) {
              goto LABEL_47;
            }
            uint64_t v50 = 10 * v39;
            if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63) {
              goto LABEL_47;
            }
            uint64_t v39 = v50 + v49;
            if (__OFADD__(v50, v49)) {
              goto LABEL_47;
            }
            LOBYTE(v32) = 0;
            ++v48;
            if (!--v47) {
              goto LABEL_60;
            }
          }
        }
      }
    }
    else
    {
      if (v32 == 45)
      {
        if (v35)
        {
          if (v35 != 1 && (BYTE1(v32) - 48) <= 9u)
          {
            if (v35 == 2)
            {
              LOBYTE(v32) = 0;
              uint64_t v39 = -(uint64_t)(BYTE1(v32) - 48);
              goto LABEL_60;
            }
            if ((BYTE2(v32) - 48) <= 9u)
            {
              uint64_t v39 = -10 * (BYTE1(v32) - 48) - (BYTE2(v32) - 48);
              uint64_t v55 = v35 - 3;
              if (!v55) {
                goto LABEL_59;
              }
              uint64_t v56 = (unsigned __int8 *)&v69 + 3;
              while (1)
              {
                unsigned int v57 = *v56 - 48;
                if (v57 > 9) {
                  break;
                }
                uint64_t v58 = 10 * v39;
                if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63) {
                  break;
                }
                uint64_t v39 = v58 - v57;
                if (__OFSUB__(v58, v57)) {
                  break;
                }
                LOBYTE(v32) = 0;
                ++v56;
                if (!--v55) {
                  goto LABEL_60;
                }
              }
            }
          }
LABEL_47:
          uint64_t v39 = 0;
          LOBYTE(v32) = 1;
          goto LABEL_60;
        }
        __break(1u);
LABEL_74:
        __break(1u);
        return result;
      }
      if (!v35 || (v32 - 48) > 9u) {
        goto LABEL_47;
      }
      uint64_t v39 = (v32 - 48);
      if (v35 != 1)
      {
        if ((BYTE1(v32) - 48) > 9u) {
          goto LABEL_47;
        }
        uint64_t v39 = 10 * (v32 - 48) + (BYTE1(v32) - 48);
        uint64_t v51 = v35 - 2;
        if (v51)
        {
          uint64_t v52 = (unsigned __int8 *)&v69 + 2;
          while (1)
          {
            unsigned int v53 = *v52 - 48;
            if (v53 > 9) {
              goto LABEL_47;
            }
            uint64_t v54 = 10 * v39;
            if ((unsigned __int128)(v39 * (__int128)10) >> 64 != (10 * v39) >> 63) {
              goto LABEL_47;
            }
            uint64_t v39 = v54 + v53;
            if (__OFADD__(v54, v53)) {
              goto LABEL_47;
            }
            LOBYTE(v32) = 0;
            ++v52;
            if (!--v51) {
              goto LABEL_60;
            }
          }
        }
      }
    }
LABEL_59:
    LOBYTE(v32) = 0;
    goto LABEL_60;
  }
  uint64_t v39 = (uint64_t)sub_24B563088(v32, v34, 10);
  LOBYTE(v32) = v59;
LABEL_60:
  swift_bridgeObjectRelease();
  if (v32) {
    return 0;
  }
  else {
    return v39;
  }
}