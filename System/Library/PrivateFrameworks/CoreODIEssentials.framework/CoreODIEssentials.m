uint64_t DIPSecNonceForBAAAttestation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270EFDAC0](a1, *MEMORY[0x263F173F0], a2, a3);
}

uint64_t DIPSecPolicyCreateApplePinned()
{
  return MEMORY[0x270EFDB38]();
}

uint64_t DIPSecPolicyCreateApplePayModelSigning(uint64_t a1)
{
  return MEMORY[0x270EFDB30](a1 != 0);
}

uint64_t DIPSecCopyEncryptedToServer()
{
  return MEMORY[0x270EFD8E8]();
}

uint64_t DIPCCCryptorGCMOneshotEncrypt()
{
  return CCCryptorGCMOneshotEncrypt();
}

uint64_t DIPCCCryptorGCMOneshotDecrypt()
{
  return MEMORY[0x270ED7910]();
}

uint64_t DIPSecKeyCopyAttestationKey()
{
  return MEMORY[0x270EFD9E8]();
}

uint64_t DIPSecKeyCreateAttestation()
{
  return MEMORY[0x270EFD9F0]();
}

uint64_t DIPSecKeyCreateEncryptedDataWithParameters()
{
  return MEMORY[0x270EFDA18]();
}

uint64_t DIPSecCertificateCopySubjectPublicKeyInfoSHA256Digest()
{
  return MEMORY[0x270EFD7B0]();
}

id DigestSha256(void *a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  id v1 = a1;
  v2 = (const void *)[v1 bytes];
  CC_LONG v3 = [v1 length];

  v4 = CC_SHA256(v2, v3, md);
  if (v4)
  {
    v4 = [MEMORY[0x263EFF8F8] dataWithBytes:md length:32];
  }
  return v4;
}

id getUIKPath()
{
  [@"systemgroup.com.apple.mobileactivationd" UTF8String];
  uint64_t v0 = container_system_group_path_for_identifier();
  if (v0)
  {
    id v1 = (void *)v0;
    v2 = [NSString stringWithUTF8String:v0];
    CC_LONG v3 = [v2 stringByAppendingPathComponent:@"Library/uik/uik.pem"];

    free(v1);
  }
  else
  {
    CC_LONG v3 = 0;
  }
  return v3;
}

uint64_t hasSEService()
{
  LODWORD(result) = MGGetBoolAnswer();
  if (MEMORY[0x263F66060]) {
    return result;
  }
  else {
    return 0;
  }
}

id getSEABASSOIDS()
{
  v5[7] = *MEMORY[0x263EF8340];
  uint64_t v0 = *MEMORY[0x263F66058];
  v5[0] = *MEMORY[0x263F66060];
  v5[1] = v0;
  uint64_t v1 = *MEMORY[0x263F66038];
  v5[2] = *MEMORY[0x263F66040];
  v5[3] = v1;
  uint64_t v2 = *MEMORY[0x263F66050];
  v5[4] = *MEMORY[0x263F66048];
  v5[5] = v2;
  v5[6] = *MEMORY[0x263F66068];
  CC_LONG v3 = [MEMORY[0x263EFF8C0] arrayWithObjects:v5 count:7];
  return v3;
}

id ECDSASHA256DERToRaw(void *a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = [v1 bytes];
  unint64_t v6 = v2 + [v1 length];
  memset(v7, 0, sizeof(v7));
  unint64_t v3 = ccder_decode_sequence_tl();
  if (!v3) {
    goto LABEL_6;
  }
  if (v3 < v6)
  {
    ccder_decode_tag();
    v4 = (void *)ccder_decode_len();
    if (!v4) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v3 != v6)
  {
LABEL_6:
    v4 = 0;
    goto LABEL_7;
  }
  v4 = (void *)[objc_alloc(MEMORY[0x263EFF8F8]) initWithBytes:v7 length:64];
LABEL_7:

  return v4;
}

unint64_t swapBytes(unint64_t result, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)(result + a2 - 1);
  if ((unint64_t)v2 > result)
  {
    unint64_t v3 = result + 1;
    do
    {
      char v4 = *(unsigned char *)(v3 - 1);
      *(unsigned char *)(v3 - 1) = *v2;
      *v2-- = v4;
    }
    while (v3++ < (unint64_t)v2);
  }
  return result;
}

id ECDSASHA256RawToDER(void *a1)
{
  id v1 = a1;
  if ([v1 length] != 64) {
    goto LABEL_9;
  }
  uint64_t v2 = [v1 bytes];
  unint64_t v3 = (unsigned char *)(v2 + 31);
  unint64_t v4 = v2 + 1;
  do
  {
    char v5 = *(unsigned char *)(v4 - 1);
    *(unsigned char *)(v4 - 1) = *v3;
    *v3-- = v5;
    BOOL v6 = v4++ >= (unint64_t)v3;
  }
  while (!v6);
  uint64_t v7 = (unsigned char *)(v2 + 63);
  unint64_t v8 = v2 + 33;
  do
  {
    char v9 = *(unsigned char *)(v8 - 1);
    *(unsigned char *)(v8 - 1) = *v7;
    *v7-- = v9;
    BOOL v6 = v8++ >= (unint64_t)v7;
  }
  while (!v6);
  ccder_sizeof_integer();
  ccder_sizeof_integer();
  unint64_t v10 = ccder_sizeof();
  if (v10 >= 0x40)
  {
    v12 = (void *)[objc_alloc(MEMORY[0x263EFF990]) initWithLength:v10];
    v13 = v12;
    if (v12)
    {
      id v14 = v12;
      [v14 mutableBytes];
      ccder_encode_integer();
      ccder_encode_integer();
      ccder_encode_constructed_tl();
      v11 = [MEMORY[0x263EFF8F8] dataWithData:v14];
    }
    else
    {
      v11 = 0;
    }
  }
  else
  {
LABEL_9:
    v11 = 0;
  }

  return v11;
}

unsigned char *HexToBytes(void *a1)
{
  id v1 = a1;
  char v9 = 0;
  if (([v1 length] & 1) == 0)
  {
    uint64_t v2 = malloc_type_malloc((unint64_t)[v1 length] >> 1, 0xF07C7779uLL);
    if (!v2) {
      goto LABEL_10;
    }
    if (![v1 length])
    {
LABEL_7:
      objc_msgSend(MEMORY[0x263EFF8F8], "dataWithBytesNoCopy:length:freeWhenDone:", v2, (unint64_t)objc_msgSend(v1, "length") >> 1, 1);
      uint64_t v2 = (unsigned char *)objc_claimAutoreleasedReturnValue();
      goto LABEL_10;
    }
    unint64_t v3 = 0;
    unint64_t v4 = v2;
    while (1)
    {
      __str[0] = [v1 characterAtIndex:v3];
      unint64_t v5 = v3 + 1;
      __str[1] = [v1 characterAtIndex:v5];
      uint64_t v7 = 0;
      unsigned char *v4 = strtol(__str, &v7, 16);
      if (v7 != &v9) {
        break;
      }
      ++v4;
      unint64_t v3 = v5 + 1;
      if (v3 >= [v1 length]) {
        goto LABEL_7;
      }
    }
    free(v2);
  }
  uint64_t v2 = 0;
LABEL_10:

  return v2;
}

BOOL initBYSetupAssistantNeedsToRun()
{
  if (LoadSetupAssistant_loadPredicate[0] != -1) {
    dispatch_once(LoadSetupAssistant_loadPredicate, &__block_literal_global_0);
  }
  softLinkBYSetupAssistantNeedsToRun = (uint64_t (*)())dlsym((void *)LoadSetupAssistant_frameworkLibrary, "BYSetupAssistantNeedsToRun");
  return softLinkBYSetupAssistantNeedsToRun != 0;
}

void *__LoadSetupAssistant_block_invoke()
{
  uint64_t result = dlopen("/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant", 2);
  LoadSetupAssistant_frameworkLibrary = (uint64_t)result;
  return result;
}

BOOL sub_214B50F5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_214B50F70()
{
  return sub_214D1AD48();
}

uint64_t sub_214B50FB8()
{
  return sub_214D1AD18();
}

uint64_t sub_214B50FE4()
{
  return sub_214D1AD48();
}

uint64_t sub_214B51028()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D697473;
      break;
    case 2:
      uint64_t result = 0x656D697464;
      break;
    case 3:
      uint64_t result = 1684955506;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214B510AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214B58298(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214B510D4()
{
  return 0;
}

void sub_214B510E0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_214B510EC(uint64_t a1)
{
  unint64_t v2 = sub_214B513E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214B51128(uint64_t a1)
{
  unint64_t v2 = sub_214B513E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ODIClientGUIDSeeds.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  BOOL v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  uint64_t v8 = v1[4];
  v12[3] = v1[5];
  v12[4] = v8;
  uint64_t v9 = v1[6];
  v12[1] = v1[7];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B513E0();
  sub_214D1AD88();
  char v16 = 0;
  uint64_t v10 = v12[7];
  sub_214D1AAF8();
  if (!v10)
  {
    char v15 = 1;
    sub_214D1AAF8();
    char v14 = 2;
    sub_214D1AAF8();
    char v13 = 3;
    sub_214D1AAF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_214B513E0()
{
  unint64_t result = qword_26ACE3740;
  if (!qword_26ACE3740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3740);
  }
  return result;
}

uint64_t ODIClientGUIDSeeds.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CA58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B513E0();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_214D1AA28();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_214D1AA28();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_214D1AA28();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_214D1AA28();
  uint64_t v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  uint64_t v21 = v24;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v21;
  a2[6] = v22;
  a2[7] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_214B517C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ODIClientGUIDSeeds.init(from:)(a1, a2);
}

uint64_t sub_214B517DC(void *a1)
{
  return ODIClientGUIDSeeds.encode(to:)(a1);
}

uint64_t sub_214B517F4(char *a1, char *a2)
{
  return sub_214C1CF3C(*a1, *a2);
}

uint64_t sub_214B51800()
{
  return sub_214D1AD48();
}

uint64_t sub_214B51854()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214B5188C()
{
  return sub_214D1AD48();
}

uint64_t sub_214B518DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B58428();
  *a1 = result;
  return result;
}

void sub_214B5190C(void *a1@<X8>)
{
  *a1 = *v1 + 49;
  a1[1] = 0xE100000000000000;
}

uint64_t ODIClientGUID.asString.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIClientGUID.seeds.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(unsigned __int8 *)v1;
  uint64_t v4 = v1[9];
  uint64_t v3 = v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  *a1 = v2 + 49;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ODIClientGUID.description.getter()
{
  return 0;
}

uint64_t sub_214B51CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v71 = a8;
  uint64_t v72 = a5;
  uint64_t v73 = a7;
  uint64_t v68 = a4;
  uint64_t v69 = a6;
  uint64_t v61 = a2;
  uint64_t v67 = a9;
  uint64_t v70 = a15;
  uint64_t v18 = sub_214D1A0A8();
  uint64_t v63 = *(void *)(v18 - 8);
  uint64_t v64 = v18;
  MEMORY[0x270FA5388](v18, v19);
  v62 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4460);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_214D1C1D0;
  uint64_t v55 = a16;
  *(void *)(v21 + 32) = a16 + 49;
  *(void *)(v21 + 40) = 0xE100000000000000;
  uint64_t v56 = a10;
  uint64_t v57 = a1;
  *(void *)(v21 + 48) = a1;
  uint64_t v22 = v61;
  *(void *)(v21 + 56) = v61;
  *(void *)(v21 + 64) = a3;
  uint64_t v58 = a12;
  uint64_t v59 = a3;
  uint64_t v23 = v69;
  uint64_t v24 = v72;
  *(void *)(v21 + 72) = v68;
  *(void *)(v21 + 80) = v24;
  uint64_t v25 = v73;
  *(void *)(v21 + 88) = v23;
  *(void *)(v21 + 96) = v25;
  *(void *)(v21 + 104) = v71;
  *(void *)(v21 + 112) = a10;
  uint64_t v26 = v70;
  *(void *)(v21 + 120) = a11;
  *(void *)(v21 + 128) = a12;
  *(void *)(v21 + 136) = a13;
  *(void *)(v21 + 144) = a14;
  uint64_t v60 = a14;
  *(void *)(v21 + 152) = v26;
  v83[0] = v21;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v65 = a11;
  swift_bridgeObjectRetain_n();
  uint64_t v66 = a13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  sub_214B5A118((unint64_t *)&qword_26ACE3990, &qword_26ACE42E0);
  sub_214D1A008();
  swift_bridgeObjectRelease();
  uint64_t v27 = v62;
  sub_214D1A088();
  uint64_t v28 = sub_214D1A048();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v64);
  if (v30 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v31 = (void *)sub_214D19B38();
    id v32 = DigestSha256(v31);

    if (v32)
    {
      uint64_t v33 = sub_214D19B68();
      unint64_t v35 = v34;

      uint64_t v36 = sub_214D19B28();
      unint64_t v38 = v37;
      uint64_t v39 = sub_214D19B48();
      uint64_t v41 = v40;
      sub_214B59EAC(v28, v30);
      sub_214B58A4C(v36, v38);
      sub_214B58A4C(v33, v35);
      LOBYTE(v74) = v55;
      *((void *)&v74 + 1) = v57;
      *(void *)&long long v75 = v22;
      uint64_t v42 = v22;
      uint64_t v43 = v68;
      uint64_t v44 = v69;
      *((void *)&v75 + 1) = v59;
      *(void *)&long long v76 = v68;
      uint64_t v45 = v71;
      *((void *)&v76 + 1) = v72;
      *(void *)&long long v77 = v69;
      *((void *)&v77 + 1) = v73;
      *(void *)&long long v78 = v71;
      uint64_t v47 = v65;
      uint64_t v46 = v66;
      *((void *)&v78 + 1) = v56;
      *(void *)&long long v79 = v65;
      *((void *)&v79 + 1) = v58;
      *(void *)&long long v80 = v66;
      uint64_t v48 = v70;
      *((void *)&v80 + 1) = v60;
      *(void *)&long long v81 = v70;
      *((void *)&v81 + 1) = v39;
      uint64_t v82 = v41;
      sub_214B59FE8((uint64_t)&v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v49 = v81;
      uint64_t v50 = v67;
      *(_OWORD *)(v67 + 96) = v80;
      *(_OWORD *)(v50 + 112) = v49;
      *(void *)(v50 + 128) = v82;
      long long v51 = v77;
      *(_OWORD *)(v50 + 32) = v76;
      *(_OWORD *)(v50 + 48) = v51;
      long long v52 = v79;
      *(_OWORD *)(v50 + 64) = v78;
      *(_OWORD *)(v50 + 80) = v52;
      long long v53 = v75;
      *(_OWORD *)uint64_t v50 = v74;
      *(_OWORD *)(v50 + 16) = v53;
      nullsub_1(v50);
      LOBYTE(v83[0]) = v55;
      v83[1] = v57;
      v83[2] = v42;
      v83[3] = v59;
      v83[4] = v43;
      v83[5] = v72;
      v83[6] = v44;
      v83[7] = v73;
      v83[8] = v45;
      v83[9] = v56;
      v83[10] = v47;
      v83[11] = v58;
      v83[12] = v46;
      v83[13] = v60;
      v83[14] = v48;
      v83[15] = v39;
      v83[16] = v41;
      return sub_214B5A080((uint64_t)v83);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v28, v30);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B59FCC((uint64_t)v83);
  return sub_214B58AA4((uint64_t)v83, v67);
}

uint64_t DIPClientGUIDFactory.init(primaryDSIDBehavior:stsFetcher:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = a4;
  *(void *)(v4 + 80) = a1;
  *(unsigned char *)(v4 + 43) = *a2;
  return MEMORY[0x270FA2498](sub_214B52238, 0, 0);
}

uint64_t sub_214B52238()
{
  uint64_t v5 = v0;
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  char v1 = *(unsigned char *)(v0 + 43);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(v4[0]) = 10;
  CoreODILogger.info(_:category:)(0, 0xE000000000000000, v4);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 42) = v1;
  swift_retain_n();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_214B5240C;
  *(void *)(v2 + 136) = v0 + 41;
  *(unsigned char *)(v2 + 258) = *(unsigned char *)(v0 + 42);
  return MEMORY[0x270FA2498](sub_214B5353C, 0, 0);
}

uint64_t sub_214B5240C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_release();
    uint64_t v5 = sub_214B534A4;
  }
  else
  {
    uint64_t v5 = sub_214B5252C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_214B5252C()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 41);
  *(unsigned char *)(v0 + 44) = v1;
  char v9 = 13;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000023;
  unint64_t v11 = 0x8000000214D2E590;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  unint64_t v2 = 0xD000000000000023;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 0x64756F6C4369;
  switch(v1)
  {
    case 1:
      uint64_t v4 = 0x73656E755469;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1684628325;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v4 = 1869903201;
      break;
    default:
      break;
  }
  unint64_t v5 = v11;
  unint64_t v6 = v3;
  CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v9, *(Swift::String *)&v2, *(Swift::String_optional *)&v4, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26ACE4030;
  *(void *)(v0 + 136) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214B5271C, v7, 0);
}

uint64_t sub_214B5271C()
{
  if (*(unsigned char *)(*(void *)(v0 + 136) + 168))
  {
    return MEMORY[0x270FA2498](sub_214B528EC, 0, 0);
  }
  else
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_214B527F0;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214B527F0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B528EC, 0, 0);
}

uint64_t sub_214B528EC()
{
  uint64_t v5 = v0;
  if (*(unsigned char *)(v0 + 44) == 2)
  {
    char v4 = 10;
    CoreODILogger.info(_:category:)(0xD00000000000002DLL, 0x8000000214D2E690, &v4);
    *(void *)(v0 + 168) = 0;
    *(void *)(v0 + 176) = 0xE000000000000000;
    uint64_t v1 = *(void *)(v0 + 136);
    return MEMORY[0x270FA2498](sub_214B52B44, v1, 0);
  }
  else
  {
    unint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    void *v2 = v0;
    v2[1] = sub_214B52A00;
    return sub_214BE6838();
  }
}

uint64_t sub_214B52A00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 160) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = sub_214B53420;
    uint64_t v8 = 0;
  }
  else
  {
    v6[21] = a1;
    v6[22] = a2;
    uint64_t v8 = v6[17];
    uint64_t v7 = sub_214B52B44;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_214B52B44()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = sub_214B59F3C((unint64_t *)&qword_26ACE44B0, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  v0[23] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  v3[2] = v1;
  v3[3] = 0x444970696843;
  v3[4] = 0xE600000000000000;
  char v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39C8);
  v0[26] = v5;
  void *v4 = v0;
  v4[1] = sub_214B52CB0;
  return MEMORY[0x270FA2318](v0 + 4, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214B5877C, v3, v5);
}

uint64_t sub_214B52CB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 216) = *(void *)(v1 + 32);
  *(unsigned char *)(v1 + 45) = *(unsigned char *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_214B52DF0, 0, 0);
}

uint64_t sub_214B52DF0()
{
  uint64_t v6 = v0;
  if (*(unsigned char *)(v0 + 45) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v5[0] = 69;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000015, 0x8000000214D2E5C0, 0, v5, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000025, 0x8000000214D2E640, 172);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 136);
    *(void *)(v0 + 64) = *(void *)(v0 + 216);
    *(void *)(v0 + 16) = sub_214D1AB78();
    *(void *)(v0 + 24) = v4;
    *(void *)(v0 + 224) = v4;
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_214B52FA4, v3, 0);
  }
}

uint64_t sub_214B52FA4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[17];
  uint64_t v3 = swift_task_alloc();
  v0[29] = v3;
  *(void *)(v3 + 16) = v2;
  strcpy((char *)(v3 + 24), "UniqueChipID");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  void *v4 = v0;
  v4[1] = sub_214B530C8;
  uint64_t v5 = v0[26];
  return MEMORY[0x270FA2318](v0 + 6, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214B5A470, v3, v5);
}

uint64_t sub_214B530C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 248) = *(void *)(v1 + 48);
  *(unsigned char *)(v1 + 46) = *(unsigned char *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_214B53208, 0, 0);
}

uint64_t sub_214B53208()
{
  uint64_t v16 = v0;
  if (*(unsigned char *)(v0 + 46) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v15[0] = 70;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x8000000214D2E670, 0, v15, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000025, 0x8000000214D2E640, 177);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 224);
    uint64_t v13 = *(void *)(v0 + 16);
    long long v12 = *(_OWORD *)(v0 + 168);
    char v14 = *(unsigned char *)(v0 + 44);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 80);
    *(void *)(v0 + 72) = *(void *)(v0 + 248);
    uint64_t v8 = sub_214D1AB78();
    uint64_t v10 = v9;
    swift_release();
    swift_release();
    *(void *)uint64_t v7 = v6;
    *(void *)(v7 + 8) = v5;
    *(void *)(v7 + 16) = v4;
    *(void *)(v7 + 24) = v3;
    *(_OWORD *)(v7 + 32) = v12;
    *(void *)(v7 + 48) = v13;
    *(void *)(v7 + 56) = v2;
    *(void *)(v7 + 64) = v8;
    *(void *)(v7 + 72) = v10;
    *(unsigned char *)(v7 + 80) = v14;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B53420()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B534A4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B53514(uint64_t a1, unsigned char *a2)
{
  *(void *)(v2 + 136) = a1;
  *(unsigned char *)(v2 + 258) = *a2;
  return MEMORY[0x270FA2498](sub_214B5353C, 0, 0);
}

uint64_t sub_214B5353C()
{
  uint64_t v8 = v0;
  switch(*(unsigned char *)(v0 + 258))
  {
    case 1:
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_214B53C5C;
      uint64_t v2 = sub_214B56D8C;
      break;
    case 2:
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_214B541A0;
      uint64_t v2 = sub_214B56340;
      break;
    case 3:
      char v7 = 10;
      CoreODILogger.info(_:category:)(0xD000000000000015, 0x8000000214D2E7F0, &v7);
      *(unsigned char *)(v0 + 256) = 0;
      uint64_t v4 = swift_task_alloc();
      *(void *)(v0 + 224) = v4;
      *(void *)uint64_t v4 = v0;
      *(void *)(v4 + 8) = sub_214B54460;
      *(void *)(v4 + 136) = *(void *)(v0 + 136);
      *(unsigned char *)(v4 + 258) = *(unsigned char *)(v0 + 256);
      uint64_t v2 = sub_214B5353C;
      break;
    default:
      uint64_t v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v1;
      *uint64_t v1 = v0;
      v1[1] = sub_214B53750;
      uint64_t v2 = sub_214B569D8;
      break;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214B53750(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v3[19] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B53858, 0, 0);
}

uint64_t sub_214B53858()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[19];
  if (v1)
  {
    uint64_t v2 = v0[3];
    uint64_t v3 = (unsigned char *)v0[17];
    char v7 = 10;
    CoreODILogger.info(_:category:)(0xD000000000000011, 0x8000000214D2E960, &v7);
    *uint64_t v3 = 0;
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v2, v1);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[20] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_214B5399C;
    return MEMORY[0x270FA2498](sub_214B56D8C, 0, 0);
  }
}

uint64_t sub_214B5399C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = a2;
  v3[21] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B53AA4, 0, 0);
}

uint64_t sub_214B53AA4()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[21];
  if (v1)
  {
    uint64_t v2 = v0[6];
    uint64_t v3 = (unsigned char *)v0[17];
    uint64_t v7 = 45;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001DLL, 0x8000000214D2E940, v9);
    *uint64_t v3 = 1;
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v2, v1);
  }
  else
  {
    uint64_t v7 = 4;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.warning(_:category:)(0xD00000000000002CLL, 0x8000000214D2E8A0, v9);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D2E910, 0, (unsigned __int8 *)&v7, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0x2844495344746567, 0xEB00000000293A5FLL, 281);
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_214B53C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = a2;
  v3[23] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B53D64, 0, 0);
}

uint64_t sub_214B53D64()
{
  unint64_t v8 = v0;
  uint64_t v1 = v0[23];
  if (v1)
  {
    uint64_t v2 = v0[9];
    uint64_t v3 = (unsigned char *)v0[17];
    char v7 = 10;
    CoreODILogger.info(_:category:)(0xD000000000000011, 0x8000000214D2E8F0, &v7);
    *uint64_t v3 = 1;
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v2, v1);
  }
  else
  {
    char v7 = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001CLL, 0x8000000214D2E880, &v7);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[24] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_214B53EE8;
    return MEMORY[0x270FA2498](sub_214B569D8, 0, 0);
  }
}

uint64_t sub_214B53EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[11] = v2;
  v3[12] = a1;
  v3[13] = a2;
  v3[25] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B53FF0, 0, 0);
}

uint64_t sub_214B53FF0()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[25];
  if (v1)
  {
    uint64_t v2 = v0[12];
    uint64_t v3 = (unsigned char *)v0[17];
    uint64_t v7 = 45;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001DLL, 0x8000000214D2E8D0, v9);
    *uint64_t v3 = 0;
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v2, v1);
  }
  else
  {
    uint64_t v7 = 4;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.warning(_:category:)(0xD00000000000002CLL, 0x8000000214D2E8A0, v9);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002CLL, 0x8000000214D2E8A0, 0, (unsigned __int8 *)&v7, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0x2844495344746567, 0xEB00000000293A5FLL, 295);
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_214B541A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[14] = v2;
  v3[15] = a1;
  v3[16] = a2;
  v3[27] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B542A8, 0, 0);
}

uint64_t sub_214B542A8()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[27];
  if (v1)
  {
    uint64_t v2 = v0[15];
    uint64_t v3 = (unsigned char *)v0[17];
    uint64_t v7 = 45;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.info(_:category:)(0x434520676E697355, 0xEA00000000004449, v9);
    *uint64_t v3 = 2;
    uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v4(v2, v1);
  }
  else
  {
    uint64_t v7 = 22;
    unint64_t v8 = 0xE100000000000000;
    v9[0] = 10;
    CoreODILogger.warning(_:category:)(0xD000000000000011, 0x8000000214D2E860, v9);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x8000000214D2E860, 0, (unsigned __int8 *)&v7, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0x2844495344746567, 0xEB00000000293A5FLL, 304);
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_214B54460(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 232) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x270FA2498](sub_214B545B0, 0, 0);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_214B545B0()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  char v4 = 10;
  CoreODILogger.warning(_:category:)(0xD000000000000044, 0x8000000214D2E810, &v4);

  *(unsigned char *)(v0 + 257) = 2;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 240) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_214B546B8;
  *(void *)(v2 + 136) = *(void *)(v0 + 136);
  *(unsigned char *)(v2 + 258) = *(unsigned char *)(v0 + 257);
  return MEMORY[0x270FA2498](sub_214B5353C, 0, 0);
}

uint64_t sub_214B546B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 248) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x270FA2498](sub_214B54808, 0, 0);
  }
  else
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_214B54808()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214B54820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 56);
  uint64_t v10 = *(void *)(v2 + 72);
  unsigned int v11 = *(unsigned __int8 *)(v2 + 80);
  if (v11 >= 3)
  {
    LOBYTE(v26[0]) = 74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x8000000214D2E700, 0, (unsigned __int8 *)v26, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000010, 0x8000000214D2E720, 55);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = a1[2];
    uint64_t v22 = *(void *)(v2 + 16);
    uint64_t v23 = a1[4];
    uint64_t v20 = a1[6];
    uint64_t v21 = *(void *)(v2 + 32);
    uint64_t v18 = *(void *)(v2 + 64);
    uint64_t v19 = *(void *)(v2 + 48);
    uint64_t v12 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214B51CBC(v22, v7, v21, v8, v19, v9, v18, v10, (uint64_t)v28, v29, v4, v23, v5, v20, v12, v11);
    sub_214B58AA4((uint64_t)v28, (uint64_t)v25);
    sub_214B58AA4((uint64_t)v25, (uint64_t)v26);
    uint64_t result = sub_214B58B0C((uint64_t)v26);
    if (result == 1)
    {
      unsigned __int16 v24 = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000214D2E740, 0, &v24, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000012, 0x8000000214D2E7D0, 196);
      return swift_willThrow();
    }
    else
    {
      long long v14 = v26[7];
      *(_OWORD *)(a2 + 96) = v26[6];
      *(_OWORD *)(a2 + 112) = v14;
      *(void *)(a2 + 128) = v27;
      long long v15 = v26[3];
      *(_OWORD *)(a2 + 32) = v26[2];
      *(_OWORD *)(a2 + 48) = v15;
      long long v16 = v26[5];
      *(_OWORD *)(a2 + 64) = v26[4];
      *(_OWORD *)(a2 + 80) = v16;
      long long v17 = v26[1];
      *(_OWORD *)a2 = v26[0];
      *(_OWORD *)(a2 + 16) = v17;
    }
  }
  return result;
}

uint64_t DIPClientGUIDFactory.createNewAssessmentGUID()(uint64_t a1)
{
  *(void *)(v2 + 504) = a1;
  uint64_t v3 = sub_214D19C78();
  *(void *)(v2 + 512) = v3;
  *(void *)(v2 + 520) = *(void *)(v3 - 8);
  *(void *)(v2 + 528) = swift_task_alloc();
  *(void *)(v2 + 536) = v1[2];
  *(void *)(v2 + 560) = v1[5];
  *(_OWORD *)(v2 + 568) = *((_OWORD *)v1 + 3);
  uint64_t v4 = v1[9];
  *(void *)(v2 + 584) = v1[8];
  uint64_t v5 = *v1;
  *(_OWORD *)(v2 + 544) = *(_OWORD *)(v1 + 3);
  *(void *)(v2 + 592) = v4;
  *(unsigned char *)(v2 + 624) = *((unsigned char *)v1 + 80);
  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 600) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_214B54C68;
  return v8();
}

uint64_t sub_214B54C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(void *)(v4 + 608) = a1;
  *(void *)(v4 + 616) = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214B54DBC, 0, 0);
  }
}

uint64_t sub_214B54DBC()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 512);
  sub_214D19C68();
  sub_214D19C28();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  *(void *)(v0 + 496) = (uint64_t)v5;
  uint64_t v7 = sub_214D1AB78();
  uint64_t v9 = v8;
  uint64_t v10 = sub_214D1A2A8();
  *(void *)(v10 + 16) = 6;
  *(_WORD *)(v10 + 36) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  int v11 = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 6uLL, (void *)(v10 + 32));
  if (v11)
  {
    int v12 = v11;
    swift_bridgeObjectRelease();
    unsigned __int8 v42 = 111;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(inited + 32) = 13;
    *(void *)(inited + 64) = MEMORY[0x263F8E548];
    *(_DWORD *)(inited + 40) = v12;
    unint64_t v14 = sub_214B7E71C(inited);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x8000000214D2E6C0, 0, &v42, 0, v14, 0xD000000000000056, 0x8000000214D2E5E0, 0xD00000000000001ALL, 0x8000000214D2E6E0, 333);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  unsigned int v15 = *(unsigned __int8 *)(v0 + 624);
  uint64_t v16 = sub_214B5898C(v10);
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_214D19B48();
  uint64_t v21 = v20;
  sub_214B58A4C(v16, v18);
  if (v15 >= 3)
  {
    unsigned __int8 v43 = 74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x8000000214D2E700, 0, &v43, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000010, 0x8000000214D2E720, 55);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v39 = *(void *)(v0 + 608);
  unsigned __int8 v36 = *(unsigned char *)(v0 + 624);
  uint64_t v22 = *(void *)(v0 + 592);
  uint64_t v23 = v21;
  uint64_t v24 = *(void *)(v0 + 576);
  uint64_t v40 = *(void *)(v0 + 568);
  uint64_t v41 = *(void *)(v0 + 584);
  uint64_t v37 = *(void *)(v0 + 616);
  uint64_t v25 = *(void *)(v0 + 560);
  uint64_t v38 = *(void *)(v0 + 552);
  uint64_t v26 = *(void *)(v0 + 544);
  uint64_t v35 = *(void *)(v0 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B51CBC(v35, v26, v38, v25, v40, v24, v41, v22, v0 + 16, v39, v37, v7, v9, v19, v23, v36);
  sub_214B58AA4(v0 + 16, v0 + 288);
  sub_214B58AA4(v0 + 288, v0 + 152);
  if (sub_214B58B0C(v0 + 152) != 1)
  {
    uint64_t v28 = *(void *)(v0 + 504);
    long long v29 = *(_OWORD *)(v0 + 216);
    long long v31 = *(_OWORD *)(v0 + 168);
    long long v30 = *(_OWORD *)(v0 + 184);
    *(_OWORD *)(v28 + 48) = *(_OWORD *)(v0 + 200);
    *(_OWORD *)(v28 + 64) = v29;
    *(_OWORD *)(v28 + 16) = v31;
    *(_OWORD *)(v28 + 32) = v30;
    long long v33 = *(_OWORD *)(v0 + 248);
    long long v32 = *(_OWORD *)(v0 + 264);
    long long v34 = *(_OWORD *)(v0 + 232);
    *(void *)(v28 + 128) = *(void *)(v0 + 280);
    *(_OWORD *)(v28 + 96) = v33;
    *(_OWORD *)(v28 + 112) = v32;
    *(_OWORD *)(v28 + 80) = v34;
    *(_OWORD *)uint64_t v28 = *(_OWORD *)(v0 + 152);
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_12;
  }
  v44[0] = 75;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000214D2E740, 0, v44, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000019, 0x8000000214D2E760, 207);
  swift_willThrow();
LABEL_11:
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
LABEL_12:
  return v27();
}

uint64_t DIPClientGUIDFactory.createNewTrainingGUID()(uint64_t a1)
{
  *(void *)(v2 + 504) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  *(void *)(v2 + 512) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE35B8);
  *(void *)(v2 + 520) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE35B0);
  *(void *)(v2 + 528) = swift_task_alloc();
  uint64_t v3 = sub_214D19DE8();
  *(void *)(v2 + 536) = v3;
  *(void *)(v2 + 544) = *(void *)(v3 - 8);
  *(void *)(v2 + 552) = swift_task_alloc();
  uint64_t v4 = sub_214D19908();
  *(void *)(v2 + 560) = v4;
  *(void *)(v2 + 568) = *(void *)(v4 - 8);
  *(void *)(v2 + 576) = swift_task_alloc();
  *(void *)(v2 + 584) = swift_task_alloc();
  uint64_t v5 = sub_214D19C78();
  *(void *)(v2 + 592) = v5;
  *(void *)(v2 + 600) = *(void *)(v5 - 8);
  *(void *)(v2 + 608) = swift_task_alloc();
  *(void *)(v2 + 616) = swift_task_alloc();
  *(void *)(v2 + 624) = v1[2];
  *(_OWORD *)(v2 + 632) = *(_OWORD *)(v1 + 3);
  *(void *)(v2 + 648) = v1[5];
  uint64_t v6 = v1[9];
  *(void *)(v2 + 672) = v1[8];
  uint64_t v7 = *v1;
  *(_OWORD *)(v2 + 656) = *((_OWORD *)v1 + 3);
  *(void *)(v2 + 680) = v6;
  *(unsigned char *)(v2 + 712) = *((unsigned char *)v1 + 80);
  uint64_t v10 = (uint64_t (*)(void))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 688) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_214B555B8;
  return v10();
}

uint64_t sub_214B555B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[87] = a1;
  v4[88] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214B55770, 0, 0);
  }
}

uint64_t sub_214B55770()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v96 = *(void *)(v0 + 536);
  uint64_t v99 = *(void *)(v0 + 528);
  uint64_t v102 = *(void *)(v0 + 520);
  sub_214D19C68();
  sub_214D19DC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AA8);
  uint64_t v3 = sub_214D19DD8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_214D1C1F0;
  unint64_t v8 = v7 + v6;
  uint64_t v9 = *(void (**)(unint64_t, void, uint64_t))(v4 + 104);
  v9(v8, *MEMORY[0x263F078C0], v3);
  v9(v8 + v5, *MEMORY[0x263F078C8], v3);
  sub_214B58B24(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_214D19DA8();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v1, v96);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v99, 1, 1, v96);
  uint64_t v11 = sub_214D19E38();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v102, 1, 1, v11);
  uint64_t result = sub_214D198D8();
  if (v13) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = result;
  }
  if (v14 == 0x8000000000000000)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = sub_214D198E8();
  if (v15) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = result;
  }
  if (v16 == 0x8000000000000000) {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(v0 + 600);
  uint64_t v18 = *(void *)(v0 + 592);
  uint64_t v19 = *(void *)(v0 + 552);
  uint64_t v20 = *(void *)(v0 + 536);
  uint64_t v21 = *(void *)(v0 + 512);
  sub_214D198F8();
  sub_214D19DC8();
  sub_214D19DB8();
  v10(v19, v20);
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v21, 1, v18);
  uint64_t v23 = *(void *)(v0 + 600);
  uint64_t v24 = *(void *)(v0 + 592);
  if (v22 == 1)
  {
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 584);
    uint64_t v27 = *(void *)(v0 + 576);
    uint64_t v28 = *(void *)(v0 + 568);
    uint64_t v29 = *(void *)(v0 + 560);
    uint64_t v30 = *(void *)(v0 + 512);
    swift_bridgeObjectRelease();
    sub_214B59CE0(v30, &qword_26ACE3B10);
    unsigned __int8 v106 = 71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000029, 0x8000000214D2E780, 0, &v106, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000017, 0x8000000214D2E7B0, 221);
    swift_willThrow();
    long long v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v31(v27, v29);
    v31(v26, v29);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    goto LABEL_20;
  }
  (*(void (**)(void, void, void))(v23 + 32))(*(void *)(v0 + 608), *(void *)(v0 + 512), *(void *)(v0 + 592));
  uint64_t result = sub_214D19C28();
  if ((~*(void *)&v32 & 0x7FF0000000000000) == 0) {
    goto LABEL_27;
  }
  if (v32 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v32 >= 9.22337204e18)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  *(void *)(v0 + 496) = (uint64_t)v32;
  uint64_t v33 = sub_214D1AB78();
  uint64_t v35 = v34;
  uint64_t v36 = sub_214D1A2A8();
  *(void *)(v36 + 16) = 6;
  *(_WORD *)(v36 + 36) = 0;
  *(_DWORD *)(v36 + 32) = 0;
  int v37 = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 6uLL, (void *)(v36 + 32));
  if (v37)
  {
    int v38 = v37;
    uint64_t v39 = *(void *)(v0 + 600);
    uint64_t v40 = *(void *)(v0 + 592);
    uint64_t v100 = *(void *)(v0 + 584);
    uint64_t v103 = *(void *)(v0 + 616);
    uint64_t v94 = *(void *)(v0 + 608);
    uint64_t v97 = *(void *)(v0 + 576);
    uint64_t v41 = *(void *)(v0 + 568);
    uint64_t v42 = *(void *)(v0 + 560);
    swift_bridgeObjectRelease();
    unsigned __int8 v107 = 111;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(inited + 32) = 13;
    *(void *)(inited + 64) = MEMORY[0x263F8E548];
    *(_DWORD *)(inited + 40) = v38;
    unint64_t v44 = sub_214B7E71C(inited);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x8000000214D2E6C0, 0, &v107, 0, v44, 0xD000000000000056, 0x8000000214D2E5E0, 0xD00000000000001ALL, 0x8000000214D2E6E0, 333);
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v45(v94, v40);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v46(v97, v42);
    v46(v100, v42);
    v45(v103, v40);
  }
  else
  {
    uint64_t v104 = v35;
    unsigned int v47 = *(unsigned __int8 *)(v0 + 712);
    uint64_t v48 = sub_214B5898C(v36);
    unint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_214D19B48();
    uint64_t v101 = v52;
    sub_214B58A4C(v48, v50);
    uint64_t v98 = *(void *)(v0 + 704);
    if (v47 >= 3)
    {
      uint64_t v68 = *(void *)(v0 + 600);
      uint64_t v86 = *(void *)(v0 + 592);
      uint64_t v88 = *(void *)(v0 + 608);
      uint64_t v93 = *(void *)(v0 + 584);
      uint64_t v95 = *(void *)(v0 + 616);
      uint64_t v91 = *(void *)(v0 + 576);
      uint64_t v69 = *(void *)(v0 + 568);
      uint64_t v70 = *(void *)(v0 + 560);
      unsigned __int8 v108 = 74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x8000000214D2E700, 0, &v108, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000010, 0x8000000214D2E720, 55);
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v71(v88, v86);
      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v72(v91, v70);
      v72(v93, v70);
      v71(v95, v86);
    }
    else
    {
      unsigned __int8 v84 = *(unsigned char *)(v0 + 712);
      uint64_t v53 = *(void *)(v0 + 680);
      uint64_t v92 = *(void *)(v0 + 672);
      uint64_t v54 = *(void *)(v0 + 664);
      uint64_t v87 = *(void *)(v0 + 696);
      uint64_t v90 = *(void *)(v0 + 656);
      uint64_t v55 = *(void *)(v0 + 648);
      uint64_t v85 = *(void *)(v0 + 640);
      uint64_t v56 = *(void *)(v0 + 632);
      uint64_t v57 = *(void *)(v0 + 624);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_214B51CBC(v57, v56, v85, v55, v90, v54, v92, v53, v0 + 16, v87, v98, v33, v104, v51, v101, v84);
      sub_214B58AA4(v0 + 16, v0 + 288);
      sub_214B58AA4(v0 + 288, v0 + 152);
      int v58 = sub_214B58B0C(v0 + 152);
      uint64_t v59 = *(void *)(v0 + 616);
      uint64_t v60 = *(void *)(v0 + 608);
      uint64_t v61 = *(void *)(v0 + 600);
      uint64_t v62 = *(void *)(v0 + 592);
      uint64_t v63 = *(void *)(v0 + 584);
      uint64_t v105 = *(void *)(v0 + 576);
      uint64_t v64 = *(void *)(v0 + 568);
      uint64_t v65 = *(void *)(v0 + 560);
      if (v58 != 1)
      {
        uint64_t v74 = *(void *)(v0 + 504);
        long long v75 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
        v75(v60, v62);
        uint64_t v89 = v62;
        uint64_t v76 = v59;
        long long v77 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
        v77(v105, v65);
        v77(v63, v65);
        v75(v76, v89);
        *(_OWORD *)uint64_t v74 = *(_OWORD *)(v0 + 152);
        long long v78 = *(_OWORD *)(v0 + 168);
        long long v79 = *(_OWORD *)(v0 + 184);
        long long v80 = *(_OWORD *)(v0 + 216);
        *(_OWORD *)(v74 + 48) = *(_OWORD *)(v0 + 200);
        *(_OWORD *)(v74 + 64) = v80;
        *(_OWORD *)(v74 + 16) = v78;
        *(_OWORD *)(v74 + 32) = v79;
        long long v81 = *(_OWORD *)(v0 + 232);
        long long v82 = *(_OWORD *)(v0 + 248);
        long long v83 = *(_OWORD *)(v0 + 264);
        *(void *)(v74 + 128) = *(void *)(v0 + 280);
        *(_OWORD *)(v74 + 96) = v82;
        *(_OWORD *)(v74 + 112) = v83;
        *(_OWORD *)(v74 + 80) = v81;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_21;
      }
      v109[0] = 75;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000214D2E740, 0, v109, 0, 0, 0xD000000000000056, 0x8000000214D2E5E0, 0xD000000000000017, 0x8000000214D2E7B0, 227);
      swift_willThrow();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v66(v60, v62);
      uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v67(v105, v65);
      v67(v63, v65);
      v66(v59, v62);
    }
  }
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
LABEL_21:
  return v73();
}

uint64_t sub_214B56324()
{
  return MEMORY[0x270FA2498](sub_214B56340, 0, 0);
}

uint64_t sub_214B56340()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 40) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214B563E8, v1, 0);
}

uint64_t sub_214B563E8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 168))
  {
    return MEMORY[0x270FA2498](sub_214B565C8, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v2;
    void *v2 = v0;
    v2[1] = sub_214B564B8;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214B564B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_214B565C8, v2, 0);
}

uint64_t sub_214B565C8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_214B59F3C((unint64_t *)&qword_26ACE44B0, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  uint64_t v3 = swift_task_alloc();
  v0[7] = v3;
  *(void *)(v3 + 16) = v1;
  strcpy((char *)(v3 + 24), "UniqueChipID");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39C8);
  void *v4 = v0;
  v4[1] = sub_214B56734;
  return MEMORY[0x270FA2318](v0 + 2, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214B5A470, v3, v5);
}

uint64_t sub_214B56734()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 72) = *(void *)(v1 + 16);
  *(unsigned char *)(v1 + 25) = *(unsigned char *)(v1 + 24);
  return MEMORY[0x270FA2498](sub_214B56890, v2, 0);
}

uint64_t sub_214B56890()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_214B568F8, 0, 0);
}

uint64_t sub_214B568F8()
{
  uint64_t v6 = v0;
  if (*(unsigned char *)(v0 + 25))
  {
    char v5 = 10;
    CoreODILogger.warning(_:category:)(0xD000000000000014, 0x8000000214D2E9C0, &v5);
    uint64_t v1 = 0;
    uint64_t v2 = 0;
  }
  else
  {
    *(void *)(v0 + 32) = *(void *)(v0 + 72);
    uint64_t v1 = sub_214D1AB78();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_214B569BC()
{
  return MEMORY[0x270FA2498](sub_214B569D8, 0, 0);
}

uint64_t sub_214B569D8()
{
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  *(void *)(v0 + 40) = qword_26ACE3700;
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B56AAC;
  return sub_214C73F84();
}

uint64_t sub_214B56AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_214B56C4C;
  }
  else
  {
    *(void *)(v6 + 64) = a2;
    *(void *)(v6 + 72) = a1;
    uint64_t v7 = sub_214B56BE0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214B56BE0()
{
  uint64_t v1 = v0[8];
  swift_release();
  uint64_t v2 = v0[9];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_214B56C4C()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)v0[7];
  swift_release();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v6[0]) = 10;
  CoreODILogger.warning(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  uint64_t v4 = (uint64_t (*)(void, void))v0[1];
  return v4(0, 0);
}

uint64_t sub_214B56D70()
{
  return MEMORY[0x270FA2498](sub_214B56D8C, 0, 0);
}

uint64_t sub_214B56D8C()
{
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE3700;
  *(void *)(v0 + 40) = qword_26ACE3700;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214B56E34, v1, 0);
}

uint64_t sub_214B56E34()
{
  uint64_t v1 = sub_214C74360();
  v0[6] = 0;
  v0[7] = v2;
  v0[8] = v1;
  return MEMORY[0x270FA2498](sub_214B56EC4, 0, 0);
}

uint64_t sub_214B56EC4()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = v0[8];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_214B56F30()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)v0[6];
  swift_release();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v6[0]) = 10;
  CoreODILogger.warning(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  uint64_t v4 = (uint64_t (*)(void, void))v0[1];
  return v4(0, 0);
}

uint64_t sub_214B57050(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CB68);
  if (swift_dynamicCast())
  {
    sub_214B59EC0(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_214D19918();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_214B59CE0((uint64_t)v38, (uint64_t *)&unk_26784CB70);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_214D1A818();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_214B59D3C(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_214D1A128();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_214B59DA0(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0], v12);
  unint64_t v13 = (unint64_t)sub_214B57D6C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_214B59E40);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_214D19B08();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_214B57CF0(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_214D1A168();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_214D1A818();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_214B57CF0(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_214D1A138();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_214D19B18();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_214D19B18();
    sub_214B59EAC(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_214B59EAC((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_214B57580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_214B575E0(a1, a2, a3, a4, (uint64_t *)&unk_26ACE39B8, (uint64_t)&unk_26C5AE4A0, (uint64_t)sub_214B5A230, (uint64_t)&block_descriptor_92);
}

uint64_t sub_214B575B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_214B575E0(a1, a2, a3, a4, &qword_26ACE4318, (uint64_t)&unk_26C5AE478, (uint64_t)sub_214B59F04, (uint64_t)&block_descriptor_4);
}

uint64_t sub_214B575E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = a8;
  uint64_t v31 = a4;
  uint64_t v32 = a7;
  v29[1] = a6;
  uint64_t v30 = a3;
  uint64_t v11 = sub_214D19F08();
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v12);
  unint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_214D19F38();
  uint64_t v15 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35, v16);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v19, v22);
  BOOL v23 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a1, v19);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v31;
  *(void *)(v25 + 16) = v30;
  *(void *)(v25 + 24) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v23, v19);
  aBlock[4] = v32;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = v34;
  uint64_t v27 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_214D19F28();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_214B59F3C((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B5A118((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v18, v14, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v35);
  return swift_release();
}

uint64_t sub_214B5796C()
{
  uint64_t v0 = (void *)sub_214D1A028();
  uint64_t v1 = MGCopyAnswer();

  if (v1) {
    swift_dynamicCast();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE39B8);
  return sub_214D1A2F8();
}

uint64_t sub_214B57A14()
{
  uint64_t v0 = (void *)sub_214D1A028();
  uint64_t v1 = MGCopyAnswer();

  if (v1) {
    swift_dynamicCast();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4318);
  return sub_214D1A2F8();
}

BOOL sub_214B57AA8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_214B57ABC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_214B57AC8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_214B57ADC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_214B57AE8()
{
  swift_getWitnessTable();
  return sub_214D19E48();
}

void sub_214B57B54(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_214B57B5C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_214B57B70(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_214B57BA0(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_214B57BB4(void *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_214B57BC8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void *sub_214B57BD8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_214B57BE4()
{
  return sub_214D19E68();
}

uint64_t sub_214B57C30()
{
  return sub_214D19E58();
}

uint64_t sub_214B57C88()
{
  return sub_214D1AD48();
}

uint64_t sub_214B57CF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_214D1A178();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2166AFC10](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_214B57D6C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_214D1C200;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_214D19888() && __OFSUB__((int)v4, sub_214D198B8())) {
        goto LABEL_24;
      }
      sub_214D198C8();
      swift_allocObject();
      uint64_t v13 = sub_214D19868();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_214B58158((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_214D19AB8();
      uint64_t result = sub_214B58158(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_214B58070@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_214B587C8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_214B5888C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_214B58908((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_214B580E8(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_214B58158(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_214D19888();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_214D198B8();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_214D198A8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_214B5820C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_214D1A7B8();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_214B58298(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D697473 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D697464 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684955506 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214B58428()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t _s17CoreODIEssentials13ODIClientGUIDV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v41 = a1[6];
  uint64_t v42 = a1[5];
  uint64_t v39 = a1[7];
  uint64_t v37 = a1[8];
  uint64_t v35 = a1[9];
  uint64_t v33 = a1[10];
  uint64_t v31 = a1[11];
  uint64_t v29 = a1[12];
  uint64_t v27 = a1[13];
  uint64_t v25 = a1[14];
  uint64_t v7 = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v40 = a2[6];
  uint64_t v38 = a2[7];
  uint64_t v36 = a2[8];
  uint64_t v34 = a2[9];
  uint64_t v32 = a2[10];
  uint64_t v30 = a2[11];
  uint64_t v28 = a2[12];
  uint64_t v26 = a2[13];
  uint64_t v23 = a1[15];
  uint64_t v24 = a2[14];
  uint64_t v21 = a2[15];
  uint64_t v22 = a1[16];
  uint64_t v20 = a2[16];
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_214D1ABC8();
    swift_bridgeObjectRelease_n();
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  if (v2 == v7 && v3 == v6 || (v13 = sub_214D1ABC8(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (v4 == v8 && v5 == v9 || (v14 = sub_214D1ABC8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v42 == v10 && v41 == v40 || (v15 = sub_214D1ABC8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v39 == v38 && v37 == v36 || (v16 = sub_214D1ABC8(), uint64_t result = 0, (v16 & 1) != 0))
        {
          if (v35 == v34 && v33 == v32 || (v17 = sub_214D1ABC8(), uint64_t result = 0, (v17 & 1) != 0))
          {
            if (v31 == v30 && v29 == v28 || (v18 = sub_214D1ABC8(), uint64_t result = 0, (v18 & 1) != 0))
            {
              if (v27 == v26 && v25 == v24 || (v19 = sub_214D1ABC8(), uint64_t result = 0, (v19 & 1) != 0))
              {
                if (v23 == v21 && v22 == v20)
                {
                  return 1;
                }
                else
                {
                  return sub_214D1ABC8();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_214B5877C(uint64_t a1)
{
  return sub_214B575E0(a1, v1[2], v1[3], v1[4], (uint64_t *)&unk_26ACE39B8, (uint64_t)&unk_26C5AE4A0, (uint64_t)sub_214B5A230, (uint64_t)&block_descriptor_92);
}

uint64_t sub_214B587C8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_214B5888C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_214D198C8();
  swift_allocObject();
  uint64_t result = sub_214D19878();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_214D19AF8();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_214B58908(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_214D198C8();
  swift_allocObject();
  uint64_t result = sub_214D19878();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_214B5898C(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39A8);
  uint64_t v10 = sub_214B5A118(&qword_26ACE39B0, &qword_26ACE39A8);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_214B58070(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_214B58A4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_214B58AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26ACE3630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B58B0C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_214B58B24(uint64_t a1)
{
  uint64_t v2 = sub_214D19DD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v2, v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8);
  uint64_t v39 = (char *)&v32 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A48);
    uint64_t v11 = sub_214D1A768();
    uint64_t v12 = 0;
    char v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v37 = v14;
    uint64_t v38 = v11 + 56;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 64);
    uint64_t v34 = v10;
    uint64_t v35 = a1 + ((v15 + 32) & ~v15);
    uint64_t v16 = *(void *)(v13 + 56);
    char v17 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v33 = (uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 16);
    while (1)
    {
      uint64_t v36 = v12;
      v37(v39, v35 + v16 * v12, v2);
      sub_214B59F3C((unint64_t *)&unk_26ACE35A0, MEMORY[0x263F07908]);
      uint64_t v18 = sub_214D19FD8();
      uint64_t v19 = ~(-1 << *(unsigned char *)(v11 + 32));
      unint64_t v20 = v18 & v19;
      unint64_t v21 = (v18 & (unint64_t)v19) >> 6;
      uint64_t v22 = *(void *)(v38 + 8 * v21);
      uint64_t v23 = 1 << (v18 & v19);
      if ((v23 & v22) != 0)
      {
        while (1)
        {
          uint64_t v24 = v13;
          v37(v7, *(void *)(v11 + 48) + v20 * v16, v2);
          sub_214B59F3C(&qword_26ACE3B28, MEMORY[0x263F07908]);
          char v25 = sub_214D1A018();
          uint64_t v26 = *v17;
          (*v17)(v7, v2);
          if (v25) {
            break;
          }
          unint64_t v20 = (v20 + 1) & v19;
          unint64_t v21 = v20 >> 6;
          uint64_t v22 = *(void *)(v38 + 8 * (v20 >> 6));
          uint64_t v23 = 1 << v20;
          uint64_t v13 = v24;
          if ((v22 & (1 << v20)) == 0) {
            goto LABEL_8;
          }
        }
        v26(v39, v2);
        uint64_t v13 = v24;
      }
      else
      {
LABEL_8:
        uint64_t v27 = v39;
        *(void *)(v38 + 8 * v21) = v23 | v22;
        uint64_t result = (*v33)(*(void *)(v11 + 48) + v20 * v16, v27, v2);
        uint64_t v29 = *(void *)(v11 + 16);
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30)
        {
          __break(1u);
          return result;
        }
        *(void *)(v11 + 16) = v31;
      }
      uint64_t v12 = v36 + 1;
      if (v36 + 1 == v34) {
        return v11;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t destroy for ODIClientGUIDSeeds()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ODIClientGUIDSeeds(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ODIClientGUIDSeeds(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for ODIClientGUIDSeeds(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIClientGUIDSeeds(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUIDSeeds(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUIDSeeds()
{
  return &type metadata for ODIClientGUIDSeeds;
}

uint64_t initializeBufferWithCopyOfBuffer for ODIClientGUID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ODIClientGUID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIClientGUID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUID()
{
  return &type metadata for ODIClientGUID;
}

uint64_t destroy for DIPClientGUIDFactory()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUIDFactory()
{
  return &type metadata for DIPClientGUIDFactory;
}

void type metadata accessor for CFData(uint64_t a1)
{
}

void type metadata accessor for SecKey(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ODIClientGUID.GUIDSeedVersion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ODIClientGUID.GUIDSeedVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B599A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_214B599C8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_214B599D4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUID.GUIDSeedVersion()
{
  return &type metadata for ODIClientGUID.GUIDSeedVersion;
}

uint64_t getEnumTagSinglePayload for ODIClientGUIDSeeds.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ODIClientGUIDSeeds.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B59B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUIDSeeds.CodingKeys()
{
  return &type metadata for ODIClientGUIDSeeds.CodingKeys;
}

unint64_t sub_214B59B84()
{
  unint64_t result = qword_26784CB58;
  if (!qword_26784CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CB58);
  }
  return result;
}

unint64_t sub_214B59BDC()
{
  unint64_t result = qword_26784CB60;
  if (!qword_26784CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CB60);
  }
  return result;
}

unint64_t sub_214B59C34()
{
  unint64_t result = qword_26ACE3758;
  if (!qword_26ACE3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3758);
  }
  return result;
}

unint64_t sub_214B59C8C()
{
  unint64_t result = qword_26ACE3750;
  if (!qword_26ACE3750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3750);
  }
  return result;
}

uint64_t sub_214B59CE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *sub_214B59D3C(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_214B587C8(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_214B5888C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_214B58908((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_214B59DA0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_214D198C8();
      swift_allocObject();
      sub_214D19898();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_214D19AF8();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_214B59E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  unint64_t result = sub_214B580E8((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_214B59ED8, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_214B59EAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_214B58A4C(a1, a2);
  }
  return a1;
}

uint64_t sub_214B59EC0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_214B59ED8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_214B5820C(a1, a2);
}

uint64_t sub_214B59EF8()
{
  return objectdestroyTm(&qword_26ACE4318);
}

uint64_t sub_214B59F04()
{
  return sub_214B5A250(&qword_26ACE4318, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B57A14);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_214B59F3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

double sub_214B59FCC(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_214B59FE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B5A080(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B5A118(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214B5A15C()
{
  return objectdestroyTm((uint64_t *)&unk_26ACE39B8);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_214B5A230()
{
  return sub_214B5A250((uint64_t *)&unk_26ACE39B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B5796C);
}

uint64_t sub_214B5A250(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return a2(v4, v5, v6);
}

void type metadata accessor for SecAccessControl(uint64_t a1)
{
}

void type metadata accessor for SecPolicy(uint64_t a1)
{
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_214B5A334(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_214B5A354(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void sub_214B5A390(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_214B5A3D8()
{
  return sub_214B59F3C(&qword_26784CBA0, type metadata accessor for CFString);
}

uint64_t sub_214B5A420()
{
  return sub_214B59F3C(&qword_26784CBA8, type metadata accessor for CFString);
}

uint64_t DIPError(_:fromError:code:forceCode:properties:file:function:line:)(uint64_t a1, uint64_t a2, void *a3, unsigned __int16 *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  LOBYTE(v12) = a5;
  int v88 = *a4;
  if (qword_26ACE38B0 != -1) {
LABEL_80:
  }
    swift_once();
  unint64_t v14 = sub_214B7E5BC(MEMORY[0x263F8EE78]);
  unint64_t v15 = v14;
  if (a3)
  {
    uint64_t v16 = a3;
    char v17 = (void *)sub_214D199A8();
    id v18 = objc_msgSend(v17, sel_domain);
    uint64_t v19 = sub_214D1A038();
    uint64_t v21 = v20;

    if (v19 == 0x726F727245504944 && v21 == 0xE800000000000000) {
      goto LABEL_10;
    }
    char v23 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_11;
    }
    id v24 = objc_msgSend(v17, sel_domain);
    uint64_t v25 = sub_214D1A038();
    uint64_t v27 = v26;

    if (v25 == 0x726F72724549444FLL && v27 == 0xE800000000000000)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    char v77 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v77)
    {
LABEL_11:
      if ((v12 & 1) == 0)
      {
        DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v17, sel_code));
        if ((unsigned __int16)v94 == 462) {
          int v28 = v88;
        }
        else {
          int v28 = (unsigned __int16)v94;
        }
        int v88 = v28;
      }
      id v29 = objc_msgSend(v17, sel_userInfo);
      uint64_t v30 = sub_214D19F98();

      swift_bridgeObjectRelease();
      unint64_t v31 = v30;
      if (!a6) {
        goto LABEL_65;
      }
      goto LABEL_19;
    }
    uint64_t v78 = sub_214D1A038();
    uint64_t v80 = v79;
    unint64_t v95 = sub_214B5ED54();
    *(void *)&long long v94 = v17;
    sub_214B5EC20(&v94, v92);
    id v81 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v91[0] = v15;
    sub_214B8E05C(v92, v78, v80, isUniquelyReferenced_nonNull_native);
    unint64_t v31 = *(void *)&v91[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!a6)
    {
LABEL_65:
      uint64_t v63 = *(void *)(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v63
        && (uint64_t v64 = sub_214B87FEC(0x636F766E49504944, 0xEE00736E6F697461), (v65 & 1) != 0)
        && (sub_214B5EC30(*(void *)(v31 + 56) + 32 * v64, (uint64_t)&v94),
            __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3978),
            swift_dynamicCast()))
      {
        uint64_t v66 = *(void **)&v92[0];
      }
      else
      {
        uint64_t v66 = (void *)MEMORY[0x263F8EE78];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v66 = sub_214B86FD8(0, v66[2] + 1, 1, v66);
      }
      unint64_t v68 = v66[2];
      unint64_t v67 = v66[3];
      if (v68 >= v67 >> 1) {
        uint64_t v66 = sub_214B86FD8((void *)(v67 > 1), v68 + 1, 1, v66);
      }
      v66[2] = v68 + 1;
      uint64_t v69 = &v66[7 * v68];
      v69[4] = a1;
      v69[5] = a2;
      v69[6] = a7;
      v69[7] = a8;
      v69[8] = a9;
      v69[9] = a10;
      v69[10] = a11;
      unint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3978);
      *(void *)&long long v94 = v66;
      sub_214B5EC20(&v94, v92);
      char v70 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v91[0] = v31;
      sub_214B8E05C(v92, 0x636F766E49504944, 0xEE00736E6F697461, v70);
      swift_bridgeObjectRelease();
      uint64_t v71 = qword_214D1D0A8[(__int16)v88];
      id v72 = objc_allocWithZone(MEMORY[0x263F087E8]);
      swift_bridgeObjectRetain();
      uint64_t v73 = (void *)sub_214D1A028();
      uint64_t v74 = (void *)sub_214D19F88();
      swift_bridgeObjectRelease();
      id v75 = objc_msgSend(v72, sel_initWithDomain_code_userInfo_, v73, v71, v74);
      swift_bridgeObjectRelease();

      return (uint64_t)v75;
    }
  }
  else
  {
    unint64_t v31 = v14;
    if (!a6) {
      goto LABEL_65;
    }
  }
LABEL_19:
  uint64_t v32 = *(void *)(v31 + 16);
  swift_bridgeObjectRetain();
  if (v32
    && (uint64_t v33 = sub_214B87FEC(0x65706F7250504944, 0xED00007365697472), (v34 & 1) != 0)
    && (sub_214B5EC30(*(void *)(v31 + 56) + 32 * v33, (uint64_t)&v94),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44E0),
        swift_dynamicCast()))
  {
    a3 = *(void **)&v92[0];
  }
  else
  {
    a3 = (void *)sub_214B7E744(MEMORY[0x263F8EE78]);
  }
  int64_t v35 = 0;
  uint64_t v36 = a6 + 64;
  uint64_t v37 = 1 << *(unsigned char *)(a6 + 32);
  uint64_t v38 = -1;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  unint64_t v12 = v38 & *(void *)(a6 + 64);
  int64_t v39 = (unint64_t)(v37 + 63) >> 6;
  int64_t v84 = v39 - 5;
  int64_t v83 = v39 - 1;
  int64_t v85 = v39;
  while (1)
  {
    while (1)
    {
      if (v12)
      {
        unint64_t v40 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v41 = v40 | (v35 << 6);
LABEL_29:
        uint64_t v42 = *(void *)(a6 + 56);
        LOBYTE(v92[0]) = *(unsigned char *)(*(void *)(a6 + 48) + v41);
        sub_214B5EC30(v42 + 32 * v41, (uint64_t)v92 + 8);
        goto LABEL_36;
      }
      int64_t v43 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      if (v43 >= v39)
      {
        int64_t v45 = v35;
      }
      else
      {
        unint64_t v44 = *(void *)(v36 + 8 * v43);
        if (v44) {
          goto LABEL_33;
        }
        int64_t v45 = v35 + 1;
        if (v35 + 2 < v39)
        {
          unint64_t v44 = *(void *)(v36 + 8 * (v35 + 2));
          if (v44)
          {
            int64_t v43 = v35 + 2;
LABEL_33:
            unint64_t v12 = (v44 - 1) & v44;
            unint64_t v41 = __clz(__rbit64(v44)) + (v43 << 6);
            int64_t v35 = v43;
            goto LABEL_29;
          }
          int64_t v45 = v35 + 2;
          if (v35 + 3 < v39)
          {
            unint64_t v44 = *(void *)(v36 + 8 * (v35 + 3));
            if (v44)
            {
              int64_t v43 = v35 + 3;
              goto LABEL_33;
            }
            int64_t v43 = v35 + 4;
            int64_t v45 = v35 + 3;
            if (v35 + 4 < v39)
            {
              unint64_t v44 = *(void *)(v36 + 8 * v43);
              if (v44) {
                goto LABEL_33;
              }
              while (v84 != v35)
              {
                unint64_t v44 = *(void *)(a6 + 104 + 8 * v35++);
                if (v44)
                {
                  int64_t v43 = v35 + 4;
                  goto LABEL_33;
                }
              }
              int64_t v45 = v83;
            }
          }
        }
      }
      unint64_t v12 = 0;
      uint64_t v93 = 0;
      int64_t v35 = v45;
      memset(v92, 0, sizeof(v92));
LABEL_36:
      sub_214B5EC8C((uint64_t)v92, (uint64_t)&v94);
      if (!v96)
      {
        swift_release();
        unint64_t v95 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44E0);
        *(void *)&long long v94 = a3;
        sub_214B5EC20(&v94, v92);
        swift_bridgeObjectRetain();
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v91[0] = v31;
        sub_214B8E05C(v92, 0x65706F7250504944, 0xED00007365697472, v62);
        unint64_t v31 = *(void *)&v91[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      uint64_t v46 = v94;
      sub_214B5EC20((long long *)((char *)&v94 + 8), v92);
      if (!a3[2]) {
        break;
      }
      uint64_t v47 = sub_214B88044(v46);
      if ((v48 & 1) == 0) {
        break;
      }
      sub_214B5EC30(a3[7] + 32 * v47, (uint64_t)v91);
      sub_214B5ECF4((uint64_t)v91);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    }
    memset(v91, 0, sizeof(v91));
    sub_214B5ECF4((uint64_t)v91);
    sub_214B5EC30((uint64_t)v92, (uint64_t)v91);
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v51 = sub_214B88044(v46);
    uint64_t v52 = a3[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      goto LABEL_79;
    }
    char v55 = v50;
    if (a3[3] >= v54)
    {
      if (v49)
      {
        if (v50) {
          goto LABEL_50;
        }
      }
      else
      {
        sub_214B8FE8C();
        if (v55) {
          goto LABEL_50;
        }
      }
    }
    else
    {
      sub_214B8B1E8(v54, v49);
      uint64_t v56 = sub_214B88044(v46);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_82;
      }
      unint64_t v51 = v56;
      if (v55)
      {
LABEL_50:
        int v58 = (_OWORD *)(a3[7] + 32 * v51);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        sub_214B5EC20(v91, v58);
        goto LABEL_63;
      }
    }
    a3[(v51 >> 6) + 8] |= 1 << v51;
    *(unsigned char *)(a3[6] + v51) = v46;
    sub_214B5EC20(v91, (_OWORD *)(a3[7] + 32 * v51));
    uint64_t v59 = a3[2];
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    if (v60) {
      break;
    }
    a3[2] = v61;
LABEL_63:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    int64_t v39 = v85;
    uint64_t v36 = a6 + 64;
  }
  __break(1u);
LABEL_82:
  uint64_t result = sub_214D1AC58();
  __break(1u);
  return result;
}

uint64_t sub_214B5ADD8(void *a1, uint64_t a2, unint64_t a3)
{
  if (a2 || (unint64_t v6 = 0xE000000000000000, a3 != 0xE000000000000000))
  {
    unint64_t v8 = 0xE000000000000000;
    if (sub_214D1ABC8())
    {
      uint64_t v7 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_214D1A108();
      uint64_t v7 = a2;
      unint64_t v8 = a3;
    }
    unint64_t v6 = 0xE000000000000000;
    if (sub_214D1ABC8())
    {
      uint64_t v18 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_214D1A108();
      unint64_t v6 = a3;
      uint64_t v18 = a2;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  sub_214D1A4A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_214D1C1F0;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_214B5F3EC();
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v8;
  uint64_t v12 = sub_214B5F440(a1);
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v13;
  sub_214D19E78();
  swift_bridgeObjectRelease();
  sub_214D1A488();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_214D1C1F0;
  *(void *)(v14 + 56) = v10;
  *(void *)(v14 + 64) = v11;
  *(void *)(v14 + 32) = v18;
  *(void *)(v14 + 40) = v6;
  uint64_t v15 = sub_214B5FBCC(a1);
  *(void *)(v14 + 96) = v10;
  *(void *)(v14 + 104) = v11;
  *(void *)(v14 + 72) = v15;
  *(void *)(v14 + 80) = v16;
  sub_214D19E78();
  return swift_bridgeObjectRelease();
}

CoreODIEssentials::DIPErrorCode_optional __swiftcall DIPErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue > -30)
  {
    if (rawValue <= 39999)
    {
      if (rawValue <= 19999)
      {
        __int16 v2 = 0;
        switch(rawValue)
        {
          case -29:
            __int16 v2 = 23;
            goto LABEL_155;
          case -28:
            __int16 v2 = 22;
            goto LABEL_155;
          case -22:
            __int16 v2 = 21;
            goto LABEL_155;
          case -21:
            __int16 v2 = 20;
            goto LABEL_155;
          case -20:
            __int16 v2 = 19;
            goto LABEL_155;
          case -19:
            __int16 v2 = 18;
            goto LABEL_155;
          case -18:
            __int16 v2 = 17;
            goto LABEL_155;
          case -17:
            __int16 v2 = 16;
            goto LABEL_155;
          case -16:
            __int16 v2 = 15;
            goto LABEL_155;
          case -15:
            __int16 v2 = 14;
            goto LABEL_155;
          case -14:
            __int16 v2 = 13;
            goto LABEL_155;
          case -13:
            __int16 v2 = 12;
            goto LABEL_155;
          case -12:
            __int16 v2 = 11;
            goto LABEL_155;
          case -11:
            __int16 v2 = 10;
            goto LABEL_155;
          case -10:
            __int16 v2 = 9;
            goto LABEL_155;
          case -9:
            __int16 v2 = 8;
            goto LABEL_155;
          case -8:
            __int16 v2 = 7;
            goto LABEL_155;
          case -7:
            __int16 v2 = 6;
            goto LABEL_155;
          case -6:
            __int16 v2 = 5;
            goto LABEL_155;
          case -5:
            __int16 v2 = 4;
            goto LABEL_155;
          case -4:
            __int16 v2 = 3;
            goto LABEL_155;
          case -3:
            __int16 v2 = 2;
            goto LABEL_155;
          case -2:
            __int16 v2 = 1;
            goto LABEL_155;
          case -1:
            goto LABEL_155;
          case 200:
            __int16 v2 = 24;
            goto LABEL_155;
          default:
            goto LABEL_157;
        }
      }
      switch(rawValue)
      {
        case 20000:
          __int16 v2 = 25;
          goto LABEL_155;
        case 20001:
          __int16 v2 = 26;
          goto LABEL_155;
        case 20100:
          __int16 v2 = 27;
          goto LABEL_155;
      }
    }
    else
    {
      if (rawValue <= 40400)
      {
        switch(rawValue)
        {
          case 40000:
            __int16 v2 = 28;
            goto LABEL_155;
          case 40010:
            __int16 v2 = 29;
            goto LABEL_155;
          case 40011:
            __int16 v2 = 30;
            goto LABEL_155;
          case 40012:
            __int16 v2 = 31;
            goto LABEL_155;
          case 40013:
            __int16 v2 = 32;
            goto LABEL_155;
          case 40014:
            __int16 v2 = 33;
            goto LABEL_155;
          case 40015:
            __int16 v2 = 34;
            goto LABEL_155;
          case 40020:
            __int16 v2 = 35;
            goto LABEL_155;
          case 40021:
            __int16 v2 = 36;
            goto LABEL_155;
          case 40022:
            __int16 v2 = 37;
            goto LABEL_155;
          case 40023:
            __int16 v2 = 38;
            goto LABEL_155;
          case 40024:
            __int16 v2 = 39;
            goto LABEL_155;
          case 40025:
            __int16 v2 = 40;
            goto LABEL_155;
          case 40026:
            __int16 v2 = 41;
            goto LABEL_155;
          case 40027:
            __int16 v2 = 42;
            goto LABEL_155;
          case 40028:
            __int16 v2 = 43;
            goto LABEL_155;
          case 40029:
            __int16 v2 = 44;
            goto LABEL_155;
          case 40030:
            __int16 v2 = 45;
            goto LABEL_155;
          case 40101:
            __int16 v2 = 46;
            goto LABEL_155;
          case 40102:
            __int16 v2 = 47;
            goto LABEL_155;
          case 40200:
            __int16 v2 = 48;
            goto LABEL_155;
          case 40201:
            __int16 v2 = 49;
            goto LABEL_155;
          case 40205:
            __int16 v2 = 50;
            goto LABEL_155;
          default:
            goto LABEL_157;
        }
      }
      if (rawValue > 49999)
      {
        if (rawValue > 99990)
        {
          switch(rawValue)
          {
            case 99991:
              __int16 v2 = 61;
              goto LABEL_155;
            case 99992:
              __int16 v2 = 62;
              goto LABEL_155;
            case 99993:
              __int16 v2 = 63;
              goto LABEL_155;
          }
        }
        else
        {
          switch(rawValue)
          {
            case 50000:
              __int16 v2 = 58;
              goto LABEL_155;
            case 50001:
              __int16 v2 = 59;
              goto LABEL_155;
            case 50002:
              __int16 v2 = 60;
              goto LABEL_155;
          }
        }
      }
      else
      {
        if (rawValue <= 40499)
        {
          switch(rawValue)
          {
            case 40401:
              __int16 v2 = 51;
              goto LABEL_155;
            case 40402:
              __int16 v2 = 52;
              goto LABEL_155;
            case 40403:
              __int16 v2 = 53;
              goto LABEL_155;
            case 40404:
              __int16 v2 = 54;
              goto LABEL_155;
            default:
              goto LABEL_157;
          }
        }
        switch(rawValue)
        {
          case 40500:
            __int16 v2 = 55;
            goto LABEL_155;
          case 40600:
            __int16 v2 = 56;
            goto LABEL_155;
          case 40601:
            __int16 v2 = 57;
            goto LABEL_155;
        }
      }
    }
LABEL_157:
    if (rawValue > -3301)
    {
      __int16 v2 = 128;
      switch(rawValue)
      {
        case -3300:
          __int16 v2 = 161;
          goto LABEL_155;
        case -3203:
          __int16 v2 = 152;
          goto LABEL_155;
        case -3202:
          __int16 v2 = 151;
          goto LABEL_155;
        case -3201:
          __int16 v2 = 150;
          goto LABEL_155;
        case -3200:
          __int16 v2 = 149;
          goto LABEL_155;
        case -3178:
          __int16 v2 = 160;
          goto LABEL_155;
        case -3177:
          __int16 v2 = 159;
          goto LABEL_155;
        case -3176:
          __int16 v2 = 158;
          goto LABEL_155;
        case -3175:
          __int16 v2 = 157;
          goto LABEL_155;
        case -3174:
          __int16 v2 = 156;
          goto LABEL_155;
        case -3173:
          __int16 v2 = 155;
          goto LABEL_155;
        case -3172:
          __int16 v2 = 154;
          goto LABEL_155;
        case -3171:
          __int16 v2 = 153;
          goto LABEL_155;
        case -3167:
          __int16 v2 = 148;
          goto LABEL_155;
        case -3166:
          __int16 v2 = 147;
          goto LABEL_155;
        case -3165:
          __int16 v2 = 146;
          goto LABEL_155;
        case -3164:
          __int16 v2 = 145;
          goto LABEL_155;
        case -3163:
          __int16 v2 = 144;
          goto LABEL_155;
        case -3162:
          __int16 v2 = 143;
          goto LABEL_155;
        case -3161:
          __int16 v2 = 142;
          goto LABEL_155;
        case -3159:
          __int16 v2 = 141;
          goto LABEL_155;
        case -3158:
          __int16 v2 = 140;
          goto LABEL_155;
        case -3157:
          __int16 v2 = 139;
          goto LABEL_155;
        case -3156:
          __int16 v2 = 138;
          goto LABEL_155;
        case -3155:
          __int16 v2 = 137;
          goto LABEL_155;
        case -3154:
          __int16 v2 = 136;
          goto LABEL_155;
        case -3153:
          __int16 v2 = 135;
          goto LABEL_155;
        case -3152:
          __int16 v2 = 134;
          goto LABEL_155;
        case -3151:
          __int16 v2 = 133;
          goto LABEL_155;
        case -3113:
          __int16 v2 = 132;
          goto LABEL_155;
        case -3112:
          __int16 v2 = 131;
          goto LABEL_155;
        case -3111:
          __int16 v2 = 130;
          goto LABEL_155;
        case -3110:
          __int16 v2 = 129;
          goto LABEL_155;
        case -3109:
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    if (rawValue > -4121)
    {
      switch(rawValue)
      {
        case -4120:
          __int16 v2 = 181;
          goto LABEL_155;
        case -4119:
          __int16 v2 = 180;
          goto LABEL_155;
        case -4118:
          __int16 v2 = 179;
          goto LABEL_155;
        case -4117:
          __int16 v2 = 178;
          goto LABEL_155;
        case -4116:
          __int16 v2 = 177;
          goto LABEL_155;
        case -4115:
          __int16 v2 = 176;
          goto LABEL_155;
        case -4114:
          __int16 v2 = 175;
          goto LABEL_155;
        case -4113:
          __int16 v2 = 174;
          goto LABEL_155;
        case -4112:
          __int16 v2 = 173;
          goto LABEL_155;
        case -4111:
          __int16 v2 = 172;
          goto LABEL_155;
        case -4110:
          __int16 v2 = 171;
          goto LABEL_155;
        case -4109:
          __int16 v2 = 170;
          goto LABEL_155;
        case -4108:
          __int16 v2 = 169;
          goto LABEL_155;
        case -4107:
          __int16 v2 = 168;
          goto LABEL_155;
        case -4106:
          __int16 v2 = 167;
          goto LABEL_155;
        case -4105:
          __int16 v2 = 166;
          goto LABEL_155;
        case -4104:
          __int16 v2 = 165;
          goto LABEL_155;
        case -4103:
          __int16 v2 = 164;
          goto LABEL_155;
        case -4102:
          __int16 v2 = 163;
          goto LABEL_155;
        case -4101:
          __int16 v2 = 162;
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    if (rawValue > -5108)
    {
      switch(rawValue)
      {
        case -5107:
          __int16 v2 = 188;
          goto LABEL_155;
        case -5106:
          __int16 v2 = 187;
          goto LABEL_155;
        case -5105:
          __int16 v2 = 186;
          goto LABEL_155;
        case -5104:
          __int16 v2 = 185;
          goto LABEL_155;
        case -5103:
          __int16 v2 = 184;
          goto LABEL_155;
        case -5102:
          __int16 v2 = 183;
          goto LABEL_155;
        case -5101:
          __int16 v2 = 182;
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    switch(rawValue)
    {
      case -5203:
        __int16 v2 = 191;
        goto LABEL_155;
      case -5202:
        __int16 v2 = 190;
        goto LABEL_155;
      case -5201:
        __int16 v2 = 189;
        goto LABEL_155;
    }
LABEL_229:
    if (rawValue <= -5703)
    {
      switch(rawValue)
      {
        case -6105:
          __int16 v2 = 241;
          goto LABEL_155;
        case -6104:
          __int16 v2 = 240;
          goto LABEL_155;
        case -6103:
          __int16 v2 = 239;
          goto LABEL_155;
        case -6102:
          __int16 v2 = 238;
          goto LABEL_155;
        case -6101:
          __int16 v2 = 237;
          goto LABEL_155;
        case -6100:
        case -6099:
        case -6098:
        case -6097:
        case -6096:
        case -6095:
        case -6094:
        case -6093:
        case -6092:
        case -6091:
        case -6090:
        case -6089:
        case -6088:
        case -6087:
        case -6086:
        case -6085:
        case -6084:
        case -6083:
        case -6082:
        case -6081:
        case -6080:
        case -6079:
        case -6078:
        case -6077:
        case -6076:
        case -6075:
        case -6074:
        case -6073:
        case -6072:
        case -6071:
        case -6070:
        case -6069:
        case -6068:
        case -6067:
        case -6066:
        case -6065:
        case -6064:
        case -6063:
        case -6062:
        case -6061:
        case -6060:
        case -6059:
        case -6058:
        case -6057:
        case -6056:
        case -6055:
        case -6054:
        case -6053:
        case -6052:
        case -6051:
        case -6050:
        case -6049:
        case -6048:
        case -6047:
        case -6046:
        case -6045:
        case -6044:
        case -6043:
        case -6042:
        case -6041:
        case -6040:
        case -6039:
        case -6038:
        case -6037:
        case -6036:
        case -6035:
        case -6034:
        case -6033:
        case -6032:
        case -6031:
        case -6030:
        case -6029:
        case -6028:
        case -6027:
        case -6026:
        case -6025:
        case -6024:
        case -6023:
        case -6022:
        case -6021:
        case -6020:
        case -6019:
        case -6018:
        case -6017:
        case -6016:
        case -6015:
        case -6014:
        case -6013:
        case -6012:
        case -6011:
        case -6000:
        case -5999:
        case -5998:
        case -5997:
        case -5996:
        case -5995:
        case -5994:
        case -5993:
        case -5992:
        case -5991:
        case -5990:
        case -5989:
        case -5988:
        case -5987:
        case -5986:
        case -5985:
        case -5984:
        case -5983:
        case -5982:
        case -5981:
        case -5980:
        case -5979:
        case -5978:
        case -5977:
        case -5976:
        case -5975:
        case -5974:
        case -5973:
        case -5972:
        case -5971:
        case -5970:
        case -5969:
        case -5968:
        case -5967:
        case -5966:
        case -5965:
        case -5964:
        case -5963:
        case -5962:
        case -5961:
        case -5960:
        case -5959:
        case -5958:
        case -5957:
        case -5956:
        case -5955:
        case -5954:
        case -5953:
        case -5952:
        case -5951:
        case -5950:
        case -5949:
        case -5948:
        case -5947:
        case -5946:
        case -5945:
        case -5944:
        case -5943:
        case -5942:
        case -5941:
        case -5940:
        case -5939:
        case -5938:
        case -5937:
        case -5936:
        case -5935:
        case -5934:
        case -5933:
        case -5932:
        case -5931:
        case -5930:
        case -5929:
        case -5928:
        case -5927:
        case -5926:
        case -5925:
        case -5924:
        case -5923:
        case -5922:
        case -5921:
        case -5920:
        case -5919:
        case -5918:
        case -5917:
        case -5916:
        case -5915:
        case -5914:
        case -5913:
          goto LABEL_249;
        case -6010:
          __int16 v2 = 236;
          goto LABEL_155;
        case -6009:
          __int16 v2 = 235;
          goto LABEL_155;
        case -6008:
          __int16 v2 = 234;
          goto LABEL_155;
        case -6007:
          __int16 v2 = 233;
          goto LABEL_155;
        case -6006:
          __int16 v2 = 232;
          goto LABEL_155;
        case -6005:
          __int16 v2 = 231;
          goto LABEL_155;
        case -6004:
          __int16 v2 = 230;
          goto LABEL_155;
        case -6003:
          __int16 v2 = 229;
          goto LABEL_155;
        case -6002:
          __int16 v2 = 228;
          goto LABEL_155;
        case -6001:
          __int16 v2 = 227;
          goto LABEL_155;
        case -5912:
          __int16 v2 = 226;
          goto LABEL_155;
        case -5911:
          __int16 v2 = 225;
          goto LABEL_155;
        case -5910:
          __int16 v2 = 224;
          goto LABEL_155;
        case -5909:
          __int16 v2 = 223;
          goto LABEL_155;
        case -5908:
          __int16 v2 = 222;
          goto LABEL_155;
        case -5907:
          __int16 v2 = 221;
          goto LABEL_155;
        case -5906:
          __int16 v2 = 220;
          goto LABEL_155;
        case -5905:
          __int16 v2 = 219;
          goto LABEL_155;
        case -5904:
          __int16 v2 = 218;
          goto LABEL_155;
        case -5903:
          __int16 v2 = 217;
          goto LABEL_155;
        case -5902:
          __int16 v2 = 216;
          goto LABEL_155;
        case -5901:
          __int16 v2 = 215;
          goto LABEL_155;
        default:
          switch(rawValue)
          {
            case -7013:
              __int16 v2 = 255;
              goto LABEL_155;
            case -7012:
              __int16 v2 = 254;
              goto LABEL_155;
            case -7011:
              __int16 v2 = 253;
              goto LABEL_155;
            case -7010:
              __int16 v2 = 252;
              goto LABEL_155;
            case -7009:
              __int16 v2 = 251;
              goto LABEL_155;
            case -7008:
              __int16 v2 = 250;
              goto LABEL_155;
            case -7007:
              __int16 v2 = 249;
              goto LABEL_155;
            case -7006:
              __int16 v2 = 248;
              goto LABEL_155;
            case -7005:
              __int16 v2 = 247;
              goto LABEL_155;
            case -7004:
              __int16 v2 = 246;
              goto LABEL_155;
            case -7003:
              __int16 v2 = 245;
              goto LABEL_155;
            case -7002:
              __int16 v2 = 244;
              goto LABEL_155;
            case -7001:
              __int16 v2 = 243;
              goto LABEL_155;
            case -7000:
              __int16 v2 = 242;
              goto LABEL_155;
            default:
              goto LABEL_249;
          }
      }
    }
    if (rawValue <= -5502)
    {
      if (rawValue > -5603)
      {
        if (rawValue == -5602)
        {
          __int16 v2 = 212;
          goto LABEL_155;
        }
        if (rawValue == -5601)
        {
          __int16 v2 = 211;
          goto LABEL_155;
        }
      }
      else
      {
        if (rawValue == -5702)
        {
          __int16 v2 = 214;
          goto LABEL_155;
        }
        if (rawValue == -5701)
        {
          __int16 v2 = 213;
          goto LABEL_155;
        }
      }
    }
    else
    {
      __int16 v2 = 192;
      switch(rawValue)
      {
        case -5301:
          __int16 v2 = 208;
          goto LABEL_155;
        case -5300:
        case -5299:
        case -5298:
        case -5297:
        case -5296:
        case -5295:
        case -5294:
        case -5293:
        case -5292:
        case -5291:
        case -5290:
        case -5289:
        case -5288:
        case -5287:
        case -5286:
        case -5285:
        case -5284:
        case -5283:
        case -5282:
        case -5281:
        case -5280:
        case -5279:
        case -5278:
        case -5277:
        case -5276:
        case -5275:
        case -5274:
        case -5273:
        case -5272:
        case -5271:
        case -5270:
        case -5269:
        case -5268:
        case -5267:
        case -5266:
        case -5265:
        case -5264:
        case -5263:
        case -5262:
        case -5261:
        case -5260:
        case -5259:
        case -5258:
        case -5257:
        case -5256:
        case -5255:
        case -5254:
        case -5253:
        case -5252:
        case -5251:
        case -5250:
        case -5249:
        case -5248:
        case -5247:
        case -5246:
        case -5245:
        case -5244:
        case -5243:
        case -5242:
        case -5241:
        case -5240:
        case -5239:
        case -5238:
        case -5237:
        case -5236:
        case -5235:
        case -5234:
        case -5233:
        case -5232:
        case -5231:
        case -5230:
        case -5229:
        case -5228:
        case -5227:
        case -5226:
        case -5225:
        case -5224:
        case -5223:
        case -5222:
        case -5221:
        case -5220:
          break;
        case -5219:
          __int16 v2 = 207;
          goto LABEL_155;
        case -5218:
          __int16 v2 = 206;
          goto LABEL_155;
        case -5217:
          __int16 v2 = 205;
          goto LABEL_155;
        case -5216:
          __int16 v2 = 204;
          goto LABEL_155;
        case -5215:
          __int16 v2 = 203;
          goto LABEL_155;
        case -5214:
          __int16 v2 = 202;
          goto LABEL_155;
        case -5213:
          __int16 v2 = 201;
          goto LABEL_155;
        case -5212:
          __int16 v2 = 200;
          goto LABEL_155;
        case -5211:
          __int16 v2 = 199;
          goto LABEL_155;
        case -5210:
          __int16 v2 = 198;
          goto LABEL_155;
        case -5209:
          __int16 v2 = 197;
          goto LABEL_155;
        case -5208:
          __int16 v2 = 196;
          goto LABEL_155;
        case -5207:
          __int16 v2 = 195;
          goto LABEL_155;
        case -5206:
          __int16 v2 = 194;
          goto LABEL_155;
        case -5205:
          __int16 v2 = 193;
          goto LABEL_155;
        case -5204:
          goto LABEL_155;
        default:
          if (rawValue == -5501)
          {
            __int16 v2 = 210;
            goto LABEL_155;
          }
          if (rawValue == -5401)
          {
            __int16 v2 = 209;
            goto LABEL_155;
          }
          break;
      }
    }
LABEL_249:
    if (rawValue > -10002)
    {
      if (rawValue > -8305)
      {
        if (rawValue > -7017)
        {
          switch(rawValue)
          {
            case -7016:
              __int16 v2 = 258;
              goto LABEL_155;
            case -7014:
              __int16 v2 = 256;
              goto LABEL_155;
            case -7015:
              __int16 v2 = 257;
              goto LABEL_155;
          }
        }
        else
        {
          switch(rawValue)
          {
            case -8304:
              __int16 v2 = 261;
              goto LABEL_155;
            case -8301:
              __int16 v2 = 260;
              goto LABEL_155;
            case -8001:
              __int16 v2 = 259;
              goto LABEL_155;
          }
        }
      }
      else
      {
        switch(rawValue)
        {
          case -8504:
            __int16 v2 = 274;
            goto LABEL_155;
          case -8503:
            __int16 v2 = 273;
            goto LABEL_155;
          case -8502:
            __int16 v2 = 272;
            goto LABEL_155;
          case -8501:
            __int16 v2 = 271;
            goto LABEL_155;
          case -8500:
            __int16 v2 = 270;
            goto LABEL_155;
          case -8499:
          case -8498:
          case -8497:
          case -8496:
          case -8495:
          case -8494:
          case -8493:
          case -8492:
          case -8491:
          case -8490:
          case -8489:
          case -8488:
          case -8487:
          case -8486:
          case -8485:
          case -8484:
          case -8483:
          case -8482:
          case -8481:
          case -8480:
          case -8479:
          case -8478:
          case -8477:
          case -8476:
          case -8475:
          case -8474:
          case -8473:
          case -8472:
          case -8471:
          case -8470:
          case -8469:
          case -8468:
          case -8467:
          case -8466:
          case -8465:
          case -8464:
          case -8463:
          case -8462:
          case -8461:
          case -8460:
          case -8459:
          case -8458:
          case -8457:
          case -8456:
          case -8455:
          case -8454:
          case -8453:
          case -8452:
          case -8451:
          case -8450:
          case -8449:
          case -8448:
          case -8447:
          case -8446:
          case -8445:
          case -8444:
          case -8443:
          case -8442:
          case -8441:
          case -8440:
          case -8439:
          case -8438:
          case -8437:
          case -8436:
          case -8435:
          case -8432:
          case -8431:
          case -8430:
          case -8427:
          case -8426:
          case -8425:
          case -8424:
          case -8423:
          case -8422:
          case -8421:
          case -8420:
          case -8419:
          case -8418:
          case -8417:
          case -8416:
          case -8415:
          case -8414:
          case -8413:
          case -8412:
          case -8411:
          case -8410:
          case -8409:
          case -8408:
          case -8407:
          case -8406:
          case -8405:
          case -8402:
            break;
          case -8434:
            __int16 v2 = 269;
            goto LABEL_155;
          case -8433:
            __int16 v2 = 268;
            goto LABEL_155;
          case -8429:
            __int16 v2 = 267;
            goto LABEL_155;
          case -8428:
            __int16 v2 = 266;
            goto LABEL_155;
          case -8404:
            __int16 v2 = 265;
            goto LABEL_155;
          case -8403:
            __int16 v2 = 264;
            goto LABEL_155;
          case -8401:
            __int16 v2 = 263;
            goto LABEL_155;
          case -8400:
            __int16 v2 = 262;
            goto LABEL_155;
          default:
            if (rawValue == -10001)
            {
              __int16 v2 = 276;
              goto LABEL_155;
            }
            if (rawValue == -10000)
            {
              __int16 v2 = 275;
              goto LABEL_155;
            }
            break;
        }
      }
LABEL_324:
      switch(rawValue)
      {
        case -12052:
          __int16 v2 = 383;
          goto LABEL_155;
        case -12051:
        case -12006:
        case -12004:
LABEL_447:
          __int16 v3 = 444;
          __int16 v2 = 384;
          switch(rawValue)
          {
            case -12119:
              *uint64_t v1 = 447;
              break;
            case -12118:
              *uint64_t v1 = 446;
              break;
            case -12117:
              *uint64_t v1 = 445;
              break;
            case -12116:
              goto LABEL_156;
            case -12113:
              __int16 v2 = 443;
              goto LABEL_155;
            case -12112:
              __int16 v2 = 442;
              goto LABEL_155;
            case -12111:
              __int16 v2 = 441;
              goto LABEL_155;
            case -12110:
              __int16 v2 = 440;
              goto LABEL_155;
            case -12109:
              __int16 v2 = 439;
              goto LABEL_155;
            case -12108:
              __int16 v2 = 438;
              goto LABEL_155;
            case -12107:
              __int16 v2 = 437;
              goto LABEL_155;
            case -12106:
              __int16 v2 = 436;
              goto LABEL_155;
            case -12105:
              __int16 v2 = 435;
              goto LABEL_155;
            case -12104:
              __int16 v2 = 434;
              goto LABEL_155;
            case -12103:
              __int16 v2 = 433;
              goto LABEL_155;
            case -12102:
              __int16 v2 = 432;
              goto LABEL_155;
            case -12101:
              __int16 v2 = 431;
              goto LABEL_155;
            case -12100:
              __int16 v2 = 430;
              goto LABEL_155;
            case -12099:
              __int16 v2 = 429;
              goto LABEL_155;
            case -12098:
              __int16 v2 = 428;
              goto LABEL_155;
            case -12097:
              __int16 v2 = 427;
              goto LABEL_155;
            case -12096:
              __int16 v2 = 426;
              goto LABEL_155;
            case -12095:
              __int16 v2 = 425;
              goto LABEL_155;
            case -12094:
              __int16 v2 = 424;
              goto LABEL_155;
            case -12093:
              __int16 v2 = 423;
              goto LABEL_155;
            case -12092:
              __int16 v2 = 422;
              goto LABEL_155;
            case -12091:
              __int16 v2 = 421;
              goto LABEL_155;
            case -12090:
              __int16 v2 = 420;
              goto LABEL_155;
            case -12089:
              __int16 v2 = 419;
              goto LABEL_155;
            case -12088:
              __int16 v2 = 418;
              goto LABEL_155;
            case -12087:
              __int16 v2 = 417;
              goto LABEL_155;
            case -12086:
              __int16 v2 = 416;
              goto LABEL_155;
            case -12085:
              __int16 v2 = 415;
              goto LABEL_155;
            case -12084:
              __int16 v2 = 414;
              goto LABEL_155;
            case -12083:
              __int16 v2 = 413;
              goto LABEL_155;
            case -12082:
              __int16 v2 = 412;
              goto LABEL_155;
            case -12081:
              __int16 v2 = 411;
              goto LABEL_155;
            case -12080:
              __int16 v2 = 410;
              goto LABEL_155;
            case -12079:
              __int16 v2 = 409;
              goto LABEL_155;
            case -12078:
              __int16 v2 = 408;
              goto LABEL_155;
            case -12077:
              __int16 v2 = 407;
              goto LABEL_155;
            case -12076:
              __int16 v2 = 406;
              goto LABEL_155;
            case -12075:
              __int16 v2 = 405;
              goto LABEL_155;
            case -12074:
              __int16 v2 = 404;
              goto LABEL_155;
            case -12073:
              __int16 v2 = 403;
              goto LABEL_155;
            case -12072:
              __int16 v2 = 402;
              goto LABEL_155;
            case -12071:
              __int16 v2 = 401;
              goto LABEL_155;
            case -12070:
              __int16 v2 = 400;
              goto LABEL_155;
            case -12069:
              __int16 v2 = 399;
              goto LABEL_155;
            case -12068:
              __int16 v2 = 398;
              goto LABEL_155;
            case -12067:
              __int16 v2 = 397;
              goto LABEL_155;
            case -12066:
              __int16 v2 = 396;
              goto LABEL_155;
            case -12065:
              __int16 v2 = 395;
              goto LABEL_155;
            case -12064:
              __int16 v2 = 394;
              goto LABEL_155;
            case -12062:
              __int16 v2 = 393;
              goto LABEL_155;
            case -12061:
              __int16 v2 = 392;
              goto LABEL_155;
            case -12060:
              __int16 v2 = 391;
              goto LABEL_155;
            case -12059:
              __int16 v2 = 390;
              goto LABEL_155;
            case -12058:
              __int16 v2 = 389;
              goto LABEL_155;
            case -12057:
              __int16 v2 = 388;
              goto LABEL_155;
            case -12056:
              __int16 v2 = 387;
              goto LABEL_155;
            case -12055:
              __int16 v2 = 386;
              goto LABEL_155;
            case -12054:
              __int16 v2 = 385;
              goto LABEL_155;
            case -12053:
              goto LABEL_155;
            default:
              if (rawValue <= -12126)
              {
                switch(rawValue)
                {
                  case -14003:
                    *uint64_t v1 = 461;
                    break;
                  case -14002:
                    *uint64_t v1 = 460;
                    break;
                  case -14001:
                    *uint64_t v1 = 459;
                    break;
                  case -14000:
                    *uint64_t v1 = 458;
                    break;
                  default:
                    if (rawValue == -13000)
                    {
                      *uint64_t v1 = 457;
                    }
                    else if (rawValue == -12200)
                    {
                      *uint64_t v1 = 456;
                    }
                    else
                    {
LABEL_528:
                      *uint64_t v1 = 462;
                    }
                    break;
                }
              }
              else
              {
                __int16 v3 = 448;
                switch(rawValue)
                {
                  case -12125:
                    *uint64_t v1 = 453;
                    break;
                  case -12124:
                    *uint64_t v1 = 452;
                    break;
                  case -12123:
                    *uint64_t v1 = 451;
                    break;
                  case -12122:
                    *uint64_t v1 = 450;
                    break;
                  case -12121:
                    *uint64_t v1 = 449;
                    break;
                  case -12120:
                    goto LABEL_156;
                  case -12063:
                    *uint64_t v1 = 455;
                    break;
                  case -12051:
                    *uint64_t v1 = 454;
                    break;
                  default:
                    goto LABEL_528;
                }
              }
              break;
          }
          return (CoreODIEssentials::DIPErrorCode_optional)rawValue;
        case -12050:
          __int16 v2 = 382;
          goto LABEL_155;
        case -12049:
          __int16 v2 = 381;
          goto LABEL_155;
        case -12048:
          __int16 v2 = 380;
          goto LABEL_155;
        case -12047:
          __int16 v2 = 379;
          goto LABEL_155;
        case -12046:
          __int16 v2 = 378;
          goto LABEL_155;
        case -12045:
          __int16 v2 = 377;
          goto LABEL_155;
        case -12044:
          __int16 v2 = 376;
          goto LABEL_155;
        case -12043:
          __int16 v2 = 375;
          goto LABEL_155;
        case -12042:
          __int16 v2 = 374;
          goto LABEL_155;
        case -12041:
          __int16 v2 = 373;
          goto LABEL_155;
        case -12040:
          __int16 v2 = 372;
          goto LABEL_155;
        case -12039:
          __int16 v2 = 371;
          goto LABEL_155;
        case -12038:
          __int16 v2 = 370;
          goto LABEL_155;
        case -12037:
          __int16 v2 = 369;
          goto LABEL_155;
        case -12036:
          __int16 v2 = 368;
          goto LABEL_155;
        case -12035:
          __int16 v2 = 367;
          goto LABEL_155;
        case -12034:
          __int16 v2 = 366;
          goto LABEL_155;
        case -12033:
          __int16 v2 = 365;
          goto LABEL_155;
        case -12032:
          __int16 v2 = 364;
          goto LABEL_155;
        case -12031:
          __int16 v2 = 363;
          goto LABEL_155;
        case -12030:
          __int16 v2 = 362;
          goto LABEL_155;
        case -12029:
          __int16 v2 = 361;
          goto LABEL_155;
        case -12028:
          __int16 v2 = 360;
          goto LABEL_155;
        case -12027:
          __int16 v2 = 359;
          goto LABEL_155;
        case -12026:
          __int16 v2 = 358;
          goto LABEL_155;
        case -12025:
          __int16 v2 = 357;
          goto LABEL_155;
        case -12024:
          __int16 v2 = 356;
          goto LABEL_155;
        case -12023:
          __int16 v2 = 355;
          goto LABEL_155;
        case -12022:
          __int16 v2 = 354;
          goto LABEL_155;
        case -12021:
          __int16 v2 = 353;
          goto LABEL_155;
        case -12020:
          __int16 v2 = 352;
          goto LABEL_155;
        case -12019:
          __int16 v2 = 351;
          goto LABEL_155;
        case -12018:
          __int16 v2 = 350;
          goto LABEL_155;
        case -12017:
          __int16 v2 = 349;
          goto LABEL_155;
        case -12016:
          __int16 v2 = 348;
          goto LABEL_155;
        case -12015:
          __int16 v2 = 347;
          goto LABEL_155;
        case -12014:
          __int16 v2 = 346;
          goto LABEL_155;
        case -12013:
          __int16 v2 = 345;
          goto LABEL_155;
        case -12012:
          __int16 v2 = 344;
          goto LABEL_155;
        case -12011:
          __int16 v2 = 343;
          goto LABEL_155;
        case -12010:
          __int16 v2 = 342;
          goto LABEL_155;
        case -12009:
          __int16 v2 = 341;
          goto LABEL_155;
        case -12008:
          __int16 v2 = 340;
          goto LABEL_155;
        case -12007:
          __int16 v2 = 339;
          goto LABEL_155;
        case -12005:
          __int16 v2 = 338;
          goto LABEL_155;
        case -12003:
          __int16 v2 = 337;
          goto LABEL_155;
        case -12002:
          __int16 v2 = 336;
          goto LABEL_155;
        case -12001:
          __int16 v2 = 335;
          goto LABEL_155;
        case -12000:
          __int16 v2 = 334;
          goto LABEL_155;
        default:
          __int16 v2 = 320;
          switch(rawValue)
          {
            case -11207:
              __int16 v2 = 333;
              goto LABEL_155;
            case -11202:
              __int16 v2 = 332;
              goto LABEL_155;
            case -11201:
              __int16 v2 = 331;
              goto LABEL_155;
            case -11158:
              __int16 v2 = 330;
              goto LABEL_155;
            case -11157:
              __int16 v2 = 329;
              goto LABEL_155;
            case -11156:
              __int16 v2 = 328;
              goto LABEL_155;
            case -11155:
              __int16 v2 = 327;
              goto LABEL_155;
            case -11154:
              __int16 v2 = 326;
              goto LABEL_155;
            case -11153:
              __int16 v2 = 325;
              goto LABEL_155;
            case -11152:
              __int16 v2 = 324;
              goto LABEL_155;
            case -11151:
              __int16 v2 = 323;
              goto LABEL_155;
            case -11150:
              __int16 v2 = 322;
              goto LABEL_155;
            case -11109:
              __int16 v2 = 321;
              goto LABEL_155;
            case -11108:
              goto LABEL_155;
            default:
              goto LABEL_447;
          }
      }
    }
    switch(rawValue)
    {
      case -11107:
        __int16 v2 = 319;
        break;
      case -11106:
        __int16 v2 = 318;
        break;
      case -11105:
        __int16 v2 = 317;
        break;
      case -11104:
        __int16 v2 = 316;
        break;
      case -11103:
        __int16 v2 = 315;
        break;
      case -11102:
        __int16 v2 = 314;
        break;
      case -11101:
        __int16 v2 = 313;
        break;
      case -11100:
      case -11099:
      case -11098:
      case -11097:
      case -11096:
      case -11095:
      case -11094:
      case -11093:
      case -11092:
      case -11091:
      case -11090:
      case -11089:
      case -11088:
      case -11087:
      case -11086:
      case -11085:
      case -11084:
      case -11083:
      case -11082:
      case -11081:
      case -11080:
      case -11079:
      case -11078:
      case -11077:
      case -11076:
      case -11075:
      case -11074:
      case -11073:
      case -11072:
      case -11071:
      case -11070:
      case -11069:
      case -11068:
      case -11067:
      case -11066:
      case -11065:
      case -11064:
      case -11063:
      case -11062:
      case -11061:
      case -11060:
      case -11059:
      case -11058:
      case -11057:
      case -11056:
      case -11055:
      case -11054:
      case -11053:
      case -11052:
      case -11051:
      case -11050:
      case -11049:
      case -11048:
      case -11047:
      case -11046:
      case -11045:
      case -11044:
      case -11043:
      case -11042:
      case -11041:
      case -11040:
      case -11039:
      case -11038:
      case -11037:
      case -11036:
        goto LABEL_324;
      case -11035:
        __int16 v2 = 312;
        break;
      case -11034:
        __int16 v2 = 311;
        break;
      case -11033:
        __int16 v2 = 310;
        break;
      case -11032:
        __int16 v2 = 309;
        break;
      case -11031:
        __int16 v2 = 308;
        break;
      case -11030:
        __int16 v2 = 307;
        break;
      case -11029:
        __int16 v2 = 306;
        break;
      case -11028:
        __int16 v2 = 305;
        break;
      case -11027:
        __int16 v2 = 304;
        break;
      case -11026:
        __int16 v2 = 303;
        break;
      case -11025:
        __int16 v2 = 302;
        break;
      case -11024:
        __int16 v2 = 301;
        break;
      case -11023:
        __int16 v2 = 300;
        break;
      case -11022:
        __int16 v2 = 299;
        break;
      case -11021:
        __int16 v2 = 298;
        break;
      case -11020:
        __int16 v2 = 297;
        break;
      case -11019:
        __int16 v2 = 296;
        break;
      case -11018:
        __int16 v2 = 295;
        break;
      case -11017:
        __int16 v2 = 294;
        break;
      case -11016:
        __int16 v2 = 293;
        break;
      case -11015:
        __int16 v2 = 292;
        break;
      case -11014:
        __int16 v2 = 291;
        break;
      case -11013:
        __int16 v2 = 290;
        break;
      case -11012:
        __int16 v2 = 289;
        break;
      case -11011:
        __int16 v2 = 288;
        break;
      case -11010:
        __int16 v2 = 287;
        break;
      case -11009:
        __int16 v2 = 286;
        break;
      case -11008:
        __int16 v2 = 285;
        break;
      case -11007:
        __int16 v2 = 284;
        break;
      case -11006:
        __int16 v2 = 283;
        break;
      case -11005:
        __int16 v2 = 282;
        break;
      case -11004:
        __int16 v2 = 281;
        break;
      case -11003:
        __int16 v2 = 280;
        break;
      case -11002:
        __int16 v2 = 279;
        break;
      case -11001:
        __int16 v2 = 278;
        break;
      default:
        if (rawValue != -10002) {
          goto LABEL_324;
        }
        __int16 v2 = 277;
        break;
    }
  }
  else
  {
    if (rawValue > -1408)
    {
      switch(rawValue)
      {
        case -1407:
          __int16 v2 = 83;
          goto LABEL_155;
        case -1406:
          __int16 v2 = 82;
          goto LABEL_155;
        case -1405:
          __int16 v2 = 81;
          goto LABEL_155;
        case -1404:
          __int16 v2 = 80;
          goto LABEL_155;
        case -1403:
          __int16 v2 = 79;
          goto LABEL_155;
        case -1402:
          __int16 v2 = 78;
          goto LABEL_155;
        case -1401:
          __int16 v2 = 77;
          goto LABEL_155;
        case -1317:
          __int16 v2 = 98;
          goto LABEL_155;
        case -1316:
          __int16 v2 = 97;
          goto LABEL_155;
        case -1315:
          __int16 v2 = 96;
          goto LABEL_155;
        case -1314:
          __int16 v2 = 95;
          goto LABEL_155;
        case -1311:
          __int16 v2 = 94;
          goto LABEL_155;
        case -1310:
          __int16 v2 = 93;
          goto LABEL_155;
        case -1309:
          __int16 v2 = 92;
          goto LABEL_155;
        case -1308:
          __int16 v2 = 91;
          goto LABEL_155;
        case -1307:
          __int16 v2 = 90;
          goto LABEL_155;
        case -1306:
          __int16 v2 = 89;
          goto LABEL_155;
        case -1305:
          __int16 v2 = 88;
          goto LABEL_155;
        case -1304:
          __int16 v2 = 87;
          goto LABEL_155;
        case -1303:
          __int16 v2 = 86;
          goto LABEL_155;
        case -1302:
          __int16 v2 = 85;
          goto LABEL_155;
        case -1301:
          __int16 v2 = 84;
          goto LABEL_155;
        case -1204:
          __int16 v2 = 76;
          goto LABEL_155;
        case -1203:
          __int16 v2 = 75;
          goto LABEL_155;
        case -1202:
          __int16 v2 = 74;
          goto LABEL_155;
        case -1201:
          __int16 v2 = 73;
          goto LABEL_155;
        case -1109:
          __int16 v2 = 72;
          goto LABEL_155;
        case -1108:
          __int16 v2 = 71;
          goto LABEL_155;
        case -1107:
          __int16 v2 = 70;
          goto LABEL_155;
        case -1106:
          __int16 v2 = 69;
          goto LABEL_155;
        case -1105:
          __int16 v2 = 68;
          goto LABEL_155;
        case -1104:
          __int16 v2 = 67;
          goto LABEL_155;
        case -1103:
          __int16 v2 = 66;
          goto LABEL_155;
        case -1102:
          __int16 v2 = 65;
          goto LABEL_155;
        case -1101:
          __int16 v2 = 64;
          goto LABEL_155;
        default:
          goto LABEL_157;
      }
    }
    switch(rawValue)
    {
      case -2120:
        __int16 v2 = 119;
        break;
      case -2119:
        __int16 v2 = 118;
        break;
      case -2118:
        __int16 v2 = 117;
        break;
      case -2117:
        __int16 v2 = 116;
        break;
      case -2116:
        __int16 v2 = 115;
        break;
      case -2115:
        __int16 v2 = 114;
        break;
      case -2114:
        __int16 v2 = 113;
        break;
      case -2113:
        __int16 v2 = 112;
        break;
      case -2112:
        __int16 v2 = 111;
        break;
      case -2111:
        __int16 v2 = 110;
        break;
      case -2110:
        __int16 v2 = 109;
        break;
      case -2109:
        __int16 v2 = 108;
        break;
      case -2108:
        __int16 v2 = 107;
        break;
      case -2107:
        __int16 v2 = 106;
        break;
      case -2106:
        __int16 v2 = 105;
        break;
      case -2105:
        __int16 v2 = 104;
        break;
      case -2104:
        __int16 v2 = 103;
        break;
      case -2103:
        __int16 v2 = 102;
        break;
      case -2102:
        __int16 v2 = 101;
        break;
      case -2101:
        __int16 v2 = 100;
        break;
      default:
        switch(rawValue)
        {
          case -3108:
            __int16 v2 = 127;
            goto LABEL_155;
          case -3107:
            __int16 v2 = 126;
            goto LABEL_155;
          case -3106:
            __int16 v2 = 125;
            goto LABEL_155;
          case -3105:
            __int16 v2 = 124;
            goto LABEL_155;
          case -3104:
            __int16 v2 = 123;
            goto LABEL_155;
          case -3103:
            __int16 v2 = 122;
            goto LABEL_155;
          case -3102:
            __int16 v2 = 121;
            goto LABEL_155;
          case -3101:
            __int16 v2 = 120;
            goto LABEL_155;
          default:
            if (rawValue != -131600) {
              goto LABEL_157;
            }
            __int16 v2 = 99;
            break;
        }
        break;
    }
  }
LABEL_155:
  __int16 v3 = v2;
LABEL_156:
  *uint64_t v1 = v3;
  return (CoreODIEssentials::DIPErrorCode_optional)rawValue;
}

uint64_t DIPErrorCode.rawValue.getter()
{
  return qword_214D1D0A8[*v0];
}

BOOL sub_214B5E110(__int16 *a1, __int16 *a2)
{
  return qword_214D1D0A8[*a1] == qword_214D1D0A8[*a2];
}

uint64_t sub_214B5E134()
{
  return sub_214D1AD48();
}

uint64_t sub_214B5E184()
{
  return sub_214D1AD18();
}

uint64_t sub_214B5E1BC()
{
  return sub_214D1AD48();
}

CoreODIEssentials::DIPErrorCode_optional sub_214B5E208(Swift::Int *a1)
{
  return DIPErrorCode.init(rawValue:)(*a1);
}

void sub_214B5E210(void *a1@<X8>)
{
  *a1 = qword_214D1D0A8[*v1];
}

CoreODIEssentials::DIPErrorPropertyKey_optional __swiftcall DIPErrorPropertyKey.init(rawValue:)(Swift::String rawValue)
{
  __int16 v2 = v1;
  uint64_t v3 = sub_214D1AC28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      char v5 = 1;
      goto LABEL_9;
    case 2:
      char v5 = 2;
      goto LABEL_9;
    case 3:
      char v5 = 3;
      goto LABEL_9;
    case 4:
      char v5 = 4;
      goto LABEL_9;
    case 5:
      char v5 = 5;
      goto LABEL_9;
    case 6:
      char v5 = 6;
LABEL_9:
      char v6 = v5;
      break;
    case 7:
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    default:
      char v6 = 25;
      break;
  }
  char *v2 = v6;
  return result;
}

unint64_t DIPErrorPropertyKey.rawValue.getter()
{
  unint64_t result = 0x666B726F576F6E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x69766F72506F6E69;
      break;
    case 2:
      unint64_t result = 0x6C666B726F577073;
      break;
    case 3:
      unint64_t result = 0x6469766F72507073;
      break;
    case 4:
      unint64_t result = 0x7475626972747461;
      break;
    case 5:
    case 0xC:
    case 0x10:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x5255726576726573;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0x4974736575716572;
      break;
    case 0xA:
      unint64_t result = 0x61737265766E6F63;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xE:
      unint64_t result = 0x63655264756F6C63;
      break;
    case 0xF:
      unint64_t result = 0x6552656369766564;
      break;
    case 0x11:
      unint64_t result = 0x6761735574726563;
      break;
    case 0x12:
      unint64_t result = 0x6573616261746164;
      break;
    case 0x13:
      unint64_t result = 0x74737973656C6966;
      break;
    case 0x14:
      unint64_t result = 0x69796C7265646E75;
      break;
    case 0x15:
      unint64_t result = 0x636E456567616D69;
      break;
    case 0x16:
      unint64_t result = 1701273968;
      break;
    case 0x17:
      unint64_t result = 0x636E75614C6F6E69;
      break;
    case 0x18:
      unint64_t result = 0x746E756F43797274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214B5E74C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1C85C(*a1, *a2);
}

uint64_t sub_214B5E758()
{
  return sub_214D1AD48();
}

uint64_t sub_214B5E7C0()
{
  DIPErrorPropertyKey.rawValue.getter();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214B5E824()
{
  return sub_214D1AD48();
}

CoreODIEssentials::DIPErrorPropertyKey_optional sub_214B5E888(Swift::String *a1)
{
  return DIPErrorPropertyKey.init(rawValue:)(*a1);
}

unint64_t sub_214B5E894@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DIPErrorPropertyKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_214B5E8BC()
{
  unint64_t v0 = self;
  uint64_t v1 = (void *)sub_214D1A028();
  v3[4] = sub_214B5E99C;
  v3[5] = 0;
  v3[0] = MEMORY[0x263EF8330];
  v3[1] = 1107296256;
  v3[2] = sub_214B5EAA8;
  v3[3] = &block_descriptor_5;
  __int16 v2 = _Block_copy(v3);
  objc_msgSend(v0, sel_setUserInfoValueProviderForDomain_provider_, v1, v2);
  _Block_release(v2);
}

uint64_t sub_214B5E99C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (sub_214D1A038() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v10 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_13:
    uint64_t result = sub_214B5F440(a1);
    goto LABEL_14;
  }
  if (sub_214D1A038() == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
    }
  }
  uint64_t result = sub_214B5FBCC(a1);
LABEL_14:
  *(void *)(a4 + 24) = MEMORY[0x263F8D310];
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v15;
  return result;
}

id sub_214B5EAA8(uint64_t a1, void *a2)
{
  void (*v3)(void *__return_ptr);
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void v12[3];
  uint64_t v13;
  uint64_t vars8;

  unint64_t v3 = *(void (**)(void *__return_ptr))(a1 + 32);
  sub_214D1A038();
  swift_retain();
  uint64_t v4 = a2;
  v3(v12);
  swift_release();

  swift_bridgeObjectRelease();
  char v5 = v13;
  if (v13)
  {
    char v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6, v6);
    uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    char v10 = (void *)sub_214D1ABB8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    char v10 = 0;
  }
  return v10;
}

_OWORD *sub_214B5EC20(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_214B5EC30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_214B5EC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE44D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B5ECF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_214B5ED54()
{
  unint64_t result = qword_26ACE3A08;
  if (!qword_26ACE3A08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE3A08);
  }
  return result;
}

unint64_t sub_214B5ED98()
{
  unint64_t result = qword_26784CC70;
  if (!qword_26784CC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CC70);
  }
  return result;
}

unint64_t sub_214B5EDF0()
{
  unint64_t result = qword_26ACE4130;
  if (!qword_26ACE4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4130);
  }
  return result;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DIPErrorCode(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE33) {
    goto LABEL_17;
  }
  if (a2 + 461 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 461 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 461;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 461;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 461;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1CE;
  int v8 = v6 - 462;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPErrorCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 461 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 461 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE33) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE32)
  {
    unsigned int v6 = ((a2 - 65075) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 + 461;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B5EFB4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(_WORD *)unint64_t result = a2 + 461;
        break;
    }
  }
  return result;
}

uint64_t sub_214B5EFDC(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_214B5EFE4(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPErrorCode()
{
  return &type metadata for DIPErrorCode;
}

uint64_t getEnumTagSinglePayload for DIPErrorPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE8) {
    goto LABEL_17;
  }
  if (a2 + 24 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 24) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 24;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 24;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v8 = v6 - 25;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DIPErrorPropertyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B5F158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPErrorPropertyKey()
{
  return &type metadata for DIPErrorPropertyKey;
}

uint64_t destroy for DIPInvocation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DIPInvocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DIPInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for DIPInvocation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPInvocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPInvocation()
{
  return &type metadata for DIPInvocation;
}

unint64_t sub_214B5F3EC()
{
  unint64_t result = qword_26ACE4240;
  if (!qword_26ACE4240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4240);
  }
  return result;
}

uint64_t sub_214B5F440(void *a1)
{
  if (!a1) {
    return 0x3E6C696E3CLL;
  }
  id v2 = a1;
  long long v3 = (void *)sub_214D199A8();
  id v4 = objc_msgSend(v3, sel_userInfo);
  uint64_t v5 = sub_214D19F98();

  if (!*(void *)(v5 + 16) || (uint64_t v6 = sub_214B87FEC(0x636F766E49504944, 0xEE00736E6F697461), (v7 & 1) == 0))
  {
    long long v36 = 0u;
    long long v37 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_214B5EC30(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1))
  {
LABEL_14:
    sub_214B5ECF4((uint64_t)&v36);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3978);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *(void *)(*(void *)&v34[0] + 16);
    if (v8)
    {
      unint64_t v9 = v8 + 1;
      uint64_t v10 = *(void *)&v34[0] + 56 * v8;
      while (1)
      {
        unint64_t v11 = *(void *)(v10 - 16);
        uint64_t v12 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0) {
          uint64_t v12 = *(void *)(v10 - 24) & 0xFFFFFFFFFFFFLL;
        }
        if (v12) {
          break;
        }
        --v9;
        v10 -= 56;
        if (v9 <= 1) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v36 = 40;
      *((void *)&v36 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_214D1A108();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v3, sel_code));
  if ((unsigned __int16)v36 != 462) {
    sub_214D1A0B8();
  }
  *(void *)&long long v36 = 0;
  *((void *)&v36 + 1) = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v36 = 0x20726F727245;
  *((void *)&v36 + 1) = 0xE600000000000000;
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  id v14 = objc_msgSend(v3, sel_domain);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  *(void *)&v34[0] = objc_msgSend(v3, sel_code);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v13 = v36;
  long long v39 = v36;
  id v15 = objc_msgSend(v3, sel_userInfo);
  uint64_t v16 = sub_214D19F98();

  if (*(void *)(v16 + 16) && (uint64_t v17 = sub_214B87FEC(0x65706F7250504944, 0xED00007365697472), (v18 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v36);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v37 + 1))
  {

    sub_214B5ECF4((uint64_t)&v36);
    return v13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44E0);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_56:
    return v13;
  }
  uint64_t v19 = *(void *)&v34[0];
  if (!*(void *)(*(void *)&v34[0] + 16))
  {

    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  uint64_t result = sub_214D1A108();
  int64_t v21 = 0;
  uint64_t v22 = *(void *)(*(void *)&v34[0] + 64);
  uint64_t v32 = *(void *)&v34[0] + 64;
  uint64_t v23 = 1 << *(unsigned char *)(*(void *)&v34[0] + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v33 = (unint64_t)(v23 + 63) >> 6;
  if ((v24 & v22) == 0) {
    goto LABEL_33;
  }
LABEL_31:
  unint64_t v26 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  unint64_t v27 = v26 | (v21 << 6);
  while (2)
  {
    uint64_t v28 = *(void *)(v19 + 56);
    LOBYTE(v34[0]) = *(unsigned char *)(*(void *)(v19 + 48) + v27);
    sub_214B5EC30(v28 + 32 * v27, (uint64_t)v34 + 8);
    while (1)
    {
      sub_214B5EC8C((uint64_t)v34, (uint64_t)&v36);
      if (!v38)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_214D1A108();

        return v39;
      }
      sub_214B5EC20((long long *)((char *)&v36 + 8), v34);
      sub_214D1A908();
      sub_214D1A108();
      sub_214D1A908();
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      if (v25) {
        goto LABEL_31;
      }
LABEL_33:
      int64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v29 < v33)
      {
        unint64_t v30 = *(void *)(v32 + 8 * v29);
        if (v30) {
          goto LABEL_36;
        }
        int64_t v31 = v21 + 2;
        ++v21;
        if (v29 + 1 < v33)
        {
          unint64_t v30 = *(void *)(v32 + 8 * v31);
          if (v30) {
            goto LABEL_39;
          }
          int64_t v21 = v29 + 1;
          if (v29 + 2 < v33)
          {
            unint64_t v30 = *(void *)(v32 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_36;
            }
            int64_t v31 = v29 + 3;
            int64_t v21 = v29 + 2;
            if (v29 + 3 < v33) {
              break;
            }
          }
        }
      }
LABEL_50:
      unint64_t v25 = 0;
      uint64_t v35 = 0;
      memset(v34, 0, sizeof(v34));
    }
    unint64_t v30 = *(void *)(v32 + 8 * v31);
    if (v30)
    {
LABEL_39:
      int64_t v29 = v31;
LABEL_36:
      unint64_t v25 = (v30 - 1) & v30;
      unint64_t v27 = __clz(__rbit64(v30)) + (v29 << 6);
      int64_t v21 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v33)
    {
      int64_t v21 = v33 - 1;
      goto LABEL_50;
    }
    unint64_t v30 = *(void *)(v32 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_36;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_214B5FBCC(void *a1)
{
  uint64_t v51 = sub_214D19AA8();
  uint64_t v2 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v3);
  char v50 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0x3E6C696E3CLL;
  }
  id v5 = a1;
  uint64_t v6 = (void *)sub_214D199A8();
  DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v6, sel_code));
  if ((unsigned __int16)v58 != 462) {
    sub_214D1A0B8();
  }
  id v8 = objc_msgSend(v6, sel_userInfo);
  uint64_t v9 = sub_214D19F98();

  *(void *)&long long v58 = 0;
  *((void *)&v58 + 1) = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v58 = 0x6F4420726F727245;
  *((void *)&v58 + 1) = 0xEF203D206E69616DLL;
  id v10 = objc_msgSend(v6, sel_domain);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  *(void *)&v56[0] = objc_msgSend(v6, sel_code);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  long long v61 = v58;
  if (*(void *)(v9 + 16))
  {
    uint64_t v11 = sub_214B87FEC(0x65706F7250504944, 0xED00007365697472);
    if (v12)
    {
      uint64_t v46 = v6;
      uint64_t v47 = a1;
      sub_214B5EC30(*(void *)(v9 + 56) + 32 * v11, (uint64_t)&v58);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44E0);
      if (swift_dynamicCast())
      {
        uint64_t v48 = v2;
        uint64_t v45 = v9;
        uint64_t v13 = *(void *)&v56[0];
        uint64_t result = sub_214D1A108();
        int64_t v14 = 0;
        uint64_t v15 = *(void *)(v13 + 64);
        char v49 = (void (**)(char *, uint64_t))(v13 + 64);
        uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
        uint64_t v17 = -1;
        if (v16 < 64) {
          uint64_t v17 = ~(-1 << v16);
        }
        unint64_t v18 = v17 & v15;
        int64_t v52 = (unint64_t)(v16 + 63) >> 6;
        int64_t v44 = v52 - 1;
        if ((v17 & v15) == 0) {
          goto LABEL_16;
        }
LABEL_14:
        unint64_t v20 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v21 = v20 | (v14 << 6);
LABEL_15:
        uint64_t v22 = *(void *)(v13 + 56);
        LOBYTE(v56[0]) = *(unsigned char *)(*(void *)(v13 + 48) + v21);
        sub_214B5EC30(v22 + 32 * v21, (uint64_t)v56 + 8);
        while (1)
        {
          sub_214B5EC8C((uint64_t)v56, (uint64_t)&v58);
          if (!v60) {
            break;
          }
          char v19 = v58;
          sub_214B5EC20((long long *)((char *)&v58 + 8), v56);
          sub_214D1A108();
          uint64_t v54 = 0;
          unint64_t v55 = 0xE000000000000000;
          char v53 = v19;
          sub_214D1A908();
          sub_214D1A108();
          sub_214D1A908();
          uint64_t v54 = 539822345;
          unint64_t v55 = 0xE400000000000000;
          sub_214D1A108();
          swift_bridgeObjectRelease();
          sub_214D1A108();
          swift_bridgeObjectRelease();
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          if (v18) {
            goto LABEL_14;
          }
LABEL_16:
          int64_t v23 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_65;
          }
          if (v23 < v52)
          {
            unint64_t v24 = (unint64_t)v49[v23];
            if (v24) {
              goto LABEL_19;
            }
            int64_t v25 = v14 + 2;
            ++v14;
            if (v23 + 1 < v52)
            {
              unint64_t v24 = (unint64_t)v49[v25];
              if (v24) {
                goto LABEL_22;
              }
              int64_t v14 = v23 + 1;
              if (v23 + 2 < v52)
              {
                unint64_t v24 = (unint64_t)v49[v23 + 2];
                if (v24)
                {
                  v23 += 2;
                  goto LABEL_19;
                }
                int64_t v25 = v23 + 3;
                int64_t v14 = v23 + 2;
                if (v23 + 3 < v52)
                {
                  unint64_t v24 = (unint64_t)v49[v25];
                  if (!v24)
                  {
                    while (1)
                    {
                      int64_t v23 = v25 + 1;
                      if (__OFADD__(v25, 1)) {
                        goto LABEL_66;
                      }
                      if (v23 >= v52)
                      {
                        int64_t v14 = v44;
                        goto LABEL_33;
                      }
                      unint64_t v24 = (unint64_t)v49[v23];
                      ++v25;
                      if (v24) {
                        goto LABEL_19;
                      }
                    }
                  }
LABEL_22:
                  int64_t v23 = v25;
LABEL_19:
                  unint64_t v18 = (v24 - 1) & v24;
                  unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
                  int64_t v14 = v23;
                  goto LABEL_15;
                }
              }
            }
          }
LABEL_33:
          unint64_t v18 = 0;
          uint64_t v57 = 0;
          memset(v56, 0, sizeof(v56));
        }
        swift_release();
        a1 = v47;
        uint64_t v6 = v46;
        uint64_t v9 = v45;
        uint64_t v2 = v48;
        if (!*(void *)(v45 + 16)) {
          goto LABEL_54;
        }
        goto LABEL_39;
      }
      a1 = v47;
      uint64_t v6 = v46;
    }
  }
  if (!*(void *)(v9 + 16)) {
    goto LABEL_54;
  }
LABEL_39:
  uint64_t v26 = sub_214B87FEC(0x636F766E49504944, 0xEE00736E6F697461);
  if ((v27 & 1) == 0) {
    goto LABEL_54;
  }
  sub_214B5EC30(*(void *)(v9 + 56) + 32 * v26, (uint64_t)&v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3978);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_54;
  }
  uint64_t v28 = *(void *)&v56[0];
  if (!*(void *)(*(void *)&v56[0] + 16) || (uint64_t result = sub_214D1A108(), (v29 = *(void *)(v28 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v39 = sub_214D1A038();
    if (*(void *)(v9 + 16) && (uint64_t v41 = sub_214B87FEC(v39, v40), (v42 & 1) != 0))
    {
      sub_214B5EC30(*(void *)(v9 + 56) + 32 * v41, (uint64_t)&v58);
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v59 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
      if (swift_dynamicCast())
      {
        int64_t v43 = *(void **)&v56[0];
        sub_214D1A108();
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = 0xE000000000000000;
        *(void *)&v56[0] = v43;
        sub_214D1A908();
        *(void *)&long long v58 = 0x202D09090ALL;
        *((void *)&v58 + 1) = 0xE500000000000000;
        sub_214D1A108();
        swift_bridgeObjectRelease();
        sub_214D1A108();

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {

      sub_214B5ECF4((uint64_t)&v58);
    }
    return v61;
  }
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v47 = a1;
  uint64_t v48 = v28;
  char v49 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v30 = v29 + 1;
  uint64_t v31 = v28 + 56 * v29;
  while (v30 - 2 < *(void *)(v28 + 16))
  {
    uint64_t v32 = *(void *)(v31 - 16);
    int64_t v52 = *(void *)(v31 - 24);
    uint64_t v33 = *(void *)(v31 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    char v34 = v50;
    sub_214D19A08();
    uint64_t v35 = sub_214D19A18();
    uint64_t v37 = v36;
    (*v49)(v34, v51);
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v35;
    *((void *)&v58 + 1) = v37;
    sub_214D1A108();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    *(void *)&v56[0] = v33;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = 539822345;
    *((void *)&v58 + 1) = 0xE400000000000000;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    int64_t v38 = v52;
    swift_bridgeObjectRelease();
    if (!v38 && v32 == 0xE000000000000000 || (sub_214D1ABC8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v58 = 9;
      *((void *)&v58 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_214D1A108();
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v48;
    --v30;
    v31 -= 56;
    if (v30 <= 1)
    {
      swift_bridgeObjectRelease();
      a1 = v47;
      uint64_t v6 = v46;
      uint64_t v9 = v45;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_214B60668()
{
  type metadata accessor for DIPODNHelper();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_214B60700();
  qword_26784CC78 = v0;
  return result;
}

uint64_t static DIPODNHelper.sharedInstance.getter()
{
  if (qword_26784C858 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_214B60700()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  type metadata accessor for AsyncWorkQueue();
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v5 + 112) = 1;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 120) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(void *)(v0 + 168) = 45;
  *(void *)(v0 + 176) = 0xE100000000000000;
  *(_OWORD *)(v0 + 184) = xmmword_214D1DF20;
  *(void *)(v0 + 200) = v6;
  uint64_t v7 = sub_214D1A368();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  id v8 = (void *)swift_allocObject();
  v8[2] = 0;
  void v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  sub_214BF1024((uint64_t)v4, (uint64_t)&unk_26784CDB0, (uint64_t)v8);
  swift_release();
  return v0;
}

uint64_t sub_214B60868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_214B60888, a4, 0);
}

uint64_t sub_214B60888()
{
  sub_214B608E8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B608E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = v6;
  char v12 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD000000000000023, 0x8000000214D2F280, &v12);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_214D1A368();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  unint64_t v8 = sub_214B67DD0();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v1;
  v9[3] = v8;
  v9[4] = v1;
  swift_retain_n();
  sub_214BF1024((uint64_t)v5, (uint64_t)&unk_26784CD88, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_214B60A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x270FA2498](sub_214B60A5C, a4, 0);
}

uint64_t sub_214B60A5C()
{
  type metadata accessor for DeviceInformation();
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 48) = v1;
  swift_defaultActor_initialize();
  *(void *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  void *v2 = v0;
  v2[1] = sub_214B60B14;
  return sub_214C008AC();
}

uint64_t sub_214B60B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (void *)*v5;
  v10[8] = v4;
  swift_task_dealloc();
  uint64_t v11 = v10[5];
  if (v4)
  {
    char v12 = sub_214B60D3C;
  }
  else
  {
    v10[9] = a4;
    v10[10] = a3;
    v10[11] = a2;
    v10[12] = a1;
    char v12 = sub_214B60C68;
  }
  return MEMORY[0x270FA2498](v12, v11, 0);
}

uint64_t sub_214B60C68()
{
  uint64_t v9 = v0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v4 = (void *)v3[17];
  uint64_t v5 = (void *)v3[18];
  *(int8x16_t *)(v3 + 17) = vextq_s8(*(int8x16_t *)(v0 + 88), *(int8x16_t *)(v0 + 88), 8uLL);
  v3[19] = v1;
  v3[20] = v2;
  sub_214B69D68(v4, v5);
  char v8 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ELL, 0x8000000214D2F2D0, &v8);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214B60D3C()
{
  uint64_t v13 = v0;
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = *(void *)(v2 + 176);
  v10[0] = *(void *)(v2 + 168);
  v10[1] = v3;
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v4 = v0[2];
  unint64_t v5 = v0[3];
  LOBYTE(v11) = 5;
  CoreODILogger.error(_:category:)(v4, v5, &v11);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = v0[5];
  unint64_t v7 = *(void *)(v6 + 176);
  uint64_t v11 = *(void *)(v6 + 168);
  unint64_t v12 = v7;
  LOBYTE(v10[0]) = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ELL, 0x8000000214D2F2D0, v10);
  swift_release();
  swift_bridgeObjectRelease();
  char v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_214B60EBC(uint64_t a1, void *a2, void *a3, void *a4, unsigned int a5, void *a6)
{
  uint64_t v9 = a2;
  uint64_t v10 = *(void (**)(void *, unint64_t, void *, unint64_t, void *, unint64_t, void, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v11 = v9;
    uint64_t v9 = (void *)sub_214D19B68();
    unint64_t v13 = v12;

    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    unint64_t v16 = 0xF000000000000000;
    if (a4) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  swift_retain();
  unint64_t v13 = 0xF000000000000000;
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  id v14 = a3;
  a3 = (void *)sub_214D19B68();
  unint64_t v16 = v15;

  if (a4)
  {
LABEL_4:
    id v17 = a4;
    a4 = (void *)sub_214D19B68();
    unint64_t v19 = v18;

    goto LABEL_8;
  }
LABEL_7:
  unint64_t v19 = 0xF000000000000000;
LABEL_8:
  id v20 = a6;
  v10(v9, v13, a3, v16, a4, v19, a5, a6);

  sub_214B59EAC((uint64_t)a4, v19);
  sub_214B59EAC((uint64_t)a3, v16);
  sub_214B59EAC((uint64_t)v9, v13);
  return swift_release();
}

uint64_t sub_214B61008()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_214B61028, v0, 0);
}

uint64_t sub_214B61028()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 184);
  v0[5] = v2;
  unint64_t v3 = *(void *)(v1 + 192);
  v0[6] = v3;
  if (v3 >> 60 == 15)
  {
    unint64_t v4 = sub_214B67DD0();
    unint64_t v5 = (void *)swift_task_alloc();
    v0[7] = v5;
    *unint64_t v5 = v0;
    v5[1] = sub_214B61180;
    uint64_t v6 = v0[4];
    uint64_t v7 = MEMORY[0x263F06F78];
    return MEMORY[0x270FA2360](v0 + 2, v1, v4, 0xD000000000000013, 0x8000000214D2F240, sub_214B6AA4C, v6, v7);
  }
  else
  {
    sub_214B6A3F8(v2, v3);
    char v8 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v8(v2, v3);
  }
}

uint64_t sub_214B61180()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    unint64_t v4 = sub_214B61348;
  }
  else {
    unint64_t v4 = sub_214B612AC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B612AC()
{
  unint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = *(void *)(v1 + 184);
  unint64_t v5 = *(void *)(v1 + 192);
  *(void *)(v1 + 184) = v3;
  *(void *)(v1 + 192) = v2;
  sub_214B6A3A0(v3, v2);
  sub_214B59EAC(v4, v5);
  sub_214B6A3F8(v0[5], v0[6]);
  uint64_t v6 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v6(v3, v2);
}

uint64_t sub_214B61348()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_214B61360(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD78);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4, v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v10);
  unint64_t v12 = (char *)&v30 - v11;
  unint64_t v13 = a2[24];
  if (v13 >> 60 == 15)
  {
    id v14 = a2 + 25;
    swift_beginAccess();
    unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    if (*(void *)(a2[25] + 16))
    {
      v15(v9, a1, v4);
      swift_beginAccess();
      unint64_t v16 = *v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *id v14 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v16 = sub_214B87130(0, *(void *)(v16 + 16) + 1, 1, v16);
        *id v14 = v16;
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        unint64_t v16 = sub_214B87130(v18 > 1, v19 + 1, 1, v16);
        *id v14 = v16;
      }
      *(void *)(v16 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, v9, v4);
      swift_endAccess();
    }
    else
    {
      v15(v12, a1, v4);
      swift_beginAccess();
      unint64_t v20 = *v14;
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      *id v14 = v20;
      if ((v21 & 1) == 0)
      {
        unint64_t v20 = sub_214B87130(0, *(void *)(v20 + 16) + 1, 1, v20);
        *id v14 = v20;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v23 = *(void *)(v20 + 24);
      unint64_t v24 = v22 + 1;
      if (v22 >= v23 >> 1)
      {
        unint64_t v27 = v20;
        unint64_t v28 = *(void *)(v20 + 16);
        uint64_t v29 = sub_214B87130(v23 > 1, v22 + 1, 1, v27);
        unint64_t v22 = v28;
        unint64_t v20 = v29;
        *id v14 = v29;
      }
      *(void *)(v20 + 16) = v24;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v22, v12, v4);
      swift_endAccess();
      id v25 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), sel_init);
      uint64_t v35 = sub_214B6AA54;
      uint64_t v36 = a2;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      uint64_t v33 = sub_214B61920;
      char v34 = &block_descriptor_72;
      uint64_t v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_vffg4lwI2HftPvpO_, v26);
      _Block_release(v26);
    }
  }
  else
  {
    uint64_t aBlock = a2[23];
    uint64_t v32 = v13;
    sub_214B6A3A0(aBlock, v13);
    sub_214D1A2F8();
  }
}

uint64_t sub_214B61704(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD78);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *(void *)(a4 + 200);
  uint64_t v13 = *(void *)(result + 16);
  if (v13)
  {
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    uint64_t v15 = v8 + 16;
    id v14 = v16;
    unint64_t v17 = result + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v21 = result;
    swift_bridgeObjectRetain();
    unint64_t v24 = a2;
    unint64_t v19 = a2 >> 60;
    uint64_t v22 = 0x8000000214D2ECE0;
    uint64_t v23 = 0x8000000214D2F240;
    while (1)
    {
      v14(v11, v17, v7);
      if (a3)
      {
        v26[0] = a3;
        id v20 = a3;
      }
      else
      {
        if (v19 < 0xF)
        {
          v26[0] = v25;
          v26[1] = v24;
          sub_214B6A3A0(v25, v24);
          sub_214D1A2F8();
          goto LABEL_5;
        }
        LOBYTE(v26[0]) = -94;
        v26[0] = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)v26, 0, 0, 0xD000000000000052, v22, 0xD000000000000013, v23, 146);
      }
      sub_214D1A2E8();
LABEL_5:
      (*(void (**)(char *, uint64_t))(v15 - 8))(v11, v7);
      v17 += v18;
      if (!--v13) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_214B61920(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)sub_214D19B68();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_214B59EAC((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_214B619CC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_214B619EC, v1, 0);
}

uint64_t sub_214B619EC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_214D1A868();
    uint64_t v4 = (void **)(v1 + 32);
    uint64_t v5 = v2;
    do
    {
      id v6 = *v4;
      v4 += 2;
      id v7 = v6;
      sub_214D1A848();
      sub_214D1A878();
      sub_214D1A888();
      sub_214D1A858();
      --v5;
    }
    while (v5);
    uint64_t v8 = v23;
    sub_214D1A868();
    id v9 = (void **)(v1 + 40);
    do
    {
      unint64_t v12 = *v9;
      v9 += 2;
      uint64_t v10 = v12;
      if (!v12)
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
        uint64_t v10 = 0;
      }
      id v11 = v10;
      sub_214D1A848();
      sub_214D1A878();
      sub_214D1A888();
      sub_214D1A858();
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  v0[4] = v8;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_214D1A938();
    swift_bridgeObjectRelease_n();
    unint64_t v3 = v21;
  }
  else
  {
    uint64_t v13 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_214D1ABF8();
    if (swift_dynamicCastMetatype() || (uint64_t v19 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_13:
      swift_bridgeObjectRelease();
    }
    else
    {
      id v20 = (void *)(v13 + 32);
      while (*v20)
      {
        ++v20;
        if (!--v19) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = v13 | 1;
    }
  }
  v0[5] = v3;
  uint64_t v14 = v0[3];
  unint64_t v15 = sub_214B67DD0();
  uint64_t v16 = swift_task_alloc();
  v0[6] = v16;
  *(void *)(v16 + 16) = v8;
  *(void *)(v16 + 24) = v3;
  unint64_t v17 = (void *)swift_task_alloc();
  v0[7] = v17;
  *unint64_t v17 = v0;
  uint64_t v18 = MEMORY[0x263F8EE60];
  v17[1] = sub_214B61CBC;
  return MEMORY[0x270FA2360](v17, v14, v15, 0xD00000000000002ALL, 0x8000000214D2F1F0, sub_214B6AA18, v16, v18 + 8);
}

uint64_t sub_214B61CBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_214B61E50;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    swift_task_dealloc();
    uint64_t v4 = sub_214B61DE4;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B61DE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B61E50()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B61EC8(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x263F8EE78];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_214B67D50(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_214D19888();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_214D198B8();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_214D19888();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_214D198B8();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_214D1C1E0;
        *(void *)(v16 + 56) = MEMORY[0x263F8E778];
        *(void *)(v16 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_214D1A078();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_214B67D50(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v2;
        *(void *)(v21 + 40) = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_214B62270(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_214D1A948();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t result = sub_214B67D90(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v3 = v12;
      do
      {
        MEMORY[0x2166B0290](v5, a1);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_214B67D90(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_214B67D90(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        ++v5;
        *(void *)(v3 + 16) = v7 + 1;
        sub_214B5EC20(v11, (_OWORD *)(v3 + 32 * v7 + 32));
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      uint64_t v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_214B67D90(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_214B67D90(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v10 + 1;
        sub_214B5EC20(v11, (_OWORD *)(v3 + 32 * v10 + 32));
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_214B624A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_214B67D90(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784CC80);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_214B67D90(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_214B67D90(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_214B5EC20(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_214B625D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_214B6A264(0, &qword_26784CD08);
    uint64_t v2 = sub_214D1A268();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_214B62660(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCF8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4, v7);
  sub_214B6A264(0, &qword_26784CD00);
  long long v8 = (void *)sub_214D1A258();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_214B6A244;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B625D8;
  aBlock[3] = &block_descriptor_34;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchGeoCodingsForAddresses_completion_, v8, v11);
  _Block_release(v11);
}

uint64_t sub_214B6283C()
{
  return sub_214D1A2F8();
}

void sub_214B62884(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5, v8);
  id v9 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  sub_214B6A264(0, &qword_26784CD00);
  uint64_t v10 = (void *)sub_214D1A258();
  sub_214B62270(a3);
  uint64_t v11 = (void *)sub_214D1A258();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_214B6AA2C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B62B1C;
  aBlock[3] = &block_descriptor_67_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_updateGeoCodingsForAddresses_locations_completion_, v10, v11, v14);
  _Block_release(v14);
}

uint64_t sub_214B62AB8(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
    return sub_214D1A2E8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
    return sub_214D1A2F8();
  }
}

void sub_214B62B1C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_214B62B88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD90);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2, v5);
  id v6 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_214B6AB18;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B6311C;
  aBlock[3] = &block_descriptor_83;
  id v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_fetchConfigWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_214B62D4C(uint64_t a1)
{
  if (!a1
    || (sub_214C10ADC(a1, (uint64_t)&v13),
        sub_214B6AC38((uint64_t)&v13, (uint64_t)v12, (uint64_t *)&unk_26ACE3B90),
        sub_214B6AC38((uint64_t)v12, (uint64_t)&v30, (uint64_t *)&unk_26ACE3B90),
        sub_214B6AC9C((uint64_t)&v30) == 1))
  {
    if (qword_26ACE3C08 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_214D19EE8();
    __swift_project_value_buffer(v2, (uint64_t)qword_26ACE3AD0);
    uint64_t v3 = sub_214D19EC8();
    os_log_type_t v4 = sub_214D1A4A8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_214B4E000, v3, v4, "No config from asd.", v5, 2u);
      MEMORY[0x2166B1540](v5, -1, -1);
    }

    if (a1)
    {
      strcpy((char *)&v30, "daemonVersion");
      HIWORD(v30) = -4864;
      sub_214D1A728();
      if (*(void *)(a1 + 16) && (unint64_t v6 = sub_214B88110((uint64_t)&v13), (v7 & 1) != 0))
      {
        sub_214B5EC30(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v46);
      }
      else
      {
        long long v46 = 0u;
        long long v47 = 0u;
      }
      sub_214B6ABE4((uint64_t)&v13);
      if (*((void *)&v47 + 1))
      {
        int v8 = swift_dynamicCast();
        if (v8) {
          uint64_t v9 = v13;
        }
        else {
          uint64_t v9 = 0;
        }
        if (v8) {
          uint64_t v10 = *((void *)&v13 + 1);
        }
        else {
          uint64_t v10 = 0;
        }
        goto LABEL_22;
      }
    }
    else
    {
      long long v46 = 0u;
      long long v47 = 0u;
    }
    sub_214B5ECF4((uint64_t)&v46);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
LABEL_22:
    sub_214B6ABBC(v12);
    *(void *)&long long v30 = v9;
    *((void *)&v30 + 1) = v10;
    sub_214B6AC38((uint64_t)v12, (uint64_t)&v31, &qword_26ACE44B8);
    long long v42 = 0uLL;
    long long v43 = xmmword_214D1DF30;
    LOBYTE(v44) = 0;
    *((void *)&v44 + 1) = 0;
    char v45 = 2;
    long long v25 = 0u;
    long long v26 = xmmword_214D1DF30;
    long long v27 = (unint64_t)v44;
    char v28 = 2;
    long long v21 = v38;
    long long v22 = v39;
    long long v23 = v40;
    long long v24 = v41;
    long long v17 = v34;
    long long v18 = v35;
    long long v19 = v36;
    long long v20 = v37;
    long long v13 = v30;
    long long v14 = v31;
    long long v15 = v32;
    long long v16 = v33;
    char v29 = 0;
    goto LABEL_23;
  }
  long long v25 = v42;
  long long v26 = v43;
  long long v27 = v44;
  char v28 = v45;
  long long v21 = v38;
  long long v22 = v39;
  long long v23 = v40;
  long long v24 = v41;
  long long v17 = v34;
  long long v18 = v35;
  long long v19 = v36;
  long long v20 = v37;
  long long v13 = v30;
  long long v14 = v31;
  long long v15 = v32;
  long long v16 = v33;
  char v29 = 1;
LABEL_23:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD90);
  return sub_214D1A2F8();
}

uint64_t sub_214B6311C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_214D19F98();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_214B631AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    v21[0] = MEMORY[0x263F8EE78];
    sub_214B67DB0(0, v4, 0);
    uint64_t v5 = v21[0];
    char v7 = (char *)(a3 + 89);
    do
    {
      uint64_t v8 = *(void *)(v7 - 49);
      char v9 = *(v7 - 25);
      char v10 = *(v7 - 24);
      char v11 = *(v7 - 1);
      char v12 = *v7;
      uint64_t v22 = *(void *)(v7 - 57);
      uint64_t v23 = v8;
      long long v24 = *(_OWORD *)(v7 - 41);
      char v25 = v9;
      char v26 = v10;
      long long v27 = *(_OWORD *)(v7 - 17);
      char v28 = v11;
      char v29 = v12;
      uint64_t v13 = sub_214C57AD0();
      v21[0] = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_214B67DB0(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v21[0];
      }
      *(void *)(v5 + 16) = v15 + 1;
      *(void *)(v5 + 8 * v15 + 32) = v13;
      v7 += 64;
      --v4;
    }
    while (v4);
  }
  uint64_t v16 = *(void *)(v3 + 176);
  uint64_t v22 = *(void *)(v3 + 168);
  uint64_t v23 = v16;
  v21[0] = 5;
  v21[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A108();
  sub_214D1A108();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784CC80);
  MEMORY[0x2166AFD40](v5, v17);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0, 0xE000000000000000, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  long long v19 = (void *)sub_214D1A028();
  sub_214B624A8(v5);
  swift_bridgeObjectRelease();
  id v20 = (id)sub_214D1A258();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_dKsJLlNX54lzKt5n_eqF2XJh3hHBJQf2K_, v19, v20);
}

uint64_t sub_214B63434(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_214B63458, v2, 0);
}

uint64_t sub_214B63458()
{
  char v10 = v0;
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  v0[6] = *(void *)(v1 + 168);
  v0[7] = *(void *)(v1 + 176);
  v9[0] = 5;
  v9[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A108();
  CoreODILogger.info(_:category:)(0, 0xE000000000000000, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_214B67DD0();
  uint64_t v5 = swift_task_alloc();
  v0[8] = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CC98);
  *unint64_t v6 = v0;
  v6[1] = sub_214B63614;
  return MEMORY[0x270FA2360](v0 + 2, v1, v4, 0xD000000000000024, 0x8000000214D2EAB0, sub_214B67E48, v5, v7);
}

uint64_t sub_214B63614()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    unint64_t v4 = sub_214B63B34;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    unint64_t v4 = sub_214B6373C;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B6373C()
{
  uint64_t v54 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD000000000000005;
  unint64_t v45 = 0x8000000214D2EAE0;
  sub_214D1A108();
  sub_214D1A108();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784CC80);
  MEMORY[0x2166AFD40](v1, v2);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000026, 0x8000000214D2EAE0, &v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    DeviceDataField.init(from:)(v5, (uint64_t)&v44);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      unint64_t v6 = (uint64_t (*)(void))v0[1];
      return v6();
    }
    long long v34 = v0;
    uint64_t v35 = v1;
    swift_bridgeObjectRelease();
    unint64_t v9 = v44;
    unint64_t v10 = v45;
    uint64_t v11 = v46;
    uint64_t v12 = v47;
    char v13 = v48;
    char v14 = v49;
    uint64_t v40 = v51;
    uint64_t v42 = v50;
    char v36 = v53;
    char v38 = v52;
    unint64_t v15 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_214B87144(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    id v18 = v15;
    if (v17 >= v16 >> 1) {
      id v18 = sub_214B87144((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v18[2] = v17 + 1;
    uint64_t v8 = v18;
    long long v19 = &v18[8 * v17];
    v19[4] = v9;
    v19[5] = v10;
    v19[6] = v11;
    v19[7] = v12;
    *((unsigned char *)v19 + 64) = v13;
    *((unsigned char *)v19 + 65) = v14;
    v19[9] = v42;
    v19[10] = v40;
    *((unsigned char *)v19 + 88) = v38;
    *((unsigned char *)v19 + 89) = v36;
    uint64_t v20 = v3 - 1;
    if (v20)
    {
      uint64_t v22 = (uint64_t *)(v35 + 40);
      do
      {
        uint64_t v23 = *v22;
        swift_bridgeObjectRetain_n();
        DeviceDataField.init(from:)(v23, (uint64_t)&v44);
        swift_bridgeObjectRelease();
        unint64_t v24 = v44;
        unint64_t v25 = v45;
        uint64_t v26 = v47;
        char v27 = v48;
        char v43 = v49;
        uint64_t v39 = v51;
        uint64_t v41 = v50;
        char v37 = v52;
        char v28 = v53;
        uint64_t v29 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_214B87144(0, v8[2] + 1, 1, v8);
        }
        unint64_t v31 = v8[2];
        unint64_t v30 = v8[3];
        long long v32 = v8;
        if (v31 >= v30 >> 1) {
          long long v32 = sub_214B87144((void *)(v30 > 1), v31 + 1, 1, v8);
        }
        v32[2] = v31 + 1;
        uint64_t v8 = v32;
        long long v33 = &v32[8 * v31];
        v33[4] = v24;
        v33[5] = v25;
        v33[6] = v29;
        v33[7] = v26;
        *((unsigned char *)v33 + 64) = v27;
        *((unsigned char *)v33 + 65) = v43;
        v33[9] = v41;
        v33[10] = v39;
        *((unsigned char *)v33 + 88) = v37;
        ++v22;
        *((unsigned char *)v33 + 89) = v28;
        --v20;
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    uint64_t v0 = v34;
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  long long v21 = (uint64_t (*)(void *))v0[1];
  return v21(v8);
}

uint64_t sub_214B63B34()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_214B63B98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD98);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2, v5);
  id v6 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  uint64_t v7 = (void *)sub_214D1A028();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_214B6AE8C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B63FC4;
  aBlock[3] = &block_descriptor_89;
  unint64_t v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_evrtH713YbFfEOzk_completion_, v7, v10);
  _Block_release(v10);
}

uint64_t sub_214B63D7C(uint64_t a1, id a2)
{
  if (a2)
  {
    id v6 = a2;
    id v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD98);
    return sub_214D1A2E8();
  }
  if (!a1)
  {
    LOBYTE(v6) = -101;
    id v6 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D2F390, 0, (unsigned __int8 *)&v6, 0, 0, 0xD000000000000052, 0x8000000214D2ECE0, 0xD000000000000024, 0x8000000214D2EAB0, 227);
    goto LABEL_3;
  }
  uint64_t v4 = sub_214B63E7C(a1);
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  if (v4) {
    uint64_t v5 = (void *)v4;
  }
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD98);
  return sub_214D1A2F8();
}

uint64_t sub_214B63E7C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_214B67DB0(0, v2, 0);
  uint64_t v3 = v10;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_214B5EC30(i, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784CC80);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_214B67DB0(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_214B67DB0(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v6 + 1;
      *(void *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_214B63FC4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_214D1A268();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_214B64060()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  uint64_t v1 = dispatch_group_create();
  dispatch_group_enter(v1);
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26ACEBA50;
  sub_214D1A498();
  sub_214D19E78();

  id v3 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  *(void *)(v4 + 24) = v1;
  v10[4] = sub_214B67EC8;
  v10[5] = v4;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_214B6311C;
  v10[3] = &block_descriptor_6;
  uint64_t v5 = _Block_copy(v10);
  swift_retain();
  id v6 = v1;
  swift_release();
  objc_msgSend(v3, sel_fetchConfigWithCompletion_, v5);
  _Block_release(v5);

  LOBYTE(v5) = sub_214B98BC0(0.5);
  id v7 = (id)qword_26ACEBA50;
  if (v5) {
    sub_214D1A4A8();
  }
  else {
    sub_214D1A498();
  }
  sub_214D19E78();

  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v8;
}

void sub_214B642A4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(void *)(a2 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a3);
}

uint64_t sub_214B64310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 216) = a8;
  *(void *)(v9 + 224) = v8;
  *(void *)(v9 + 200) = a6;
  *(void *)(v9 + 208) = a7;
  *(unsigned char *)(v9 + 328) = a5;
  *(void *)(v9 + 184) = a3;
  *(void *)(v9 + 192) = a4;
  *(void *)(v9 + 168) = a1;
  *(void *)(v9 + 176) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  *(void *)(v9 + 232) = swift_task_alloc();
  uint64_t v10 = sub_214D19F68();
  *(void *)(v9 + 240) = v10;
  *(void *)(v9 + 248) = *(void *)(v10 - 8);
  *(void *)(v9 + 256) = swift_task_alloc();
  *(void *)(v9 + 264) = swift_task_alloc();
  *(void *)(v9 + 272) = type metadata accessor for ODISignpost();
  *(void *)(v9 + 280) = swift_task_alloc();
  *(void *)(v9 + 288) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B64460, v8, 0);
}

uint64_t sub_214B64460()
{
  if (qword_26784C990 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[35];
  uint64_t v3 = qword_2678639F0;
  uint64_t v2 = *(void *)algn_2678639F8;
  char v4 = byte_267863A00;
  uint64_t v5 = (void *)qword_267863A08;
  int v6 = byte_267863A10;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = v0[35];
  uint64_t v8 = v0[36];
  uint64_t v10 = v0[28];
  uint64_t v11 = v0[22];

  sub_214B6A2A8(v9, v8);
  sub_214D19F58();
  unint64_t v12 = sub_214B67DD0();
  v0[37] = v12;
  uint64_t v13 = swift_task_alloc();
  v0[38] = v13;
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = 2;
  char v14 = (void *)swift_task_alloc();
  v0[39] = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD48);
  *char v14 = v0;
  v14[1] = sub_214B646A8;
  return MEMORY[0x270FA2360](v0 + 2, v10, v12, 0xD00000000000003ELL, 0x8000000214D2EF20, sub_214B6A688, v13, v15);
}

uint64_t sub_214B646A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 224);
    char v4 = sub_214B652AC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 224);
    swift_task_dealloc();
    char v4 = sub_214B647D0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B647D0()
{
  char v62 = v0;
  uint64_t v1 = v0;
  uint64_t v3 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v51 = v0[30];
  uint64_t v4 = v0[24];
  uint64_t v5 = v1[23];
  uint64_t v56 = v1[4];
  unint64_t v57 = v1[5];
  uint64_t v54 = v1[2];
  uint64_t v55 = v1[6];
  unint64_t v58 = v1[7];
  unint64_t v59 = v1[3];
  int v53 = *((_DWORD *)v1 + 16);
  swift_bridgeObjectRetain();
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_214D1C1F0;
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = sub_214B5F3EC();
  uint64_t v7 = MEMORY[0x263F8D4F8];
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v4;
  uint64_t v8 = MEMORY[0x263F8D530];
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = v8;
  *(unsigned char *)(v6 + 72) = 0;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214D19F58();
  unint64_t v9 = sub_214D19F48();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v51);
  unint64_t v10 = sub_214D19F48();
  if (v9 < v10)
  {
    __break(1u);
    goto LABEL_24;
  }
  double v11 = (double)(v9 - v10) / 1000000000.0;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  v1[12] = 0;
  v1[13] = 0xE000000000000000;
  sub_214D1A108();
  *((_DWORD *)v1 + 17) = v53;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A408();
  sub_214D1A108();
  uint64_t v12 = v1[12];
  unint64_t v13 = v1[13];
  LOBYTE(v60) = 9;
  CoreODILogger.debug(_:category:)(v12, v13, &v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = 0x206174616474;
  unint64_t v61 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  if (v59 >> 60 != 15)
  {
    sub_214B6A3F8(v54, v59);
    v1[17] = sub_214B61EC8(v54, v59);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    sub_214B6A878();
    sub_214D1A008();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v54, v59);
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v14 = v60;
  LOBYTE(v60) = 12;
  CoreODILogger.debug(_:category:)(v14, v61, &v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = 0x656D737365737361;
  unint64_t v61 = 0xEB0000000020746ELL;
  swift_bridgeObjectRetain();
  if (v57 >> 60 != 15)
  {
    sub_214B6A3F8(v56, v57);
    v1[19] = sub_214B61EC8(v56, v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    sub_214B6A878();
    sub_214D1A008();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v56, v57);
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v15 = v60;
  LOBYTE(v60) = 12;
  CoreODILogger.debug(_:category:)(v15, v61, &v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = 0x206174616463;
  unint64_t v61 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  unint64_t v16 = v58;
  if (v58 >> 60 != 15)
  {
    sub_214B6A3F8(v55, v58);
    v1[18] = sub_214B61EC8(v55, v58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    sub_214B6A878();
    sub_214D1A008();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v55, v58);
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v17 = v60;
  LOBYTE(v60) = 12;
  CoreODILogger.debug(_:category:)(v17, v61, &v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v1[26];
  char v19 = sub_214D1A398();
  if (v18)
  {
    uint64_t v20 = v1[37];
    uint64_t v22 = v1[28];
    uint64_t v21 = v1[29];
    uint64_t v24 = v1[26];
    uint64_t v23 = v1[27];
    uint64_t v25 = v1[24];
    uint64_t v49 = v1[23];
    char v50 = v19;
    uint64_t v26 = sub_214D1A368();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 1, 1, v26);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v20;
    *(void *)(v27 + 32) = v56;
    *(void *)(v27 + 40) = v57;
    *(void *)(v27 + 48) = v54;
    *(void *)(v27 + 56) = v59;
    *(void *)(v27 + 64) = v55;
    *(void *)(v27 + 72) = v58;
    *(_DWORD *)(v27 + 80) = v53;
    *(double *)(v27 + 88) = v11;
    *(void *)(v27 + 96) = v22;
    *(void *)(v27 + 104) = v49;
    *(void *)(v27 + 112) = v25;
    *(void *)(v27 + 120) = v24;
    *(void *)(v27 + 128) = v23;
    *(unsigned char *)(v27 + 136) = v50 & 1;
    *(void *)(v27 + 144) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_214B6A650(v24);
    sub_214B6A3F8(v54, v59);
    unint64_t v16 = v58;
    sub_214B6A3F8(v56, v57);
    sub_214B6A3F8(v55, v58);
    id v28 = 0;
    sub_214BF1024(v21, (uint64_t)&unk_26784CD58, v27);
    swift_release();
  }
  if (*((unsigned char *)v1 + 328) == 1 && v58 >> 60 == 15)
  {
    if (qword_26ACE41D8 == -1)
    {
LABEL_13:
      uint64_t v29 = v1[36];
      uint64_t v30 = v1[33];
      uint64_t v32 = v1[30];
      uint64_t v31 = v1[31];
      uint64_t v33 = v1[25];
      id v34 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      sub_214D19E78();

      LOBYTE(v60) = -124;
      uint64_t v35 = sub_214C034C4(v33);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D2F020, 0, (unsigned __int8 *)&v60, 0, v35, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000003ELL, 0x8000000214D2EF20, 353);
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
      unint64_t v16 = v57;
LABEL_18:
      sub_214B6A30C(v29);
      sub_214B59EAC(v56, v16);
      sub_214B59EAC(v54, v59);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v42 = (uint64_t (*)(void))v1[1];
      goto LABEL_20;
    }
LABEL_24:
    swift_once();
    goto LABEL_13;
  }
  if (v57 >> 60 == 15)
  {
    if (qword_26ACE41D8 != -1) {
      swift_once();
    }
    uint64_t v29 = v1[36];
    uint64_t v36 = v1[33];
    uint64_t v37 = v1[30];
    uint64_t v38 = v1[31];
    uint64_t v39 = v1[25];
    id v40 = (id)qword_26ACEBA50;
    sub_214D1A4A8();
    sub_214D19E78();

    LOBYTE(v60) = 127;
    uint64_t v41 = sub_214C034C4(v39);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D2EFC0, 0, (unsigned __int8 *)&v60, 0, v41, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000003ELL, 0x8000000214D2EF20, 357);
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    uint64_t v56 = v55;
    goto LABEL_18;
  }
  uint64_t v43 = v1[36];
  uint64_t v44 = v1[33];
  uint64_t v45 = v1[30];
  uint64_t v46 = v1[31];
  uint64_t v47 = v1[21];
  BOOL v52 = v1[40] == 0;
  sub_214B6A3A0(v56, v57);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  sub_214B6A30C(v43);
  sub_214B59EAC(v56, v57);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v47 = v54;
  *(void *)(v47 + 8) = v59;
  *(void *)(v47 + 16) = v56;
  *(void *)(v47 + 24) = v57;
  *(void *)(v47 + 32) = v55;
  *(void *)(v47 + 40) = v58;
  *(_DWORD *)(v47 + 48) = v53;
  *(double *)(v47 + 56) = v11;
  *(unsigned char *)(v47 + 64) = v52;
  uint64_t v42 = (uint64_t (*)(void))v1[1];
LABEL_20:
  return v42();
}

uint64_t sub_214B652AC()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void **)(v0 + 320);
  swift_task_dealloc();
  id v2 = v1;
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v0 + 320);
  id v4 = (id)qword_26ACEBA50;
  sub_214D1A4A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_214D1C1F0;
  uint64_t v6 = (void *)sub_214D199A8();
  id v7 = objc_msgSend(v6, sel_code);

  uint64_t v8 = MEMORY[0x263F8D750];
  *(void *)(v5 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v5 + 64) = v8;
  *(void *)(v5 + 32) = v7;
  swift_getErrorValue();
  uint64_t v9 = sub_214D1AC88();
  uint64_t v11 = v10;
  *(void *)(v5 + 96) = MEMORY[0x263F8D310];
  *(void *)(v5 + 104) = sub_214B5F3EC();
  *(void *)(v5 + 72) = v9;
  *(void *)(v5 + 80) = v11;
  sub_214D19E78();

  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v0 + 208);
  char v13 = sub_214D1A398();
  if (v12)
  {
    char v14 = v13;
    uint64_t v15 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v16 = *(void *)(v0 + 232);
    uint64_t v44 = v16;
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 216);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = sub_214D1A368();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v16, 1, 1, v22);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v17;
    *(void *)(v23 + 24) = v15;
    *(_OWORD *)(v23 + 32) = xmmword_214D1DF20;
    *(_OWORD *)(v23 + 48) = xmmword_214D1DF20;
    *(_OWORD *)(v23 + 64) = xmmword_214D1DF20;
    *(_DWORD *)(v23 + 80) = 0;
    *(void *)(v23 + 88) = 0xBFF0000000000000;
    *(void *)(v23 + 96) = v17;
    *(void *)(v23 + 104) = v20;
    *(void *)(v23 + 112) = v21;
    *(void *)(v23 + 120) = v19;
    *(void *)(v23 + 128) = v18;
    *(unsigned char *)(v23 + 136) = v14 & 1;
    *(void *)(v23 + 144) = v1;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_214B6A650(v19);
    sub_214B6A3F8(0, 0xF000000000000000);
    sub_214B6A3F8(0, 0xF000000000000000);
    sub_214B6A3F8(0, 0xF000000000000000);
    id v24 = v1;
    sub_214BF1024(v44, (uint64_t)&unk_26784CD58, v23);
    swift_release();
  }
  if (v1)
  {
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void *)(v0 + 240);
    uint64_t v28 = *(void *)(v0 + 248);
    uint64_t v29 = *(void *)(v0 + 200);
    id v30 = v1;
    uint64_t v31 = sub_214C034C4(v29);
    sub_214B69394((char *)v1, v31);
    swift_bridgeObjectRelease();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    sub_214B6A30C(v25);
    sub_214B59EAC(0, 0xF000000000000000);
  }
  else
  {
    if (*(unsigned char *)(v0 + 328) == 1)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      uint64_t v32 = *(void *)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 264);
      uint64_t v34 = *(void *)(v0 + 240);
      uint64_t v35 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 200);
      id v37 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      sub_214D19E78();

      v46[0] = -124;
      uint64_t v38 = sub_214C034C4(v36);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D2F020, 0, v46, 0, v38, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000003ELL, 0x8000000214D2EF20, 353);
    }
    else
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      uint64_t v32 = *(void *)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 264);
      uint64_t v34 = *(void *)(v0 + 240);
      uint64_t v35 = *(void *)(v0 + 248);
      uint64_t v39 = *(void *)(v0 + 200);
      id v40 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      sub_214D19E78();

      unsigned __int8 v45 = 127;
      uint64_t v41 = sub_214C034C4(v39);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D2EFC0, 0, &v45, 0, v41, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000003ELL, 0x8000000214D2EF20, 357);
    }
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    sub_214B6A30C(v32);
  }
  sub_214B59EAC(0, 0xF000000000000000);
  sub_214B59EAC(0, 0xF000000000000000);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

void sub_214B6586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD60);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6, v9);
  id v10 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_214B6A94C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B60EBC;
  aBlock[3] = &block_descriptor_59;
  char v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_MypqGKKWznx4xnYa_l8OCYbP9LFIvnTwG_ygOPXTiKN0J02x0j_, a2, a3, v13);
  _Block_release(v13);
}

uint64_t sub_214B65A48(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, id a8, uint64_t a9)
{
  if (a8)
  {
    id v9 = a8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD60);
    return sub_214D1A2E8();
  }
  else
  {
    sub_214B6A3F8(a1, a2);
    sub_214B6A3F8(a3, a4);
    sub_214B6A3F8(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD60);
    return sub_214D1A2F8();
  }
}

uint64_t sub_214B65B00(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 176) = v18;
  *(unsigned char *)(v9 + 256) = v17;
  *(_OWORD *)(v9 + 144) = v15;
  *(_OWORD *)(v9 + 160) = v16;
  *(void *)(v9 + 136) = v14;
  *(double *)(v9 + 128) = a1;
  *(_DWORD *)(v9 + 248) = v13;
  *(void *)(v9 + 112) = a9;
  *(void *)(v9 + 120) = v12;
  *(void *)(v9 + 96) = a7;
  *(void *)(v9 + 104) = a8;
  *(void *)(v9 + 80) = a5;
  *(void *)(v9 + 88) = a6;
  sub_214B6A3F8(a5, a6);
  return MEMORY[0x270FA2498](sub_214B65BB0, v14, 0);
}

uint64_t sub_214B65BB0()
{
  uint64_t v34 = v0;
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  unint64_t v1 = *(void *)(v0 + 88);
  id v2 = (id)qword_26ACEBA50;
  sub_214D1A498();
  sub_214D19E78();

  if (v1 >> 60 == 15)
  {
    unint64_t v3 = *(void *)(v0 + 120);
    if (v3 >> 60 == 15)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    else
    {
      uint64_t v10 = *(void *)(v0 + 128);
      unint64_t v21 = *(void *)(v0 + 104);
      uint64_t v22 = *(void *)(v0 + 112);
      uint64_t v23 = *(void *)(v0 + 96);
      char v31 = 12;
      sub_214B6A3F8(v22, v3);
      sub_214B6A3F8(v23, v21);
      sub_214B6A3F8(v22, v3);
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD00000000000001BLL;
      unint64_t v33 = 0x8000000214D2F110;
      sub_214D1A108();
      v24._countAndFlagsBits = 0xD00000000000001BLL;
      v24._object = (void *)0x8000000214D2F110;
      CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v31, v24, (Swift::String_optional)0, 0);
      swift_bridgeObjectRelease();
      sub_214B59EAC(v22, v3);
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      unsigned int v9 = *(_DWORD *)(v0 + 248);
      uint64_t v7 = *(void *)(v0 + 112);
      uint64_t v8 = *(void *)(v0 + 120);
      unint64_t v11 = 0xC000000000000000;
      uint64_t v4 = *(void *)(v0 + 96);
      uint64_t v5 = *(void *)(v0 + 104);
    }
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 112);
    unint64_t v13 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 96);
    unint64_t v15 = *(void *)(v0 + 104);
    uint64_t v18 = *(void *)(v0 + 80);
    unint64_t v17 = *(void *)(v0 + 88);
    char v31 = 11;
    sub_214B6A3F8(v18, v17);
    unint64_t v19 = v15;
    uint64_t v10 = v12;
    sub_214B6A3F8(v16, v19);
    sub_214B6A3F8(v14, v13);
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD000000000000016;
    unint64_t v33 = 0x8000000214D2F130;
    sub_214D1A108();
    v20._countAndFlagsBits = 0xD000000000000016;
    v20._object = (void *)0x8000000214D2F130;
    CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v31, v20, (Swift::String_optional)0, 0);
    swift_bridgeObjectRelease();
    sub_214B59EAC(v18, v17);
    swift_bridgeObjectRelease();
    unsigned int v9 = *(_DWORD *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 80);
    unint64_t v11 = *(void *)(v0 + 88);
  }
  *(void *)(v0 + 224) = v8;
  *(void *)(v0 + 232) = v10;
  *(_DWORD *)(v0 + 252) = v9;
  *(void *)(v0 + 208) = v11;
  *(void *)(v0 + 216) = v7;
  *(void *)(v0 + 192) = v5;
  *(void *)(v0 + 200) = v6;
  *(void *)(v0 + 184) = v4;
  char v25 = *(unsigned char *)(v0 + 256);
  uint64_t v26 = *(int **)(v0 + 160);
  *(void *)(v0 + 16) = v4;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v11;
  *(void *)(v0 + 48) = v7;
  *(void *)(v0 + 56) = v8;
  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 72) = v10;
  id v30 = (uint64_t (*)(uint64_t, BOOL, uint64_t))((char *)v26 + *v26);
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_214B65F6C;
  uint64_t v28 = *(void *)(v0 + 176);
  return v30(v0 + 16, (v25 & 1) == 0, v28);
}

uint64_t sub_214B65F6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B6607C, v1, 0);
}

uint64_t sub_214B6607C()
{
  sub_214B6A8D4(v0[23], v0[24], v0[25], v0[26], v0[27], v0[28]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_214B660EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 280) = v18;
  *(void *)(v9 + 288) = v8;
  *(unsigned char *)(v9 + 153) = v15;
  *(void *)(v9 + 264) = v14;
  *(void *)(v9 + 272) = v17;
  *(_OWORD *)(v9 + 248) = v13;
  *(_OWORD *)(v9 + 232) = v12;
  *(void *)(v9 + 216) = a7;
  *(void *)(v9 + 224) = a8;
  *(void *)(v9 + 200) = a5;
  *(void *)(v9 + 208) = a6;
  *(void *)(v9 + 184) = a3;
  *(void *)(v9 + 192) = a4;
  *(void *)(v9 + 168) = a1;
  *(void *)(v9 + 176) = a2;
  *(void *)(v9 + 296) = type metadata accessor for ODISignpost();
  *(void *)(v9 + 304) = swift_task_alloc();
  *(void *)(v9 + 312) = swift_task_alloc();
  *(unsigned char *)(v9 + 154) = *v16;
  *(unsigned char *)(v9 + 155) = v16[1];
  return MEMORY[0x270FA2498](sub_214B661E0, v8, 0);
}

uint64_t sub_214B661E0()
{
  uint64_t v83 = v0;
  if (qword_26784C988 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = qword_2678639C8;
  uint64_t v3 = unk_2678639D0;
  char v4 = byte_2678639D8;
  uint64_t v5 = (void *)qword_2678639E0;
  int v6 = byte_2678639E8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v10 = *(void **)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  unint64_t v12 = *(void *)(v0 + 248);

  sub_214B6A2A8(v9, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_214B7E89C(inited);
  *(void *)(v0 + 320) = v14;
  uint64_t v15 = v14;
  switch(v12 >> 62)
  {
    case 1uLL:
      int v17 = *(_DWORD *)(v0 + 240);
      int v18 = *(_DWORD *)(v0 + 244);
      BOOL v19 = __OFSUB__(v18, v17);
      LODWORD(v16) = v18 - v17;
      if (!v19)
      {
        uint64_t v16 = (int)v16;
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_42;
    case 2uLL:
      uint64_t v20 = *(void *)(*(void *)(v0 + 240) + 16);
      uint64_t v21 = *(void *)(*(void *)(v0 + 240) + 24);
      BOOL v19 = __OFSUB__(v21, v20);
      uint64_t v16 = v21 - v20;
      if (!v19) {
        goto LABEL_11;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    case 3uLL:
      goto LABEL_16;
    default:
      uint64_t v16 = *(unsigned __int8 *)(v0 + 254);
LABEL_11:
      if (v16 != 16)
      {
LABEL_16:
        if (qword_26ACE41D8 != -1) {
          swift_once();
        }
        uint64_t v34 = *(void *)(v0 + 288);
        id v35 = (id)qword_26ACEBA50;
        sub_214D1A4A8();
        sub_214D19E78();

        LOBYTE(v82[0]) = 99;
        uint64_t v36 = sub_214C034C4(v15);
        swift_bridgeObjectRelease();
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)v82, 0, v36, 0xD000000000000052, 0x8000000214D2ECE0, 0xD000000000000084, 0x8000000214D2ED80, 393);
        goto LABEL_19;
      }
      uint64_t v81 = v14;
      if (qword_26ACE41E0 != -1) {
        swift_once();
      }
      uint64_t v23 = *(void *)(v0 + 240);
      unint64_t v22 = *(void *)(v0 + 248);
      uint64_t v24 = sub_214D19EE8();
      __swift_project_value_buffer(v24, (uint64_t)qword_26ACEBA58);
      sub_214B6A3A0(v23, v22);
      sub_214B6A3A0(v23, v22);
      char v25 = sub_214D19EC8();
      os_log_type_t v26 = sub_214D1A498();
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v29 = *(void *)(v0 + 240);
      unint64_t v28 = *(void *)(v0 + 248);
      if (v27)
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        v82[0] = v31;
        *(_DWORD *)id v30 = 136315138;
        uint64_t v32 = sub_214D19B48();
        *(void *)(v0 + 160) = sub_214C3D88C(v32, v33, v82);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        sub_214B58A4C(v29, v28);
        sub_214B58A4C(v29, v28);
        _os_log_impl(&dword_214B4E000, v25, v26, "odn nonce %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v31, -1, -1);
        MEMORY[0x2166B1540](v30, -1, -1);
      }
      else
      {
        sub_214B58A4C(*(void *)(v0 + 240), *(void *)(v0 + 248));
        sub_214B58A4C(v29, v28);
      }

      char v41 = *(unsigned char *)(v0 + 155);
      uint64_t v42 = *(void *)(v0 + 240);
      unint64_t v43 = *(void *)(v0 + 248);
      uint64_t v44 = *(void *)(v0 + 232);
      unint64_t v46 = *(void *)(v0 + 200);
      uint64_t v45 = *(void *)(v0 + 208);
      unint64_t v48 = *(void *)(v0 + 184);
      uint64_t v47 = *(void *)(v0 + 192);
      uint64_t v49 = *(void *)(v0 + 176);
      LOBYTE(v82[0]) = *(unsigned char *)(v0 + 154);
      BYTE1(v82[0]) = v41;
      uint64_t v79 = sub_214B692A0((unsigned __int8 *)v82);
      sub_214B6A3F8(v47, v46);
      uint64_t v50 = sub_214C03AA8(v45);
      objc_allocWithZone((Class)cSPXWY2zzg2zwzaR);
      sub_214B6A3A0(v42, v43);
      swift_bridgeObjectRetain();
      sub_214B6A3A0(v49, v48);
      id v51 = sub_214B67BBC(v49, v48, v47, v46, v79, v50, v44, v42, v43);
      *(void *)(v0 + 328) = v51;
      uint64_t v34 = *(void *)(v0 + 288);
      if (!v51)
      {
        LOBYTE(v82[0]) = 125;
        uint64_t v59 = sub_214C034C4(v81);
        swift_bridgeObjectRelease();
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000214D2EE10, 0, (unsigned __int8 *)v82, 0, v59, 0xD000000000000052, 0x8000000214D2ECE0, 0xD000000000000084, 0x8000000214D2ED80, 406);
LABEL_19:
        swift_bridgeObjectRelease();
        swift_willThrow();
        id v37 = *(void **)(v34 + 136);
        uint64_t v38 = *(void **)(v34 + 144);
        *(_OWORD *)(v34 + 136) = 0u;
        *(_OWORD *)(v34 + 152) = 0u;
        sub_214B69D68(v37, v38);
        sub_214B608E8();
        sub_214B6A30C(*(void *)(v0 + 312));
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
        return v39();
      }
      uint64_t v10 = v51;
      BOOL v52 = *(void **)(v34 + 136);
      if (v52)
      {
        int v53 = *(void **)(v34 + 144);
        uint64_t v54 = qword_26ACE41D8;
        id v55 = v52;
        id v56 = v53;
        swift_bridgeObjectRetain();
        if (v54 != -1) {
          swift_once();
        }
        id v57 = (id)qword_26ACEBA50;
        sub_214D1A498();
        sub_214D19E78();

        objc_msgSend(v10, sel_setHostChallenge_, v55);
        objc_msgSend(v10, sel_setChallengeResponse_, v56);
        id v58 = (id)sub_214D1A028();
        objc_msgSend(v10, sel_setSeid_, v58);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_26ACE41D8 != -1) {
          swift_once();
        }
        id v58 = (id)qword_26ACEBA50;
        sub_214D1A498();
        sub_214D19E78();
      }
      unint64_t v60 = *(void *)(v0 + 224);

      if (v60 >> 60 == 15)
      {
        uint64_t v61 = sub_214B57050(0x7D7BuLL, 0xE200000000000000);
        unint64_t v63 = v62;
        uint64_t v64 = *(void *)(v0 + 216);
        unint64_t v65 = *(void *)(v0 + 224);
      }
      else
      {
        uint64_t v64 = *(void *)(v0 + 216);
        unint64_t v65 = *(void *)(v0 + 224);
        uint64_t v61 = v64;
        unint64_t v63 = v65;
      }
      *(void *)(v0 + 336) = v61;
      *(void *)(v0 + 344) = v63;
      sub_214B6A3F8(v64, v65);
      uint64_t v66 = (void *)sub_214D19B38();
      objc_msgSend(v10, sel_setYNHDWo3TCV_, v66);

      if (qword_26ACE41D8 != -1) {
LABEL_43:
      }
        swift_once();
      uint64_t v67 = *(void *)(v0 + 280);
      uint64_t v68 = *(void *)(v0 + 288);
      uint64_t v70 = *(void *)(v0 + 264);
      uint64_t v69 = *(void *)(v0 + 272);
      int v71 = *(unsigned __int8 *)(v0 + 153);
      uint64_t v80 = *(void *)(v0 + 256);
      id v72 = (id)qword_26ACEBA50;
      sub_214D1A498();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_214D1C1E0;
      unint64_t v74 = sub_214B5F3EC();
      uint64_t v75 = 48;
      if (v71) {
        uint64_t v75 = 49;
      }
      *(void *)(v73 + 56) = MEMORY[0x263F8D310];
      *(void *)(v73 + 64) = v74;
      *(void *)(v73 + 32) = v75;
      *(void *)(v73 + 40) = 0xE100000000000000;
      sub_214D19E78();

      swift_bridgeObjectRelease();
      uint64_t v76 = swift_allocObject();
      *(void *)(v0 + 352) = v76;
      *(void *)(v76 + 16) = v68;
      *(void *)(v76 + 24) = v10;
      *(void *)(v76 + 32) = v80;
      *(void *)(v76 + 40) = v70;
      *(unsigned char *)(v76 + 48) = v71;
      *(void *)(v76 + 56) = v81;
      *(void *)(v76 + 64) = v69;
      *(void *)(v76 + 72) = v67;
      swift_bridgeObjectRetain();
      swift_retain();
      id v77 = v10;
      sub_214B6A650(v69);
      swift_bridgeObjectRetain();
      swift_retain();
      id v78 = v77;
      sub_214B6A650(v69);
      swift_bridgeObjectRetain();
      return MEMORY[0x270FA2498](sub_214B66BC0, 0, 0);
  }
}

uint64_t sub_214B66BC0()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[45] = v2;
  v2[2] = 60000000000;
  v2[3] = &unk_26784CD30;
  v2[4] = v1;
  v2[5] = &unk_26784CD38;
  v2[6] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[46] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD40);
  *uint64_t v3 = v0;
  v3[1] = sub_214B66CF8;
  return MEMORY[0x270FA2360](v0 + 11, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214B6A670, v2, v4);
}

uint64_t sub_214B66CF8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214B66FAC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = (void *)v2[41];
    uint64_t v6 = v2[36];
    uint64_t v7 = v2[34];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    sub_214B6A660(v7);
    swift_task_dealloc();
    uint64_t v3 = sub_214B66E70;
    uint64_t v4 = v6;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214B66E70()
{
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 288);
  sub_214B58A4C(*(void *)(v0 + 336), *(void *)(v0 + 344));

  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  int v8 = *(_DWORD *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  LODWORD(v1) = *(unsigned __int8 *)(v0 + 152);
  uint64_t v10 = *(void **)(v2 + 136);
  uint64_t v11 = *(void **)(v2 + 144);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  sub_214B69D68(v10, v11);
  sub_214B608E8();
  if (v1 == 1)
  {
    sub_214D1A578();
    sub_214D19E98();
  }
  uint64_t v12 = *(void *)(v0 + 168);
  sub_214B6A30C(*(void *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v12 = v15;
  *(void *)(v12 + 8) = v3;
  *(void *)(v12 + 16) = v4;
  *(void *)(v12 + 24) = v5;
  *(void *)(v12 + 32) = v6;
  *(void *)(v12 + 40) = v7;
  *(_DWORD *)(v12 + 48) = v8;
  *(void *)(v12 + 56) = v9;
  long long v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_214B66FAC()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B67018, v1, 0);
}

uint64_t sub_214B67018()
{
  uint64_t v1 = (void *)v0[41];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[34];
  sub_214B58A4C(v0[42], v0[43]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_214B6A660(v3);
  uint64_t v4 = *(void **)(v2 + 136);
  uint64_t v5 = *(void **)(v2 + 144);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  sub_214B69D68(v4, v5);
  sub_214B608E8();
  sub_214B6A30C(v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214B67114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 88) = a1;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 96) = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_214B67214;
  return sub_214B64310(v8 + 16, a3, a4, a5, a6, a7, a8, v18);
}

uint64_t sub_214B67214()
{
  uint64_t v2 = *v1;
  long long v3 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 104) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 120) = v3;
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v2 + 48);
  *(_DWORD *)(v2 + 84) = *(_DWORD *)(v2 + 64);
  *(void *)(v2 + 152) = *(void *)(v2 + 72);
  *(unsigned char *)(v2 + 81) = *(unsigned char *)(v2 + 80);
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214B67370, 0, 0);
  }
}

uint64_t sub_214B67370()
{
  char v1 = *(unsigned char *)(v0 + 81);
  uint64_t v2 = *(void *)(v0 + 152);
  int v3 = *(_DWORD *)(v0 + 84);
  uint64_t v4 = *(void *)(v0 + 88);
  long long v5 = *(_OWORD *)(v0 + 120);
  long long v6 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = v6;
  *(_DWORD *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v2;
  *(unsigned char *)(v4 + 64) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214B673B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 192) = v19;
  *(void *)(v9 + 200) = v8;
  *(unsigned char *)(v9 + 267) = v17;
  *(unsigned char *)(v9 + 266) = v16;
  *(void *)(v9 + 176) = v15;
  *(void *)(v9 + 184) = v18;
  *(_OWORD *)(v9 + 144) = v13;
  *(_OWORD *)(v9 + 160) = v14;
  *(void *)(v9 + 128) = a7;
  *(void *)(v9 + 136) = a8;
  *(void *)(v9 + 112) = a5;
  *(void *)(v9 + 120) = a6;
  *(void *)(v9 + 96) = a3;
  *(void *)(v9 + 104) = a4;
  *(void *)(v9 + 80) = a1;
  *(void *)(v9 + 88) = a2;
  uint64_t v10 = sub_214D19C78();
  *(void *)(v9 + 208) = v10;
  *(void *)(v9 + 216) = *(void *)(v10 - 8);
  *(void *)(v9 + 224) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B674B0, v8, 0);
}

uint64_t sub_214B674B0()
{
  *(void *)(v0 + 232) = *(void *)(*(void *)(v0 + 200) + 112);
  return MEMORY[0x270FA2498](sub_214B674D8, 0, 0);
}

uint64_t sub_214B674D8()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v1;
  *char v1 = v0;
  v1[1] = sub_214B675B4;
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2318](v1, 0, 0, 0x6B726F57656B6174, 0xEF29286E656B6F54, sub_214B6A2A0, v2, v3);
}

uint64_t sub_214B675B4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B676B0, 0, 0);
}

uint64_t sub_214B676B0()
{
  *(unsigned char *)(v0 + 264) = *(unsigned char *)(v0 + 267);
  *(unsigned char *)(v0 + 265) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B677A0;
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 88);
  return sub_214B660EC(v0 + 16, v8, v6, v7, v4, v5, v2, v3);
}

uint64_t sub_214B677A0()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214B67934;
  }
  else {
    uint64_t v2 = sub_214B678B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214B678B4()
{
  uint64_t v1 = *(_OWORD **)(v0 + 80);
  sub_214C19044(*(void *)(v0 + 232));
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 64);
  v1[2] = *(_OWORD *)(v0 + 48);
  v1[3] = v4;
  *uint64_t v1 = v2;
  v1[1] = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214B67934()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_214C19044(*(void *)(v0 + 232));
  return MEMORY[0x270FA2498](sub_214B679A0, v1, 0);
}

uint64_t sub_214B679A0()
{
  if (_s17CoreODIEssentials10TapToRadarCACSgycfC_0())
  {
    uint64_t v1 = (void *)v0[32];
    uint64_t v3 = v0[27];
    uint64_t v2 = v0[28];
    uint64_t v4 = v0[26];
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    sub_214D19C68();
    TapToRadar.trigger(error:for:file:line:timestamp:)(v1, v6, v5, 0xD000000000000052, 0x8000000214D2ECE0, 467, v2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t static DIPODNHelper.convertAssessmentGUIDToData(_:)(uint64_t a1, uint64_t a2)
{
  return sub_214B69620(a1, a2);
}

uint64_t static DIPODNHelper.generateDUAData(tData:duration:isDeviceLocked:)(uint64_t a1, unint64_t a2, unint64_t a3, char a4, char a5)
{
  unsigned __int8 v6 = 0;
  return sub_214B697D0(a1, a2, a3, a4 & 1, &v6, a5);
}

uint64_t static DIPODNHelper.generateDUAData(tData:duration:computationTaskType:isDeviceLocked:)(uint64_t a1, unint64_t a2, unint64_t a3, char a4, unsigned __int8 *a5, char a6)
{
  return sub_214B697D0(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t DIPODNHelper.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_214B69D68(*(void **)(v0 + 136), *(void **)(v0 + 144));
  swift_bridgeObjectRelease();
  sub_214B59EAC(*(void *)(v0 + 184), *(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DIPODNHelper.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_214B69D68(*(void **)(v0 + 136), *(void **)(v0 + 144));
  swift_bridgeObjectRelease();
  sub_214B59EAC(*(void *)(v0 + 184), *(void *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DIPODNHelper.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214B67BB0()
{
  return v0;
}

id sub_214B67BBC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  if (a2 >> 60 == 15)
  {
    char v16 = 0;
  }
  else
  {
    char v16 = (void *)sub_214D19B38();
    sub_214B59EAC(a1, a2);
  }
  if (a4 >> 60 == 15)
  {
    uint64_t v19 = 0;
    if (a6) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v20 = 0;
    unint64_t v21 = a9;
    if (a7) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  uint64_t v19 = (void *)sub_214D19B38();
  sub_214B59EAC(a3, a4);
  if (!a6) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v20 = (void *)sub_214D19F88();
  swift_bridgeObjectRelease();
  unint64_t v21 = a9;
  if (a7)
  {
LABEL_7:
    unint64_t v22 = (void *)sub_214D1A258();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v22 = 0;
LABEL_11:
  if (v21 >> 60 == 15)
  {
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = (void *)sub_214D19B38();
    sub_214B59EAC(a8, v21);
  }
  id v24 = objc_msgSend(v9, sel_initWithQAy7FB3BSYJUwsIc_Zwvxi3fDtAHqlF0d_KufCqgU8RstLzBzT_BGiN5h2SLMRO6B9R_Jf7L4ypvXegQqMcE_zeXRCfLmM5cdkEtz_, v16, v19, a5, v20, v22, v23);

  return v24;
}

uint64_t sub_214B67D50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B67F68(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_214B67D70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B680D4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_214B67D90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B6831C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_214B67DB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B6848C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

unint64_t sub_214B67DD0()
{
  unint64_t result = qword_26784CC90;
  if (!qword_26784CC90)
  {
    type metadata accessor for DIPODNHelper();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CC90);
  }
  return result;
}

uint64_t type metadata accessor for DIPODNHelper()
{
  return self;
}

void sub_214B67E48(uint64_t a1)
{
}

uint64_t sub_214B67E50()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214B67E88()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_214B67EC8(uint64_t a1)
{
  sub_214B642A4(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_214B67EE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B68618(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_214B67F08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B68858(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_214B67F28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B689A8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_214B67F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_214B68B34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_214B67F68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4460);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  long long v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B680D4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    long long v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCF0);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CCE0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  long long v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CCE0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B6831C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD70);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  long long v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B6848C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CDA0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784CC80);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B68618(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4430);
  uint64_t v10 = *(void *)(sub_214D197D8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_214D197D8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B68858(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B689A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD10);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD18);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B68B34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4438);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B68C9C()
{
  return sub_214B6A680(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_214B68CD0(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCE0);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B68D94, 0, 0);
}

uint64_t sub_214B68D94()
{
  uint64_t v1 = v0[3];
  id v2 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v0[7] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCE8);
  void *v4 = v0;
  v4[1] = sub_214B68EB8;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000020, 0x8000000214D2EC90, sub_214B6A230, v3, v5);
}

uint64_t sub_214B68EB8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_214B69228;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_214B68FD4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214B68FD4()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  if (*(void *)(v0 + 16)) {
    unint64_t v2 = *(void *)(v0 + 16);
  }
  else {
    unint64_t v2 = MEMORY[0x263F8EE78];
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_6;
    }
LABEL_16:

    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v19 = v1;
  uint64_t result = sub_214B67D70(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)(v0 + 40);
  unint64_t v17 = v2 & 0xC000000000000001;
  uint64_t v18 = *(void *)(v0 + 48);
  uint64_t v7 = v19;
  unint64_t v8 = v2;
  do
  {
    if (v17) {
      id v9 = (id)MEMORY[0x2166B0290](v5, v2);
    }
    else {
      id v9 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v10 = v9;
    int64_t v11 = *(void **)(v0 + 48);
    void *v11 = objc_msgSend(v9, sel_address, v17);
    *(void *)(v18 + 8) = objc_msgSend(v10, sel_location);
    id v12 = objc_msgSend(v10, sel_updated);
    sub_214D19C48();

    unint64_t v14 = *(void *)(v19 + 16);
    unint64_t v13 = *(void *)(v19 + 24);
    if (v14 >= v13 >> 1) {
      sub_214B67D70(v13 > 1, v14 + 1, 1);
    }
    uint64_t v15 = *(void *)(v0 + 48);
    ++v5;
    *(void *)(v19 + 16) = v14 + 1;
    sub_214B6AC38(v15, v19+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, &qword_26784CCE0);
    unint64_t v2 = v8;
  }
  while (v3 != v5);

  swift_bridgeObjectRelease();
LABEL_17:
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v16(v7);
}

uint64_t sub_214B69228()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B692A0(unsigned __int8 *a1)
{
  int v1 = *a1;
  int v2 = a1[1];
  id v3 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v4 = (void *)sub_214D1A028();
  id v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (v5)
  {
    uint64_t v6 = (void *)sub_214D1A028();
    unsigned int v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

    uint64_t v8 = 1;
    if (v7) {
      uint64_t v8 = 2;
    }
  }
  else
  {
    uint64_t v8 = 1;
  }
  if (!v1) {
    v8 |= 4uLL;
  }
  if (v2) {
    return v8;
  }
  else {
    return v8 | 8;
  }
}

id sub_214B69394(char *a1, uint64_t a2)
{
  uint64_t v4 = qword_26ACE41D8;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26ACEBA50;
  sub_214D1A4A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_214D1C1E0;
  swift_getErrorValue();
  uint64_t v7 = sub_214D1AC88();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = sub_214B5F3EC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  sub_214D19E78();

  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_214D199A8();
  id v11 = objc_msgSend(v10, sel_code);

  uint64_t v21 = MEMORY[0x263F8D6C8];
  *(void *)&long long v20 = v11;
  sub_214B5EC20(&v20, v19);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8DED4(v19, 13, isUniquelyReferenced_nonNull_native);
  uint64_t v13 = a2;
  swift_bridgeObjectRelease();
  unint64_t v14 = (void *)sub_214D199A8();
  id v15 = objc_msgSend(v14, sel_code);

  if (v15 == (id)-31)
  {
    LOBYTE(v20) = 0x80;
    id v16 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x656E6E6F63736944, 0xEC00000064657463, a1, (unsigned __int8 *)&v20, 0, v13, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000001BLL, 0x8000000214D2F190, 502);
  }
  else
  {
    LOBYTE(v20) = 126;
    id v16 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x8000000214D2F170, a1, (unsigned __int8 *)&v20, 0, v13, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000001BLL, 0x8000000214D2F190, 504);
  }
  id v17 = v16;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_214B69620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_214D19AE8();
  if (v5 >> 60 == 15)
  {
    if (qword_26ACE41D8 != -1) {
      swift_once();
    }
    id v6 = (id)qword_26ACEBA50;
    sub_214D1A498();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_214D1C1E0;
    *(void *)(v7 + 56) = MEMORY[0x263F8D310];
    *(void *)(v7 + 64) = sub_214B5F3EC();
    *(void *)(v7 + 32) = a1;
    *(void *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_214D19E78();

    swift_bridgeObjectRelease();
    unsigned __int8 v9 = 99;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000214D2F330, 0, &v9, 0, 0, 0xD000000000000052, 0x8000000214D2ECE0, 0xD00000000000001FLL, 0x8000000214D2F350, 512);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_214B697D0(uint64_t a1, unint64_t a2, unint64_t a3, char a4, unsigned __int8 *a5, char a6)
{
  uint64_t v12 = 0;
  uint64_t v13 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v13 - 8, v14);
  if (a2 >> 60 == 15 || (a4 & 1) != 0) {
    return v12;
  }
  int v41 = *a5;
  sub_214B6A3A0(a1, a2);
  uint64_t v15 = sub_214D19B48();
  uint64_t v17 = v16;
  id v18 = objc_msgSend(self, sel_sharedConnection);
  if (!v18
    || (uint64_t v19 = v18,
        unsigned int v20 = objc_msgSend(v18, sel_effectiveBoolValueForSetting_, *MEMORY[0x263F53878]),
        v19,
        v20 != 1))
  {
    a3 = 0xBFF0000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = MEMORY[0x263F8D538];
  *(_OWORD *)(v21 + 16) = xmmword_214D1C1E0;
  uint64_t v23 = MEMORY[0x263F8D5B8];
  *(void *)(v21 + 56) = v22;
  *(void *)(v21 + 64) = v23;
  *(void *)(v21 + 32) = a3;
  uint64_t v24 = sub_214D1A078();
  uint64_t v26 = v25;
  double v48 = 0.0;
  uint64_t v27 = MEMORY[0x270FA5388](v24, v25);
  v40[-2] = &v48;
  if ((v26 & 0x1000000000000000) != 0 || !(v26 & 0x2000000000000000 | v28 & 0x1000000000000000))
  {
    sub_214D1A778();
  }
  else
  {
    MEMORY[0x270FA5388](v27, &v40[-4]);
    v40[-2] = sub_214B6ACC0;
    v40[-1] = v30;
    if ((v26 & 0x2000000000000000) != 0)
    {
      uint64_t v42 = v29;
      uint64_t v43 = v26 & 0xFFFFFFFFFFFFFFLL;
      BOOL v34 = (v29 > 0x20u || ((0x100003E01uLL >> v29) & 1) == 0)
         && (unint64_t v33 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
         && *v33 == 0;
      char v47 = v34;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    if ((v29 & 0x1000000000000000) != 0)
    {
      uint64_t v31 = (v26 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v40[1] = &v40[-4];
      uint64_t v31 = sub_214D1A818();
    }
    char v47 = sub_214D09B74(v31, v32, (void (*)(uint64_t *__return_ptr))sub_214B6ADD8) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  if (v47) {
    double v35 = v48;
  }
  else {
    double v35 = -1.0;
  }
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  uint64_t v42 = v15;
  uint64_t v43 = v17;
  double v44 = v35;
  char v45 = v41;
  char v46 = a6 & 1;
  sub_214B6AD30();
  uint64_t v36 = sub_214D19778();
  unint64_t v38 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v42 = v36;
  uint64_t v43 = v38;
  sub_214D1A088();
  sub_214B6AD84();
  uint64_t v12 = sub_214D1A068();
  sub_214B59EAC(a1, a2);
  sub_214B58A4C(v36, v38);
  return v12;
}

void *sub_214B69D68(void *result, void *a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t method lookup function for DIPODNHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DIPODNHelper);
}

uint64_t dispatch thunk of DIPODNHelper.cacheDeviceDataForId(workflowID:fields:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DIPODNHelper.retrieveDeviceDataForId(workflowID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 312) + **(int **)(*(void *)v2 + 312));
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_214B69F08;
  return v8(a1, a2);
}

uint64_t sub_214B69F08(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of DIPODNHelper.fetchConfigSync()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t destroy for ODNNearFieldData(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ODNNearFieldData(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  id v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNNearFieldData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ODNNearFieldData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNNearFieldData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNNearFieldData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNNearFieldData()
{
  return &type metadata for ODNNearFieldData;
}

void sub_214B6A230(uint64_t a1)
{
  sub_214B62660(a1, *(void **)(v1 + 16));
}

uint64_t sub_214B6A238()
{
  return objectdestroy_30Tm(&qword_26784CCF8);
}

uint64_t sub_214B6A244(uint64_t a1)
{
  return sub_214B6AB38(a1, &qword_26784CCF8, (uint64_t (*)(uint64_t, uint64_t))sub_214B6283C);
}

uint64_t sub_214B6A264(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_214B6A2A0(uint64_t a1)
{
  return sub_214C1965C(a1, v1);
}

uint64_t sub_214B6A2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B6A30C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_214B6A3A0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_214B6A3F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_214B6A3A0(a1, a2);
  }
  return a1;
}

uint64_t sub_214B6A40C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_214B6A46C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_214B6A55C;
  return sub_214B67114(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214B6A55C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214B6A650(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_214B6A660(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_214B6A670(uint64_t a1)
{
  return sub_214C3EE9C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_214B6A680(uint64_t (*a1)(void))
{
  return a1();
}

void sub_214B6A688(uint64_t a1)
{
  sub_214B6586C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_214B6A690()
{
  swift_unknownObjectRelease();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_214B58A4C(*(void *)(v0 + 32), v1);
  }
  unint64_t v2 = *(void *)(v0 + 56);
  if (v2 >> 60 != 15) {
    sub_214B58A4C(*(void *)(v0 + 48), v2);
  }
  unint64_t v3 = *(void *)(v0 + 72);
  if (v3 >> 60 != 15) {
    sub_214B58A4C(*(void *)(v0 + 64), v3);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 152, 7);
}

uint64_t sub_214B6A730()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = *(void *)(v0 + 40);
  long long v16 = *(_OWORD *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v15 = *(void *)(v0 + 64);
  int v13 = *(_DWORD *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 128);
  char v8 = *(unsigned char *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v10 = swift_task_alloc();
  long long v11 = *(_OWORD *)(v0 + 112);
  *(void *)(v1 + 16) = v10;
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = sub_214B6B4A4;
  *(unsigned char *)(v10 + 256) = v8;
  *(void *)(v10 + 168) = v7;
  *(void *)(v10 + 176) = v9;
  *(_OWORD *)(v10 + 152) = v11;
  *(void *)(v10 + 136) = v5;
  *(void *)(v10 + 144) = v6;
  *(void *)(v10 + 128) = v4;
  *(_DWORD *)(v10 + 248) = v13;
  *(void *)(v10 + 112) = v15;
  *(void *)(v10 + 120) = v14;
  *(_OWORD *)(v10 + 96) = v16;
  *(void *)(v10 + 80) = v2;
  *(void *)(v10 + 88) = v3;
  sub_214B6A3F8(v2, v3);
  return MEMORY[0x270FA2498](sub_214B65BB0, v5, 0);
}

unint64_t sub_214B6A878()
{
  unint64_t result = qword_26ACE3990;
  if (!qword_26ACE3990)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE42E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3990);
  }
  return result;
}

uint64_t sub_214B6A8D4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a4 >> 60 != 15)
  {
    sub_214B59EAC(result, a2);
    sub_214B58A4C(a3, a4);
    return sub_214B59EAC(a5, a6);
  }
  return result;
}

uint64_t sub_214B6A940()
{
  return objectdestroy_30Tm(&qword_26784CD60);
}

uint64_t sub_214B6A94C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, void *a8)
{
  uint64_t v17 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CD60) - 8);
  return sub_214B65A48(a1, a2, a3, a4, a5, a6, a7, a8, v8 + ((*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)));
}

void sub_214B6AA18(uint64_t a1)
{
  sub_214B62884(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_214B6AA20()
{
  return objectdestroy_30Tm(&qword_26784CD68);
}

uint64_t sub_214B6AA2C(uint64_t a1)
{
  return sub_214B6AB38(a1, &qword_26784CD68, (uint64_t (*)(uint64_t, uint64_t))sub_214B62AB8);
}

void sub_214B6AA4C(uint64_t a1)
{
  sub_214B61360(a1, v1);
}

uint64_t sub_214B6AA54(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_214B61704(a1, a2, a3, v3);
}

uint64_t sub_214B6AA60()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214B6A55C;
  v3[5] = v2;
  return MEMORY[0x270FA2498](sub_214B60A5C, v2, 0);
}

uint64_t sub_214B6AB0C()
{
  return objectdestroy_30Tm(&qword_26784CD90);
}

uint64_t sub_214B6AB18(uint64_t a1)
{
  return sub_214B6AB38(a1, &qword_26784CD90, (uint64_t (*)(uint64_t, uint64_t))sub_214B62D4C);
}

uint64_t sub_214B6AB38(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a3(a1, v6);
}

double sub_214B6ABBC(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_214D1DF40;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  return result;
}

uint64_t sub_214B6ABE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B6AC38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_214B6AC9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unsigned char *sub_214B6ACC0@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_214B6AD30()
{
  unint64_t result = qword_26ACE35D8;
  if (!qword_26ACE35D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE35D8);
  }
  return result;
}

unint64_t sub_214B6AD84()
{
  unint64_t result = qword_26ACE3598;
  if (!qword_26ACE3598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3598);
  }
  return result;
}

void *sub_214B6ADD8@<X0>(unsigned char *a1@<X8>)
{
  return sub_214D09BD4(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_214B6ADF4()
{
  return objectdestroy_30Tm(&qword_26784CD98);
}

uint64_t objectdestroy_30Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_214B6AE8C(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD98);
  return sub_214B63D7C(a1, a2);
}

uint64_t objectdestroy_74Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_214B6AF54()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214B6B4A4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_214B60888, v2, 0);
}

uint64_t destroy for ODNData(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15) {
    sub_214B58A4C(*a1, v2);
  }
  uint64_t result = sub_214B58A4C(a1[2], a1[3]);
  unint64_t v4 = a1[5];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[4];
    return sub_214B58A4C(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for ODNData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_214B6A3A0(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_214B6A3A0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = a2 + 4;
  unint64_t v9 = a2[5];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_214B6A3A0(*v8, a2[5]);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(void *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t assignWithCopy for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *(void *)a2;
      sub_214B6A3A0(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_214B6B27C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)a2;
  sub_214B6A3A0(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v4;
  sub_214B58A4C(v7, v8);
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 16);
  unint64_t v10 = *(void *)(a2 + 24);
  sub_214B6A3A0(v9, v10);
  uint64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  sub_214B58A4C(v11, v12);
  int v13 = (uint64_t *)(a2 + 32);
  unint64_t v14 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v16 = *v13;
      sub_214B6A3A0(*v13, *(void *)(a2 + 40));
      uint64_t v17 = *(void *)(a1 + 32);
      unint64_t v18 = *(void *)(a1 + 40);
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = v14;
      sub_214B58A4C(v17, v18);
      goto LABEL_15;
    }
    sub_214B6B27C(a1 + 32);
    goto LABEL_13;
  }
  if (v14 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v13;
    goto LABEL_15;
  }
  uint64_t v15 = *v13;
  sub_214B6A3A0(*v13, *(void *)(a2 + 40));
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v14;
LABEL_15:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t sub_214B6B27C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_214B6B27C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_214B58A4C(v6, v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_214B58A4C(v7, v8);
  uint64_t v9 = (void *)(a2 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = *(void *)(a2 + 40);
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(void *)(a1 + 32) = *v9;
      *(void *)(a1 + 40) = v11;
      sub_214B58A4C(v12, v10);
      goto LABEL_11;
    }
    sub_214B6B27C(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
LABEL_11:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 24) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ODNData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNData()
{
  return &type metadata for ODNData;
}

unint64_t sub_214B6B4A8()
{
  return 0xD000000000000010;
}

uint64_t sub_214B6B594(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1BBF0(*a1, *a2);
}

uint64_t sub_214B6B5A0()
{
  return sub_214D1AD48();
}

uint64_t sub_214B6B64C()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214B6B6E4()
{
  return sub_214D1AD48();
}

uint64_t sub_214B6B78C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B6E7D4();
  *a1 = result;
  return result;
}

void sub_214B6B7BC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEF312E4E53412D31;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x33765F4345;
  if (v2 != 1)
  {
    uint64_t v5 = 0x48535F33765F4345;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x765F4343455F5645;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_214B6B824()
{
  return sub_214D1A228();
}

uint64_t sub_214B6B884()
{
  return sub_214D1A1D8();
}

uint64_t static EncryptedDataContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v4)
  {
    if (!v5)
    {
LABEL_11:
      long long v9 = *(_OWORD *)(a1 + 80);
      v16[2] = *(_OWORD *)(a1 + 64);
      void v16[3] = v9;
      long long v10 = *(_OWORD *)(a1 + 112);
      v16[4] = *(_OWORD *)(a1 + 96);
      v16[5] = v10;
      long long v11 = *(_OWORD *)(a1 + 48);
      v16[0] = *(_OWORD *)(a1 + 32);
      v16[1] = v11;
      long long v12 = *(_OWORD *)(a2 + 80);
      v17[2] = *(_OWORD *)(a2 + 64);
      v17[3] = v12;
      long long v13 = *(_OWORD *)(a2 + 112);
      v17[4] = *(_OWORD *)(a2 + 96);
      v17[5] = v13;
      long long v14 = *(_OWORD *)(a2 + 48);
      v17[0] = *(_OWORD *)(a2 + 32);
      v17[1] = v14;
      char v8 = sub_214B6E104((unsigned __int8 *)v16, (uint64_t)v17);
      return v8 & 1;
    }
LABEL_10:
    char v8 = 0;
    return v8 & 1;
  }
  if (!v5) {
    goto LABEL_10;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && v4 == v5) {
    goto LABEL_11;
  }
  char v7 = sub_214D1ABC8();
  char v8 = 0;
  if (v7) {
    goto LABEL_11;
  }
  return v8 & 1;
}

uint64_t sub_214B6B988(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  long long v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6FE48();
  sub_214D1AD88();
  char v15 = 0;
  sub_214D1AAF8();
  if (!v5)
  {
    char v14 = 1;
    sub_214D1AAF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

BOOL sub_214B6BAFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_214B6BB14()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x7265646E6573;
  }
}

uint64_t sub_214B6BB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214B6E820(a1, a2);
  *a3 = result;
  return result;
}

void sub_214B6BB78(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_214B6BB84(uint64_t a1)
{
  unint64_t v2 = sub_214B6FE48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214B6BBC0(uint64_t a1)
{
  unint64_t v2 = sub_214B6FE48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214B6BBFC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_214D1ABC8(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_214D1ABC8();
    }
  }
  return result;
}

uint64_t sub_214B6BCA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_214B6E908(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_214B6BCD0(void *a1)
{
  return sub_214B6B988(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_214B6BCF0(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214B6BD8C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6FE9C();
  sub_214D1AD88();
  v12[0] = 0;
  sub_214D1AAA8();
  if (!v2)
  {
    v12[0] = 1;
    sub_214D1AAA8();
    v12[0] = 2;
    sub_214D1AAA8();
    sub_214B6FEF0(v3 + 48, (uint64_t)v13);
    sub_214B6FEF0((uint64_t)v13, (uint64_t)v12);
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    sub_214B6FF58(&qword_26ACE3988);
    sub_214D1AAE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_214B6BF9C()
{
  return sub_214B6BCF0(*v0);
}

uint64_t sub_214B6BFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214B6EB10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214B6BFCC(uint64_t a1)
{
  unint64_t v2 = sub_214B6FE9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214B6C008(uint64_t a1)
{
  unint64_t v2 = sub_214B6FE9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214B6C044(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_214B6DFD8(v5, v7) & 1;
}

double sub_214B6C0A0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214B6ECAC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_214B6C0F0(void *a1)
{
  return sub_214B6BD8C(a1);
}

uint64_t sub_214B6C134(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6F480();
  sub_214D1AD88();
  LOBYTE(v13) = *(unsigned char *)v3;
  char v17 = 0;
  sub_214B6F4D4();
  sub_214D1AB38();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 24);
    long long v13 = *(_OWORD *)(v3 + 8);
    long long v14 = v10;
    char v17 = 1;
    sub_214B6F528();
    sub_214D1AB38();
    long long v11 = *(_OWORD *)(v3 + 56);
    long long v13 = *(_OWORD *)(v3 + 40);
    long long v14 = v11;
    long long v15 = *(_OWORD *)(v3 + 72);
    uint64_t v16 = *(void *)(v3 + 88);
    char v17 = 2;
    sub_214B6F57C();
    sub_214D1AB38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_214B6C31C()
{
  uint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_214B6C370(char a1)
{
  if (a1) {
    return 0x736D61726170;
  }
  else {
    return 1635017060;
  }
}

unint64_t sub_214B6C39C()
{
  uint64_t v1 = 0x656572674179656BLL;
  if (*v0 != 1) {
    uint64_t v1 = 6710379;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_214B6C3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214B6F024(a1, a2);
  *a3 = result;
  return result;
}

void sub_214B6C424(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_214B6C430(uint64_t a1)
{
  unint64_t v2 = sub_214B6F480();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214B6C46C(uint64_t a1)
{
  unint64_t v2 = sub_214B6F480();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214B6C4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 56);
  v18[0] = *(_OWORD *)(a1 + 40);
  v18[1] = v6;
  v18[2] = *(_OWORD *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)a1;
  unsigned __int8 v12 = *(unsigned char *)a2;
  long long v13 = *(_OWORD *)(a2 + 56);
  v20[0] = *(_OWORD *)(a2 + 40);
  v20[1] = v13;
  v20[2] = *(_OWORD *)(a2 + 72);
  uint64_t v21 = *(void *)(a2 + 88);
  if (sub_214C1BBF0(v11, v12))
  {
    if (v2 == v7 && v3 == v8 || (char v14 = sub_214D1ABC8(), v15 = 0, (v14 & 1) != 0))
    {
      if (v4 == v9 && v5 == v10 || (v16 = sub_214D1ABC8(), char v15 = 0, (v16 & 1) != 0)) {
        char v15 = sub_214B6DFD8(v18, v20);
      }
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

double sub_214B6C5C0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_214B6F180(a1, (uint64_t)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_214B6C60C(void *a1)
{
  return sub_214B6C134(a1);
}

uint64_t sub_214B6C624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214B6C698(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214B6C704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214B6C774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214B6C7E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B6C31C();
  *a1 = result;
  return result;
}

uint64_t sub_214B6C820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_214B6C370(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_214B6C858()
{
  return sub_214B6C370(*v0);
}

uint64_t sub_214B6C86C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B6C31C();
  *a1 = result;
  return result;
}

uint64_t sub_214B6C8A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B6F478();
  *a1 = result;
  return result;
}

uint64_t sub_214B6C8D4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_214B6C928(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t EncryptedDataContainer.data.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EncryptedDataContainer.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EncryptedDataContainer.__deallocating_deinit()
{
  EncryptedDataContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t EncryptedDataContainer.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for EncryptedDataContainer.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_214D1AB48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD88();
  char v16 = 0;
  uint64_t v9 = v15[1];
  sub_214D1AAA8();
  if (!v9)
  {
    long long v10 = *(_OWORD *)(v2 + 40);
    uint64_t v11 = *(void *)(v2 + 56);
    uint64_t v12 = *(void *)(v2 + 64);
    uint64_t v13 = *(void *)(v2 + 120);
    char v16 = *(unsigned char *)(v2 + 32);
    long long v17 = v10;
    uint64_t v18 = v11;
    uint64_t v19 = v12;
    long long v20 = *(_OWORD *)(v2 + 72);
    long long v21 = *(_OWORD *)(v2 + 88);
    long long v22 = *(_OWORD *)(v2 + 104);
    uint64_t v23 = v13;
    char v24 = 1;
    sub_214B6E2E0();
    sub_214D1AB38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t EncryptedDataContainer.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  EncryptedDataContainer.init(from:)(a1);
  return v2;
}

uint64_t EncryptedDataContainer.init(from:)(void *a1)
{
  type metadata accessor for EncryptedDataContainer.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_214D1AA88();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD78();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v16;
    uint64_t v8 = v17;
    char v18 = 0;
    *(void *)(v1 + 16) = sub_214D1A9D8();
    *(void *)(v1 + 24) = v10;
    char v26 = 1;
    sub_214B6E334();
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    long long v12 = v19;
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    uint64_t v15 = v25;
    *(unsigned char *)(v1 + 32) = v18;
    *(_OWORD *)(v1 + 40) = v12;
    *(void *)(v1 + 56) = v13;
    *(void *)(v1 + 64) = v14;
    *(_OWORD *)(v1 + 72) = v22;
    *(_OWORD *)(v1 + 88) = v23;
    *(_OWORD *)(v1 + 104) = v24;
    *(void *)(v1 + 120) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_214B6CF74(uint64_t *a1, uint64_t *a2)
{
  return static EncryptedDataContainer.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_214B6CF98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = EncryptedDataContainer.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214B6CFC4(void *a1)
{
  return EncryptedDataContainer.encode(to:)(a1);
}

uint64_t sub_214B6CFE8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_214D1ABC8(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_214D1ABC8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_214B6D0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  while (1)
  {
    uint64_t v8 = *(void *)(a1 + v3 + 32);
    uint64_t v7 = *(void *)(a1 + v3 + 40);
    uint64_t v10 = *(void *)(a1 + v3 + 48);
    uint64_t v9 = *(void *)(a1 + v3 + 56);
    char v11 = *(unsigned char *)(a1 + v3 + 64);
    uint64_t v12 = *(void *)(a2 + v3 + 32);
    uint64_t v13 = *(void *)(a2 + v3 + 40);
    uint64_t v14 = *(void *)(a2 + v3 + 48);
    uint64_t v66 = *(void *)(a2 + v3 + 56);
    char v65 = v11;
    uint64_t v52 = *(void *)(a2 + v3 + 80);
    uint64_t v53 = *(void *)(a1 + v3 + 80);
    char v56 = *(unsigned char *)(a2 + v3 + 88);
    char v57 = *(unsigned char *)(a1 + v3 + 88);
    char v64 = *(unsigned char *)(a2 + v3 + 64);
    uint64_t v54 = v2;
    uint64_t v55 = v3;
    uint64_t v58 = *(unsigned __int8 *)(a1 + v3 + 65);
    uint64_t v59 = *(unsigned __int8 *)(a2 + v3 + 65);
    int v60 = *(unsigned __int8 *)(a2 + v3 + 89);
    int v61 = *(unsigned __int8 *)(a1 + v3 + 89);
    uint64_t v63 = *(void *)(a1 + v3 + 72);
    uint64_t v62 = *(void *)(a2 + v3 + 72);
    if (v11) {
      break;
    }
    if (*(unsigned char *)(a2 + v3 + 64)) {
      goto LABEL_131;
    }
    unint64_t v18 = 0xEC0000006E6F6973;
    uint64_t v19 = *(void *)(a1 + v3 + 48);
    unint64_t v20 = 0x726556646C697542;
    switch((char)v10)
    {
      case 1:
        unint64_t v18 = 0xE400000000000000;
        unint64_t v20 = 1684628851;
        break;
      case 2:
        unint64_t v20 = 0x754E6C6169726553;
        unint64_t v18 = 0xEC0000007265626DLL;
        break;
      case 3:
        unint64_t v20 = 0x6544657571696E55;
        unsigned int v21 = 1701013878;
        goto LABEL_35;
      case 4:
        unint64_t v20 = 0x6843657571696E55;
        unint64_t v18 = 0xEC00000044497069;
        break;
      case 5:
        unint64_t v20 = 0x6F6973726556736FLL;
        unint64_t v18 = 0xE90000000000006ELL;
        break;
      case 6:
        unint64_t v18 = 0xE600000000000000;
        unint64_t v20 = 0x7265626D756ELL;
        break;
      case 7:
        long long v22 = "";
        goto LABEL_27;
      case 8:
        unint64_t v20 = 0x746E6564494D4953;
        unint64_t v18 = 0xEB00000000797469;
        break;
      case 9:
        long long v22 = "Encoding";
LABEL_27:
        unint64_t v18 = (unint64_t)v22 | 0x8000000000000000;
        unint64_t v20 = 0xD000000000000018;
        break;
      case 10:
        unint64_t v18 = 0xE800000000000000;
        unint64_t v20 = 0x6E6F697461636F6CLL;
        break;
      case 11:
        unint64_t v20 = 0xD000000000000017;
        unint64_t v18 = 0x8000000214D2D3A0;
        break;
      case 12:
        unint64_t v20 = 0x6E69726168537369;
        unint64_t v18 = 0xEF6E656572635367;
        break;
      case 13:
        unint64_t v20 = 0x696669746E656469;
        unint64_t v18 = 0xEA00000000007265;
        break;
      case 14:
        unint64_t v20 = 0x736572705F6D6973;
        unint64_t v18 = 0xEB00000000746E65;
        break;
      case 15:
        unint64_t v20 = 0x6F737265705F6161;
        unint64_t v18 = 0xEB0000000044496ELL;
        break;
      case 16:
        unint64_t v20 = 0x7A696C616D726F6ELL;
        unsigned int v21 = 1396991077;
LABEL_35:
        unint64_t v18 = v21 | 0xEE00444900000000;
        break;
      case 17:
        unint64_t v18 = 0xE700000000000000;
        unint64_t v20 = 0x6469656C707061;
        break;
      default:
        break;
    }
    uint64_t v23 = *(void *)(a2 + v3 + 48);
    uint64_t v24 = 0x726556646C697542;
    unint64_t v25 = 0xEC0000006E6F6973;
    switch((char)v23)
    {
      case 1:
        unint64_t v25 = 0xE400000000000000;
        if (v20 != 1684628851) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 2:
        unint64_t v25 = 0xEC0000007265626DLL;
        if (v20 != 0x754E6C6169726553) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 3:
        uint64_t v24 = 0x6544657571696E55;
        unsigned int v26 = 1701013878;
        goto LABEL_68;
      case 4:
        unint64_t v25 = 0xEC00000044497069;
        if (v20 != 0x6843657571696E55) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 5:
        unint64_t v25 = 0xE90000000000006ELL;
        if (v20 != 0x6F6973726556736FLL) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 6:
        unint64_t v25 = 0xE600000000000000;
        if (v20 != 0x7265626D756ELL) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 7:
        uint64_t v27 = "";
        goto LABEL_53;
      case 8:
        unint64_t v25 = 0xEB00000000797469;
        if (v20 != 0x746E6564494D4953) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 9:
        uint64_t v27 = "Encoding";
LABEL_53:
        unint64_t v25 = (unint64_t)v27 | 0x8000000000000000;
        if (v20 != 0xD000000000000018) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 10:
        unint64_t v25 = 0xE800000000000000;
        if (v20 != 0x6E6F697461636F6CLL) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 11:
        unint64_t v25 = 0x8000000214D2D3A0;
        if (v20 != 0xD000000000000017) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 12:
        unint64_t v25 = 0xEF6E656572635367;
        if (v20 != 0x6E69726168537369) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 13:
        unint64_t v25 = 0xEA00000000007265;
        if (v20 != 0x696669746E656469) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 14:
        unint64_t v25 = 0xEB00000000746E65;
        if (v20 != 0x736572705F6D6973) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 15:
        unint64_t v25 = 0xEB0000000044496ELL;
        if (v20 != 0x6F737265705F6161) {
          goto LABEL_73;
        }
        goto LABEL_70;
      case 16:
        uint64_t v24 = 0x7A696C616D726F6ELL;
        unsigned int v26 = 1396991077;
LABEL_68:
        unint64_t v25 = v26 | 0xEE00444900000000;
        goto LABEL_69;
      case 17:
        unint64_t v25 = 0xE700000000000000;
        if (v20 != 0x6469656C707061) {
          goto LABEL_73;
        }
        goto LABEL_70;
      default:
LABEL_69:
        if (v20 != v24) {
          goto LABEL_73;
        }
LABEL_70:
        if (v18 == v25)
        {
          uint64_t v15 = v7;
          swift_bridgeObjectRetain();
          uint64_t v28 = v19;
          sub_214B6F6CC(v19, v9, 0);
          uint64_t v16 = v13;
          swift_bridgeObjectRetain();
          uint64_t v14 = v23;
          uint64_t v10 = v28;
          sub_214B6F6CC(v14, v66, 0);
          swift_bridgeObjectRelease_n();
          uint64_t v17 = v9;
          sub_214B6F6DC(v28, v9, 0);
          sub_214B6F6DC(v14, v66, 0);
        }
        else
        {
LABEL_73:
          char v49 = sub_214D1ABC8();
          uint64_t v15 = v7;
          swift_bridgeObjectRetain();
          uint64_t v29 = v19;
          sub_214B6F6CC(v19, v9, 0);
          uint64_t v16 = v13;
          swift_bridgeObjectRetain();
          uint64_t v30 = v23;
          uint64_t v10 = v29;
          sub_214B6F6CC(v30, v66, 0);
          swift_bridgeObjectRelease();
          uint64_t v14 = v30;
          swift_bridgeObjectRelease();
          uint64_t v17 = v9;
          sub_214B6F6DC(v29, v9, 0);
          sub_214B6F6DC(v14, v66, 0);
          if ((v49 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v14, v66, 0);
            swift_bridgeObjectRelease();
            uint64_t v45 = v29;
            uint64_t v46 = v9;
            char v47 = 0;
            goto LABEL_133;
          }
        }
        break;
    }
LABEL_74:
    if ((v8 != v12 || v15 != v16) && (sub_214D1ABC8() & 1) == 0 || v63 != v62 || v61 != v60)
    {
      swift_bridgeObjectRelease();
      sub_214B6F6DC(v14, v66, v64);
      swift_bridgeObjectRelease();
      uint64_t v45 = v10;
      uint64_t v46 = v17;
      char v47 = v65;
      goto LABEL_133;
    }
    unint64_t v31 = 0xE800000000000000;
    unint64_t v32 = 0x73746E756F636341;
    switch(v58)
    {
      case 1:
        unint64_t v32 = 0x6547656C69626F4DLL;
        uint64_t v33 = 0x746C617473;
        goto LABEL_94;
      case 2:
        unint64_t v32 = 0x6974726543616162;
        unint64_t v31 = 0xEE00657461636966;
        break;
      case 3:
        unint64_t v32 = 0x6C6569467261654ELL;
        unint64_t v31 = 0xE900000000000064;
        break;
      case 4:
        unint64_t v31 = 0xE300000000000000;
        unint64_t v32 = 5456969;
        break;
      case 5:
        unint64_t v32 = 0x656C655465726F43;
        uint64_t v33 = 0x796E6F6870;
        goto LABEL_94;
      case 6:
        unint64_t v32 = 0x61636F4C65726F43;
        unint64_t v31 = 0xEC0000006E6F6974;
        break;
      case 7:
        unint64_t v32 = 0xD000000000000012;
        unint64_t v31 = 0x8000000214D2D290;
        break;
      case 8:
        unint64_t v32 = 0x656E6F5A656D6954;
        break;
      case 9:
        unint64_t v32 = 0x6C4372656C6C6143;
        unint64_t v31 = 0xEC000000746E6569;
        break;
      case 10:
        unint64_t v32 = 0x614E646573726150;
        unint64_t v31 = 0xEA0000000000656DLL;
        break;
      case 11:
        unint64_t v32 = 0x7265646F636F6547;
        break;
      case 12:
        unint64_t v32 = 0x657474616D726F46;
        unint64_t v31 = 0xEE00656E6F685064;
        break;
      case 13:
        unint64_t v32 = 0x6553656369766544;
        unint64_t v31 = 0xEE0073676E697474;
        break;
      case 14:
        unint64_t v32 = 0x72756769666E6F43;
        uint64_t v33 = 0x6E6F697461;
LABEL_94:
        unint64_t v31 = v33 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        break;
      default:
        break;
    }
    unint64_t v34 = 0xE800000000000000;
    uint64_t v35 = 0x73746E756F636341;
    switch(v59)
    {
      case 1:
        uint64_t v36 = 0x6547656C69626F4DLL;
        uint64_t v37 = 0x746C617473;
        goto LABEL_123;
      case 2:
        uint64_t v38 = 0x6974726543616162;
        uint64_t v39 = 0x657461636966;
        goto LABEL_116;
      case 3:
        unint64_t v34 = 0xE900000000000064;
        if (v32 != 0x6C6569467261654ELL) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 4:
        unint64_t v34 = 0xE300000000000000;
        if (v32 != 5456969) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 5:
        uint64_t v36 = 0x656C655465726F43;
        uint64_t v37 = 0x796E6F6870;
        goto LABEL_123;
      case 6:
        unint64_t v34 = 0xEC0000006E6F6974;
        if (v32 != 0x61636F4C65726F43) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 7:
        unint64_t v34 = 0x8000000214D2D290;
        if (v32 != 0xD000000000000012) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 8:
        if (v32 != 0x656E6F5A656D6954) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 9:
        unint64_t v34 = 0xEC000000746E6569;
        if (v32 != 0x6C4372656C6C6143) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 10:
        unint64_t v34 = 0xEA0000000000656DLL;
        if (v32 != 0x614E646573726150) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 11:
        if (v32 != 0x7265646F636F6547) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 12:
        uint64_t v38 = 0x657474616D726F46;
        uint64_t v39 = 0x656E6F685064;
LABEL_116:
        unint64_t v34 = v39 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
        if (v32 != v38) {
          goto LABEL_124;
        }
        goto LABEL_120;
      case 13:
        uint64_t v35 = 0x6553656369766544;
        unint64_t v34 = 0xEE0073676E697474;
        goto LABEL_119;
      case 14:
        uint64_t v36 = 0x72756769666E6F43;
        uint64_t v37 = 0x6E6F697461;
LABEL_123:
        unint64_t v34 = v37 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        if (v32 != v36) {
          goto LABEL_124;
        }
        goto LABEL_120;
      default:
LABEL_119:
        if (v32 != v35) {
          goto LABEL_124;
        }
LABEL_120:
        if (v31 == v34)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_214B6F6DC(v14, v66, v64);
          swift_bridgeObjectRelease();
          sub_214B6F6DC(v10, v17, v65);
        }
        else
        {
LABEL_124:
          char v40 = sub_214D1ABC8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_214B6F6DC(v14, v66, v64);
          swift_bridgeObjectRelease();
          sub_214B6F6DC(v10, v17, v65);
          if ((v40 & 1) == 0) {
            return 0;
          }
        }
        if (v57)
        {
          a1 = v50;
          a2 = v51;
          uint64_t v6 = v54;
          uint64_t v5 = v55;
          if ((v56 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          char v4 = v56;
          if (v53 != v52) {
            char v4 = 1;
          }
          a1 = v50;
          a2 = v51;
          uint64_t v6 = v54;
          uint64_t v5 = v55;
          if (v4) {
            return 0;
          }
        }
        uint64_t v3 = v5 + 64;
        uint64_t v2 = v6 - 1;
        if (!v2) {
          return 1;
        }
        break;
    }
  }
  if (*(unsigned char *)(a2 + v3 + 64))
  {
    if (v10 == v14 && v9 == v66)
    {
      uint64_t v15 = *(void *)(a1 + v3 + 40);
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v10, v9, 1);
      uint64_t v16 = v13;
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v10, v9, 1);
      sub_214B6F6CC(v10, v9, 1);
      sub_214B6F6CC(v10, v9, 1);
      sub_214B6F6DC(v10, v9, 1);
      uint64_t v17 = v9;
      sub_214B6F6DC(v10, v9, 1);
    }
    else
    {
      char v48 = sub_214D1ABC8();
      uint64_t v15 = v7;
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v10, v9, 1);
      uint64_t v16 = v13;
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v14, v66, 1);
      sub_214B6F6CC(v14, v66, 1);
      sub_214B6F6CC(v10, v9, 1);
      uint64_t v17 = v9;
      sub_214B6F6DC(v10, v9, 1);
      sub_214B6F6DC(v14, v66, 1);
      if ((v48 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_214B6F6DC(v14, v66, 1);
        swift_bridgeObjectRelease();
        uint64_t v45 = v10;
        uint64_t v46 = v9;
        char v47 = 1;
        goto LABEL_133;
      }
    }
    goto LABEL_74;
  }
  char v42 = *(unsigned char *)(a1 + v3 + 64);
  swift_bridgeObjectRetain();
  char v11 = v42;
LABEL_131:
  char v43 = v11 ^ 1;
  char v44 = v11;
  sub_214B6F6CC(v14, v66, v11 ^ 1);
  sub_214B6F6DC(v10, v9, v44);
  uint64_t v45 = v14;
  uint64_t v46 = v66;
  char v47 = v43;
LABEL_133:
  sub_214B6F6DC(v45, v46, v47);
  return 0;
}

uint64_t sub_214B6DFD8(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    if (*a1 != *a2 || v4 != v5)
    {
      char v7 = sub_214D1ABC8();
      uint64_t result = 0;
      if ((v7 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v9 = a1[3];
  uint64_t v10 = a2[3];
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    if (a1[2] != a2[2] || v9 != v10)
    {
      char v11 = sub_214D1ABC8();
      uint64_t result = 0;
      if ((v11 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v12 = a1[5];
  uint64_t v13 = a2[5];
  if (v12)
  {
    if (v13)
    {
      if (a1[4] != a2[4] || v12 != v13)
      {
        char v14 = sub_214D1ABC8();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_26;
    }
    return 0;
  }
  if (v13) {
    return 0;
  }
LABEL_26:
  uint64_t v15 = a1[6];
  unint64_t v16 = a2[6];
  uint64_t result = (v15 | v16) == 0;
  if (v15 && v16)
  {
    uint64_t v17 = (void *)a1[6];
    return sub_214B6CFE8(v17, (void *)v16);
  }
  return result;
}

uint64_t sub_214B6E104(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x33765F4345;
  if (v3 != 1)
  {
    uint64_t v5 = 0x48535F33765F4345;
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0x765F4343455F5645;
  }
  if (v3) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xEF312E4E53412D31;
  }
  unint64_t v9 = 0xE500000000000000;
  uint64_t v10 = 0x33765F4345;
  if (*(unsigned char *)a2 != 1)
  {
    uint64_t v10 = 0x48535F33765F4345;
    unint64_t v9 = 0xE800000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0x765F4343455F5645;
  }
  if (*(unsigned char *)a2) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = 0xEF312E4E53412D31;
  }
  if (v6 == v11 && v7 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }
  uint64_t v15 = *((void *)a1 + 3);
  uint64_t v16 = *((void *)a1 + 4);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  if (*((void *)a1 + 1) == *(void *)(a2 + 8) && *((void *)a1 + 2) == *(void *)(a2 + 16)
    || (v19 = sub_214D1ABC8(), char v14 = 0, (v19 & 1) != 0))
  {
    if (v15 == v17 && v16 == v18 || (v20 = sub_214D1ABC8(), char v14 = 0, (v20 & 1) != 0))
    {
      long long v21 = *(_OWORD *)(a1 + 56);
      v26[0] = *(_OWORD *)(a1 + 40);
      v26[1] = v21;
      void v26[2] = *(_OWORD *)(a1 + 72);
      uint64_t v27 = *((void *)a1 + 11);
      long long v22 = *(_OWORD *)(a2 + 56);
      v24[0] = *(_OWORD *)(a2 + 40);
      v24[1] = v22;
      v24[2] = *(_OWORD *)(a2 + 72);
      uint64_t v25 = *(void *)(a2 + 88);
      char v14 = sub_214B6DFD8(v26, v24);
    }
  }
  return v14 & 1;
}

uint64_t type metadata accessor for EncryptedDataContainer.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_214B6E2E0()
{
  unint64_t result = qword_26ACE36D8;
  if (!qword_26ACE36D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36D8);
  }
  return result;
}

unint64_t sub_214B6E334()
{
  unint64_t result = qword_26784CDB8;
  if (!qword_26784CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDB8);
  }
  return result;
}

uint64_t sub_214B6E38C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EncryptedDataContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for EncryptedDataContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EncryptedDataContainer);
}

uint64_t dispatch thunk of EncryptedDataContainer.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t destroy for EncryptionParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncryptionParams(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EncryptionParams(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for EncryptionParams(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptionParams(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EncryptionParams(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParams()
{
  return &type metadata for EncryptionParams;
}

uint64_t sub_214B6E770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_214B6E780()
{
  return swift_getWitnessTable();
}

uint64_t sub_214B6E79C()
{
  return swift_getWitnessTable();
}

uint64_t sub_214B6E7B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_214B6E7D4()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_214B6E820(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000214D2F430)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214B6E908(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CDF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6FE48();
  sub_214D1AD78();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_214D1AA28();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_214D1AA28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_214B6EB10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000214D2F450 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000214D2F470 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D2F490 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000214D2F4B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214B6ECAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CDF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6FE9C();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v10 = sub_214D1A9D8();
  uint64_t v12 = v11;
  uint64_t v23 = v10;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_214D1A9D8();
  uint64_t v24 = v14;
  uint64_t v21 = v13;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  uint64_t v20 = sub_214D1A9D8();
  uint64_t v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  char v26 = 3;
  sub_214B6FF58(&qword_26ACE42E8);
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v17 = v25;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v12;
  a2[2] = v21;
  a2[3] = v18;
  a2[4] = v20;
  a2[5] = v16;
  a2[6] = v17;
  return result;
}

uint64_t sub_214B6F024(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000214D2F410 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656572674179656BLL && a2 == 0xEC000000746E656DLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6710379 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214B6F180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CDC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214B6F480();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  sub_214B6F5D0();
  sub_214D1AA68();
  int v10 = v23;
  char v31 = 1;
  sub_214B6F624();
  sub_214D1AA68();
  int v30 = v10;
  uint64_t v11 = v24;
  uint64_t v12 = v26;
  uint64_t v21 = v25;
  uint64_t v22 = v23;
  char v31 = 2;
  sub_214B6F678();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214D1AA68();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v13 = v24;
  uint64_t v14 = v26;
  uint64_t v19 = v25;
  uint64_t v20 = v23;
  uint64_t v15 = v28;
  uint64_t v18 = v27;
  uint64_t v16 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v30;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v19;
  *(void *)(a2 + 64) = v14;
  *(void *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = v16;
  return result;
}

uint64_t sub_214B6F478()
{
  return 2;
}

unint64_t sub_214B6F480()
{
  unint64_t result = qword_26ACE36C0;
  if (!qword_26ACE36C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36C0);
  }
  return result;
}

unint64_t sub_214B6F4D4()
{
  unint64_t result = qword_26ACE3898;
  if (!qword_26ACE3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3898);
  }
  return result;
}

unint64_t sub_214B6F528()
{
  unint64_t result = qword_26ACE3730;
  if (!qword_26ACE3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3730);
  }
  return result;
}

unint64_t sub_214B6F57C()
{
  unint64_t result = qword_26ACE38F8;
  if (!qword_26ACE38F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38F8);
  }
  return result;
}

unint64_t sub_214B6F5D0()
{
  unint64_t result = qword_26784CDC8;
  if (!qword_26784CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDC8);
  }
  return result;
}

unint64_t sub_214B6F624()
{
  unint64_t result = qword_26784CDD0;
  if (!qword_26784CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDD0);
  }
  return result;
}

unint64_t sub_214B6F678()
{
  unint64_t result = qword_26784CDD8;
  if (!qword_26784CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDD8);
  }
  return result;
}

uint64_t sub_214B6F6CC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214B6F6DC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for EncryptionParams.CodingKeys()
{
  return &type metadata for EncryptionParams.CodingKeys;
}

uint64_t destroy for KDFParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for KDFParams(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KDFParams(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KDFParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KDFParams(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for KDFParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KDFParams()
{
  return &type metadata for KDFParams;
}

uint64_t destroy for KeyAgreementParams()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for KeyAgreementParams(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KeyAgreementParams(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for KeyAgreementParams(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyAgreementParams(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyAgreementParams(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams()
{
  return &type metadata for KeyAgreementParams;
}

unsigned char *_s17CoreODIEssentials35EncryptionParamsAlgorithmIdentifierOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B6FC5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParamsAlgorithmIdentifier()
{
  return &type metadata for EncryptionParamsAlgorithmIdentifier;
}

unint64_t sub_214B6FC98()
{
  unint64_t result = qword_26784CDE0;
  if (!qword_26784CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDE0);
  }
  return result;
}

unint64_t sub_214B6FCF0()
{
  unint64_t result = qword_26784CDE8;
  if (!qword_26784CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CDE8);
  }
  return result;
}

unint64_t sub_214B6FD48()
{
  unint64_t result = qword_26ACE36D0;
  if (!qword_26ACE36D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36D0);
  }
  return result;
}

unint64_t sub_214B6FDA0()
{
  unint64_t result = qword_26ACE36C8;
  if (!qword_26ACE36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36C8);
  }
  return result;
}

unint64_t sub_214B6FDF4()
{
  unint64_t result = qword_26ACE38A0;
  if (!qword_26ACE38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38A0);
  }
  return result;
}

unint64_t sub_214B6FE48()
{
  unint64_t result = qword_26ACE3718;
  if (!qword_26ACE3718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3718);
  }
  return result;
}

unint64_t sub_214B6FE9C()
{
  unint64_t result = qword_26ACE38E0;
  if (!qword_26ACE38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38E0);
  }
  return result;
}

uint64_t sub_214B6FEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B6FF58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE42E0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for KDFParams.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B70088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KDFParams.CodingKeys()
{
  return &type metadata for KDFParams.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODNRequestTask.ODNatorTriggeringCase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17CoreODIEssentials18KeyAgreementParamsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B7021CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_214B70244(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams.CodingKeys()
{
  return &type metadata for KeyAgreementParams.CodingKeys;
}

unint64_t sub_214B70264()
{
  unint64_t result = qword_26784CE00;
  if (!qword_26784CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CE00);
  }
  return result;
}

unint64_t sub_214B702BC()
{
  unint64_t result = qword_26784CE08;
  if (!qword_26784CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784CE08);
  }
  return result;
}

unint64_t sub_214B70314()
{
  unint64_t result = qword_26ACE38F0;
  if (!qword_26ACE38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38F0);
  }
  return result;
}

unint64_t sub_214B7036C()
{
  unint64_t result = qword_26ACE38E8;
  if (!qword_26ACE38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38E8);
  }
  return result;
}

unint64_t sub_214B703C4()
{
  unint64_t result = qword_26ACE3728;
  if (!qword_26ACE3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3728);
  }
  return result;
}

unint64_t sub_214B7041C()
{
  unint64_t result = qword_26ACE3720;
  if (!qword_26ACE3720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3720);
  }
  return result;
}

id sub_214B7047C()
{
  type metadata accessor for ODIiCloudAccountManager();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = objc_msgSend(self, sel_defaultStore);
  if (!result) {
    id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
  }
  *(void *)(v0 + 112) = result;
  *(void *)(v0 + 120) = 0;
  qword_26ACE5438 = v0;
  return result;
}

uint64_t static ODIiCloudAccountManager.shared.getter()
{
  if (qword_26ACE5460 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_214B70560(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return MEMORY[0x270FA2498](sub_214B70584, v2, 0);
}

uint64_t sub_214B70584()
{
  uint64_t v1 = (void *)sub_214D196C8();
  objc_msgSend(v1, sel_mutableCopy);

  sub_214D1A668();
  swift_unknownObjectRelease();
  sub_214B709CC();
  if (swift_dynamicCast())
  {
    uint64_t v2 = (void *)v0[6];
    v0[10] = v2;
    objc_msgSend(v2, sel_ak_addClientInfoHeader);
    objc_msgSend(v2, sel_ak_addDeviceUDIDHeader);
    sub_214D196E8();
    uint64_t v3 = swift_task_alloc();
    v0[11] = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + 8) = sub_214B70748;
    uint64_t v4 = v0[9];
    *(void *)(v3 + 56) = v4;
    *(unsigned char *)(v3 + 144) = 1;
    return MEMORY[0x270FA2498](sub_214B7137C, v4, 0);
  }
  else
  {
    sub_214B70A0C();
    swift_allocError();
    *uint64_t v5 = 2;
    swift_willThrow();
    unsigned int v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_214B70748(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = (void *)*v3;
  v6[12] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[9];
  if (v2)
  {
    uint64_t v8 = sub_214B7092C;
  }
  else
  {
    v6[13] = a2;
    v6[14] = a1;
    uint64_t v8 = sub_214B70888;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_214B70888()
{
  uint64_t v1 = *(void **)(v0 + 80);
  sub_214D19718();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214B7092C()
{
  uint64_t v1 = *(void *)(v0 + 56);

  uint64_t v2 = sub_214D19738();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

unint64_t sub_214B709CC()
{
  unint64_t result = qword_26ACE5470;
  if (!qword_26ACE5470)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE5470);
  }
  return result;
}

unint64_t sub_214B70A0C()
{
  unint64_t result = qword_26784CE18;
  if (!qword_26784CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784CE18);
  }
  return result;
}

uint64_t sub_214B70A60()
{
  *(void *)(v1 + 344) = v0;
  return MEMORY[0x270FA2498](sub_214B70A80, v0, 0);
}

uint64_t sub_214B70A80()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = *(void **)(v1 + 120);
  if (v2)
  {
LABEL_4:
    v0[44] = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CE30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    v0[37] = sub_214D1A038();
    v0[38] = v6;
    id v7 = v2;
    sub_214D1A728();
    *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 72) = 1;
    v0[39] = sub_214D1A038();
    v0[40] = v8;
    sub_214D1A728();
    *(void *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    *(void *)(inited + 144) = &unk_26C5A7040;
    sub_214B7EC98(inited);
    unint64_t v9 = *(void **)(v1 + 112);
    id v10 = v7;
    uint64_t v11 = sub_214D19F88();
    v0[45] = v11;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[7] = v0 + 41;
    v0[3] = sub_214B70D68;
    uint64_t v12 = swift_continuation_init();
    v0[32] = MEMORY[0x263EF8330];
    v0[33] = 0x40000000;
    v0[34] = sub_214B712A4;
    v0[35] = &block_descriptor;
    v0[36] = v12;
    objc_msgSend(v9, sel_renewCredentialsForAccount_options_completion_, v10, v11);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  id v3 = objc_msgSend(*(id *)(v1 + 112), sel_aida_accountForPrimaryiCloudAccount);
  uint64_t v4 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = v3;

  uint64_t v2 = *(void **)(v1 + 120);
  if (v2)
  {
    uint64_t v1 = v0[43];
    goto LABEL_4;
  }
  sub_214B70A0C();
  swift_allocError();
  unsigned char *v13 = 0;
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_214B70D68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 368) = v2;
  uint64_t v3 = *(void *)(v1 + 344);
  if (v2) {
    uint64_t v4 = sub_214B71228;
  }
  else {
    uint64_t v4 = sub_214B70E88;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B70E88()
{
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 328);

  if (v2 == 2)
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_214D19EE8();
    __swift_project_value_buffer(v10, (uint64_t)qword_26ACEBA58);
    uint64_t v11 = sub_214D19EC8();
    os_log_type_t v12 = sub_214D1A498();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_23;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    uint64_t v14 = "GrandSlamRenewal-Failed";
LABEL_17:
    _os_log_impl(&dword_214B4E000, v11, v12, v14, v13, 2u);
    uint64_t v16 = v13;
    goto LABEL_22;
  }
  if (v2 == 1)
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_214D19EE8();
    __swift_project_value_buffer(v15, (uint64_t)qword_26ACEBA58);
    uint64_t v11 = sub_214D19EC8();
    os_log_type_t v12 = sub_214D1A498();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_23;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    uint64_t v14 = "GrandSlamRenewal-Rejected";
    goto LABEL_17;
  }
  if (v2)
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_214D19EE8();
    __swift_project_value_buffer(v17, (uint64_t)qword_26ACEBA58);
    uint64_t v11 = sub_214D19EC8();
    os_log_type_t v18 = sub_214D1A4B8();
    if (!os_log_type_enabled(v11, v18)) {
      goto LABEL_23;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134217984;
    *(void *)(v0 + 336) = v2;
    sub_214D1A5F8();
    _os_log_impl(&dword_214B4E000, v11, v18, "GrandSlamRenewal-UnexpectedResultType: %ld", v19, 0xCu);
    uint64_t v16 = v19;
LABEL_22:
    MEMORY[0x2166B1540](v16, -1, -1);
LABEL_23:
    uint64_t v20 = *(void **)(v0 + 352);

    sub_214B70A0C();
    swift_allocError();
    *uint64_t v21 = 1;
    swift_willThrow();

    unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_24;
  }
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_214D19EE8();
  __swift_project_value_buffer(v3, (uint64_t)qword_26ACEBA58);
  uint64_t v4 = sub_214D19EC8();
  os_log_type_t v5 = sub_214D1A498();
  BOOL v6 = os_log_type_enabled(v4, v5);
  id v7 = *(void **)(v0 + 352);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_214B4E000, v4, v5, "GrandSlamRenewal-Success", v8, 2u);
    MEMORY[0x2166B1540](v8, -1, -1);
  }

  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_24:
  return v9();
}

uint64_t sub_214B71228()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v2 = (void *)v0[44];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214B712A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *BOOL v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214B71358(char a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 144) = a1;
  return MEMORY[0x270FA2498](sub_214B7137C, v1, 0);
}

uint64_t sub_214B7137C()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v1 + 120);
  if (v2
    || (id v3 = objc_msgSend(*(id *)(v1 + 112), sel_aida_accountForPrimaryiCloudAccount),
        uint64_t v4 = *(void **)(v1 + 120),
        *(void *)(v1 + 120) = v3,
        v4,
        (uint64_t v2 = *(void **)(v1 + 120)) != 0))
  {
    *(void *)(v0 + 64) = v2;
    id v5 = v2;
    id v6 = objc_msgSend(v5, sel_aida_alternateDSID);
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = sub_214D1A038();
      uint64_t v10 = v9;

      *(void *)(v0 + 72) = v8;
      *(void *)(v0 + 80) = v10;
      uint64_t v11 = (void *)sub_214D1A028();
      id v12 = objc_msgSend(v5, sel_aida_tokenWithExpiryCheckForService_, v11);

      if (v12)
      {
        uint64_t v13 = sub_214D1A038();
        uint64_t v15 = v14;

        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_214D1C1F0;
        uint64_t v17 = MEMORY[0x263F8D310];
        *(void *)(v16 + 56) = MEMORY[0x263F8D310];
        unint64_t v18 = sub_214B5F3EC();
        *(void *)(v16 + 32) = v8;
        *(void *)(v16 + 40) = v10;
        *(void *)(v16 + 96) = v17;
        *(void *)(v16 + 104) = v18;
        *(void *)(v16 + 64) = v18;
        *(void *)(v16 + 72) = v13;
        *(void *)(v16 + 80) = v15;
        uint64_t v19 = sub_214D1A078();
        uint64_t v21 = v20;

        uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v22(v19, v21);
      }
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_214B718B0;
      uint64_t v27 = *(void *)(v0 + 56);
      v26[43] = v27;
      uint64_t v28 = sub_214B70A80;
      goto LABEL_13;
    }
    sub_214B70A0C();
    uint64_t v24 = (void *)swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();
  }
  else
  {
    sub_214B70A0C();
    uint64_t v24 = (void *)swift_allocError();
    *uint64_t v29 = 0;
    swift_willThrow();
  }
  *(void *)(v0 + 104) = v24;
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    uint64_t v30 = *(void *)(v0 + 56);
    id v31 = objc_msgSend(*(id *)(v30 + 112), sel_aida_accountForPrimaryiCloudAccount);
    unint64_t v32 = *(void **)(v30 + 120);
    *(void *)(v30 + 120) = v31;

    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 112) = v33;
    *(void *)uint64_t v33 = v0;
    *(void *)(v33 + 8) = sub_214B71E28;
    uint64_t v27 = *(void *)(v0 + 56);
    *(void *)(v33 + 56) = v27;
    *(unsigned char *)(v33 + 144) = 0;
    uint64_t v28 = sub_214B7137C;
LABEL_13:
    return MEMORY[0x270FA2498](v28, v27, 0);
  }
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_214D19EE8();
  __swift_project_value_buffer(v34, (uint64_t)qword_26ACEBA58);
  id v35 = v24;
  id v36 = v24;
  uint64_t v37 = sub_214D19EC8();
  os_log_type_t v38 = sub_214D1A4A8();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v44 = v40;
    *(_DWORD *)uint64_t v39 = 136315138;
    swift_getErrorValue();
    uint64_t v41 = sub_214D1AC88();
    *(void *)(v0 + 48) = sub_214C3D88C(v41, v42, &v44);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v37, v38, "Error getting Auth Header %s", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v40, -1, -1);
    MEMORY[0x2166B1540](v39, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  char v43 = *(uint64_t (**)(void))(v0 + 8);
  return v43();
}

uint64_t sub_214B718B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_214B71FD0;
  }
  else {
    uint64_t v4 = sub_214B719DC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B719DC()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = (void *)sub_214D1A028();
  id v3 = objc_msgSend(v1, sel_aida_tokenWithExpiryCheckForService_, v2);

  uint64_t v4 = *(void *)(v0 + 80);
  if (v3)
  {
    id v5 = *(void **)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = sub_214D1A038();
    uint64_t v9 = v8;

    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_214D1C1F0;
    uint64_t v11 = MEMORY[0x263F8D310];
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    unint64_t v12 = sub_214B5F3EC();
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 40) = v4;
    *(void *)(v10 + 96) = v11;
    *(void *)(v10 + 104) = v12;
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 72) = v7;
    *(void *)(v10 + 80) = v9;
    uint64_t v13 = sub_214D1A078();
    uint64_t v15 = v14;

    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v16(v13, v15);
  }
  else
  {
    unint64_t v18 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease();
    sub_214B70A0C();
    uint64_t v19 = (void *)swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();

    *(void *)(v0 + 104) = v19;
    if (*(unsigned char *)(v0 + 144) == 1)
    {
      uint64_t v21 = *(void *)(v0 + 56);
      id v22 = objc_msgSend(*(id *)(v21 + 112), sel_aida_accountForPrimaryiCloudAccount);
      uint64_t v23 = *(void **)(v21 + 120);
      *(void *)(v21 + 120) = v22;

      uint64_t v24 = swift_task_alloc();
      *(void *)(v0 + 112) = v24;
      *(void *)uint64_t v24 = v0;
      *(void *)(v24 + 8) = sub_214B71E28;
      uint64_t v25 = *(void *)(v0 + 56);
      *(void *)(v24 + 56) = v25;
      *(unsigned char *)(v24 + 144) = 0;
      return MEMORY[0x270FA2498](sub_214B7137C, v25, 0);
    }
    else
    {
      if (qword_26ACE41E0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_214D19EE8();
      __swift_project_value_buffer(v26, (uint64_t)qword_26ACEBA58);
      id v27 = v19;
      id v28 = v19;
      uint64_t v29 = sub_214D19EC8();
      os_log_type_t v30 = sub_214D1A4A8();
      if (os_log_type_enabled(v29, v30))
      {
        id v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v36 = v32;
        *(_DWORD *)id v31 = 136315138;
        swift_getErrorValue();
        uint64_t v33 = sub_214D1AC88();
        *(void *)(v0 + 48) = sub_214C3D88C(v33, v34, &v36);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_214B4E000, v29, v30, "Error getting Auth Header %s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v32, -1, -1);
        MEMORY[0x2166B1540](v31, -1, -1);
      }
      else
      {
      }
      swift_willThrow();
      id v35 = *(uint64_t (**)(void))(v0 + 8);
      return v35();
    }
  }
}

uint64_t sub_214B71E28(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[15] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[7];
  if (v2)
  {
    uint64_t v8 = sub_214B722C4;
  }
  else
  {
    v6[16] = a2;
    v6[17] = a1;
    uint64_t v8 = sub_214B71F68;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_214B71F68()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_214B71FD0()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(v0 + 96);
  *(void *)(v0 + 104) = v2;
  if (*(unsigned char *)(v0 + 144) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 56);
    id v4 = objc_msgSend(*(id *)(v3 + 112), sel_aida_accountForPrimaryiCloudAccount);
    uint64_t v5 = *(void **)(v3 + 120);
    *(void *)(v3 + 120) = v4;

    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 112) = v6;
    *(void *)uint64_t v6 = v0;
    *(void *)(v6 + 8) = sub_214B71E28;
    uint64_t v7 = *(void *)(v0 + 56);
    *(void *)(v6 + 56) = v7;
    *(unsigned char *)(v6 + 144) = 0;
    return MEMORY[0x270FA2498](sub_214B7137C, v7, 0);
  }
  else
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_214D19EE8();
    __swift_project_value_buffer(v8, (uint64_t)qword_26ACEBA58);
    id v9 = v2;
    id v10 = v2;
    uint64_t v11 = sub_214D19EC8();
    os_log_type_t v12 = sub_214D1A4A8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_getErrorValue();
      uint64_t v15 = sub_214D1AC88();
      *(void *)(v0 + 48) = sub_214C3D88C(v15, v16, &v19);
      sub_214D1A5F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_214B4E000, v11, v12, "Error getting Auth Header %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v14, -1, -1);
      MEMORY[0x2166B1540](v13, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_214B722C4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ODIiCloudAccountManager.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIiCloudAccountManager.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODIiCloudAccountManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214B723A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_214B6A55C;
  v7[8] = a2;
  v7[9] = v6;
  v7[7] = a1;
  return MEMORY[0x270FA2498](sub_214B70584, v6, 0);
}

void *sub_214B72464(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_214D1A988();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_214B72508@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of AccountRequestHeaderProvider.applyAuthorisationHeaders(toRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_214B6B4A4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214B72648(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B72738;
  return v7(a1, a2);
}

uint64_t sub_214B72738(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_214B7283C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B6A55C;
  return v7(a1, a2);
}

uint64_t type metadata accessor for ODIiCloudAccountManager()
{
  return self;
}

uint64_t method lookup function for ODIiCloudAccountManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODIiCloudAccountManager);
}

uint64_t dispatch thunk of ODIiCloudAccountManager.applyAuthorisationHeaders(toRequest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 160) + **(int **)(*(void *)v2 + 160));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_214B6B4A4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ODIiCloudAccountManager.renewToken()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 168) + **(int **)(*(void *)v0 + 168));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_214B6B4A4;
  return v4();
}

unsigned char *storeEnumTagSinglePayload for ODIiCloudAccountManager.AccountError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B72C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIiCloudAccountManager.AccountError()
{
  return &type metadata for ODIiCloudAccountManager.AccountError;
}

unint64_t sub_214B72C74()
{
  unint64_t result = qword_26784CE68;
  if (!qword_26784CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CE68);
  }
  return result;
}

uint64_t sub_214B72CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_214B72CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_214B72CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_214B72D04(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_214B72D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 40)
                                                                                     + **(int **)(a6 + 40));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_214B6A55C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_214B72E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_214B72E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_214B72E68()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ODNAssessmentsFactory()
{
  return self;
}

uint64_t timeoutTask<A>(maxNanoSeconds:completionAfterTimeout:body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  _OWORD v7[3] = a2;
  _OWORD v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_214B72EC8, 0, 0);
}

uint64_t sub_214B72EC8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == -1)
  {
    uint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 48) + **(int **)(v0 + 48));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_214B731BC;
    uint64_t v10 = *(void *)(v0 + 16);
    return v12(v10);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 72) = v3;
    long long v5 = *(_OWORD *)(v0 + 32);
    long long v4 = *(_OWORD *)(v0 + 48);
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    *(_OWORD *)(v3 + 32) = v4;
    *(_OWORD *)(v3 + 48) = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_214B73080;
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 16);
    return MEMORY[0x270FA2360](v8, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214B73BA0, v3, v7);
  }
}

uint64_t sub_214B73080()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214B732B0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_214B731BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214B732B0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B73314(uint64_t a1)
{
  return sub_214B73350(a1);
}

uint64_t sub_214B73350(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  uint64_t v3 = sub_214D1A308();
  uint64_t v4 = sub_214D1A5D8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v14 - v7;
  swift_defaultActor_initialize();
  uint64_t v9 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v10 = *(void *)(v3 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v9, 1, 1, v3);
  uint64_t v12 = (void *)(v1 + *(void *)(*(void *)v1 + 104));
  void *v12 = 0;
  v12[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v8, a1, v3);
  v11((uint64_t)v8, 0, 1, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
  swift_endAccess();
  return v1;
}

uint64_t sub_214B7354C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  uint64_t v4 = sub_214D1A308();
  uint64_t v5 = sub_214D1A5D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v14[-v8];
  uint64_t v10 = (uint64_t)v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v10, v5);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v9, 1, 1, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 40))(v10, v9, v5);
  uint64_t result = swift_endAccess();
  uint64_t v12 = *(void (**)(uint64_t))((char *)v1 + *(void *)(*v1 + 104));
  if (v12)
  {
    uint64_t v13 = swift_retain();
    v12(v13);
    return sub_214B6A660((uint64_t)v12);
  }
  return result;
}

uint64_t sub_214B73740(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 104));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_retain();
  return sub_214B6A660(v4);
}

uint64_t sub_214B7379C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  sub_214D1A308();
  uint64_t v2 = sub_214D1A5D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_214B6A660(*(void *)(v0 + *(void *)(*(void *)v0 + 104)));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_214B7387C()
{
  sub_214B7379C();
  return swift_defaultActor_deallocate();
}

uint64_t sub_214B738A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  uint64_t v15 = sub_214D1A308();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v19 = (char *)&v30 - v18;
  type metadata accessor for TimeoutHelper();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, v15);
  swift_allocObject();
  uint64_t v20 = sub_214B73350((uint64_t)v19);
  uint64_t v21 = sub_214D1A368();
  id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v14, 1, 1, v21);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = a2;
  v23[5] = v20;
  swift_retain();
  uint64_t v24 = sub_214BD7480((uint64_t)v14, (uint64_t)&unk_26784CE88, (uint64_t)v23);
  v22(v14, 1, 1, v21);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = a3;
  v25[5] = a4;
  uint64_t v26 = v31;
  v25[6] = v20;
  v25[7] = v26;
  v25[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v27 = sub_214BF1024((uint64_t)v14, (uint64_t)&unk_26784CE98, (uint64_t)v25);
  v22(v14, 1, 1, v21);
  id v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v20;
  v28[5] = v24;
  v28[6] = v27;
  sub_214BF1024((uint64_t)v14, (uint64_t)&unk_26784CEA8, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_214B73BA0(uint64_t a1)
{
  return sub_214B738A8(a1, v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_214B73BB0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  sub_214D1A308();
  uint64_t result = sub_214D1A5D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TimeoutHelper()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for TimeoutError()
{
  return &type metadata for TimeoutError;
}

uint64_t sub_214B73CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  v5[4] = sub_214D1A308();
  uint64_t v7 = sub_214D1A5D8();
  v5[5] = v7;
  v5[6] = *(void *)(v7 - 8);
  v5[7] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  void v5[8] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_214B73DE0;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214B73DE0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 24);
    return MEMORY[0x270FA2498](sub_214B73F30, v6, 0);
  }
}

uint64_t sub_214B73F30()
{
  sub_214B7354C(*(void *)(v0 + 56));
  return MEMORY[0x270FA2498](sub_214B73F9C, 0, 0);
}

uint64_t sub_214B73F9C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
  }
  else
  {
    sub_214B74FB0();
    v0[2] = swift_allocError();
    sub_214D1A2E8();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_214D1A3A8();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214B740DC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = a7;
  v8[5] = a8;
  void v8[3] = a6;
  uint64_t v10 = *(void *)(*(void *)a6 + 80);
  _OWORD v8[6] = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4498);
  uint64_t v11 = sub_214D1A308();
  v8[7] = v11;
  uint64_t v12 = sub_214D1A5D8();
  v8[8] = v12;
  v8[9] = *(void *)(v12 - 8);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  v8[12] = *(void *)(v11 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  v8[16] = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v14 = (void *)swift_task_alloc();
  v8[17] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_214B74334;
  return v16(v13);
}

uint64_t sub_214B74334()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214B7489C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v3 = sub_214B74450;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214B74450()
{
  sub_214B7354C(*(void *)(v0 + 88));
  return MEMORY[0x270FA2498](sub_214B744BC, 0, 0);
}

uint64_t sub_214B744BC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = (int *)v0[4];
    (*(void (**)(uint64_t, void))(v0[9] + 8))(v1, v0[8]);
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[19] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_214B746F4;
    uint64_t v6 = v0[16];
    return v14(v6);
  }
  else
  {
    uint64_t v9 = v0[15];
    uint64_t v8 = v0[16];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[6];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v12);
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_214B746F4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B747F0, 0, 0);
}

uint64_t sub_214B747F0()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[16], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_214B7489C()
{
  return MEMORY[0x270FA2498](sub_214B748B8, *(void *)(v0 + 24), 0);
}

uint64_t sub_214B748B8()
{
  sub_214B7354C(*(void *)(v0 + 80));
  return MEMORY[0x270FA2498](sub_214B74924, 0, 0);
}

uint64_t sub_214B74924()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = (void *)v0[18];
    uint64_t v3 = v0[8];
    uint64_t v1 = v0[9];
  }
  else
  {
    uint64_t v5 = (void *)v0[18];
    v0[2] = v5;
    id v6 = v5;
    sub_214D1A2E8();
    uint64_t v4 = v5;
  }

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_214B74A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214B74A60, 0, 0);
}

uint64_t sub_214B74A60()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214B74B00, v3, 0);
}

uint64_t sub_214B74B00()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)(v0[2] + *(void *)(*(void *)v0[2] + 104));
  uint64_t v3 = *v2;
  uint64_t *v2 = (uint64_t)sub_214B74FA8;
  v2[1] = v1;
  swift_retain();
  sub_214B6A660(v3);
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214B74BB4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A378();
  return sub_214D1A378();
}

uint64_t sub_214B74C38()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_214B74C78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_214B6A55C;
  return sub_214B73CA8(a1, v4, v5, v7, v6);
}

uint64_t sub_214B74D38()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_214B74D88(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_214B6A55C;
  return sub_214B740DC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214B74E64()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214B74EB4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214B74A60, 0, 0);
}

uint64_t sub_214B74F68()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214B74FA8()
{
  return sub_214B74BB4();
}

unint64_t sub_214B74FB0()
{
  unint64_t result = qword_26ACE3620;
  if (!qword_26ACE3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3620);
  }
  return result;
}

unint64_t sub_214B75004(char a1)
{
  unint64_t result = 0x696C6F69766152;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x75706D6F43657250;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0x666F725068736143;
      break;
    case 4:
      unint64_t result = 0x726574614C796150;
      break;
    case 5:
      unint64_t result = 0x5073676E69766153;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6C69666F72506342;
      break;
    case 8:
      unint64_t result = 0x69666F7250706D41;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214B751B4(void *a1, uint64_t a2, uint64_t a3, __int16 *a4)
{
  __int16 v6 = *a4;
  if (a1)
  {
    sub_214D1A7A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = a2;
    uint64_t v14 = a3;
    sub_214D1A108();
    type metadata accessor for CFError(0);
    sub_214B76510((unint64_t *)&qword_26ACE44F0, type metadata accessor for CFError);
    sub_214D1AC88();

    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    uint64_t v8 = a2;
    uint64_t v9 = a3;
    LOWORD(v13) = v6;
    uint64_t v10 = 679;
  }
  else
  {
    sub_214D1A7A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v13 = a2;
    uint64_t v14 = a3;
    sub_214D1A108();
    uint64_t v8 = a2;
    uint64_t v9 = a3;
    LOWORD(v13) = v6;
    uint64_t v10 = 676;
  }
  uint64_t v11 = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v9, 0, (unsigned __int16 *)&v13, 0, 0, 0xD000000000000070, 0x8000000214D2F890, 0xD000000000000018, 0x8000000214D2F910, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t type metadata accessor for DIPCryptoKeychain()
{
  return self;
}

uint64_t sub_214B753C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPKeystoreKeychain()
{
  return self;
}

uint64_t sub_214B7541C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_214B75460()
{
  return sub_214D1A678();
}

unint64_t sub_214B75510()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_214D19F08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  __int16 v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_214D19F38();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v97 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 73) == 1)
  {
    uint64_t v92 = v8;
    uint64_t v93 = v6;
    uint64_t v94 = v7;
    uint64_t v95 = v3;
    uint64_t v96 = v2;
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t v103 = *(void *)(v1 + 16);
    uint64_t v98 = v1;
    uint64_t v102 = sub_214D1A038();
    uint64_t v104 = v12;
    uint64_t v105 = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D0);
    uint64_t v14 = *MEMORY[0x263F17000];
    uint64_t v108 = *MEMORY[0x263F171B8];
    uint64_t v109 = v14;
    uint64_t v110 = v113;
    uint64_t v15 = MEMORY[0x263F8D310];
    long long v107 = xmmword_214D1C1F0;
    uint64_t v101 = MEMORY[0x263F8EE58] + 8;
    long long v100 = xmmword_214D1EB80;
    char v16 = 1;
    uint64_t v99 = v13;
    while (1)
    {
      char v19 = v16;
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CEB8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v107;
      *(void *)(inited + 32) = sub_214D1A038();
      *(void *)(inited + 72) = v15;
      uint64_t v21 = v103;
      *(void *)(inited + 40) = v22;
      *(void *)(inited + 48) = v21;
      *(void *)(inited + 56) = v105;
      *(void *)(inited + 80) = sub_214D1A038();
      *(void *)(inited + 120) = v15;
      uint64_t v23 = v102;
      *(void *)(inited + 88) = v24;
      *(void *)(inited + 96) = v23;
      *(void *)(inited + 104) = v104;
      uint64_t v25 = (void *)sub_214D1A978();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_214B764A8(inited + 32, (uint64_t)&aBlock);
      uint64_t v26 = aBlock;
      uint64_t v27 = v112;
      unint64_t result = sub_214B87FEC(aBlock, v112);
      if (v29) {
        break;
      }
      *(void *)((char *)v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v30 = (uint64_t *)(v25[6] + 16 * result);
      *uint64_t v30 = v26;
      v30[1] = v27;
      unint64_t result = (unint64_t)sub_214B5EC20(v110, (_OWORD *)(v25[7] + 32 * result));
      uint64_t v31 = v25[2];
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32) {
        goto LABEL_42;
      }
      v25[2] = v33;
      sub_214B764A8(inited + 80, (uint64_t)&aBlock);
      uint64_t v34 = aBlock;
      uint64_t v35 = v112;
      unint64_t result = sub_214B87FEC(aBlock, v112);
      if (v36) {
        break;
      }
      *(void *)((char *)v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v37 = (uint64_t *)(v25[6] + 16 * result);
      *uint64_t v37 = v34;
      v37[1] = v35;
      unint64_t result = (unint64_t)sub_214B5EC20(v110, (_OWORD *)(v25[7] + 32 * result));
      uint64_t v38 = v25[2];
      BOOL v32 = __OFADD__(v38, 1);
      uint64_t v39 = v38 + 1;
      if (v32) {
        goto LABEL_42;
      }
      v25[2] = v39;
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x263F8D310];
      CFDictionaryRef v40 = (const __CFDictionary *)sub_214D19F88();
      swift_release();
      OSStatus v41 = SecItemDelete(v40);

      char v16 = 0;
      if (v41)
      {
        if (v41 == -25300)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v53 = *(void *)(v98 + 24);
          uint64_t v103 = *(void *)(v98 + 16);
          uint64_t v102 = sub_214D1A038();
          uint64_t v104 = v54;
          uint64_t v105 = v53;
          uint64_t v110 = v113;
          swift_bridgeObjectRetain();
          uint64_t v101 = MEMORY[0x263F8EE58] + 8;
          char v55 = 1;
          while (1)
          {
            do
            {
              char v58 = v55;
              uint64_t v59 = swift_initStackObject();
              *(_OWORD *)(v59 + 16) = v107;
              *(void *)(v59 + 32) = sub_214D1A038();
              *(void *)(v59 + 72) = v15;
              uint64_t v60 = v103;
              *(void *)(v59 + 40) = v61;
              *(void *)(v59 + 48) = v60;
              *(void *)(v59 + 56) = v105;
              *(void *)(v59 + 80) = sub_214D1A038();
              *(void *)(v59 + 120) = v15;
              uint64_t v62 = v102;
              *(void *)(v59 + 88) = v63;
              *(void *)(v59 + 96) = v62;
              *(void *)(v59 + 104) = v104;
              char v64 = (void *)sub_214D1A978();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_214B764A8(v59 + 32, (uint64_t)&aBlock);
              uint64_t v65 = aBlock;
              uint64_t v66 = v112;
              unint64_t result = sub_214B87FEC(aBlock, v112);
              if (v67) {
                goto LABEL_43;
              }
              *(void *)((char *)v64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
              uint64_t v68 = (uint64_t *)(v64[6] + 16 * result);
              *uint64_t v68 = v65;
              v68[1] = v66;
              unint64_t result = (unint64_t)sub_214B5EC20(v110, (_OWORD *)(v64[7] + 32 * result));
              uint64_t v69 = v64[2];
              BOOL v32 = __OFADD__(v69, 1);
              uint64_t v70 = v69 + 1;
              if (v32) {
                goto LABEL_44;
              }
              v64[2] = v70;
              sub_214B764A8(v59 + 80, (uint64_t)&aBlock);
              uint64_t v71 = aBlock;
              uint64_t v72 = v112;
              unint64_t result = sub_214B87FEC(aBlock, v112);
              if (v73) {
                goto LABEL_43;
              }
              *(void *)((char *)v64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
              unint64_t v74 = (uint64_t *)(v64[6] + 16 * result);
              *unint64_t v74 = v71;
              v74[1] = v72;
              unint64_t result = (unint64_t)sub_214B5EC20(v110, (_OWORD *)(v64[7] + 32 * result));
              uint64_t v75 = v64[2];
              BOOL v32 = __OFADD__(v75, 1);
              uint64_t v76 = v75 + 1;
              if (v32) {
                goto LABEL_44;
              }
              v64[2] = v76;
              swift_bridgeObjectRelease();
              uint64_t v15 = MEMORY[0x263F8D310];
              CFDictionaryRef v77 = (const __CFDictionary *)sub_214D19F88();
              swift_release();
              OSStatus v78 = SecItemDelete(v77);

              char v55 = 0;
            }
            while (!v78);
            if (v78 == -25300)
            {
LABEL_34:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v1 = v98;
              uint64_t v3 = v95;
              uint64_t v2 = v96;
              __int16 v6 = v93;
              uint64_t v7 = v94;
              uint64_t v8 = v92;
              goto LABEL_35;
            }
            if (qword_26ACE41D8 != -1) {
              swift_once();
            }
            id v79 = (id)qword_26ACEBA50;
            sub_214D1A4A8();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
            uint64_t v80 = swift_allocObject();
            *(_OWORD *)(v80 + 16) = v100;
            *(void *)(v80 + 56) = v15;
            uint64_t v81 = v15;
            unint64_t v82 = sub_214B5F3EC();
            uint64_t v83 = v104;
            uint64_t v84 = v105;
            *(void *)(v80 + 32) = v103;
            *(void *)(v80 + 40) = v84;
            *(void *)(v80 + 96) = v81;
            *(void *)(v80 + 104) = v82;
            uint64_t v85 = v102;
            *(void *)(v80 + 64) = v82;
            *(void *)(v80 + 72) = v85;
            *(void *)(v80 + 80) = v83;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            CFStringRef v86 = SecCopyErrorMessageString(v78, 0);
            if (v86)
            {
              uint64_t v87 = (__CFString *)v86;
              uint64_t v88 = sub_214D1A038();
              unint64_t v57 = v89;

              char v56 = (uint64_t *)(v80 + 112);
              *(void *)(v80 + 136) = v81;
              *(void *)(v80 + 144) = v82;
              if (v57)
              {
                *char v56 = v88;
                goto LABEL_21;
              }
            }
            else
            {
              char v56 = (uint64_t *)(v80 + 112);
              *(void *)(v80 + 136) = v81;
              *(void *)(v80 + 144) = v82;
            }
            *char v56 = 0;
            unint64_t v57 = 0xE000000000000000;
LABEL_21:
            uint64_t v15 = MEMORY[0x263F8D310];
            *(void *)(v80 + 120) = v57;
            sub_214D19E78();

            swift_bridgeObjectRelease();
            char v55 = 0;
            if (v58) {
              goto LABEL_34;
            }
          }
        }
        if (qword_26ACE41D8 != -1) {
          swift_once();
        }
        id v42 = (id)qword_26ACEBA50;
        sub_214D1A4A8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v100;
        *(void *)(v43 + 56) = v15;
        uint64_t v44 = v15;
        unint64_t v45 = sub_214B5F3EC();
        uint64_t v46 = v104;
        uint64_t v47 = v105;
        *(void *)(v43 + 32) = v103;
        *(void *)(v43 + 40) = v47;
        *(void *)(v43 + 96) = v44;
        *(void *)(v43 + 104) = v45;
        uint64_t v48 = v102;
        *(void *)(v43 + 64) = v45;
        *(void *)(v43 + 72) = v48;
        *(void *)(v43 + 80) = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CFStringRef v49 = SecCopyErrorMessageString(v41, 0);
        if (v49)
        {
          uint64_t v50 = (__CFString *)v49;
          uint64_t v51 = sub_214D1A038();
          unint64_t v18 = v52;

          uint64_t v17 = (uint64_t *)(v43 + 112);
          *(void *)(v43 + 136) = v44;
          *(void *)(v43 + 144) = v45;
          if (v18)
          {
            *uint64_t v17 = v51;
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v17 = (uint64_t *)(v43 + 112);
          *(void *)(v43 + 136) = v44;
          *(void *)(v43 + 144) = v45;
        }
        *uint64_t v17 = 0;
        unint64_t v18 = 0xE000000000000000;
LABEL_5:
        uint64_t v15 = MEMORY[0x263F8D310];
        *(void *)(v43 + 120) = v18;
        sub_214D19E78();

        swift_bridgeObjectRelease();
        char v16 = 0;
        if (v19) {
          goto LABEL_18;
        }
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  else
  {
LABEL_35:
    if (*(unsigned char *)(v1 + 88) == 1)
    {
      if (*(void *)(v1 + 80))
      {
        uint64_t v110 = *(_OWORD **)(v1 + 80);
        swift_getObjectType();
        v113[2] = nullsub_1;
        v113[3] = 0;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v112 = 1107296256;
        v113[0] = sub_214B7541C;
        v113[1] = &block_descriptor_7;
        uint64_t v90 = _Block_copy(&aBlock);
        uint64_t v91 = v97;
        sub_214D19F28();
        sub_214B75460();
        sub_214D1A558();
        _Block_release(v90);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v91, v7);
        if (*(void *)(v1 + 80))
        {
          swift_getObjectType();
          sub_214D1A568();
        }
      }
      *(unsigned char *)(v1 + 88) = 0;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_214B59EAC(*(void *)(v1 + 56), *(void *)(v1 + 64));
    swift_unknownObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_214B75EC0()
{
  sub_214B75510();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IdentityKeyWithKeychain()
{
  return self;
}

SecCertificateRef sub_214B75F18()
{
  uint64_t v1 = sub_214D19AE8();
  if (v2 >> 60 == 15)
  {
    unsigned __int16 v9 = 88;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x8000000214D2FB90, 0, &v9, 0, 0, 0xD000000000000070, 0x8000000214D2F890, 0xD00000000000001FLL, 0x8000000214D2FBC0, 693);
    swift_willThrow();
  }
  else
  {
    uint64_t v3 = v1;
    unint64_t v4 = v2;
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFDataRef v6 = (const __CFData *)sub_214D19B38();
    SecCertificateRef v0 = SecCertificateCreateWithData(v5, v6);

    if (v0)
    {
      sub_214B59EAC(v3, v4);
    }
    else
    {
      unsigned __int16 v8 = 90;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D2FBE0, 0, &v8, 0, 0, 0xD000000000000070, 0x8000000214D2F890, 0xD00000000000001FLL, 0x8000000214D2FBC0, 696);
      swift_willThrow();
      sub_214B59EAC(v3, v4);
    }
  }
  return v0;
}

uint64_t sub_214B760A8(__SecKey *a1)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFDataRef v1 = SecKeyCopyExternalRepresentation(a1, error);
  if (v1)
  {
    CFDataRef v2 = v1;
    uint64_t v3 = sub_214D19B68();
  }
  else
  {
    __int16 v7 = 0;
    unint64_t v4 = (void *)sub_214B751B4(error[0], 0xD00000000000002DLL, 0x8000000214D2FB60, &v7);
    if (qword_26ACE41D8 != -1) {
      swift_once();
    }
    id v5 = (id)qword_26ACEBA50;
    sub_214B5ADD8(v4, 0, 0xE000000000000000);

    return 0;
  }
  return v3;
}

CFStringRef sub_214B761C4(__SecKey *a1, __SecKey *a2, const __CFString *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_26ACEBA50;
  sub_214D1A498();
  sub_214D19E78();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
  uint64_t v14 = (void *)*MEMORY[0x263F173D8];
  uint64_t v15 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 32) = *MEMORY[0x263F173D8];
  *(void *)(inited + 40) = a4;
  char v16 = (void *)*MEMORY[0x263F173E0];
  *(void *)(inited + 64) = v15;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 104) = MEMORY[0x263F06F78];
  *(void *)(inited + 80) = a5;
  *(void *)(inited + 88) = a6;
  id v17 = v14;
  id v18 = v16;
  sub_214B6A3A0(a5, a6);
  sub_214B7EB68(inited);
  sub_214B76450();
  sub_214B76510((unint64_t *)&qword_26ACE3A18, (void (*)(uint64_t))sub_214B76450);
  CFDictionaryRef v19 = (const __CFDictionary *)sub_214D19F88();
  swift_bridgeObjectRelease();
  CFDataRef v20 = SecKeyCopyKeyExchangeResult(a1, a3, a2, v19, error);

  if (v20)
  {
    type metadata accessor for DIPSecureData();
    a3 = (const __CFString *)swift_allocObject();
    a3->data = (char *)v20;
    CFDataRef v21 = v20;
    BytePtr = CFDataGetBytePtr(v21);
    size_t Length = CFDataGetLength(v21);
    mlock(BytePtr, Length);
  }
  else
  {
    __int16 v25 = 203;
    sub_214B751B4(error[0], 0xD00000000000001DLL, 0x8000000214D2F950, &v25);
    swift_willThrow();
  }
  return a3;
}

unint64_t sub_214B76450()
{
  unint64_t result = qword_26ACE3A10;
  if (!qword_26ACE3A10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE3A10);
  }
  return result;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_214B764A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B76510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214B76558()
{
  unint64_t result = qword_26ACE42D0;
  if (!qword_26ACE42D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26ACE42C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE42D0);
  }
  return result;
}

void sub_214B765B4(char a1, __SecAccessControl *a2, char a3)
{
  CFErrorRef error[2] = *(CFErrorRef *)MEMORY[0x263EF8340];
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v5 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_214D1C1F0;
      uint64_t v7 = sub_214D1A038();
      uint64_t v9 = v8;
      *(void *)(v6 + 56) = MEMORY[0x263F8D310];
      unint64_t v10 = sub_214B5F3EC();
      uint64_t v11 = MEMORY[0x263F8D6C8];
      uint64_t v12 = MEMORY[0x263F8D750];
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v9;
      *(void *)(v6 + 96) = v11;
      *(void *)(v6 + 104) = v12;
      *(void *)(v6 + 64) = v10;
      *(void *)(v6 + 72) = 2048;
      sub_214D19E78();

      swift_bridgeObjectRelease();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      strcpy((char *)error, "key algorithm ");
      HIBYTE(error[1]) = -18;
      sub_214D1A038();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      uint64_t v53 = 2048;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      CFErrorRef v13 = error[0];
      LOWORD(error[0]) = 199;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)((uint64_t)v13, (uint64_t)error[1], 0, (unsigned __int16 *)error, 0, 0, 0xD000000000000070, 0x8000000214D2F890, 0xD000000000000026, 0x8000000214D2FA50, 66);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    char v14 = 1;
  }
  else
  {
    char v14 = 0;
  }
  id v15 = objc_msgSend(self, sel_getSharedInstance);
  objc_msgSend(v15, sel_hasPKASupport);

  uint64_t v16 = sub_214D1A038();
  uint64_t v18 = v17;
  error[0] = 0;
  SecAccessControlRef v19 = a2;
  if (!a2)
  {
    SecAccessControlRef v19 = SecAccessControlCreateWithFlags((CFAllocatorRef)*MEMORY[0x263EFFB08], (CFTypeRef)*MEMORY[0x263F16EA0], 0x40000000uLL, error);
    if (!v19)
    {
      swift_bridgeObjectRelease();
      LOWORD(v53) = 200;
      sub_214B751B4(error[0], 0xD000000000000036, 0x8000000214D2FB20, (__int16 *)&v53);
LABEL_22:
      swift_willThrow();
      return;
    }
  }
  char v51 = a3;
  unint64_t v52 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1EB90;
  CFDataRef v21 = (void *)*MEMORY[0x263F16F50];
  *(void *)(inited + 32) = *MEMORY[0x263F16F50];
  uint64_t v22 = MEMORY[0x263F8D4F8];
  uint64_t v23 = (void **)MEMORY[0x263F16FA8];
  *(unsigned char *)(inited + 40) = 0;
  uint64_t v24 = *v23;
  *(void *)(inited + 64) = v22;
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 104) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v16;
  *(void *)(inited + 88) = v18;
  __int16 v25 = (void *)*MEMORY[0x263F173C8];
  if (*MEMORY[0x263F173C8])
  {
    uint64_t v26 = (void *)inited;
    *(void *)(inited + 112) = v25;
    *(unsigned char *)(inited + 120) = v14;
    uint64_t v27 = (void *)*MEMORY[0x263F16F98];
    *(void *)(inited + 144) = v22;
    *(void *)(inited + 152) = v27;
    uint64_t v28 = MEMORY[0x263F8D6C8];
    *(void *)(inited + 160) = 256;
    char v29 = (void *)*MEMORY[0x263F170D0];
    uint64_t v30 = (void **)MEMORY[0x263F170D8];
    *(void *)(inited + 184) = v28;
    *(void *)(inited + 192) = v29;
    uint64_t v31 = (void **)MEMORY[0x263F170E0];
    if ((v51 & 1) == 0) {
      uint64_t v31 = v30;
    }
    BOOL v32 = *v31;
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE39E0);
    v26[25] = v32;
    uint64_t v34 = (void *)*MEMORY[0x263F16E70];
    v26[28] = v33;
    v26[29] = v34;
    type metadata accessor for SecAccessControl(0);
    v26[33] = v35;
    v26[30] = v19;
    id v36 = v32;
    uint64_t v37 = v52;
    id v38 = v21;
    id v39 = v24;
    id v40 = v27;
    id v41 = v29;
    id v42 = v34;
    uint64_t v43 = v19;
    id v44 = v25;
    sub_214B7EB68((uint64_t)v26);
    sub_214B76450();
    sub_214B76510((unint64_t *)&qword_26ACE3A18, (void (*)(uint64_t))sub_214B76450);
    CFDictionaryRef v45 = (const __CFDictionary *)sub_214D19F88();
    swift_bridgeObjectRelease();
    RandomKey = SecKeyCreateRandomKey(v45, error);

    if (RandomKey)
    {
      if (SecKeyCopyPublicKey(RandomKey))
      {

        return;
      }
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v47 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      sub_214D19E78();

      LOWORD(v53) = 198;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D2FAF0, 0, (unsigned __int16 *)&v53, 0, 0, 0xD000000000000070, 0x8000000214D2F890, 0xD000000000000026, 0x8000000214D2FA50, 91);
      swift_willThrow();
    }
    else
    {
      LOWORD(v53) = 197;
      sub_214B751B4(error[0], 0xD00000000000002CLL, 0x8000000214D2FA80, (__int16 *)&v53);
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v48 = a2;
    id v49 = v21;
    id v50 = v24;

    __break(1u);
  }
}

void sub_214B76C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __SecKey *a5, const __CFString *a6)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFDataRef v8 = (const __CFData *)sub_214D19B38();
  CFDataRef v9 = (const __CFData *)sub_214D19B38();
  LODWORD(a6) = SecKeyVerifySignature(a5, a6, v8, v9, error);

  if (!a6)
  {
    __int16 v10 = 202;
    sub_214B751B4(error[0], 0xD000000000000023, 0x8000000214D2F9D0, &v10);
    swift_willThrow();
  }
}

uint64_t Loggable.notice(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 8))(a1, a2, &v6);
}

uint64_t Loggable.debug(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 16))(a1, a2, &v6);
}

uint64_t Loggable.warning(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 24))(a1, a2, &v6);
}

uint64_t Loggable.info(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 32))(a1, a2, &v6);
}

uint64_t Loggable.error(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 40))(a1, a2, &v6);
}

uint64_t Loggable.critical(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 48))(a1, a2, &v6);
}

uint64_t Loggable.fault(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 56))(a1, a2, &v6);
}

uint64_t Loggable.fault(_:isPublic:category:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(a6 + 64))(a1, a2, a3, &v7);
}

uint64_t Loggable.sensitive(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 72))(a1, a2, &v6);
}

Swift::Void __swiftcall Loggable.milestone(tag:description:value:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::String_optional value, Swift::Bool isSensitive)
{
  char v5 = *(unsigned char *)tag;
  (*(void (**)(char *, uint64_t, void *, uint64_t, void *, Swift::Bool))(v4 + 80))(&v5, description._countAndFlagsBits, description._object, value.value._countAndFlagsBits, value.value._object, isSensitive);
}

uint64_t sub_214B76FD4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(a1, a2, a3, a4, a5, a8, a6, a9, a7);
}

uint64_t Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v10 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 88))(&v10, a2, a3, a4, a5, a7, a9, a6, a8);
}

uint64_t dispatch thunk of Loggable.notice(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of Loggable.debug(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of Loggable.warning(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of Loggable.info(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of Loggable.error(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of Loggable.critical(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of Loggable.fault(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of Loggable.fault(_:isPublic:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of Loggable.sensitive(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of Loggable.milestone(tag:description:value:isSensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 80))();
}

uint64_t dispatch thunk of Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 88))();
}

uint64_t _s5StateVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[6])
  {
    swift_bridgeObjectRelease();
    if (a1[9])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (a1[29] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[42])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[46])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[61] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwcp(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v7 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    if (v7)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v7;
      uint64_t v8 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v8;
      uint64_t v9 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v9;
      uint64_t v10 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v18 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v18;
      long long v19 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v19;
    }
    uint64_t v20 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v20;
    uint64_t v21 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v21;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    uint64_t v22 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v22;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    uint64_t v23 = *(void *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v23 == 1)
    {
      long long v24 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v24;
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
    }
    else
    {
      uint64_t v25 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v25;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v23;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    uint64_t v26 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v26;
    uint64_t v27 = *(void *)(a2 + 280);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = v27;
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    uint64_t v28 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = *(void *)(a2 + 336);
    if (v11) {
      goto LABEL_11;
    }
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 504) = v12;
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
    *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
    long long v13 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v13;
    long long v14 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v14;
    long long v15 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v15;
    long long v16 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v16;
    long long v17 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v17;
    goto LABEL_18;
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
  uint64_t v11 = *(void *)(a2 + 336);
  if (!v11) {
    goto LABEL_5;
  }
LABEL_11:
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v11;
  uint64_t v29 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v29;
  uint64_t v30 = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = v30;
    uint64_t v31 = *(void *)(a2 + 384);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = v31;
    uint64_t v32 = *(void *)(a2 + 400);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = v32;
    uint64_t v33 = *(void *)(a2 + 416);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v34;
    long long v35 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v35;
  }
  uint64_t v36 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v36;
  uint64_t v37 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v37;
  uint64_t v38 = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    long long v39 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v39;
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
  }
  else
  {
    uint64_t v40 = *(void *)(a2 + 464);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = v40;
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v38;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  uint64_t v41 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v41;
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  swift_retain();
LABEL_18:
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v5 = (_OWORD *)(a1 + 64);
      uint64_t v6 = (long long *)(a2 + 64);
      uint64_t v7 = *(void *)(a2 + 72);
      if (*(void *)(a1 + 72))
      {
        if (v7)
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_214B78000(a1 + 64);
          long long v9 = *(_OWORD *)(a2 + 112);
          long long v11 = *v6;
          long long v10 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v9;
          *uint64_t v5 = v11;
          *(_OWORD *)(a1 + 80) = v10;
        }
      }
      else if (v7)
      {
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v23 = *v6;
        long long v24 = *(_OWORD *)(a2 + 80);
        long long v25 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v25;
        *uint64_t v5 = v23;
        *(_OWORD *)(a1 + 80) = v24;
      }
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_retain();
      swift_release();
      uint64_t v26 = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = v26;
      uint64_t v27 = (long long *)(a1 + 200);
      uint64_t v28 = (long long *)(a2 + 200);
      uint64_t v29 = *(void *)(a2 + 232);
      if (*(void *)(a1 + 232) == 1)
      {
        if (v29 == 1)
        {
          long long v30 = *v28;
          long long v31 = *(_OWORD *)(a2 + 216);
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *uint64_t v27 = v30;
          *(_OWORD *)(a1 + 216) = v31;
        }
        else
        {
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          uint64_t v34 = *(void *)(a2 + 208);
          *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
          *(void *)(a1 + 208) = v34;
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          swift_bridgeObjectRetain();
        }
      }
      else if (v29 == 1)
      {
        sub_214B78054(a1 + 200);
        uint64_t v32 = *(void *)(a2 + 232);
        long long v33 = *(_OWORD *)(a2 + 216);
        *uint64_t v27 = *v28;
        *(_OWORD *)(a1 + 216) = v33;
        *(void *)(a1 + 232) = v32;
      }
      else
      {
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        uint64_t v35 = *(void *)(a2 + 208);
        *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
        *(void *)(a1 + 208) = v35;
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = *(void *)(a2 + 240);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(void *)(a1 + 240) = v36;
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void *)(a2 + 280);
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      *(void *)(a1 + 280) = v37;
      uint64_t v38 = *(void *)(a2 + 296);
      *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
      *(void *)(a1 + 296) = v38;
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_214B780A8(a1 + 40);
  }
  else if (v4)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 64);
      long long v13 = *(_OWORD *)(a2 + 80);
      long long v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 80) = v13;
    }
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    uint64_t v15 = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 184) = v15;
    uint64_t v16 = *(void *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v16 == 1)
    {
      long long v17 = *(_OWORD *)(a2 + 200);
      long long v18 = *(_OWORD *)(a2 + 216);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(_OWORD *)(a1 + 200) = v17;
      *(_OWORD *)(a1 + 216) = v18;
    }
    else
    {
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      uint64_t v19 = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 208) = v19;
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
    }
    uint64_t v20 = *(void *)(a2 + 240);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(void *)(a1 + 240) = v20;
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    uint64_t v21 = *(void *)(a2 + 280);
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    *(void *)(a1 + 280) = v21;
    uint64_t v22 = *(void *)(a2 + 296);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    *(void *)(a1 + 296) = v22;
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
LABEL_28:
  long long v39 = (_OWORD *)(a1 + 328);
  uint64_t v40 = (_OWORD *)(a2 + 328);
  uint64_t v41 = *(void *)(a2 + 336);
  if (*(void *)(a1 + 336))
  {
    if (v41)
    {
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v42 = (_OWORD *)(a1 + 360);
      uint64_t v43 = (long long *)(a2 + 360);
      uint64_t v44 = *(void *)(a2 + 368);
      if (*(void *)(a1 + 368))
      {
        if (v44)
        {
          *(void *)(a1 + 360) = *(void *)(a2 + 360);
          *(void *)(a1 + 368) = *(void *)(a2 + 368);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 376) = *(void *)(a2 + 376);
          *(void *)(a1 + 384) = *(void *)(a2 + 384);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 392) = *(void *)(a2 + 392);
          *(void *)(a1 + 400) = *(void *)(a2 + 400);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 408) = *(void *)(a2 + 408);
          *(void *)(a1 + 416) = *(void *)(a2 + 416);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_214B78000(a1 + 360);
          long long v66 = *(_OWORD *)(a2 + 408);
          long long v68 = *v43;
          long long v67 = *(_OWORD *)(a2 + 376);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v66;
          *id v42 = v68;
          *(_OWORD *)(a1 + 376) = v67;
        }
      }
      else if (v44)
      {
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        *(void *)(a1 + 368) = *(void *)(a2 + 368);
        *(void *)(a1 + 376) = *(void *)(a2 + 376);
        *(void *)(a1 + 384) = *(void *)(a2 + 384);
        *(void *)(a1 + 392) = *(void *)(a2 + 392);
        *(void *)(a1 + 400) = *(void *)(a2 + 400);
        *(void *)(a1 + 408) = *(void *)(a2 + 408);
        *(void *)(a1 + 416) = *(void *)(a2 + 416);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v78 = *v43;
        long long v79 = *(_OWORD *)(a2 + 376);
        long long v80 = *(_OWORD *)(a2 + 408);
        *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
        *(_OWORD *)(a1 + 408) = v80;
        *id v42 = v78;
        *(_OWORD *)(a1 + 376) = v79;
      }
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v81 = (long long *)(a1 + 456);
      unint64_t v82 = (long long *)(a2 + 456);
      uint64_t v83 = *(void *)(a2 + 488);
      if (*(void *)(a1 + 488) == 1)
      {
        if (v83 == 1)
        {
          long long v84 = *v82;
          long long v85 = *(_OWORD *)(a2 + 472);
          *(void *)(a1 + 488) = *(void *)(a2 + 488);
          *uint64_t v81 = v84;
          *(_OWORD *)(a1 + 472) = v85;
        }
        else
        {
          *(void *)(a1 + 456) = *(void *)(a2 + 456);
          uint64_t v88 = *(void *)(a2 + 464);
          *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
          *(void *)(a1 + 464) = v88;
          *(void *)(a1 + 480) = *(void *)(a2 + 480);
          *(void *)(a1 + 488) = *(void *)(a2 + 488);
          swift_bridgeObjectRetain();
        }
      }
      else if (v83 == 1)
      {
        sub_214B78054(a1 + 456);
        uint64_t v86 = *(void *)(a2 + 488);
        long long v87 = *(_OWORD *)(a2 + 472);
        *uint64_t v81 = *v82;
        *(_OWORD *)(a1 + 472) = v87;
        *(void *)(a1 + 488) = v86;
      }
      else
      {
        *(void *)(a1 + 456) = *(void *)(a2 + 456);
        uint64_t v89 = *(void *)(a2 + 464);
        *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
        *(void *)(a1 + 464) = v89;
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        *(void *)(a1 + 488) = *(void *)(a2 + 488);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_retain();
      swift_release();
      uint64_t v90 = *(void *)(a2 + 512);
      *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
      *(void *)(a1 + 512) = v90;
      uint64_t v91 = *(void *)(a2 + 528);
      *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
      *(void *)(a1 + 528) = v91;
    }
    else
    {
      sub_214B780FC(a1 + 328);
      long long v46 = *(_OWORD *)(a2 + 344);
      *long long v39 = *v40;
      *(_OWORD *)(a1 + 344) = v46;
      long long v47 = *(_OWORD *)(a2 + 408);
      long long v49 = *(_OWORD *)(a2 + 360);
      long long v48 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v47;
      *(_OWORD *)(a1 + 360) = v49;
      *(_OWORD *)(a1 + 376) = v48;
      long long v50 = *(_OWORD *)(a2 + 472);
      long long v52 = *(_OWORD *)(a2 + 424);
      long long v51 = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 472) = v50;
      *(_OWORD *)(a1 + 424) = v52;
      *(_OWORD *)(a1 + 440) = v51;
      long long v54 = *(_OWORD *)(a2 + 504);
      long long v53 = *(_OWORD *)(a2 + 520);
      long long v55 = *(_OWORD *)(a2 + 488);
      *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
      *(_OWORD *)(a1 + 504) = v54;
      *(_OWORD *)(a1 + 520) = v53;
      *(_OWORD *)(a1 + 488) = v55;
    }
  }
  else if (v41)
  {
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    uint64_t v45 = *(void *)(a2 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45)
    {
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v69 = *(_OWORD *)(a2 + 360);
      long long v70 = *(_OWORD *)(a2 + 376);
      long long v71 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v71;
      *(_OWORD *)(a1 + 360) = v69;
      *(_OWORD *)(a1 + 376) = v70;
    }
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    uint64_t v72 = *(void *)(a2 + 488);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72 == 1)
    {
      long long v73 = *(_OWORD *)(a2 + 456);
      long long v74 = *(_OWORD *)(a2 + 472);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(_OWORD *)(a1 + 456) = v73;
      *(_OWORD *)(a1 + 472) = v74;
    }
    else
    {
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      uint64_t v75 = *(void *)(a2 + 464);
      *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
      *(void *)(a1 + 464) = v75;
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    uint64_t v76 = *(void *)(a2 + 512);
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    *(void *)(a1 + 512) = v76;
    uint64_t v77 = *(void *)(a2 + 528);
    *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
    *(void *)(a1 + 528) = v77;
    swift_retain();
  }
  else
  {
    long long v56 = *(_OWORD *)(a2 + 344);
    *long long v39 = *v40;
    *(_OWORD *)(a1 + 344) = v56;
    long long v57 = *(_OWORD *)(a2 + 360);
    long long v58 = *(_OWORD *)(a2 + 376);
    long long v59 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v59;
    *(_OWORD *)(a1 + 360) = v57;
    *(_OWORD *)(a1 + 376) = v58;
    long long v60 = *(_OWORD *)(a2 + 424);
    long long v61 = *(_OWORD *)(a2 + 440);
    long long v62 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v62;
    *(_OWORD *)(a1 + 424) = v60;
    *(_OWORD *)(a1 + 440) = v61;
    long long v63 = *(_OWORD *)(a2 + 488);
    long long v64 = *(_OWORD *)(a2 + 504);
    long long v65 = *(_OWORD *)(a2 + 520);
    *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
    *(_OWORD *)(a1 + 504) = v64;
    *(_OWORD *)(a1 + 520) = v65;
    *(_OWORD *)(a1 + 488) = v63;
  }
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214B78000(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B78054(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B780A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_214B780FC(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy560_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x230uLL);
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48)) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  if (!v6)
  {
    sub_214B780A8(a1 + 40);
LABEL_7:
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
    goto LABEL_16;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  if (*(void *)(a1 + 72))
  {
    uint64_t v7 = *(void *)(a2 + 72);
    if (v7)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_214B78000(a1 + 64);
  }
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
LABEL_10:
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  if (*(void *)(a1 + 232) != 1)
  {
    uint64_t v15 = *(void *)(a2 + 232);
    if (v15 != 1)
    {
      uint64_t v17 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_214B78054(a1 + 200);
  }
  long long v16 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v16;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
LABEL_15:
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v18 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  uint64_t v19 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v19;
  swift_bridgeObjectRelease();
LABEL_16:
  if (*(void *)(a1 + 336))
  {
    uint64_t v20 = *(void *)(a2 + 336);
    if (v20)
    {
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 352);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v21;
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 368))
      {
        uint64_t v22 = *(void *)(a2 + 368);
        if (v22)
        {
          *(void *)(a1 + 360) = *(void *)(a2 + 360);
          *(void *)(a1 + 368) = v22;
          swift_bridgeObjectRelease();
          uint64_t v23 = *(void *)(a2 + 384);
          *(void *)(a1 + 376) = *(void *)(a2 + 376);
          *(void *)(a1 + 384) = v23;
          swift_bridgeObjectRelease();
          uint64_t v24 = *(void *)(a2 + 400);
          *(void *)(a1 + 392) = *(void *)(a2 + 392);
          *(void *)(a1 + 400) = v24;
          swift_bridgeObjectRelease();
          uint64_t v25 = *(void *)(a2 + 416);
          *(void *)(a1 + 408) = *(void *)(a2 + 408);
          *(void *)(a1 + 416) = v25;
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        sub_214B78000(a1 + 360);
      }
      long long v32 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 376) = v32;
      long long v33 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v33;
LABEL_25:
      uint64_t v34 = *(void *)(a2 + 432);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = v34;
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void *)(a2 + 448);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(void *)(a1 + 448) = v35;
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 488) != 1)
      {
        uint64_t v36 = *(void *)(a2 + 488);
        if (v36 != 1)
        {
          uint64_t v38 = *(void *)(a2 + 464);
          *(void *)(a1 + 456) = *(void *)(a2 + 456);
          *(void *)(a1 + 464) = v38;
          *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
          *(void *)(a1 + 480) = *(void *)(a2 + 480);
          *(void *)(a1 + 488) = v36;
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        sub_214B78054(a1 + 456);
      }
      long long v37 = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 472) = v37;
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
LABEL_30:
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_release();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
      goto LABEL_31;
    }
    sub_214B780FC(a1 + 328);
  }
  long long v26 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v26;
  *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  long long v27 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v27;
  long long v28 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v28;
  long long v29 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v29;
  long long v30 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v30;
  long long v31 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v31;
LABEL_31:
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 560)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 544);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 552) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 560) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 544) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 560) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_214B78664(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  if (*(void *)(*(void *)(v10 + 544) + 16))
  {
    uint64_t v16 = result;
    swift_bridgeObjectRetain();
    sub_214B87FEC(v16, a2);
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_214B78920(v38, v16, a2);
      uint64_t v20 = v19;
      sub_214B789F4(v19, (uint64_t)v39);
      sub_214B789F4((uint64_t)v39, (uint64_t)v40);
      if (sub_214B78A5C((uint64_t)v40) != 1)
      {
        *(void *)(v20 + 200) = a3;
        *(unsigned char *)(v20 + 208) = a4 & 1;
      }
      ((void (*)(void *, void))v18)(v38, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_214B78920(v36, v16, a2);
      uint64_t v23 = v22;
      sub_214B789F4(v22, (uint64_t)v37);
      sub_214B789F4((uint64_t)v37, (uint64_t)v38);
      if (sub_214B78A5C((uint64_t)v38) != 1)
      {
        *(void *)(v23 + 240) = a5;
        *(unsigned char *)(v23 + 248) = a6 & 1;
      }
      ((void (*)(void *, void))v21)(v36, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_214B78920(v34, v16, a2);
      uint64_t v26 = v25;
      sub_214B789F4(v25, (uint64_t)v35);
      sub_214B789F4((uint64_t)v35, (uint64_t)v36);
      if (sub_214B78A5C((uint64_t)v36) != 1)
      {
        *(void *)(v26 + 256) = a7;
        *(unsigned char *)(v26 + 264) = a8 & 1;
      }
      ((void (*)(void *, void))v24)(v34, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      long long v27 = sub_214B78920(v32, v16, a2);
      uint64_t v29 = v28;
      sub_214B789F4(v28, (uint64_t)v33);
      sub_214B789F4((uint64_t)v33, (uint64_t)v34);
      if (sub_214B78A5C((uint64_t)v34) != 1)
      {
        *(void *)(v29 + 216) = a9;
        *(void *)(v29 + 224) = a10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v27)(v32, 0);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void (*sub_214B78920(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_214B78A74(v6, a2, a3);
  return sub_214B789A0;
}

void sub_214B789A0(void *a1)
{
  CFDataRef v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_214B789F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B78A5C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void (*sub_214B78A74(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_214B78D80(v6);
  v6[10] = sub_214B78B94(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_214B78B20;
}

void sub_214B78B20(uint64_t a1)
{
  unint64_t v1 = *(void **)a1;
  unint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_214B78B94(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x268uLL);
  *a1 = v10;
  v10[74] = v4;
  v10[73] = a3;
  v10[72] = a2;
  uint64_t v11 = *v4;
  uint64_t v13 = sub_214B87FEC(a2, a3);
  *((unsigned char *)v10 + 608) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 < v16 || (a4 & 1) == 0)
  {
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_214B9020C();
      goto LABEL_9;
    }
    sub_214B8BB6C(v16, a4 & 1);
    uint64_t v19 = sub_214B87FEC(a2, a3);
    if ((v17 & 1) == (v20 & 1))
    {
      uint64_t v13 = v19;
      goto LABEL_9;
    }
LABEL_14:
    unint64_t result = (void (*)(uint64_t *))sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_9:
  v10[75] = v13;
  if (v17)
  {
    memmove(v10 + 36, (const void *)(*(void *)(*v5 + 56) + 288 * v13), 0x120uLL);
    nullsub_1(v10 + 36);
  }
  else
  {
    sub_214B78DBC((_OWORD *)v10 + 18);
  }
  sub_214B789F4((uint64_t)(v10 + 36), (uint64_t)v10);
  return sub_214B78D04;
}

void sub_214B78D04(uint64_t *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *a1 + 288;
  sub_214B78DE8(*a1, *(unsigned char *)(*a1 + 608), *(uint64_t **)(*a1 + 592), *(void *)(*a1 + 600), *(void *)(*a1 + 576), *(void *)(*a1 + 584));
  sub_214B789F4((uint64_t)v1, v2);
  sub_214B790A4(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  free(v1);
}

uint64_t (*sub_214B78D80(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *unint64_t v1 = 0x8000000000000000;
  return sub_214B78DB0;
}

uint64_t sub_214B78DB0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

double sub_214B78DBC(_OWORD *a1)
{
  double result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_214B78DE8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_214B789F4(a1, (uint64_t)v15);
  sub_214B789F4((uint64_t)v15, (uint64_t)v16);
  if (sub_214B78A5C((uint64_t)v16) == 1)
  {
    if (a2)
    {
      swift_arrayDestroy();
      sub_214CDB738(a4, *a3);
    }
  }
  else
  {
    sub_214B789F4((uint64_t)v15, (uint64_t)v13);
    memcpy(__dst, v13, sizeof(__dst));
    uint64_t v11 = (void *)*a3;
    if (a2)
    {
      memmove((void *)(v11[7] + 288 * a4), v13, 0x120uLL);
    }
    else
    {
      sub_214B8F0E0(a4, a5, a6, __dst, v11);
      swift_bridgeObjectRetain();
    }
  }
  return sub_214B790A4((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B79130);
}

uint64_t sub_214B78EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_214B7902C(a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_214B79090(a21, a22, a23, a24, a25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B7902C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B79090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B790A4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
  return a1;
}

uint64_t sub_214B79130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_214B79260(a4, a5);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214B792C4(a21, a22, a23, a24, a25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214B79260(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214B792C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ODIAssessmentResult.payload.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x270FA5388](v2 - 8, v3);
  long long v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ODIErrorAssessment(0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B79530(v1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_214B79594((uint64_t)v13, (uint64_t)v9, type metadata accessor for ODIErrorAssessment);
    uint64_t v14 = *((void *)v9 + 1);
    swift_bridgeObjectRetain();
    BOOL v15 = type metadata accessor for ODIErrorAssessment;
    uint64_t v16 = (uint64_t)v9;
  }
  else
  {
    sub_214B79594((uint64_t)v13, (uint64_t)v5, type metadata accessor for ODIAssessment);
    uint64_t v14 = *((void *)v5 + 2);
    swift_bridgeObjectRetain();
    BOOL v15 = type metadata accessor for ODIAssessment;
    uint64_t v16 = (uint64_t)v5;
  }
  sub_214B795FC(v16, v15);
  return v14;
}

uint64_t type metadata accessor for ODIAssessment(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784CEE8);
}

uint64_t type metadata accessor for ODIErrorAssessment(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784CF00);
}

uint64_t type metadata accessor for ODIAssessmentResult(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784CED8);
}

uint64_t sub_214B794F8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214B79530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIAssessmentResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B79594(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_214B795FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ODIAssessmentResult.init(id:payload:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v8 = type metadata accessor for ODIAssessment(0);
  sub_214B79714(a5, (uint64_t)a6 + *(int *)(v8 + 24));
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIAssessment.init(id:payload:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (uint64_t)a6 + *(int *)(type metadata accessor for ODIAssessment(0) + 24);
  return sub_214B79714(a5, v7);
}

uint64_t sub_214B79714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ODIAssessmentResult.init(errorPayload:errorCode:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[1] = a1;
  a5[2] = a2;
  *a5 = a3;
  uint64_t v7 = type metadata accessor for ODIErrorAssessment(0);
  sub_214B79714(a4, (uint64_t)a5 + *(int *)(v7 + 24));
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIErrorAssessment.init(errorPayload:errorCode:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[1] = a1;
  a5[2] = a2;
  *a5 = a3;
  uint64_t v6 = (uint64_t)a5 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  return sub_214B79714(a4, v6);
}

uint64_t ODIAssessmentResult.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ODIErrorAssessment(0);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x270FA5388](v12, v13);
  BOOL v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B79530(v2, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_214B79594((uint64_t)v15, (uint64_t)v11, type metadata accessor for ODIErrorAssessment);
    sub_214B79A10((uint64_t)&v11[*(int *)(v8 + 24)], a1);
    uint64_t v16 = type metadata accessor for ODIErrorAssessment;
    uint64_t v17 = (uint64_t)v11;
  }
  else
  {
    sub_214B79594((uint64_t)v15, (uint64_t)v7, type metadata accessor for ODIAssessment);
    sub_214B79A10((uint64_t)&v7[*(int *)(v4 + 24)], a1);
    uint64_t v16 = type metadata accessor for ODIAssessment;
    uint64_t v17 = (uint64_t)v7;
  }
  return sub_214B795FC(v17, v16);
}

uint64_t sub_214B79A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ODIAssessment.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIAssessment.payload.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIAssessment.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_214B79B40(type metadata accessor for ODIAssessment, a1);
}

uint64_t ODIErrorAssessment.errorCode.getter()
{
  return *(void *)v0;
}

uint64_t ODIErrorAssessment.payload.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIErrorAssessment.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_214B79B40(type metadata accessor for ODIErrorAssessment, a1);
}

uint64_t sub_214B79B40@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  return sub_214B79A10(v4, a2);
}

void *initializeBufferWithCopyOfBuffer for ODIAssessmentResult(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      uint64_t v8 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_214D1A8C8();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (!v13(v10, 1, v11))
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = a2[2];
      a1[1] = a2[1];
      a1[2] = v15;
      a1[3] = a2[3];
      uint64_t v16 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      uint64_t v9 = (char *)a1 + v16;
      uint64_t v10 = (char *)a2 + v16;
      uint64_t v17 = sub_214D1A8C8();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v19(v10, 1, v17))
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v10, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        goto LABEL_10;
      }
    }
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ODIAssessmentResult(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for ODIErrorAssessment(0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for ODIAssessment(0);
  }
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v4 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v3, 1, v4);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v6(v3, v4);
  }
  return result;
}

void *initializeWithCopy for ODIAssessmentResult(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_214D1A8C8();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (!v11(v8, 1, v9))
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v13 = a2[2];
    a1[1] = a2[1];
    a1[2] = v13;
    a1[3] = a2[3];
    uint64_t v14 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    uint64_t v7 = (char *)a1 + v14;
    uint64_t v8 = (char *)a2 + v14;
    uint64_t v15 = sub_214D1A8C8();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v17(v8, 1, v15))
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v7, v8, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
      goto LABEL_8;
    }
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_8:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ODIAssessmentResult(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_214B795FC((uint64_t)a1, type metadata accessor for ODIAssessmentResult);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v5 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_214D1A8C8();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      if (!v10(v7, 1, v8))
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
        goto LABEL_9;
      }
    }
    else
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      uint64_t v12 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      uint64_t v6 = (char *)a1 + v12;
      uint64_t v7 = (char *)a2 + v12;
      uint64_t v13 = sub_214D1A8C8();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v15(v7, 1, v13))
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v6, v7, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
        goto LABEL_9;
      }
    }
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_9:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ODIAssessmentResult(_OWORD *a1, _OWORD *a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    long long v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    uint64_t v5 = (char *)a1 + v11;
    uint64_t v6 = (char *)a2 + v11;
    uint64_t v7 = sub_214D1A8C8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
  uint64_t v4 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_214D1A8C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ODIAssessmentResult(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_214B795FC(a1, type metadata accessor for ODIAssessmentResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v4 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      uint64_t v5 = (void *)(a1 + v4);
      uint64_t v6 = (const void *)(a2 + v4);
      uint64_t v7 = sub_214D1A8C8();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
LABEL_4:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      uint64_t v11 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      uint64_t v5 = (void *)(a1 + v11);
      uint64_t v6 = (const void *)(a2 + v11);
      uint64_t v7 = sub_214D1A8C8();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        goto LABEL_4;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIAssessmentResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ODIAssessmentResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_214B7A97C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_214B7A98C()
{
  uint64_t result = type metadata accessor for ODIAssessment(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ODIErrorAssessment(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ODIAssessment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_214D1A8C8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for ODIAssessment(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for ODIAssessment(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for ODIAssessment(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ODIAssessment(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_214D1A8C8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for ODIAssessment(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_214D1A8C8();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214B7B268);
}

uint64_t sub_214B7B268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ODIAssessment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214B7B330);
}

uint64_t sub_214B7B330(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_214B7B3DC()
{
}

void sub_214B7B3E8()
{
  if (!qword_26784CEF8)
  {
    sub_214D1A8C8();
    unint64_t v0 = sub_214D1A5D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26784CEF8);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ODIErrorAssessment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_214D1A8C8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for ODIErrorAssessment(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_214D1A8C8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithCopy for ODIErrorAssessment(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_214D1A8C8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214B7BC18);
}

uint64_t sub_214B7BC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214B7BCE0);
}

uint64_t sub_214B7BCE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_214B7BD8C()
{
}

void sub_214B7BD9C()
{
  sub_214B7B3E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_214B7BE34(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  int64_t v5 = a5 >> 1;
  uint64_t v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!result || v6 < 0 || (int64_t v7 = a5 >> 1, v6 >= result))
  {
    int64_t v7 = a4 + result;
    if (__OFADD__(a4, result)) {
      goto LABEL_18;
    }
  }
  if (v7 < a4) {
    goto LABEL_14;
  }
  if (v5 < a4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t *sub_214B7BEB0@<X0>(uint64_t *result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X8>)
{
  uint64_t v16 = result[2];
  unint64_t v15 = result[3];
  int64_t v17 = v15 >> 1;
  unint64_t v18 = v16 - (v15 >> 1);
  if (v16 == v15 >> 1)
  {
    sub_214B7C31C();
    swift_allocError();
    *uint64_t v19 = 4;
    return (uint64_t *)swift_willThrow();
  }
  if (v16 >= (uint64_t)(v15 >> 1)) {
    goto LABEL_71;
  }
  int v13 = (uint64_t *)a5;
  uint64_t v9 = *result;
  a3 = result[1];
  char v20 = *(unsigned char *)(a3 + v16);
  char v11 = v20;
  uint64_t v5 = v16 + 1;
  unint64_t v6 = (v20 & 0x40) >> 6;
  if ((v20 & 0x40) != 0) {
    char v21 = 3;
  }
  else {
    char v21 = 2;
  }
  if (v20 >= 0) {
    char v22 = (v20 & 0x40) >> 6;
  }
  else {
    char v22 = v21;
  }
  uint64_t v14 = v20 & 0x1F;
  if ((v20 & 0x1F) == 0x1F)
  {
    if (v5 == v17) {
      goto LABEL_22;
    }
    uint64_t v8 = 0;
    unint64_t v6 = v15 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = a3 + v16;
    uint64_t v5 = 1;
    uint64_t v7 = 0xFFFFFFFFFFFFFELL;
    a5 = result[3];
    while (1)
    {
      uint64_t result = (uint64_t *)(v16 + v5);
      if (v16 + v5 >= (uint64_t)(a5 >> 1)) {
        goto LABEL_67;
      }
      uint64_t result = (uint64_t *)(v18 + v5);
      if (!(v18 + v5)) {
        goto LABEL_68;
      }
      if (a5 >> 1 < v17) {
        goto LABEL_69;
      }
      uint64_t v24 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_70;
      }
      uint64_t result = (uint64_t *)*(unsigned __int8 *)(v23 + v5);
      a5 = a5 & 1 | v6;
      uint64_t v14 = *(unsigned char *)(v23 + v5) & 0x7F | (unint64_t)(v8 << 7);
      if ((result & 0x80) == 0) {
        break;
      }
      if (v14 > 0xFFFFFFFFFFFFFELL) {
        goto LABEL_34;
      }
      ++v5;
      uint64_t v8 = v14;
      if (!(v18 + v5)) {
        goto LABEL_22;
      }
    }
    v18 += v5;
    if (v18 == -1) {
      goto LABEL_22;
    }
    v5 += v16 + 1;
    if (v5 >= v17)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
  }
  else
  {
    if (v5 == v17) {
      goto LABEL_22;
    }
    uint64_t v24 = 1;
    a5 = result[3];
    if (v5 >= v17) {
      goto LABEL_38;
    }
  }
  uint64_t v7 = v24 + 1;
  if (__OFADD__(v24, 1)) {
    goto LABEL_72;
  }
  uint64_t v12 = *(unsigned __int8 *)(a3 + v5);
  a4 = v5 + 1;
  if ((v12 & 0x80) == 0) {
    goto LABEL_28;
  }
  uint64_t v16 = v12 & 0x7F;
  if ((v12 & 0x7Fu) > 7)
  {
LABEL_34:
    sub_214B7C31C();
    swift_allocError();
    char v26 = 5;
    goto LABEL_23;
  }
LABEL_39:
  if (!v16)
  {
    uint64_t v12 = 0;
    goto LABEL_64;
  }
  if (a4 == v17) {
    goto LABEL_22;
  }
  unint64_t v18 = v17 + ~v5;
  unint64_t v6 = v17 - v5 - 2;
  if (v6 >= (v16 - 1)) {
    unint64_t v6 = (v16 - 1);
  }
  if (v18 <= v6) {
    goto LABEL_81;
  }
  uint64_t v12 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 2;
  if (v16 == 1) {
    goto LABEL_64;
  }
  if (a4 == v17) {
    goto LABEL_22;
  }
  if (v18 <= v6) {
    goto LABEL_81;
  }
  uint64_t v32 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 3;
  uint64_t v12 = v32 | (v12 << 8);
  if (v16 == 2)
  {
LABEL_64:
    BOOL v37 = __OFADD__(v7, v16);
    v7 += v16;
    if (v37) {
      goto LABEL_66;
    }
LABEL_28:
    uint64_t v38 = v7;
    unint64_t v39 = a2;
    char v40 = v22;
    uint64_t v41 = v10;
    uint64_t result = (uint64_t *)sub_214B7BE34(v12, v9, a3, a4, v15 & 0xFFFFFFFFFFFFFFFELL | a5 & 1);
    uint64_t v42 = (uint64_t)result;
    a5 = (a4 >> 1) - a3;
    if (!__OFSUB__(a4 >> 1, a3))
    {
      if (a5 == v12)
      {
        uint64_t v27 = a2;
        uint64_t v28 = a3;
        unint64_t v29 = a4;
        swift_unknownObjectRetain();
        uint64_t v9 = v42;
        uint64_t v30 = v27;
        uint64_t v10 = v41;
        sub_214C1A448(v14, v40, (v11 & 0x20) != 0, v42, v30, v28, v29, v39, v13);
        char v11 = v41;
        if (!v41)
        {
          LOBYTE(a5) = v38;
          uint64_t result = (uint64_t *)(v38 + v12);
          if (__OFADD__(v38, v12)) {
            goto LABEL_74;
          }
          sub_214B7C370((uint64_t)result);
        }
      }
      else
      {
        sub_214B7C31C();
        swift_allocError();
        *long long v31 = 4;
        swift_unknownObjectRetain();
        swift_willThrow();
      }
      return (uint64_t *)swift_unknownObjectRelease();
    }
    while (1)
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      if (a4 == v17) {
        goto LABEL_22;
      }
      if (v18 <= v6) {
        goto LABEL_81;
      }
      if (v16 != 7) {
        goto LABEL_22;
      }
      char v22 = a2;
      a2 = v8;
      int64_t v17 = *(unsigned __int8 *)(a3 + a4);
      a4 = v5 + 8;
      uint64_t v12 = v17 | (v12 << 8);
      BOOL v37 = __OFADD__(v7, v16);
      v7 += v16;
      if (!v37) {
        goto LABEL_28;
      }
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
    }
  }
  if (a4 == v17)
  {
LABEL_22:
    sub_214B7C31C();
    swift_allocError();
    char v26 = 4;
LABEL_23:
    *uint64_t v25 = v26;
    swift_unknownObjectRetain();
    swift_willThrow();
    return (uint64_t *)swift_unknownObjectRelease();
  }
  if (v18 <= v6) {
    goto LABEL_81;
  }
  uint64_t v33 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 4;
  uint64_t v12 = v33 | (v12 << 8);
  if (v16 == 3) {
    goto LABEL_64;
  }
  if (a4 == v17) {
    goto LABEL_22;
  }
  if (v18 <= v6) {
    goto LABEL_81;
  }
  uint64_t v34 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 5;
  uint64_t v12 = v34 | (v12 << 8);
  if (v16 == 4) {
    goto LABEL_64;
  }
  if (a4 == v17) {
    goto LABEL_22;
  }
  if (v18 > v6)
  {
    uint64_t v8 = a2;
    LOBYTE(a2) = v22;
    uint64_t v35 = *(unsigned __int8 *)(a3 + a4);
    a4 = v5 + 6;
    uint64_t v12 = v35 | (v12 << 8);
    if (v16 == 5) {
      goto LABEL_60;
    }
    if (a4 != v17)
    {
      if (v18 > v6)
      {
        uint64_t v36 = *(unsigned __int8 *)(a3 + a4);
        a4 = v5 + 7;
        uint64_t v12 = v36 | (v12 << 8);
        if (v16 != 6) {
          goto LABEL_75;
        }
LABEL_60:
        a2 = v8;
        BOOL v37 = __OFADD__(v7, v16);
        v7 += v16;
        if (v37) {
          goto LABEL_66;
        }
        goto LABEL_28;
      }
      goto LABEL_81;
    }
    goto LABEL_22;
  }
LABEL_81:
  __break(1u);
  return result;
}

unint64_t sub_214B7C31C()
{
  unint64_t result = qword_26784CF10;
  if (!qword_26784CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CF10);
  }
  return result;
}

uint64_t sub_214B7C370(uint64_t result)
{
  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v2 = *(void *)(v1 + 16);
      uint64_t v3 = *(void *)(v1 + 24) >> 1;
      uint64_t v4 = v3 - v2;
      if (!__OFSUB__(v3, v2))
      {
        if ((v4 & 0x8000000000000000) == 0 && v4 < result) {
          goto LABEL_16;
        }
        uint64_t v5 = v2 + result;
        if (!__OFADD__(v2, result))
        {
          if (v3 >= v5)
          {
            if (v5 >= v2)
            {
              *(void *)(v1 + 16) = v5;
              return result;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          return result;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

void *sub_214B7C3CC(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  uint64_t v17 = *a1;
  uint64_t v18 = v6;
  uint64_t v19 = v8;
  unint64_t v20 = v9;
  if (v8 == v9 >> 1)
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
LABEL_12:
    *a1 = v7;
    a1[1] = v6;
    a1[2] = v8;
    a1[3] = v9;
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      sub_214B7BEB0(v16, &v17, a2, a3 & 1);
      if (v4) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_214B875CC(0, v10[2] + 1, 1, v10);
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1) {
        uint64_t v10 = sub_214B875CC((void *)(v13 > 1), v14 + 1, 1, v10);
      }
      void v10[2] = v14 + 1;
      sub_214B5EC20(v16, &v10[4 * v14 + 4]);
      uint64_t v8 = v19;
      unint64_t v9 = v20;
      if (v19 == v20 >> 1)
      {
        swift_unknownObjectRelease();
        uint64_t v7 = v17;
        uint64_t v6 = v18;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return v10;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        char v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1ApplicationType()
{
  return &type metadata for CoreODIASN1ApplicationType;
}

void *initializeBufferWithCopyOfBuffer for CoreODILogger(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CoreODILogger()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CoreODILogger(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CoreODILogger(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODILogger(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODILogger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1OtherType()
{
  return &type metadata for CoreODIASN1OtherType;
}

uint64_t destroy for ASN1ItemTemp()
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  swift_unknownObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1ItemTemp(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1ItemTemp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemTemp()
{
  return &type metadata for ASN1ItemTemp;
}

uint64_t getEnumTagSinglePayload for ASN1DecodeError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ASN1DecodeError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B7CBE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1DecodeError()
{
  return &type metadata for ASN1DecodeError;
}

uint64_t destroy for CoreODIASN1ContextType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

ValueMetadata *type metadata accessor for CoreODIASN1ContextType()
{
  return &type metadata for CoreODIASN1ContextType;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = a2 + 24;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v5(a1 + 24, v3, v4);
  return a1;
}

void *_s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0(a1 + 3, a2 + 3);
  return a1;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_214B7CDF8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1PrivateType()
{
  return &type metadata for CoreODIASN1PrivateType;
}

unint64_t sub_214B7CE58()
{
  unint64_t result = qword_26784CF18;
  if (!qword_26784CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CF18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreODIASN1TagCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B7CF78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1TagCategory()
{
  return &type metadata for CoreODIASN1TagCategory;
}

unint64_t sub_214B7CFB4()
{
  unint64_t result = qword_26784CF20;
  if (!qword_26784CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CF20);
  }
  return result;
}

id ODIError(_:fromError:code:forceCode:properties:file:function:line:)(uint64_t a1, uint64_t a2, char *a3, unsigned __int8 *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  LOBYTE(v12) = a5;
  LODWORD(v14) = *a4;
  if (qword_26ACE38B8 != -1) {
    goto LABEL_281;
  }
  while (1)
  {
    unint64_t v15 = sub_214B7E5BC(MEMORY[0x263F8EE78]);
    if (!a3) {
      goto LABEL_9;
    }
    uint64_t v16 = a3;
    uint64_t v17 = (void *)sub_214D199A8();
    id v18 = objc_msgSend(v17, sel_domain);
    uint64_t v19 = sub_214D1A038();
    uint64_t v21 = v20;

    if (v19 == 0x726F72724549444FLL && v21 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        uint64_t v24 = sub_214D1A038();
        uint64_t v26 = v25;
        uint64_t v86 = sub_214B6A264(0, (unint64_t *)&qword_26ACE3A08);
        *(void *)&long long v85 = v17;
        sub_214B5EC20(&v85, v83);
        uint64_t v12 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v82[0] = v15;
        sub_214B8E05C(v83, v24, v26, isUniquelyReferenced_nonNull_native);
        unint64_t v15 = *(void *)&v82[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_9:
        if (!a6) {
          break;
        }
        goto LABEL_10;
      }
    }
    if ((v12 & 1) == 0)
    {
      ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v17, sel_code));
      if (v85 != 209) {
        LODWORD(v14) = v85;
      }
    }
    id v59 = objc_msgSend(v17, sel_userInfo);
    unint64_t v15 = sub_214D19F98();

    swift_bridgeObjectRelease();
    if (!a6) {
      break;
    }
LABEL_10:
    uint64_t v28 = *(void *)(v15 + 16);
    swift_bridgeObjectRetain();
    int v76 = (int)v14;
    if (v28
      && (uint64_t v29 = sub_214B88294(0x65706F725049444FLL, 0xED00007365697472, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v30 & 1) != 0)&& (sub_214B5EC30(*(void *)(v15 + 56) + 32 * v29, (uint64_t)&v85), __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3940), swift_dynamicCast()))
    {
      long long v31 = *(void **)&v83[0];
    }
    else
    {
      long long v31 = (void *)sub_214B7E8C4(MEMORY[0x263F8EE78], &qword_26ACE43A8, (uint64_t *)&unk_26ACE4148, (uint64_t (*)(uint64_t *, unint64_t))sub_214B5EC20);
    }
    a3 = 0;
    uint64_t v32 = a6 + 64;
    uint64_t v33 = 1 << *(unsigned char *)(a6 + 32);
    uint64_t v34 = -1;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    unint64_t v35 = v34 & *(void *)(a6 + 64);
    int64_t v36 = (unint64_t)(v33 + 63) >> 6;
    unint64_t v14 = (char *)&v85 + 8;
    uint64_t v75 = (char *)(v36 - 5);
    int64_t v74 = v36 - 1;
    int64_t v77 = v36;
    while (1)
    {
      if (v35)
      {
        unint64_t v37 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        unint64_t v38 = v37 | ((void)a3 << 6);
        goto LABEL_20;
      }
      int64_t v40 = (int64_t)(a3 + 1);
      if (__OFADD__(a3, 1)) {
        break;
      }
      if (v40 >= v36)
      {
        uint64_t v42 = a3;
      }
      else
      {
        unint64_t v41 = *(void *)(v32 + 8 * v40);
        if (v41) {
          goto LABEL_24;
        }
        uint64_t v42 = a3 + 1;
        if ((uint64_t)(a3 + 2) < v36)
        {
          unint64_t v41 = *(void *)(v32 + 8 * (void)(a3 + 2));
          if (v41)
          {
            int64_t v40 = (int64_t)(a3 + 2);
            goto LABEL_24;
          }
          uint64_t v42 = a3 + 2;
          if ((uint64_t)(a3 + 3) < v36)
          {
            unint64_t v41 = *(void *)(v32 + 8 * (void)(a3 + 3));
            if (v41)
            {
              int64_t v40 = (int64_t)(a3 + 3);
LABEL_24:
              unint64_t v35 = (v41 - 1) & v41;
              unint64_t v38 = __clz(__rbit64(v41)) + (v40 << 6);
              a3 = (char *)v40;
LABEL_20:
              uint64_t v39 = *(void *)(a6 + 56);
              LOBYTE(v83[0]) = *(unsigned char *)(*(void *)(a6 + 48) + v38);
              sub_214B5EC30(v39 + 32 * v38, (uint64_t)v83 + 8);
              goto LABEL_27;
            }
            int64_t v40 = (int64_t)(a3 + 4);
            uint64_t v42 = a3 + 3;
            if ((uint64_t)(a3 + 4) < v36)
            {
              unint64_t v41 = *(void *)(v32 + 8 * v40);
              if (v41) {
                goto LABEL_24;
              }
              while (v75 != a3)
              {
                unint64_t v41 = *(void *)(a6 + 104 + 8 * (void)a3++);
                if (v41)
                {
                  int64_t v40 = (int64_t)(a3 + 4);
                  goto LABEL_24;
                }
              }
              uint64_t v42 = (char *)v74;
            }
          }
        }
      }
      unint64_t v35 = 0;
      uint64_t v84 = 0;
      a3 = v42;
      memset(v83, 0, sizeof(v83));
LABEL_27:
      sub_214B6AC38((uint64_t)v83, (uint64_t)&v85, qword_26ACE3760);
      if (!v87)
      {
        swift_release();
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3940);
        *(void *)&long long v85 = v31;
        sub_214B5EC20(&v85, v83);
        swift_bridgeObjectRetain();
        char v58 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v82[0] = v15;
        sub_214B8E05C(v83, 0x65706F725049444FLL, 0xED00007365697472, v58);
        unint64_t v15 = *(void *)&v82[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LODWORD(v14) = v76;
        goto LABEL_60;
      }
      uint64_t v12 = v85;
      sub_214B5EC20((long long *)((char *)&v85 + 8), v83);
      if (v31[2]
        && (uint64_t v43 = sub_214B88070(v12, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C), (v44 & 1) != 0))
      {
        sub_214B5EC30(v31[7] + 32 * v43, (uint64_t)v82);
        sub_214B5ECF4((uint64_t)v82);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      }
      else
      {
        memset(v82, 0, sizeof(v82));
        sub_214B5ECF4((uint64_t)v82);
        sub_214B5EC30((uint64_t)v83, (uint64_t)v82);
        char v45 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v47 = sub_214B88070(v12, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
        uint64_t v48 = v31[2];
        BOOL v49 = (v46 & 1) == 0;
        uint64_t v50 = v48 + v49;
        if (__OFADD__(v48, v49)) {
          goto LABEL_280;
        }
        char v51 = v46;
        if (v31[3] >= v50)
        {
          if ((v45 & 1) == 0) {
            sub_214B8FE98(&qword_26ACE43A8);
          }
        }
        else
        {
          sub_214B8A9B8(v50, v45);
          uint64_t v52 = sub_214B88070(v12, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
          if ((v51 & 1) != (v53 & 1)) {
            goto LABEL_283;
          }
          unint64_t v47 = v52;
        }
        if (v51)
        {
          long long v54 = (_OWORD *)(v31[7] + 32 * v47);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
          sub_214B5EC20(v82, v54);
        }
        else
        {
          v31[(v47 >> 6) + 8] |= 1 << v47;
          *(unsigned char *)(v31[6] + v47) = v12;
          sub_214B5EC20(v82, (_OWORD *)(v31[7] + 32 * v47));
          uint64_t v55 = v31[2];
          BOOL v56 = __OFADD__(v55, 1);
          uint64_t v57 = v55 + 1;
          if (v56)
          {
            __break(1u);
LABEL_283:
            sub_214D1AC58();
            __break(1u);
            JUMPOUT(0x214B7E10CLL);
          }
          v31[2] = v57;
        }
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
        int64_t v36 = v77;
        uint64_t v32 = a6 + 64;
      }
    }
    __break(1u);
LABEL_280:
    __break(1u);
LABEL_281:
    swift_once();
  }
LABEL_60:
  uint64_t v60 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60
    && (uint64_t v61 = sub_214B88294(0x636F766E4949444FLL, 0xEE00736E6F697461, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v62 & 1) != 0)&& (sub_214B5EC30(*(void *)(v15 + 56) + 32 * v61, (uint64_t)&v85), __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3980), swift_dynamicCast()))
  {
    long long v63 = *(void **)&v83[0];
  }
  else
  {
    long long v63 = (void *)MEMORY[0x263F8EE78];
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v63 = sub_214B86FEC(0, v63[2] + 1, 1, v63, &qword_26ACE3AC0);
  }
  unint64_t v65 = v63[2];
  unint64_t v64 = v63[3];
  if (v65 >= v64 >> 1) {
    long long v63 = sub_214B86FEC((void *)(v64 > 1), v65 + 1, 1, v63, &qword_26ACE3AC0);
  }
  v63[2] = v65 + 1;
  long long v66 = &v63[7 * v65];
  v66[4] = a1;
  v66[5] = a2;
  v66[6] = a7;
  v66[7] = a8;
  v66[8] = a9;
  v66[9] = a10;
  v66[10] = a11;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3980);
  *(void *)&long long v85 = v63;
  sub_214B5EC20(&v85, v83);
  char v67 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v82[0] = v15;
  sub_214B8E05C(v83, 0x636F766E4949444FLL, 0xEE00736E6F697461, v67);
  swift_bridgeObjectRelease();
  uint64_t v68 = -1;
  switch((int)v14)
  {
    case 1:
      uint64_t v68 = -2;
      break;
    case 2:
      uint64_t v68 = -3;
      break;
    case 3:
      uint64_t v68 = -4;
      break;
    case 4:
      uint64_t v68 = -5;
      break;
    case 5:
      uint64_t v68 = -6;
      break;
    case 6:
      uint64_t v68 = -7;
      break;
    case 7:
      uint64_t v68 = -8;
      break;
    case 8:
      uint64_t v68 = -9;
      break;
    case 9:
      uint64_t v68 = -10;
      break;
    case 10:
      uint64_t v68 = -11;
      break;
    case 11:
      uint64_t v68 = -12;
      break;
    case 12:
      uint64_t v68 = -13;
      break;
    case 13:
      uint64_t v68 = -14;
      break;
    case 14:
      uint64_t v68 = -15;
      break;
    case 15:
      uint64_t v68 = -16;
      break;
    case 16:
      uint64_t v68 = -17;
      break;
    case 17:
      uint64_t v68 = -18;
      break;
    case 18:
      uint64_t v68 = -19;
      break;
    case 19:
      uint64_t v68 = -20;
      break;
    case 20:
      uint64_t v68 = -21;
      break;
    case 21:
      uint64_t v68 = -22;
      break;
    case 22:
      uint64_t v68 = -28;
      break;
    case 23:
      uint64_t v68 = -29;
      break;
    case 24:
      uint64_t v68 = 200;
      break;
    case 25:
      uint64_t v68 = 20000;
      break;
    case 26:
      uint64_t v68 = 20001;
      break;
    case 27:
      uint64_t v68 = 20100;
      break;
    case 28:
      uint64_t v68 = 40000;
      break;
    case 29:
      uint64_t v68 = 40010;
      break;
    case 30:
      uint64_t v68 = 40011;
      break;
    case 31:
      uint64_t v68 = 40012;
      break;
    case 32:
      uint64_t v68 = 40013;
      break;
    case 33:
      uint64_t v68 = 40014;
      break;
    case 34:
      uint64_t v68 = 40015;
      break;
    case 35:
      uint64_t v68 = 40020;
      break;
    case 36:
      uint64_t v68 = 40021;
      break;
    case 37:
      uint64_t v68 = 40022;
      break;
    case 38:
      uint64_t v68 = 40023;
      break;
    case 39:
      uint64_t v68 = 40024;
      break;
    case 40:
      uint64_t v68 = 40025;
      break;
    case 41:
      uint64_t v68 = 40026;
      break;
    case 42:
      uint64_t v68 = 40027;
      break;
    case 43:
      uint64_t v68 = 40028;
      break;
    case 44:
      uint64_t v68 = 40029;
      break;
    case 45:
      uint64_t v68 = 40030;
      break;
    case 46:
      uint64_t v68 = 40101;
      break;
    case 47:
      uint64_t v68 = 40102;
      break;
    case 48:
      uint64_t v68 = 40200;
      break;
    case 49:
      uint64_t v68 = 40201;
      break;
    case 50:
      uint64_t v68 = 40205;
      break;
    case 51:
      uint64_t v68 = 40401;
      break;
    case 52:
      uint64_t v68 = 40402;
      break;
    case 53:
      uint64_t v68 = 40403;
      break;
    case 54:
      uint64_t v68 = 40404;
      break;
    case 55:
      uint64_t v68 = 40500;
      break;
    case 56:
      uint64_t v68 = 40600;
      break;
    case 57:
      uint64_t v68 = 40601;
      break;
    case 58:
      uint64_t v68 = 50000;
      break;
    case 59:
      uint64_t v68 = 50001;
      break;
    case 60:
      uint64_t v68 = 50002;
      break;
    case 61:
      uint64_t v68 = 99991;
      break;
    case 62:
      uint64_t v68 = 99992;
      break;
    case 63:
      uint64_t v68 = 99993;
      break;
    case 64:
      uint64_t v68 = -1101;
      break;
    case 65:
      uint64_t v68 = -1102;
      break;
    case 66:
      uint64_t v68 = -1103;
      break;
    case 67:
      uint64_t v68 = -1104;
      break;
    case 68:
      uint64_t v68 = -1110;
      break;
    case 69:
      uint64_t v68 = -1111;
      break;
    case 70:
      uint64_t v68 = -1112;
      break;
    case 71:
      uint64_t v68 = -1113;
      break;
    case 72:
      uint64_t v68 = -1114;
      break;
    case 73:
      uint64_t v68 = -1115;
      break;
    case 74:
      uint64_t v68 = -1116;
      break;
    case 75:
      uint64_t v68 = -1117;
      break;
    case 76:
      uint64_t v68 = -1118;
      break;
    case 77:
      uint64_t v68 = -1119;
      break;
    case 78:
      uint64_t v68 = -1201;
      break;
    case 79:
      uint64_t v68 = -1202;
      break;
    case 80:
      uint64_t v68 = -1203;
      break;
    case 81:
      uint64_t v68 = -1204;
      break;
    case 82:
      uint64_t v68 = -1402;
      break;
    case 83:
      uint64_t v68 = -1403;
      break;
    case 84:
      uint64_t v68 = -1404;
      break;
    case 85:
      uint64_t v68 = -1301;
      break;
    case 86:
      uint64_t v68 = -1302;
      break;
    case 87:
      uint64_t v68 = -1303;
      break;
    case 88:
      uint64_t v68 = -1304;
      break;
    case 89:
      uint64_t v68 = -1305;
      break;
    case 90:
      uint64_t v68 = -1306;
      break;
    case 91:
      uint64_t v68 = -1307;
      break;
    case 92:
      uint64_t v68 = -1308;
      break;
    case 93:
      uint64_t v68 = -1309;
      break;
    case 94:
      uint64_t v68 = -1310;
      break;
    case 95:
      uint64_t v68 = -1315;
      break;
    case 96:
      uint64_t v68 = -1316;
      break;
    case 97:
      uint64_t v68 = -1317;
      break;
    case 98:
      uint64_t v68 = -131600;
      break;
    case 99:
      uint64_t v68 = -2103;
      break;
    case 100:
      uint64_t v68 = -2104;
      break;
    case 101:
      uint64_t v68 = -2107;
      break;
    case 102:
      uint64_t v68 = -2110;
      break;
    case 103:
      uint64_t v68 = -2111;
      break;
    case 104:
      uint64_t v68 = -2112;
      break;
    case 105:
      uint64_t v68 = -2123;
      break;
    case 106:
      uint64_t v68 = -2124;
      break;
    case 107:
      uint64_t v68 = -2125;
      break;
    case 108:
      uint64_t v68 = -2126;
      break;
    case 109:
      uint64_t v68 = -2127;
      break;
    case 110:
      uint64_t v68 = -3101;
      break;
    case 111:
      uint64_t v68 = -3102;
      break;
    case 112:
      uint64_t v68 = -3103;
      break;
    case 113:
      uint64_t v68 = -3104;
      break;
    case 114:
      uint64_t v68 = -3105;
      break;
    case 115:
      uint64_t v68 = -3106;
      break;
    case 116:
      uint64_t v68 = -3107;
      break;
    case 117:
      uint64_t v68 = -3108;
      break;
    case 118:
      uint64_t v68 = -3109;
      break;
    case 119:
      uint64_t v68 = -3110;
      break;
    case 120:
      uint64_t v68 = -3111;
      break;
    case 121:
      uint64_t v68 = -3112;
      break;
    case 122:
      uint64_t v68 = -3113;
      break;
    case 123:
      uint64_t v68 = -3151;
      break;
    case 124:
      uint64_t v68 = -3152;
      break;
    case 125:
      uint64_t v68 = -3153;
      break;
    case 126:
      uint64_t v68 = -3154;
      break;
    case 127:
      uint64_t v68 = -3155;
      break;
    case 128:
      uint64_t v68 = -3156;
      break;
    case 129:
      uint64_t v68 = -3157;
      break;
    case 130:
      uint64_t v68 = -3158;
      break;
    case 131:
      uint64_t v68 = -3159;
      break;
    case 132:
      uint64_t v68 = -3161;
      break;
    case 133:
      uint64_t v68 = -3162;
      break;
    case 134:
      uint64_t v68 = -3163;
      break;
    case 135:
      uint64_t v68 = -3164;
      break;
    case 136:
      uint64_t v68 = -3165;
      break;
    case 137:
      uint64_t v68 = -3166;
      break;
    case 138:
      uint64_t v68 = -3167;
      break;
    case 139:
      uint64_t v68 = -3168;
      break;
    case 140:
      uint64_t v68 = -3169;
      break;
    case 141:
      uint64_t v68 = -3170;
      break;
    case 142:
      uint64_t v68 = -3171;
      break;
    case 143:
      uint64_t v68 = -3172;
      break;
    case 144:
      uint64_t v68 = -3173;
      break;
    case 145:
      uint64_t v68 = -3174;
      break;
    case 146:
      uint64_t v68 = -3175;
      break;
    case 147:
      uint64_t v68 = -3176;
      break;
    case 148:
      uint64_t v68 = -3177;
      break;
    case 149:
      uint64_t v68 = -3178;
      break;
    case 150:
      uint64_t v68 = -3179;
      break;
    case 151:
      uint64_t v68 = -3180;
      break;
    case 152:
      uint64_t v68 = -3181;
      break;
    case 153:
      uint64_t v68 = -3182;
      break;
    case 154:
      uint64_t v68 = -3183;
      break;
    case 155:
      uint64_t v68 = -3184;
      break;
    case 156:
      uint64_t v68 = -3185;
      break;
    case 157:
      uint64_t v68 = -3186;
      break;
    case 158:
      uint64_t v68 = -3187;
      break;
    case 159:
      uint64_t v68 = -3188;
      break;
    case 160:
      uint64_t v68 = -3189;
      break;
    case 161:
      uint64_t v68 = -3300;
      break;
    case 162:
      uint64_t v68 = -5108;
      break;
    case 163:
      uint64_t v68 = -6009;
      break;
    case 164:
      uint64_t v68 = -6010;
      break;
    case 165:
      uint64_t v68 = -6102;
      break;
    case 166:
      uint64_t v68 = -6103;
      break;
    case 167:
      uint64_t v68 = -6104;
      break;
    case 168:
      uint64_t v68 = -6105;
      break;
    case 169:
      uint64_t v68 = -8001;
      break;
    case 170:
      uint64_t v68 = -8301;
      break;
    case 171:
      uint64_t v68 = -8304;
      break;
    case 172:
      uint64_t v68 = -8400;
      break;
    case 173:
      uint64_t v68 = -8401;
      break;
    case 174:
      uint64_t v68 = -8403;
      break;
    case 175:
      uint64_t v68 = -8404;
      break;
    case 176:
      uint64_t v68 = -8428;
      break;
    case 177:
      uint64_t v68 = -8429;
      break;
    case 178:
      uint64_t v68 = -8433;
      break;
    case 179:
      uint64_t v68 = -8434;
      break;
    case 180:
      uint64_t v68 = -8500;
      break;
    case 181:
      uint64_t v68 = -8501;
      break;
    case 182:
      uint64_t v68 = -8502;
      break;
    case 183:
      uint64_t v68 = -8503;
      break;
    case 184:
      uint64_t v68 = -8504;
      break;
    case 185:
      uint64_t v68 = -22200;
      break;
    case 186:
      uint64_t v68 = -22201;
      break;
    case 187:
      uint64_t v68 = -22202;
      break;
    case 188:
      uint64_t v68 = -22203;
      break;
    case 189:
      uint64_t v68 = -22204;
      break;
    case 190:
      uint64_t v68 = -22205;
      break;
    case 191:
      uint64_t v68 = -22206;
      break;
    case 192:
      uint64_t v68 = -22207;
      break;
    case 193:
      uint64_t v68 = -22208;
      break;
    case 194:
      uint64_t v68 = -72200;
      break;
    case 195:
      uint64_t v68 = -72201;
      break;
    case 196:
      uint64_t v68 = -72202;
      break;
    case 197:
      uint64_t v68 = -72203;
      break;
    case 198:
      uint64_t v68 = -72204;
      break;
    case 199:
      uint64_t v68 = -72205;
      break;
    case 200:
      uint64_t v68 = -72206;
      break;
    case 201:
      uint64_t v68 = -72207;
      break;
    case 202:
      uint64_t v68 = -72208;
      break;
    case 203:
      uint64_t v68 = -72209;
      break;
    case 204:
      uint64_t v68 = -72210;
      break;
    case 205:
      uint64_t v68 = -72211;
      break;
    case 206:
      uint64_t v68 = -72780;
      break;
    case 207:
      uint64_t v68 = -72781;
      break;
    case 208:
      uint64_t v68 = -72782;
      break;
    default:
      break;
  }
  id v69 = objc_allocWithZone(MEMORY[0x263F087E8]);
  swift_bridgeObjectRetain();
  long long v70 = (void *)sub_214D1A028();
  long long v71 = (void *)sub_214D19F88();
  swift_bridgeObjectRelease();
  id v72 = objc_msgSend(v69, sel_initWithDomain_code_userInfo_, v70, v68, v71);
  swift_bridgeObjectRelease();

  return v72;
}

unint64_t sub_214B7E450(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A58);
  uint64_t v2 = sub_214D1A978();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v6, (uint64_t)&v15, &qword_26784CF30);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_214B88294(v15, v16, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_214B59EC0(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7E5BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D0);
  uint64_t v2 = sub_214D1A978();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v6, (uint64_t)&v15, &qword_26784CEC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_214B88294(v15, v16, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_214B5EC20(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7E71C(uint64_t a1)
{
  return sub_214B7E8C4(a1, &qword_26ACE43A8, (uint64_t *)&unk_26ACE4148, (uint64_t (*)(uint64_t *, unint64_t))sub_214B5EC20);
}

unint64_t sub_214B7E744(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43A0);
  uint64_t v2 = sub_214D1A978();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v6, (uint64_t)v13, &qword_26ACE4138);
    char v7 = v13[0];
    unint64_t result = sub_214B88070(v13[0], (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B88A6C);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_214B5EC20(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7E89C(uint64_t a1)
{
  return sub_214B7E8C4(a1, &qword_26784CFA0, &qword_26784CFA8, (uint64_t (*)(uint64_t *, unint64_t))sub_214B5EC20);
}

unint64_t sub_214B7E8C4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_214D1A978();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v11, (uint64_t)v18, a3);
    char v12 = v18[0];
    unint64_t result = sub_214B88070(v18[0], (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v8[6] + result) = v12;
    unint64_t result = a4(&v19, v8[7] + 32 * result);
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7EA1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D030);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    char v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7EB68(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A60);
  uint64_t v2 = sub_214D1A978();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v6, (uint64_t)&v13, &qword_26ACE3A20);
    uint64_t v7 = v13;
    unint64_t result = sub_214B88154(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_214B5EC20(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7EC98(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43E0);
  uint64_t v2 = sub_214D1A978();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_214B95764(v6, (uint64_t)v15, &qword_26784D028);
    unint64_t result = sub_214B88110((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_214B5EC20(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_214B7EDDC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF90);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_retain();
  memcpy(__dst, (const void *)(a1 + 32), 0x130uLL);
  uint64_t v4 = __dst[0];
  uint64_t v5 = __dst[1];
  sub_214B944A0(__dst);
  unint64_t v6 = sub_214B88294(v4, v5, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  if (v7)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v8 = 336;
  while (1)
  {
    *(void *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * v6);
    *uint64_t v9 = v4;
    v9[1] = v5;
    unint64_t result = memcpy((void *)(v2[7] + 288 * v6), &__dst[2], 0x120uLL);
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v2[2] = v13;
    if (!--v3) {
      goto LABEL_9;
    }
    memcpy(__dst, (const void *)(a1 + v8), 0x130uLL);
    uint64_t v4 = __dst[0];
    uint64_t v5 = __dst[1];
    sub_214B944A0(__dst);
    unint64_t v6 = sub_214B88294(v4, v5, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    v8 += 304;
    if (v14) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_214B7EFA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43C0);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F0DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF50);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F218(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43B0);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F364(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D018);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D008);
  uint64_t v7 = (void *)sub_214D1A978();
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v6[*(int *)(v2 + 48)];
  uint64_t v20 = a1;
  uint64_t v21 = v9;
  uint64_t v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v11 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_214B95764(v10, (uint64_t)v6, &qword_26784D018);
    memcpy(v22, v6, 0x415uLL);
    unint64_t result = sub_214B88214(v22);
    if (v13) {
      break;
    }
    unint64_t v14 = result;
    *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    memcpy((void *)(v7[6] + 1048 * result), v22, 0x415uLL);
    uint64_t v15 = v7[7];
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
    unint64_t result = sub_214B6AC38(v21, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, &qword_26784D000);
    uint64_t v17 = v7[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v7[2] = v19;
    v10 += v11;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F570(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFE8);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    unint64_t v6 = (unint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    sub_214B6A3A0(v5, v6);
    id v8 = v7;
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F06F38], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B8979C);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F6B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFF8);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7F7FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF48);
  uint64_t v7 = sub_214D1A978();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_214B95764(v13, (uint64_t)v6, &qword_26784CF40);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_214B88294(*v6, v16, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for ODIKnownBinding();
    unint64_t result = sub_214B915D8(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7FA0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4290);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43B8);
  uint64_t v7 = sub_214D1A978();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_214B95764(v13, (uint64_t)v6, &qword_26ACE4290);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_214B88294(*v6, v16, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_214D19C78();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_214B7FC34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFE0);
  uint64_t v2 = (void *)sub_214D1A978();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_214B88294(v5, v6, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

CoreODIEssentials::ODIErrorCode_optional __swiftcall ODIErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= -30)
  {
    if (rawValue <= -1405)
    {
      switch(rawValue)
      {
        case -3155:
          *uint64_t v1 = 127;
          break;
        case -3154:
          *uint64_t v1 = 126;
          break;
        case -3153:
          *uint64_t v1 = 125;
          break;
        case -3152:
          *uint64_t v1 = 124;
          break;
        case -3151:
          *uint64_t v1 = 123;
          break;
        case -3150:
        case -3149:
        case -3148:
        case -3147:
        case -3146:
        case -3145:
        case -3144:
        case -3143:
        case -3142:
        case -3141:
        case -3140:
        case -3139:
        case -3138:
        case -3137:
        case -3136:
        case -3135:
        case -3134:
        case -3133:
        case -3132:
        case -3131:
        case -3130:
        case -3129:
        case -3128:
        case -3127:
        case -3126:
        case -3125:
        case -3124:
        case -3123:
        case -3122:
        case -3121:
        case -3120:
        case -3119:
        case -3118:
        case -3117:
        case -3116:
        case -3115:
        case -3114:
          goto LABEL_156;
        case -3113:
          *uint64_t v1 = 122;
          break;
        case -3112:
          *uint64_t v1 = 121;
          break;
        case -3111:
          *uint64_t v1 = 120;
          break;
        case -3110:
          *uint64_t v1 = 119;
          break;
        case -3109:
          *uint64_t v1 = 118;
          break;
        case -3108:
          *uint64_t v1 = 117;
          break;
        case -3107:
          *uint64_t v1 = 116;
          break;
        case -3106:
          *uint64_t v1 = 115;
          break;
        case -3105:
          *uint64_t v1 = 114;
          break;
        case -3104:
          *uint64_t v1 = 113;
          break;
        case -3103:
          *uint64_t v1 = 112;
          break;
        case -3102:
          *uint64_t v1 = 111;
          break;
        case -3101:
          *uint64_t v1 = 110;
          break;
        default:
          switch(rawValue)
          {
            case -2127:
              *uint64_t v1 = 109;
              break;
            case -2126:
              *uint64_t v1 = 108;
              break;
            case -2125:
              *uint64_t v1 = 107;
              break;
            case -2124:
              *uint64_t v1 = 106;
              break;
            case -2123:
              *uint64_t v1 = 105;
              break;
            case -2122:
            case -2121:
            case -2120:
            case -2119:
            case -2118:
            case -2117:
            case -2116:
            case -2115:
            case -2114:
            case -2113:
            case -2109:
            case -2108:
            case -2106:
            case -2105:
              goto LABEL_156;
            case -2112:
              *uint64_t v1 = 104;
              break;
            case -2111:
              *uint64_t v1 = 103;
              break;
            case -2110:
              *uint64_t v1 = 102;
              break;
            case -2107:
              *uint64_t v1 = 101;
              break;
            case -2104:
              *uint64_t v1 = 100;
              break;
            case -2103:
              *uint64_t v1 = 99;
              break;
            default:
              if (rawValue != -131600) {
                goto LABEL_156;
              }
              *uint64_t v1 = 98;
              break;
          }
          break;
      }
    }
    else
    {
      switch(rawValue)
      {
        case -1404:
          *uint64_t v1 = 84;
          break;
        case -1403:
          *uint64_t v1 = 83;
          break;
        case -1402:
          *uint64_t v1 = 82;
          break;
        case -1317:
          *uint64_t v1 = 97;
          break;
        case -1316:
          *uint64_t v1 = 96;
          break;
        case -1315:
          *uint64_t v1 = 95;
          break;
        case -1310:
          *uint64_t v1 = 94;
          break;
        case -1309:
          *uint64_t v1 = 93;
          break;
        case -1308:
          *uint64_t v1 = 92;
          break;
        case -1307:
          *uint64_t v1 = 91;
          break;
        case -1306:
          *uint64_t v1 = 90;
          break;
        case -1305:
          *uint64_t v1 = 89;
          break;
        case -1304:
          *uint64_t v1 = 88;
          break;
        case -1303:
          *uint64_t v1 = 87;
          break;
        case -1302:
          *uint64_t v1 = 86;
          break;
        case -1301:
          *uint64_t v1 = 85;
          break;
        case -1204:
          *uint64_t v1 = 81;
          break;
        case -1203:
          *uint64_t v1 = 80;
          break;
        case -1202:
          *uint64_t v1 = 79;
          break;
        case -1201:
          *uint64_t v1 = 78;
          break;
        case -1119:
          *uint64_t v1 = 77;
          break;
        case -1118:
          *uint64_t v1 = 76;
          break;
        case -1117:
          *uint64_t v1 = 75;
          break;
        case -1116:
          *uint64_t v1 = 74;
          break;
        case -1115:
          *uint64_t v1 = 73;
          break;
        case -1114:
          *uint64_t v1 = 72;
          break;
        case -1113:
          *uint64_t v1 = 71;
          break;
        case -1112:
          *uint64_t v1 = 70;
          break;
        case -1111:
          *uint64_t v1 = 69;
          break;
        case -1110:
          *uint64_t v1 = 68;
          break;
        case -1104:
          *uint64_t v1 = 67;
          break;
        case -1103:
          *uint64_t v1 = 66;
          break;
        case -1102:
          *uint64_t v1 = 65;
          break;
        case -1101:
          *uint64_t v1 = 64;
          break;
        default:
          goto LABEL_156;
      }
    }
    return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
  }
  if (rawValue > 39999)
  {
    if (rawValue <= 40400)
    {
      switch(rawValue)
      {
        case 40000:
          *uint64_t v1 = 28;
          break;
        case 40010:
          *uint64_t v1 = 29;
          break;
        case 40011:
          *uint64_t v1 = 30;
          break;
        case 40012:
          *uint64_t v1 = 31;
          break;
        case 40013:
          *uint64_t v1 = 32;
          break;
        case 40014:
          *uint64_t v1 = 33;
          break;
        case 40015:
          *uint64_t v1 = 34;
          break;
        case 40020:
          *uint64_t v1 = 35;
          break;
        case 40021:
          *uint64_t v1 = 36;
          break;
        case 40022:
          *uint64_t v1 = 37;
          break;
        case 40023:
          *uint64_t v1 = 38;
          break;
        case 40024:
          *uint64_t v1 = 39;
          break;
        case 40025:
          *uint64_t v1 = 40;
          break;
        case 40026:
          *uint64_t v1 = 41;
          break;
        case 40027:
          *uint64_t v1 = 42;
          break;
        case 40028:
          *uint64_t v1 = 43;
          break;
        case 40029:
          *uint64_t v1 = 44;
          break;
        case 40030:
          *uint64_t v1 = 45;
          break;
        case 40101:
          *uint64_t v1 = 46;
          break;
        case 40102:
          *uint64_t v1 = 47;
          break;
        case 40200:
          *uint64_t v1 = 48;
          break;
        case 40201:
          *uint64_t v1 = 49;
          break;
        case 40205:
          *uint64_t v1 = 50;
          break;
        default:
          goto LABEL_156;
      }
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    }
    if (rawValue > 49999)
    {
      if (rawValue > 99990)
      {
        switch(rawValue)
        {
          case 99991:
            *uint64_t v1 = 61;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 99992:
            *uint64_t v1 = 62;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 99993:
            *uint64_t v1 = 63;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        }
      }
      else
      {
        switch(rawValue)
        {
          case 50000:
            *uint64_t v1 = 58;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 50001:
            *uint64_t v1 = 59;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 50002:
            *uint64_t v1 = 60;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        }
      }
    }
    else
    {
      if (rawValue <= 40499)
      {
        switch(rawValue)
        {
          case 40401:
            *uint64_t v1 = 51;
            break;
          case 40402:
            *uint64_t v1 = 52;
            break;
          case 40403:
            *uint64_t v1 = 53;
            break;
          case 40404:
            *uint64_t v1 = 54;
            break;
          default:
            goto LABEL_156;
        }
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      }
      switch(rawValue)
      {
        case 40500:
          *uint64_t v1 = 55;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case 40600:
          *uint64_t v1 = 56;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case 40601:
          *uint64_t v1 = 57;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      }
    }
LABEL_156:
    if (rawValue <= -6010)
    {
      if (rawValue > -8305)
      {
        if (rawValue <= -6106)
        {
          switch(rawValue)
          {
            case -8304:
              *uint64_t v1 = -85;
              break;
            case -8301:
              *uint64_t v1 = -86;
              break;
            case -8001:
              *uint64_t v1 = -87;
              break;
            default:
LABEL_176:
              if (rawValue <= -72212)
              {
                switch(rawValue)
                {
                  case -72782:
                    *uint64_t v1 = -48;
                    break;
                  case -72781:
                    *uint64_t v1 = -49;
                    break;
                  case -72780:
                    *uint64_t v1 = -50;
                    break;
                  default:
LABEL_255:
                    *uint64_t v1 = -47;
                    break;
                }
              }
              else
              {
                switch(rawValue)
                {
                  case -72211:
                    *uint64_t v1 = -51;
                    break;
                  case -72210:
                    *uint64_t v1 = -52;
                    break;
                  case -72209:
                    *uint64_t v1 = -53;
                    break;
                  case -72208:
                    *uint64_t v1 = -54;
                    break;
                  case -72207:
                    *uint64_t v1 = -55;
                    break;
                  case -72206:
                    *uint64_t v1 = -56;
                    break;
                  case -72205:
                    *uint64_t v1 = -57;
                    break;
                  case -72204:
                    *uint64_t v1 = -58;
                    break;
                  case -72203:
                    *uint64_t v1 = -59;
                    break;
                  case -72202:
                    *uint64_t v1 = -60;
                    break;
                  case -72201:
                    *uint64_t v1 = -61;
                    break;
                  case -72200:
                    *uint64_t v1 = -62;
                    break;
                  default:
                    if (rawValue == -22207)
                    {
                      *uint64_t v1 = -64;
                    }
                    else
                    {
                      if (rawValue != -22208) {
                        goto LABEL_255;
                      }
                      *uint64_t v1 = -63;
                    }
                    break;
                }
              }
              break;
          }
        }
        else
        {
          switch(rawValue)
          {
            case -6105:
              *uint64_t v1 = -88;
              break;
            case -6104:
              *uint64_t v1 = -89;
              break;
            case -6103:
              *uint64_t v1 = -90;
              break;
            case -6102:
              *uint64_t v1 = -91;
              break;
            default:
              if (rawValue != -6010) {
                goto LABEL_176;
              }
              *uint64_t v1 = -92;
              break;
          }
        }
      }
      else
      {
        switch(rawValue)
        {
          case -8504:
            *uint64_t v1 = -72;
            break;
          case -8503:
            *uint64_t v1 = -73;
            break;
          case -8502:
            *uint64_t v1 = -74;
            break;
          case -8501:
            *uint64_t v1 = -75;
            break;
          case -8500:
            *uint64_t v1 = -76;
            break;
          case -8499:
          case -8498:
          case -8497:
          case -8496:
          case -8495:
          case -8494:
          case -8493:
          case -8492:
          case -8491:
          case -8490:
          case -8489:
          case -8488:
          case -8487:
          case -8486:
          case -8485:
          case -8484:
          case -8483:
          case -8482:
          case -8481:
          case -8480:
          case -8479:
          case -8478:
          case -8477:
          case -8476:
          case -8475:
          case -8474:
          case -8473:
          case -8472:
          case -8471:
          case -8470:
          case -8469:
          case -8468:
          case -8467:
          case -8466:
          case -8465:
          case -8464:
          case -8463:
          case -8462:
          case -8461:
          case -8460:
          case -8459:
          case -8458:
          case -8457:
          case -8456:
          case -8455:
          case -8454:
          case -8453:
          case -8452:
          case -8451:
          case -8450:
          case -8449:
          case -8448:
          case -8447:
          case -8446:
          case -8445:
          case -8444:
          case -8443:
          case -8442:
          case -8441:
          case -8440:
          case -8439:
          case -8438:
          case -8437:
          case -8436:
          case -8435:
          case -8432:
          case -8431:
          case -8430:
          case -8427:
          case -8426:
          case -8425:
          case -8424:
          case -8423:
          case -8422:
          case -8421:
          case -8420:
          case -8419:
          case -8418:
          case -8417:
          case -8416:
          case -8415:
          case -8414:
          case -8413:
          case -8412:
          case -8411:
          case -8410:
          case -8409:
          case -8408:
          case -8407:
          case -8406:
          case -8405:
          case -8402:
            goto LABEL_176;
          case -8434:
            *uint64_t v1 = -77;
            break;
          case -8433:
            *uint64_t v1 = -78;
            break;
          case -8429:
            *uint64_t v1 = -79;
            break;
          case -8428:
            *uint64_t v1 = -80;
            break;
          case -8404:
            *uint64_t v1 = -81;
            break;
          case -8403:
            *uint64_t v1 = -82;
            break;
          case -8401:
            *uint64_t v1 = -83;
            break;
          case -8400:
            *uint64_t v1 = -84;
            break;
          default:
            char v2 = -65;
            switch(rawValue)
            {
              case -22206:
                goto LABEL_133;
              case -22205:
                *uint64_t v1 = -66;
                break;
              case -22204:
                *uint64_t v1 = -67;
                break;
              case -22203:
                *uint64_t v1 = -68;
                break;
              case -22202:
                *uint64_t v1 = -69;
                break;
              case -22201:
                *uint64_t v1 = -70;
                break;
              case -22200:
                *uint64_t v1 = -71;
                break;
              default:
                goto LABEL_176;
            }
            break;
        }
      }
    }
    else
    {
      char v2 = 0x80;
      switch(rawValue)
      {
        case -3300:
          *uint64_t v1 = -95;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3299:
        case -3298:
        case -3297:
        case -3296:
        case -3295:
        case -3294:
        case -3293:
        case -3292:
        case -3291:
        case -3290:
        case -3289:
        case -3288:
        case -3287:
        case -3286:
        case -3285:
        case -3284:
        case -3283:
        case -3282:
        case -3281:
        case -3280:
        case -3279:
        case -3278:
        case -3277:
        case -3276:
        case -3275:
        case -3274:
        case -3273:
        case -3272:
        case -3271:
        case -3270:
        case -3269:
        case -3268:
        case -3267:
        case -3266:
        case -3265:
        case -3264:
        case -3263:
        case -3262:
        case -3261:
        case -3260:
        case -3259:
        case -3258:
        case -3257:
        case -3256:
        case -3255:
        case -3254:
        case -3253:
        case -3252:
        case -3251:
        case -3250:
        case -3249:
        case -3248:
        case -3247:
        case -3246:
        case -3245:
        case -3244:
        case -3243:
        case -3242:
        case -3241:
        case -3240:
        case -3239:
        case -3238:
        case -3237:
        case -3236:
        case -3235:
        case -3234:
        case -3233:
        case -3232:
        case -3231:
        case -3230:
        case -3229:
        case -3228:
        case -3227:
        case -3226:
        case -3225:
        case -3224:
        case -3223:
        case -3222:
        case -3221:
        case -3220:
        case -3219:
        case -3218:
        case -3217:
        case -3216:
        case -3215:
        case -3214:
        case -3213:
        case -3212:
        case -3211:
        case -3210:
        case -3209:
        case -3208:
        case -3207:
        case -3206:
        case -3205:
        case -3204:
        case -3203:
        case -3202:
        case -3201:
        case -3200:
        case -3199:
        case -3198:
        case -3197:
        case -3196:
        case -3195:
        case -3194:
        case -3193:
        case -3192:
        case -3191:
        case -3190:
        case -3160:
          goto LABEL_176;
        case -3189:
          *uint64_t v1 = -96;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3188:
          *uint64_t v1 = -97;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3187:
          *uint64_t v1 = -98;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3186:
          *uint64_t v1 = -99;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3185:
          *uint64_t v1 = -100;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3184:
          *uint64_t v1 = -101;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3183:
          *uint64_t v1 = -102;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3182:
          *uint64_t v1 = -103;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3181:
          *uint64_t v1 = -104;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3180:
          *uint64_t v1 = -105;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3179:
          *uint64_t v1 = -106;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3178:
          *uint64_t v1 = -107;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3177:
          *uint64_t v1 = -108;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3176:
          *uint64_t v1 = -109;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3175:
          *uint64_t v1 = -110;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3174:
          *uint64_t v1 = -111;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3173:
          *uint64_t v1 = -112;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3172:
          *uint64_t v1 = -113;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3171:
          *uint64_t v1 = -114;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3170:
          *uint64_t v1 = -115;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3169:
          *uint64_t v1 = -116;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3168:
          *uint64_t v1 = -117;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3167:
          *uint64_t v1 = -118;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3166:
          *uint64_t v1 = -119;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3165:
          *uint64_t v1 = -120;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3164:
          *uint64_t v1 = -121;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3163:
          *uint64_t v1 = -122;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3162:
          *uint64_t v1 = -123;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3161:
          *uint64_t v1 = -124;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3159:
          *uint64_t v1 = -125;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3158:
          *uint64_t v1 = -126;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3157:
          *uint64_t v1 = -127;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3156:
          goto LABEL_133;
        default:
          if (rawValue == -6009)
          {
            *uint64_t v1 = -93;
          }
          else
          {
            if (rawValue != -5108) {
              goto LABEL_176;
            }
            *uint64_t v1 = -94;
          }
          break;
      }
    }
    return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
  }
  if (rawValue > 19999)
  {
    switch(rawValue)
    {
      case 20000:
        *uint64_t v1 = 25;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      case 20001:
        *uint64_t v1 = 26;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      case 20100:
        *uint64_t v1 = 27;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    }
    goto LABEL_156;
  }
  char v2 = 0;
  switch(rawValue)
  {
    case -29:
      *uint64_t v1 = 23;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -28:
      *uint64_t v1 = 22;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -22:
      *uint64_t v1 = 21;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -21:
      *uint64_t v1 = 20;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -20:
      *uint64_t v1 = 19;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -19:
      *uint64_t v1 = 18;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -18:
      *uint64_t v1 = 17;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -17:
      *uint64_t v1 = 16;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -16:
      *uint64_t v1 = 15;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -15:
      *uint64_t v1 = 14;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -14:
      *uint64_t v1 = 13;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -13:
      *uint64_t v1 = 12;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -12:
      *uint64_t v1 = 11;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -11:
      *uint64_t v1 = 10;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -10:
      *uint64_t v1 = 9;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -9:
      *uint64_t v1 = 8;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -8:
      *uint64_t v1 = 7;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -7:
      *uint64_t v1 = 6;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -6:
      *uint64_t v1 = 5;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -5:
      *uint64_t v1 = 4;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -4:
      *uint64_t v1 = 3;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -3:
      *uint64_t v1 = 2;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -2:
      char v2 = 1;
      goto LABEL_133;
    case -1:
LABEL_133:
      *uint64_t v1 = v2;
      break;
    case 200:
      *uint64_t v1 = 24;
      break;
    default:
      goto LABEL_156;
  }
  return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
}

uint64_t ODIErrorCode.rawValue.getter()
{
  uint64_t result = -1;
  switch(*v0)
  {
    case 1:
      uint64_t result = -2;
      break;
    case 2:
      uint64_t result = -3;
      break;
    case 3:
      uint64_t result = -4;
      break;
    case 4:
      uint64_t result = -5;
      break;
    case 5:
      uint64_t result = -6;
      break;
    case 6:
      uint64_t result = -7;
      break;
    case 7:
      uint64_t result = -8;
      break;
    case 8:
      uint64_t result = -9;
      break;
    case 9:
      uint64_t result = -10;
      break;
    case 0xA:
      uint64_t result = -11;
      break;
    case 0xB:
      uint64_t result = -12;
      break;
    case 0xC:
      uint64_t result = -13;
      break;
    case 0xD:
      uint64_t result = -14;
      break;
    case 0xE:
      uint64_t result = -15;
      break;
    case 0xF:
      uint64_t result = -16;
      break;
    case 0x10:
      uint64_t result = -17;
      break;
    case 0x11:
      uint64_t result = -18;
      break;
    case 0x12:
      uint64_t result = -19;
      break;
    case 0x13:
      uint64_t result = -20;
      break;
    case 0x14:
      uint64_t result = -21;
      break;
    case 0x15:
      uint64_t result = -22;
      break;
    case 0x16:
      uint64_t result = -28;
      break;
    case 0x17:
      uint64_t result = -29;
      break;
    case 0x18:
      uint64_t result = 200;
      break;
    case 0x19:
      uint64_t result = 20000;
      break;
    case 0x1A:
      uint64_t result = 20001;
      break;
    case 0x1B:
      uint64_t result = 20100;
      break;
    case 0x1C:
      uint64_t result = 40000;
      break;
    case 0x1D:
      uint64_t result = 40010;
      break;
    case 0x1E:
      uint64_t result = 40011;
      break;
    case 0x1F:
      uint64_t result = 40012;
      break;
    case 0x20:
      uint64_t result = 40013;
      break;
    case 0x21:
      uint64_t result = 40014;
      break;
    case 0x22:
      uint64_t result = 40015;
      break;
    case 0x23:
      uint64_t result = 40020;
      break;
    case 0x24:
      uint64_t result = 40021;
      break;
    case 0x25:
      uint64_t result = 40022;
      break;
    case 0x26:
      uint64_t result = 40023;
      break;
    case 0x27:
      uint64_t result = 40024;
      break;
    case 0x28:
      uint64_t result = 40025;
      break;
    case 0x29:
      uint64_t result = 40026;
      break;
    case 0x2A:
      uint64_t result = 40027;
      break;
    case 0x2B:
      uint64_t result = 40028;
      break;
    case 0x2C:
      uint64_t result = 40029;
      break;
    case 0x2D:
      uint64_t result = 40030;
      break;
    case 0x2E:
      uint64_t result = 40101;
      break;
    case 0x2F:
      uint64_t result = 40102;
      break;
    case 0x30:
      uint64_t result = 40200;
      break;
    case 0x31:
      uint64_t result = 40201;
      break;
    case 0x32:
      uint64_t result = 40205;
      break;
    case 0x33:
      uint64_t result = 40401;
      break;
    case 0x34:
      uint64_t result = 40402;
      break;
    case 0x35:
      uint64_t result = 40403;
      break;
    case 0x36:
      uint64_t result = 40404;
      break;
    case 0x37:
      uint64_t result = 40500;
      break;
    case 0x38:
      uint64_t result = 40600;
      break;
    case 0x39:
      uint64_t result = 40601;
      break;
    case 0x3A:
      uint64_t result = 50000;
      break;
    case 0x3B:
      uint64_t result = 50001;
      break;
    case 0x3C:
      uint64_t result = 50002;
      break;
    case 0x3D:
      uint64_t result = 99991;
      break;
    case 0x3E:
      uint64_t result = 99992;
      break;
    case 0x3F:
      uint64_t result = 99993;
      break;
    case 0x40:
      uint64_t result = -1101;
      break;
    case 0x41:
      uint64_t result = -1102;
      break;
    case 0x42:
      uint64_t result = -1103;
      break;
    case 0x43:
      uint64_t result = -1104;
      break;
    case 0x44:
      uint64_t result = -1110;
      break;
    case 0x45:
      uint64_t result = -1111;
      break;
    case 0x46:
      uint64_t result = -1112;
      break;
    case 0x47:
      uint64_t result = -1113;
      break;
    case 0x48:
      uint64_t result = -1114;
      break;
    case 0x49:
      uint64_t result = -1115;
      break;
    case 0x4A:
      uint64_t result = -1116;
      break;
    case 0x4B:
      uint64_t result = -1117;
      break;
    case 0x4C:
      uint64_t result = -1118;
      break;
    case 0x4D:
      uint64_t result = -1119;
      break;
    case 0x4E:
      uint64_t result = -1201;
      break;
    case 0x4F:
      uint64_t result = -1202;
      break;
    case 0x50:
      uint64_t result = -1203;
      break;
    case 0x51:
      uint64_t result = -1204;
      break;
    case 0x52:
      uint64_t result = -1402;
      break;
    case 0x53:
      uint64_t result = -1403;
      break;
    case 0x54:
      uint64_t result = -1404;
      break;
    case 0x55:
      uint64_t result = -1301;
      break;
    case 0x56:
      uint64_t result = -1302;
      break;
    case 0x57:
      uint64_t result = -1303;
      break;
    case 0x58:
      uint64_t result = -1304;
      break;
    case 0x59:
      uint64_t result = -1305;
      break;
    case 0x5A:
      uint64_t result = -1306;
      break;
    case 0x5B:
      uint64_t result = -1307;
      break;
    case 0x5C:
      uint64_t result = -1308;
      break;
    case 0x5D:
      uint64_t result = -1309;
      break;
    case 0x5E:
      uint64_t result = -1310;
      break;
    case 0x5F:
      uint64_t result = -1315;
      break;
    case 0x60:
      uint64_t result = -1316;
      break;
    case 0x61:
      uint64_t result = -1317;
      break;
    case 0x62:
      uint64_t result = -131600;
      break;
    case 0x63:
      uint64_t result = -2103;
      break;
    case 0x64:
      uint64_t result = -2104;
      break;
    case 0x65:
      uint64_t result = -2107;
      break;
    case 0x66:
      uint64_t result = -2110;
      break;
    case 0x67:
      uint64_t result = -2111;
      break;
    case 0x68:
      uint64_t result = -2112;
      break;
    case 0x69:
      uint64_t result = -2123;
      break;
    case 0x6A:
      uint64_t result = -2124;
      break;
    case 0x6B:
      uint64_t result = -2125;
      break;
    case 0x6C:
      uint64_t result = -2126;
      break;
    case 0x6D:
      uint64_t result = -2127;
      break;
    case 0x6E:
      uint64_t result = -3101;
      break;
    case 0x6F:
      uint64_t result = -3102;
      break;
    case 0x70:
      uint64_t result = -3103;
      break;
    case 0x71:
      uint64_t result = -3104;
      break;
    case 0x72:
      uint64_t result = -3105;
      break;
    case 0x73:
      uint64_t result = -3106;
      break;
    case 0x74:
      uint64_t result = -3107;
      break;
    case 0x75:
      uint64_t result = -3108;
      break;
    case 0x76:
      uint64_t result = -3109;
      break;
    case 0x77:
      uint64_t result = -3110;
      break;
    case 0x78:
      uint64_t result = -3111;
      break;
    case 0x79:
      uint64_t result = -3112;
      break;
    case 0x7A:
      uint64_t result = -3113;
      break;
    case 0x7B:
      uint64_t result = -3151;
      break;
    case 0x7C:
      uint64_t result = -3152;
      break;
    case 0x7D:
      uint64_t result = -3153;
      break;
    case 0x7E:
      uint64_t result = -3154;
      break;
    case 0x7F:
      uint64_t result = -3155;
      break;
    case 0x80:
      uint64_t result = -3156;
      break;
    case 0x81:
      uint64_t result = -3157;
      break;
    case 0x82:
      uint64_t result = -3158;
      break;
    case 0x83:
      uint64_t result = -3159;
      break;
    case 0x84:
      uint64_t result = -3161;
      break;
    case 0x85:
      uint64_t result = -3162;
      break;
    case 0x86:
      uint64_t result = -3163;
      break;
    case 0x87:
      uint64_t result = -3164;
      break;
    case 0x88:
      uint64_t result = -3165;
      break;
    case 0x89:
      uint64_t result = -3166;
      break;
    case 0x8A:
      uint64_t result = -3167;
      break;
    case 0x8B:
      uint64_t result = -3168;
      break;
    case 0x8C:
      uint64_t result = -3169;
      break;
    case 0x8D:
      uint64_t result = -3170;
      break;
    case 0x8E:
      uint64_t result = -3171;
      break;
    case 0x8F:
      uint64_t result = -3172;
      break;
    case 0x90:
      uint64_t result = -3173;
      break;
    case 0x91:
      uint64_t result = -3174;
      break;
    case 0x92:
      uint64_t result = -3175;
      break;
    case 0x93:
      uint64_t result = -3176;
      break;
    case 0x94:
      uint64_t result = -3177;
      break;
    case 0x95:
      uint64_t result = -3178;
      break;
    case 0x96:
      uint64_t result = -3179;
      break;
    case 0x97:
      uint64_t result = -3180;
      break;
    case 0x98:
      uint64_t result = -3181;
      break;
    case 0x99:
      uint64_t result = -3182;
      break;
    case 0x9A:
      uint64_t result = -3183;
      break;
    case 0x9B:
      uint64_t result = -3184;
      break;
    case 0x9C:
      uint64_t result = -3185;
      break;
    case 0x9D:
      uint64_t result = -3186;
      break;
    case 0x9E:
      uint64_t result = -3187;
      break;
    case 0x9F:
      uint64_t result = -3188;
      break;
    case 0xA0:
      uint64_t result = -3189;
      break;
    case 0xA1:
      uint64_t result = -3300;
      break;
    case 0xA2:
      uint64_t result = -5108;
      break;
    case 0xA3:
      uint64_t result = -6009;
      break;
    case 0xA4:
      uint64_t result = -6010;
      break;
    case 0xA5:
      uint64_t result = -6102;
      break;
    case 0xA6:
      uint64_t result = -6103;
      break;
    case 0xA7:
      uint64_t result = -6104;
      break;
    case 0xA8:
      uint64_t result = -6105;
      break;
    case 0xA9:
      uint64_t result = -8001;
      break;
    case 0xAA:
      uint64_t result = -8301;
      break;
    case 0xAB:
      uint64_t result = -8304;
      break;
    case 0xAC:
      uint64_t result = -8400;
      break;
    case 0xAD:
      uint64_t result = -8401;
      break;
    case 0xAE:
      uint64_t result = -8403;
      break;
    case 0xAF:
      uint64_t result = -8404;
      break;
    case 0xB0:
      uint64_t result = -8428;
      break;
    case 0xB1:
      uint64_t result = -8429;
      break;
    case 0xB2:
      uint64_t result = -8433;
      break;
    case 0xB3:
      uint64_t result = -8434;
      break;
    case 0xB4:
      uint64_t result = -8500;
      break;
    case 0xB5:
      uint64_t result = -8501;
      break;
    case 0xB6:
      uint64_t result = -8502;
      break;
    case 0xB7:
      uint64_t result = -8503;
      break;
    case 0xB8:
      uint64_t result = -8504;
      break;
    case 0xB9:
      uint64_t result = -22200;
      break;
    case 0xBA:
      uint64_t result = -22201;
      break;
    case 0xBB:
      uint64_t result = -22202;
      break;
    case 0xBC:
      uint64_t result = -22203;
      break;
    case 0xBD:
      uint64_t result = -22204;
      break;
    case 0xBE:
      uint64_t result = -22205;
      break;
    case 0xBF:
      uint64_t result = -22206;
      break;
    case 0xC0:
      uint64_t result = -22207;
      break;
    case 0xC1:
      uint64_t result = -22208;
      break;
    case 0xC2:
      uint64_t result = -72200;
      break;
    case 0xC3:
      uint64_t result = -72201;
      break;
    case 0xC4:
      uint64_t result = -72202;
      break;
    case 0xC5:
      uint64_t result = -72203;
      break;
    case 0xC6:
      uint64_t result = -72204;
      break;
    case 0xC7:
      uint64_t result = -72205;
      break;
    case 0xC8:
      uint64_t result = -72206;
      break;
    case 0xC9:
      uint64_t result = -72207;
      break;
    case 0xCA:
      uint64_t result = -72208;
      break;
    case 0xCB:
      uint64_t result = -72209;
      break;
    case 0xCC:
      uint64_t result = -72210;
      break;
    case 0xCD:
      uint64_t result = -72211;
      break;
    case 0xCE:
      uint64_t result = -72780;
      break;
    case 0xCF:
      uint64_t result = -72781;
      break;
    case 0xD0:
      uint64_t result = -72782;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_214B8269C(unsigned char *a1, unsigned char *a2)
{
  uint64_t v2 = -1;
  switch(*a1)
  {
    case 1:
      uint64_t v2 = -2;
      break;
    case 2:
      uint64_t v2 = -3;
      break;
    case 3:
      uint64_t v2 = -4;
      break;
    case 4:
      uint64_t v2 = -5;
      break;
    case 5:
      uint64_t v2 = -6;
      break;
    case 6:
      uint64_t v2 = -7;
      break;
    case 7:
      uint64_t v2 = -8;
      break;
    case 8:
      uint64_t v2 = -9;
      break;
    case 9:
      uint64_t v2 = -10;
      break;
    case 0xA:
      uint64_t v2 = -11;
      break;
    case 0xB:
      uint64_t v2 = -12;
      break;
    case 0xC:
      uint64_t v2 = -13;
      break;
    case 0xD:
      uint64_t v2 = -14;
      break;
    case 0xE:
      uint64_t v2 = -15;
      break;
    case 0xF:
      uint64_t v2 = -16;
      break;
    case 0x10:
      uint64_t v2 = -17;
      break;
    case 0x11:
      uint64_t v2 = -18;
      break;
    case 0x12:
      uint64_t v2 = -19;
      break;
    case 0x13:
      uint64_t v2 = -20;
      break;
    case 0x14:
      uint64_t v2 = -21;
      break;
    case 0x15:
      uint64_t v2 = -22;
      break;
    case 0x16:
      uint64_t v2 = -28;
      break;
    case 0x17:
      uint64_t v2 = -29;
      break;
    case 0x18:
      uint64_t v2 = 200;
      break;
    case 0x19:
      uint64_t v2 = 20000;
      break;
    case 0x1A:
      uint64_t v2 = 20001;
      break;
    case 0x1B:
      uint64_t v2 = 20100;
      break;
    case 0x1C:
      uint64_t v2 = 40000;
      break;
    case 0x1D:
      uint64_t v2 = 40010;
      break;
    case 0x1E:
      uint64_t v2 = 40011;
      break;
    case 0x1F:
      uint64_t v2 = 40012;
      break;
    case 0x20:
      uint64_t v2 = 40013;
      break;
    case 0x21:
      uint64_t v2 = 40014;
      break;
    case 0x22:
      uint64_t v2 = 40015;
      break;
    case 0x23:
      uint64_t v2 = 40020;
      break;
    case 0x24:
      uint64_t v2 = 40021;
      break;
    case 0x25:
      uint64_t v2 = 40022;
      break;
    case 0x26:
      uint64_t v2 = 40023;
      break;
    case 0x27:
      uint64_t v2 = 40024;
      break;
    case 0x28:
      uint64_t v2 = 40025;
      break;
    case 0x29:
      uint64_t v2 = 40026;
      break;
    case 0x2A:
      uint64_t v2 = 40027;
      break;
    case 0x2B:
      uint64_t v2 = 40028;
      break;
    case 0x2C:
      uint64_t v2 = 40029;
      break;
    case 0x2D:
      uint64_t v2 = 40030;
      break;
    case 0x2E:
      uint64_t v2 = 40101;
      break;
    case 0x2F:
      uint64_t v2 = 40102;
      break;
    case 0x30:
      uint64_t v2 = 40200;
      break;
    case 0x31:
      uint64_t v2 = 40201;
      break;
    case 0x32:
      uint64_t v2 = 40205;
      break;
    case 0x33:
      uint64_t v2 = 40401;
      break;
    case 0x34:
      uint64_t v2 = 40402;
      break;
    case 0x35:
      uint64_t v2 = 40403;
      break;
    case 0x36:
      uint64_t v2 = 40404;
      break;
    case 0x37:
      uint64_t v2 = 40500;
      break;
    case 0x38:
      uint64_t v2 = 40600;
      break;
    case 0x39:
      uint64_t v2 = 40601;
      break;
    case 0x3A:
      uint64_t v2 = 50000;
      break;
    case 0x3B:
      uint64_t v2 = 50001;
      break;
    case 0x3C:
      uint64_t v2 = 50002;
      break;
    case 0x3D:
      uint64_t v2 = 99991;
      break;
    case 0x3E:
      uint64_t v2 = 99992;
      break;
    case 0x3F:
      uint64_t v2 = 99993;
      break;
    case 0x40:
      uint64_t v2 = -1101;
      break;
    case 0x41:
      uint64_t v2 = -1102;
      break;
    case 0x42:
      uint64_t v2 = -1103;
      break;
    case 0x43:
      uint64_t v2 = -1104;
      break;
    case 0x44:
      uint64_t v2 = -1110;
      break;
    case 0x45:
      uint64_t v2 = -1111;
      break;
    case 0x46:
      uint64_t v2 = -1112;
      break;
    case 0x47:
      uint64_t v2 = -1113;
      break;
    case 0x48:
      uint64_t v2 = -1114;
      break;
    case 0x49:
      uint64_t v2 = -1115;
      break;
    case 0x4A:
      uint64_t v2 = -1116;
      break;
    case 0x4B:
      uint64_t v2 = -1117;
      break;
    case 0x4C:
      uint64_t v2 = -1118;
      break;
    case 0x4D:
      uint64_t v2 = -1119;
      break;
    case 0x4E:
      uint64_t v2 = -1201;
      break;
    case 0x4F:
      uint64_t v2 = -1202;
      break;
    case 0x50:
      uint64_t v2 = -1203;
      break;
    case 0x51:
      uint64_t v2 = -1204;
      break;
    case 0x52:
      uint64_t v2 = -1402;
      break;
    case 0x53:
      uint64_t v2 = -1403;
      break;
    case 0x54:
      uint64_t v2 = -1404;
      break;
    case 0x55:
      uint64_t v2 = -1301;
      break;
    case 0x56:
      uint64_t v2 = -1302;
      break;
    case 0x57:
      uint64_t v2 = -1303;
      break;
    case 0x58:
      uint64_t v2 = -1304;
      break;
    case 0x59:
      uint64_t v2 = -1305;
      break;
    case 0x5A:
      uint64_t v2 = -1306;
      break;
    case 0x5B:
      uint64_t v2 = -1307;
      break;
    case 0x5C:
      uint64_t v2 = -1308;
      break;
    case 0x5D:
      uint64_t v2 = -1309;
      break;
    case 0x5E:
      uint64_t v2 = -1310;
      break;
    case 0x5F:
      uint64_t v2 = -1315;
      break;
    case 0x60:
      uint64_t v2 = -1316;
      break;
    case 0x61:
      uint64_t v2 = -1317;
      break;
    case 0x62:
      uint64_t v2 = -131600;
      break;
    case 0x63:
      uint64_t v2 = -2103;
      break;
    case 0x64:
      uint64_t v2 = -2104;
      break;
    case 0x65:
      uint64_t v2 = -2107;
      break;
    case 0x66:
      uint64_t v2 = -2110;
      break;
    case 0x67:
      uint64_t v2 = -2111;
      break;
    case 0x68:
      uint64_t v2 = -2112;
      break;
    case 0x69:
      uint64_t v2 = -2123;
      break;
    case 0x6A:
      uint64_t v2 = -2124;
      break;
    case 0x6B:
      uint64_t v2 = -2125;
      break;
    case 0x6C:
      uint64_t v2 = -2126;
      break;
    case 0x6D:
      uint64_t v2 = -2127;
      break;
    case 0x6E:
      uint64_t v2 = -3101;
      break;
    case 0x6F:
      uint64_t v2 = -3102;
      break;
    case 0x70:
      uint64_t v2 = -3103;
      break;
    case 0x71:
      uint64_t v2 = -3104;
      break;
    case 0x72:
      uint64_t v2 = -3105;
      break;
    case 0x73:
      uint64_t v2 = -3106;
      break;
    case 0x74:
      uint64_t v2 = -3107;
      break;
    case 0x75:
      uint64_t v2 = -3108;
      break;
    case 0x76:
      uint64_t v2 = -3109;
      break;
    case 0x77:
      uint64_t v2 = -3110;
      break;
    case 0x78:
      uint64_t v2 = -3111;
      break;
    case 0x79:
      uint64_t v2 = -3112;
      break;
    case 0x7A:
      uint64_t v2 = -3113;
      break;
    case 0x7B:
      uint64_t v2 = -3151;
      break;
    case 0x7C:
      uint64_t v2 = -3152;
      break;
    case 0x7D:
      uint64_t v2 = -3153;
      break;
    case 0x7E:
      uint64_t v2 = -3154;
      break;
    case 0x7F:
      uint64_t v2 = -3155;
      break;
    case 0x80:
      uint64_t v2 = -3156;
      break;
    case 0x81:
      uint64_t v2 = -3157;
      break;
    case 0x82:
      uint64_t v2 = -3158;
      break;
    case 0x83:
      uint64_t v2 = -3159;
      break;
    case 0x84:
      uint64_t v2 = -3161;
      break;
    case 0x85:
      uint64_t v2 = -3162;
      break;
    case 0x86:
      uint64_t v2 = -3163;
      break;
    case 0x87:
      uint64_t v2 = -3164;
      break;
    case 0x88:
      uint64_t v2 = -3165;
      break;
    case 0x89:
      uint64_t v2 = -3166;
      break;
    case 0x8A:
      uint64_t v2 = -3167;
      break;
    case 0x8B:
      uint64_t v2 = -3168;
      break;
    case 0x8C:
      uint64_t v2 = -3169;
      break;
    case 0x8D:
      uint64_t v2 = -3170;
      break;
    case 0x8E:
      uint64_t v2 = -3171;
      break;
    case 0x8F:
      uint64_t v2 = -3172;
      break;
    case 0x90:
      uint64_t v2 = -3173;
      break;
    case 0x91:
      uint64_t v2 = -3174;
      break;
    case 0x92:
      uint64_t v2 = -3175;
      break;
    case 0x93:
      uint64_t v2 = -3176;
      break;
    case 0x94:
      uint64_t v2 = -3177;
      break;
    case 0x95:
      uint64_t v2 = -3178;
      break;
    case 0x96:
      uint64_t v2 = -3179;
      break;
    case 0x97:
      uint64_t v2 = -3180;
      break;
    case 0x98:
      uint64_t v2 = -3181;
      break;
    case 0x99:
      uint64_t v2 = -3182;
      break;
    case 0x9A:
      uint64_t v2 = -3183;
      break;
    case 0x9B:
      uint64_t v2 = -3184;
      break;
    case 0x9C:
      uint64_t v2 = -3185;
      break;
    case 0x9D:
      uint64_t v2 = -3186;
      break;
    case 0x9E:
      uint64_t v2 = -3187;
      break;
    case 0x9F:
      uint64_t v2 = -3188;
      break;
    case 0xA0:
      uint64_t v2 = -3189;
      break;
    case 0xA1:
      uint64_t v2 = -3300;
      break;
    case 0xA2:
      uint64_t v2 = -5108;
      break;
    case 0xA3:
      uint64_t v2 = -6009;
      break;
    case 0xA4:
      uint64_t v2 = -6010;
      break;
    case 0xA5:
      uint64_t v2 = -6102;
      break;
    case 0xA6:
      uint64_t v2 = -6103;
      break;
    case 0xA7:
      uint64_t v2 = -6104;
      break;
    case 0xA8:
      uint64_t v2 = -6105;
      break;
    case 0xA9:
      uint64_t v2 = -8001;
      break;
    case 0xAA:
      uint64_t v2 = -8301;
      break;
    case 0xAB:
      uint64_t v2 = -8304;
      break;
    case 0xAC:
      uint64_t v2 = -8400;
      break;
    case 0xAD:
      uint64_t v2 = -8401;
      break;
    case 0xAE:
      uint64_t v2 = -8403;
      break;
    case 0xAF:
      uint64_t v2 = -8404;
      break;
    case 0xB0:
      uint64_t v2 = -8428;
      break;
    case 0xB1:
      uint64_t v2 = -8429;
      break;
    case 0xB2:
      uint64_t v2 = -8433;
      break;
    case 0xB3:
      uint64_t v2 = -8434;
      break;
    case 0xB4:
      uint64_t v2 = -8500;
      break;
    case 0xB5:
      uint64_t v2 = -8501;
      break;
    case 0xB6:
      uint64_t v2 = -8502;
      break;
    case 0xB7:
      uint64_t v2 = -8503;
      break;
    case 0xB8:
      uint64_t v2 = -8504;
      break;
    case 0xB9:
      uint64_t v2 = -22200;
      break;
    case 0xBA:
      uint64_t v2 = -22201;
      break;
    case 0xBB:
      uint64_t v2 = -22202;
      break;
    case 0xBC:
      uint64_t v2 = -22203;
      break;
    case 0xBD:
      uint64_t v2 = -22204;
      break;
    case 0xBE:
      uint64_t v2 = -22205;
      break;
    case 0xBF:
      uint64_t v2 = -22206;
      break;
    case 0xC0:
      uint64_t v2 = -22207;
      break;
    case 0xC1:
      uint64_t v2 = -22208;
      break;
    case 0xC2:
      uint64_t v2 = -72200;
      break;
    case 0xC3:
      uint64_t v2 = -72201;
      break;
    case 0xC4:
      uint64_t v2 = -72202;
      break;
    case 0xC5:
      uint64_t v2 = -72203;
      break;
    case 0xC6:
      uint64_t v2 = -72204;
      break;
    case 0xC7:
      uint64_t v2 = -72205;
      break;
    case 0xC8:
      uint64_t v2 = -72206;
      break;
    case 0xC9:
      uint64_t v2 = -72207;
      break;
    case 0xCA:
      uint64_t v2 = -72208;
      break;
    case 0xCB:
      uint64_t v2 = -72209;
      break;
    case 0xCC:
      uint64_t v2 = -72210;
      break;
    case 0xCD:
      uint64_t v2 = -72211;
      break;
    case 0xCE:
      uint64_t v2 = -72780;
      break;
    case 0xCF:
      uint64_t v2 = -72781;
      break;
    case 0xD0:
      uint64_t v2 = -72782;
      break;
    default:
      break;
  }
  uint64_t v3 = -1;
  switch(*a2)
  {
    case 1:
      uint64_t v3 = -2;
      break;
    case 2:
      uint64_t v3 = -3;
      break;
    case 3:
      uint64_t v3 = -4;
      break;
    case 4:
      uint64_t v3 = -5;
      break;
    case 5:
      uint64_t v3 = -6;
      break;
    case 6:
      uint64_t v3 = -7;
      break;
    case 7:
      uint64_t v3 = -8;
      break;
    case 8:
      uint64_t v3 = -9;
      break;
    case 9:
      uint64_t v3 = -10;
      break;
    case 0xA:
      uint64_t v3 = -11;
      break;
    case 0xB:
      uint64_t v3 = -12;
      break;
    case 0xC:
      uint64_t v3 = -13;
      break;
    case 0xD:
      uint64_t v3 = -14;
      break;
    case 0xE:
      uint64_t v3 = -15;
      break;
    case 0xF:
      uint64_t v3 = -16;
      break;
    case 0x10:
      uint64_t v3 = -17;
      break;
    case 0x11:
      uint64_t v3 = -18;
      break;
    case 0x12:
      uint64_t v3 = -19;
      break;
    case 0x13:
      uint64_t v3 = -20;
      break;
    case 0x14:
      uint64_t v3 = -21;
      break;
    case 0x15:
      uint64_t v3 = -22;
      break;
    case 0x16:
      uint64_t v3 = -28;
      break;
    case 0x17:
      uint64_t v3 = -29;
      break;
    case 0x18:
      uint64_t v3 = 200;
      break;
    case 0x19:
      uint64_t v3 = 20000;
      break;
    case 0x1A:
      uint64_t v3 = 20001;
      break;
    case 0x1B:
      uint64_t v3 = 20100;
      break;
    case 0x1C:
      uint64_t v3 = 40000;
      break;
    case 0x1D:
      uint64_t v3 = 40010;
      break;
    case 0x1E:
      uint64_t v3 = 40011;
      break;
    case 0x1F:
      uint64_t v3 = 40012;
      break;
    case 0x20:
      uint64_t v3 = 40013;
      break;
    case 0x21:
      uint64_t v3 = 40014;
      break;
    case 0x22:
      uint64_t v3 = 40015;
      break;
    case 0x23:
      uint64_t v3 = 40020;
      break;
    case 0x24:
      uint64_t v3 = 40021;
      break;
    case 0x25:
      uint64_t v3 = 40022;
      break;
    case 0x26:
      uint64_t v3 = 40023;
      break;
    case 0x27:
      uint64_t v3 = 40024;
      break;
    case 0x28:
      uint64_t v3 = 40025;
      break;
    case 0x29:
      uint64_t v3 = 40026;
      break;
    case 0x2A:
      uint64_t v3 = 40027;
      break;
    case 0x2B:
      uint64_t v3 = 40028;
      break;
    case 0x2C:
      uint64_t v3 = 40029;
      break;
    case 0x2D:
      uint64_t v3 = 40030;
      break;
    case 0x2E:
      uint64_t v3 = 40101;
      break;
    case 0x2F:
      uint64_t v3 = 40102;
      break;
    case 0x30:
      uint64_t v3 = 40200;
      break;
    case 0x31:
      uint64_t v3 = 40201;
      break;
    case 0x32:
      uint64_t v3 = 40205;
      break;
    case 0x33:
      uint64_t v3 = 40401;
      break;
    case 0x34:
      uint64_t v3 = 40402;
      break;
    case 0x35:
      uint64_t v3 = 40403;
      break;
    case 0x36:
      uint64_t v3 = 40404;
      break;
    case 0x37:
      uint64_t v3 = 40500;
      break;
    case 0x38:
      uint64_t v3 = 40600;
      break;
    case 0x39:
      uint64_t v3 = 40601;
      break;
    case 0x3A:
      uint64_t v3 = 50000;
      break;
    case 0x3B:
      uint64_t v3 = 50001;
      break;
    case 0x3C:
      uint64_t v3 = 50002;
      break;
    case 0x3D:
      uint64_t v3 = 99991;
      break;
    case 0x3E:
      uint64_t v3 = 99992;
      break;
    case 0x3F:
      uint64_t v3 = 99993;
      break;
    case 0x40:
      uint64_t v3 = -1101;
      break;
    case 0x41:
      uint64_t v3 = -1102;
      break;
    case 0x42:
      uint64_t v3 = -1103;
      break;
    case 0x43:
      uint64_t v3 = -1104;
      break;
    case 0x44:
      uint64_t v3 = -1110;
      break;
    case 0x45:
      uint64_t v3 = -1111;
      break;
    case 0x46:
      uint64_t v3 = -1112;
      break;
    case 0x47:
      uint64_t v3 = -1113;
      break;
    case 0x48:
      uint64_t v3 = -1114;
      break;
    case 0x49:
      uint64_t v3 = -1115;
      break;
    case 0x4A:
      uint64_t v3 = -1116;
      break;
    case 0x4B:
      uint64_t v3 = -1117;
      break;
    case 0x4C:
      uint64_t v3 = -1118;
      break;
    case 0x4D:
      uint64_t v3 = -1119;
      break;
    case 0x4E:
      uint64_t v3 = -1201;
      break;
    case 0x4F:
      uint64_t v3 = -1202;
      break;
    case 0x50:
      uint64_t v3 = -1203;
      break;
    case 0x51:
      uint64_t v3 = -1204;
      break;
    case 0x52:
      uint64_t v3 = -1402;
      break;
    case 0x53:
      uint64_t v3 = -1403;
      break;
    case 0x54:
      uint64_t v3 = -1404;
      break;
    case 0x55:
      uint64_t v3 = -1301;
      break;
    case 0x56:
      uint64_t v3 = -1302;
      break;
    case 0x57:
      uint64_t v3 = -1303;
      break;
    case 0x58:
      uint64_t v3 = -1304;
      break;
    case 0x59:
      uint64_t v3 = -1305;
      break;
    case 0x5A:
      uint64_t v3 = -1306;
      break;
    case 0x5B:
      uint64_t v3 = -1307;
      break;
    case 0x5C:
      uint64_t v3 = -1308;
      break;
    case 0x5D:
      uint64_t v3 = -1309;
      break;
    case 0x5E:
      uint64_t v3 = -1310;
      break;
    case 0x5F:
      uint64_t v3 = -1315;
      break;
    case 0x60:
      uint64_t v3 = -1316;
      break;
    case 0x61:
      uint64_t v3 = -1317;
      break;
    case 0x62:
      uint64_t v3 = -131600;
      break;
    case 0x63:
      uint64_t v3 = -2103;
      break;
    case 0x64:
      uint64_t v3 = -2104;
      break;
    case 0x65:
      uint64_t v3 = -2107;
      break;
    case 0x66:
      uint64_t v3 = -2110;
      break;
    case 0x67:
      uint64_t v3 = -2111;
      break;
    case 0x68:
      uint64_t v3 = -2112;
      break;
    case 0x69:
      uint64_t v3 = -2123;
      break;
    case 0x6A:
      uint64_t v3 = -2124;
      break;
    case 0x6B:
      uint64_t v3 = -2125;
      break;
    case 0x6C:
      uint64_t v3 = -2126;
      break;
    case 0x6D:
      uint64_t v3 = -2127;
      break;
    case 0x6E:
      uint64_t v3 = -3101;
      break;
    case 0x6F:
      uint64_t v3 = -3102;
      break;
    case 0x70:
      uint64_t v3 = -3103;
      break;
    case 0x71:
      uint64_t v3 = -3104;
      break;
    case 0x72:
      uint64_t v3 = -3105;
      break;
    case 0x73:
      uint64_t v3 = -3106;
      break;
    case 0x74:
      uint64_t v3 = -3107;
      break;
    case 0x75:
      uint64_t v3 = -3108;
      break;
    case 0x76:
      uint64_t v3 = -3109;
      break;
    case 0x77:
      uint64_t v3 = -3110;
      break;
    case 0x78:
      uint64_t v3 = -3111;
      break;
    case 0x79:
      uint64_t v3 = -3112;
      break;
    case 0x7A:
      uint64_t v3 = -3113;
      break;
    case 0x7B:
      uint64_t v3 = -3151;
      break;
    case 0x7C:
      uint64_t v3 = -3152;
      break;
    case 0x7D:
      uint64_t v3 = -3153;
      break;
    case 0x7E:
      uint64_t v3 = -3154;
      break;
    case 0x7F:
      uint64_t v3 = -3155;
      break;
    case 0x80:
      uint64_t v3 = -3156;
      break;
    case 0x81:
      uint64_t v3 = -3157;
      break;
    case 0x82:
      uint64_t v3 = -3158;
      break;
    case 0x83:
      uint64_t v3 = -3159;
      break;
    case 0x84:
      uint64_t v3 = -3161;
      break;
    case 0x85:
      uint64_t v3 = -3162;
      break;
    case 0x86:
      uint64_t v3 = -3163;
      break;
    case 0x87:
      uint64_t v3 = -3164;
      break;
    case 0x88:
      uint64_t v3 = -3165;
      break;
    case 0x89:
      uint64_t v3 = -3166;
      break;
    case 0x8A:
      uint64_t v3 = -3167;
      break;
    case 0x8B:
      uint64_t v3 = -3168;
      break;
    case 0x8C:
      uint64_t v3 = -3169;
      break;
    case 0x8D:
      uint64_t v3 = -3170;
      break;
    case 0x8E:
      uint64_t v3 = -3171;
      break;
    case 0x8F:
      uint64_t v3 = -3172;
      break;
    case 0x90:
      uint64_t v3 = -3173;
      break;
    case 0x91:
      uint64_t v3 = -3174;
      break;
    case 0x92:
      uint64_t v3 = -3175;
      break;
    case 0x93:
      uint64_t v3 = -3176;
      break;
    case 0x94:
      uint64_t v3 = -3177;
      break;
    case 0x95:
      uint64_t v3 = -3178;
      break;
    case 0x96:
      uint64_t v3 = -3179;
      break;
    case 0x97:
      uint64_t v3 = -3180;
      break;
    case 0x98:
      uint64_t v3 = -3181;
      break;
    case 0x99:
      uint64_t v3 = -3182;
      break;
    case 0x9A:
      uint64_t v3 = -3183;
      break;
    case 0x9B:
      uint64_t v3 = -3184;
      break;
    case 0x9C:
      uint64_t v3 = -3185;
      break;
    case 0x9D:
      uint64_t v3 = -3186;
      break;
    case 0x9E:
      uint64_t v3 = -3187;
      break;
    case 0x9F:
      uint64_t v3 = -3188;
      break;
    case 0xA0:
      uint64_t v3 = -3189;
      break;
    case 0xA1:
      uint64_t v3 = -3300;
      break;
    case 0xA2:
      uint64_t v3 = -5108;
      break;
    case 0xA3:
      uint64_t v3 = -6009;
      break;
    case 0xA4:
      uint64_t v3 = -6010;
      break;
    case 0xA5:
      uint64_t v3 = -6102;
      break;
    case 0xA6:
      uint64_t v3 = -6103;
      break;
    case 0xA7:
      uint64_t v3 = -6104;
      break;
    case 0xA8:
      uint64_t v3 = -6105;
      break;
    case 0xA9:
      uint64_t v3 = -8001;
      break;
    case 0xAA:
      uint64_t v3 = -8301;
      break;
    case 0xAB:
      uint64_t v3 = -8304;
      break;
    case 0xAC:
      uint64_t v3 = -8400;
      break;
    case 0xAD:
      uint64_t v3 = -8401;
      break;
    case 0xAE:
      uint64_t v3 = -8403;
      break;
    case 0xAF:
      uint64_t v3 = -8404;
      break;
    case 0xB0:
      uint64_t v3 = -8428;
      break;
    case 0xB1:
      uint64_t v3 = -8429;
      break;
    case 0xB2:
      uint64_t v3 = -8433;
      break;
    case 0xB3:
      uint64_t v3 = -8434;
      break;
    case 0xB4:
      uint64_t v3 = -8500;
      break;
    case 0xB5:
      uint64_t v3 = -8501;
      break;
    case 0xB6:
      uint64_t v3 = -8502;
      break;
    case 0xB7:
      uint64_t v3 = -8503;
      break;
    case 0xB8:
      uint64_t v3 = -8504;
      break;
    case 0xB9:
      uint64_t v3 = -22200;
      break;
    case 0xBA:
      uint64_t v3 = -22201;
      break;
    case 0xBB:
      uint64_t v3 = -22202;
      break;
    case 0xBC:
      uint64_t v3 = -22203;
      break;
    case 0xBD:
      uint64_t v3 = -22204;
      break;
    case 0xBE:
      uint64_t v3 = -22205;
      break;
    case 0xBF:
      uint64_t v3 = -22206;
      break;
    case 0xC0:
      uint64_t v3 = -22207;
      break;
    case 0xC1:
      uint64_t v3 = -22208;
      break;
    case 0xC2:
      uint64_t v3 = -72200;
      break;
    case 0xC3:
      uint64_t v3 = -72201;
      break;
    case 0xC4:
      uint64_t v3 = -72202;
      break;
    case 0xC5:
      uint64_t v3 = -72203;
      break;
    case 0xC6:
      uint64_t v3 = -72204;
      break;
    case 0xC7:
      uint64_t v3 = -72205;
      break;
    case 0xC8:
      uint64_t v3 = -72206;
      break;
    case 0xC9:
      uint64_t v3 = -72207;
      break;
    case 0xCA:
      uint64_t v3 = -72208;
      break;
    case 0xCB:
      uint64_t v3 = -72209;
      break;
    case 0xCC:
      uint64_t v3 = -72210;
      break;
    case 0xCD:
      uint64_t v3 = -72211;
      break;
    case 0xCE:
      uint64_t v3 = -72780;
      break;
    case 0xCF:
      uint64_t v3 = -72781;
      break;
    case 0xD0:
      uint64_t v3 = -72782;
      break;
    default:
      return v2 == v3;
  }
  return v2 == v3;
}

uint64_t sub_214B83B94()
{
  return sub_214D1AD48();
}

uint64_t sub_214B8464C()
{
  return sub_214D1AD18();
}

uint64_t sub_214B850E8()
{
  return sub_214D1AD48();
}

CoreODIEssentials::ODIErrorCode_optional sub_214B85B9C(Swift::Int *a1)
{
  return ODIErrorCode.init(rawValue:)(*a1);
}

void sub_214B85BA4(uint64_t *a1@<X8>)
{
  uint64_t v2 = -1;
  switch(*v1)
  {
    case 1:
      *a1 = -2;
      break;
    case 2:
      *a1 = -3;
      break;
    case 3:
      *a1 = -4;
      break;
    case 4:
      *a1 = -5;
      break;
    case 5:
      *a1 = -6;
      break;
    case 6:
      *a1 = -7;
      break;
    case 7:
      *a1 = -8;
      break;
    case 8:
      *a1 = -9;
      break;
    case 9:
      *a1 = -10;
      break;
    case 0xA:
      *a1 = -11;
      break;
    case 0xB:
      *a1 = -12;
      break;
    case 0xC:
      *a1 = -13;
      break;
    case 0xD:
      *a1 = -14;
      break;
    case 0xE:
      *a1 = -15;
      break;
    case 0xF:
      *a1 = -16;
      break;
    case 0x10:
      *a1 = -17;
      break;
    case 0x11:
      *a1 = -18;
      break;
    case 0x12:
      *a1 = -19;
      break;
    case 0x13:
      *a1 = -20;
      break;
    case 0x14:
      *a1 = -21;
      break;
    case 0x15:
      *a1 = -22;
      break;
    case 0x16:
      *a1 = -28;
      break;
    case 0x17:
      *a1 = -29;
      break;
    case 0x18:
      *a1 = 200;
      break;
    case 0x19:
      *a1 = 20000;
      break;
    case 0x1A:
      *a1 = 20001;
      break;
    case 0x1B:
      *a1 = 20100;
      break;
    case 0x1C:
      *a1 = 40000;
      break;
    case 0x1D:
      *a1 = 40010;
      break;
    case 0x1E:
      *a1 = 40011;
      break;
    case 0x1F:
      *a1 = 40012;
      break;
    case 0x20:
      *a1 = 40013;
      break;
    case 0x21:
      *a1 = 40014;
      break;
    case 0x22:
      *a1 = 40015;
      break;
    case 0x23:
      *a1 = 40020;
      break;
    case 0x24:
      *a1 = 40021;
      break;
    case 0x25:
      *a1 = 40022;
      break;
    case 0x26:
      *a1 = 40023;
      break;
    case 0x27:
      *a1 = 40024;
      break;
    case 0x28:
      *a1 = 40025;
      break;
    case 0x29:
      *a1 = 40026;
      break;
    case 0x2A:
      *a1 = 40027;
      break;
    case 0x2B:
      *a1 = 40028;
      break;
    case 0x2C:
      *a1 = 40029;
      break;
    case 0x2D:
      *a1 = 40030;
      break;
    case 0x2E:
      *a1 = 40101;
      break;
    case 0x2F:
      *a1 = 40102;
      break;
    case 0x30:
      *a1 = 40200;
      break;
    case 0x31:
      *a1 = 40201;
      break;
    case 0x32:
      *a1 = 40205;
      break;
    case 0x33:
      *a1 = 40401;
      break;
    case 0x34:
      *a1 = 40402;
      break;
    case 0x35:
      *a1 = 40403;
      break;
    case 0x36:
      *a1 = 40404;
      break;
    case 0x37:
      *a1 = 40500;
      break;
    case 0x38:
      *a1 = 40600;
      break;
    case 0x39:
      *a1 = 40601;
      break;
    case 0x3A:
      *a1 = 50000;
      break;
    case 0x3B:
      *a1 = 50001;
      break;
    case 0x3C:
      *a1 = 50002;
      break;
    case 0x3D:
      *a1 = 99991;
      break;
    case 0x3E:
      *a1 = 99992;
      break;
    case 0x3F:
      *a1 = 99993;
      break;
    case 0x40:
      *a1 = -1101;
      break;
    case 0x41:
      *a1 = -1102;
      break;
    case 0x42:
      *a1 = -1103;
      break;
    case 0x43:
      *a1 = -1104;
      break;
    case 0x44:
      *a1 = -1110;
      break;
    case 0x45:
      *a1 = -1111;
      break;
    case 0x46:
      *a1 = -1112;
      break;
    case 0x47:
      *a1 = -1113;
      break;
    case 0x48:
      *a1 = -1114;
      break;
    case 0x49:
      *a1 = -1115;
      break;
    case 0x4A:
      *a1 = -1116;
      break;
    case 0x4B:
      *a1 = -1117;
      break;
    case 0x4C:
      *a1 = -1118;
      break;
    case 0x4D:
      *a1 = -1119;
      break;
    case 0x4E:
      *a1 = -1201;
      break;
    case 0x4F:
      *a1 = -1202;
      break;
    case 0x50:
      *a1 = -1203;
      break;
    case 0x51:
      *a1 = -1204;
      break;
    case 0x52:
      *a1 = -1402;
      break;
    case 0x53:
      *a1 = -1403;
      break;
    case 0x54:
      *a1 = -1404;
      break;
    case 0x55:
      *a1 = -1301;
      break;
    case 0x56:
      *a1 = -1302;
      break;
    case 0x57:
      *a1 = -1303;
      break;
    case 0x58:
      *a1 = -1304;
      break;
    case 0x59:
      *a1 = -1305;
      break;
    case 0x5A:
      *a1 = -1306;
      break;
    case 0x5B:
      *a1 = -1307;
      break;
    case 0x5C:
      *a1 = -1308;
      break;
    case 0x5D:
      *a1 = -1309;
      break;
    case 0x5E:
      *a1 = -1310;
      break;
    case 0x5F:
      *a1 = -1315;
      break;
    case 0x60:
      *a1 = -1316;
      break;
    case 0x61:
      *a1 = -1317;
      break;
    case 0x62:
      *a1 = -131600;
      break;
    case 0x63:
      *a1 = -2103;
      break;
    case 0x64:
      *a1 = -2104;
      break;
    case 0x65:
      *a1 = -2107;
      break;
    case 0x66:
      *a1 = -2110;
      break;
    case 0x67:
      *a1 = -2111;
      break;
    case 0x68:
      *a1 = -2112;
      break;
    case 0x69:
      *a1 = -2123;
      break;
    case 0x6A:
      *a1 = -2124;
      break;
    case 0x6B:
      *a1 = -2125;
      break;
    case 0x6C:
      *a1 = -2126;
      break;
    case 0x6D:
      *a1 = -2127;
      break;
    case 0x6E:
      *a1 = -3101;
      break;
    case 0x6F:
      *a1 = -3102;
      break;
    case 0x70:
      *a1 = -3103;
      break;
    case 0x71:
      *a1 = -3104;
      break;
    case 0x72:
      *a1 = -3105;
      break;
    case 0x73:
      *a1 = -3106;
      break;
    case 0x74:
      *a1 = -3107;
      break;
    case 0x75:
      *a1 = -3108;
      break;
    case 0x76:
      *a1 = -3109;
      break;
    case 0x77:
      *a1 = -3110;
      break;
    case 0x78:
      *a1 = -3111;
      break;
    case 0x79:
      *a1 = -3112;
      break;
    case 0x7A:
      *a1 = -3113;
      break;
    case 0x7B:
      *a1 = -3151;
      break;
    case 0x7C:
      *a1 = -3152;
      break;
    case 0x7D:
      *a1 = -3153;
      break;
    case 0x7E:
      *a1 = -3154;
      break;
    case 0x7F:
      *a1 = -3155;
      break;
    case 0x80:
      *a1 = -3156;
      break;
    case 0x81:
      *a1 = -3157;
      break;
    case 0x82:
      *a1 = -3158;
      break;
    case 0x83:
      *a1 = -3159;
      break;
    case 0x84:
      *a1 = -3161;
      break;
    case 0x85:
      *a1 = -3162;
      break;
    case 0x86:
      *a1 = -3163;
      break;
    case 0x87:
      *a1 = -3164;
      break;
    case 0x88:
      *a1 = -3165;
      break;
    case 0x89:
      *a1 = -3166;
      break;
    case 0x8A:
      *a1 = -3167;
      break;
    case 0x8B:
      *a1 = -3168;
      break;
    case 0x8C:
      *a1 = -3169;
      break;
    case 0x8D:
      *a1 = -3170;
      break;
    case 0x8E:
      *a1 = -3171;
      break;
    case 0x8F:
      *a1 = -3172;
      break;
    case 0x90:
      *a1 = -3173;
      break;
    case 0x91:
      *a1 = -3174;
      break;
    case 0x92:
      *a1 = -3175;
      break;
    case 0x93:
      *a1 = -3176;
      break;
    case 0x94:
      *a1 = -3177;
      break;
    case 0x95:
      *a1 = -3178;
      break;
    case 0x96:
      *a1 = -3179;
      break;
    case 0x97:
      *a1 = -3180;
      break;
    case 0x98:
      *a1 = -3181;
      break;
    case 0x99:
      *a1 = -3182;
      break;
    case 0x9A:
      *a1 = -3183;
      break;
    case 0x9B:
      *a1 = -3184;
      break;
    case 0x9C:
      *a1 = -3185;
      break;
    case 0x9D:
      *a1 = -3186;
      break;
    case 0x9E:
      *a1 = -3187;
      break;
    case 0x9F:
      *a1 = -3188;
      break;
    case 0xA0:
      *a1 = -3189;
      break;
    case 0xA1:
      *a1 = -3300;
      break;
    case 0xA2:
      *a1 = -5108;
      break;
    case 0xA3:
      *a1 = -6009;
      break;
    case 0xA4:
      *a1 = -6010;
      break;
    case 0xA5:
      *a1 = -6102;
      break;
    case 0xA6:
      *a1 = -6103;
      break;
    case 0xA7:
      *a1 = -6104;
      break;
    case 0xA8:
      *a1 = -6105;
      break;
    case 0xA9:
      *a1 = -8001;
      break;
    case 0xAA:
      *a1 = -8301;
      break;
    case 0xAB:
      *a1 = -8304;
      break;
    case 0xAC:
      *a1 = -8400;
      break;
    case 0xAD:
      *a1 = -8401;
      break;
    case 0xAE:
      *a1 = -8403;
      break;
    case 0xAF:
      *a1 = -8404;
      break;
    case 0xB0:
      *a1 = -8428;
      break;
    case 0xB1:
      *a1 = -8429;
      break;
    case 0xB2:
      *a1 = -8433;
      break;
    case 0xB3:
      *a1 = -8434;
      break;
    case 0xB4:
      *a1 = -8500;
      break;
    case 0xB5:
      *a1 = -8501;
      break;
    case 0xB6:
      *a1 = -8502;
      break;
    case 0xB7:
      *a1 = -8503;
      break;
    case 0xB8:
      *a1 = -8504;
      break;
    case 0xB9:
      *a1 = -22200;
      break;
    case 0xBA:
      *a1 = -22201;
      break;
    case 0xBB:
      *a1 = -22202;
      break;
    case 0xBC:
      *a1 = -22203;
      break;
    case 0xBD:
      *a1 = -22204;
      break;
    case 0xBE:
      *a1 = -22205;
      break;
    case 0xBF:
      *a1 = -22206;
      break;
    case 0xC0:
      *a1 = -22207;
      break;
    case 0xC1:
      *a1 = -22208;
      break;
    case 0xC2:
      *a1 = -72200;
      break;
    case 0xC3:
      *a1 = -72201;
      break;
    case 0xC4:
      *a1 = -72202;
      break;
    case 0xC5:
      *a1 = -72203;
      break;
    case 0xC6:
      *a1 = -72204;
      break;
    case 0xC7:
      *a1 = -72205;
      break;
    case 0xC8:
      *a1 = -72206;
      break;
    case 0xC9:
      *a1 = -72207;
      break;
    case 0xCA:
      *a1 = -72208;
      break;
    case 0xCB:
      *a1 = -72209;
      break;
    case 0xCC:
      *a1 = -72210;
      break;
    case 0xCD:
      *a1 = -72211;
      break;
    case 0xCE:
      *a1 = -72780;
      break;
    case 0xCF:
      *a1 = -72781;
      break;
    case 0xD0:
      uint64_t v2 = -72782;
      goto LABEL_210;
    default:
LABEL_210:
      *a1 = v2;
      break;
  }
}

uint64_t sub_214B8695C()
{
  return sub_214D1A238();
}

uint64_t sub_214B869BC()
{
  return sub_214D1A1E8();
}

CoreODIEssentials::ODIErrorPropertyKey_optional __swiftcall ODIErrorPropertyKey.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t ODIErrorPropertyKey.rawValue.getter()
{
  unint64_t result = 0x776F6C666B726F77;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x72656469766F7270;
      break;
    case 2:
      unint64_t result = 0x5255726576726573;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x4974736575716572;
      break;
    case 6:
      unint64_t result = 0x61737265766E6F63;
      break;
    case 8:
      unint64_t result = 0x6552656369766564;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0x6761735574726563;
      break;
    case 0xB:
      unint64_t result = 0x6573616261746164;
      break;
    case 0xC:
      unint64_t result = 0x74737973656C6966;
      break;
    case 0xD:
      unint64_t result = 0x69796C7265646E75;
      break;
    case 0xE:
      unint64_t result = 0x746E756F43797274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214B86C7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1C844(*a1, *a2);
}

uint64_t sub_214B86C88()
{
  return sub_214D1AD48();
}

uint64_t sub_214B86CF0()
{
  ODIErrorPropertyKey.rawValue.getter();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214B86D54()
{
  return sub_214D1AD48();
}

CoreODIEssentials::ODIErrorPropertyKey_optional sub_214B86DB8(Swift::String *a1)
{
  return ODIErrorPropertyKey.init(rawValue:)(*a1);
}

unint64_t sub_214B86DC4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODIErrorPropertyKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_214B86DEC()
{
  unint64_t v0 = self;
  uint64_t v1 = (void *)sub_214D1A028();
  v3[4] = sub_214B86ECC;
  v3[5] = 0;
  v3[0] = MEMORY[0x263EF8330];
  v3[1] = 1107296256;
  v3[2] = sub_214B5EAA8;
  v3[3] = &block_descriptor_8;
  uint64_t v2 = _Block_copy(v3);
  objc_msgSend(v0, sel_setUserInfoValueProviderForDomain_provider_, v1, v2);
  _Block_release(v2);
}

uint64_t sub_214B86ECC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (sub_214D1A038() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v10 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_13:
    uint64_t result = sub_214B91FB0(a1);
    goto LABEL_14;
  }
  if (sub_214D1A038() == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
    }
  }
  uint64_t result = sub_214B92794(a1);
LABEL_14:
  *(void *)(a4 + 24) = MEMORY[0x263F8D310];
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v15;
  return result;
}

void *sub_214B86FD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_214B86FEC(a1, a2, a3, a4, &qword_26ACE3AB8);
}

void *sub_214B86FEC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      _OWORD v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      char v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
          memmove(v13, a4 + 4, 56 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_214B91704(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_214B87124(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_214B87EE8(a1, a2, a3, a4, (uint64_t *)&unk_26ACE4480);
}

uint64_t sub_214B87130(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_214B87800(a1, a2, a3, a4, &qword_26784CFB0, &qword_26784CD78);
}

void *sub_214B87144(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4438);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B91B78(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_214B87254(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4430);
  uint64_t v10 = *(void *)(sub_214D197D8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_214D1A918();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_214D197D8() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_214B91C6C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_214B874BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4460);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B91DC4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_214B875CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD70);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B91EB8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_214B876DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B9347C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_214B877EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_214B87800(a1, a2, a3, a4, &qword_26784CF78, &qword_26ACE4330);
}

uint64_t sub_214B87800(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_214D1A918();
    __break(1u);
    return result;
  }
  _OWORD v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_214B93668(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_214B87A6C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_214B93570(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_214B87B98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_214B87800(a1, a2, a3, a4, &qword_26784CFF0, &qword_26784DBB0);
}

void *sub_214B87BAC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4478);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B937C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_214B87CBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF60);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B938B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_214B87DCC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_214B93B7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_214B87EDC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_214B87EE8(a1, a2, a3, a4, &qword_26784CFC0);
}

char *sub_214B87EE8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_214B93C88(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_214B87FE0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_214B87EE8(a1, a2, a3, a4, &qword_26784CFD0);
}

uint64_t sub_214B87FEC(uint64_t a1, uint64_t a2)
{
  return sub_214B88294(a1, a2, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
}

uint64_t sub_214B88018(uint64_t a1)
{
  return sub_214B88070(a1, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
}

uint64_t sub_214B88044(uint64_t a1)
{
  return sub_214B88070(a1, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B88A6C);
}

uint64_t sub_214B88070(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_214D1AD08();
  a2(v5);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_214D1AD48();
  return a3(a1, v6);
}

unint64_t sub_214B88110(uint64_t a1)
{
  uint64_t v2 = sub_214D1A6F8();
  return sub_214B89234(a1, v2);
}

unint64_t sub_214B88154(uint64_t a1)
{
  uint64_t v2 = sub_214D1A598();
  return sub_214B8A13C(a1, v2, (unint64_t *)&qword_26ACE3A10);
}

unint64_t sub_214B881A4(char a1)
{
  char v1 = a1 & 1;
  sub_214D1AD08();
  sub_214D1AD18();
  uint64_t v2 = sub_214D1AD48();
  return sub_214B892FC(v1, v2);
}

unint64_t sub_214B88214(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_214D1AD08();
  sub_214BA79EC((uint64_t)&v5, v2);
  uint64_t v3 = sub_214D1AD48();
  return sub_214B893B8((uint64_t)__src, v3);
}

uint64_t sub_214B88294(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_214D1AD08();
  a3(v10, a1, a2);
  uint64_t v7 = sub_214D1AD48();
  return a4(a1, a2, v7);
}

unint64_t sub_214B88328(uint64_t a1)
{
  uint64_t v2 = sub_214D1A598();
  return sub_214B8A13C(a1, v2, &qword_26784CD00);
}

unint64_t sub_214B88378(unsigned __int8 a1)
{
  sub_214D1AD08();
  sub_214D1AD18();
  uint64_t v2 = sub_214D1AD48();
  return sub_214B8A250(a1, v2);
}

unint64_t sub_214B883E4(uint64_t a1)
{
  uint64_t v2 = sub_214D1ACF8();
  return sub_214B8A2F0(a1, v2);
}

unint64_t sub_214B88428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    int64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_214D1ABC8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_214D1ABC8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_214B8850C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA00000000004449;
      unint64_t v8 = 0x776F6C666B726F77;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x72656469766F7270;
          break;
        case 2:
          unint64_t v7 = 0xE90000000000004CLL;
          unint64_t v8 = 0x5255726576726573;
          break;
        case 3:
          unint64_t v7 = 0x8000000214D2D100;
          goto LABEL_11;
        case 4:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x8000000214D2D120;
          break;
        case 5:
          unint64_t v8 = 0x4974736575716572;
          unint64_t v7 = 0xE900000000000044;
          break;
        case 6:
          unint64_t v8 = 0x61737265766E6F63;
          unint64_t v7 = 0xEE0044496E6F6974;
          break;
        case 7:
          unint64_t v7 = 0x8000000214D2D150;
LABEL_11:
          unint64_t v8 = 0xD000000000000010;
          break;
        case 8:
          unint64_t v8 = 0x6552656369766564;
          unint64_t v7 = 0xEC0000006E6F6967;
          break;
        case 9:
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x8000000214D2D1D0;
          break;
        case 0xA:
          unint64_t v7 = 0xE900000000000065;
          unint64_t v8 = 0x6761735574726563;
          break;
        case 0xB:
          unint64_t v8 = 0x6573616261746164;
          unint64_t v7 = 0xEE006E6D756C6F43;
          break;
        case 0xC:
          unint64_t v8 = 0x74737973656C6966;
          unint64_t v7 = 0xEE00687461506D65;
          break;
        case 0xD:
          unint64_t v8 = 0x69796C7265646E75;
          unint64_t v7 = 0xEF6F6E727245676ELL;
          break;
        case 0xE:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x746E756F43797274;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xEA00000000004449;
      switch(v6)
      {
        case 1:
          if (v8 == 0x72656469766F7270) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xE90000000000004CLL;
          if (v8 != 0x5255726576726573) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v9 = 0x8000000214D2D100;
          goto LABEL_36;
        case 4:
          unint64_t v9 = 0x8000000214D2D120;
          if (v8 != 0xD000000000000013) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          unint64_t v9 = 0xE900000000000044;
          if (v8 != 0x4974736575716572) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 6:
          uint64_t v11 = 0x61737265766E6F63;
          uint64_t v12 = 0x44496E6F6974;
          goto LABEL_46;
        case 7:
          unint64_t v9 = 0x8000000214D2D150;
LABEL_36:
          if (v8 != 0xD000000000000010) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 8:
          unint64_t v9 = 0xEC0000006E6F6967;
          if (v8 != 0x6552656369766564) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 9:
          unint64_t v9 = 0x8000000214D2D1D0;
          if (v8 != 0xD000000000000012) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 10:
          unint64_t v9 = 0xE900000000000065;
          if (v8 != 0x6761735574726563) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 11:
          uint64_t v11 = 0x6573616261746164;
          uint64_t v12 = 0x6E6D756C6F43;
          goto LABEL_46;
        case 12:
          uint64_t v11 = 0x74737973656C6966;
          uint64_t v12 = 0x687461506D65;
LABEL_46:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          if (v8 != v11) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 13:
          unint64_t v9 = 0xEF6F6E727245676ELL;
          if (v8 != 0x69796C7265646E75) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 14:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x746E756F43797274) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
          if (v8 != 0x776F6C666B726F77) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v10 = sub_214D1ABC8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_214B88A6C(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xED00004449776F6CLL;
      unint64_t v8 = 0x666B726F576F6E69;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x69766F72506F6E69;
          unint64_t v7 = 0xED00004449726564;
          break;
        case 2:
          unint64_t v8 = 0x6C666B726F577073;
          unint64_t v7 = 0xEC0000004449776FLL;
          break;
        case 3:
          unint64_t v8 = 0x6469766F72507073;
          unint64_t v7 = 0xEC00000044497265;
          break;
        case 4:
          unint64_t v8 = 0x7475626972747461;
          unint64_t v7 = 0xEB00000000444965;
          break;
        case 5:
          unint64_t v9 = "daemonSessionState";
          goto LABEL_21;
        case 6:
          unint64_t v8 = 0x5255726576726573;
          unint64_t v7 = 0xE90000000000004CLL;
          break;
        case 7:
          unint64_t v8 = 0xD000000000000010;
          char v10 = "serverStatusCode";
          goto LABEL_17;
        case 8:
          unint64_t v8 = 0xD000000000000013;
          char v10 = "serverSubStatusCode";
          goto LABEL_17;
        case 9:
          unint64_t v8 = 0x4974736575716572;
          unint64_t v7 = 0xE900000000000044;
          break;
        case 0xA:
          unint64_t v8 = 0x61737265766E6F63;
          unint64_t v7 = 0xEE0044496E6F6974;
          break;
        case 0xB:
          unint64_t v8 = 0xD000000000000010;
          char v10 = "serverRetryAfter";
          goto LABEL_17;
        case 0xC:
          unint64_t v9 = "cloudContainerName";
          goto LABEL_21;
        case 0xD:
          unint64_t v8 = 0xD000000000000013;
          char v10 = "cloudContainerState";
LABEL_17:
          unint64_t v7 = (unint64_t)(v10 - 32) | 0x8000000000000000;
          break;
        case 0xE:
          unint64_t v8 = 0x63655264756F6C63;
          unint64_t v7 = 0xEF656E6F5A64726FLL;
          break;
        case 0xF:
          unint64_t v8 = 0x6552656369766564;
          unint64_t v7 = 0xEC0000006E6F6967;
          break;
        case 0x10:
          unint64_t v9 = "appleAccountStatus";
LABEL_21:
          unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 0x11:
          unint64_t v8 = 0x6761735574726563;
          unint64_t v7 = 0xE900000000000065;
          break;
        case 0x12:
          unint64_t v8 = 0x6573616261746164;
          unint64_t v7 = 0xEE006E6D756C6F43;
          break;
        case 0x13:
          unint64_t v8 = 0x74737973656C6966;
          unint64_t v7 = 0xEE00687461506D65;
          break;
        case 0x14:
          unint64_t v8 = 0x69796C7265646E75;
          unint64_t v7 = 0xEF6F6E727245676ELL;
          break;
        case 0x15:
          unint64_t v8 = 0x636E456567616D69;
          unint64_t v7 = 0xED0000676E69646FLL;
          break;
        case 0x16:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1701273968;
          break;
        case 0x17:
          unint64_t v8 = 0x636E75614C6F6E69;
          unint64_t v7 = 0xED00007265695468;
          break;
        case 0x18:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x746E756F43797274;
          break;
        default:
          break;
      }
      uint64_t v11 = 0x666B726F576F6E69;
      unint64_t v12 = 0xED00004449776F6CLL;
      switch(a1)
      {
        case 1:
          uint64_t v13 = 0x69766F72506F6E69;
          uint64_t v14 = 0x4449726564;
          goto LABEL_67;
        case 2:
          unint64_t v12 = 0xEC0000004449776FLL;
          if (v8 != 0x6C666B726F577073) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 3:
          uint64_t v15 = 0x6469766F72507073;
          uint64_t v16 = 1145664101;
          goto LABEL_53;
        case 4:
          unint64_t v12 = 0xEB00000000444965;
          if (v8 != 0x7475626972747461) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 5:
          size_t v17 = "daemonSessionState";
          goto LABEL_56;
        case 6:
          unint64_t v12 = 0xE90000000000004CLL;
          if (v8 != 0x5255726576726573) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 7:
          unint64_t v18 = 0xD000000000000010;
          uint64_t v19 = "serverStatusCode";
          goto LABEL_48;
        case 8:
          unint64_t v18 = 0xD000000000000013;
          uint64_t v19 = "serverSubStatusCode";
          goto LABEL_48;
        case 9:
          unint64_t v12 = 0xE900000000000044;
          if (v8 != 0x4974736575716572) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 10:
          uint64_t v20 = 0x61737265766E6F63;
          uint64_t v21 = 0x44496E6F6974;
          goto LABEL_62;
        case 11:
          unint64_t v18 = 0xD000000000000010;
          uint64_t v19 = "serverRetryAfter";
          goto LABEL_48;
        case 12:
          size_t v17 = "cloudContainerName";
          goto LABEL_56;
        case 13:
          unint64_t v18 = 0xD000000000000013;
          uint64_t v19 = "cloudContainerState";
LABEL_48:
          unint64_t v12 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          if (v8 != v18) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 14:
          unint64_t v12 = 0xEF656E6F5A64726FLL;
          if (v8 != 0x63655264756F6C63) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 15:
          uint64_t v15 = 0x6552656369766564;
          uint64_t v16 = 1852795239;
LABEL_53:
          unint64_t v12 = v16 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v8 != v15) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 16:
          size_t v17 = "appleAccountStatus";
LABEL_56:
          unint64_t v12 = (unint64_t)(v17 - 32) | 0x8000000000000000;
          if (v8 != 0xD000000000000012) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 17:
          unint64_t v12 = 0xE900000000000065;
          if (v8 != 0x6761735574726563) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 18:
          uint64_t v20 = 0x6573616261746164;
          uint64_t v21 = 0x6E6D756C6F43;
          goto LABEL_62;
        case 19:
          uint64_t v20 = 0x74737973656C6966;
          uint64_t v21 = 0x687461506D65;
LABEL_62:
          unint64_t v12 = v21 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          if (v8 != v20) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 20:
          unint64_t v12 = 0xEF6F6E727245676ELL;
          if (v8 != 0x69796C7265646E75) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 21:
          uint64_t v13 = 0x636E456567616D69;
          uint64_t v14 = 0x676E69646FLL;
LABEL_67:
          unint64_t v12 = v14 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (v8 != v13) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 22:
          unint64_t v12 = 0xE400000000000000;
          if (v8 != 1701273968) {
            goto LABEL_74;
          }
          goto LABEL_73;
        case 23:
          uint64_t v11 = 0x636E75614C6F6E69;
          unint64_t v12 = 0xED00007265695468;
          goto LABEL_72;
        case 24:
          unint64_t v12 = 0xE800000000000000;
          if (v8 != 0x746E756F43797274) {
            goto LABEL_74;
          }
          goto LABEL_73;
        default:
LABEL_72:
          if (v8 != v11) {
            goto LABEL_74;
          }
LABEL_73:
          if (v7 == v12)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_74:
          char v22 = sub_214D1ABC8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v6;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_214B89234(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_214B9157C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2166B01D0](v9, a1);
      sub_214B6ABE4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_214B892FC(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_214B893B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)MEMORY[0x270FA5388](a1, a2);
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v7 = v6 & ~v5;
  if ((*(void *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v3;
    uint64_t v9 = ~v5;
    uint64_t v10 = *v3;
    uint64_t v11 = &qword_26784D010;
    sub_214B6AC38((uint64_t)(v3 + 1), (uint64_t)v33, &qword_26784D010);
    uint64_t v12 = *((unsigned __int8 *)v8 + 1042);
    int v23 = *((unsigned __int8 *)v8 + 1043);
    uint64_t v24 = v2;
    do
    {
      memcpy(v32, (const void *)(*(void *)(v2 + 48) + 1048 * v7), 0x415uLL);
      if ((v12 ^ BYTE2(v32[130]))) {
        goto LABEL_6;
      }
      sub_214B6AC38((uint64_t)&v32[1], (uint64_t)v31, v11);
      if (sub_214B945BC(v31) == 1)
      {
        sub_214B6AC38((uint64_t)v33, (uint64_t)v29, v11);
        int v13 = sub_214B945BC(v29);
        sub_214B93E30((uint64_t)v32);
        if (v13 != 1) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_214B6AC38((uint64_t)&v32[1], (uint64_t)__src, v11);
        sub_214B6AC38((uint64_t)v33, (uint64_t)v29, v11);
        if (sub_214B945BC(v29) == 1)
        {
          memcpy(__dst, __src, 0x40AuLL);
          sub_214B954C4(&v32[1], sub_214B94214);
          sub_214B954C4(&v32[1], sub_214B94214);
          sub_214B93E30((uint64_t)v32);
          sub_214B952CC((uint64_t)__dst);
LABEL_4:
          sub_214B6AC38((uint64_t)&v32[1], (uint64_t)v29, v11);
          sub_214B6AC38((uint64_t)v33, (uint64_t)&v30, v11);
          sub_214B954C4(v33, sub_214B94214);
          sub_214B945E0(v29);
LABEL_5:
          sub_214B94EE8((uint64_t)v32);
          goto LABEL_6;
        }
        sub_214B6AC38((uint64_t)v33, (uint64_t)v26, v11);
        memcpy(v25, v26, 0x40AuLL);
        sub_214B954C4(&v32[1], sub_214B94214);
        sub_214B954C4(&v32[1], sub_214B94214);
        sub_214B93E30((uint64_t)v32);
        char v14 = _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(__src, (uint64_t)v25);
        memcpy(__dst, __src, 0x40AuLL);
        sub_214B952CC((uint64_t)__dst);
        sub_214B954C4(&v32[1], sub_214B94CC8);
        if ((v14 & 1) == 0) {
          goto LABEL_5;
        }
      }
      uint64_t v15 = v12;
      uint64_t v16 = v4;
      uint64_t v17 = v9;
      unint64_t v18 = v11;
      uint64_t v19 = v32[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v20 = sub_214BA7464(v19, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        sub_214B94EE8((uint64_t)v32);
LABEL_18:
        uint64_t v11 = v18;
        uint64_t v9 = v17;
        uint64_t v4 = v16;
        uint64_t v12 = v15;
        uint64_t v2 = v24;
        goto LABEL_6;
      }
      char v21 = Dictionary<>.isSubset(of:)(v10, v19);
      sub_214B94EE8((uint64_t)v32);
      if ((v21 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v11 = v18;
      uint64_t v9 = v17;
      uint64_t v4 = v16;
      uint64_t v12 = v15;
      uint64_t v2 = v24;
      if (((v23 ^ BYTE3(v32[130])) & 1) == 0) {
        return v7;
      }
LABEL_6:
      unint64_t v7 = (v7 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_214B8979C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v85 = HIDWORD(a1) - (int)a1;
    uint64_t v86 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v84 = v11;
    unint64_t v87 = a2 >> 62;
    uint64_t v82 = v3 + 64;
    uint64_t v83 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v78 = (a1 >> 32) - (int)a1;
    unint64_t v88 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_214B6A3A0(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_121;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v88)
      {
        case 1uLL:
          size_t v18 = v85;
          if (v84) {
            goto LABEL_122;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_123;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_118;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_118:
              sub_214B58A4C(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_124;
                }
                uint64_t v26 = sub_214D19888();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_214D198B8();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_126;
                  }
                  uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                sub_214D198A8();
                uint64_t v10 = v86;
                if (!v87)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_154;
                  }
                  int v50 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_214B58A4C(v14, v13);
                  uint64_t v4 = v82;
                  if (!v50) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_135;
                  }
                  swift_retain();
                  char v46 = (char *)sub_214D19888();
                  if (v46)
                  {
                    uint64_t v47 = sub_214D198B8();
                    if (__OFSUB__(v83, v47)) {
                      goto LABEL_142;
                    }
                    v46 += v83 - v47;
                  }
                  uint64_t v48 = sub_214D198A8();
                  size_t v49 = v78;
                  if (v48 < v78) {
                    size_t v49 = v48;
                  }
                  if (!v29) {
                    goto LABEL_147;
                  }
                  if (!v46) {
                    goto LABEL_148;
                  }
                  int v50 = memcmp(v29, v46, v49);
                  sub_214B58A4C(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v68 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v69 = sub_214D19888();
                if (v69)
                {
                  uint64_t v70 = v69;
                  uint64_t v71 = sub_214D198B8();
                  if (__OFSUB__(v68, v71)) {
                    goto LABEL_141;
                  }
                  id v72 = (const void *)(v70 + v68 - v71);
                }
                else
                {
                  id v72 = 0;
                }
                if (__OFSUB__(v77, v68)) {
                  goto LABEL_136;
                }
                uint64_t v73 = sub_214D198A8();
                if (v73 >= v77 - v68) {
                  size_t v74 = v77 - v68;
                }
                else {
                  size_t v74 = v73;
                }
                if (!v29) {
                  goto LABEL_155;
                }
                unint64_t v8 = a2;
                if (!v72) {
                  goto LABEL_156;
                }
                int v45 = memcmp(v29, v72, v74);
LABEL_115:
                swift_release();
                swift_release();
                sub_214B58A4C(v14, v13);
                uint64_t v4 = v82;
                uint64_t v10 = v86;
                if (!v45) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_214D19888();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_214D198B8();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_125;
                  }
                  uint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v34 = 0;
                }
                sub_214D198A8();
                if (v87)
                {
                  if (v87 == 1)
                  {
                    if (v81 < v83) {
                      goto LABEL_129;
                    }
                    swift_retain();
                    unint64_t v41 = (char *)sub_214D19888();
                    if (v41)
                    {
                      uint64_t v42 = sub_214D198B8();
                      if (__OFSUB__(v83, v42)) {
                        goto LABEL_140;
                      }
                      v41 += v83 - v42;
                    }
                    uint64_t v43 = sub_214D198A8();
                    size_t v44 = v78;
                    if (v43 < v78) {
                      size_t v44 = v43;
                    }
                    if (!v34) {
                      goto LABEL_145;
                    }
                    if (!v41) {
                      goto LABEL_146;
                    }
                    int v45 = memcmp(v34, v41, v44);
                    sub_214B58A4C(a1, v8);
                  }
                  else
                  {
                    uint64_t v62 = *(void *)(a1 + 16);
                    uint64_t v76 = *(void *)(a1 + 24);
                    swift_retain();
                    swift_retain();
                    long long v63 = (char *)sub_214D19888();
                    if (v63)
                    {
                      uint64_t v64 = sub_214D198B8();
                      if (__OFSUB__(v62, v64)) {
                        goto LABEL_139;
                      }
                      v63 += v62 - v64;
                    }
                    BOOL v21 = __OFSUB__(v76, v62);
                    int64_t v65 = v76 - v62;
                    if (v21) {
                      goto LABEL_134;
                    }
                    uint64_t v66 = sub_214D198A8();
                    if (v66 >= v65) {
                      size_t v67 = v65;
                    }
                    else {
                      size_t v67 = v66;
                    }
                    if (!v34) {
                      goto LABEL_152;
                    }
                    unint64_t v8 = a2;
                    if (!v63) {
                      goto LABEL_153;
                    }
                    int v45 = memcmp(v34, v63, v67);
                    swift_release();
                    swift_release();
                  }
                }
                else
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v34) {
                    goto LABEL_151;
                  }
                  int v45 = memcmp(v34, __s1, __n);
                }
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v87) {
                  goto LABEL_46;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_128;
                  }
                  swift_retain();
                  uint64_t v35 = sub_214D19888();
                  if (!v35) {
                    goto LABEL_144;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_214D198B8();
                  uint64_t v25 = v83 - v36;
                  if (__OFSUB__(v83, v36)) {
                    goto LABEL_133;
                  }
LABEL_41:
                  uint64_t v37 = sub_214D198A8();
                  if (v37 >= v78) {
                    size_t v38 = v78;
                  }
                  else {
                    size_t v38 = v37;
                  }
                  int v39 = memcmp(__s1, (const void *)(v23 + v25), v38);
                  sub_214B58A4C(a1, v8);
                  sub_214B58A4C(v14, v13);
                  uint64_t v10 = v86;
                  if (!v39) {
                    return v6;
                  }
                }
                else
                {
                  uint64_t v57 = *(void *)(a1 + 16);
                  uint64_t v58 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  char v53 = (char *)sub_214D19888();
                  if (v53)
                  {
                    uint64_t v59 = sub_214D198B8();
                    if (__OFSUB__(v57, v59)) {
                      goto LABEL_138;
                    }
                    v53 += v57 - v59;
                  }
                  BOOL v21 = __OFSUB__(v58, v57);
                  int64_t v55 = v58 - v57;
                  if (v21) {
                    goto LABEL_131;
                  }
                  uint64_t v56 = sub_214D198A8();
                  if (!v53) {
                    goto LABEL_150;
                  }
LABEL_83:
                  if (v56 >= v55) {
                    size_t v60 = v55;
                  }
                  else {
                    size_t v60 = v56;
                  }
                  int v61 = memcmp(__s1, v53, v60);
                  swift_release();
                  swift_release();
                  sub_214B58A4C(v14, v13);
                  unint64_t v8 = a2;
                  uint64_t v10 = v86;
                  if (!v61) {
                    return v6;
                  }
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v87)
                {
LABEL_46:
                  __int16 __s2 = a1;
                  char v91 = BYTE2(a1);
                  char v92 = BYTE3(a1);
                  char v93 = v80;
                  char v94 = BYTE5(a1);
                  char v95 = BYTE6(a1);
                  char v96 = HIBYTE(a1);
                  __int16 v97 = v8;
                  char v98 = BYTE2(v8);
                  char v99 = BYTE3(v8);
                  char v100 = BYTE4(v8);
                  char v101 = BYTE5(v8);
                  int v40 = memcmp(__s1, &__s2, __n);
                  sub_214B58A4C(v14, v13);
                  if (!v40) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_127;
                  }
                  swift_retain();
                  uint64_t v22 = sub_214D19888();
                  if (!v22)
                  {
                    sub_214D198A8();
                    __break(1u);
LABEL_144:
                    sub_214D198A8();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
                    JUMPOUT(0x214B8A10CLL);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_214D198B8();
                  uint64_t v25 = v83 - v24;
                  if (__OFSUB__(v83, v24)) {
                    goto LABEL_132;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                char v53 = (char *)sub_214D19888();
                if (v53)
                {
                  uint64_t v54 = sub_214D198B8();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_137;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_130;
                }
                uint64_t v56 = sub_214D198A8();
                if (!v53) {
                  goto LABEL_149;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_214B58A4C(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_214B8A13C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_214B6A264(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_214D1A5A8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_214D1A5A8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_214B8A250(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_214B8A2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_214B8A38C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D020);
  char v37 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v35;
        if ((v37 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v36 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v17 == v31;
        if (v17 == v31) {
          unint64_t v17 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8A680(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF38);
  char v42 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v41 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    int64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 40 * v20;
    if (v42)
    {
      long long v29 = *(_OWORD *)v28;
      long long v30 = *(_OWORD *)(v28 + 16);
      uint64_t v45 = *(void *)(v28 + 32);
      long long v43 = v29;
      long long v44 = v30;
    }
    else
    {
      sub_214B9157C(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *uint64_t v15 = v27;
    v15[1] = v26;
    uint64_t v16 = *(void *)(v7 + 56) + 40 * v14;
    long long v17 = v43;
    long long v18 = v44;
    *(void *)(v16 + 32) = v45;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8A9B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43A8);
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  unint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    uint64_t v3 = v33;
    uint64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      long long v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_214B5EC20(v30, v35);
      }
      else {
        sub_214B5EC30((uint64_t)v30, (uint64_t)v35);
      }
      sub_214D1AD08();
      sub_214D1A0D8();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_214D1AD48();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_214B5EC20(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x214B8AEACLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8AEE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D0);
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_214B5EC20(v24, v35);
      }
      else
      {
        sub_214B5EC30((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_214D1AD08();
      sub_214D1A0D8();
      uint64_t result = sub_214D1AD48();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_214B5EC20(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8B1E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43A0);
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  uint64_t v10 = -1;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v13 = v6 + 64;
  swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_30;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_42;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = v9[v23];
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v12) {
        break;
      }
      unint64_t v24 = v9[v14];
      if (!v24)
      {
        int64_t v25 = v23 + 2;
        if (v25 >= v12) {
          break;
        }
        unint64_t v24 = v9[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v12) {
              goto LABEL_34;
            }
            unint64_t v24 = v9[v14];
            ++v25;
            if (v24) {
              goto LABEL_29;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_29:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_30:
    char v30 = *(unsigned char *)(*(void *)(v5 + 48) + v22);
    uint64_t v31 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v22);
    if (a2) {
      sub_214B5EC20(v31, v34);
    }
    else {
      sub_214B5EC30((uint64_t)v31, (uint64_t)v34);
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_214D1AD48();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    unint64_t v19 = (-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6));
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19)) | v17 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v26 = 0;
    unint64_t v27 = (unint64_t)(63 - v16) >> 6;
    do
    {
      if (++v18 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        JUMPOUT(0x214B8B7E0);
      }
      BOOL v28 = v18 == v27;
      if (v18 == v27) {
        unint64_t v18 = 0;
      }
      v26 |= v28;
      uint64_t v29 = *(void *)(v13 + 8 * v18);
    }
    while (v29 == -1);
    unint64_t v20 = __clz(__rbit64(~v29)) + (v18 << 6);
LABEL_7:
    *(void *)(v13 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(unsigned char *)(*(void *)(v7 + 48) + v20) = v30;
    sub_214B5EC20(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v20));
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  if (a2)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    if (v32 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v9 = -1 << v32;
    }
    uint64_t v3 = v2;
    *(void *)(v5 + 16) = 0;
LABEL_40:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8B844(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43B0);
  char v42 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8BB6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF90);
  char v43 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v43) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v40) {
      break;
    }
    char v27 = v41;
    unint64_t v28 = v41[v26];
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v28 = v41[v13];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = v41[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v28 = v41[v13];
            ++v29;
            if (v28) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_22:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v43)
    {
LABEL_10:
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 288 * v18;
      uint64_t v47 = *(void *)(v22 + 16);
      uint64_t v48 = *(void *)(v22 + 24);
      uint64_t v59 = *(void *)(v22 + 32);
      uint64_t v56 = *(void *)(v22 + 40);
      uint64_t v54 = *(void *)(v22 + 48);
      uint64_t v52 = *(void *)v22;
      uint64_t v53 = *(void *)(v22 + 56);
      uint64_t v50 = *(void *)(v22 + 8);
      uint64_t v51 = *(void *)(v22 + 64);
      uint64_t v49 = *(void *)(v22 + 72);
      uint64_t v45 = *(void *)(v22 + 80);
      uint64_t v46 = *(void *)(v22 + 88);
      uint64_t v55 = *(void *)(v22 + 96);
      uint64_t v57 = *(void *)(v22 + 112);
      uint64_t v58 = *(void *)(v22 + 104);
      uint64_t v60 = *(void *)(v22 + 120);
      char v61 = *(unsigned char *)(v22 + 128);
      char v23 = *(unsigned char *)(v22 + 152);
      uint64_t v73 = *(void *)(v22 + 160);
      uint64_t v72 = *(void *)(v22 + 168);
      uint64_t v71 = *(void *)(v22 + 176);
      uint64_t v68 = *(void *)(v22 + 184);
      uint64_t v63 = *(void *)(v22 + 192);
      uint64_t v64 = *(void *)(v22 + 136);
      uint64_t v65 = *(void *)(v22 + 200);
      uint64_t v66 = *(void *)(v22 + 144);
      char v24 = *(unsigned char *)(v22 + 208);
      char v25 = *(unsigned char *)(v22 + 264);
      uint64_t v67 = *(void *)(v22 + 216);
      uint64_t v62 = *(void *)(v22 + 224);
      uint64_t v69 = *(void *)(v22 + 232);
      uint64_t v70 = *(void *)(v22 + 240);
      char v44 = *(unsigned char *)(v22 + 248);
      uint64_t v74 = *(void *)(v22 + 256);
      uint64_t v75 = *(void *)(v22 + 272);
      uint64_t v76 = *(void *)(v22 + 280);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    memcpy(__dst, (const void *)(*(void *)(v5 + 56) + 288 * v18), 0x120uLL);
    uint64_t v75 = __dst[34];
    uint64_t v76 = __dst[35];
    char v25 = __dst[33];
    char v44 = __dst[31];
    uint64_t v69 = __dst[29];
    uint64_t v70 = __dst[30];
    uint64_t v62 = __dst[28];
    char v24 = __dst[26];
    uint64_t v73 = __dst[20];
    uint64_t v74 = __dst[32];
    uint64_t v71 = __dst[22];
    uint64_t v72 = __dst[21];
    uint64_t v67 = __dst[27];
    uint64_t v68 = __dst[23];
    char v23 = __dst[19];
    uint64_t v65 = __dst[25];
    uint64_t v66 = __dst[18];
    uint64_t v63 = __dst[24];
    uint64_t v64 = __dst[17];
    char v61 = __dst[16];
    uint64_t v57 = __dst[14];
    uint64_t v58 = __dst[13];
    uint64_t v59 = __dst[4];
    uint64_t v60 = __dst[15];
    uint64_t v55 = __dst[12];
    uint64_t v56 = __dst[5];
    uint64_t v53 = __dst[7];
    uint64_t v54 = __dst[6];
    uint64_t v46 = __dst[11];
    uint64_t v45 = __dst[10];
    uint64_t v51 = __dst[8];
    uint64_t v52 = __dst[0];
    uint64_t v49 = __dst[9];
    uint64_t v50 = __dst[1];
    uint64_t v47 = __dst[2];
    uint64_t v48 = __dst[3];
    swift_bridgeObjectRetain();
    sub_214B939C0(__dst);
LABEL_24:
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    LOBYTE(__dst[0]) = v23;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 288 * v14;
    *(void *)uint64_t v16 = v52;
    *(void *)(v16 + 8) = v50;
    *(void *)(v16 + 16) = v47;
    *(void *)(v16 + 24) = v48;
    *(void *)(v16 + 32) = v59;
    *(void *)(v16 + 40) = v56;
    *(void *)(v16 + 48) = v54;
    *(void *)(v16 + 56) = v53;
    *(void *)(v16 + 64) = v51;
    *(void *)(v16 + 72) = v49;
    *(void *)(v16 + 80) = v45;
    *(void *)(v16 + 88) = v46;
    *(void *)(v16 + 96) = v55;
    *(void *)(v16 + 104) = v58;
    *(void *)(v16 + 112) = v57;
    *(void *)(v16 + 120) = v60;
    *(unsigned char *)(v16 + 128) = v61;
    *(void *)(v16 + 136) = v64;
    *(void *)(v16 + 144) = v66;
    *(unsigned char *)(v16 + 152) = __dst[0];
    *(void *)(v16 + 160) = v73;
    *(void *)(v16 + 168) = v72;
    *(void *)(v16 + 176) = v71;
    *(void *)(v16 + 184) = v68;
    *(void *)(v16 + 192) = v63;
    *(void *)(v16 + 200) = v65;
    *(unsigned char *)(v16 + 208) = v24;
    *(void *)(v16 + 216) = v67;
    *(void *)(v16 + 224) = v62;
    *(void *)(v16 + 232) = v69;
    *(void *)(v16 + 240) = v70;
    *(unsigned char *)(v16 + 248) = v44;
    *(void *)(v16 + 256) = v74;
    *(unsigned char *)(v16 + 264) = v25;
    *(void *)(v16 + 272) = v75;
    *(void *)(v16 + 280) = v76;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v27 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v27 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8C18C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v48 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D008);
  int v50 = a2;
  uint64_t v9 = sub_214D1A968();
  unint64_t v10 = (void *)v9;
  if (*(void *)(v8 + 16))
  {
    char v44 = (char *)&v55[130] + 2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    char v43 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    uint64_t v41 = v3;
    int64_t v42 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v46 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    uint64_t v47 = v8;
    uint64_t v45 = v10;
    while (1)
    {
      if (v14)
      {
        unint64_t v29 = __clz(__rbit64(v14));
        uint64_t v30 = (v14 - 1) & v14;
        unint64_t v31 = v29 | (v16 << 6);
      }
      else
      {
        int64_t v32 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        unint64_t v33 = v43;
        if (v32 >= v42) {
          goto LABEL_24;
        }
        unint64_t v34 = v43[v32];
        ++v16;
        if (!v34)
        {
          int64_t v16 = v32 + 1;
          if (v32 + 1 >= v42) {
            goto LABEL_24;
          }
          unint64_t v34 = v43[v16];
          if (!v34)
          {
            int64_t v35 = v32 + 2;
            if (v35 >= v42)
            {
LABEL_24:
              swift_release();
              if ((v50 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v41;
                goto LABEL_31;
              }
              uint64_t v40 = 1 << *(unsigned char *)(v8 + 32);
              if (v40 >= 64) {
                bzero(v33, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v33 = -1 << v40;
              }
              uint64_t v3 = v41;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v34 = v43[v35];
            if (!v34)
            {
              while (1)
              {
                int64_t v16 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  goto LABEL_33;
                }
                if (v16 >= v42) {
                  goto LABEL_24;
                }
                unint64_t v34 = v43[v16];
                ++v35;
                if (v34) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v35;
          }
        }
LABEL_21:
        uint64_t v30 = (v34 - 1) & v34;
        unint64_t v31 = __clz(__rbit64(v34)) + (v16 << 6);
      }
      uint64_t v36 = 1048 * v31;
      unint64_t v51 = v30;
      int64_t v52 = v16;
      if (v50)
      {
        uint64_t v37 = *(void *)(v8 + 48) + v36;
        uint64_t v24 = *(void *)v37;
        sub_214B6AC38(v37 + 8, (uint64_t)v55, &qword_26784D010);
        char v23 = *(unsigned char *)(v37 + 1042);
        char v22 = *(unsigned char *)(v37 + 1043);
        char v21 = *(unsigned char *)(v37 + 1044);
        uint64_t v38 = *(void *)(v8 + 56);
        uint64_t v18 = *(void *)(v49 + 72);
        uint64_t v39 = v38 + v18 * v31;
        uint64_t v20 = v48;
        sub_214B6AC38(v39, v48, &qword_26784D000);
        char v25 = v55;
      }
      else
      {
        memcpy(v55, (const void *)(*(void *)(v8 + 48) + v36), 0x415uLL);
        uint64_t v17 = *(void *)(v8 + 56);
        uint64_t v18 = *(void *)(v49 + 72);
        uint64_t v19 = v17 + v18 * v31;
        uint64_t v20 = v48;
        sub_214B95764(v19, v48, &qword_26784D000);
        char v21 = BYTE4(v55[130]);
        char v22 = v44[1];
        char v23 = *v44;
        uint64_t v24 = v55[0];
        sub_214B93E30((uint64_t)v55);
        char v25 = &v55[1];
      }
      sub_214B6AC38((uint64_t)v25, (uint64_t)v56, &qword_26784D010);
      v55[0] = v24;
      sub_214B6AC38((uint64_t)v56, (uint64_t)&v55[1], &qword_26784D010);
      BYTE2(v55[130]) = v23;
      BYTE3(v55[130]) = v22;
      BYTE4(v55[130]) = v21;
      unint64_t v10 = v45;
      memcpy(v54, v55, sizeof(v54));
      sub_214D1AD08();
      sub_214BA79EC((uint64_t)&v53, v26);
      sub_214D1AD48();
      uint64_t v27 = v46;
      unint64_t v28 = sub_214D1A698();
      *(void *)(v27 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      memcpy((void *)(v10[6] + 1048 * v28), v55, 0x415uLL);
      uint64_t result = sub_214B6AC38(v20, v10[7] + v18 * v28, &qword_26784D000);
      ++v10[2];
      uint64_t v8 = v47;
      unint64_t v14 = v51;
      int64_t v16 = v52;
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_214B8C5C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43C0);
  char v37 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  char v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8C8D0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ODIKnownBinding();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF48);
  int v44 = a2;
  uint64_t v10 = sub_214D1A968();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  int64_t v42 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41) {
      break;
    }
    int64_t v24 = v42;
    unint64_t v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v25 = v42[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v41) {
              goto LABEL_34;
            }
            unint64_t v25 = v42[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    BOOL v27 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v22);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = *(void *)(v43 + 72);
    uint64_t v31 = *(void *)(v9 + 56) + v30 * v22;
    if (v44)
    {
      sub_214B915D8(v31, (uint64_t)v8);
    }
    else
    {
      sub_214B9163C(v31, (uint64_t)v8);
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v32 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v33) & ~*(void *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v11 + 48) + 16 * v19);
    *unint64_t v20 = v29;
    v20[1] = v28;
    uint64_t result = sub_214B915D8((uint64_t)v8, *(void *)(v11 + 56) + v30 * v19);
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v24 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v9 + 32);
  if (v39 >= 64) {
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v39;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_214B8CC74(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A58);
  char v37 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    unint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    unint64_t v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_214B59EC0(v25, (uint64_t)v38);
    }
    else
    {
      sub_214B93DCC((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_214B59EC0(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8CF9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF70);
  char v36 = a2;
  uint64_t v6 = sub_214D1A968();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 24 * v21;
    long long v37 = *(_OWORD *)v31;
    char v32 = *(unsigned char *)(v31 + 16);
    if ((v36 & 1) == 0) {
      id v33 = v30;
    }
    uint64_t result = sub_214D1A598();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v18;
    *(_OWORD *)uint64_t v19 = v37;
    *(unsigned char *)(v19 + 16) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v23 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8D290(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF80);
  uint64_t result = sub_214D1A968();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v18);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      sub_214D1AD08();
      sub_214D1AD18();
      uint64_t result = sub_214D1AD48();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
      unint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v15);
      *unint64_t v16 = v25;
      v16[1] = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8D564(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF88);
  uint64_t result = sub_214D1A968();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      unint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_214D1AD08();
      sub_214D1AD18();
      uint64_t result = sub_214D1AD48();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8D830(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D8);
  uint64_t result = sub_214D1A968();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_214D1ACF8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_214B8DAD8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFD8);
  char v34 = a2;
  uint64_t result = sub_214D1A968();
  uint64_t v7 = result;
  uint64_t v35 = v5;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v32 = result;
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v31;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_41;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v35 + 32);
              if (v30 >= 64) {
                bzero(v31, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v35 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v35 + 48) + v19);
      uint64_t v28 = *(void *)(v35 + 56) + 112 * v19;
      uint64_t v29 = *(void *)v28;
      long long v41 = *(_OWORD *)(v28 + 24);
      long long v42 = *(_OWORD *)(v28 + 8);
      long long v39 = *(_OWORD *)(v28 + 56);
      long long v40 = *(_OWORD *)(v28 + 40);
      long long v37 = *(_OWORD *)(v28 + 88);
      long long v38 = *(_OWORD *)(v28 + 72);
      uint64_t v36 = *(void *)(v28 + 104);
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v7 = v32;
        swift_bridgeObjectRetain();
      }
      sub_214D1AD08();
      sub_214D1AD18();
      uint64_t result = sub_214D1AD48();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 112 * v16;
      *(void *)uint64_t v17 = v29;
      *(_OWORD *)(v17 + 8) = v42;
      *(_OWORD *)(v17 + 24) = v41;
      *(_OWORD *)(v17 + 40) = v40;
      *(_OWORD *)(v17 + 56) = v39;
      *(_OWORD *)(v17 + 72) = v38;
      *(_OWORD *)(v17 + 88) = v37;
      *(void *)(v17 + 104) = v36;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_214B8DED4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v10 = sub_214B88070(a2, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_214B8FE98(&qword_26ACE43A8);
      goto LABEL_7;
    }
    sub_214B8A9B8(v13, a3 & 1);
    uint64_t v19 = sub_214B88070(a2, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B8850C);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_214B8F078(v10, a2, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    return sub_214B8F078(v10, a2, a1, v16);
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_214B5EC20(a1, v17);
}

_OWORD *sub_214B8E05C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_214B8FCA4();
      goto LABEL_7;
    }
    sub_214B8AEE8(v15, a4 & 1);
    uint64_t v21 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_214B5EC20(a1, v19);
  }
LABEL_13:
  sub_214B8F008(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_214B8E200(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v10 = sub_214B88070(a2, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B88A6C);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_214B8FE98(&qword_26ACE43A0);
      goto LABEL_7;
    }
    sub_214B8B1E8(v13, a3 & 1);
    uint64_t v19 = sub_214B88070(a2, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, (uint64_t (*)(uint64_t, uint64_t))sub_214B88A6C);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_214B8F078(v10, a2, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    return sub_214B8F078(v10, a2, a1, v16);
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_214B5EC20(a1, v17);
}

uint64_t sub_214B8E388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_214B88294(a3, a4, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_214B90050();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_214B8B844(v17, a5 & 1);
  uint64_t v23 = sub_214B88294(a3, a4, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_214B8E560(const void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_214B9020C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 288 * v12;
      return sub_214B93ACC((uint64_t)a1, v19);
    }
    goto LABEL_13;
  }
  sub_214B8BB6C(v15, a4 & 1);
  uint64_t v21 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  memcpy((void *)(v18[7] + 288 * v12), a1, 0x120uLL);
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_214B8E73C(uint64_t a1, void *__src, char a3)
{
  uint64_t v4 = (void **)v3;
  int64_t v8 = (void *)*v3;
  unint64_t v10 = sub_214B88214(__src);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_214B90408();
      goto LABEL_7;
    }
    sub_214B8C18C(v13, a3 & 1);
    unint64_t v20 = sub_214B88214(__src);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784D000) - 8) + 72) * v10;
    return sub_214B94438(a1, v18);
  }
LABEL_13:
  sub_214B8F154(v10, __src, a1, v16);
  return sub_214B93E30((uint64_t)__src);
}

uint64_t sub_214B8E894(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_214B906A4();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_214B8C5C4(result, a4 & 1);
  uint64_t result = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v20 = a2;
  v20[1] = a3;
  *(unsigned char *)(v18[7] + v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_214B8EA48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_214B90850();
      goto LABEL_7;
    }
    sub_214B8C8D0(v15, a4 & 1);
    uint64_t v22 = sub_214B88294(a2, a3, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for ODIKnownBinding() - 8) + 72) * v12;
    return sub_214B916A0(a1, v20);
  }
LABEL_13:
  sub_214B8F208(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

id sub_214B8EBFC(uint64_t a1, uint64_t a2, char a3, void *a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v11 = (void *)*v5;
  unint64_t v13 = sub_214B88328((uint64_t)a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  id result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < (uint64_t)result || (a5 & 1) == 0)
  {
    if (v18 >= (uint64_t)result && (a5 & 1) == 0)
    {
      id result = sub_214B90CA8();
      goto LABEL_9;
    }
    sub_214B8CF9C((uint64_t)result, a5 & 1);
    id result = (id)sub_214B88328((uint64_t)a4);
    if ((v17 & 1) == (v19 & 1))
    {
      unint64_t v13 = (unint64_t)result;
      goto LABEL_9;
    }
LABEL_15:
    sub_214B6A264(0, &qword_26784CD00);
    id result = (id)sub_214D1AC58();
    __break(1u);
    return result;
  }
LABEL_9:
  int v20 = a3 & 1;
  uint64_t v21 = *v6;
  if (v17)
  {
    uint64_t v22 = v21[7] + 24 * v13;
    *(void *)uint64_t v22 = a1;
    *(void *)(v22 + 8) = a2;
    *(unsigned char *)(v22 + 16) = v20 != 0;
  }
  else
  {
    sub_214B8F2A0(v13, (uint64_t)a4, a1, a2, v20, v21);
    return a4;
  }
  return result;
}

uint64_t sub_214B8ED5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_214B883E4(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_214B91198();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v18 = 8 * v10;
    *(void *)(v16[6] + v18) = a2;
    *(void *)(v16[7] + v18) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_214B8D830(result, a3 & 1);
  uint64_t result = sub_214B883E4(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_214D1AC58();
  __break(1u);
  return result;
}

uint64_t sub_214B8EE8C(long long *a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_214B88378(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_214B8DAD8(result, a3 & 1);
      uint64_t result = sub_214B88378(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_214D1AC58();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      char v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_214B91328();
  }
  char v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v19 = (_OWORD *)(v16[7] + 112 * v10);
    long long v20 = *a1;
    long long v21 = a1[2];
    v19[1] = a1[1];
    _OWORD v19[2] = v21;
    *uint64_t v19 = v20;
    long long v22 = a1[3];
    long long v23 = a1[4];
    long long v24 = a1[6];
    v19[5] = a1[5];
    v19[6] = v24;
    v19[3] = v22;
    v19[4] = v23;
    uint64_t v25 = v16[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      _OWORD v16[2] = v27;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 112 * v10;
  return sub_214B93D70((uint64_t)a1, v17);
}

_OWORD *sub_214B8F008(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_214B5EC20(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_214B8F078(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_214B5EC20(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_214B8F0E0(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = memcpy((void *)(a5[7] + 288 * a1), __src, 0x120uLL);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_214B8F154(unint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  memcpy((void *)(a4[6] + 1048 * a1), a2, 0x415uLL);
  uint64_t v7 = a4[7];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  uint64_t result = sub_214B6AC38(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, &qword_26784D000);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_214B8F208(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ODIKnownBinding();
  uint64_t result = sub_214B915D8(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_214B8F2A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(void *)(v6 + 8) = a4;
  *(unsigned char *)(v6 + 16) = a5 & 1;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

void *sub_214B8F2F4()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D020);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B8F4AC()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *char v1 = v4;
    return result;
  }
  BOOL v28 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_214B9157C(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    uint64_t v23 = v30;
    long long v24 = v29[1];
    *(_OWORD *)uint64_t v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    char v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_214B8F6A8()
{
  unint64_t result = qword_26784CF28;
  if (!qword_26784CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CF28);
  }
  return result;
}

unint64_t sub_214B8F700()
{
  unint64_t result = qword_26ACE4140;
  if (!qword_26ACE4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4140);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ODIErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x30) {
    goto LABEL_17;
  }
  if (a2 + 208 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 208) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 208;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 208;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 208;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD1;
  int v8 = v6 - 209;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ODIErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 208 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 208) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x30) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x2F)
  {
    unsigned int v6 = ((a2 - 48) >> 8) + 1;
    *unint64_t result = a2 - 48;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B8F8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 - 48;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIErrorCode()
{
  return &type metadata for ODIErrorCode;
}

uint64_t getEnumTagSinglePayload for ODIErrorPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ODIErrorPropertyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214B8FA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIErrorPropertyKey()
{
  return &type metadata for ODIErrorPropertyKey;
}

uint64_t sub_214B8FA80(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3 || a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TTRError(uint64_t a1)
{
  return sub_214B8FAAC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_214B8FAAC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3 || a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17CoreODIEssentials8TTRErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214B8FA80(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214B8FA80(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_214B8FAAC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_214B8FAAC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214B8FC54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_214B8FC6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRError()
{
  return &type metadata for TTRError;
}

ValueMetadata *type metadata accessor for ODIInvocation()
{
  return &type metadata for ODIInvocation;
}

void *sub_214B8FCA4()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_28:
    *char v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_214B5EC30(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    sub_214B5EC20(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    char v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_214B8FE8C()
{
  return sub_214B8FE98(&qword_26ACE43A0);
}

void *sub_214B8FE98(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_214D1A958();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  __n128 result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    __n128 result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    sub_214B5EC30(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = v17;
    __n128 result = sub_214B5EC20(v21, (_OWORD *)(*(void *)(v5 + 56) + 32 * v16));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B90050()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B9020C()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_28:
    *char v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 288 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 288 * v15), 0x120uLL);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    memcpy((void *)(*(void *)(v4 + 56) + v20), __dst, 0x120uLL);
    swift_bridgeObjectRetain();
    __n128 result = sub_214B939C0(__dst);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    char v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_214B90408()
{
  char v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D008);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_214D1A958();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_25:
    *char v1 = v8;
    return result;
  }
  int64_t v24 = v1;
  __n128 result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    __n128 result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v25 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 1048 * v17;
    memcpy(v27, (const void *)(*(void *)(v6 + 48) + 1048 * v17), 0x415uLL);
    unint64_t v19 = *(void *)(v26 + 72) * v17;
    sub_214B95764(*(void *)(v6 + 56) + v19, (uint64_t)v5, &qword_26784D000);
    memcpy((void *)(*(void *)(v8 + 48) + v18), v27, 0x415uLL);
    sub_214B6AC38((uint64_t)v5, *(void *)(v8 + 56) + v19, &qword_26784D000);
    __n128 result = (void *)sub_214B93E30((uint64_t)v27);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    __n128 result = (void *)swift_release();
    char v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_214B906A4()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *unint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B90850()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for ODIKnownBinding();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF48);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_214D1A958();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_25:
    *char v1 = v8;
    return result;
  }
  BOOL v28 = v1;
  __n128 result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    __n128 result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v29 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v15) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v30 + 72) * v17;
    sub_214B9163C(*(void *)(v6 + 56) + v22, (uint64_t)v5);
    uint64_t v23 = (void *)(*(void *)(v8 + 48) + v18);
    *uint64_t v23 = v20;
    v23[1] = v21;
    sub_214B915D8((uint64_t)v5, *(void *)(v8 + 56) + v22);
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_23:
    __n128 result = (void *)swift_release();
    char v1 = v28;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_214B90ABC()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    __n128 result = (void *)swift_release();
LABEL_28:
    *char v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_214B93DCC(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_214B59EC0(v26, *(void *)(v4 + 56) + v20);
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    char v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_214B90CA8()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 16) = v20;
    id result = v17;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B90E64()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_214B90FF4()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B91198()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A958();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_214B91328()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFD8);
  int64_t v26 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_214D1A958();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v26 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v28 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v27) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v7;
    if (!v24)
    {
      int64_t v7 = v23 + 1;
      if (v23 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v7);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v12 = __clz(__rbit64(v24)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = *(void *)(v1 + 56) + 112 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 104);
    long long v16 = *(_OWORD *)(v13 + 8);
    long long v17 = *(_OWORD *)(v13 + 24);
    long long v18 = *(_OWORD *)(v13 + 40);
    long long v19 = *(_OWORD *)(v13 + 56);
    long long v20 = *(_OWORD *)(v13 + 72);
    long long v21 = *(_OWORD *)(v13 + 88);
    *(unsigned char *)(*(void *)(v3 + 48) + v12) = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    uint64_t v22 = *(void *)(v3 + 56) + 112 * v12;
    *(void *)uint64_t v22 = v14;
    *(_OWORD *)(v22 + 8) = v16;
    *(_OWORD *)(v22 + 24) = v17;
    *(_OWORD *)(v22 + 40) = v18;
    *(_OWORD *)(v22 + 56) = v19;
    *(_OWORD *)(v22 + 72) = v20;
    *(_OWORD *)(v22 + 88) = v21;
    *(void *)(v22 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v27) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v7 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v7 >= v27) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v7);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_214B9157C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_214B915D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B9163C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B916A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_214B91704(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

unint64_t sub_214B917F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A50);
  uint64_t v3 = (void *)sub_214D1A978();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  unint64_t result = sub_214B881A4(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    unint64_t v10 = (uint64_t *)(v3[7] + 16 * result);
    *unint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_214B6A3A0(v5, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    char v4 = *((unsigned char *)v9 - 16);
    uint64_t v5 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_214B881A4(v4);
    v9 += 3;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_214B918FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF80);
    uint64_t v3 = (void *)sub_214D1A978();
    for (uint64_t i = (_OWORD *)(a1 + 40); ; uint64_t i = (_OWORD *)((char *)i + 24))
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      long long v11 = *i;
      unint64_t result = sub_214B88378(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_214B919DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CFD8);
    uint64_t v3 = (void *)sub_214D1A978();
    char v4 = (void *)(a1 + 72);
    while (1)
    {
      uint64_t v19 = v1;
      unsigned __int8 v5 = *((unsigned char *)v4 - 40);
      uint64_t v24 = *(v4 - 4);
      uint64_t v25 = *(v4 - 3);
      uint64_t v26 = *(v4 - 1);
      uint64_t v6 = v4[1];
      uint64_t v22 = *v4;
      uint64_t v23 = *(v4 - 2);
      uint64_t v7 = v4[3];
      uint64_t v9 = v4[4];
      uint64_t v8 = v4[5];
      uint64_t v11 = v4[6];
      uint64_t v10 = v4[7];
      uint64_t v12 = v4[9];
      uint64_t v20 = v4[8];
      uint64_t v21 = v4[2];
      unint64_t result = sub_214B88378(v5);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v15 = (void *)(v3[7] + 112 * result);
      *uint64_t v15 = v24;
      v15[1] = v25;
      _OWORD v15[2] = v23;
      v15[3] = v26;
      v15[4] = v22;
      v15[5] = v6;
      v15[6] = v21;
      v15[7] = v7;
      v15[8] = v9;
      unsigned __int8 v15[9] = v8;
      v15[10] = v11;
      v15[11] = v10;
      v15[12] = v20;
      v15[13] = v12;
      uint64_t v16 = v3[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      v4 += 15;
      v3[2] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v1 = v19 - 1;
      if (v19 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_214B91B78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B91C6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_214D197D8() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B91DC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B91EB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B91FB0(void *a1)
{
  if (!a1) {
    return 0x3E6C696E3CLL;
  }
  id v2 = a1;
  uint64_t v3 = (void *)sub_214D199A8();
  id v4 = objc_msgSend(v3, sel_userInfo);
  uint64_t v5 = sub_214D19F98();

  if (!*(void *)(v5 + 16)
    || (uint64_t v6 = sub_214B88294(0x636F766E4949444FLL, 0xEE00736E6F697461, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v7 & 1) == 0))
  {
    long long v37 = 0u;
    long long v38 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_214B5EC30(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1))
  {
LABEL_14:
    sub_214B5ECF4((uint64_t)&v37);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3980);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *(void *)(*(void *)&v35[0] + 16);
    if (v8)
    {
      unint64_t v9 = v8 + 1;
      uint64_t v10 = *(void *)&v35[0] + 56 * v8;
      while (1)
      {
        unint64_t v11 = *(void *)(v10 - 16);
        uint64_t v12 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0) {
          uint64_t v12 = *(void *)(v10 - 24) & 0xFFFFFFFFFFFFLL;
        }
        if (v12) {
          break;
        }
        --v9;
        v10 -= 56;
        if (v9 <= 1) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v37 = 40;
      *((void *)&v37 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_214D1A108();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v3, sel_code));
  if (v37 != 209) {
    sub_214D1A0B8();
  }
  *(void *)&long long v37 = 0;
  *((void *)&v37 + 1) = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = 0x20726F727245;
  *((void *)&v37 + 1) = 0xE600000000000000;
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  id v14 = objc_msgSend(v3, sel_domain);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  *(void *)&v35[0] = objc_msgSend(v3, sel_code);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v13 = v37;
  long long v40 = v37;
  id v15 = objc_msgSend(v3, sel_userInfo);
  uint64_t v16 = sub_214D19F98();

  if (*(void *)(v16 + 16)
    && (uint64_t v17 = sub_214B88294(0x65706F725049444FLL, 0xED00007365697472, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v18 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v38 + 1))
  {

    sub_214B5ECF4((uint64_t)&v37);
    return v13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3940);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_56:
    return v13;
  }
  uint64_t v19 = *(void *)&v35[0];
  if (!*(void *)(*(void *)&v35[0] + 16))
  {

    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  uint64_t v32 = v3;
  uint64_t result = sub_214D1A108();
  int64_t v21 = 0;
  uint64_t v22 = *(void *)(*(void *)&v35[0] + 64);
  uint64_t v33 = *(void *)&v35[0] + 64;
  uint64_t v23 = 1 << *(unsigned char *)(*(void *)&v35[0] + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v34 = (unint64_t)(v23 + 63) >> 6;
  if ((v24 & v22) == 0) {
    goto LABEL_33;
  }
LABEL_31:
  unint64_t v26 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  unint64_t v27 = v26 | (v21 << 6);
  while (2)
  {
    uint64_t v28 = *(void *)(v19 + 56);
    LOBYTE(v35[0]) = *(unsigned char *)(*(void *)(v19 + 48) + v27);
    sub_214B5EC30(v28 + 32 * v27, (uint64_t)v35 + 8);
    while (1)
    {
      sub_214B6AC38((uint64_t)v35, (uint64_t)&v37, qword_26ACE3760);
      if (!v39)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_214D1A108();

        return v40;
      }
      sub_214B5EC20((long long *)((char *)&v37 + 8), v35);
      sub_214D1A908();
      sub_214D1A108();
      sub_214D1A908();
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      if (v25) {
        goto LABEL_31;
      }
LABEL_33:
      int64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v29 < v34)
      {
        unint64_t v30 = *(void *)(v33 + 8 * v29);
        if (v30) {
          goto LABEL_36;
        }
        int64_t v31 = v21 + 2;
        ++v21;
        if (v29 + 1 < v34)
        {
          unint64_t v30 = *(void *)(v33 + 8 * v31);
          if (v30) {
            goto LABEL_39;
          }
          int64_t v21 = v29 + 1;
          if (v29 + 2 < v34)
          {
            unint64_t v30 = *(void *)(v33 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_36;
            }
            int64_t v31 = v29 + 3;
            int64_t v21 = v29 + 2;
            if (v29 + 3 < v34) {
              break;
            }
          }
        }
      }
LABEL_50:
      unint64_t v25 = 0;
      uint64_t v36 = 0;
      memset(v35, 0, sizeof(v35));
    }
    unint64_t v30 = *(void *)(v33 + 8 * v31);
    if (v30)
    {
LABEL_39:
      int64_t v29 = v31;
LABEL_36:
      unint64_t v25 = (v30 - 1) & v30;
      unint64_t v27 = __clz(__rbit64(v30)) + (v29 << 6);
      int64_t v21 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v34)
    {
      int64_t v21 = v34 - 1;
      goto LABEL_50;
    }
    unint64_t v30 = *(void *)(v33 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_36;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_214B92794(void *a1)
{
  uint64_t v51 = sub_214D19AA8();
  uint64_t v2 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v3);
  int v50 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0x3E6C696E3CLL;
  }
  id v5 = a1;
  uint64_t v6 = (void *)sub_214D199A8();
  ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v6, sel_code));
  if (v58 != 209) {
    sub_214D1A0B8();
  }
  id v8 = objc_msgSend(v6, sel_userInfo);
  uint64_t v9 = sub_214D19F98();

  *(void *)&long long v58 = 0;
  *((void *)&v58 + 1) = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v58 = 0x6F4420726F727245;
  *((void *)&v58 + 1) = 0xEF203D206E69616DLL;
  id v10 = objc_msgSend(v6, sel_domain);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  *(void *)&v56[0] = objc_msgSend(v6, sel_code);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  long long v61 = v58;
  if (*(void *)(v9 + 16))
  {
    uint64_t v11 = sub_214B88294(0x65706F725049444FLL, 0xED00007365697472, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
    if (v12)
    {
      uint64_t v46 = v6;
      uint64_t v47 = a1;
      sub_214B5EC30(*(void *)(v9 + 56) + 32 * v11, (uint64_t)&v58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3940);
      if (swift_dynamicCast())
      {
        uint64_t v48 = v2;
        uint64_t v45 = v9;
        uint64_t v13 = *(void *)&v56[0];
        uint64_t result = sub_214D1A108();
        int64_t v14 = 0;
        uint64_t v15 = *(void *)(v13 + 64);
        uint64_t v49 = (void (**)(char *, uint64_t))(v13 + 64);
        uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
        uint64_t v17 = -1;
        if (v16 < 64) {
          uint64_t v17 = ~(-1 << v16);
        }
        unint64_t v18 = v17 & v15;
        int64_t v52 = (unint64_t)(v16 + 63) >> 6;
        int64_t v44 = v52 - 1;
        if ((v17 & v15) == 0) {
          goto LABEL_16;
        }
LABEL_14:
        unint64_t v20 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v21 = v20 | (v14 << 6);
LABEL_15:
        uint64_t v22 = *(void *)(v13 + 56);
        LOBYTE(v56[0]) = *(unsigned char *)(*(void *)(v13 + 48) + v21);
        sub_214B5EC30(v22 + 32 * v21, (uint64_t)v56 + 8);
        while (1)
        {
          sub_214B6AC38((uint64_t)v56, (uint64_t)&v58, qword_26ACE3760);
          if (!v60) {
            break;
          }
          char v19 = v58;
          sub_214B5EC20((long long *)((char *)&v58 + 8), v56);
          sub_214D1A108();
          uint64_t v54 = 0;
          unint64_t v55 = 0xE000000000000000;
          char v53 = v19;
          sub_214D1A908();
          sub_214D1A108();
          sub_214D1A908();
          uint64_t v54 = 539822345;
          unint64_t v55 = 0xE400000000000000;
          sub_214D1A108();
          swift_bridgeObjectRelease();
          sub_214D1A108();
          swift_bridgeObjectRelease();
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          if (v18) {
            goto LABEL_14;
          }
LABEL_16:
          int64_t v23 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_65;
          }
          if (v23 < v52)
          {
            unint64_t v24 = (unint64_t)v49[v23];
            if (v24) {
              goto LABEL_19;
            }
            int64_t v25 = v14 + 2;
            ++v14;
            if (v23 + 1 < v52)
            {
              unint64_t v24 = (unint64_t)v49[v25];
              if (v24) {
                goto LABEL_22;
              }
              int64_t v14 = v23 + 1;
              if (v23 + 2 < v52)
              {
                unint64_t v24 = (unint64_t)v49[v23 + 2];
                if (v24)
                {
                  v23 += 2;
                  goto LABEL_19;
                }
                int64_t v25 = v23 + 3;
                int64_t v14 = v23 + 2;
                if (v23 + 3 < v52)
                {
                  unint64_t v24 = (unint64_t)v49[v25];
                  if (!v24)
                  {
                    while (1)
                    {
                      int64_t v23 = v25 + 1;
                      if (__OFADD__(v25, 1)) {
                        goto LABEL_66;
                      }
                      if (v23 >= v52)
                      {
                        int64_t v14 = v44;
                        goto LABEL_33;
                      }
                      unint64_t v24 = (unint64_t)v49[v23];
                      ++v25;
                      if (v24) {
                        goto LABEL_19;
                      }
                    }
                  }
LABEL_22:
                  int64_t v23 = v25;
LABEL_19:
                  unint64_t v18 = (v24 - 1) & v24;
                  unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
                  int64_t v14 = v23;
                  goto LABEL_15;
                }
              }
            }
          }
LABEL_33:
          unint64_t v18 = 0;
          uint64_t v57 = 0;
          memset(v56, 0, sizeof(v56));
        }
        swift_release();
        a1 = v47;
        uint64_t v6 = v46;
        uint64_t v9 = v45;
        uint64_t v2 = v48;
        if (!*(void *)(v45 + 16)) {
          goto LABEL_54;
        }
        goto LABEL_39;
      }
      a1 = v47;
      uint64_t v6 = v46;
    }
  }
  if (!*(void *)(v9 + 16)) {
    goto LABEL_54;
  }
LABEL_39:
  uint64_t v26 = sub_214B88294(0x636F766E4949444FLL, 0xEE00736E6F697461, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428);
  if ((v27 & 1) == 0) {
    goto LABEL_54;
  }
  sub_214B5EC30(*(void *)(v9 + 56) + 32 * v26, (uint64_t)&v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3980);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_54;
  }
  uint64_t v28 = *(void *)&v56[0];
  if (!*(void *)(*(void *)&v56[0] + 16) || (uint64_t result = sub_214D1A108(), (v29 = *(void *)(v28 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v39 = sub_214D1A038();
    if (*(void *)(v9 + 16)
      && (uint64_t v41 = sub_214B88294(v39, v40, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v42 & 1) != 0))
    {
      sub_214B5EC30(*(void *)(v9 + 56) + 32 * v41, (uint64_t)&v58);
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v59 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
      if (swift_dynamicCast())
      {
        uint64_t v43 = *(void **)&v56[0];
        sub_214D1A108();
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = 0xE000000000000000;
        *(void *)&v56[0] = v43;
        sub_214D1A908();
        *(void *)&long long v58 = 0x202D09090ALL;
        *((void *)&v58 + 1) = 0xE500000000000000;
        sub_214D1A108();
        swift_bridgeObjectRelease();
        sub_214D1A108();

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {

      sub_214B5ECF4((uint64_t)&v58);
    }
    return v61;
  }
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v47 = a1;
  uint64_t v48 = v28;
  uint64_t v49 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v30 = v29 + 1;
  uint64_t v31 = v28 + 56 * v29;
  while (v30 - 2 < *(void *)(v28 + 16))
  {
    uint64_t v32 = *(void *)(v31 - 16);
    int64_t v52 = *(void *)(v31 - 24);
    uint64_t v33 = *(void *)(v31 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    int64_t v34 = v50;
    sub_214D19A08();
    uint64_t v35 = sub_214D19A18();
    uint64_t v37 = v36;
    (*v49)(v34, v51);
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = v35;
    *((void *)&v58 + 1) = v37;
    sub_214D1A108();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    *(void *)&v56[0] = v33;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    *(void *)&long long v58 = 539822345;
    *((void *)&v58 + 1) = 0xE400000000000000;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    int64_t v38 = v52;
    swift_bridgeObjectRelease();
    if (!v38 && v32 == 0xE000000000000000 || (sub_214D1ABC8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v58 = 9;
      *((void *)&v58 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_214D1A108();
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v48;
    --v30;
    v31 -= 56;
    if (v30 <= 1)
    {
      swift_bridgeObjectRelease();
      a1 = v47;
      uint64_t v6 = v46;
      uint64_t v9 = v45;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_214B93298()
{
  unint64_t v0 = (void *)sub_214D199A8();
  id v1 = objc_msgSend(v0, sel_domain);
  uint64_t v2 = sub_214D1A038();
  uint64_t v4 = v3;

  if (v2 == 0x726F72724549444FLL && v4 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {

      return 0;
    }
  }
  id v7 = objc_msgSend(v0, sel_userInfo);
  uint64_t v8 = sub_214D19F98();

  if (!*(void *)(v8 + 16)
    || (uint64_t v9 = sub_214B88294(0x65706F725049444FLL, 0xED00007365697472, MEMORY[0x263F8D2A8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_214B88428), (v10 & 1) == 0))
  {
    long long v13 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  sub_214B5EC30(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();

  if (!*((void *)&v14 + 1))
  {
LABEL_15:
    sub_214B5ECF4((uint64_t)&v13);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3940);
  if (swift_dynamicCast())
  {
    uint64_t result = v12;
    if (*(void *)(v12 + 16)) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_214B9347C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B93570(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B93668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B937C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B938B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF68);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

void *sub_214B939C0(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v8 = a1[21];
  uint64_t v9 = a1[20];
  uint64_t v6 = a1[23];
  uint64_t v7 = a1[22];
  uint64_t v5 = a1[24];
  swift_bridgeObjectRetain();
  sub_214B79260(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B792C4(v9, v8, v7, v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214B93ACC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_214B93B28()
{
  unint64_t result = qword_26784CFB8;
  if (!qword_26784CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784CFB8);
  }
  return result;
}

uint64_t sub_214B93B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

char *sub_214B93C88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214B93D70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_214B93DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_214B93E30(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_214B94214(v3);
  return a1;
}

uint64_t sub_214B94214(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214B94438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_214B944A0(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v8 = a1[23];
  uint64_t v9 = a1[22];
  uint64_t v6 = a1[25];
  uint64_t v7 = a1[24];
  uint64_t v5 = a1[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B79260(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B792C4(v9, v8, v7, v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214B945BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t *sub_214B945E0(uint64_t *a1)
{
  uint64_t v3 = a1[130];
  sub_214B94CC8(*a1);
  sub_214B94CC8(v3);
  return a1;
}

uint64_t sub_214B94CC8(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B94EE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  swift_bridgeObjectRelease();
  sub_214B94CC8(v3);
  return a1;
}

uint64_t sub_214B952CC(uint64_t a1)
{
  return a1;
}

#error "214B9573C: call analysis failed (funcsize=168)"

uint64_t sub_214B95764(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_214B957E0()
{
  type metadata accessor for DeviceStatus();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_214B9581C();
  qword_2678635D0 = v0;
  return result;
}

uint64_t sub_214B9581C()
{
  uint64_t v1 = v0;
  v12[0] = sub_214D1A508();
  uint64_t v2 = *(void *)(v12[0] - 8);
  MEMORY[0x270FA5388](v12[0], v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_214D1A4F8();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v8 = sub_214D19F38();
  MEMORY[0x270FA5388](v8 - 8, v9);
  swift_defaultActor_initialize();
  sub_214B6A264(0, (unint64_t *)&qword_26ACE4370);
  sub_214D19F28();
  v12[1] = MEMORY[0x263F8EE78];
  sub_214B96140((unint64_t *)&qword_26ACE4368, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4300);
  sub_214B96188((unint64_t *)&qword_26ACE4308, &qword_26ACE4300);
  sub_214D1A678();
  (*(void (**)(char *, void, void))(v2 + 104))(v5, *MEMORY[0x263F8F130], v12[0]);
  uint64_t v10 = sub_214D1A538();
  *(void *)(v1 + 112) = v10;
  *(void *)(v1 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7E1A0]), sel_initWithQueue_, v10);
  return v1;
}

uint64_t sub_214B95A9C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v24 = a3;
  uint64_t v5 = sub_214D19F08();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_214D19F38();
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26, v10);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D038);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13, v16);
  uint64_t v25 = *(void *)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  char v19 = v24;
  *(void *)(v18 + ((v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  aBlock[4] = sub_214B96098;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = &block_descriptor_9;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v19;
  sub_214D19F28();
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_214B96140((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B96188((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v12, v8, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v26);
  return swift_release();
}

uint64_t sub_214B95E28(int a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_currentAudioAndVideoCalls);
  sub_214B6A264(0, &qword_26784D040);
  unint64_t v3 = sub_214D1A268();

  if (v3 >> 62) {
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_214D1A948())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2166B0290](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      unsigned __int8 v9 = objc_msgSend(v6, sel_isSharingScreen);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4) {
          continue;
        }
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D038);
  return sub_214D1A2F8();
}

uint64_t sub_214B95F8C()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for DeviceStatus()
{
  return self;
}

uint64_t sub_214B95FF0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D038);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_214B96098()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784D038) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_214B95E28((int)v0 + (int)v2, v3);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_214B96140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214B96188(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Base64AssessmentPayloadAdapter()
{
  return &type metadata for Base64AssessmentPayloadAdapter;
}

uint64_t sub_214B961E8()
{
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  sub_214B9647C();
  uint64_t v0 = sub_214D19778();
  unint64_t v2 = v1;
  swift_release();
  uint64_t v3 = sub_214D19B48();
  sub_214B58A4C(v0, v2);
  return v3;
}

unint64_t sub_214B9647C()
{
  unint64_t result = qword_26784D048;
  if (!qword_26784D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D048);
  }
  return result;
}

uint64_t sub_214B964D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static RavioliFetcher.fetchRavioli(session:url:appBundleId:notificationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[28] = a5;
  v6[29] = a6;
  v6[26] = a3;
  v6[27] = a4;
  v6[25] = a1;
  uint64_t v7 = sub_214D19738();
  v6[30] = v7;
  v6[31] = *(void *)(v7 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v8 = sub_214D19AA8();
  v6[33] = v8;
  v6[34] = *(void *)(v8 - 8);
  v6[35] = swift_task_alloc();
  v6[36] = type metadata accessor for RavioliRequestFactory();
  v6[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B9668C, 0, 0);
}

uint64_t sub_214B9668C()
{
  uint64_t v12 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 200), sel_configuration);
  id v2 = objc_msgSend(v1, sel__appleIDContext);

  swift_unknownObjectRelease();
  if (!v2)
  {
    char v11 = 14;
    CoreODILogger.fault(_:category:)(0xD000000000000047, 0x8000000214D2FD90, &v11);
  }
  uint64_t v3 = *(void **)(v0 + 200);
  type metadata accessor for RavioliFetcherImpl();
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 304) = inited;
  *(void *)(inited + 16) = v3;
  uint64_t v5 = qword_26ACE5448;
  id v6 = v3;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26ACE5430;
  *(void *)(v0 + 40) = type metadata accessor for DeviceInformation();
  *(void *)(v0 + 48) = &protocol witness table for DeviceInformation;
  *(void *)(v0 + 16) = v7;
  uint64_t v8 = qword_26ACE4038;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_26ACE4030;
  *(void *)(v0 + 312) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214B96830, v9, 0);
}

uint64_t sub_214B96830()
{
  if (*(unsigned char *)(*(void *)(v0 + 312) + 168))
  {
    return MEMORY[0x270FA2498](sub_214B96A00, 0, 0);
  }
  else
  {
    id v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v1;
    *id v1 = v0;
    v1[1] = sub_214B96904;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214B96904()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B96A00, 0, 0);
}

uint64_t sub_214B96A00()
{
  uint64_t v1 = v0[39];
  v0[10] = type metadata accessor for ODIDeviceInfo();
  v0[11] = &off_26C5AA0A0;
  v0[7] = v1;
  if (qword_26ACE5460 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26ACE5438;
  uint64_t v3 = type metadata accessor for ODIiCloudAccountManager();
  v0[41] = v3;
  v0[15] = v3;
  v0[16] = &protocol witness table for ODIiCloudAccountManager;
  v0[12] = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = v4;
  void *v4 = v0;
  v4[1] = sub_214B96B40;
  uint64_t v5 = v0[35];
  return sub_214B98E08(v5, 0, 0xD00000000000001ELL, 0x8000000214D2FD70);
}

uint64_t sub_214B96B40()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B96C3C, 0, 0);
}

uint64_t sub_214B96C3C()
{
  uint64_t v2 = *(int **)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 272) + 32))(v1, *(void *)(v0 + 280), *(void *)(v0 + 264));
  sub_214B59EC0((long long *)(v0 + 16), v1 + v2[5]);
  sub_214B59EC0((long long *)(v0 + 96), v1 + v2[6]);
  sub_214B59EC0((long long *)(v0 + 56), v1 + v2[7]);
  uint64_t v5 = (void *)(v1 + v2[8]);
  *uint64_t v5 = v4;
  v5[1] = v3;
  id v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v6;
  *id v6 = v0;
  v6[1] = sub_214B96D5C;
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 216);
  return sub_214C541D4(v7, v8, v9);
}

uint64_t sub_214B96D5C()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214B97140;
  }
  else {
    uint64_t v2 = sub_214B96E70;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214B96E70()
{
  uint64_t v1 = qword_26ACE5438;
  v0[20] = v0[41];
  v0[21] = &off_26C5ACDD0;
  v0[17] = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[45] = v2;
  void *v2 = v0;
  v2[1] = sub_214B96F40;
  uint64_t v3 = v0[32];
  return sub_214B972AC(v3, 1, (uint64_t)(v0 + 17));
}

uint64_t sub_214B96F40(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3 + 136;
  *(void *)(*v3 + 368) = v2;
  swift_task_dealloc();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(v7);
    uint64_t v8 = sub_214B971D4;
  }
  else
  {
    *(void *)(v6 + 376) = a2;
    *(void *)(v6 + 384) = a1;
    __swift_destroy_boxed_opaque_existential_1(v7);
    uint64_t v8 = sub_214B97084;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_214B97084()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v4 = v0[30];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_214B988E4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v7 = v0[47];
  uint64_t v6 = v0[48];
  return v5(v6, v7);
}

uint64_t sub_214B97140()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_release();
  sub_214B988E4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214B971D4()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v4 = v0[30];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_214B988E4(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t type metadata accessor for RavioliFetcherImpl()
{
  return self;
}

uint64_t sub_214B972AC(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = v3;
  *(unsigned char *)(v4 + 232) = a2;
  *(void *)(v4 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  *(void *)(v4 + 96) = swift_task_alloc();
  uint64_t v5 = sub_214D19738();
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 112) = *(void *)(v5 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B973C0, 0, 0);
}

uint64_t sub_214B973C0()
{
  uint64_t v49 = v0;
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v5 = sub_214D19EE8();
  v0[18] = __swift_project_value_buffer(v5, (uint64_t)qword_26ACEBA58);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  uint64_t v7 = sub_214D19EC8();
  os_log_type_t v8 = sub_214D1A498();
  uint64_t v45 = v6;
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v44 = v8;
    uint64_t v9 = v0[12];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v48 = v42;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_214D19708();
    uint64_t v11 = sub_214D19AA8();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
    uint64_t v14 = v0[12];
    if (v13 == 1)
    {
      sub_214B989A4(v0[12]);
      unint64_t v15 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    else
    {
      uint64_t v16 = sub_214D199E8();
      unint64_t v15 = v17;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    }
    uint64_t v18 = v0[17];
    uint64_t v20 = v0[13];
    uint64_t v19 = v0[14];
    v0[8] = sub_214C3D88C(v16, v15, &v48);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v47(v18, v20);
    _os_log_impl(&dword_214B4E000, v7, v44, "Requesting ravioli: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v42, -1, -1);
    MEMORY[0x2166B1540](v10, -1, -1);

    uint64_t v6 = v45;
  }
  else
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0[14] + 8);
    v47(v0[17], v0[13]);
  }
  v6(v0[16], v0[9], v0[13]);
  id v21 = sub_214D19EC8();
  os_log_type_t v22 = sub_214D1A498();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = v0[16];
  if (v23)
  {
    uint64_t v41 = v0[13];
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v48 = v43;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v26 = sub_214D196B8();
    v0[7] = sub_214C3D88C(v26, v27, &v48);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    uint64_t v28 = v47;
    v47(v24, v41);
    _os_log_impl(&dword_214B4E000, v21, v22, "Request: %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v6 = v45;
    MEMORY[0x2166B1540](v43, -1, -1);
    MEMORY[0x2166B1540](v25, -1, -1);
  }
  else
  {
    uint64_t v28 = v47;
    v47(v24, v0[13]);
  }

  v6(v0[15], v0[9], v0[13]);
  uint64_t v29 = sub_214D19EC8();
  os_log_type_t v30 = sub_214D1A498();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v48 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v46 = v32;
    if (sub_214D196D8())
    {
      uint64_t v33 = sub_214D19FB8();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v35 = 0xEA00000000007372;
      uint64_t v33 = 0x6564616568206F4ELL;
    }
    uint64_t v36 = v0[15];
    uint64_t v37 = v0[13];
    v0[6] = sub_214C3D88C(v33, v35, &v48);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    v47(v36, v37);
    _os_log_impl(&dword_214B4E000, v29, v30, "Request: %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v46, -1, -1);
    MEMORY[0x2166B1540](v31, -1, -1);
  }
  else
  {
    v28(v0[15], v0[13]);
  }

  int64_t v38 = (void *)swift_task_alloc();
  v0[19] = v38;
  *int64_t v38 = v0;
  v38[1] = sub_214B97A04;
  uint64_t v39 = v0[9];
  return MEMORY[0x270EF1EB0](v39, 0);
}

uint64_t sub_214B97A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[20] = a1;
  v5[21] = a2;
  v5[22] = a3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214B97B70, 0, 0);
  }
}

uint64_t sub_214B97B70()
{
  uint64_t v63 = v0;
  id v1 = *(id *)(v0 + 176);
  uint64_t v2 = sub_214D19EC8();
  os_log_type_t v3 = sub_214D1A498();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void **)(v0 + 176);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v61 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    id v7 = objc_msgSend(v4, sel_debugDescription);
    uint64_t v8 = sub_214D1A038();
    unint64_t v10 = v9;

    *(void *)(v0 + 40) = sub_214C3D88C(v8, v10, &v61);
    sub_214D1A5F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v2, v3, "Response: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v6, -1, -1);
    MEMORY[0x2166B1540](v5, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 176);
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    int v13 = (void *)v12;
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    unint64_t v15 = *(void **)(v0 + 176);
    if (v14)
    {
      uint64_t v16 = (void *)v14;
      id v17 = v15;
      sub_214BA6D38((uint64_t)objc_msgSend(v16, sel_statusCode), (uint64_t)&v61);

      uint64_t v18 = v61;
      if (v62 == 1)
      {
        char v19 = 1;
        switch(v61)
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 6:
          case 7:
          case 8:
          case 9:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
            goto LABEL_13;
          case 5:
            int v45 = *(unsigned __int8 *)(v0 + 232);
            uint64_t v46 = sub_214D19EC8();
            if (v45 == 1)
            {
              os_log_type_t v47 = sub_214D1A498();
              if (os_log_type_enabled(v46, v47))
              {
                uint64_t v48 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v48 = 0;
                _os_log_impl(&dword_214B4E000, v46, v47, "Requesting ravioli - Authorisation error will renew and retry only one retry will be attempted", v48, 2u);
                MEMORY[0x2166B1540](v48, -1, -1);
              }
              uint64_t v49 = *(void **)(v0 + 80);

              __swift_project_boxed_opaque_existential_1(v49, v49[3]);
              uint64_t v50 = (void *)swift_task_alloc();
              *(void *)(v0 + 184) = v50;
              *uint64_t v50 = v0;
              v50[1] = sub_214B983F0;
              return sub_214B70A60();
            }
            os_log_type_t v54 = sub_214D1A4A8();
            if (os_log_type_enabled(v46, v54))
            {
              unint64_t v55 = (uint8_t *)swift_slowAlloc();
              uint64_t v56 = swift_slowAlloc();
              *(_DWORD *)unint64_t v55 = 136315138;
              uint64_t v60 = v56;
              uint64_t v61 = 5;
              char v62 = 1;
              uint64_t v57 = HTTPStatusCode.description.getter();
              *(void *)(v0 + 32) = sub_214C3D88C(v57, v58, &v60);
              sub_214D1A5F8();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_214B4E000, v46, v54, "Authorisation error not retrying or have already retried: %s", v55, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2166B1540](v56, -1, -1);
              MEMORY[0x2166B1540](v55, -1, -1);
            }

            unint64_t v27 = *(void *)(v0 + 168);
            uint64_t v28 = *(void **)(v0 + 176);
            uint64_t v29 = *(void *)(v0 + 160);
            sub_214B98950();
            swift_allocError();
            *(void *)uint64_t v59 = 5;
            *(_WORD *)(v59 + 8) = 1;
            break;
          case 10:
          case 11:
            id v20 = *(id *)(v0 + 176);
            id v21 = sub_214D19EC8();
            os_log_type_t v22 = sub_214D1A4B8();
            BOOL v23 = os_log_type_enabled(v21, v22);
            uint64_t v24 = *(NSObject **)(v0 + 176);
            if (v23)
            {
              uint64_t v25 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v25 = 134217984;
              *(void *)(v0 + 24) = objc_msgSend(v13, sel_statusCode);
              sub_214D1A5F8();

              _os_log_impl(&dword_214B4E000, v21, v22, "Expected %ld to be handled by the AKAppleIDSession", v25, 0xCu);
              uint64_t v26 = v25;
LABEL_22:
              MEMORY[0x2166B1540](v26, -1, -1);
              os_log_type_t v44 = v21;
              id v21 = v24;
            }
            else
            {

LABEL_30:
              os_log_type_t v44 = v24;
            }

            uint64_t v51 = *(void *)(v0 + 160);
            uint64_t v52 = *(void *)(v0 + 168);
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            char v53 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
            return v53(v51, v52);
          default:
            id v21 = sub_214D19EC8();
            os_log_type_t v41 = sub_214D1A498();
            BOOL v42 = os_log_type_enabled(v21, v41);
            uint64_t v24 = *(NSObject **)(v0 + 176);
            if (!v42) {
              goto LABEL_30;
            }
            uint64_t v43 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v43 = 0;
            _os_log_impl(&dword_214B4E000, v21, v41, "Requesting ravioli - data received", v43, 2u);
            uint64_t v26 = v43;
            goto LABEL_22;
        }
        goto LABEL_16;
      }
      char v19 = 0;
    }
    else
    {
      id v31 = v15;
      uint64_t v18 = 1;
      char v19 = 1;
    }
LABEL_13:
    uint64_t v32 = sub_214D19EC8();
    os_log_type_t v33 = sub_214D1A4A8();
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v35 = v60;
      *(_DWORD *)unint64_t v34 = 136315138;
      uint64_t v61 = v18;
      char v62 = v19;
      uint64_t v36 = HTTPStatusCode.description.getter();
      *(void *)(v0 + 16) = sub_214C3D88C(v36, v37, &v60);
      sub_214D1A5F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_214B4E000, v32, v33, "FetchRavioli Failed - Response: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v35, -1, -1);
      MEMORY[0x2166B1540](v34, -1, -1);
    }

    unint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void **)(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 160);
    sub_214B98950();
    swift_allocError();
    *(void *)uint64_t v38 = v18;
    *(unsigned char *)(v38 + 8) = v19;
    *(unsigned char *)(v38 + 9) = 0;
LABEL_16:
    swift_willThrow();

    goto LABEL_17;
  }
  unint64_t v27 = *(void *)(v0 + 168);
  uint64_t v28 = *(void **)(v0 + 176);
  uint64_t v29 = *(void *)(v0 + 160);
  sub_214B98950();
  swift_allocError();
  *(void *)uint64_t v30 = 5;
  *(_WORD *)(v30 + 8) = 256;
  swift_willThrow();
LABEL_17:

  sub_214B58A4C(v29, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_214B983F0()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214B9869C, 0, 0);
  }
  else
  {
    os_log_type_t v3 = (void *)swift_task_alloc();
    v2[25] = v3;
    *os_log_type_t v3 = v2;
    v3[1] = sub_214B98568;
    uint64_t v4 = v2[10];
    uint64_t v5 = v2[9];
    return sub_214B972AC(v5, 0, v4);
  }
}

uint64_t sub_214B98568(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 208) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_214B98800;
  }
  else
  {
    *(void *)(v6 + 216) = a2;
    *(void *)(v6 + 224) = a1;
    uint64_t v7 = sub_214B98744;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214B9869C()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[20];

  sub_214B58A4C(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214B98744()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[20];

  sub_214B58A4C(v3, v1);
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[28];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v6(v5, v4);
}

uint64_t sub_214B98800()
{
  unint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[20];

  sub_214B58A4C(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214B988AC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_214B988E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RavioliRequestFactory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RavioliFetcher()
{
  return &type metadata for RavioliFetcher;
}

unint64_t sub_214B98950()
{
  unint64_t result = qword_26784D068;
  if (!qword_26784D068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784D068);
  }
  return result;
}

uint64_t sub_214B989A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RavioliFetcherImpl.FetchError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RavioliFetcherImpl.FetchError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t sub_214B98A68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_214B98A84(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RavioliFetcherImpl.FetchError()
{
  return &type metadata for RavioliFetcherImpl.FetchError;
}

BOOL sub_214B98ABC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a2;
  uint64_t v3 = *(unsigned __int8 *)(a2 + 8);
  int v4 = *(unsigned __int8 *)(a2 + 9);
  if (*(unsigned char *)(a1 + 9) == 1)
  {
    switch(*(void *)a1)
    {
      case 1:
        BOOL v5 = v4 == 0;
        v2 ^= 1uLL;
        goto LABEL_10;
      case 2:
        BOOL v5 = v4 == 0;
        v2 ^= 2uLL;
        goto LABEL_10;
      case 3:
        BOOL v5 = v4 == 0;
        v2 ^= 3uLL;
        goto LABEL_10;
      case 4:
        BOOL v5 = v4 == 0;
        v2 ^= 4uLL;
        goto LABEL_10;
      case 5:
        if (!*(unsigned char *)(a2 + 9) || v2 <= 4) {
          return 0;
        }
        goto LABEL_18;
      default:
        BOOL v5 = v4 == 0;
LABEL_10:
        unint64_t v8 = v2 | v3;
        if (v5 || v8 != 0) {
          return 0;
        }
LABEL_18:
        BOOL v7 = 1;
        break;
    }
  }
  else if (v4)
  {
    return 0;
  }
  else
  {
    char v6 = *(unsigned char *)(a1 + 8);
    uint64_t v13 = *(void *)a1;
    char v14 = v6 & 1;
    unint64_t v11 = v2;
    char v12 = v3 & 1;
    return _s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(&v13, (uint64_t)&v11);
  }
  return v7;
}

uint64_t sub_214B98BC0(double a1)
{
  uint64_t v2 = sub_214D19F68();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v2, v4);
  BOOL v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8);
  unint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = sub_214D19EF8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11, v13);
  uint64_t v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v17 = a1 * 1000.0;
  if ((~COERCE__INT64(a1 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v17 < 9.22337204e18)
  {
    *uint64_t v16 = (uint64_t)v17;
    (*(void (**)(void *, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x263F8F000], v11);
    sub_214D19F58();
    MEMORY[0x2166AFA40](v7, v16);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v7, v2);
    uint64_t v19 = sub_214D1A4D8() & 1;
    v18(v10, v2);
    (*(void (**)(void *, uint64_t))(v12 + 8))(v16, v11);
    return v19;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_214B98E08(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 536) = a4;
  *(void *)(v4 + 528) = a3;
  *(unsigned char *)(v4 + 257) = a2;
  *(void *)(v4 + 520) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  *(void *)(v4 + 544) = swift_task_alloc();
  *(void *)(v4 + 552) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B98EB8, 0, 0);
}

uint64_t sub_214B98EB8()
{
  uint64_t v24 = v0;
  char v1 = *(unsigned char *)(v0 + 257);
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v23[0] = 0x4F49444F65726F63;
  v23[1] = 0xEF65646972726576;
  sub_214B75004(v1);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1
    && (uint64_t v3 = (void *)sub_214D1A028(),
        id v4 = objc_msgSend(v2, sel_stringForKey_, v3),
        v3,
        v4))
  {
    sub_214D1A038();

    swift_bridgeObjectRelease();
    uint64_t v5 = (uint64_t *)(v0 + 552);
    uint64_t v6 = *(void *)(v0 + 552);
    sub_214D19A68();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_214D19AA8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(uint64_t (**)(void, void, void))(v8 + 48);
    if (v9(v6, 1, v7) == 1)
    {
      sub_214B989A4(*v5);
      if (qword_26ACE41E0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_214D19EE8();
      __swift_project_value_buffer(v10, (uint64_t)qword_26ACEBA58);
      uint64_t v11 = sub_214D19EC8();
      os_log_type_t v12 = sub_214D1A4A8();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v22 = v9;
        char v13 = *(unsigned char *)(v0 + 257);
        char v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v23[0] = v15;
        *(_DWORD *)char v14 = 136315138;
        unint64_t v16 = sub_214B75004(v13);
        *(void *)(v0 + 512) = sub_214C3D88C(v16, v17, v23);
        sub_214D1A5F8();
        uint64_t v9 = v22;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_214B4E000, v11, v12, "No URL override or config found for %s URL", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v15, -1, -1);
        MEMORY[0x2166B1540](v14, -1, -1);
      }

      uint64_t v18 = *(void *)(v0 + 544);
      sub_214D19A68();
      uint64_t result = v9(v18, 1, v7);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = (uint64_t *)(v0 + 544);
    }
    (*(void (**)(void, uint64_t, uint64_t))(v8 + 32))(*(void *)(v0 + 520), *v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    swift_bridgeObjectRelease();

    if (qword_26ACE3C10 != -1) {
      swift_once();
    }
    id v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v21;
    *id v21 = v0;
    v21[1] = sub_214B99370;
    return sub_214C11404(v0 + 264);
  }
}

uint64_t sub_214B99370()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B9946C, 0, 0);
}

uint64_t sub_214B9946C()
{
  uint64_t v42 = v0;
  long long v2 = *(_OWORD *)(v0 + 456);
  long long v1 = *(_OWORD *)(v0 + 472);
  long long v3 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 208) = v2;
  *(_OWORD *)(v0 + 224) = v1;
  long long v4 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 488);
  long long v6 = *(_OWORD *)(v0 + 392);
  long long v5 = *(_OWORD *)(v0 + 408);
  long long v7 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 144) = v6;
  *(_OWORD *)(v0 + 160) = v5;
  long long v8 = *(_OWORD *)(v0 + 408);
  long long v10 = *(_OWORD *)(v0 + 424);
  long long v9 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 192) = v9;
  long long v12 = *(_OWORD *)(v0 + 328);
  long long v11 = *(_OWORD *)(v0 + 344);
  long long v13 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 80) = v12;
  *(_OWORD *)(v0 + 96) = v11;
  long long v14 = *(_OWORD *)(v0 + 344);
  long long v16 = *(_OWORD *)(v0 + 360);
  long long v15 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 112) = v16;
  *(_OWORD *)(v0 + 128) = v15;
  long long v17 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 32) = v17;
  long long v18 = *(_OWORD *)(v0 + 312);
  long long v20 = *(_OWORD *)(v0 + 264);
  long long v19 = *(_OWORD *)(v0 + 280);
  long long v21 = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 48) = v21;
  *(_OWORD *)(v0 + 64) = v18;
  v40[12] = v2;
  v40[13] = v4;
  v40[14] = *(_OWORD *)(v0 + 488);
  v40[8] = v6;
  v40[9] = v8;
  v40[10] = v10;
  v40[11] = v3;
  v40[4] = v12;
  v40[5] = v14;
  v40[6] = v16;
  v40[7] = v7;
  v40[0] = v20;
  v40[1] = v19;
  *(unsigned char *)(v0 + 256) = *(unsigned char *)(v0 + 504);
  char v22 = *(unsigned char *)(v0 + 257);
  char v41 = *(unsigned char *)(v0 + 504);
  void v40[2] = v21;
  v40[3] = v13;
  sub_214C11168(v22);
  uint64_t v24 = v23;
  sub_214B99814((void *)(v0 + 16));
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(v0 + 552);
    uint64_t v26 = *(void *)(v0 + 552);
    sub_214D19A68();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_214D19AA8();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1) {
      goto LABEL_10;
    }
    sub_214B989A4(*v25);
  }
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_214D19EE8();
  __swift_project_value_buffer(v29, (uint64_t)qword_26ACEBA58);
  uint64_t v30 = sub_214D19EC8();
  os_log_type_t v31 = sub_214D1A4A8();
  if (os_log_type_enabled(v30, v31))
  {
    char v32 = *(unsigned char *)(v0 + 257);
    os_log_type_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&v40[0] = v34;
    *(_DWORD *)os_log_type_t v33 = 136315138;
    unint64_t v35 = sub_214B75004(v32);
    *(void *)(v0 + 512) = sub_214C3D88C(v35, v36, (uint64_t *)v40);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v30, v31, "No URL override or config found for %s URL", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v34, -1, -1);
    MEMORY[0x2166B1540](v33, -1, -1);
  }

  uint64_t v37 = *(void *)(v0 + 544);
  sub_214D19A68();
  uint64_t v27 = sub_214D19AA8();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v37, 1, v27);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v25 = (uint64_t *)(v0 + 544);
LABEL_10:
  (*(void (**)(void, uint64_t, uint64_t))(v28 + 32))(*(void *)(v0 + 520), *v25, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

void *sub_214B99814(void *a1)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[2];
  uint64_t v3 = a1[24];
  uint64_t v2 = a1[25];
  uint64_t v4 = a1[26];
  swift_bridgeObjectRelease();
  sub_214B99934(v7, v6);
  sub_214B99A08(v3, v2, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214B99934(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B99A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B99A1C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a2;
  long long v14 = *(_OWORD *)(a2 + 8);
  uint64_t v9 = *((void *)a2 + 3);
  char v10 = a2[32];
  char v11 = a2[33];
  long long v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  long long v12 = (void *)swift_task_alloc();
  *(unsigned char *)(v4 + 16) = v8;
  *(void *)(v4 + 56) = v12;
  *(_OWORD *)(v4 + 24) = v14;
  *(void *)(v4 + 40) = v9;
  *(unsigned char *)(v4 + 48) = v10;
  *(unsigned char *)(v4 + 49) = v11;
  void *v12 = v4;
  v12[1] = sub_214B99B68;
  return v15(a1, v4 + 16, a3, a4);
}

uint64_t sub_214B99B68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  long long v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214B99C5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_214B99C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_214B6A55C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214B99D7C(unsigned char *a1)
{
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 98) = *a1;
  return MEMORY[0x270FA2498](sub_214B99DA4, v1, 0);
}

uint64_t sub_214B99DA4()
{
  char v1 = *(unsigned char *)(v0 + 98);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 112) = v2;
  swift_weakInit();
  *(unsigned char *)(v0 + 97) = v1;
  swift_retain_n();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214B99EAC;
  return DIPClientGUIDFactory.init(primaryDSIDBehavior:stsFetcher:)(v0 + 16, (unsigned char *)(v0 + 97), (uint64_t)&unk_26784D140, v2);
}

uint64_t sub_214B99EAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214B9A07C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 104);
    swift_release_n();
    uint64_t v3 = sub_214B99FD4;
    uint64_t v4 = v5;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214B99FD4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  long long v2 = *(_OWORD *)(v0 + 48);
  long long v3 = *(_OWORD *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  char v6 = *(unsigned char *)(v0 + 96);
  uint64_t v7 = *(void *)(v1 + 240);
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 240) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 256) = v8;
  *(_OWORD *)(v1 + 272) = v2;
  *(_OWORD *)(v1 + 288) = v3;
  *(void *)(v1 + 304) = v4;
  *(void *)(v1 + 312) = v5;
  *(unsigned char *)(v1 + 320) = v6;
  sub_214BA651C(v7);
  sub_214B9A434();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_214B9A07C()
{
  return MEMORY[0x270FA2498](sub_214B9A098, *(void *)(v0 + 104), 0);
}

uint64_t sub_214B9A098()
{
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B9A100(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return MEMORY[0x270FA2498](sub_214B9A120, 0, 0);
}

uint64_t sub_214B9A120()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + 176);
    *(void *)(v0 + 72) = v2;
    swift_unknownObjectRetain();
    swift_release();
    return MEMORY[0x270FA2498](sub_214B9A200, v2, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v3(0, 0xE000000000000000);
  }
}

uint64_t sub_214B9A200()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B9A294;
  return sub_214BC3FD8();
}

uint64_t sub_214B9A294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  v3[5] = v2;
  void v3[6] = a1;
  v3[7] = a2;
  v3[11] = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA2498](sub_214B9A3B8, 0, 0);
}

uint64_t sub_214B9A3B8()
{
  unint64_t v1 = v0[11];
  if (v1)
  {
    uint64_t v2 = v0[6];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = 0;
    unint64_t v1 = 0xE000000000000000;
  }
  uint64_t v3 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_214B9A434()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 296);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 312);
  uint64_t v14 = *(void *)(v0 + 304);
  char v12 = *(unsigned char *)(v0 + 320);
  uint64_t v9 = type metadata accessor for ODNAssessmentGUIDManager();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v15;
  *(void *)(v10 + 24) = v16;
  *(void *)(v10 + 32) = v1;
  *(void *)(v10 + 40) = v2;
  *(void *)(v10 + 48) = v3;
  *(void *)(v10 + 56) = v4;
  *(void *)(v10 + 64) = v6;
  *(void *)(v10 + 72) = v5;
  *(void *)(v10 + 80) = v7;
  *(void *)(v10 + 88) = v8;
  *(void *)(v10 + 96) = v14;
  *(void *)(v10 + 104) = v13;
  *(unsigned char *)(v10 + 112) = v12;
  _OWORD v18[3] = v9;
  v18[4] = &off_26C5A7070;
  v18[0] = v10;
  sub_214B6AC38((uint64_t)v18, (uint64_t)v17, &qword_26784D100);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_214BA658C(v1);
  sub_214BA65FC((uint64_t)v17, v0 + 328);
  return swift_endAccess();
}

uint64_t sub_214B9A574(uint64_t result, char *a2)
{
  if (result == 5)
  {
    uint64_t v4 = *(void *)(v2 + 240);
    *(_OWORD *)(v2 + 240) = 0u;
    *(_OWORD *)(v2 + 256) = 0u;
    *(_OWORD *)(v2 + 272) = 0u;
    *(_OWORD *)(v2 + 288) = 0u;
    *(_OWORD *)(v2 + 304) = 0u;
    *(unsigned char *)(v2 + 320) = 0;
    sub_214BA651C(v4);
    sub_214B9A434();
    uint64_t v5 = *(void *)(v2 + 160);
    uint64_t v11 = *(void *)(v2 + 152);
    uint64_t v6 = v11;
    uint64_t v12 = v5;
    LOBYTE(v9) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD000000000000072, 0x8000000214D306B0, &v9);
    swift_bridgeObjectRelease();
    LOBYTE(v11) = -118;
    id v7 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x8000000214D30730, a2, (unsigned __int8 *)&v11, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000002ALL, 0x8000000214D30760, 95);
    uint64_t v11 = v6;
    uint64_t v12 = v5;
    uint64_t v9 = 0x203A726F727245;
    unint64_t v10 = 0xE700000000000000;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v8 = v9;
    LOBYTE(v9) = 0;
    CoreODILogger.error(_:category:)(v8, v10, &v9);
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214B9A730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[19] = a3;
  v4[20] = v3;
  v4[18] = a2;
  return MEMORY[0x270FA2498](sub_214B9A754, v3, 0);
}

uint64_t sub_214B9A754()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B9A7F4;
  return sub_214BC3CB0(v0 + 16);
}

uint64_t sub_214B9A7F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v4 = sub_214B9ABBC;
  }
  else {
    uint64_t v4 = sub_214B9A920;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B9A920()
{
  uint64_t v1 = *(int **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  *(void *)(v0 + 192) = v2;
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 72);
  *(void *)(v0 + 208) = v4;
  long long v6 = *(_OWORD *)(v0 + 16);
  *(void *)(v0 + 184) = v6;
  long long v7 = *(_OWORD *)(v0 + 48);
  *(void *)(v0 + 200) = v7;
  *(_OWORD *)(v0 + 80) = v6;
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v3;
  *(_OWORD *)(v0 + 112) = v7;
  *(void *)(v0 + 128) = v4;
  *(void *)(v0 + 136) = v5;
  unint64_t v10 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_214B9AA28;
  return v10(v0 + 80);
}

uint64_t sub_214B9AA28()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B9AB38, v1, 0);
}

uint64_t sub_214B9AB38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B9ABBC()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(void **)(v0 + 176);
  char v4 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ALL, 0x8000000214D30650, &v4);
  swift_bridgeObjectRelease();
  char v4 = 1;
  swift_bridgeObjectRetain();
  CoreODILogger.error(_:category:)(0xD000000000000026, 0x8000000214D30680, &v4);

  swift_bridgeObjectRelease();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214B9ACBC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);

  sub_214BA651C(*(void *)(v0 + 240));
  sub_214B59CE0(v0 + 328, &qword_26784D100);
  memcpy(__dst, (const void *)(v0 + 368), 0x252uLL);
  sub_214BA5F0C(__dst);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_214B9AD68()
{
  sub_214B9ACBC();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAssessmentsManager()
{
  return self;
}

unint64_t sub_214B9ADB8(uint64_t a1)
{
  unint64_t result = sub_214B9ADE0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_214B9ADE0()
{
  unint64_t result = qword_26784D098;
  if (!qword_26784D098)
  {
    type metadata accessor for ODNAssessmentsManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784D098);
  }
  return result;
}

uint64_t sub_214B9AE34(uint64_t a1, uint64_t a2)
{
  v3[352] = v2;
  v3[351] = a2;
  v3[350] = a1;
  type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  v3[353] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D120);
  v3[354] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PregeneratedAssessment();
  v3[355] = v4;
  v3[356] = *(void *)(v4 - 8);
  v3[357] = swift_task_alloc();
  v3[358] = swift_task_alloc();
  v3[359] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B9AF74, v2, 0);
}

uint64_t sub_214B9AF74()
{
  uint64_t v1 = (void *)v0[352];
  v0[360] = v1[46];
  v0[361] = v1[47];
  v0[362] = v1[48];
  v0[363] = v1[49];
  uint64_t v2 = (void *)(v1[29] + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v0[364] = *v2;
  v0[365] = v2[1];
  uint64_t v3 = qword_26ACE3C10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)swift_task_alloc();
  v0[366] = v4;
  void *v4 = v0;
  v4[1] = sub_214B9B0A8;
  return sub_214C11404((uint64_t)(v0 + 186));
}

uint64_t sub_214B9B0A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2816);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B9B1B8, v1, 0);
}

uint64_t sub_214B9B1B8()
{
  uint64_t v30 = v0;
  long long v1 = *(_OWORD *)(v0 + 1696);
  *(_OWORD *)(v0 + 1928) = *(_OWORD *)(v0 + 1680);
  *(_OWORD *)(v0 + 1944) = v1;
  *(_OWORD *)(v0 + 1960) = *(_OWORD *)(v0 + 1712);
  *(unsigned char *)(v0 + 1976) = *(unsigned char *)(v0 + 1728);
  long long v2 = *(_OWORD *)(v0 + 1632);
  *(_OWORD *)(v0 + 1864) = *(_OWORD *)(v0 + 1616);
  *(_OWORD *)(v0 + 1880) = v2;
  long long v3 = *(_OWORD *)(v0 + 1664);
  *(_OWORD *)(v0 + 1896) = *(_OWORD *)(v0 + 1648);
  *(_OWORD *)(v0 + 1912) = v3;
  long long v4 = *(_OWORD *)(v0 + 1568);
  *(_OWORD *)(v0 + 1800) = *(_OWORD *)(v0 + 1552);
  *(_OWORD *)(v0 + 1816) = v4;
  long long v5 = *(_OWORD *)(v0 + 1600);
  *(_OWORD *)(v0 + 1832) = *(_OWORD *)(v0 + 1584);
  *(_OWORD *)(v0 + 1848) = v5;
  long long v6 = *(_OWORD *)(v0 + 1504);
  *(_OWORD *)(v0 + 1736) = *(_OWORD *)(v0 + 1488);
  *(_OWORD *)(v0 + 1752) = v6;
  long long v7 = *(_OWORD *)(v0 + 1536);
  *(_OWORD *)(v0 + 1768) = *(_OWORD *)(v0 + 1520);
  *(_OWORD *)(v0 + 1784) = v7;
  unint64_t v8 = *(void *)(v0 + 1968);
  if (v8) {
    swift_bridgeObjectRetain();
  }
  else {
    unint64_t v8 = sub_214B7F0DC(MEMORY[0x263F8EE78]);
  }
  uint64_t v9 = *(void *)(v0 + 2904);
  uint64_t v10 = *(void *)(v0 + 2896);
  sub_214B99814((void *)(v0 + 1736));
  LOBYTE(v27) = 0;
  swift_bridgeObjectRetain();
  BOOL v11 = sub_214C2C370((unsigned __int8 *)&v27, v10, v9, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 2816);
    uint64_t v13 = *(void *)(v0 + 2808);
    uint64_t v14 = *(void *)(v12 + 152);
    *(void *)(v0 + 2936) = v14;
    uint64_t v15 = *(void *)(v12 + 160);
    *(void *)(v0 + 2944) = v15;
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    char v29 = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000022, 0x8000000214D303D0, &v29);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v12 + 928) = 0;
    *(void *)(v0 + 2624) = &type metadata for AssessmentPregenerator;
    *(void *)(v0 + 2632) = &off_26C5AC580;
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 2600), (uint64_t)&type metadata for AssessmentPregenerator);
    uint64_t v16 = *(void *)(v13 + 8);
    long long v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 2952) = v17;
    *long long v17 = v0;
    v17[1] = sub_214B9B4E0;
    uint64_t v18 = *(void *)(v0 + 2904);
    uint64_t v19 = *(void *)(v0 + 2896);
    uint64_t v20 = *(void *)(v0 + 2832);
    return sub_214C19E1C(v20, v16, v19, v18);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 2816);
    uint64_t v23 = *(void *)(v0 + 2800);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v22 + 160);
    uint64_t v27 = *(void *)(v22 + 152);
    uint64_t v28 = v24;
    char v29 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000011, 0x8000000214D303B0, &v29);
    swift_bridgeObjectRelease();
    uint64_t v25 = type metadata accessor for ODNAssessmentResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 1, 1, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_214B9B4E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2960) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 2816);
  if (v0)
  {

    long long v4 = sub_214B9C400;
  }
  else
  {
    long long v4 = sub_214B9B618;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B9B618()
{
  uint64_t v95 = v0;
  uint64_t v1 = *(void *)(v0 + 2872);
  uint64_t v2 = *(void *)(v0 + 2832);
  uint64_t v3 = *(void *)(v0 + 2816);
  (*(void (**)(uint64_t, void, uint64_t, void))(*(void *)(v0 + 2848) + 56))(v2, 0, 1, *(void *)(v0 + 2840));
  sub_214BA6238(v2, v1);
  swift_beginAccess();
  sub_214BA5924(v3 + 328, v0 + 2680);
  uint64_t v4 = *(void *)(v0 + 2904);
  if (*(void *)(v0 + 2704))
  {
    long long v5 = *(void **)(v0 + 2960);
    uint64_t v6 = *(void *)(v0 + 2872);
    swift_bridgeObjectRelease();
    sub_214B59EC0((long long *)(v0 + 2680), v0 + 2560);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 2560), *(void *)(v0 + 2584));
    sub_214BFBA20(v6, v0 + 1216);
    if (v5)
    {
      unint64_t v7 = *(void *)(v0 + 2944);
      unint64_t v8 = *(void *)(v0 + 2936);
      uint64_t v9 = *(void *)(v0 + 2872);
      uint64_t v10 = *(void *)(v0 + 2800);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      unint64_t v93 = v8;
      unint64_t v94 = v7;
      LOBYTE(v91) = 14;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD000000000000015, 0x8000000214D30470, &v91);
      swift_bridgeObjectRelease();
      sub_214BA629C(v9, (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
      uint64_t v11 = type metadata accessor for ODNAssessmentResult();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
LABEL_11:
      __swift_destroy_boxed_opaque_existential_1(v0 + 2560);
      __swift_destroy_boxed_opaque_existential_1(v0 + 2600);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
      return v38();
    }
    uint64_t v23 = *(void *)(v0 + 2872);
    uint64_t v24 = *(void *)(v0 + 2840);
    memcpy((void *)(v0 + 944), (const void *)(v0 + 1216), 0x110uLL);
    uint64_t v25 = (uint64_t *)(v23 + *(int *)(v24 + 32));
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_214B69620(v27, v26);
    *(void *)(v0 + 2968) = v28;
    *(void *)(v0 + 2976) = v29;
    uint64_t v30 = v28;
    unint64_t v31 = v29;
    swift_bridgeObjectRelease();
    if (v31 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      sub_214BA62FC(v0 + 944);
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t v32 = *(void *)(v0 + 2944);
      uint64_t v33 = *(void *)(v0 + 2872);
      uint64_t v34 = *(void *)(v0 + 2800);
      uint64_t v91 = *(void *)(v0 + 2936);
      uint64_t v92 = v32;
      unint64_t v93 = 0;
      unint64_t v94 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v93 = 0xD000000000000021;
      unint64_t v94 = 0x8000000214D30490;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t v35 = v93;
      LOBYTE(v93) = 14;
      CoreODILogger.debug(_:category:)(v35, v94, &v93);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v33;
LABEL_10:
      sub_214BA629C(v36, (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
      uint64_t v37 = type metadata accessor for ODNAssessmentResult();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v34, 1, 1, v37);
      goto LABEL_11;
    }
    uint64_t v90 = v30;
    uint64_t v39 = sub_214D19AE8();
    if (v40 >> 60 == 15)
    {
      LOBYTE(v93) = 109;
      id v41 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, (unsigned __int8 *)&v93, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_214BA62FC(v0 + 944);
      sub_214B59EAC(v90, v31);
      swift_bridgeObjectRelease();

      goto LABEL_9;
    }
    unint64_t v87 = (long long *)(v0 + 944);
    uint64_t v42 = v39;
    unint64_t v43 = v40;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA6410();
    sub_214D19748();
    swift_release();
    uint64_t v44 = *(void *)(v0 + 2872);
    uint64_t v45 = *(void *)(v0 + 2840);
    sub_214B59EAC(v42, v43);
    uint64_t v46 = *(void *)(v0 + 2464);
    uint64_t v83 = *(void *)(v0 + 2472);
    uint64_t v84 = *(void *)(v0 + 2456);
    uint64_t v47 = *(void *)(v0 + 2480);
    uint64_t v82 = *(void *)(v0 + 2488);
    uint64_t v89 = *(void *)(v0 + 2496);
    uint64_t v81 = *(void *)(v0 + 2504);
    uint64_t v88 = *(void *)(v0 + 2512);
    uint64_t v48 = (uint64_t *)(v44 + *(int *)(v45 + 40));
    uint64_t v49 = *v48;
    uint64_t v50 = v48[1];
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_214B69620(v49, v50);
    *(void *)(v0 + 2984) = v51;
    *(void *)(v0 + 2992) = v52;
    uint64_t v79 = v51;
    uint64_t v80 = v46;
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    if (v53 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214BA62FC((uint64_t)v87);
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t v54 = *(void *)(v0 + 2944);
      uint64_t v55 = *(void *)(v0 + 2872);
      uint64_t v34 = *(void *)(v0 + 2800);
      uint64_t v91 = *(void *)(v0 + 2936);
      uint64_t v92 = v54;
      unint64_t v93 = 0;
      unint64_t v94 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v93 = 0xD00000000000001FLL;
      unint64_t v94 = 0x8000000214D30570;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t v56 = v93;
      LOBYTE(v93) = 14;
      CoreODILogger.debug(_:category:)(v56, v94, &v93);
      swift_bridgeObjectRelease();
      sub_214B59EAC(v90, v31);
      swift_bridgeObjectRelease();
      uint64_t v36 = v55;
      goto LABEL_10;
    }
    uint64_t v76 = v47;
    uint64_t v77 = sub_214D19AE8();
    if (v57 >> 60 == 15)
    {
      LOBYTE(v93) = 109;
      id v58 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, (unsigned __int8 *)&v93, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214BA62FC((uint64_t)v87);
      sub_214B59EAC(v79, v53);
      swift_bridgeObjectRelease();

      goto LABEL_18;
    }
    unint64_t v59 = v57;
    swift_allocObject();
    sub_214D19758();
    sub_214D19748();
    uint64_t v86 = *(void *)(v0 + 2872);
    uint64_t v85 = *(void *)(v0 + 2840);
    uint64_t v60 = *(void **)(v0 + 2816);
    swift_release();
    sub_214B59EAC(v77, v59);
    long long v61 = *(_OWORD *)(v0 + 1008);
    *(_OWORD *)(v0 + 2064) = *(_OWORD *)(v0 + 1024);
    long long v62 = *(_OWORD *)(v0 + 1056);
    *(_OWORD *)(v0 + 2080) = *(_OWORD *)(v0 + 1040);
    *(_OWORD *)(v0 + 2096) = v62;
    long long v63 = *v87;
    *(_OWORD *)(v0 + 2000) = *(_OWORD *)(v0 + 960);
    long long v64 = *(_OWORD *)(v0 + 992);
    *(_OWORD *)(v0 + 2016) = *(_OWORD *)(v0 + 976);
    long long v78 = *(_OWORD *)(v0 + 2392);
    *(_OWORD *)(v0 + 2032) = v64;
    long long v74 = *(_OWORD *)(v0 + 2408);
    *(_OWORD *)(v0 + 2048) = v61;
    long long v72 = *(_OWORD *)(v0 + 2424);
    uint64_t v73 = *(void *)(v0 + 2440);
    uint64_t v75 = *(void *)(v0 + 2448);
    *(void *)(v0 + 2112) = *(void *)(v0 + 1072);
    *(_OWORD *)(v0 + 1984) = v63;
    nullsub_1(v0 + 1984);
    long long v65 = *(_OWORD *)(v0 + 1192);
    *(_OWORD *)(v0 + 2216) = *(_OWORD *)(v0 + 1176);
    *(_OWORD *)(v0 + 2232) = v65;
    *(void *)(v0 + 2248) = *(void *)(v0 + 1208);
    long long v66 = *(_OWORD *)(v0 + 1128);
    *(_OWORD *)(v0 + 2152) = *(_OWORD *)(v0 + 1112);
    *(_OWORD *)(v0 + 2168) = v66;
    long long v67 = *(_OWORD *)(v0 + 1160);
    *(_OWORD *)(v0 + 2184) = *(_OWORD *)(v0 + 1144);
    *(_OWORD *)(v0 + 2200) = v67;
    long long v68 = *(_OWORD *)(v0 + 1096);
    *(_OWORD *)(v0 + 2120) = *(_OWORD *)(v0 + 1080);
    *(_OWORD *)(v0 + 2136) = v68;
    nullsub_1(v0 + 2120);
    sub_214B59FE8((uint64_t)v87);
    sub_214B6A3F8(v90, v31);
    sub_214B59FE8(v0 + 1080);
    sub_214B6A3F8(v79, v53);
    sub_214B6AC38(v0 + 1984, v0 + 16, qword_26ACE3630);
    *(void *)(v0 + 152) = 0;
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = v84;
    *(void *)(v0 + 176) = v80;
    *(void *)(v0 + 184) = v83;
    *(void *)(v0 + 192) = v76;
    *(void *)(v0 + 200) = v82;
    *(void *)(v0 + 208) = v89;
    *(void *)(v0 + 216) = v81;
    *(void *)(v0 + 224) = v88;
    *(void *)(v0 + 232) = v90;
    *(void *)(v0 + 240) = v31;
    sub_214B6AC38(v0 + 2120, v0 + 248, qword_26ACE3630);
    *(void *)(v0 + 384) = 0;
    *(void *)(v0 + 392) = 0;
    *(_OWORD *)(v0 + 400) = v78;
    *(_OWORD *)(v0 + 416) = v74;
    *(_OWORD *)(v0 + 432) = v72;
    *(void *)(v0 + 448) = v73;
    *(void *)(v0 + 456) = v75;
    *(void *)(v0 + 464) = v79;
    *(void *)(v0 + 472) = v53;
    memcpy((void *)(v0 + 480), v60 + 58, 0x1D0uLL);
    memcpy(v60 + 58, (const void *)(v0 + 16), 0x1D0uLL);
    sub_214BA598C((uint64_t *)(v0 + 480));
    uint64_t v69 = __swift_project_boxed_opaque_existential_1(v60 + 24, v60[27]);
    *(unsigned char *)(v0 + 1729) = *(unsigned char *)(v86 + *(int *)(v85 + 68));
    uint64_t v70 = (void *)(v86 + *(int *)(v85 + 72));
    *(void *)(v0 + 3000) = *v70;
    *(void *)(v0 + 3008) = v70[1];
    uint64_t v71 = *v69;
    *(void *)(v0 + 3016) = *v69;
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_214B9C5A4, v71, 0);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 2896);
    uint64_t v13 = *(void *)(v0 + 2872);
    uint64_t v14 = *(void *)(v0 + 2840);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B59CE0(v0 + 2680, &qword_26784D100);
    LOBYTE(v93) = -118;
    id v15 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x8000000214D30420, 0, (unsigned __int8 *)&v93, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD000000000000022, 0x8000000214D30440, 165);
    sub_214C6B5D0(v12, v4, v0 + 2520);
    sub_214B6AC38(v0 + 2544, v0 + 2768, &qword_26ACE4288);
    sub_214BA5200(v0 + 2768);
    swift_bridgeObjectRelease();

    uint64_t v16 = (uint64_t *)(v13 + *(int *)(v14 + 28));
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    char v19 = sub_214BA4DF0(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 3144) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_214B9D238;
    uint64_t v21 = *(void *)(v0 + 2800);
    return sub_214BA1CBC(v21, (long long *)(v0 + 2520), 0, v19 & 1);
  }
}

uint64_t sub_214B9C400()
{
  unint64_t v7 = v0;
  uint64_t v1 = v0[354];
  uint64_t v2 = v0[350];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[356] + 56))(v1, 1, 1, v0[355]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B59CE0(v1, &qword_26784D120);
  char v6 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000010, 0x8000000214D30400, &v6);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 325));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214B9C5A4()
{
  uint64_t v1 = *(void *)(v0 + 3016);
  uint64_t v2 = *(void *)(v0 + 3008);
  char v3 = *(unsigned char *)(v0 + 1729);
  swift_beginAccess();
  *(unsigned char *)(v1 + 112) = v3;
  if (v2)
  {
    *(_OWORD *)(*(void *)(v0 + 3016) + 120) = *(_OWORD *)(v0 + 3000);
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + 2816);
  return MEMORY[0x270FA2498](sub_214B9C650, v4, 0);
}

uint64_t sub_214B9C650()
{
  uint64_t v1 = *(void *)(v0 + 2888);
  uint64_t v2 = *(void *)(v0 + 2880);
  char v3 = *(void **)(v0 + 2864);
  uint64_t v4 = *(void *)(v0 + 2824);
  uint64_t v5 = *(void *)(v0 + 2816);
  uint64_t v6 = *(void *)(v0 + 2808);
  sub_214BA6464(*(void *)(v0 + 2872), (uint64_t)v3);
  *(_OWORD *)(v0 + 2640) = 0u;
  *(_OWORD *)(v0 + 2656) = 0u;
  *(void *)(v0 + 2672) = 1;
  sub_214C1E3F0(v2, v1, v3, v0 + 2640, v4);
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 192), *(void *)(v5 + 216));
  char v7 = *(unsigned char *)(v6 + 33);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 3024) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_214B9C76C;
  uint64_t v9 = *(void *)(v0 + 2824);
  return sub_214C1EC70(v9, v7);
}

uint64_t sub_214B9C76C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 3032) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 2816);
  if (v0) {
    uint64_t v4 = sub_214B9C998;
  }
  else {
    uint64_t v4 = sub_214B9C898;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214B9C898()
{
  *(void *)(v0 + 3040) = *(unsigned __int8 *)(v0 + 944) + 49;
  uint64_t v1 = *(void *)(v0 + 2872);
  uint64_t v2 = *(void *)(v0 + 2856);
  *(void *)(v0 + 3048) = *(void *)(v0 + 1016);
  *(void *)(v0 + 3056) = *(void *)(v0 + 1024);
  *(void *)(v0 + 3064) = *(void *)(v0 + 1032);
  *(void *)(v0 + 3072) = *(void *)(v0 + 1040);
  *(void *)(v0 + 3080) = *(void *)(v0 + 1048);
  *(void *)(v0 + 3088) = *(void *)(v0 + 1056);
  sub_214BA6464(v1, v2);
  uint64_t v3 = qword_26784C878;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_2678635D8;
  *(void *)(v0 + 3096) = qword_2678635D8;
  return MEMORY[0x270FA2498](sub_214B9CCCC, v4, 0);
}

uint64_t sub_214B9C998()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0 + 3032);
  *(void *)(v0 + 2784) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {

    unint64_t v3 = *(void *)(v0 + 2792);
    sub_214BA2144(v3);
    sub_214BA621C(v3);

    *(void *)(v0 + 3040) = *(unsigned __int8 *)(v0 + 944) + 49;
    uint64_t v4 = *(void *)(v0 + 2872);
    uint64_t v5 = *(void *)(v0 + 2856);
    *(void *)(v0 + 3048) = *(void *)(v0 + 1016);
    *(void *)(v0 + 3056) = *(void *)(v0 + 1024);
    *(void *)(v0 + 3064) = *(void *)(v0 + 1032);
    *(void *)(v0 + 3072) = *(void *)(v0 + 1040);
    *(void *)(v0 + 3080) = *(void *)(v0 + 1048);
    *(void *)(v0 + 3088) = *(void *)(v0 + 1056);
    sub_214BA6464(v4, v5);
    uint64_t v6 = qword_26784C878;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_2678635D8;
    *(void *)(v0 + 3096) = qword_2678635D8;
    return MEMORY[0x270FA2498](sub_214B9CCCC, v7, 0);
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 3032);
    unint64_t v9 = *(void *)(v0 + 2992);
    uint64_t v10 = *(void *)(v0 + 2984);
    unint64_t v11 = *(void *)(v0 + 2976);
    uint64_t v12 = *(void *)(v0 + 2968);
    uint64_t v13 = *(void *)(v0 + 2824);
    uint64_t v17 = *(void *)(v0 + 2872);
    uint64_t v18 = *(void *)(v0 + 2800);
    swift_bridgeObjectRelease();
    sub_214BA62FC(v0 + 944);

    char v19 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000019, 0x8000000214D30590, &v19);

    sub_214B59EAC(v10, v9);
    sub_214B59EAC(v12, v11);
    swift_bridgeObjectRelease();
    sub_214BA629C(v13, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
    sub_214BA629C(v17, (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
    uint64_t v14 = type metadata accessor for ODNAssessmentResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v18, 1, 1, v14);
    __swift_destroy_boxed_opaque_existential_1(v0 + 2560);
    __swift_destroy_boxed_opaque_existential_1(v0 + 2600);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_214B9CCCC()
{
  uint64_t v1 = v0[387];
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 112);
    v0[392] = v2;
    v0[391] = v3;
    uint64_t v4 = v0[352];
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_214B9CF60, v4, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[388] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_214B9CDB4;
    return sub_214BCE8CC();
  }
}

uint64_t sub_214B9CDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 3096);
  *(void *)(v3 + 3112) = a1;
  *(void *)(v3 + 3120) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B9CED0, v4, 0);
}

uint64_t sub_214B9CED0()
{
  uint64_t v1 = v0[390];
  uint64_t v2 = v0[387];
  *(void *)(v2 + 112) = v0[389];
  *(void *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[389];
  v0[392] = v0[390];
  v0[391] = v3;
  uint64_t v4 = v0[352];
  return MEMORY[0x270FA2498](sub_214B9CF60, v4, 0);
}

uint64_t sub_214B9CF60()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void *)(v0 + 3136);
  uint64_t v2 = *(void *)(v0 + 3128);
  uint64_t v3 = *(void *)(v0 + 3088);
  uint64_t v4 = *(void *)(v0 + 3080);
  long long v27 = *(_OWORD *)(v0 + 3048);
  long long v28 = *(_OWORD *)(v0 + 3064);
  uint64_t v5 = *(void *)(v0 + 3040);
  uint64_t v29 = *(void *)(v0 + 2984);
  unint64_t v30 = *(void *)(v0 + 2992);
  uint64_t v31 = *(void *)(v0 + 2968);
  uint64_t v6 = *(void *)(v0 + 2920);
  uint64_t v7 = *(void *)(v0 + 2912);
  uint64_t v8 = *(void *)(v0 + 2872);
  uint64_t v9 = *(void *)(v0 + 2864);
  uint64_t v10 = *(uint64_t **)(v0 + 2856);
  uint64_t v32 = *(void *)(v0 + 2824);
  unint64_t v33 = *(void *)(v0 + 2976);
  uint64_t v11 = *(void *)(v0 + 2800);
  LOBYTE(v39[0]) = -47;
  sub_214C58808(v10, v2, v1, v7, v6, 0, (char *)v39, v0 + 2256);
  sub_214BA6464(v8, v9);
  *(void *)&v34[0] = v5;
  *((void *)&v34[0] + 1) = 0xE100000000000000;
  v34[1] = v27;
  _OWORD v34[2] = v28;
  uint64_t v35 = v4;
  uint64_t v36 = v3;
  long long v12 = *(_OWORD *)(v0 + 1056);
  v37[6] = *(_OWORD *)(v0 + 1040);
  v37[7] = v12;
  uint64_t v38 = *(void *)(v0 + 1072);
  long long v13 = *(_OWORD *)(v0 + 992);
  v37[2] = *(_OWORD *)(v0 + 976);
  v37[3] = v13;
  long long v14 = *(_OWORD *)(v0 + 1024);
  v37[4] = *(_OWORD *)(v0 + 1008);
  v37[5] = v14;
  long long v15 = *(_OWORD *)(v0 + 960);
  v37[0] = *(_OWORD *)(v0 + 944);
  v37[1] = v15;
  long long v16 = *(_OWORD *)(v0 + 1192);
  v39[6] = *(_OWORD *)(v0 + 1176);
  v39[7] = v16;
  uint64_t v40 = *(void *)(v0 + 1208);
  long long v17 = *(_OWORD *)(v0 + 1128);
  v39[2] = *(_OWORD *)(v0 + 1112);
  v39[3] = v17;
  long long v18 = *(_OWORD *)(v0 + 1160);
  v39[4] = *(_OWORD *)(v0 + 1144);
  v39[5] = v18;
  long long v19 = *(_OWORD *)(v0 + 1096);
  v39[0] = *(_OWORD *)(v0 + 1080);
  v39[1] = v19;
  long long v20 = *(_OWORD *)(v0 + 2336);
  long long v21 = *(_OWORD *)(v0 + 2368);
  v41[6] = *(_OWORD *)(v0 + 2352);
  v41[7] = v21;
  char v42 = *(unsigned char *)(v0 + 2384);
  long long v22 = *(_OWORD *)(v0 + 2272);
  long long v23 = *(_OWORD *)(v0 + 2304);
  v41[2] = *(_OWORD *)(v0 + 2288);
  v41[3] = v23;
  v41[4] = *(_OWORD *)(v0 + 2320);
  v41[5] = v20;
  v41[0] = *(_OWORD *)(v0 + 2256);
  v41[1] = v22;
  sub_214B59FE8(v0 + 944);
  sub_214B59FE8(v0 + 1080);
  sub_214BA57B0(v0 + 2256);
  sub_214BD46D8(v9, v34, (uint64_t)v37, (uint64_t)v39, (uint64_t)v41, v11);
  sub_214BA62FC(v0 + 944);
  sub_214BA5898(v0 + 2256);
  sub_214B59EAC(v29, v30);
  sub_214B59EAC(v31, v33);
  sub_214BA629C(v32, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_214BA629C(v8, (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
  uint64_t v24 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2560);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2600);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_214B9D238()
{
  uint64_t v1 = *(void *)v0 + 2520;
  uint64_t v2 = *(void *)(*(void *)v0 + 2816);
  swift_task_dealloc();
  sub_214BA522C(v1);
  return MEMORY[0x270FA2498](sub_214B9D354, v2, 0);
}

uint64_t sub_214B9D354()
{
  uint64_t v1 = v0[350];
  sub_214BA629C(v0[359], (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
  uint64_t v2 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 325));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214B9D458(uint64_t a1, uint64_t a2)
{
  v3[494] = v2;
  v3[493] = a2;
  v3[492] = a1;
  uint64_t v4 = sub_214D1A0A8();
  v3[495] = v4;
  v3[496] = *(void *)(v4 - 8);
  v3[497] = swift_task_alloc();
  uint64_t v5 = sub_214D19CC8();
  v3[498] = v5;
  v3[499] = *(void *)(v5 - 8);
  v3[500] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214B9D57C, v2, 0);
}

uint64_t sub_214B9D57C()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(void *)(v0 + 3952);
  *(void *)(v0 + 4008) = *(void *)(v1 + 152);
  *(void *)(v0 + 4016) = *(void *)(v1 + 160);
  char v4 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000018, 0x8000000214D2FF80, &v4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + 2972) = MKBGetDeviceLockState();
  *(unsigned char *)(v1 + 928) = 1;
  *(void *)(v0 + 4024) = *(void *)(v1 + 432);
  *(void *)(v0 + 4032) = *(void *)(v1 + 440);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4040) = v2;
  void *v2 = v0;
  v2[1] = sub_214B9D6AC;
  return sub_214BC3CB0(v0 + 3504);
}

uint64_t sub_214B9D6AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 4048) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 3952);
    swift_bridgeObjectRelease();
    char v4 = sub_214B9EDAC;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 3952);
    char v4 = sub_214B9D7D4;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_214B9D7D4()
{
  long long v1 = *(_OWORD *)(v0 + 3504);
  *(_OWORD *)(v0 + 3248) = v1;
  long long v2 = *(_OWORD *)(v0 + 3520);
  *(_OWORD *)(v0 + 3264) = v2;
  long long v3 = *(_OWORD *)(v0 + 3536);
  *(_OWORD *)(v0 + 3280) = v3;
  long long v4 = *(_OWORD *)(v0 + 3552);
  *(_OWORD *)(v0 + 3296) = v4;
  *(_OWORD *)(v0 + 3568) = v1;
  *(_OWORD *)(v0 + 3584) = v2;
  *(_OWORD *)(v0 + 3600) = v3;
  *(_OWORD *)(v0 + 3616) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 4056) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_214B9D8BC;
  uint64_t v6 = *(void *)(v0 + 3952);
  uint64_t v7 = *(void *)(v0 + 3568);
  v5[2] = v6;
  _OWORD v5[3] = v7;
  uint64_t v8 = *(void *)(v0 + 3616);
  v5[4] = *(void *)(v0 + 3608);
  v5[5] = v8;
  return MEMORY[0x270FA2498](sub_214BA2570, v6, 0);
}

uint64_t sub_214B9D8BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 3952);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214B9D9CC, v1, 0);
}

uint64_t sub_214B9D9CC()
{
  uint64_t v180 = v0;
  long long v1 = *(_OWORD *)(v0 + 3264);
  v177[0] = *(_OWORD *)(v0 + 3248);
  v177[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 3296);
  v177[2] = *(_OWORD *)(v0 + 3280);
  v177[3] = v2;
  sub_214BA27E4((uint64_t)v177);
  uint64_t v3 = sub_214D19AE8();
  *(void *)(v0 + 4064) = v3;
  *(void *)(v0 + 4072) = v4;
  if (v4 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    sub_214BA531C();
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
LABEL_6:
    sub_214BA5370(v0 + 3248);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    long long v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  uint64_t v6 = v3;
  unint64_t v7 = v4;
  if (!*(void *)(v0 + 3280)
    || (swift_bridgeObjectRetain(),
        uint64_t v8 = sub_214D19AE8(),
        unint64_t v10 = v9,
        swift_bridgeObjectRelease(),
        *(void *)(v0 + 4080) = v8,
        *(void *)(v0 + 4088) = v10,
        v10 >> 60 == 15))
  {
    swift_bridgeObjectRelease();
    sub_214BA531C();
    swift_allocError();
    void *v11 = 1;
    swift_willThrow();
    sub_214B59EAC(v6, v7);
    goto LABEL_6;
  }
  v176 = (_OWORD *)(v0 + 3248);
  long long v14 = *(void **)(v0 + 3952);
  sub_214B6AC38((uint64_t)(v14 + 58), v0 + 2704, qword_26ACE3630);
  uint64_t v15 = v14[76];
  uint64_t v16 = v14[78];
  unint64_t v174 = v14[86];
  sub_214B6AC38((uint64_t)(v14 + 87), v0 + 2568, qword_26ACE3630);
  uint64_t v17 = v14[105];
  uint64_t v18 = v14[107];
  unint64_t v19 = v14[115];
  sub_214B6AC38(v0 + 2704, v0 + 2432, qword_26ACE3630);
  if (sub_214B58B0C(v0 + 2432) == 1
    || (sub_214B6AC38(v0 + 2568, v0 + 2296, qword_26ACE3630), sub_214B58B0C(v0 + 2296) == 1)
    || !v16
    || !v18
    || !v15
    || !v17
    || v174 >> 60 == 15
    || v19 >> 60 == 15)
  {
    uint64_t v20 = *(void *)(v0 + 3952) + 328;
    swift_beginAccess();
    sub_214BA5924(v20, v0 + 3800);
    if (*(void *)(v0 + 3824))
    {
      sub_214B59EC0((long long *)(v0 + 3800), v0 + 3760);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 3760), *(void *)(v0 + 3784));
      long long v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 4096) = v21;
      *long long v21 = v0;
      v21[1] = sub_214B9EE1C;
      return sub_214BFC4A0(v0 + 1280);
    }
    sub_214B59CE0(v0 + 3800, &qword_26784D100);
  }
  uint64_t v156 = v0 + 3680;
  uint64_t v161 = v0 + 3840;
  uint64_t v159 = *(void *)(v0 + 4048);
  long long v22 = *(void **)(v0 + 3952);
  sub_214B6AC38((uint64_t)(v22 + 58), v0 + 2160, qword_26ACE3630);
  uint64_t v23 = v22[85];
  *(void *)(v0 + 4112) = v23;
  unint64_t v24 = v22[86];
  *(void *)(v0 + 4120) = v24;
  uint64_t v141 = v22[75];
  uint64_t v172 = v22[76];
  uint64_t v25 = v22[77];
  uint64_t v26 = v22[79];
  uint64_t v27 = v22[80];
  uint64_t v28 = v22[81];
  uint64_t v29 = v22[82];
  uint64_t v30 = v22[83];
  uint64_t v152 = v22[78];
  uint64_t v154 = v25;
  unint64_t v31 = v152;
  uint64_t v32 = v22[84];
  uint64_t v170 = v23;
  if (!v152)
  {
    sub_214B6AC38(v0 + 2160, v0 + 1888, qword_26ACE3630);
    if (sub_214B58B0C(v0 + 1888) == 1)
    {
      uint64_t v25 = 0;
      unint64_t v31 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v25 = *(unsigned __int8 *)(v0 + 1888) + 49;
      uint64_t v26 = *(void *)(v0 + 1960);
      uint64_t v27 = *(void *)(v0 + 1968);
      uint64_t v28 = *(void *)(v0 + 1976);
      uint64_t v33 = *(void *)(v0 + 1984);
      uint64_t v166 = *(void *)(v0 + 1992);
      uint64_t v32 = *(void *)(v0 + 2000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v30 = v166;
      uint64_t v29 = v33;
      unint64_t v31 = 0xE100000000000000;
    }
  }
  v168 = (void *)(v0 + 2160);
  unint64_t v175 = v24;
  uint64_t v34 = *(void **)(v0 + 3952);
  *(void *)(v0 + 3312) = v25;
  uint64_t v144 = v31;
  *(void *)(v0 + 3320) = v31;
  *(void *)(v0 + 3328) = v26;
  *(void *)(v0 + 3336) = v27;
  *(void *)(v0 + 3344) = v28;
  *(void *)(v0 + 3352) = v29;
  *(void *)(v0 + 3360) = v30;
  *(void *)(v0 + 3368) = v32;
  sub_214B6AC38((uint64_t)(v34 + 87), v0 + 1616, qword_26ACE3630);
  uint64_t v35 = v34[106];
  uint64_t v36 = v34[107];
  uint64_t v37 = v35;
  unint64_t v38 = v36;
  uint64_t v39 = v34[108];
  uint64_t v40 = v34[109];
  uint64_t v41 = v34[110];
  uint64_t v42 = v34[111];
  uint64_t v43 = v34[112];
  uint64_t v44 = v34[113];
  uint64_t v145 = v25;
  if (!v36)
  {
    uint64_t v45 = v34[106];
    sub_214B6AC38(v0 + 1616, v0 + 1752, qword_26ACE3630);
    if (sub_214B58B0C(v0 + 1752) == 1)
    {
      uint64_t v37 = 0;
      unint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v43 = 0;
      uint64_t v44 = 0;
    }
    else
    {
      uint64_t v37 = *(unsigned __int8 *)(v0 + 1752) + 49;
      uint64_t v39 = *(void *)(v0 + 1824);
      uint64_t v46 = *(void *)(v0 + 1832);
      uint64_t v47 = *(void *)(v0 + 1840);
      uint64_t v42 = *(void *)(v0 + 1848);
      uint64_t v164 = *(void *)(v0 + 1856);
      uint64_t v48 = *(void *)(v0 + 1864);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v44 = v48;
      uint64_t v43 = v164;
      uint64_t v41 = v47;
      uint64_t v40 = v46;
      unint64_t v38 = 0xE100000000000000;
    }
    uint64_t v35 = v45;
    uint64_t v36 = 0;
  }
  uint64_t v146 = v35;
  uint64_t v142 = v38;
  uint64_t v143 = v37;
  uint64_t v147 = *(void *)(v0 + 4008);
  uint64_t v148 = *(void *)(v0 + 4016);
  uint64_t v49 = *(void **)(v0 + 3952);
  *(void *)(v0 + 3376) = v37;
  *(void *)(v0 + 3384) = v38;
  *(void *)(v0 + 3392) = v39;
  *(void *)(v0 + 3400) = v40;
  *(void *)(v0 + 3408) = v41;
  *(void *)(v0 + 3416) = v42;
  *(void *)(v0 + 3424) = v43;
  *(void *)(v0 + 3432) = v44;
  uint64_t v163 = v49[104];
  uint64_t v50 = v49[105];
  *(void *)(v0 + 4128) = v50;
  uint64_t v51 = (char *)v49[29];
  unint64_t v52 = *(void **)&v51[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession];
  sub_214B93DCC((uint64_t)&v51[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], v161);
  unint64_t v53 = (char *)objc_allocWithZone((Class)type metadata accessor for DIPAssessmentWebService());
  uint64_t v54 = &v53[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(void *)uint64_t v54 = 0x726F5F646E65732FLL;
  *((void *)v54 + 1) = 0xE900000000000064;
  uint64_t v55 = &v53[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(void *)uint64_t v55 = 0x746F5F646E65732FLL;
  *((void *)v55 + 1) = 0xE900000000000064;
  sub_214B93DCC(v161, v156);
  sub_214B79260(v154, v152);
  uint64_t v56 = v51;
  id v57 = v52;
  sub_214B79260(v146, v36);
  swift_bridgeObjectRetain();
  sub_214BA541C((void *)(v0 + 1616), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  sub_214BA541C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  sub_214B6A3F8(v170, v175);
  swift_bridgeObjectRetain();
  id v58 = sub_214C3EAE4(v57, v156);

  __swift_destroy_boxed_opaque_existential_1(v161);
  unint64_t v59 = (void *)v49[29];
  v49[29] = v58;

  sub_214D19CB8();
  uint64_t v60 = sub_214D19C88();
  uint64_t v62 = v61;
  *(void *)(v0 + 4136) = v60;
  *(void *)(v0 + 4144) = v61;
  uint64_t v63 = sub_214D19C88();
  uint64_t v65 = v64;
  *(void *)(v0 + 4152) = v64;
  uint64_t v178 = v147;
  uint64_t v179 = v148;
  *(void *)&v177[0] = 0;
  *((void *)&v177[0] + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  *(void *)&v177[0] = 0x737420676E697375;
  *((void *)&v177[0] + 1) = 0xEB00000000206469;
  sub_214D19C88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)&v177[0];
  LOBYTE(v177[0]) = 8;
  CoreODILogger.debug(_:category:)(v66, *((unint64_t *)&v177[0] + 1), v177);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  uint64_t v155 = v60;
  *(void *)(v0 + 3632) = v60;
  uint64_t v162 = v62;
  *(void *)(v0 + 3640) = v62;
  uint64_t v67 = v63;
  *(void *)(v0 + 3648) = v63;
  uint64_t v157 = v65;
  *(void *)(v0 + 3656) = v65;
  *(void *)(v0 + 3664) = v163;
  *(void *)(v0 + 3672) = v50;
  sub_214BA53C8();
  uint64_t v68 = sub_214D19778();
  *(void *)(v0 + 4160) = v68;
  *(void *)(v0 + 4168) = v69;
  if (v159)
  {
    unint64_t v70 = *(void *)(v0 + 4088);
    uint64_t v71 = *(void *)(v0 + 4080);
    unint64_t v72 = *(void *)(v0 + 4072);
    uint64_t v73 = *(void *)(v0 + 4064);
    (*(void (**)(void, void))(*(void *)(v0 + 3992) + 8))(*(void *)(v0 + 4000), *(void *)(v0 + 3984));
    swift_bridgeObjectRelease();
    sub_214BA541C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    swift_bridgeObjectRelease();
    sub_214BA541C((void *)(v0 + 1616), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    swift_release();
    sub_214B59EAC(v170, v175);
    sub_214B59EAC(v71, v70);
    sub_214B7902C(v145, v144);
    sub_214B7902C(v143, v142);
    sub_214B59EAC(v73, v72);
    sub_214BA5370((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v74 = v68;
  unint64_t v75 = v69;
  uint64_t v151 = v67;
  uint64_t v153 = v50;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF98);
  uint64_t v76 = swift_allocObject();
  *(_OWORD *)(v76 + 16) = xmmword_214D1C1E0;
  *(void *)(v76 + 32) = v74;
  *(void *)(v76 + 40) = v75;
  v160 = (void *)v76;
  sub_214B6AC38((uint64_t)v176, v0 + 3920, &qword_26784D0D8);
  sub_214B6AC38(v0 + 3920, v0 + 3928, &qword_26784D0D8);
  uint64_t v77 = *(void **)(v0 + 3928);
  unint64_t v158 = v75;
  uint64_t v78 = v74;
  if (v77)
  {
    uint64_t v79 = v162;
    uint64_t v80 = v172;
    if (v77[20])
    {
      uint64_t v81 = v77[25];
      uint64_t v82 = v77[26];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v81 = 0;
      uint64_t v82 = 0;
    }
  }
  else
  {
    uint64_t v81 = 0;
    uint64_t v82 = 0;
    uint64_t v79 = v162;
    uint64_t v80 = v172;
  }
  if (v80) {
    uint64_t v83 = v141;
  }
  else {
    uint64_t v83 = 0;
  }
  if (!v80) {
    uint64_t v80 = 0xE000000000000000;
  }
  sub_214B6A3A0(v74, v158);
  uint64_t v84 = v155;
  uint64_t v85 = sub_214BFD5C0(v81, v82, v155, v79, v83, v80);
  *(void *)(v0 + 4176) = v85;
  *(void *)(v0 + 4184) = v86;
  uint64_t v87 = v79;
  uint64_t v169 = v86;
  uint64_t v173 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v173 && *(void *)(v173 + 24))
  {
    uint64_t v88 = *(void *)(v0 + 3976);
    uint64_t v89 = *(void *)(v0 + 3968);
    uint64_t v90 = *(void *)(v0 + 3960);
    swift_bridgeObjectRetain();
    sub_214D1A088();
    uint64_t v167 = sub_214D1A048();
    unint64_t v92 = v91;
    swift_bridgeObjectRelease();
    unint64_t v93 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v93(v88, v90);
    if (v92 >> 60 != 15)
    {
      uint64_t v94 = v163;
      uint64_t v84 = v155;
      if (!v169 || !*(void *)(v169 + 24))
      {
        sub_214B59EAC(v167, v92);
        goto LABEL_49;
      }
      unint64_t v165 = v92;
      uint64_t v127 = *(void *)(v0 + 3976);
      uint64_t v149 = *(void *)(v0 + 3960);
      swift_bridgeObjectRetain();
      sub_214D1A088();
      uint64_t v150 = sub_214D1A048();
      unint64_t v129 = v128;
      swift_bridgeObjectRelease();
      v93(v127, v149);
      if (v129 >> 60 != 15)
      {
        unint64_t v130 = v129;
        sub_214B6A3A0(v78, v158);
        unint64_t v132 = v160[2];
        unint64_t v131 = v160[3];
        unint64_t v133 = v132 + 1;
        uint64_t v94 = v163;
        if (v132 >= v131 >> 1) {
          v160 = sub_214B876DC((void *)(v131 > 1), v132 + 1, 1, v160);
        }
        v160[2] = v133;
        v134 = &v160[2 * v132];
        v134[4] = v78;
        v134[5] = v158;
        sub_214B6A3A0(v150, v130);
        unint64_t v135 = v160[3];
        unint64_t v136 = v132 + 2;
        if ((uint64_t)(v132 + 2) > (uint64_t)(v135 >> 1)) {
          v160 = sub_214B876DC((void *)(v135 > 1), v132 + 2, 1, v160);
        }
        uint64_t v137 = *(void *)(v0 + 4016);
        uint64_t v138 = *(void *)(v0 + 4008);
        v160[2] = v136;
        v139 = &v160[2 * v133];
        v139[4] = v150;
        v139[5] = v130;
        uint64_t v178 = v138;
        uint64_t v179 = v137;
        *(void *)&v177[0] = 0;
        *((void *)&v177[0] + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        *(void *)&v177[0] = 0x6469737420726F66;
        *((void *)&v177[0] + 1) = 0xE900000000000020;
        sub_214D19C88();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        sub_214D1A108();
        sub_214D19B48();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        uint64_t v140 = *(void *)&v177[0];
        LOBYTE(v177[0]) = 8;
        CoreODILogger.debug(_:category:)(v140, *((unint64_t *)&v177[0] + 1), v177);
        sub_214B59EAC(v167, v165);
        swift_bridgeObjectRelease();
        sub_214B59EAC(v150, v130);
        swift_bridgeObjectRelease();
        uint64_t v95 = v162;
        uint64_t v84 = v155;
        goto LABEL_50;
      }
      sub_214B59EAC(v167, v92);
    }
    uint64_t v94 = v163;
    uint64_t v84 = v155;
  }
  else
  {
    uint64_t v94 = v163;
  }
LABEL_49:
  uint64_t v95 = v87;
LABEL_50:
  *(void *)(v0 + 4192) = v160;
  uint64_t v96 = *(void *)(v0 + 4032);
  uint64_t v97 = *(void *)(v0 + 3952);
  uint64_t v98 = *(void *)(v0 + 3944);
  BOOL v99 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
  uint64_t v100 = swift_allocObject();
  *(void *)(v0 + 4200) = v100;
  *(void *)(v100 + 16) = v97;
  long long v101 = *(_OWORD *)(v0 + 3264);
  *(_OWORD *)(v100 + 24) = *v176;
  *(_OWORD *)(v100 + 40) = v101;
  long long v102 = *(_OWORD *)(v0 + 3296);
  *(_OWORD *)(v100 + 56) = *(_OWORD *)(v0 + 3280);
  *(_OWORD *)(v100 + 72) = v102;
  *(unsigned char *)(v100 + 88) = v99;
  sub_214B6AC38(v0 + 3312, v100 + 96, &qword_26784D0E8);
  sub_214B6AC38(v0 + 3376, v100 + 160, &qword_26784D0E8);
  *(void *)(v100 + 224) = v84;
  *(void *)(v100 + 232) = v95;
  *(void *)(v100 + 240) = v151;
  *(void *)(v100 + 248) = v157;
  *(void *)(v100 + 256) = v94;
  *(void *)(v100 + 264) = v153;
  *(void *)(v100 + 272) = v173;
  *(void *)(v100 + 280) = v169;
  __int16 v103 = *(_WORD *)(v98 + 32);
  long long v104 = *(_OWORD *)(v98 + 16);
  *(_OWORD *)(v100 + 288) = *(_OWORD *)v98;
  *(_OWORD *)(v100 + 304) = v104;
  *(_WORD *)(v100 + 320) = v103;
  if (v175 >> 60 == 15 || !v96)
  {
    uint64_t v120 = *(void *)(v0 + 4032);
    uint64_t v121 = *(void *)(v0 + 4024);
    int v171 = *(_DWORD *)(v0 + 2972);
    uint64_t v122 = *(void *)(v0 + 4016);
    uint64_t v123 = *(void *)(v0 + 4008);
    uint64_t v124 = *(void *)(v0 + 3944);
    sub_214BA5714((uint64_t)v176);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_214BA576C(v124);
    swift_bridgeObjectRelease();
    *(void *)&v177[0] = v123;
    *((void *)&v177[0] + 1) = v122;
    LOBYTE(v178) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.error(_:category:)(0xD00000000000002FLL, 0x8000000214D2FFA0, &v178);
    swift_bridgeObjectRelease();
    LOWORD(v177[0]) = 161;
    *(void *)(v0 + 4328) = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int16 *)v177, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000001CLL, 0x8000000214D2FFD0, 481);
    sub_214C6B5D0(v121, v120, v0 + 3720);
    *(_OWORD *)(v0 + 4336) = *(_OWORD *)(v0 + 3720);
    *(unsigned char *)(v0 + 2969) = *(unsigned char *)(v0 + 3736);
    *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 3744);
    sub_214B6AC38(v0 + 3744, v0 + 3904, &qword_26ACE4288);
    sub_214BA5200(v0 + 3904);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 4368) = *(void *)(v0 + 3288);
    *(void *)(v0 + 4376) = *(void *)(v0 + 3296);
    swift_bridgeObjectRetain();
    uint64_t v125 = swift_task_alloc();
    *(void *)(v0 + 4384) = v125;
    *(void *)uint64_t v125 = v0;
    *(void *)(v125 + 8) = sub_214BA0D74;
    uint64_t v126 = *(void *)(v0 + 3952);
    *(void *)(v125 + 24) = 0;
    *(void *)(v125 + 32) = v126;
    *(unsigned char *)(v125 + 120) = (v171 - 1) < 2;
    *(void *)(v125 + 16) = v0 + 2976;
    return MEMORY[0x270FA2498](sub_214BA4984, v126, 0);
  }
  else
  {
    uint64_t v105 = *(void *)(v0 + 3944);
    swift_bridgeObjectRetain();
    sub_214B6A3F8(v170, v175);
    sub_214BA5714((uint64_t)v176);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_214BA576C(v105);
    if (qword_26784C858 != -1) {
      swift_once();
    }
    unint64_t v106 = *(void *)(v0 + 4088);
    uint64_t v107 = *(void *)(v0 + 4080);
    uint64_t v108 = *(void *)(v0 + 4032);
    uint64_t v109 = *(void *)(v0 + 3944);
    uint64_t v110 = *(void *)(v109 + 8);
    *(void *)(v0 + 4208) = v110;
    uint64_t v111 = *(void *)(v109 + 16);
    uint64_t v112 = *(void *)(v109 + 24);
    char v113 = *(unsigned char *)(v109 + 32);
    sub_214B6A3F8(v107, v106);
    swift_retain();
    v114 = (void *)swift_task_alloc();
    *(void *)(v0 + 4216) = v114;
    void *v114 = v0;
    v114[1] = sub_214BA0234;
    uint64_t v115 = *(void *)(v0 + 4088);
    uint64_t v116 = *(void *)(v0 + 4080);
    uint64_t v117 = *(void *)(v0 + 4072);
    uint64_t v118 = *(void *)(v0 + 4064);
    uint64_t v119 = *(void *)(v0 + 4024);
    v189 = &unk_26784D0F0;
    uint64_t v190 = v100;
    char v188 = v113;
    char v187 = 0;
    uint64_t v185 = v119;
    uint64_t v186 = v108;
    uint64_t v183 = v170;
    unint64_t v184 = v175;
    v182 = v160;
    return sub_214B673B8(v0 + 3440, v118, v117, v116, v115, v110, v111, v112);
  }
}

uint64_t sub_214B9EDAC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  long long v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214B9EE1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 4104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 3952);
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_214BA0184;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 3952);
    unint64_t v4 = sub_214B9EF44;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_214B9EF44()
{
  uint64_t v163 = v0;
  uint64_t v157 = (void *)(v0 + 2160);
  uint64_t v150 = (void *)(v0 + 1616);
  uint64_t v133 = v0 + 3680;
  uint64_t v139 = v0 + 3840;
  uint64_t v151 = (void *)(*(void *)(v0 + 3952) + 464);
  memcpy((void *)(v0 + 944), (const void *)(v0 + 1280), 0x150uLL);
  uint64_t v137 = *(void *)(v0 + 1080);
  uint64_t v1 = *(void *)(v0 + 1088);
  uint64_t v2 = *(void *)(v0 + 1096);
  unint64_t v3 = *(void *)(v0 + 1104);
  uint64_t v141 = *(void *)(v0 + 1248);
  uint64_t v4 = *(void *)(v0 + 1256);
  uint64_t v5 = *(void *)(v0 + 1264);
  unint64_t v6 = *(void *)(v0 + 1272);
  sub_214B6AC38(v0 + 944, v0 + 16, qword_26ACE3630);
  *(void *)(v0 + 152) = v137;
  *(void *)(v0 + 160) = v1;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(void *)(v0 + 232) = v2;
  *(void *)(v0 + 240) = v3;
  sub_214B6AC38(v0 + 1112, v0 + 248, qword_26ACE3630);
  *(void *)(v0 + 384) = v141;
  *(void *)(v0 + 392) = v4;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(void *)(v0 + 464) = v5;
  *(void *)(v0 + 472) = v6;
  memcpy((void *)(v0 + 480), v151, 0x1D0uLL);
  memcpy(v151, (const void *)(v0 + 16), 0x1D0uLL);
  sub_214BA541C((void *)(v0 + 944), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v2, v3);
  sub_214BA541C((void *)(v0 + 1112), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v5, v6);
  sub_214BA598C((uint64_t *)(v0 + 480));
  sub_214BA5B58((uint64_t *)(v0 + 944));
  __swift_destroy_boxed_opaque_existential_1(v0 + 3760);
  uint64_t v135 = *(void *)(v0 + 4104);
  uint64_t v7 = *(void **)(v0 + 3952);
  sub_214B6AC38((uint64_t)(v7 + 58), v0 + 2160, qword_26ACE3630);
  uint64_t v8 = v7[85];
  *(void *)(v0 + 4112) = v8;
  unint64_t v154 = v7[86];
  *(void *)(v0 + 4120) = v154;
  uint64_t v122 = v7[75];
  uint64_t v152 = v7[76];
  uint64_t v9 = v7[77];
  uint64_t v10 = v7[79];
  uint64_t v11 = v7[80];
  uint64_t v12 = v7[81];
  uint64_t v13 = v7[82];
  uint64_t v14 = v7[83];
  uint64_t v131 = v9;
  unint64_t v15 = v7[78];
  uint64_t v16 = v7[84];
  uint64_t v129 = v15;
  if (!v15)
  {
    sub_214B6AC38(v0 + 2160, v0 + 1888, qword_26ACE3630);
    if (sub_214B58B0C(v0 + 1888) == 1)
    {
      uint64_t v9 = 0;
      unint64_t v15 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v9 = *(unsigned __int8 *)(v0 + 1888) + 49;
      uint64_t v10 = *(void *)(v0 + 1960);
      uint64_t v11 = *(void *)(v0 + 1968);
      uint64_t v12 = *(void *)(v0 + 1976);
      uint64_t v13 = *(void *)(v0 + 1984);
      uint64_t v17 = *(void *)(v0 + 1992);
      uint64_t v16 = *(void *)(v0 + 2000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = v17;
      unint64_t v15 = 0xE100000000000000;
    }
  }
  uint64_t v156 = v8;
  uint64_t v18 = *(void **)(v0 + 3952);
  *(void *)(v0 + 3312) = v9;
  uint64_t v125 = v15;
  *(void *)(v0 + 3320) = v15;
  *(void *)(v0 + 3328) = v10;
  *(void *)(v0 + 3336) = v11;
  *(void *)(v0 + 3344) = v12;
  *(void *)(v0 + 3352) = v13;
  *(void *)(v0 + 3360) = v14;
  *(void *)(v0 + 3368) = v16;
  sub_214B6AC38((uint64_t)(v18 + 87), (uint64_t)v150, qword_26ACE3630);
  uint64_t v19 = v18[106];
  uint64_t v20 = v18[107];
  uint64_t v21 = v9;
  uint64_t v22 = v18[112];
  uint64_t v23 = v19;
  unint64_t v24 = v20;
  uint64_t v25 = v18[108];
  uint64_t v26 = v18[109];
  uint64_t v27 = v18[113];
  uint64_t v28 = v18[110];
  uint64_t v29 = v18[111];
  uint64_t v30 = v22;
  uint64_t v31 = v27;
  uint64_t v126 = v21;
  if (!v20)
  {
    sub_214B6AC38((uint64_t)v150, v0 + 1752, qword_26ACE3630);
    if (sub_214B58B0C(v0 + 1752) == 1)
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v23 = *(unsigned __int8 *)(v0 + 1752) + 49;
      uint64_t v32 = *(void *)(v0 + 1832);
      uint64_t v144 = *(void *)(v0 + 1840);
      uint64_t v146 = *(void *)(v0 + 1824);
      uint64_t v29 = *(void *)(v0 + 1848);
      uint64_t v142 = *(void *)(v0 + 1856);
      uint64_t v33 = *(void *)(v0 + 1864);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = v33;
      uint64_t v30 = v142;
      uint64_t v28 = v144;
      uint64_t v26 = v32;
      uint64_t v25 = v146;
      unint64_t v24 = 0xE100000000000000;
    }
    uint64_t v20 = 0;
  }
  uint64_t v123 = v24;
  uint64_t v124 = v23;
  uint64_t v148 = (_OWORD *)(v0 + 3248);
  uint64_t v128 = *(void *)(v0 + 4016);
  uint64_t v127 = *(void *)(v0 + 4008);
  uint64_t v34 = *(void **)(v0 + 3952);
  *(void *)(v0 + 3376) = v23;
  *(void *)(v0 + 3384) = v24;
  *(void *)(v0 + 3392) = v25;
  *(void *)(v0 + 3400) = v26;
  *(void *)(v0 + 3408) = v28;
  *(void *)(v0 + 3416) = v29;
  *(void *)(v0 + 3424) = v30;
  *(void *)(v0 + 3432) = v31;
  uint64_t v138 = v34[104];
  uint64_t v149 = v34[105];
  *(void *)(v0 + 4128) = v149;
  uint64_t v35 = (char *)v34[29];
  uint64_t v36 = *(void **)&v35[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession];
  sub_214B93DCC((uint64_t)&v35[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], v139);
  uint64_t v37 = (char *)objc_allocWithZone((Class)type metadata accessor for DIPAssessmentWebService());
  unint64_t v38 = &v37[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(void *)unint64_t v38 = 0x726F5F646E65732FLL;
  *((void *)v38 + 1) = 0xE900000000000064;
  uint64_t v39 = &v37[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(void *)uint64_t v39 = 0x746F5F646E65732FLL;
  *((void *)v39 + 1) = 0xE900000000000064;
  sub_214B93DCC(v139, v133);
  sub_214B79260(v131, v129);
  uint64_t v40 = v35;
  id v41 = v36;
  sub_214B79260(v19, v20);
  swift_bridgeObjectRetain();
  sub_214BA541C(v150, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  sub_214BA541C(v157, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  sub_214B6A3F8(v156, v154);
  swift_bridgeObjectRetain();
  id v42 = sub_214C3EAE4(v41, v133);

  __swift_destroy_boxed_opaque_existential_1(v139);
  uint64_t v43 = (void *)v34[29];
  v34[29] = v42;

  sub_214D19CB8();
  uint64_t v44 = sub_214D19C88();
  uint64_t v46 = v45;
  *(void *)(v0 + 4136) = v44;
  *(void *)(v0 + 4144) = v45;
  uint64_t v47 = sub_214D19C88();
  uint64_t v49 = v48;
  *(void *)(v0 + 4152) = v48;
  uint64_t v159 = v127;
  uint64_t v160 = v128;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  uint64_t v161 = 0x737420676E697308;
  unint64_t v162 = 0xEB00000000206469;
  sub_214D19C88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0x737420676E697375, 0xEB00000000206469, &v161);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  *(void *)(v0 + 3632) = v44;
  uint64_t v140 = v46;
  *(void *)(v0 + 3640) = v46;
  *(void *)(v0 + 3648) = v47;
  uint64_t v134 = v49;
  *(void *)(v0 + 3656) = v49;
  *(void *)(v0 + 3664) = v138;
  *(void *)(v0 + 3672) = v149;
  sub_214BA53C8();
  uint64_t v50 = sub_214D19778();
  *(void *)(v0 + 4160) = v50;
  *(void *)(v0 + 4168) = v51;
  if (v135)
  {
    unint64_t v52 = *(void *)(v0 + 4088);
    uint64_t v53 = *(void *)(v0 + 4080);
    unint64_t v54 = *(void *)(v0 + 4072);
    uint64_t v55 = *(void *)(v0 + 4064);
    (*(void (**)(void, void))(*(void *)(v0 + 3992) + 8))(*(void *)(v0 + 4000), *(void *)(v0 + 3984));
    swift_bridgeObjectRelease();
    sub_214BA541C(v157, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    swift_bridgeObjectRelease();
    sub_214BA541C(v150, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    swift_release();
    sub_214B59EAC(v156, v154);
    sub_214B59EAC(v53, v52);
    sub_214B7902C(v126, v125);
    sub_214B7902C(v124, v123);
    sub_214B59EAC(v55, v54);
    sub_214BA5370((uint64_t)v148);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
    return v67();
  }
  else
  {
    uint64_t v56 = v50;
    unint64_t v57 = v51;
    uint64_t v130 = v47;
    uint64_t v132 = v44;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF98);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_214D1C1E0;
    *(void *)(v58 + 32) = v56;
    *(void *)(v58 + 40) = v57;
    unint64_t v136 = (void *)v58;
    sub_214B6AC38((uint64_t)v148, v0 + 3920, &qword_26784D0D8);
    sub_214B6AC38(v0 + 3920, v0 + 3928, &qword_26784D0D8);
    unint64_t v59 = *(void **)(v0 + 3928);
    if (v59)
    {
      uint64_t v60 = v152;
      if (v59[20])
      {
        uint64_t v61 = v59[25];
        uint64_t v62 = v59[26];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v61 = 0;
        uint64_t v62 = 0;
      }
    }
    else
    {
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      uint64_t v60 = v152;
    }
    if (v60) {
      uint64_t v63 = v122;
    }
    else {
      uint64_t v63 = 0;
    }
    if (v60) {
      uint64_t v64 = v60;
    }
    else {
      uint64_t v64 = 0xE000000000000000;
    }
    sub_214B6A3A0(v56, v57);
    uint64_t v65 = sub_214BFD5C0(v61, v62, v132, v140, v63, v64);
    *(void *)(v0 + 4176) = v65;
    *(void *)(v0 + 4184) = v66;
    uint64_t v69 = v65;
    uint64_t v158 = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v153 = v69;
    if (v69)
    {
      if (!*(void *)(v69 + 24)) {
        goto LABEL_30;
      }
      uint64_t v70 = *(void *)(v0 + 3976);
      uint64_t v71 = *(void *)(v0 + 3968);
      uint64_t v72 = *(void *)(v0 + 3960);
      swift_bridgeObjectRetain();
      sub_214D1A088();
      uint64_t v147 = sub_214D1A048();
      unint64_t v74 = v73;
      swift_bridgeObjectRelease();
      unint64_t v75 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v75(v70, v72);
      if (v74 >> 60 != 15)
      {
        uint64_t v76 = v149;
        if (v158 && *(void *)(v158 + 24))
        {
          uint64_t v78 = *(void *)(v0 + 3976);
          uint64_t v143 = *(void *)(v0 + 3960);
          swift_bridgeObjectRetain();
          sub_214D1A088();
          uint64_t v145 = sub_214D1A048();
          unint64_t v80 = v79;
          swift_bridgeObjectRelease();
          v75(v78, v143);
          if (v80 >> 60 == 15)
          {
            sub_214B59EAC(v147, v74);
            uint64_t v76 = v149;
          }
          else
          {
            unint64_t v81 = v80;
            sub_214B6A3A0(v56, v57);
            unint64_t v83 = v136[2];
            unint64_t v82 = v136[3];
            unint64_t v84 = v83 + 1;
            uint64_t v76 = v149;
            if (v83 >= v82 >> 1) {
              unint64_t v136 = sub_214B876DC((void *)(v82 > 1), v83 + 1, 1, v136);
            }
            v136[2] = v84;
            uint64_t v85 = &v136[2 * v83];
            v85[4] = v56;
            v85[5] = v57;
            sub_214B6A3A0(v145, v81);
            unint64_t v86 = v136[3];
            if ((uint64_t)(v83 + 2) > (uint64_t)(v86 >> 1)) {
              unint64_t v136 = sub_214B876DC((void *)(v86 > 1), v83 + 2, 1, v136);
            }
            uint64_t v87 = *(void *)(v0 + 4016);
            uint64_t v88 = *(void *)(v0 + 4008);
            v136[2] = v83 + 2;
            uint64_t v89 = &v136[2 * v84];
            v89[4] = v145;
            v89[5] = v81;
            uint64_t v159 = v88;
            uint64_t v160 = v87;
            uint64_t v161 = 0;
            unint64_t v162 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_214D1A7A8();
            swift_bridgeObjectRelease();
            uint64_t v161 = 0x6469737420726F66;
            unint64_t v162 = 0xE900000000000020;
            sub_214D19C88();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            sub_214D1A108();
            sub_214D19B48();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            uint64_t v90 = v161;
            LOBYTE(v161) = 8;
            CoreODILogger.debug(_:category:)(v90, v162, &v161);
            sub_214B59EAC(v147, v74);
            swift_bridgeObjectRelease();
            sub_214B59EAC(v145, v81);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_214B59EAC(v147, v74);
        }
      }
      else
      {
LABEL_30:
        uint64_t v76 = v149;
      }
      uint64_t v77 = v0 + 3312;
    }
    else
    {
      uint64_t v76 = v149;
      uint64_t v77 = v0 + 3312;
    }
    *(void *)(v0 + 4192) = v136;
    uint64_t v91 = *(void *)(v0 + 4032);
    uint64_t v92 = *(void *)(v0 + 3952);
    uint64_t v93 = *(void *)(v0 + 3944);
    BOOL v94 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
    uint64_t v95 = swift_allocObject();
    *(void *)(v0 + 4200) = v95;
    *(void *)(v95 + 16) = v92;
    long long v96 = *(_OWORD *)(v0 + 3264);
    *(_OWORD *)(v95 + 24) = *v148;
    *(_OWORD *)(v95 + 40) = v96;
    long long v97 = *(_OWORD *)(v0 + 3296);
    *(_OWORD *)(v95 + 56) = *(_OWORD *)(v0 + 3280);
    *(_OWORD *)(v95 + 72) = v97;
    *(unsigned char *)(v95 + 88) = v94;
    sub_214B6AC38(v77, v95 + 96, &qword_26784D0E8);
    sub_214B6AC38(v0 + 3376, v95 + 160, &qword_26784D0E8);
    *(void *)(v95 + 224) = v132;
    *(void *)(v95 + 232) = v140;
    *(void *)(v95 + 240) = v130;
    *(void *)(v95 + 248) = v134;
    *(void *)(v95 + 256) = v138;
    *(void *)(v95 + 264) = v76;
    *(void *)(v95 + 272) = v153;
    *(void *)(v95 + 280) = v158;
    __int16 v98 = *(_WORD *)(v93 + 32);
    long long v99 = *(_OWORD *)(v93 + 16);
    *(_OWORD *)(v95 + 288) = *(_OWORD *)v93;
    *(_OWORD *)(v95 + 304) = v99;
    *(_WORD *)(v95 + 320) = v98;
    if (v154 >> 60 == 15 || !v91)
    {
      uint64_t v115 = *(void *)(v0 + 4032);
      uint64_t v116 = *(void *)(v0 + 4024);
      int v155 = *(_DWORD *)(v0 + 2972);
      unint64_t v117 = *(void *)(v0 + 4016);
      uint64_t v118 = *(void *)(v0 + 4008);
      uint64_t v119 = *(void *)(v0 + 3944);
      sub_214BA5714((uint64_t)v148);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_214BA576C(v119);
      swift_bridgeObjectRelease();
      uint64_t v161 = v118;
      unint64_t v162 = v117;
      LOBYTE(v159) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.error(_:category:)(0xD00000000000002FLL, 0x8000000214D2FFA0, &v159);
      swift_bridgeObjectRelease();
      LOWORD(v161) = 161;
      *(void *)(v0 + 4328) = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int16 *)&v161, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000001CLL, 0x8000000214D2FFD0, 481);
      sub_214C6B5D0(v116, v115, v0 + 3720);
      *(_OWORD *)(v0 + 4336) = *(_OWORD *)(v0 + 3720);
      *(unsigned char *)(v0 + 2969) = *(unsigned char *)(v0 + 3736);
      *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 3744);
      sub_214B6AC38(v0 + 3744, v0 + 3904, &qword_26ACE4288);
      sub_214BA5200(v0 + 3904);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 4368) = *(void *)(v0 + 3288);
      *(void *)(v0 + 4376) = *(void *)(v0 + 3296);
      swift_bridgeObjectRetain();
      uint64_t v120 = swift_task_alloc();
      *(void *)(v0 + 4384) = v120;
      *(void *)uint64_t v120 = v0;
      *(void *)(v120 + 8) = sub_214BA0D74;
      uint64_t v121 = *(void *)(v0 + 3952);
      *(void *)(v120 + 24) = 0;
      *(void *)(v120 + 32) = v121;
      *(unsigned char *)(v120 + 120) = (v155 - 1) < 2;
      *(void *)(v120 + 16) = v0 + 2976;
      return MEMORY[0x270FA2498](sub_214BA4984, v121, 0);
    }
    else
    {
      uint64_t v100 = *(void *)(v0 + 3944);
      swift_bridgeObjectRetain();
      sub_214B6A3F8(v156, v154);
      sub_214BA5714((uint64_t)v148);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_214BA576C(v100);
      if (qword_26784C858 != -1) {
        swift_once();
      }
      unint64_t v101 = *(void *)(v0 + 4088);
      uint64_t v102 = *(void *)(v0 + 4080);
      uint64_t v103 = *(void *)(v0 + 4032);
      uint64_t v104 = *(void *)(v0 + 3944);
      uint64_t v105 = *(void *)(v104 + 8);
      *(void *)(v0 + 4208) = v105;
      uint64_t v106 = *(void *)(v104 + 16);
      uint64_t v107 = *(void *)(v104 + 24);
      char v108 = *(unsigned char *)(v104 + 32);
      sub_214B6A3F8(v102, v101);
      swift_retain();
      uint64_t v109 = (void *)swift_task_alloc();
      *(void *)(v0 + 4216) = v109;
      *uint64_t v109 = v0;
      v109[1] = sub_214BA0234;
      uint64_t v110 = *(void *)(v0 + 4088);
      uint64_t v111 = *(void *)(v0 + 4080);
      uint64_t v112 = *(void *)(v0 + 4072);
      uint64_t v113 = *(void *)(v0 + 4064);
      uint64_t v114 = *(void *)(v0 + 4024);
      uint64_t v172 = &unk_26784D0F0;
      uint64_t v173 = v95;
      char v171 = v108;
      char v170 = 0;
      uint64_t v168 = v114;
      uint64_t v169 = v103;
      uint64_t v166 = v156;
      unint64_t v167 = v154;
      unint64_t v165 = v136;
      return sub_214B673B8(v0 + 3440, v113, v112, v111, v110, v105, v106, v107);
    }
  }
}

uint64_t sub_214BA0184()
{
  unint64_t v1 = v0[509];
  uint64_t v2 = v0[508];
  sub_214B59EAC(v0[510], v0[511]);
  sub_214B59EAC(v2, v1);
  sub_214BA5370((uint64_t)(v0 + 406));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 470));
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214BA0234()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 4224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[511];
    uint64_t v4 = v2[510];
    uint64_t v11 = v2[494];
    swift_bridgeObjectRelease();
    sub_214BA541C(v2 + 270, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    sub_214BA541C(v2 + 202, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
    swift_release();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_214BA10E8;
    uint64_t v6 = v11;
  }
  else
  {
    unint64_t v7 = v2[511];
    uint64_t v8 = v2[510];
    uint64_t v9 = v2[494];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B59EAC(v8, v7);
    uint64_t v5 = sub_214BA044C;
    uint64_t v6 = v9;
  }
  return MEMORY[0x270FA2498](v5, v6, 0);
}

uint64_t sub_214BA044C()
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  *(void *)(v0 + 4232) = sub_214D19B48();
  *(void *)(v0 + 4240) = v3;
  unint64_t v4 = *(void *)(v0 + 3480);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)(v0 + 3472);
    sub_214B6A3A0(v5, *(void *)(v0 + 3480));
    uint64_t v1 = sub_214D19B48();
    uint64_t v2 = v6;
    sub_214B59EAC(v5, v4);
  }
  *(void *)(v0 + 4256) = v2;
  *(void *)(v0 + 4248) = v1;
  int v7 = *(_DWORD *)(v0 + 3488);
  BOOL v8 = __CFADD__(v7, 1);
  int v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(_DWORD *)(v0 + 3108) = v9;
    *(void *)(v0 + 4264) = *(void *)(v0 + 3288);
    *(void *)(v0 + 4272) = *(void *)(v0 + 3296);
    uint64_t v10 = qword_26784C878;
    swift_bridgeObjectRetain();
    if (v10 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  uint64_t v11 = qword_2678635D8;
  *(void *)(v0 + 4280) = qword_2678635D8;
  return MEMORY[0x270FA2498](sub_214BA0580, v11, 0);
}

uint64_t sub_214BA0580()
{
  uint64_t v1 = v0[535];
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 112);
    v0[540] = v2;
    v0[539] = v3;
    uint64_t v4 = v0[494];
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_214BA0814, v4, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[536] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_214BA0668;
    return sub_214BCE8CC();
  }
}

uint64_t sub_214BA0668(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 4280);
  *(void *)(v3 + 4296) = a1;
  *(void *)(v3 + 4304) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BA0784, v4, 0);
}

uint64_t sub_214BA0784()
{
  uint64_t v1 = v0[538];
  uint64_t v2 = v0[535];
  *(void *)(v2 + 112) = v0[537];
  *(void *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[537];
  v0[540] = v0[538];
  v0[539] = v3;
  uint64_t v4 = v0[494];
  return MEMORY[0x270FA2498](sub_214BA0814, v4, 0);
}

uint64_t sub_214BA0814()
{
  uint64_t v63 = v0;
  uint64_t v59 = v0 + 2024;
  uint64_t v61 = v0 + 2160;
  uint64_t v1 = (_OWORD *)(v0 + 3112);
  uint64_t v2 = *(void *)(v0 + 4176);
  uint64_t v3 = (uint64_t *)(*(void *)(*(void *)(v0 + 3952) + 232)
                 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = qword_26ACE44D0;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v6 != -1)
  {
    swift_once();
    uint64_t v2 = *(void *)(v0 + 4176);
  }
  uint64_t v7 = *(void *)(v0 + 4320);
  uint64_t v8 = *(void *)(v0 + 4312);
  long long v9 = *(_OWORD *)(v0 + 4264);
  uint64_t v10 = *(unsigned int *)(v0 + 3108);
  uint64_t v11 = *(void *)(v0 + 4208);
  uint64_t v12 = *(void *)(v0 + 4144);
  uint64_t v13 = *(void *)(v0 + 4136);
  BOOL v14 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
  uint64_t v15 = qword_26ACEBAB8;
  uint64_t v16 = qword_26ACEBAC0;
  *uint64_t v1 = *(_OWORD *)(v0 + 4024);
  *(_OWORD *)(v0 + 3128) = v9;
  *(void *)(v0 + 3144) = v8;
  *(void *)(v0 + 3152) = v7;
  *(void *)(v0 + 3160) = v5;
  *(void *)(v0 + 3168) = v4;
  *(void *)(v0 + 3176) = v2;
  *(void *)(v0 + 3184) = v10;
  *(unsigned char *)(v0 + 3192) = 0;
  *(void *)(v0 + 3200) = 0;
  *(void *)(v0 + 3208) = v15;
  *(void *)(v0 + 3216) = v16;
  *(unsigned char *)(v0 + 3224) = -47;
  *(void *)(v0 + 3232) = 0;
  *(unsigned char *)(v0 + 3240) = v14;
  char v62 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CEB8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_214D1EB80;
  *(void *)(v17 + 32) = 0x73676E69646E6962;
  *(void *)(v17 + 40) = 0xE800000000000000;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D0F8);
  *(void *)(v17 + 48) = v11;
  *(void *)(v17 + 72) = v18;
  *(void *)(v17 + 80) = 1684632436;
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(v17 + 88) = 0xE400000000000000;
  *(void *)(v17 + 96) = v13;
  *(void *)(v17 + 104) = v12;
  *(void *)(v17 + 120) = v19;
  *(void *)(v17 + 128) = 0xD000000000000011;
  *(void *)(v17 + 168) = v19;
  *(void *)(v17 + 136) = 0x8000000214D2D880;
  *(void *)(v17 + 144) = v5;
  *(void *)(v17 + 152) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_214B7E5BC(v17);
  v21._countAndFlagsBits = 0xD000000000000014;
  v21._object = (void *)0x8000000214D2FFF0;
  CoreODILogger.milestone(tag:description:dictionary:isSensitive:)((CoreODIEssentials::MilestoneTag)&v62, v21, (Swift::OpaquePointer)v20, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B6AC38(v61, v59, qword_26ACE3630);
  int v22 = sub_214B58B0C(v59);
  uint64_t v23 = 0;
  unint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v60 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  if (v22 != 1)
  {
    uint64_t v23 = *(unsigned __int8 *)(v0 + 2024) + 49;
    uint64_t v25 = *(void *)(v0 + 2096);
    uint64_t v26 = *(void *)(v0 + 2112);
    uint64_t v27 = *(void *)(v0 + 2120);
    uint64_t v28 = *(void *)(v0 + 2128);
    uint64_t v29 = *(void *)(v0 + 2136);
    uint64_t v60 = *(void *)(v0 + 2104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v24 = 0xE100000000000000;
  }
  uint64_t v44 = v26;
  unint64_t v45 = v24;
  uint64_t v46 = *(void *)(v0 + 4264);
  uint64_t v47 = *(void *)(v0 + 4272);
  uint64_t v42 = *(void *)(v0 + 4248);
  uint64_t v43 = *(void *)(v0 + 4256);
  long long v41 = *(_OWORD *)(v0 + 4232);
  unint64_t v58 = *(void *)(v0 + 4168);
  uint64_t v57 = *(void *)(v0 + 4160);
  uint64_t v30 = *(void *)(v0 + 4144);
  uint64_t v31 = *(void *)(v0 + 4136);
  uint64_t v52 = *(void *)(v0 + 4080);
  unint64_t v53 = *(void *)(v0 + 4088);
  unint64_t v50 = *(void *)(v0 + 4120);
  unint64_t v51 = *(void *)(v0 + 4072);
  uint64_t v48 = *(void *)(v0 + 4112);
  uint64_t v49 = *(void *)(v0 + 4064);
  uint64_t v56 = *(void *)(v0 + 4000);
  uint64_t v54 = *(void *)(v0 + 3992);
  uint64_t v55 = *(void *)(v0 + 3984);
  uint64_t v32 = *(void *)(v0 + 3936);
  sub_214B6AC38(v61, v32, qword_26ACE3630);
  sub_214B6AC38(v0 + 1616, v32 + 136, qword_26ACE3630);
  *(void *)(v32 + 272) = v31;
  *(void *)(v32 + 280) = v30;
  *(_OWORD *)(v32 + 288) = v41;
  *(void *)(v32 + 304) = v42;
  *(void *)(v32 + 312) = v43;
  *(_OWORD *)(v32 + 320) = 0u;
  *(_OWORD *)(v32 + 336) = 0u;
  *(void *)(v32 + 352) = 1;
  *(void *)(v32 + 360) = v23;
  *(void *)(v32 + 368) = v45;
  *(void *)(v32 + 376) = v25;
  *(void *)(v32 + 384) = v60;
  *(void *)(v32 + 392) = v44;
  *(void *)(v32 + 400) = v27;
  *(void *)(v32 + 408) = v28;
  *(void *)(v32 + 416) = v29;
  *(void *)(v32 + 424) = v46;
  *(void *)(v32 + 432) = v47;
  *(_OWORD *)(v32 + 440) = *v1;
  long long v33 = *(_OWORD *)(v0 + 3128);
  long long v34 = *(_OWORD *)(v0 + 3144);
  long long v35 = *(_OWORD *)(v0 + 3176);
  *(_OWORD *)(v32 + 488) = *(_OWORD *)(v0 + 3160);
  *(_OWORD *)(v32 + 504) = v35;
  *(_OWORD *)(v32 + 456) = v33;
  *(_OWORD *)(v32 + 472) = v34;
  long long v36 = *(_OWORD *)(v0 + 3192);
  long long v37 = *(_OWORD *)(v0 + 3208);
  long long v38 = *(_OWORD *)(v0 + 3224);
  *(unsigned char *)(v32 + 568) = *(unsigned char *)(v0 + 3240);
  *(_OWORD *)(v32 + 536) = v37;
  *(_OWORD *)(v32 + 552) = v38;
  *(_OWORD *)(v32 + 520) = v36;
  type metadata accessor for ODNAssessmentResult();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214BA57B0(v0 + 3112);
  sub_214D1A898();
  sub_214B59EAC(v48, v50);
  sub_214B59EAC(v49, v51);
  sub_214BA5370(v0 + 3248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BA5838((uint64_t *)(v0 + 3440));
  sub_214BA5898(v0 + 3112);
  swift_release();
  sub_214B59EAC(v52, v53);
  sub_214B59EAC(v48, v50);
  swift_release();
  swift_release();
  sub_214B58A4C(v57, v58);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_214BA0D74()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 3952);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BA0E84, v1, 0);
}

uint64_t sub_214BA0E84()
{
  uint64_t v20 = *(void *)(v0 + 4368);
  uint64_t v21 = *(void *)(v0 + 4376);
  uint64_t v19 = *(void *)(v0 + 4360);
  uint64_t v1 = *(void *)(v0 + 4352);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 2969);
  uint64_t v3 = *(void *)(v0 + 4344);
  uint64_t v4 = *(void *)(v0 + 4336);
  id v24 = *(id *)(v0 + 4328);
  uint64_t v31 = *(void *)(v0 + 4160);
  unint64_t v32 = *(void *)(v0 + 4168);
  unint64_t v28 = *(void *)(v0 + 4120);
  uint64_t v27 = *(void *)(v0 + 4112);
  uint64_t v25 = *(void *)(v0 + 4080);
  unint64_t v26 = *(void *)(v0 + 4088);
  uint64_t v22 = *(void *)(v0 + 4064);
  unint64_t v23 = *(void *)(v0 + 4072);
  uint64_t v5 = *(void *)(v0 + 3992);
  uint64_t v29 = *(void *)(v0 + 3984);
  uint64_t v30 = *(void *)(v0 + 4000);
  uint64_t v6 = *(void *)(v0 + 3936);
  long long v7 = *(_OWORD *)(v0 + 3056);
  long long v8 = *(_OWORD *)(v0 + 3088);
  *(_OWORD *)(v0 + 2936) = *(_OWORD *)(v0 + 3072);
  *(_OWORD *)(v0 + 2952) = v8;
  *(unsigned char *)(v0 + 2968) = *(unsigned char *)(v0 + 3104);
  long long v9 = *(_OWORD *)(v0 + 2992);
  long long v10 = *(_OWORD *)(v0 + 3024);
  *(_OWORD *)(v0 + 2872) = *(_OWORD *)(v0 + 3008);
  *(_OWORD *)(v0 + 2888) = v10;
  *(_OWORD *)(v0 + 2904) = *(_OWORD *)(v0 + 3040);
  *(_OWORD *)(v0 + 2920) = v7;
  *(_OWORD *)(v0 + 2840) = *(_OWORD *)(v0 + 2976);
  *(_OWORD *)(v0 + 2856) = v9;
  sub_214B6AC38(v0 + 2160, v6, qword_26ACE3630);
  sub_214B6AC38(v0 + 1616, v6 + 136, qword_26ACE3630);
  *(_OWORD *)(v6 + 272) = 0u;
  *(_OWORD *)(v6 + 288) = 0u;
  *(_OWORD *)(v6 + 304) = 0u;
  *(void *)(v6 + 320) = v4;
  *(void *)(v6 + 328) = v3;
  *(void *)(v6 + 336) = v2;
  *(void *)(v6 + 344) = v1;
  *(void *)(v6 + 352) = v19;
  *(_OWORD *)(v6 + 360) = 0u;
  *(_OWORD *)(v6 + 376) = 0u;
  *(_OWORD *)(v6 + 392) = 0u;
  *(_OWORD *)(v6 + 408) = 0u;
  *(void *)(v6 + 424) = v20;
  *(void *)(v6 + 432) = v21;
  *(_OWORD *)(v6 + 440) = *(_OWORD *)(v0 + 2840);
  long long v11 = *(_OWORD *)(v0 + 2904);
  long long v13 = *(_OWORD *)(v0 + 2856);
  long long v12 = *(_OWORD *)(v0 + 2872);
  *(_OWORD *)(v6 + 488) = *(_OWORD *)(v0 + 2888);
  *(_OWORD *)(v6 + 504) = v11;
  *(_OWORD *)(v6 + 456) = v13;
  *(_OWORD *)(v6 + 472) = v12;
  long long v15 = *(_OWORD *)(v0 + 2936);
  long long v14 = *(_OWORD *)(v0 + 2952);
  long long v16 = *(_OWORD *)(v0 + 2920);
  *(unsigned char *)(v6 + 568) = *(unsigned char *)(v0 + 2968);
  *(_OWORD *)(v6 + 536) = v15;
  *(_OWORD *)(v6 + 552) = v14;
  *(_OWORD *)(v6 + 520) = v16;
  type metadata accessor for ODNAssessmentResult();
  sub_214D1A898();
  sub_214B59EAC(v22, v23);

  sub_214BA5370(v0 + 3248);
  swift_release();
  sub_214B59EAC(v25, v26);
  sub_214B59EAC(v27, v28);
  swift_release();
  swift_release();
  sub_214B58A4C(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v30, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_214BA10E8()
{
  uint64_t v12 = v0[520];
  unint64_t v13 = v0[521];
  unint64_t v1 = v0[515];
  uint64_t v2 = v0[514];
  unint64_t v3 = v0[511];
  uint64_t v4 = v0[510];
  unint64_t v5 = v0[509];
  uint64_t v6 = v0[508];
  uint64_t v7 = v0[499];
  uint64_t v10 = v0[498];
  uint64_t v11 = v0[500];
  sub_214B59EAC(v2, v1);
  sub_214B59EAC(v6, v5);
  swift_release();
  sub_214B59EAC(v4, v3);
  sub_214B59EAC(v2, v1);
  swift_release();
  sub_214BA5370((uint64_t)(v0 + 406));
  swift_release();
  sub_214B58A4C(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_214BA122C(uint64_t a1, uint64_t a2)
{
  v3[51] = a2;
  v3[52] = v2;
  v3[50] = a1;
  return MEMORY[0x270FA2498](sub_214BA1250, v2, 0);
}

uint64_t sub_214BA1250()
{
  uint64_t v31 = v0;
  unint64_t v1 = (void *)*((void *)v0 + 51);
  *((void *)v0 + 48) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
    unint64_t v3 = *((void *)v0 + 49);
    *((void *)v0 + 53) = v3;
    if (v3)
    {
      if (v3 == 1)
      {
        uint64_t v4 = (long long *)((char *)v0 + 280);
        uint64_t v5 = *((void *)v0 + 52);
        unsigned __int8 v29 = 106;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
        *(unsigned char *)(inited + 32) = 0;
        uint64_t v8 = *(void *)(v5 + 384);
        uint64_t v7 = *(void *)(v5 + 392);
        *(void *)(inited + 64) = MEMORY[0x263F8D310];
        *(void *)(inited + 40) = v8;
        *(void *)(inited + 48) = v7;
        swift_bridgeObjectRetain();
        unint64_t v9 = sub_214B7E71C(inited);
        *((void *)v0 + 57) = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, &v29, 0, v9, 0xD000000000000087, 0x8000000214D2FED0, 0xD000000000000019, 0x8000000214D2FF60, 508);
        swift_bridgeObjectRelease();
        uint64_t v10 = *(void *)(v5 + 384);
        uint64_t v11 = *(void *)(v5 + 392);
        swift_bridgeObjectRetain();
        sub_214C6B5D0(v10, v11, (uint64_t)v0 + 280);
        sub_214B6AC38((uint64_t)(v0 + 19), (uint64_t)(v0 + 22), &qword_26ACE4288);
        sub_214BA5200((uint64_t)(v0 + 22));
        swift_bridgeObjectRelease();
        LOBYTE(v3) = MKBGetDeviceLockState() - 1 < 2;
        uint64_t v12 = (void *)swift_task_alloc();
        *((void *)v0 + 58) = v12;
        void *v12 = v0;
        unint64_t v13 = sub_214BA1A40;
      }
      else
      {
        uint64_t v4 = (long long *)((char *)v0 + 200);
        uint64_t v24 = *((void *)v0 + 52);
        uint64_t v25 = *(void *)(v24 + 384);
        uint64_t v26 = *(void *)(v24 + 392);
        sub_214BA5258((id)v3);
        swift_bridgeObjectRetain();
        sub_214C6B5D0(v25, v26, (uint64_t)v0 + 200);
        sub_214B6AC38((uint64_t)(v0 + 14), (uint64_t)(v0 + 21), &qword_26ACE4288);
        sub_214BA5200((uint64_t)(v0 + 21));
        swift_bridgeObjectRelease();
        LOBYTE(v3) = MKBGetDeviceLockState() - 1 < 2;
        uint64_t v12 = (void *)swift_task_alloc();
        *((void *)v0 + 54) = v12;
        void *v12 = v0;
        unint64_t v13 = sub_214BA173C;
      }
    }
    else
    {
      uint64_t v4 = v0 + 10;
      uint64_t v17 = *((void *)v0 + 52);
      unsigned __int8 v30 = 103;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_214D1C1E0;
      *(unsigned char *)(v18 + 32) = 0;
      uint64_t v20 = *(void *)(v17 + 384);
      uint64_t v19 = *(void *)(v17 + 392);
      *(void *)(v18 + 64) = MEMORY[0x263F8D310];
      *(void *)(v18 + 40) = v20;
      *(void *)(v18 + 48) = v19;
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_214B7E71C(v18);
      *((void *)v0 + 55) = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, &v30, 0, v21, 0xD000000000000087, 0x8000000214D2FED0, 0xD000000000000019, 0x8000000214D2FF60, 504);
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v17 + 384);
      uint64_t v23 = *(void *)(v17 + 392);
      swift_bridgeObjectRetain();
      sub_214C6B5D0(v22, v23, (uint64_t)(v0 + 10));
      sub_214B6AC38((uint64_t)v0 + 184, (uint64_t)(v0 + 20), &qword_26ACE4288);
      sub_214BA5200((uint64_t)(v0 + 20));
      swift_bridgeObjectRelease();
      unint64_t v3 = MKBGetDeviceLockState() - 1 < 2;
      uint64_t v12 = (void *)swift_task_alloc();
      *((void *)v0 + 56) = v12;
      void *v12 = v0;
      unint64_t v13 = sub_214BA18C4;
    }
  }
  else
  {
    uint64_t v4 = v0 + 15;
    uint64_t v14 = *((void *)v0 + 52);
    uint64_t v15 = *(void *)(v14 + 384);
    uint64_t v16 = *(void *)(v14 + 392);
    swift_bridgeObjectRetain();
    sub_214C6B5D0(v15, v16, (uint64_t)(v0 + 15));
    sub_214B6AC38((uint64_t)v0 + 264, (uint64_t)(v0 + 23), &qword_26ACE4288);
    sub_214BA5200((uint64_t)(v0 + 23));
    swift_bridgeObjectRelease();
    LOBYTE(v3) = MKBGetDeviceLockState() - 1 < 2;
    uint64_t v12 = (void *)swift_task_alloc();
    *((void *)v0 + 59) = v12;
    void *v12 = v0;
    unint64_t v13 = sub_214BA1BBC;
  }
  v12[1] = v13;
  uint64_t v27 = *((void *)v0 + 50);
  return sub_214BA1CBC(v27, v4, 0, v3);
}

uint64_t sub_214BA173C()
{
  uint64_t v1 = *(void *)v0 + 200;
  uint64_t v2 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  sub_214BA522C(v1);
  return MEMORY[0x270FA2498](sub_214BA1858, v2, 0);
}

uint64_t sub_214BA1858()
{
  uint64_t v1 = *(void **)(v0 + 424);
  sub_214BA5268(v1);
  sub_214BA5268(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214BA18C4()
{
  uint64_t v1 = *(void *)v0 + 160;
  uint64_t v2 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  sub_214BA522C(v1);
  return MEMORY[0x270FA2498](sub_214BA19E0, v2, 0);
}

uint64_t sub_214BA19E0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BA1A40()
{
  uint64_t v1 = *(void *)v0 + 280;
  uint64_t v2 = *(void *)(*(void *)v0 + 416);
  swift_task_dealloc();
  sub_214BA522C(v1);
  return MEMORY[0x270FA2498](sub_214BA1B5C, v2, 0);
}

uint64_t sub_214BA1B5C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BA1BBC()
{
  uint64_t v1 = *v0 + 240;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_214BA522C(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_214BA1CBC(uint64_t a1, long long *a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 600) = v4;
  *(unsigned char *)(v5 + 417) = a4;
  *(void *)(v5 + 592) = a3;
  *(void *)(v5 + 584) = a2;
  *(void *)(v5 + 576) = a1;
  long long v6 = *a2;
  *(unsigned char *)(v5 + 418) = *((unsigned char *)a2 + 16);
  long long v7 = *(long long *)((char *)a2 + 24);
  *(_OWORD *)(v5 + 608) = v6;
  *(_OWORD *)(v5 + 624) = v7;
  return MEMORY[0x270FA2498](sub_214BA1D00, v4, 0);
}

uint64_t sub_214BA1D00()
{
  uint64_t v1 = v0[75];
  v0[80] = *(void *)(v1 + 448);
  v0[81] = *(void *)(v1 + 456);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214BA1D7C, v1, 0);
}

uint64_t sub_214BA1D7C()
{
  uint64_t v1 = *(void *)(v0 + 600);
  sub_214B6AC38(v1 + 464, v0 + 152, qword_26ACE3630);
  sub_214BA541C((void *)(v0 + 152), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  sub_214B6AC38(v1 + 696, v0 + 16, qword_26ACE3630);
  sub_214BA541C((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5278);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 656) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_214BA1EA8;
  uint64_t v3 = *(void *)(v0 + 600);
  char v4 = *(unsigned char *)(v0 + 417);
  *(void *)(v2 + 24) = *(void *)(v0 + 592);
  *(void *)(v2 + 32) = v3;
  *(unsigned char *)(v2 + 120) = v4;
  *(void *)(v2 + 16) = v0 + 424;
  return MEMORY[0x270FA2498](sub_214BA4984, v3, 0);
}

uint64_t sub_214BA1EA8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BA1FA4, 0, 0);
}

uint64_t sub_214BA1FA4()
{
  uint64_t v19 = *(void *)(v0 + 640);
  uint64_t v20 = *(void *)(v0 + 648);
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 624);
  uint64_t v3 = *(void *)(v0 + 616);
  uint64_t v4 = *(void *)(v0 + 608);
  uint64_t v5 = *(void *)(v0 + 576);
  uint64_t v6 = *(unsigned char *)(v0 + 418) & 1;
  uint64_t v21 = *(void *)(v0 + 584) + 24;
  *(unsigned char *)(v0 + 416) = *(unsigned char *)(v0 + 552);
  long long v7 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 400) = v7;
  long long v8 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 336) = v8;
  long long v9 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 368) = v9;
  long long v10 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 304) = v10;
  sub_214B6AC38(v0 + 152, v5, qword_26ACE3630);
  sub_214B6AC38(v0 + 16, v5 + 136, qword_26ACE3630);
  *(_OWORD *)(v5 + 272) = 0u;
  *(_OWORD *)(v5 + 288) = 0u;
  *(_OWORD *)(v5 + 304) = 0u;
  *(void *)(v5 + 320) = v4;
  *(void *)(v5 + 328) = v3;
  *(void *)(v5 + 336) = v6;
  *(void *)(v5 + 344) = v2;
  *(void *)(v5 + 352) = v1;
  *(_OWORD *)(v5 + 360) = 0u;
  *(_OWORD *)(v5 + 376) = 0u;
  *(_OWORD *)(v5 + 392) = 0u;
  *(_OWORD *)(v5 + 408) = 0u;
  *(void *)(v5 + 424) = v19;
  *(void *)(v5 + 432) = v20;
  *(_OWORD *)(v5 + 440) = *(_OWORD *)(v0 + 288);
  long long v11 = *(_OWORD *)(v0 + 352);
  long long v13 = *(_OWORD *)(v0 + 304);
  long long v12 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v5 + 488) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v5 + 504) = v11;
  *(_OWORD *)(v5 + 456) = v13;
  *(_OWORD *)(v5 + 472) = v12;
  long long v15 = *(_OWORD *)(v0 + 384);
  long long v14 = *(_OWORD *)(v0 + 400);
  long long v16 = *(_OWORD *)(v0 + 368);
  *(unsigned char *)(v5 + 568) = *(unsigned char *)(v0 + 416);
  *(_OWORD *)(v5 + 536) = v15;
  *(_OWORD *)(v5 + 552) = v14;
  *(_OWORD *)(v5 + 520) = v16;
  type metadata accessor for ODNAssessmentResult();
  sub_214B6AC38(v21, v0 + 560, &qword_26ACE4288);
  sub_214BA5200(v0 + 560);
  sub_214D1A898();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_214BA2144(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    LOBYTE(v20) = 0;
    id v7 = (id)a1;
    id v4 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D30210, (char *)a1, (unsigned __int8 *)&v20, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000001DLL, 0x8000000214D301B0, 667);
    uint64_t v8 = *(void *)(v1 + 160);
    uint64_t v20 = *(void *)(v1 + 152);
    uint64_t v21 = v8;
    unint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    sub_214D1A108();
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    char v6 = 8;
    goto LABEL_5;
  }
  if (a1 >> 62 == 1)
  {
    LOBYTE(v20) = 0;
    id v3 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    id v4 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D30190, (char *)(a1 & 0x3FFFFFFFFFFFFFFFLL), (unsigned __int8 *)&v20, 0, 0, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000001DLL, 0x8000000214D301B0, 671);
    uint64_t v5 = *(void *)(v1 + 160);
    uint64_t v20 = *(void *)(v1 + 152);
    uint64_t v21 = v5;
    unint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    sub_214D1A108();
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    char v6 = 12;
LABEL_5:
    LOBYTE(v17) = v6;
    CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v17);
    swift_bridgeObjectRelease();

    sub_214BA621C(a1);
    return swift_bridgeObjectRelease();
  }
  switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
  {
    case 1:
      uint64_t v12 = *(void *)(v1 + 160);
      uint64_t v20 = *(void *)(v1 + 152);
      uint64_t v21 = v12;
      char v19 = 8;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v17 = 0xD00000000000002ELL;
      unint64_t v18 = 0x8000000214D30130;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = 0xD00000000000002ELL;
      v13._object = (void *)0x8000000214D30130;
      CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v19, v13, (Swift::String_optional)0, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 2:
      uint64_t v14 = *(void *)(v1 + 160);
      uint64_t v20 = *(void *)(v1 + 152);
      uint64_t v21 = v14;
      LOBYTE(v17) = 14;
      swift_bridgeObjectRetain();
      uint64_t v10 = 0xD000000000000035;
      long long v11 = "ORD is configured to send, but ordRequest is invalid.";
      goto LABEL_11;
    case 3:
      uint64_t v15 = *(void *)(v1 + 160);
      uint64_t v20 = *(void *)(v1 + 152);
      uint64_t v21 = v15;
      LOBYTE(v17) = 14;
      swift_bridgeObjectRetain();
      uint64_t v10 = 0xD000000000000035;
      long long v11 = "OTD is configured to send, but otdRequest is invalid.";
      goto LABEL_11;
    default:
      uint64_t v9 = *(void *)(v1 + 160);
      uint64_t v20 = *(void *)(v1 + 152);
      uint64_t v21 = v9;
      LOBYTE(v17) = 12;
      swift_bridgeObjectRetain();
      uint64_t v10 = 0xD00000000000002ALL;
      long long v11 = "no ORD available or configured to not send";
LABEL_11:
      CoreODILogger.info(_:category:)(v10, (unint64_t)(v11 - 32) | 0x8000000000000000, &v17);
      break;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BA2544(uint64_t *a1)
{
  uint64_t v3 = *a1;
  v2[2] = v1;
  v2[3] = v3;
  uint64_t v4 = a1[6];
  v2[4] = a1[5];
  v2[5] = v4;
  return MEMORY[0x270FA2498](sub_214BA2570, v1, 0);
}

uint64_t sub_214BA2570()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  *(void *)(v2 + 448) = v0[4];
  *(void *)(v2 + 456) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = v0[3];
    char v5 = *(unsigned char *)(v4 + 248);
    char v6 = *(unsigned char *)(v4 + 249);
    uint64_t v3 = *(void *)(v4 + 160);
    if (v3)
    {
      uint64_t v8 = *(void *)(v4 + 168);
      uint64_t v7 = *(void *)(v4 + 176);
      uint64_t v9 = *(void *)(v4 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    char v5 = 1;
    char v6 = 1;
  }
  v0[6] = v7;
  v0[7] = v3;
  __swift_project_boxed_opaque_existential_1((void *)(v0[2] + 192), *(void *)(v0[2] + 216));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[8] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_214BA26B8;
  return sub_214C21CD0(v5, v6, v9, v3, v8, v7);
}

uint64_t sub_214BA26B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BA27E4(uint64_t result)
{
  uint64_t v2 = *(void *)result;
  if (!*(void *)result) {
    return result;
  }
  uint64_t v3 = *(void *)(v2 + 160);
  uint64_t v4 = *(void *)(v2 + 224);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v34 = *(void *)(v1 + 152);
  uint64_t v6 = v34;
  uint64_t v35 = v5;
  LOBYTE(v33[0]) = 8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000027, 0x8000000214D30300, v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "  ord enabled ");
  HIBYTE(v33[1]) = -18;
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v7 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v7, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v6;
  uint64_t v32 = v5;
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x8000000214D30330;
  if (v3) {
    swift_bridgeObjectRetain();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v8 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v8, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "  otd enabled ");
  HIBYTE(v33[1]) = -18;
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v9 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v9, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x8000000214D30350;
  if (v3) {
    swift_bridgeObjectRetain();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v10 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v10, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x8000000214D30370;
  if (v3) {
    swift_bridgeObjectRetain();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v11 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v11, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v4 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v4 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  unint64_t v18 = (void *)MEMORY[0x263F8EE78];
  if (!v15) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v19 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    swift_bridgeObjectRetain();
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_214B874BC(0, v18[2] + 1, 1, v18);
      unint64_t v18 = (void *)result;
    }
    unint64_t v28 = v18[2];
    unint64_t v27 = v18[3];
    if (v28 >= v27 >> 1)
    {
      unint64_t result = (uint64_t)sub_214B874BC((void *)(v27 > 1), v28 + 1, 1, v18);
      unint64_t v18 = (void *)result;
    }
    v18[2] = v28 + 1;
    unsigned __int8 v29 = &v18[2 * v28];
    v29[4] = v26;
    v29[5] = v25;
    if (v15) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v16) {
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v12 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_36;
      }
      unint64_t v22 = *(void *)(v12 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v16) {
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v12 + 8 * v17);
        if (!v22)
        {
          int64_t v17 = v21 + 3;
          if (v21 + 3 >= v16) {
            goto LABEL_36;
          }
          unint64_t v22 = *(void *)(v12 + 8 * v17);
          if (!v22)
          {
            int64_t v17 = v21 + 4;
            if (v21 + 4 >= v16) {
              goto LABEL_36;
            }
            unint64_t v22 = *(void *)(v12 + 8 * v17);
            if (!v22) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v15 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 5;
  if (v23 >= v16)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = v31;
    uint64_t v35 = v32;
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v33[0] = 0xD000000000000012;
    v33[1] = 0x8000000214D30390;
    MEMORY[0x2166AFD40](v18, MEMORY[0x263F8D310]);
    sub_214D1A108();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v33[0];
    LOBYTE(v33[0]) = 8;
    CoreODILogger.debug(_:category:)(v30, v33[1], v33);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v22 = *(void *)(v12 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v16) {
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v12 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_29;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_214BA2E58(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 2136) = v14;
  *(_OWORD *)(v8 + 2120) = v13;
  *(void *)(v8 + 2112) = v12;
  *(void *)(v8 + 2104) = a8;
  *(void *)(v8 + 2096) = a7;
  *(unsigned char *)(v8 + 611) = a6;
  *(void *)(v8 + 2088) = a5;
  *(void *)(v8 + 2080) = a4;
  *(void *)(v8 + 2072) = a3;
  *(unsigned char *)(v8 + 610) = a2;
  *(void *)(v8 + 2064) = a1;
  *(_OWORD *)(v8 + 2144) = *(_OWORD *)v12;
  uint64_t v9 = *(void *)(v12 + 24);
  *(void *)(v8 + 2160) = *(void *)(v12 + 16);
  *(void *)(v8 + 2168) = v9;
  *(_OWORD *)(v8 + 2176) = *(_OWORD *)(v12 + 32);
  sub_214B6AC38(a1, v8 + 1760, &qword_26784D108);
  *(_OWORD *)(v8 + 2192) = *(_OWORD *)(v8 + 1760);
  *(_OWORD *)(v8 + 2208) = *(_OWORD *)(v8 + 1808);
  *(void *)(v8 + 2224) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  *(void *)(v8 + 2232) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BA2F68, 0, 0);
}

uint64_t sub_214BA2F68()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(long long **)(v0 + 2088);
  uint64_t v2 = *(void *)(v0 + 2080);
  *(void *)(v0 + 2240) = *(void *)(v2 + 152);
  *(void *)(v0 + 2248) = *(void *)(v2 + 160);
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v11[0] = 0xD00000000000000ELL;
  v11[1] = 0x8000000214D30010;
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000014, 0x8000000214D30010, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v3 = *v1;
  long long v4 = v1[1];
  long long v5 = v1[2];
  *(_OWORD *)(v0 + 1936) = v1[3];
  *(_OWORD *)(v0 + 1920) = v5;
  *(_OWORD *)(v0 + 1904) = v4;
  *(_OWORD *)(v0 + 1888) = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 2256) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_214BA3118;
  char v7 = *(unsigned char *)(v0 + 611);
  uint64_t v8 = *(void *)(v0 + 2072);
  char v9 = *(unsigned char *)(v0 + 610);
  return sub_214BA4178(v8, v0 + 1888, v9, v7);
}

uint64_t sub_214BA3118()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BA3214, 0, 0);
}

uint64_t sub_214BA3214()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 2248);
  char v2 = *(unsigned char *)(v0 + 610);
  v17[0] = *(void *)(v0 + 2240);
  v17[1] = v1;
  char v18 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000015, 0x8000000214D30050, &v18);
  swift_bridgeObjectRelease();
  if (v2)
  {
    *(void *)(v0 + 2312) = 1;
    *(_OWORD *)(v0 + 2280) = 0u;
    *(_OWORD *)(v0 + 2296) = 0u;
    sub_214B6AC38(*(void *)(v0 + 2064), v0 + 1824, &qword_26784D108);
    unint64_t v3 = *(void *)(v0 + 1848) >> 60;
    if (v3 == 15)
    {
      unint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      unint64_t v9 = 0xF000000000000000;
    }
    else
    {
      uint64_t v8 = *(unsigned int *)(v0 + 2208);
      uint64_t v6 = sub_214D19B48();
      uint64_t v7 = v12;
      unint64_t v4 = *(void *)(v0 + 2216);
      unint64_t v9 = *(void *)(v0 + 2200);
      uint64_t v5 = *(void *)(v0 + 2192);
    }
    *(void *)(v0 + 2336) = v8;
    *(void *)(v0 + 2328) = v7;
    *(void *)(v0 + 2320) = v6;
    char v13 = *(unsigned char *)(v0 + 611);
    uint64_t v14 = *(void *)(v0 + 2080);
    LOBYTE(v17[0]) = 1;
    *(void *)(v0 + 2344) = sub_214B697D0(v5, v9, v4, v3 > 0xE, (unsigned __int8 *)v17, v13);
    *(void *)(v0 + 2352) = v15;
    uint64_t v11 = sub_214BA3690;
    uint64_t v10 = v14;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 2080);
    uint64_t v11 = sub_214BA3398;
  }
  return MEMORY[0x270FA2498](v11, v10, 0);
}

uint64_t sub_214BA3398()
{
  uint64_t v1 = v0[260];
  v0[283] = *(void *)(v1 + 432);
  v0[284] = *(void *)(v1 + 440);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214BA3414, 0, 0);
}

uint64_t sub_214BA3414()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 2272);
  uint64_t v2 = *(void *)(v0 + 2264);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3;
  *(_OWORD *)(v3 + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(v3 + 32) = 0;
  *(void *)(v3 + 64) = MEMORY[0x263F8D310];
  if (v1) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = 0xE000000000000000;
  if (v1) {
    unint64_t v6 = v1;
  }
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = v6;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_214B7E71C(v4);
  unsigned __int8 v27 = 124;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x656D6974204E444FLL, 0xEB0000000074756FLL, 0, &v27, 0, v7, 0xD000000000000087, 0x8000000214D2FED0, 0xD00000000000001CLL, 0x8000000214D2FFD0, 379);
  swift_bridgeObjectRelease();
  sub_214C6B5D0(v2, v1, v0 + 1952);
  uint64_t v9 = *(void *)(v0 + 1952);
  uint64_t v10 = *(void *)(v0 + 1960);
  uint64_t v11 = *(unsigned __int8 *)(v0 + 1968);
  uint64_t v12 = *(void *)(v0 + 1976);
  uint64_t v13 = *(void *)(v0 + 1984);
  sub_214B6AC38(v0 + 1976, v0 + 1992, &qword_26ACE4288);
  sub_214BA5200(v0 + 1992);
  swift_bridgeObjectRelease();

  *(void *)(v0 + 2312) = v13;
  *(void *)(v0 + 2304) = v12;
  *(void *)(v0 + 2296) = v11;
  *(void *)(v0 + 2288) = v10;
  *(void *)(v0 + 2280) = v9;
  sub_214B6AC38(*(void *)(v0 + 2064), v0 + 1824, &qword_26784D108);
  unint64_t v14 = *(void *)(v0 + 1848) >> 60;
  if (v14 == 15)
  {
    unint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    unint64_t v20 = 0xF000000000000000;
  }
  else
  {
    uint64_t v19 = *(unsigned int *)(v0 + 2208);
    uint64_t v17 = sub_214D19B48();
    uint64_t v18 = v21;
    unint64_t v15 = *(void *)(v0 + 2216);
    unint64_t v20 = *(void *)(v0 + 2200);
    uint64_t v16 = *(void *)(v0 + 2192);
  }
  char v22 = v14 > 0xE;
  *(void *)(v0 + 2336) = v19;
  *(void *)(v0 + 2328) = v18;
  *(void *)(v0 + 2320) = v17;
  char v23 = *(unsigned char *)(v0 + 611);
  uint64_t v24 = *(void *)(v0 + 2080);
  unsigned __int8 v28 = 1;
  *(void *)(v0 + 2344) = sub_214B697D0(v16, v20, v15, v22, &v28, v23);
  *(void *)(v0 + 2352) = v25;
  return MEMORY[0x270FA2498](sub_214BA3690, v24, 0);
}

uint64_t sub_214BA3690()
{
  uint64_t v1 = v0[260];
  v0[295] = *(void *)(v1 + 384);
  v0[296] = *(void *)(v1 + 392);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214BA370C, v1, 0);
}

uint64_t sub_214BA370C()
{
  uint64_t v1 = v0[260];
  v0[297] = *(void *)(v1 + 368);
  v0[298] = *(void *)(v1 + 376);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_214BA3788, v1, 0);
}

uint64_t sub_214BA3788()
{
  memcpy((void *)(v0 + 616), (const void *)(*(void *)(v0 + 2080) + 368), 0x252uLL);
  sub_214BA5C80((void *)(v0 + 616));
  return MEMORY[0x270FA2498](sub_214BA3808, 0, 0);
}

uint64_t sub_214BA3808()
{
  sub_214B6AC38(v0 + 712, v0 + 1352, qword_26ACE3630);
  if (sub_214B58B0C(v0 + 1352) == 1)
  {
    sub_214BA5F0C((void *)(v0 + 616));
    uint64_t v1 = 0;
    uint64_t v2 = 0;
  }
  else
  {
    sub_214B6AC38(v0 + 712, v0 + 1488, qword_26ACE3630);
    sub_214B59FE8(v0 + 1488);
    sub_214BA5F0C((void *)(v0 + 616));
    uint64_t v1 = *(void *)(v0 + 1608);
    uint64_t v2 = *(void *)(v0 + 1616);
    swift_bridgeObjectRetain();
    sub_214BA541C((void *)(v0 + 712), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
  }
  *(void *)(v0 + 2400) = v2;
  *(void *)(v0 + 2392) = v1;
  uint64_t v3 = *(void *)(v0 + 2080);
  sub_214BA6194(*(uint64_t **)(v0 + 2096));
  return MEMORY[0x270FA2498](sub_214BA391C, v3, 0);
}

uint64_t sub_214BA391C()
{
  memcpy((void *)(v0 + 16), (const void *)(*(void *)(v0 + 2080) + 368), 0x252uLL);
  sub_214BA5C80((void *)(v0 + 16));
  return MEMORY[0x270FA2498](sub_214BA399C, 0, 0);
}

uint64_t sub_214BA399C()
{
  sub_214B6AC38(v0 + 344, v0 + 1216, qword_26ACE3630);
  if (sub_214B58B0C(v0 + 1216) == 1)
  {
    sub_214BA5F0C((void *)(v0 + 16));
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    sub_214B6AC38(v0 + 344, v0 + 1624, qword_26ACE3630);
    sub_214B59FE8(v0 + 1624);
    sub_214BA5F0C((void *)(v0 + 16));
    uint64_t v30 = *(void *)(v0 + 1752);
    uint64_t v31 = *(void *)(v0 + 1744);
    swift_bridgeObjectRetain();
    sub_214BA541C((void *)(v0 + 344), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214BA5480);
  }
  uint64_t v18 = *(void *)(v0 + 2400);
  uint64_t v1 = *(void *)(v0 + 2392);
  long long v15 = *(_OWORD *)(v0 + 2360);
  long long v16 = *(_OWORD *)(v0 + 2376);
  uint64_t v26 = *(void *)(v0 + 2344);
  uint64_t v27 = *(void *)(v0 + 2352);
  uint64_t v2 = *(void *)(v0 + 2336);
  long long v23 = *(_OWORD *)(v0 + 2320);
  uint64_t v28 = *(void *)(v0 + 2312);
  long long v24 = *(_OWORD *)(v0 + 2280);
  long long v25 = *(_OWORD *)(v0 + 2296);
  uint64_t v3 = *(void *)(v0 + 2232);
  uint64_t v4 = *(void *)(v0 + 2224);
  long long v21 = *(_OWORD *)(v0 + 2176);
  long long v19 = *(_OWORD *)(v0 + 2160);
  long long v17 = *(_OWORD *)(v0 + 2144);
  uint64_t v29 = *(void *)(v0 + 2136);
  uint64_t v5 = *(void *)(v0 + 2128);
  uint64_t v22 = *(void *)(v0 + 2120);
  uint64_t v32 = *(void *)(v0 + 2112);
  unint64_t v6 = *(uint64_t **)(v0 + 2104);
  uint64_t v7 = *(void *)(v0 + 2096);
  char v20 = *(unsigned char *)(v0 + 611);
  uint64_t v8 = *(void *)(v0 + 2080);
  *(_OWORD *)(v0 + 2008) = *(_OWORD *)(*(void *)(v0 + 2088) + 40);
  uint64_t v9 = v3 + *(int *)(v4 + 88);
  uint64_t v10 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_OWORD *)uint64_t v3 = v15;
  *(_OWORD *)(v3 + 16) = v16;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v18;
  sub_214B6AC38(v7, v3 + 48, &qword_26784D0E8);
  *(void *)(v3 + 112) = v31;
  *(void *)(v3 + 120) = v30;
  sub_214B6AC38((uint64_t)v6, v3 + 128, &qword_26784D0E8);
  *(_OWORD *)(v3 + 192) = v23;
  *(_OWORD *)(v3 + 208) = v17;
  *(_OWORD *)(v3 + 224) = v19;
  *(_OWORD *)(v3 + 240) = v21;
  *(void *)(v3 + 256) = v26;
  *(void *)(v3 + 264) = v27;
  *(void *)(v3 + 272) = v2;
  *(_OWORD *)(v3 + 280) = v24;
  *(_OWORD *)(v3 + 296) = v25;
  *(void *)(v3 + 312) = v28;
  *(unsigned char *)(v3 + 320) = v20;
  *(void *)(v3 + 328) = v22;
  *(void *)(v3 + 336) = v2 + 1;
  *(unsigned char *)(v3 + 344) = 0;
  *(void *)(v3 + 352) = v5;
  *(void *)(v3 + 360) = v2 + 2;
  *(unsigned char *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 376) = *(_OWORD *)(v0 + 2008);
  *(void *)(v3 + 392) = 0;
  *(unsigned char *)(v3 + 400) = 0;
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 192), *(void *)(v8 + 216));
  char v11 = *(unsigned char *)(v29 + 33);
  sub_214BA6194(v6);
  sub_214BA61D0(v32);
  swift_retain();
  swift_retain();
  sub_214BA5200(v0 + 2008);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 2408) = v12;
  void *v12 = v0;
  v12[1] = sub_214BA3CF4;
  uint64_t v13 = *(void *)(v0 + 2232);
  return sub_214C1EC70(v13, v11);
}

uint64_t sub_214BA3CF4()
{
  *(void *)(*(void *)v1 + 2416) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BA3E84;
  }
  else {
    uint64_t v2 = sub_214BA3E08;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BA3E08()
{
  sub_214BA629C(*(void *)(v0 + 2232), type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BA3E84()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void **)(v0 + 2416);
  *(void *)(v0 + 2040) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 2080);

    *(void *)(v0 + 2424) = *(void *)(v0 + 2048);
    return MEMORY[0x270FA2498](sub_214BA407C, v3, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 2416);
    uint64_t v5 = *(void *)(v0 + 2232);

    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    *(void *)(v0 + 2024) = 0;
    *(void *)(v0 + 2032) = 0xE000000000000000;
    sub_214D1A108();
    *(void *)(v0 + 2056) = v4;
    sub_214D1A908();
    uint64_t v6 = *(void *)(v0 + 2024);
    unint64_t v7 = *(void *)(v0 + 2032);
    LOBYTE(v10[0]) = 14;
    CoreODILogger.info(_:category:)(v6, v7, v10);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_214BA629C(v5, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_214BA407C()
{
  sub_214BA2144(*(void *)(v0 + 2424));
  return MEMORY[0x270FA2498](sub_214BA40E8, 0, 0);
}

uint64_t sub_214BA40E8()
{
  uint64_t v1 = *(void *)(v0 + 2232);
  sub_214BA621C(*(void *)(v0 + 2424));
  sub_214BA629C(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214BA4178(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(unsigned char *)(v5 + 225) = a4;
  *(unsigned char *)(v5 + 224) = a3;
  *(void *)(v5 + 144) = a1;
  *(void *)(v5 + 152) = v4;
  *(void *)(v5 + 160) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(v5 + 168) = v7;
  *(void *)(v5 + 176) = v8;
  *(void *)(v5 + 184) = v9;
  return MEMORY[0x270FA2498](sub_214BA4220, v4, 0);
}

uint64_t sub_214BA4220()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 152);
    char v3 = *(unsigned char *)(v0 + 224);
    uint64_t v4 = v2[54];
    uint64_t v5 = v2[55];
    id v6 = v1;
    swift_bridgeObjectRetain();
    sub_214C6B5D0(v4, v5, v0 + 16);
    uint64_t v26 = *(void *)(v0 + 24);
    uint64_t v27 = *(void *)(v0 + 16);
    uint64_t v28 = *(unsigned __int8 *)(v0 + 32);
    uint64_t v29 = *(void *)(v0 + 40);
    uint64_t v25 = *(void *)(v0 + 48);
    sub_214B6AC38(v0 + 40, v0 + 80, &qword_26ACE4288);
    sub_214BA5200(v0 + 80);
    swift_bridgeObjectRelease();
    unint64_t v7 = v2[19];
    *(void *)(v0 + 192) = v7;
    unint64_t v8 = v2[20];
    *(void *)(v0 + 200) = v8;
    if (v3)
    {
      unint64_t v31 = v7;
      unint64_t v32 = v8;
      LOBYTE(v30[0]) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD000000000000056, 0x8000000214D302A0, v30);
    }
    else
    {
      v30[0] = v7;
      v30[1] = v8;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v31 = 0xD000000000000008;
      unint64_t v32 = 0x8000000214D30270;
      swift_getErrorValue();
      sub_214D1AC88();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0xD000000000000026, 0x8000000214D30270, &v31);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v24 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 152);
    char v23 = *(unsigned char *)(v0 + 225);
    uint64_t v15 = *(void *)(v13 + 384);
    uint64_t v14 = *(void *)(v13 + 392);
    uint64_t v16 = v2[46];
    uint64_t v17 = *(void *)(v13 + 376);
    uint64_t v18 = v12 + *(int *)(*(void *)(v0 + 160) + 88);
    uint64_t v19 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *(void *)uint64_t v12 = v15;
    *(void *)(v12 + 8) = v14;
    *(void *)(v12 + 16) = v16;
    *(void *)(v12 + 24) = v17;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)(v12 + 48) = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
    *(_OWORD *)(v12 + 80) = 0u;
    *(_OWORD *)(v12 + 96) = 0u;
    *(_OWORD *)(v12 + 112) = 0u;
    *(_OWORD *)(v12 + 128) = 0u;
    *(_OWORD *)(v12 + 144) = 0u;
    *(_OWORD *)(v12 + 160) = 0u;
    *(_OWORD *)(v12 + 176) = 0u;
    *(_OWORD *)(v12 + 192) = 0u;
    *(_OWORD *)(v12 + 208) = 0u;
    *(_OWORD *)(v12 + 224) = 0u;
    *(_OWORD *)(v12 + 240) = 0u;
    *(_OWORD *)(v12 + 256) = 0u;
    *(void *)(v12 + 272) = -1;
    *(void *)(v12 + 280) = v27;
    *(void *)(v12 + 288) = v26;
    *(void *)(v12 + 296) = v28;
    *(void *)(v12 + 304) = v29;
    *(void *)(v12 + 312) = v25;
    *(unsigned char *)(v12 + 320) = v23;
    *(void *)(v12 + 328) = 0;
    *(void *)(v12 + 336) = 0;
    *(unsigned char *)(v12 + 344) = 1;
    *(void *)(v12 + 352) = 0;
    *(void *)(v12 + 360) = 0;
    *(unsigned char *)(v12 + 368) = 1;
    *(void *)(v12 + 376) = v24;
    *(void *)(v12 + 384) = v11;
    *(void *)(v12 + 392) = 0;
    *(unsigned char *)(v12 + 400) = 1;
    __swift_project_boxed_opaque_existential_1((void *)(v13 + 192), *(void *)(v13 + 216));
    char v20 = *(unsigned char *)(v13 + 961);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v21;
    *long long v21 = v0;
    v21[1] = sub_214BA45B4;
    uint64_t v22 = *(void *)(v0 + 168);
    return sub_214C1EC70(v22, v20);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_214BA45B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v4 = sub_214BA4768;
  }
  else {
    uint64_t v4 = sub_214BA46E0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BA46E0()
{
  uint64_t v1 = *(void *)(v0 + 168);

  sub_214BA629C(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214BA4768()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 216);
  *(void *)(v0 + 112) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v4 = *(void **)(v0 + 144);

    unint64_t v5 = *(void *)(v0 + 120);
    sub_214BA2144(v5);
    sub_214BA621C(v5);

    sub_214BA629C(v3, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 168);
    unint64_t v8 = *(void **)(v0 + 144);

    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    *(void *)(v0 + 96) = 0;
    *(void *)(v0 + 104) = 0xE000000000000000;
    sub_214D1A108();
    *(void *)(v0 + 136) = v6;
    sub_214D1A908();
    uint64_t v9 = *(void *)(v0 + 96);
    unint64_t v10 = *(void *)(v0 + 104);
    LOBYTE(v13[0]) = 14;
    CoreODILogger.info(_:category:)(v9, v10, v13);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_214BA629C(v7, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  }
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_214BA495C(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 120) = a3;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_214BA4984, v3, 0);
}

uint64_t sub_214BA4984()
{
  uint64_t v1 = (void *)v0[4];
  if (v1[55])
  {
    uint64_t v2 = v1[54];
    unint64_t v3 = v1[55];
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1[56];
  v0[8] = v1[57];
  uint64_t v4 = qword_26784C878;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_2678635D8;
  v0[9] = qword_2678635D8;
  return MEMORY[0x270FA2498](sub_214BA4A5C, v5, 0);
}

uint64_t sub_214BA4A5C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    v0[13] = *(void *)(v1 + 112);
    v0[14] = v2;
    uint64_t v3 = v0[4];
    swift_bridgeObjectRetain();
    return MEMORY[0x270FA2498](sub_214BA4CDC, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    void *v4 = v0;
    v4[1] = sub_214BA4B40;
    return sub_214BCE8CC();
  }
}

uint64_t sub_214BA4B40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 72);
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BA4C58, v4, 0);
}

uint64_t sub_214BA4C58()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  *(void *)(v2 + 112) = v0[11];
  *(void *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[12];
  v0[13] = v0[11];
  v0[14] = v3;
  uint64_t v4 = v0[4];
  return MEMORY[0x270FA2498](sub_214BA4CDC, v4, 0);
}

uint64_t sub_214BA4CDC()
{
  uint64_t v1 = (uint64_t *)(*(void *)(*(void *)(v0 + 32) + 232)
                 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = qword_26ACE44D0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 48);
  char v8 = *(unsigned char *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v12 = qword_26ACEBAB8;
  uint64_t v11 = qword_26ACEBAC0;
  long long v13 = *(_OWORD *)(v0 + 56);
  *(void *)uint64_t v10 = *(void *)(v0 + 40);
  *(void *)(v10 + 8) = v7;
  *(_OWORD *)(v10 + 16) = v13;
  *(void *)(v10 + 32) = v6;
  *(void *)(v10 + 40) = v5;
  *(void *)(v10 + 48) = v2;
  *(void *)(v10 + 56) = v3;
  *(void *)(v10 + 64) = 0;
  *(void *)(v10 + 72) = 0;
  *(unsigned char *)(v10 + 80) = 1;
  *(void *)(v10 + 88) = 0;
  *(void *)(v10 + 96) = v12;
  *(void *)(v10 + 104) = v11;
  *(unsigned char *)(v10 + 112) = -47;
  *(void *)(v10 + 120) = v9;
  *(unsigned char *)(v10 + 128) = v8;
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v15();
}

uint64_t sub_214BA4DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_214D1A0A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2
    && (sub_214D1A088(),
        uint64_t v8 = sub_214D1A048(),
        unint64_t v10 = v9,
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3),
        v10 >> 60 != 15))
  {
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA64C8();
    sub_214D19748();
    swift_release();
    unint64_t v12 = v21;
    uint64_t v19 = v20;
    uint64_t v13 = v22;
    char v14 = v23;
    uint64_t v11 = v24 & 1;
    sub_214D19798();
    swift_allocObject();
    sub_214D19788();
    uint64_t v20 = v19;
    unint64_t v21 = v12;
    uint64_t v22 = v13;
    char v23 = v14;
    char v24 = 2;
    sub_214B6AD30();
    uint64_t v15 = sub_214D19778();
    uint64_t v19 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v18 = v19;
    uint64_t v20 = v15;
    unint64_t v21 = v19;
    sub_214D1A088();
    sub_214B6AD84();
    sub_214D1A068();
    sub_214B59EAC(v8, v10);
    sub_214B58A4C(v15, v18);
  }
  else
  {
    uint64_t v20 = 0x657261685369646FLL;
    unint64_t v21 = 0xEF726567676F4C64;
    char v25 = 1;
    CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x8000000214D305B0, &v25);
    swift_bridgeObjectRetain();
    return 0;
  }
  return v11;
}

uint64_t sub_214BA5200(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BA522C(uint64_t a1)
{
  return a1;
}

id sub_214BA5258(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_214BA5268(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_214BA5278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_214BA531C()
{
  unint64_t result = qword_26784D0C8;
  if (!qword_26784D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D0C8);
  }
  return result;
}

uint64_t sub_214BA5370(uint64_t a1)
{
  return a1;
}

unint64_t sub_214BA53C8()
{
  unint64_t result = qword_26784D0D0;
  if (!qword_26784D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D0D0);
  }
  return result;
}

void *sub_214BA541C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_214BA5480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214BA5524()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[39];
  if (v1 >> 60 != 15) {
    sub_214B58A4C(v0[38], v1);
  }
  return MEMORY[0x270FA0238](v0, 322, 7);
}

uint64_t sub_214BA560C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 88);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_214B6A55C;
  return sub_214BA2E58(a1, a2, a3, v9, v3 + 24, v6, v3 + 96, v3 + 160);
}

uint64_t sub_214BA5714(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BA576C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v2, v3);
  return a1;
}

uint64_t sub_214BA57B0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_214BA5838(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  sub_214B59EAC(*a1, a1[1]);
  sub_214B58A4C(v2, v3);
  sub_214B59EAC(v4, v5);
  return a1;
}

uint64_t sub_214BA5898(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BA5924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_214BA598C(uint64_t *a1)
{
  uint64_t v2 = a1[19];
  uint64_t v3 = a1[20];
  uint64_t v6 = a1[27];
  uint64_t v9 = a1[29];
  unint64_t v5 = a1[28];
  uint64_t v7 = a1[31];
  uint64_t v8 = a1[30];
  uint64_t v10 = a1[49];
  uint64_t v11 = a1[48];
  unint64_t v12 = a1[57];
  uint64_t v13 = a1[56];
  sub_214BA5480(*a1, a1[1], a1[2]);
  swift_bridgeObjectRelease();
  sub_214B7902C(v2, v3);
  sub_214B59EAC(v6, v5);
  sub_214BA5480(v9, v8, v7);
  swift_bridgeObjectRelease();
  sub_214B7902C(v11, v10);
  sub_214B59EAC(v13, v12);
  return a1;
}

uint64_t *sub_214BA5B58(uint64_t *a1)
{
  uint64_t v2 = a1[19];
  unint64_t v3 = a1[20];
  uint64_t v4 = a1[23];
  uint64_t v6 = a1[22];
  uint64_t v7 = a1[21];
  unint64_t v8 = a1[41];
  uint64_t v9 = a1[40];
  sub_214BA5480(*a1, a1[1], a1[2]);
  swift_bridgeObjectRelease();
  sub_214B59EAC(v2, v3);
  sub_214BA5480(v7, v6, v4);
  swift_bridgeObjectRelease();
  sub_214B59EAC(v9, v8);
  return a1;
}

void *sub_214BA5C80(void *a1)
{
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v6 = a1[32];
  uint64_t v7 = a1[31];
  uint64_t v9 = a1[39];
  unint64_t v8 = a1[40];
  uint64_t v12 = a1[42];
  uint64_t v13 = a1[41];
  uint64_t v11 = a1[43];
  uint64_t v10 = a1[60];
  uint64_t v14 = a1[61];
  unint64_t v15 = a1[69];
  uint64_t v16 = a1[68];
  uint64_t v18 = a1[72];
  unint64_t v17 = a1[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214BA5278(v5, v4, v3);
  swift_bridgeObjectRetain();
  sub_214B79260(v7, v6);
  sub_214B6A3F8(v9, v8);
  sub_214BA5278(v13, v12, v11);
  swift_bridgeObjectRetain();
  sub_214B79260(v10, v14);
  sub_214B6A3F8(v16, v15);
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v18, v17);
  return a1;
}

void *sub_214BA5F0C(void *a1)
{
  uint64_t v4 = a1[13];
  uint64_t v5 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v6 = a1[32];
  uint64_t v7 = a1[31];
  uint64_t v9 = a1[39];
  unint64_t v8 = a1[40];
  uint64_t v12 = a1[42];
  uint64_t v13 = a1[41];
  uint64_t v11 = a1[43];
  uint64_t v10 = a1[60];
  uint64_t v14 = a1[61];
  unint64_t v15 = a1[69];
  uint64_t v16 = a1[68];
  uint64_t v18 = a1[72];
  unint64_t v17 = a1[73];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BA5480(v5, v4, v3);
  swift_bridgeObjectRelease();
  sub_214B7902C(v7, v6);
  sub_214B59EAC(v9, v8);
  sub_214BA5480(v13, v12, v11);
  swift_bridgeObjectRelease();
  sub_214B7902C(v10, v14);
  sub_214B59EAC(v16, v15);
  swift_bridgeObjectRelease();
  sub_214B59EAC(v18, v17);
  return a1;
}

uint64_t *sub_214BA6194(uint64_t *a1)
{
  return a1;
}

uint64_t sub_214BA61D0(uint64_t a1)
{
  return a1;
}

void sub_214BA621C(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return;
    }
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
}

uint64_t sub_214BA6238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BA629C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_214BA62FC(uint64_t a1)
{
  return a1;
}

unint64_t sub_214BA6410()
{
  unint64_t result = qword_26784D128;
  if (!qword_26784D128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D128);
  }
  return result;
}

uint64_t sub_214BA6464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_214BA64C8()
{
  unint64_t result = qword_26784D130;
  if (!qword_26784D130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784D130);
  }
  return result;
}

uint64_t sub_214BA651C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214BA658C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214BA65FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BA6664()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214BA669C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_214BA6744;
  v2[8] = v0;
  return MEMORY[0x270FA2498](sub_214B9A120, 0, 0);
}

uint64_t sub_214BA6744(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

void *initializeBufferWithCopyOfBuffer for ODNAssessmentsManager.ODNAssessmentsManagerError(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    uint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentsManager.ODNAssessmentsManagerError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentsManager.ODNAssessmentsManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_214BA6A58(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_214BA6A70(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentsManager.ODNAssessmentsManagerError()
{
  return &type metadata for ODNAssessmentsManager.ODNAssessmentsManagerError;
}

uint64_t HTTPStatusCode.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    uint64_t result = 0x2073736563637553;
    switch(*(void *)v0)
    {
      case 1:
      case 0xALL:
      case 0xFLL:
        uint64_t result = 0xD000000000000019;
        break;
      case 2:
        uint64_t result = 0xD000000000000017;
        break;
      case 3:
        uint64_t result = 0xD000000000000012;
        break;
      case 4:
        uint64_t result = 0xD000000000000011;
        break;
      case 5:
        uint64_t result = 0xD000000000000012;
        break;
      case 6:
        uint64_t result = 0x6564646962726F46;
        break;
      case 7:
        uint64_t result = 0x6E756F6620746F4ELL;
        break;
      case 8:
        uint64_t result = 0xD00000000000001BLL;
        break;
      case 9:
        uint64_t result = 0xD000000000000017;
        break;
      case 0xBLL:
        uint64_t result = 0xD000000000000014;
        break;
      case 0xCLL:
        uint64_t result = 0xD00000000000001BLL;
        break;
      case 0xDLL:
        uint64_t result = 0xD000000000000015;
        break;
      case 0xELL:
        uint64_t result = 0xD000000000000011;
        break;
      case 0x10:
        uint64_t result = 0xD000000000000015;
        break;
      default:
        return result;
    }
  }
  else
  {
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    return 0x206E776F6E6B6E55;
  }
  return result;
}

uint64_t sub_214BA6D38@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result <= 399)
  {
    switch(result)
    {
      case 200:
        uint64_t result = 0;
        char v2 = 1;
        break;
      case 301:
        char v2 = 1;
        uint64_t result = 2;
        break;
      case 304:
        char v2 = 1;
        uint64_t result = 3;
        break;
      default:
LABEL_22:
        char v2 = 0;
        break;
    }
  }
  else
  {
    switch(result)
    {
      case 400:
        char v2 = 1;
        uint64_t result = 4;
        break;
      case 401:
        char v2 = 1;
        uint64_t result = 5;
        break;
      case 403:
        char v2 = 1;
        uint64_t result = 6;
        break;
      case 404:
        char v2 = 1;
        uint64_t result = 7;
        break;
      case 428:
        char v2 = 1;
        uint64_t result = 8;
        break;
      case 429:
        char v2 = 1;
        uint64_t result = 9;
        break;
      case 433:
        char v2 = 1;
        uint64_t result = 10;
        break;
      case 434:
        char v2 = 1;
        uint64_t result = 11;
        break;
      case 500:
        char v2 = 1;
        uint64_t result = 12;
        break;
      case 501:
        char v2 = 1;
        uint64_t result = 13;
        break;
      case 502:
        char v2 = 1;
        uint64_t result = 14;
        break;
      case 503:
        char v2 = 1;
        uint64_t result = 15;
        break;
      case 504:
        char v2 = 1;
        uint64_t result = 16;
        break;
      default:
        goto LABEL_22;
    }
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

BOOL _s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*((unsigned char *)a1 + 8) == 1)
  {
    switch(v2)
    {
      case 1:
        if (v3 != 1) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (v3 != 2) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (v3 != 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (v3 != 4) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if (v3 != 5) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 6:
        if (v3 != 6) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 7:
        if (v3 != 7) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 8:
        if (v3 != 8) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 9:
        if (v3 != 9) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 10:
        if (v3 != 10) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 11:
        if (v3 != 11) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 12:
        if (v3 != 12) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 13:
        if (v3 != 13) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 14:
        if (v3 != 14) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 15:
        if (v3 != 15) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 16:
        if (v3 <= 0xF) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)BOOL result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HTTPStatusCode(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HTTPStatusCode(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)BOOL result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)BOOL result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_214BA7250(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_214BA726C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)BOOL result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPStatusCode()
{
  return &type metadata for HTTPStatusCode;
}

CoreODIEssentials::ComputationContext __swiftcall ComputationContext.init(evaluateProfile:shouldCaptureBindings:)(Swift::Bool evaluateProfile, Swift::Bool shouldCaptureBindings)
{
  Swift::Bool *v2 = evaluateProfile;
  v2[1] = shouldCaptureBindings;
  result.evaluateProfile = evaluateProfile;
  return result;
}

uint64_t ODIBindingsState.bindingsDict.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ODIBindingsState.missingBindings.getter()
{
  return swift_bridgeObjectRetain();
}

void ODIBindingsState.bindingsSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

CoreODIEssentials::ODIBindingsState __swiftcall ODIBindingsState.init(bindingsDict:missingBindings:bindingsSource:)(Swift::OpaquePointer bindingsDict, Swift::OpaquePointer missingBindings, CoreODIEssentials::ODIFieldsSource bindingsSource)
{
  char v4 = *(unsigned char *)bindingsSource;
  *(Swift::OpaquePointer *)uint64_t v3 = bindingsDict;
  *(Swift::OpaquePointer *)(v3 + 8) = missingBindings;
  *(unsigned char *)(v3 + 16) = v4;
  result.missingBindings = missingBindings;
  result.bindingsDict = bindingsDict;
  result.bindingsSource = bindingsSource;
  return result;
}

Swift::tuple_OpaquePointer_OpaquePointer __swiftcall ODIBindingsState.bindingsAndMissing()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = v1;
  char v4 = v2;
  result._1._rawValue = v4;
  result._0._rawValue = v3;
  return result;
}

uint64_t static ODIFieldsSource.isFresherOrSame(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 2;
  if (v2 != 1) {
    BOOL v4 = 0;
  }
  if (*a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 1;
  }
  if (v2 == v3) {
    return 1;
  }
  else {
    return v5;
  }
}

BOOL static ODIFieldsSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ODIFieldsSource.hash(into:)()
{
  return sub_214D1AD18();
}

uint64_t ODIFieldsSource.hashValue.getter()
{
  return sub_214D1AD48();
}

uint64_t ComputationContext.evaluateProfile.getter()
{
  return *v0;
}

uint64_t ComputationContext.shouldCaptureBindings.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Dictionary<>.isEquivalent(to:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_214BA7464(a2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return 0;
  }
  return Dictionary<>.isSubset(of:)(a1, a2);
}

uint64_t sub_214BA7464(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = a1 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    int64_t v17 = v10;
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_27;
      }
      goto LABEL_7;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v17 + 2;
      if (v17 + 2 >= v8) {
        goto LABEL_30;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v17 + 3;
        if (v17 + 3 >= v8) {
          goto LABEL_30;
        }
        unint64_t v19 = *(void *)(v4 + 8 * v10);
        if (!v19)
        {
          int64_t v10 = v17 + 4;
          if (v17 + 4 >= v8) {
            goto LABEL_30;
          }
          unint64_t v19 = *(void *)(v4 + 8 * v10);
          if (!v19)
          {
            int64_t v10 = v17 + 5;
            if (v17 + 5 >= v8) {
              goto LABEL_30;
            }
            unint64_t v19 = *(void *)(v4 + 8 * v10);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v10 << 6);
    if (!*(void *)(a2 + 16))
    {
LABEL_27:
      uint64_t v21 = 0;
LABEL_31:
      sub_214BB7994();
      return v21;
    }
LABEL_7:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    sub_214B87FEC(v15, v14);
    LOBYTE(v15) = v16;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_27;
    }
  }
  int64_t v20 = v17 + 6;
  if (v17 + 6 >= v8)
  {
LABEL_30:
    uint64_t v21 = 1;
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v17 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_30;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t Dictionary<>.isSubset(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
LABEL_6:
      uint64_t v12 = *(void *)(a2 + 56);
      uint64_t v13 = (void *)(*(void *)(a2 + 48) + 16 * v11);
      uint64_t v14 = v13[1];
      *(void *)&long long v28 = *v13;
      *((void *)&v28 + 1) = v14;
      sub_214B93DCC(v12 + 40 * v11, (uint64_t)v29);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v15 < v7)
    {
      unint64_t v16 = *(void *)(v23 + 8 * v15);
      if (v16) {
        goto LABEL_10;
      }
      int64_t v17 = v9 + 2;
      ++v9;
      if (v15 + 1 < v7)
      {
        unint64_t v16 = *(void *)(v23 + 8 * v17);
        if (v16) {
          goto LABEL_13;
        }
        int64_t v9 = v15 + 1;
        if (v15 + 2 < v7)
        {
          unint64_t v16 = *(void *)(v23 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_10;
          }
          int64_t v17 = v15 + 3;
          int64_t v9 = v15 + 2;
          if (v15 + 3 < v7) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = 0;
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    long long v28 = 0u;
LABEL_25:
    sub_214B6AC38((uint64_t)&v28, (uint64_t)&v31, &qword_26ACE3970);
    uint64_t v18 = v32;
    if (!v32) {
      goto LABEL_32;
    }
    uint64_t v19 = v31;
    sub_214B59EC0(v33, (uint64_t)&v28);
    if (*(void *)(a1 + 16) && (uint64_t v20 = sub_214B87FEC(v19, v18), (v21 & 1) != 0))
    {
      sub_214B93DCC(*(void *)(a1 + 56) + 40 * v20, (uint64_t)&v24);
    }
    else
    {
      uint64_t v26 = 0;
      long long v24 = 0u;
      long long v25 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v25 + 1))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
      swift_release();
      sub_214B59CE0((uint64_t)&v24, &qword_26784D148);
      return v18 == 0;
    }
    sub_214B59EC0(&v24, (uint64_t)v27);
    char v22 = _s17CoreODIEssentials12ODNAtorProxyC15isEqualBindings3lhs3rhsSbSH_s8Sendablep_SH_sAGptFZ_0(&v28, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    if ((v22 & 1) == 0)
    {
LABEL_32:
      swift_release();
      return v18 == 0;
    }
  }
  unint64_t v16 = *(void *)(v23 + 8 * v17);
  if (v16)
  {
LABEL_13:
    int64_t v15 = v17;
LABEL_10:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
    goto LABEL_6;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v7)
    {
      int64_t v9 = v7 - 1;
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v23 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_10;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void *ODNAtorParameters.init(bindings:missingBindings:structuredDeviceData:deviceDataFields:computationContext:contextualErrorInfo:bindingsOrigin:deviceDataOrigin:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, unsigned char *a6@<X5>, unsigned char *a7@<X6>, unsigned char *a8@<X7>, void *a9@<X8>)
{
  sub_214B6AC38(a3, (uint64_t)v19, &qword_26784D010);
  char v17 = *a5;
  LOBYTE(a5) = a5[1];
  LOBYTE(a6) = *a6;
  LOBYTE(a7) = *a7;
  LOBYTE(a8) = *a8;
  __src[0] = a1;
  __src[1] = a2;
  sub_214B6AC38((uint64_t)v19, (uint64_t)&__src[2], &qword_26784D010);
  __src[132] = a4;
  LOBYTE(__src[133]) = v17;
  BYTE1(__src[133]) = (_BYTE)a5;
  BYTE2(__src[133]) = (_BYTE)a6;
  BYTE3(__src[133]) = (_BYTE)a7;
  BYTE4(__src[133]) = (_BYTE)a8;
  return memcpy(a9, __src, 0x42DuLL);
}

uint64_t sub_214BA79EC(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = (long long *)MEMORY[0x270FA5388](a1, a2);
  uint64_t v3 = *v2;
  sub_214B6AC38((uint64_t)(v2 + 1), (uint64_t)v61, &qword_26784D010);
  int v4 = *((unsigned __int8 *)v2 + 1043);
  int v43 = *((unsigned __int8 *)v2 + 1042);
  int v44 = v4;
  uint64_t v45 = *((unsigned __int8 *)v2 + 1044);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v47 = v3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v48 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v49 = &v55;
  int64_t v42 = v48 - 1;
  uint64_t v50 = v3;
  swift_bridgeObjectRetain();
  int64_t v51 = 0;
  int64_t v9 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v51 << 6);
LABEL_8:
      uint64_t v12 = *(void *)(v50 + 56);
      uint64_t v13 = (void *)(*(void *)(v50 + 48) + 16 * v11);
      uint64_t v14 = v13[1];
      *(void *)&long long v54 = *v13;
      *((void *)&v54 + 1) = v14;
      sub_214B93DCC(v12 + 40 * v11, (uint64_t)v49);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v15 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      goto LABEL_45;
    }
    if (v15 < v48)
    {
      unint64_t v16 = *(void *)(v47 + 8 * v15);
      if (v16) {
        goto LABEL_12;
      }
      int64_t v17 = v51 + 2;
      ++v51;
      if (v15 + 1 < v48)
      {
        unint64_t v16 = *(void *)(v47 + 8 * v17);
        if (v16) {
          goto LABEL_15;
        }
        int64_t v51 = v15 + 1;
        if (v15 + 2 < v48)
        {
          unint64_t v16 = *(void *)(v47 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
LABEL_12:
            unint64_t v8 = (v16 - 1) & v16;
            unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
            int64_t v51 = v15;
            goto LABEL_8;
          }
          int64_t v17 = v15 + 3;
          int64_t v51 = v15 + 2;
          if (v15 + 3 < v48)
          {
            unint64_t v16 = *(void *)(v47 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v15 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_46;
                }
                if (v15 >= v48)
                {
                  int64_t v51 = v42;
                  goto LABEL_26;
                }
                unint64_t v16 = *(void *)(v47 + 8 * v15);
                ++v17;
                if (v16) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            int64_t v15 = v17;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    unint64_t v8 = 0;
    uint64_t v57 = 0;
    long long v56 = 0u;
    long long v55 = 0u;
    long long v54 = 0u;
LABEL_27:
    sub_214B6AC38((uint64_t)&v54, (uint64_t)&v58, &qword_26ACE3970);
    uint64_t v18 = v59;
    if (!v59) {
      break;
    }
    uint64_t v19 = v58;
    uint64_t v20 = __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    MEMORY[0x270FA5388](v20, v20);
    (*(void (**)(char *))(v22 + 16))((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    sub_214D1A728();
    v53[0] = v54;
    v53[1] = v55;
    *(void *)&v53[2] = v56;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52[0] = v9;
    unint64_t v25 = sub_214B87FEC(v19, v18);
    uint64_t v26 = v9[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      uint64_t result = sub_214D1AC58();
      __break(1u);
      return result;
    }
    char v29 = v24;
    if (v9[3] >= v28)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v9 = (void *)v52[0];
        if (v24) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_214B8F4AC();
        int64_t v9 = (void *)v52[0];
        if (v29) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_214B8A680(v28, isUniquelyReferenced_nonNull_native);
      uint64_t v30 = sub_214B87FEC(v19, v18);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_47;
      }
      unint64_t v25 = v30;
      int64_t v9 = (void *)v52[0];
      if (v29)
      {
LABEL_4:
        sub_214BB6C58((uint64_t)v53, v9[7] + 40 * v25);
        goto LABEL_5;
      }
    }
    v9[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v32 = (uint64_t *)(v9[6] + 16 * v25);
    *uint64_t v32 = v19;
    v32[1] = v18;
    uint64_t v33 = v9[7] + 40 * v25;
    long long v34 = v53[0];
    long long v35 = v53[1];
    *(void *)(v33 + 32) = *(void *)&v53[2];
    *(_OWORD *)uint64_t v33 = v34;
    *(_OWORD *)(v33 + 16) = v35;
    uint64_t v36 = v9[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_44;
    }
    void v9[2] = v38;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v39 = v46;
  sub_214CDEA1C(v46, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_214B6AC38((uint64_t)v61, (uint64_t)&v54, &qword_26784D010);
  if (sub_214B945BC((uint64_t *)&v54) == 1)
  {
    sub_214D1AD28();
  }
  else
  {
    sub_214B6AC38((uint64_t)v61, (uint64_t)v53, &qword_26784D010);
    memcpy(v52, v53, 0x40AuLL);
    sub_214D1AD28();
    ArmandDeviceData.hash(into:)(v39);
  }
  sub_214D1AD28();
  sub_214D1AD28();
  return sub_214D1AD18();
}

uint64_t sub_214BA7F1C()
{
  sub_214B6AC38(v0 + 8, (uint64_t)v9, &qword_26784D010);
  id v1 = objc_msgSend(self, sel_standardUserDefaults);
  int v2 = (void *)sub_214D1A028();
  unsigned int v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v3)
  {
    __src[0] = 0;
    __src[1] = 0xE000000000000000;
    sub_214D1A7A8();
    v5[1] = 0xE000000000000000;
    sub_214D1A108();
    sub_214B6AC38((uint64_t)v9, (uint64_t)__src, &qword_26784D010);
    sub_214B954C4(v9, sub_214B94214);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784D010);
    sub_214D1A0B8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
    sub_214D19FA8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    return 0;
  }
  else
  {
    __src[0] = 0;
    __src[1] = 0xE000000000000000;
    sub_214D1A7A8();
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    sub_214D1A108();
    sub_214B6AC38((uint64_t)v9, (uint64_t)__src, &qword_26784D010);
    if (sub_214B945BC(__src) != 1)
    {
      memcpy(v5, __src, 0x40AuLL);
      ArmandDeviceData.description.getter();
    }
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
    sub_214D19FC8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    return v6;
  }
}

uint64_t sub_214BA82CC()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_214D1AD08();
  sub_214BA79EC((uint64_t)&v3, v1);
  return sub_214D1AD48();
}

uint64_t sub_214BA8324()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_214D1AD08();
  sub_214BA79EC((uint64_t)&v3, v1);
  return sub_214D1AD48();
}

void *sub_214BA838C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x270FA5388](a1, a2);
  uint64_t v103 = v5;
  uint64_t v104 = v3;
  uint64_t v6 = v2;
  uint64_t v7 = v4;
  unint64_t v8 = v150;
  uint64_t v9 = type metadata accessor for ODNAssessmentResult();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  uint64_t v100 = (uint64_t)v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v14);
  uint64_t v113 = (uint64_t)v94 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D150);
  MEMORY[0x270FA5388](v16 - 8, v17);
  uint64_t v122 = (uint64_t)v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D158);
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8, v20);
  unint64_t v101 = (char *)v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21, v23);
  uint64_t v116 = (uint64_t)v94 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24, v26);
  char v29 = (char *)v94 - v28;
  MEMORY[0x270FA5388](v27, v30);
  uint64_t v32 = (char *)v94 - v31;
  uint64_t v33 = *(void *)v7;
  uint64_t v99 = *(void *)(v7 + 8);
  LODWORD(v7) = *(unsigned __int8 *)(v7 + 16);
  sub_214BAE744(v152);
  v153[0] = v33;
  sub_214B6AC38((uint64_t)v152, (uint64_t)&v153[1], &qword_26784D010);
  WORD1(v153[130]) = 257;
  unsigned int v127 = v7;
  BYTE4(v153[130]) = v7;
  uint64_t v126 = v10;
  long long v34 = *(void (**)(void, void, void, void))(v10 + 56);
  uint64_t v107 = v32;
  uint64_t v119 = v9;
  long long v97 = v34;
  uint64_t v98 = v10 + 56;
  v34(v32, 1, 1, v9);
  uint64_t v36 = v6[15];
  uint64_t v35 = v6[16];
  v151[0] = 0;
  v151[1] = 0xE000000000000000;
  uint64_t v106 = v33;
  swift_bridgeObjectRetain();
  sub_214B93E30((uint64_t)v153);
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v148[0] = 0xD00000000000002ALL;
  v148[1] = 0x8000000214D30950;
  memcpy(v151, v153, 0x415uLL);
  sub_214B93E30((uint64_t)v153);
  sub_214BA7F1C();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214B94EE8((uint64_t)v153);
  if (qword_26784C9E8 != -1) {
LABEL_60:
  }
    swift_once();
  long long v96 = (unsigned __int8 *)v8 + 1042;
  uint64_t v37 = sub_214D19EE8();
  __swift_project_value_buffer(v37, (uint64_t)qword_267863AB8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214C3DE8C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  unint64_t v8 = v6 + 26;
  swift_beginAccess();
  uint64_t v102 = v6;
  uint64_t v38 = v6[26];
  uint64_t v39 = *(void *)(v38 + 64);
  uint64_t v120 = v38 + 64;
  uint64_t v40 = 1 << *(unsigned char *)(v38 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v154 = v41 & v39;
  uint64_t v124 = v38;
  swift_bridgeObjectRetain();
  sub_214B6AC38((uint64_t)v152, (uint64_t)v149, &qword_26784D010);
  uint64_t v42 = 1;
  int64_t v128 = 0;
  uint64_t v123 = &v148[1];
  int64_t v121 = (unint64_t)(v40 + 63) >> 6;
  uint64_t v118 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48);
  uint64_t v105 = (uint64_t)&v134 + 8;
  uint64_t v108 = 0x7FFFFFFFFFFFFFFFLL;
  v94[1] = 0x8000000214D30A00;
  uint64_t v95 = &v150[1];
  unint64_t v114 = 0x8000000214D309D0;
  uint64_t v115 = v6 + 26;
  uint64_t v125 = v106;
  int v43 = 1;
  uint64_t v111 = v29;
  uint64_t v112 = v35;
  uint64_t v117 = v36;
  uint64_t v36 = v113;
  uint64_t v44 = v122;
  uint64_t v6 = (void *)v127;
LABEL_5:
  uint64_t v110 = v42;
  LODWORD(v126) = v42 & 1;
  int v109 = v43;
  unsigned int v127 = v43 & 1;
  while (1)
  {
    v148[0] = v125;
    sub_214B6AC38((uint64_t)v149, (uint64_t)v123, &qword_26784D010);
    BYTE2(v148[130]) = v126;
    BYTE3(v148[130]) = v127;
    BYTE4(v148[130]) = (_BYTE)v6;
    uint64_t result = memcpy(v151, v148, 0x415uLL);
    if (!v154) {
      break;
    }
    unint64_t v46 = __clz(__rbit64(v154));
    v154 &= v154 - 1;
    unint64_t v47 = v46 | (v128 << 6);
LABEL_27:
    memcpy(v150, (const void *)(*(void *)(v124 + 48) + 1048 * v47), 0x415uLL);
    uint64_t v52 = *v8;
    if (*(void *)(*v8 + 16))
    {
      sub_214B93E30((uint64_t)v150);
      sub_214B93E30((uint64_t)v150);
      swift_bridgeObjectRetain();
      unint64_t v53 = sub_214B88214(v150);
      if (v54)
      {
        unint64_t v55 = v53;
        uint64_t v56 = *(void *)(v52 + 56);
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
        uint64_t v58 = *(void *)(v57 - 8);
        uint64_t v59 = v56 + *(void *)(v58 + 72) * v55;
        uint64_t v44 = v122;
        char v29 = v111;
        sub_214B95764(v59, v122, &qword_26784D000);
        uint64_t v60 = v57;
        uint64_t v36 = v113;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v44, 0, 1, v60);
        uint64_t v35 = v112;
      }
      else
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v44, 1, 1, v62);
      }
      swift_bridgeObjectRelease();
      sub_214B94EE8((uint64_t)v150);
    }
    else
    {
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v44, 1, 1, v61);
      sub_214B93E30((uint64_t)v150);
    }
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v44, 1, v63) == 1)
    {
      sub_214B94EE8((uint64_t)v150);
      sub_214B59CE0(v44, &qword_26784D150);
      sub_214B6AC38((uint64_t)v149, (uint64_t)&v134, &qword_26784D010);
      sub_214B6AC38((uint64_t)&v134, (uint64_t)v149, &qword_26784D010);
    }
    else
    {
      swift_release();
      sub_214B6AC38(v44 + *(int *)(v63 + 48), (uint64_t)v29, &qword_26784D158);
      uint64_t v64 = v116;
      sub_214B95764((uint64_t)v29, v116, &qword_26784D158);
      uint64_t v65 = *v118;
      if ((*v118)(v64, 1, v119) == 1)
      {
        sub_214B94EE8((uint64_t)v150);
        sub_214B59CE0(v64, &qword_26784D158);
        uint64_t v69 = (long long *)v149;
LABEL_47:
        sub_214B6AC38((uint64_t)v69, (uint64_t)v146, &qword_26784D010);
        *(void *)&long long v134 = v125;
        sub_214B6AC38((uint64_t)v146, v105, &qword_26784D010);
        char v143 = v126;
        char v144 = v127;
        char v145 = (char)v6;
        if (v108)
        {
          sub_214B59CE0((uint64_t)v29, &qword_26784D158);
          sub_214B6AC38((uint64_t)v146, (uint64_t)v149, &qword_26784D010);
          uint64_t v42 = v110;
          int v43 = v109;
          goto LABEL_5;
        }
        sub_214B94EE8((uint64_t)&v134);
        sub_214B94EE8((uint64_t)v153);
        uint64_t v76 = v117;
        uint64_t v129 = v117;
        uint64_t v130 = v35;
        *(void *)&long long v133 = 0;
        *((void *)&v133 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        *(void *)&long long v133 = 0xD000000000000026;
        *((void *)&v133 + 1) = 0x8000000214D30980;
        uint64_t v73 = (uint64_t)v107;
        if (v65((uint64_t)v107, 1, v119) || !*(void *)(v73 + 280))
        {
          swift_bridgeObjectRelease();
          uint64_t v75 = (uint64_t)v101;
          unint64_t v74 = v102;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v75 = (uint64_t)v101;
          unint64_t v74 = v102;
        }
        sub_214D1A108();
        swift_bridgeObjectRelease();
        uint64_t v93 = v133;
        LOBYTE(v133) = 13;
        CoreODILogger.debug(_:category:)(v93, *((unint64_t *)&v133 + 1), &v133);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214B59CE0((uint64_t)v111, &qword_26784D158);
        swift_release();
        goto LABEL_50;
      }
      uint64_t v66 = v6;
      sub_214BB7578(v64, v36, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
      swift_bridgeObjectRetain();
      sub_214B93E30((uint64_t)v148);
      uint64_t v67 = v117;
      BOOL v68 = sub_214BAD2D8((uint64_t)v150, (uint64_t)v151);
      sub_214B94EE8((uint64_t)v148);
      swift_bridgeObjectRelease();
      if (v68)
      {
        if (*(void *)(v106 + 16) - *(void *)(v150[0] + 16) >= v108)
        {
          uint64_t v6 = v66;
          sub_214BB75E0(v36, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
          sub_214B94EE8((uint64_t)v150);
          sub_214B6AC38((uint64_t)v149, (uint64_t)&v134, &qword_26784D010);
          unint64_t v8 = v115;
        }
        else
        {
          uint64_t v110 = *(void *)(v106 + 16) - *(void *)(v150[0] + 16);
          uint64_t v125 = v150[0];
          sub_214B94EE8((uint64_t)v148);
          *(void *)&long long v133 = v117;
          *((void *)&v133 + 1) = v35;
          *(void *)&long long v134 = 0;
          *((void *)&v134 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_214D1A7A8();
          swift_bridgeObjectRelease();
          uint64_t v131 = 0x20746C75736552;
          unint64_t v132 = 0xE700000000000000;
          unint64_t v8 = v115;
          swift_bridgeObjectRetain();
          sub_214D1A108();
          swift_bridgeObjectRelease();
          sub_214D1A108();
          uint64_t v70 = (uint64_t)v107;
          unsigned int v71 = v65((uint64_t)v107, 1, v119);
          if (v71 || !*(void *)(v70 + 280)) {
            swift_bridgeObjectRelease();
          }
          else {
            swift_bridgeObjectRetain();
          }
          sub_214D1A108();
          swift_bridgeObjectRelease();
          LOBYTE(v134) = 13;
          CoreODILogger.debug(_:category:)(v131, v132, &v134);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = (uint64_t)v107;
          sub_214B59CE0((uint64_t)v107, &qword_26784D158);
          uint64_t v36 = v113;
          sub_214BB7578(v113, v72, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
          v97(v72, 0, 1, v119);
          uint64_t v6 = (void *)BYTE4(v150[130]);
          unsigned int v127 = v96[1];
          LODWORD(v126) = *v96;
          sub_214B6AC38((uint64_t)v95, (uint64_t)&v129, &qword_26784D010);
          sub_214B6AC38((uint64_t)&v129, (uint64_t)&v134, &qword_26784D010);
          uint64_t v108 = v110;
          uint64_t v110 = v126;
          int v109 = v127;
        }
        uint64_t v69 = &v134;
        goto LABEL_47;
      }
      sub_214B94EE8((uint64_t)v150);
      uint64_t v129 = v67;
      uint64_t v130 = v35;
      *(void *)&long long v134 = 0;
      *((void *)&v134 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      long long v133 = v134;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      LOBYTE(v134) = 13;
      CoreODILogger.debug(_:category:)(v133, *((unint64_t *)&v133 + 1), &v134);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214BB75E0(v36, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
      sub_214B59CE0((uint64_t)v29, &qword_26784D158);
      sub_214B6AC38((uint64_t)v149, (uint64_t)&v134, &qword_26784D010);
      sub_214B6AC38((uint64_t)&v134, (uint64_t)v149, &qword_26784D010);
      uint64_t v44 = v122;
      uint64_t v6 = v66;
      unint64_t v8 = v115;
    }
  }
  int64_t v48 = v128 + 1;
  if (__OFADD__(v128, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v48 >= v121)
  {
LABEL_49:
    swift_release();
    sub_214B94EE8((uint64_t)v148);
    sub_214B94EE8((uint64_t)v153);
    uint64_t v73 = (uint64_t)v107;
    uint64_t v75 = (uint64_t)v101;
    unint64_t v74 = v102;
    uint64_t v76 = v117;
LABEL_50:
    sub_214B95764(v73, v75, &qword_26784D158);
    if ((*v118)(v75, 1, v119) == 1)
    {
      sub_214B59CE0(v75, &qword_26784D158);
      *(void *)&long long v134 = v76;
      *((void *)&v134 + 1) = v112;
      LOBYTE(v146[0]) = 13;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD000000000000018, 0x8000000214D309B0, v146);
      swift_bridgeObjectRelease();
      uint64_t v78 = v74[19];
      uint64_t v77 = v74[20];
      sub_214BAE754((uint64_t)&v129);
      long long v137 = 0u;
      long long v136 = 0u;
      long long v135 = 0u;
      long long v134 = 0u;
      long long v138 = 0u;
      long long v139 = xmmword_214D1F8F0;
      *(void *)&long long v140 = 1;
      *((void *)&v140 + 1) = v78;
      *(void *)&v141[0] = v77;
      sub_214B6AC38((uint64_t)&v129, (uint64_t)v141 + 8, &qword_26784D050);
      uint64_t v79 = v74[24];
      uint64_t v80 = v74[25];
      __swift_project_boxed_opaque_existential_1(v74 + 21, v79);
      v146[12] = v141[5];
      v146[13] = v141[6];
      v147[0] = v142[0];
      *(_OWORD *)((char *)v147 + 9) = *(_OWORD *)((char *)v142 + 9);
      v146[8] = v141[1];
      v146[9] = v141[2];
      v146[10] = v141[3];
      v146[11] = v141[4];
      v146[4] = v138;
      v146[5] = v139;
      v146[6] = v140;
      v146[7] = v141[0];
      v146[0] = v134;
      v146[1] = v135;
      v146[2] = v136;
      v146[3] = v137;
      unint64_t v81 = *(uint64_t (**)(void, void, void))(v80 + 8);
      swift_bridgeObjectRetain();
      uint64_t v82 = v81(v146, v79, v80);
      uint64_t v84 = v83;
      uint64_t v85 = type metadata accessor for ODIErrorAssessment(0);
      unint64_t v86 = v103;
      uint64_t v87 = (char *)v103 + *(int *)(v85 + 24);
      sub_214D1A898();
      sub_214BAE770(&v134);
      uint64_t v88 = sub_214D1A8C8();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
      v86[1] = v82;
      v86[2] = v84;
      *unint64_t v86 = -3179;
      type metadata accessor for ODIAssessmentResult(0);
      uint64_t v73 = (uint64_t)v107;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v89 = v75;
      uint64_t v90 = v100;
      sub_214BB7578(v89, v100, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
      *(void *)&long long v134 = v76;
      *((void *)&v134 + 1) = v112;
      swift_bridgeObjectRetain();
      unint64_t v91 = sub_214B6B4A8();
      LOBYTE(v146[0]) = 13;
      CoreODILogger.debug(_:category:)(v91, v92, v146);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214BD54E8(v90, v99, v103);
      sub_214BB75E0(v90, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
    }
    return (void *)sub_214B59CE0(v73, &qword_26784D158);
  }
  unint64_t v49 = *(void *)(v120 + 8 * v48);
  int64_t v50 = v128 + 1;
  if (v49) {
    goto LABEL_26;
  }
  int64_t v50 = v128 + 2;
  if (v128 + 2 >= v121) {
    goto LABEL_49;
  }
  unint64_t v49 = *(void *)(v120 + 8 * v50);
  if (v49) {
    goto LABEL_26;
  }
  int64_t v50 = v128 + 3;
  if (v128 + 3 >= v121) {
    goto LABEL_49;
  }
  unint64_t v49 = *(void *)(v120 + 8 * v50);
  if (v49) {
    goto LABEL_26;
  }
  int64_t v50 = v128 + 4;
  if (v128 + 4 >= v121) {
    goto LABEL_49;
  }
  unint64_t v49 = *(void *)(v120 + 8 * v50);
  if (v49) {
    goto LABEL_26;
  }
  int64_t v50 = v128 + 5;
  if (v128 + 5 >= v121) {
    goto LABEL_49;
  }
  unint64_t v49 = *(void *)(v120 + 8 * v50);
  if (v49)
  {
LABEL_26:
    unint64_t v154 = (v49 - 1) & v49;
    int64_t v128 = v50;
    unint64_t v47 = __clz(__rbit64(v49)) + (v50 << 6);
    goto LABEL_27;
  }
  int64_t v51 = v128 + 6;
  if (v128 + 6 >= v121) {
    goto LABEL_49;
  }
  unint64_t v49 = *(void *)(v120 + 8 * v51);
  if (v49)
  {
    int64_t v50 = v128 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v50 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    if (v50 >= v121) {
      goto LABEL_49;
    }
    unint64_t v49 = *(void *)(v120 + 8 * v50);
    ++v51;
    if (v49) {
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t ODNAtorProxy.__allocating_init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a8;
  swift_allocObject();
  uint64_t v19 = (char *)&dword_26784D168 + dword_26784D168;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_214BA96E8;
  return ((uint64_t (*)(uint64_t, uint64_t, unsigned char *, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))v19)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_214BA96E8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t ODNAtorProxy.init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (char *)&dword_26784D168 + dword_26784D168;
  *(void *)(v8 + 16) = a8;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_214BB799C;
  return ((uint64_t (*)(uint64_t, uint64_t, unsigned char *, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))v19)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_214BA9904(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 7304) = v2;
  *(void *)(v3 + 7296) = a1;
  type metadata accessor for ODNAssessmentResult();
  *(void *)(v3 + 7312) = swift_task_alloc();
  *(void *)(v3 + 7320) = *(void *)a2;
  sub_214B6AC38(a2 + 16, v3 + 1056, &qword_26784D010);
  *(void *)(v3 + 7328) = *(void *)(a2 + 1056);
  *(unsigned char *)(v3 + 1050) = *(unsigned char *)(a2 + 1064);
  return MEMORY[0x270FA2498](sub_214BA99D4, v2, 0);
}

uint64_t sub_214BA99D4()
{
  uint64_t v18 = v0;
  sub_214B6AC38(v0 + 1056, v0 + 2096, &qword_26784D010);
  sub_214B6AC38(v0 + 1056, v0 + 16, &qword_26784D010);
  if (sub_214B945BC((uint64_t *)(v0 + 16)) != 1)
  {
    uint64_t v1 = *(void *)(v0 + 7328);
    sub_214B954C4(v0 + 1056, sub_214B94214);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2096) = v1;
  }
  sub_214B6AC38(v0 + 2096, v0 + 4176, &qword_26784D010);
  sub_214B6AC38(v0 + 4176, v0 + 3136, &qword_26784D010);
  if (sub_214B945BC((uint64_t *)(v0 + 3136)) == 1)
  {
    uint64_t v3 = sub_214B57050(0x7D7BuLL, 0xE200000000000000);
    unint64_t v5 = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  else
  {
    sub_214B6AC38(v0 + 4176, v0 + 5216, &qword_26784D010);
    memcpy(v16, (const void *)(v0 + 5216), sizeof(v16));
    sub_214BB6CB4(v0 + 5216);
    uint64_t v3 = sub_214C78B10();
    unint64_t v5 = v4;
    sub_214B954C4(v0 + 4176, sub_214B94CC8);
    sub_214B6A3A0(v3, v5);
    uint64_t v6 = v3;
    unint64_t v7 = v5;
  }
  *(void *)(v0 + 7360) = v7;
  *(void *)(v0 + 7352) = v6;
  *(void *)(v0 + 7344) = v5;
  *(void *)(v0 + 7336) = v3;
  uint64_t v8 = *(void *)(v0 + 7304);
  uint64_t v9 = *(void *)(v8 + 120);
  *(void *)(v0 + 7368) = v9;
  uint64_t v10 = *(void *)(v8 + 128);
  *(void *)(v0 + 7376) = v10;
  *(void *)uint64_t v16 = v9;
  *(void *)&v16[8] = v10;
  v17[0] = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000053, 0x8000000214D30B20, v17);
  swift_bridgeObjectRelease();
  sub_214B6A3A0(v3, v5);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 7384) = v11;
  void *v11 = v0;
  v11[1] = sub_214BA9C90;
  char v12 = *(unsigned char *)(v0 + 1050);
  uint64_t v13 = *(void *)(v0 + 7320);
  uint64_t v14 = *(void *)(v0 + 7312);
  return sub_214BDCFBC(v14, v13, v3, v5, 1, v12);
}

uint64_t sub_214BA9C90()
{
  unint64_t v1 = *(void *)(*(void *)v0 + 7344);
  uint64_t v2 = *(void *)(*(void *)v0 + 7336);
  uint64_t v3 = *(void *)(*(void *)v0 + 7304);
  swift_task_dealloc();
  sub_214B58A4C(v2, v1);
  return MEMORY[0x270FA2498](sub_214BA9DDC, v3, 0);
}

uint64_t sub_214BA9DDC()
{
  uint64_t v16 = v0;
  unint64_t v1 = v0[922];
  uint64_t v2 = v0[914];
  unint64_t v14 = v0[921];
  unint64_t v15 = v1;
  LOBYTE(v13[0]) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x8000000214D30B80, v13);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 296))
  {
    uint64_t v3 = v0[922];
    unint64_t v4 = v0[920];
    uint64_t v5 = v0[919];
    unint64_t v6 = v0[918];
    uint64_t v7 = v0[917];
    v13[0] = v0[921];
    v13[1] = v3;
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000014;
    unint64_t v15 = 0x8000000214D30BB0;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v8 = v14;
    LOBYTE(v14) = 8;
    CoreODILogger.debug(_:category:)(v8, v15, &v14);
    swift_bridgeObjectRelease();
    sub_214B58A4C(v7, v6);
    sub_214B59EAC(v5, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = v0[918];
    uint64_t v10 = v0[917];
    sub_214B59EAC(v0[919], v0[920]);
    sub_214B58A4C(v10, v9);
  }
  sub_214BB7578(v0[914], v0[912], (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  sub_214B6AC38((uint64_t)(v0 + 262), (uint64_t)(v0 + 782), &qword_26784D010);
  sub_214B954C4(v0 + 782, sub_214B94CC8);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static ODNAtorProxy.workflowIdFromServiceProviderId(_:)()
{
}

uint64_t sub_214BAA054(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 2152) = v2;
  *(void *)(v3 + 2144) = a1;
  type metadata accessor for ODNAssessmentResult();
  *(void *)(v3 + 2160) = swift_task_alloc();
  *(_OWORD *)(v3 + 2168) = *(_OWORD *)a2;
  memcpy((void *)(v3 + 1096), (const void *)(a2 + 16), 0x418uLL);
  char v5 = *(unsigned char *)(a2 + 1064);
  *(unsigned char *)(v3 + 1085) = v5;
  *(unsigned char *)(v3 + 2208) = v5;
  *(unsigned char *)(v3 + 1089) = *(unsigned char *)(a2 + 1065);
  *(_WORD *)(v3 + 1086) = *(_WORD *)(a2 + 1066);
  *(unsigned char *)(v3 + 1088) = *(unsigned char *)(a2 + 1068);
  return MEMORY[0x270FA2498](sub_214BAA138, v2, 0);
}

uint64_t sub_214BAA138()
{
  uint64_t v8 = v0;
  char v1 = *(unsigned char *)(v0 + 1089);
  uint64_t v2 = *(void *)(v0 + 2152);
  *(void *)(v0 + 2184) = *(void *)(v2 + 120);
  *(void *)(v0 + 2192) = *(void *)(v2 + 128);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  long long v6 = *(_OWORD *)(v0 + 2168);
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  sub_214D19FC8();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(v7[0]) = 8;
  CoreODILogger.debug(_:category:)(0, 0xE000000000000000, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 16) = v6;
  memcpy((void *)(v0 + 32), (const void *)(v0 + 1096), 0x418uLL);
  *(unsigned char *)(v0 + 1080) = *(unsigned char *)(v0 + 2208);
  *(unsigned char *)(v0 + 1081) = v1;
  *(_WORD *)(v0 + 1082) = *(_WORD *)(v0 + 1086);
  *(unsigned char *)(v0 + 1084) = *(unsigned char *)(v0 + 1088);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 2200) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214BAA38C;
  uint64_t v4 = *(void *)(v0 + 2160);
  return sub_214BAA59C(v4, (const void *)(v0 + 16));
}

uint64_t sub_214BAA38C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2152);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BAA49C, v1, 0);
}

uint64_t sub_214BAA49C()
{
  uint64_t v9 = v0;
  uint64_t v1 = v0[272];
  uint64_t v2 = v0[270];
  uint64_t v3 = (uint64_t *)v0[268];
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_214B6B4A8();
  char v8 = 14;
  CoreODILogger.debug(_:category:)(v4, v5, &v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BD54E8(v2, v1, v3);
  sub_214BB75E0(v2, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  swift_task_dealloc();
  long long v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214BAA59C(uint64_t a1, const void *a2)
{
  v3[538] = v2;
  v3[537] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  v3[539] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  v3[540] = v5;
  v3[541] = *(void *)(v5 - 8);
  v3[542] = swift_task_alloc();
  v3[543] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D150);
  v3[544] = swift_task_alloc();
  v3[545] = swift_task_alloc();
  v3[546] = swift_task_alloc();
  memcpy(v3 + 2, a2, 0x42DuLL);
  return MEMORY[0x270FA2498](sub_214BAA710, v2, 0);
}

uint64_t sub_214BAA710()
{
  uint64_t v64 = v0;
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0 + 136;
  unint64_t v4 = v0 + 267;
  uint64_t v5 = (uint64_t)(v0 + 398);
  long long v6 = (void *)v0[538];
  sub_214B6AC38(v1 + 16, v5, &qword_26784D010);
  char v7 = *(unsigned char *)(v1 + 1064);
  char v8 = *(unsigned char *)(v1 + 1065) & 1;
  char v9 = *(unsigned char *)(v1 + 1067);
  *(void *)(v1 + 2120) = v2;
  sub_214B6AC38(v5, v1 + 2128, &qword_26784D010);
  *(unsigned char *)(v1 + 3162) = v7 & 1;
  *(unsigned char *)(v1 + 3163) = v8;
  *(unsigned char *)(v1 + 3164) = v9;
  uint64_t v61 = (uint64_t)v4;
  memcpy(v3, v4, 0x415uLL);
  uint64_t v10 = v6[15];
  uint64_t v11 = v6[16];
  __dst[0] = 8;
  __dst[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214B954C4(v5, sub_214B94214);
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  CoreODILogger.debug(_:category:)(0, 0xE000000000000000, __dst);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v10;
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v62[0] = 0xD000000000000019;
  v62[1] = 0x8000000214D30C10;
  memcpy(__dst, v3, 0x415uLL);
  sub_214BA7F1C();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(__dst[0]) = 8;
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x8000000214D30C10, __dst);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = v6[26];
  uint64_t v56 = v3;
  if (*(void *)(v12 + 16))
  {
    sub_214B93E30((uint64_t)v4);
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_214B88214(v3);
    unint64_t v14 = v58;
    unint64_t v15 = (uint64_t *)v58[546];
    uint64_t v16 = v58[541];
    uint64_t v17 = v58[540];
    if (v18)
    {
      sub_214B95764(*(void *)(v12 + 56) + *(void *)(v16 + 72) * v13, v58[546], &qword_26784D000);
      uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v19(v15, 0, 1, v17);
    }
    else
    {
      uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v19((uint64_t *)v58[546], 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    sub_214B94EE8(v61);
  }
  else
  {
    unint64_t v14 = v58;
    uint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v58[541] + 56);
    v19((uint64_t *)v58[546], 1, 1, v58[540]);
  }
  v14[547] = v19;
  uint64_t v20 = v14[545];
  uint64_t v21 = v14[541];
  uint64_t v22 = v14[540];
  sub_214B95764(v14[546], v20, &qword_26784D150);
  int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v20, 1, v22);
  uint64_t v24 = (uint64_t *)v14[545];
  uint64_t v60 = v19;
  if (v23 == 1)
  {
    uint64_t v25 = &qword_26784D150;
    goto LABEL_9;
  }
  uint64_t v42 = (uint64_t *)v14[543];
  int v43 = (uint64_t *)v14[542];
  uint64_t v44 = v14[540];
  uint64_t v45 = *(int *)(v44 + 48);
  uint64_t v46 = (uint64_t)v42 + v45;
  uint64_t v47 = *v24;
  v14[548] = *v24;
  *uint64_t v42 = v47;
  sub_214B6AC38((uint64_t)v24 + v45, (uint64_t)v42 + v45, &qword_26784D158);
  __dst[0] = v57;
  __dst[1] = v11;
  LOBYTE(v62[0]) = 8;
  swift_retain();
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000036, 0x8000000214D30C30, v62);
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t)v43 + *(int *)(v44 + 48);
  *int v43 = v47;
  sub_214B95764(v46, v48, &qword_26784D158);
  uint64_t v36 = type metadata accessor for ODNAssessmentResult();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v48, 1, v36) == 1)
  {
    if (v47)
    {
      sub_214B94EE8(v61);
      __dst[0] = v57;
      __dst[1] = v11;
      LOBYTE(v62[0]) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD00000000000004BLL, 0x8000000214D30CC0, v62);
      swift_bridgeObjectRelease();
      unint64_t v49 = (void *)swift_task_alloc();
      v14[549] = v49;
      *unint64_t v49 = v14;
      v49[1] = sub_214BAB018;
      uint64_t v40 = v14[537];
      uint64_t v41 = v47;
      goto LABEL_13;
    }
    char v54 = (uint64_t *)v14[543];
    __dst[0] = v57;
    __dst[1] = v11;
    LOBYTE(v62[0]) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(0xD000000000000044, 0x8000000214D30C70, v62);
    swift_bridgeObjectRelease();
    uint64_t v25 = &qword_26784D000;
    uint64_t v24 = v54;
LABEL_9:
    sub_214B59CE0((uint64_t)v24, v25);
    uint64_t v26 = (uint64_t *)v14[544];
    uint64_t v59 = v14[541];
    uint64_t v27 = v14[540];
    uint64_t v28 = v14[539];
    uint64_t v29 = v14[538];
    uint64_t v30 = sub_214D1A368();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v28, 1, 1, v30);
    uint64_t v32 = sub_214BB6EAC(&qword_26784D1F0, v31, (void (*)(uint64_t))type metadata accessor for ODNAtorProxy);
    uint64_t v33 = (void *)swift_allocObject();
    void v33[2] = v29;
    long long v33[3] = v32;
    v33[4] = v29;
    memcpy(v33 + 5, (const void *)v1, 0x42DuLL);
    swift_retain_n();
    sub_214BB7118(v1);
    uint64_t v34 = sub_214BF11D0(v28, (uint64_t)&unk_26784D1F8, (uint64_t)v33);
    v14[550] = v34;
    uint64_t v35 = (char *)v26 + *(int *)(v27 + 48);
    *uint64_t v26 = v34;
    uint64_t v36 = type metadata accessor for ODNAssessmentResult();
    v14[551] = v36;
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v14[552] = v38;
    v14[553] = (v37 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v38(v35, 1, 1, v36);
    v14[554] = (v59 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v60(v26, 0, 1, v27);
    swift_beginAccess();
    sub_214B93E30(v61);
    swift_retain();
    sub_214C0B2F4((uint64_t)v26, v56);
    swift_endAccess();
    uint64_t v39 = (void *)swift_task_alloc();
    v14[555] = v39;
    *uint64_t v39 = v14;
    v39[1] = sub_214BAB204;
    uint64_t v40 = v14[537];
    uint64_t v41 = v34;
LABEL_13:
    return MEMORY[0x270FA1FD0](v40, v41, v36);
  }
  uint64_t v50 = v14[546];
  uint64_t v51 = v14[543];
  uint64_t v52 = v14[537];
  swift_release();
  sub_214B94EE8(v61);
  sub_214BB7578(v48, v52, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  __dst[0] = v57;
  __dst[1] = v11;
  LOBYTE(v62[0]) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x8000000214D30D10, v62);
  swift_bridgeObjectRelease();
  sub_214B59CE0(v51, &qword_26784D000);
  sub_214B59CE0(v50, &qword_26784D150);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v53 = (uint64_t (*)(void))v14[1];
  return v53();
}

uint64_t sub_214BAB018()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 4304);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BAB128, v1, 0);
}

uint64_t sub_214BAB128()
{
  uint64_t v1 = v0[546];
  uint64_t v2 = v0[543];
  swift_release();
  sub_214B59CE0(v2, &qword_26784D000);
  sub_214B59CE0(v1, &qword_26784D150);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214BAB204()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 4304);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BAB314, v1, 0);
}

uint64_t sub_214BAB314()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[552];
  uint64_t v2 = v0[551];
  uint64_t v3 = (void (*)(void *, void, uint64_t, uint64_t))v0[547];
  uint64_t v10 = v0[546];
  unint64_t v4 = (void *)v0[544];
  uint64_t v5 = v0[540];
  uint64_t v6 = v0[537];
  uint64_t v7 = (uint64_t)v4 + *(int *)(v5 + 48);
  void *v4 = 0;
  sub_214BB7510(v6, v7, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  v1(v7, 0, 1, v2);
  v3(v4, 0, 1, v5);
  swift_beginAccess();
  sub_214C0B2F4((uint64_t)v4, v0 + 136);
  swift_endAccess();
  swift_release();
  sub_214B59CE0(v10, &qword_26784D150);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_214BAB4AC(uint64_t a1, int a2, int a3, int a4, void *__src)
{
  memcpy((void *)(v5 + 16), __src, 0x42DuLL);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 1088) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_214BAB568;
  return sub_214BA9904(a1, v5 + 16);
}

uint64_t sub_214BAB568()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BAB65C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 65) = *a2;
  return MEMORY[0x270FA2498](sub_214BAB68C, v5, 0);
}

uint64_t sub_214BAB68C()
{
  *(unsigned char *)(v0 + 64) = *(unsigned char *)(v0 + 65);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B99B68;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_214BDD93C(v5, (unsigned char *)(v0 + 64), v4, v2, v3);
}

uint64_t ODNAtorProxy.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BB0874(v0 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODNAtorProxy.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BB0874(v0 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODNAtorProxy.unownedExecutor.getter()
{
  return v0;
}

BOOL static AssessmentOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssessmentOutcome.hash(into:)()
{
  return sub_214D1AD18();
}

uint64_t AssessmentOutcome.hashValue.getter()
{
  return sub_214D1AD48();
}

uint64_t AssessmentTiming.init()@<X0>(uint64_t a1@<X8>)
{
  sub_214D1A898();
  uint64_t v2 = (int *)type metadata accessor for AssessmentTiming();
  sub_214D1A898();
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = sub_214D1A8C8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v7)((void *)(v4 - 8), v3, 1, 1, v4);
  v7(a1 + v2[7], 1, 1, v4);
  v7(a1 + v2[8], 1, 1, v4);
  v7(a1 + v2[9], 1, 1, v4);
  v7(a1 + v2[10], 1, 1, v4);
  uint64_t v5 = a1 + v2[11];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v4);
}

BOOL AssessmentTiming.hasReceivedFeedback.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v5 + 36), (uint64_t)v4, &qword_26784CED0);
  uint64_t v6 = sub_214D1A8C8();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
  return v7;
}

Swift::Void __swiftcall AssessmentTiming.profileFetched()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D1A898();
  uint64_t v5 = sub_214D1A8C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = type metadata accessor for AssessmentTiming();
  sub_214BB0914((uint64_t)v4, v0 + *(int *)(v6 + 40));
}

Swift::Void __swiftcall AssessmentTiming.attributesUpdated()()
{
  uint64_t v1 = sub_214D1A8C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D1A898();
  uint64_t v6 = (int *)type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0 + v6[5], v5, v1);
  uint64_t v7 = v0 + v6[7];
  sub_214B59CE0(v7, &qword_26784CED0);
  char v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v8(v7, 1, 1, v1);
  uint64_t v9 = v0 + v6[6];
  sub_214B59CE0(v9, &qword_26784CED0);
  v8(v9, 1, 1, v1);
  uint64_t v10 = v0 + v6[8];
  sub_214B59CE0(v10, &qword_26784CED0);
  v8(v10, 1, 1, v1);
  uint64_t v11 = v0 + v6[9];
  sub_214B59CE0(v11, &qword_26784CED0);
  v8(v11, 1, 1, v1);
}

uint64_t AssessmentTiming.assessmentReady(at:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AssessmentTiming() + 28);
  return sub_214BB097C(a1, v3);
}

Swift::Void __swiftcall AssessmentTiming.assesmentRequested()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D1A898();
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 0, 1, v5);
  uint64_t v7 = (int *)type metadata accessor for AssessmentTiming();
  sub_214BB0914((uint64_t)v4, v0 + v7[6]);
  uint64_t v8 = v0 + v7[8];
  sub_214B59CE0(v8, &qword_26784CED0);
  v6((char *)v8, 1, 1, v5);
  uint64_t v9 = v0 + v7[9];
  sub_214B59CE0(v9, &qword_26784CED0);
  v6((char *)v9, 1, 1, v5);
}

Swift::Void __swiftcall AssessmentTiming.assessmentReturned()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D1A898();
  uint64_t v5 = sub_214D1A8C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = type metadata accessor for AssessmentTiming();
  sub_214BB0914((uint64_t)v4, v0 + *(int *)(v6 + 32));
}

Swift::Void __swiftcall AssessmentTiming.feedbackReceived()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D1A898();
  uint64_t v5 = sub_214D1A8C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = (int *)type metadata accessor for AssessmentTiming();
  sub_214BB0914((uint64_t)v4, v0 + v6[9]);
  sub_214BB097C(v0 + v6[7], v0 + v6[11]);
}

uint64_t AssessmentTiming.profileFetchDuration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v10 + 40), (uint64_t)v4, &qword_26784CED0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_214D1A8B8();
    uint64_t v12 = sub_214D1AD98();
    double v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(void *)&v14;
  }
}

uint64_t AssessmentTiming.updateToAssessmentDuration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v10 + 28), (uint64_t)v4, &qword_26784CED0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_214D1A8B8();
    uint64_t v12 = sub_214D1AD98();
    double v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(void *)&v14;
  }
}

uint64_t AssessmentTiming.updateToFeedbackDuration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v10 + 36), (uint64_t)v4, &qword_26784CED0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_214D1A8B8();
    uint64_t v12 = sub_214D1AD98();
    double v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(void *)&v14;
  }
}

uint64_t AssessmentTiming.assessmentReadyBeforeFeedbackDuration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  uint64_t v3 = MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3, v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  double v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v18 + 28), (uint64_t)v8, &qword_26784CED0);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    uint64_t v20 = (uint64_t)v8;
LABEL_5:
    sub_214B59CE0(v20, &qword_26784CED0);
    return 0;
  }
  uint64_t v28 = v14;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v27(v17, v8, v9);
  sub_214B95764(v0 + *(int *)(v18 + 36), (uint64_t)v5, &qword_26784CED0);
  if (v19(v5, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    uint64_t v20 = (uint64_t)v5;
    goto LABEL_5;
  }
  uint64_t v22 = v28;
  v27(v28, v5, v9);
  sub_214D1A8B8();
  uint64_t v23 = sub_214D1AD98();
  double v25 = (double)v24 / 1.0e18 + (double)v23;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v22, v9);
  v26(v17, v9);
  return *(void *)&v25;
}

uint64_t AssessmentTiming.requestToReturnDuration.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  uint64_t v3 = MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3, v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_214D1A8C8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  double v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v18 + 32), (uint64_t)v8, &qword_26784CED0);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    uint64_t v20 = (uint64_t)v8;
LABEL_5:
    sub_214B59CE0(v20, &qword_26784CED0);
    return 0;
  }
  uint64_t v30 = v14;
  uint64_t v21 = v8;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v22(v17, v21, v9);
  sub_214B95764(v0 + *(int *)(v18 + 24), (uint64_t)v5, &qword_26784CED0);
  if (v19(v5, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    uint64_t v20 = (uint64_t)v5;
    goto LABEL_5;
  }
  uint64_t v24 = v30;
  v22(v30, v5, v9);
  sub_214D1A8B8();
  uint64_t v25 = sub_214D1AD98();
  double v27 = (double)v26 / 1.0e18 + (double)v25;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
  v28(v24, v9);
  v28(v17, v9);
  return *(void *)&v27;
}

double AssessmentTiming.timeSinceLastUpdate.getter()
{
  uint64_t v0 = sub_214D1A8C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentTiming();
  sub_214D1A898();
  sub_214D1A8B8();
  uint64_t v5 = sub_214D1AD98();
  double v7 = (double)v6 / 1.0e18 + (double)v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v7;
}

uint64_t static AssessmentTiming.lastUpdateTimesEqual(lhs:rhs:)()
{
  type metadata accessor for AssessmentTiming();
  return sub_214D1A8A8();
}

BOOL AssessmentTiming.assessmentHasBeenRequested.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_26784CED0);
  uint64_t v6 = sub_214D1A8C8();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
  return v7;
}

BOOL AssessmentTiming.assessmentHasBeenReturned.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AssessmentTiming();
  sub_214B95764(v0 + *(int *)(v5 + 32), (uint64_t)v4, &qword_26784CED0);
  uint64_t v6 = sub_214D1A8C8();
  BOOL v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_214B59CE0((uint64_t)v4, &qword_26784CED0);
  return v7;
}

uint64_t AssessmentTiming.feedbackHasBeenReceivedForAssessmentWithCurrentTime.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_214D1A8C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v31 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D190);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AssessmentTiming();
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v32 = (uint64_t)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v20 = (char *)&v31 - v19;
  sub_214B95764(v1 + *(int *)(v10 + 28), (uint64_t)&v31 - v19, &qword_26784CED0);
  uint64_t v33 = v3;
  uint64_t v34 = v2;
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  LODWORD(v2) = v21(v20, 1, v2);
  sub_214B59CE0((uint64_t)v20, &qword_26784CED0);
  sub_214BB7510(v1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
  if (v2 == 1)
  {
    sub_214BB75E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
LABEL_9:
    char v25 = 0;
    return v25 & 1;
  }
  uint64_t v22 = (uint64_t)&v13[*(int *)(v10 + 28)];
  uint64_t v23 = (uint64_t)&v9[*(int *)(v6 + 48)];
  sub_214B95764((uint64_t)&v13[*(int *)(v10 + 44)], (uint64_t)v9, &qword_26784CED0);
  sub_214B95764(v22, v23, &qword_26784CED0);
  uint64_t v24 = v34;
  if (v21(v9, 1, v34) != 1)
  {
    uint64_t v26 = v32;
    sub_214B95764((uint64_t)v9, v32, &qword_26784CED0);
    if (v21((char *)v23, 1, v24) != 1)
    {
      uint64_t v28 = v33;
      uint64_t v29 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v31, v23, v24);
      sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
      char v25 = sub_214D1A018();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, v24);
      sub_214BB75E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
      v30((char *)v26, v24);
      sub_214B59CE0((uint64_t)v9, &qword_26784CED0);
      return v25 & 1;
    }
    sub_214BB75E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v26, v24);
    goto LABEL_8;
  }
  sub_214BB75E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
  if (v21((char *)v23, 1, v24) != 1)
  {
LABEL_8:
    sub_214B59CE0((uint64_t)v9, &qword_26784D190);
    goto LABEL_9;
  }
  sub_214B59CE0((uint64_t)v9, &qword_26784CED0);
  char v25 = 1;
  return v25 & 1;
}

BOOL sub_214BAD2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1, a2);
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v63 = v6;
  uint64_t v64 = v7;
  if (*(unsigned char *)(v3 + 1042) & 1) == 0 || (*(unsigned char *)(v2 + 1042))
  {
    int v8 = *(unsigned __int8 *)(v2 + 1044);
    int v9 = *(unsigned __int8 *)(v3 + 1044);
    if (v8 == v9 || *(unsigned char *)(v2 + 1044) && (v8 == 1 ? (BOOL v10 = v9 == 2) : (BOOL v10 = 0), !v10))
    {
      uint64_t v11 = *(void *)v2;
      uint64_t v12 = *(void *)v3;
      swift_bridgeObjectRetain();
      if ((Dictionary<>.isSubset(of:)(v12, v11) & 1) == 0)
      {
        v70[0] = 0;
        v70[1] = 0xE000000000000000;
        sub_214D1A7A8();
        sub_214D1A108();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
        sub_214D19FA8();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214D1A108();
        swift_bridgeObjectRetain();
        sub_214D19FA8();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_26784C9E8 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_214D19EE8();
        __swift_project_value_buffer(v16, (uint64_t)qword_267863AB8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_214C3DE8C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      sub_214B6AC38(v5 + 8, (uint64_t)v66, &qword_26784D010);
      sub_214B6AC38((uint64_t)v66, (uint64_t)v67, &qword_26784D010);
      if (sub_214B945BC(v67) == 1)
      {
        LOBYTE(v70[0]) = 13;
        uint64_t v13 = 0xD000000000000026;
        unint64_t v14 = 0x8000000214D30ED0;
        uint64_t v15 = (long long *)v70;
      }
      else
      {
        memcpy(v68, v67, 0x40AuLL);
        sub_214B6AC38(v4 + 8, (uint64_t)v65, &qword_26784D010);
        sub_214B6AC38((uint64_t)v65, (uint64_t)v69, &qword_26784D010);
        if (sub_214B945BC(v69) != 1)
        {
          memcpy(v70, v69, 0x40AuLL);
          memcpy(__dst, v68, 0x40AuLL);
          memcpy(v54, v69, 0x40AuLL);
          sub_214B954C4(v65, sub_214B94214);
          sub_214B954C4(v66, sub_214B94214);
          if ((_s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0((uint64_t *)__dst, (uint64_t)v54) & 1) == 0)
          {
            memcpy(__dst, v68, 0x40AuLL);
            memcpy(v54, v70, 0x40AuLL);
            BOOL v17 = _s17CoreODIEssentials16ArmandDeviceDataV21isLessCompleteOrEqual3lhs2toSbAC_ACtFZ_0((uint64_t)__dst, (uint64_t)v54);
            LOBYTE(__dst[0]) = 13;
            CoreODILogger.debug(_:category:)(0xD000000000000037, 0x8000000214D30E70, __dst);
            sub_214B954C4(v65, sub_214B94CC8);
            sub_214B954C4(v66, sub_214B94CC8);
            goto LABEL_44;
          }
          LOBYTE(__dst[0]) = 13;
          CoreODILogger.debug(_:category:)(0xD00000000000001ELL, 0x8000000214D30EB0, __dst);
          sub_214B954C4(v65, sub_214B94CC8);
          sub_214B954C4(v66, sub_214B94CC8);
          goto LABEL_43;
        }
        sub_214B6AC38((uint64_t)v68, (uint64_t)&v71, &qword_26784D200);
        sub_214B6AC38((uint64_t)&v71, (uint64_t)v108, &qword_26784D200);
        uint64_t v18 = v108[0];
        if (v108[0])
        {
          uint64_t v19 = *(void *)(v108[0] + 16);
          if (v19)
          {
            long long v74 = *(_OWORD *)((char *)&v68[2] + 8);
            long long v75 = *(_OWORD *)((char *)&v68[3] + 8);
            char v76 = BYTE8(v68[4]);
            long long v73 = *(_OWORD *)((char *)&v68[1] + 8);
            long long v72 = *(_OWORD *)((char *)v68 + 8);
            long long v79 = v68[7];
            long long v80 = v68[8];
            long long v81 = v68[9];
            __int16 v82 = v68[10];
            long long v77 = v68[5];
            long long v78 = v68[6];
            char v84 = BYTE8(v68[11]);
            long long v83 = *(_OWORD *)((char *)&v68[10] + 8);
            *(_OWORD *)((char *)v87 + 9) = *(_OWORD *)((char *)&v68[14] + 9);
            v87[0] = v68[14];
            long long v86 = v68[13];
            long long v85 = v68[12];
            long long v90 = v68[18];
            v91[0] = v68[19];
            *(_DWORD *)((char *)v91 + 15) = *(_DWORD *)((char *)&v68[19] + 15);
            long long v89 = v68[17];
            long long v88 = v68[16];
            char v93 = BYTE8(v68[21]);
            long long v92 = *(_OWORD *)((char *)&v68[20] + 8);
            __int16 v52 = *(_WORD *)((char *)&v68[21] + 9);
            char v95 = v68[23];
            long long v94 = v68[22];
            v54[0] = *(_OWORD *)((char *)&v68[23] + 8);
            v54[1] = *(_OWORD *)((char *)&v68[24] + 8);
            LOWORD(v54[6]) = WORD4(v68[29]);
            v54[4] = *(_OWORD *)((char *)&v68[27] + 8);
            v54[5] = *(_OWORD *)((char *)&v68[28] + 8);
            v54[2] = *(_OWORD *)((char *)&v68[25] + 8);
            v54[3] = *(_OWORD *)((char *)&v68[26] + 8);
            char v97 = BYTE8(v68[30]);
            uint64_t v96 = *(void *)&v68[30];
            memcpy(v70, &v68[31], 0x119uLL);
            long long v98 = v68[49];
            long long v99 = v68[50];
            __int16 v100 = v68[51];
            __dst[4] = *(_OWORD *)((char *)&v68[55] + 8);
            __dst[5] = *(_OWORD *)((char *)&v68[56] + 8);
            __dst[6] = *(_OWORD *)((char *)&v68[57] + 8);
            *(_OWORD *)((char *)&__dst[6] + 10) = *(_OWORD *)((char *)&v68[58] + 2);
            __dst[0] = *(_OWORD *)((char *)&v68[51] + 8);
            __dst[1] = *(_OWORD *)((char *)&v68[52] + 8);
            __dst[2] = *(_OWORD *)((char *)&v68[53] + 8);
            __dst[3] = *(_OWORD *)((char *)&v68[54] + 8);
            char v105 = BYTE8(v68[63]);
            long long v103 = *(_OWORD *)((char *)&v68[61] + 8);
            long long v104 = *(_OWORD *)((char *)&v68[62] + 8);
            long long v101 = *(_OWORD *)((char *)&v68[59] + 8);
            long long v102 = *(_OWORD *)((char *)&v68[60] + 8);
            __int16 v107 = WORD4(v68[64]);
            uint64_t v106 = *(void *)&v68[64];
            sub_214B954C4(v66, sub_214B94214);
            sub_214BB7800((uint64_t)&v71);
            uint64_t v20 = (unsigned char *)(v18 + 65);
            while (1)
            {
              uint64_t v21 = *(void *)(v20 - 17);
              uint64_t v22 = *(void *)(v20 - 9);
              char v23 = *(v20 - 1);
              uint64_t v53 = v19;
              switch(*v20)
              {
                case 1:
                  uint64_t v61 = &type metadata for MobileGestaltSource;
                  uint64_t v62 = &off_26C5AC070;
                  uint64_t v27 = swift_allocObject();
                  *(void *)&long long v59 = v27;
                  long long v28 = v80;
                  *(_OWORD *)(v27 + 48) = v79;
                  *(_OWORD *)(v27 + 64) = v28;
                  *(_OWORD *)(v27 + 80) = v81;
                  *(_WORD *)(v27 + 96) = v82;
                  long long v29 = v78;
                  *(_OWORD *)(v27 + 16) = v77;
                  *(_OWORD *)(v27 + 32) = v29;
                  sub_214BB7948((uint64_t)&v77);
                  break;
                case 2:
                  uint64_t v61 = &type metadata for BaaSource;
                  uint64_t v62 = &off_26C5AD810;
                  uint64_t v30 = (_OWORD *)swift_allocObject();
                  *(void *)&long long v59 = v30;
                  long long v31 = v86;
                  v30[1] = v85;
                  void v30[2] = v31;
                  v30[3] = v87[0];
                  *(_OWORD *)((char *)v30 + 57) = *(_OWORD *)((char *)v87 + 9);
                  sub_214BB78AC((uint64_t)&v85);
                  break;
                case 3:
                  uint64_t v61 = &type metadata for NearFieldSource;
                  uint64_t v62 = &off_26C5AADF8;
                  long long v59 = v83;
                  char v60 = v84;
                  sub_214BA5200((uint64_t)&v83);
                  break;
                case 4:
                  uint64_t v61 = &type metadata for IDSSource;
                  uint64_t v62 = &off_26C5AD948;
                  long long v59 = v92;
                  char v60 = v93;
                  sub_214BA5200((uint64_t)&v92);
                  break;
                case 5:
                  uint64_t v61 = &type metadata for CoreTelephonySource;
                  uint64_t v62 = &off_26C5A87A8;
                  uint64_t v32 = swift_allocObject();
                  *(void *)&long long v59 = v32;
                  long long v33 = v91[0];
                  *(_OWORD *)(v32 + 48) = v90;
                  *(_OWORD *)(v32 + 64) = v33;
                  *(_DWORD *)(v32 + 79) = *(_DWORD *)((char *)v91 + 15);
                  long long v34 = v89;
                  *(_OWORD *)(v32 + 16) = v88;
                  *(_OWORD *)(v32 + 32) = v34;
                  sub_214BB7948((uint64_t)&v88);
                  break;
                case 6:
                  uint64_t v61 = &type metadata for LocationSource;
                  uint64_t v62 = &off_26C5AA768;
                  uint64_t v35 = swift_allocObject();
                  *(void *)&long long v59 = v35;
                  long long v36 = v54[5];
                  *(_OWORD *)(v35 + 80) = v54[4];
                  *(_OWORD *)(v35 + 96) = v36;
                  *(_WORD *)(v35 + 112) = v54[6];
                  long long v37 = v54[1];
                  *(_OWORD *)(v35 + 16) = v54[0];
                  *(_OWORD *)(v35 + 32) = v37;
                  long long v38 = v54[3];
                  *(_OWORD *)(v35 + 48) = v54[2];
                  *(_OWORD *)(v35 + 64) = v38;
                  sub_214BA5200((uint64_t)v54);
                  break;
                case 7:
                  uint64_t v61 = &type metadata for TelephonyUtilitiesSource;
                  uint64_t v62 = &off_26C5ACFA8;
                  LOWORD(v59) = v52;
                  break;
                case 8:
                  uint64_t v61 = &type metadata for TimeZoneSource;
                  uint64_t v62 = &off_26C5AAA18;
                  long long v59 = v94;
                  char v60 = v95;
                  sub_214BA5200((uint64_t)&v94);
                  break;
                case 9:
                  uint64_t v61 = &type metadata for CallerClientSource;
                  uint64_t v62 = &off_26C5A5A98;
                  *(void *)&long long v59 = v96;
                  BYTE8(v59) = v97;
                  sub_214BB7800((uint64_t)&v96);
                  break;
                case 0xA:
                  uint64_t v61 = &type metadata for NameParserSource;
                  uint64_t v62 = &off_26C5A5770;
                  *(void *)&long long v59 = swift_allocObject();
                  memcpy((void *)(v59 + 16), v70, 0x119uLL);
                  sub_214BB7724((uint64_t)v70);
                  break;
                case 0xB:
                  uint64_t v61 = &type metadata for GeocoderSource;
                  uint64_t v62 = &off_26C5A4AE8;
                  uint64_t v39 = (_OWORD *)swift_allocObject();
                  *(void *)&long long v59 = v39;
                  long long v40 = __dst[5];
                  v39[5] = __dst[4];
                  v39[6] = v40;
                  v39[7] = __dst[6];
                  *(_OWORD *)((char *)v39 + 122) = *(_OWORD *)((char *)&__dst[6] + 10);
                  long long v41 = __dst[1];
                  v39[1] = __dst[0];
                  v39[2] = v41;
                  long long v42 = __dst[3];
                  v39[3] = __dst[2];
                  v39[4] = v42;
                  break;
                case 0xC:
                  uint64_t v61 = &type metadata for PhoneFormatterSource;
                  uint64_t v62 = &off_26C5A6290;
                  uint64_t v43 = swift_allocObject();
                  *(void *)&long long v59 = v43;
                  long long v44 = v104;
                  *(_OWORD *)(v43 + 48) = v103;
                  *(_OWORD *)(v43 + 64) = v44;
                  *(unsigned char *)(v43 + 80) = v105;
                  long long v45 = v102;
                  *(_OWORD *)(v43 + 16) = v101;
                  *(_OWORD *)(v43 + 32) = v45;
                  sub_214BB7948((uint64_t)&v101);
                  break;
                case 0xD:
                  uint64_t v61 = &type metadata for DeviceSettingsSource;
                  uint64_t v62 = &off_26C5A6048;
                  uint64_t v46 = swift_allocObject();
                  *(void *)&long long v59 = v46;
                  long long v47 = v99;
                  *(_OWORD *)(v46 + 16) = v98;
                  *(_OWORD *)(v46 + 32) = v47;
                  *(_WORD *)(v46 + 48) = v100;
                  break;
                case 0xE:
                  uint64_t v61 = &type metadata for ConfigurationSource;
                  uint64_t v62 = &off_26C5AF978;
                  *(void *)&long long v59 = v106;
                  WORD4(v59) = v107;
                  break;
                default:
                  uint64_t v61 = &type metadata for AccountsSource;
                  uint64_t v62 = &off_26C5AA3F8;
                  uint64_t v24 = swift_allocObject();
                  *(void *)&long long v59 = v24;
                  long long v25 = v75;
                  *(_OWORD *)(v24 + 48) = v74;
                  *(_OWORD *)(v24 + 64) = v25;
                  *(unsigned char *)(v24 + 80) = v76;
                  long long v26 = v73;
                  *(_OWORD *)(v24 + 16) = v72;
                  *(_OWORD *)(v24 + 32) = v26;
                  sub_214BB7948((uint64_t)&v72);
                  break;
              }
              uint64_t v48 = v62;
              __swift_project_boxed_opaque_existential_1(&v59, (uint64_t)v61);
              v56[0] = v21;
              v56[1] = v22;
              char v57 = v23;
              unint64_t v49 = (void (*)(unsigned __int8 *@<X0>, char *@<X8>))v48[1];
              swift_bridgeObjectRetain();
              sub_214B6F6CC(v21, v22, v23);
              v49((unsigned __int8 *)v56, (char *)&v58);
              int v50 = v58;
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
              swift_bridgeObjectRelease();
              sub_214B6F6DC(v21, v22, v23);
              if (v50 == 209) {
                break;
              }
              v20 += 64;
              --v19;
              if (v53 == 1)
              {
                sub_214BB7640((uint64_t)&v71);
                sub_214B954C4(v66, sub_214B94CC8);
                goto LABEL_41;
              }
            }
            sub_214BB7640((uint64_t)&v71);
            LOBYTE(v59) = 13;
            CoreODILogger.debug(_:category:)(0xD000000000000042, 0x8000000214D30E20, &v59);
            sub_214B954C4(v66, sub_214B94CC8);
            goto LABEL_16;
          }
        }
LABEL_41:
        LOBYTE(v59) = 13;
        uint64_t v13 = 0xD00000000000001FLL;
        unint64_t v14 = 0x8000000214D30E00;
        uint64_t v15 = &v59;
      }
      CoreODILogger.debug(_:category:)(v13, v14, v15);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
LABEL_43:
    BOOL v17 = 1;
    goto LABEL_44;
  }
  LOBYTE(v70[0]) = 13;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000003BLL, 0x8000000214D30F00, v70);
LABEL_16:
  BOOL v17 = 0;
LABEL_44:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t _s17CoreODIEssentials12ODNAtorProxyC15isEqualBindings3lhs3rhsSbSH_s8Sendablep_SH_sAGptFZ_0(void *a1, void *a2)
{
  sub_214B93DCC((uint64_t)a1, (uint64_t)v17);
  sub_214B93DCC((uint64_t)a2, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (*(void *)&v12 == *(void *)&v14 && v13 == v15) {
        char v4 = 1;
      }
      else {
        char v4 = sub_214D1ABC8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    BOOL v5 = *(void *)&v12 == *(void *)&v14;
    goto LABEL_13;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    BOOL v5 = v12 == v14;
LABEL_13:
    char v4 = v5;
    goto LABEL_24;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    char v4 = LOBYTE(v12) ^ LOBYTE(v14) ^ 1;
LABEL_24:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return v4 & 1;
  }
  sub_214B6A264(0, (unint64_t *)&qword_26784D208);
  if (swift_dynamicCast())
  {
    id v6 = v16;
    if (swift_dynamicCast())
    {
      double v12 = 4.7668852e180;
      unint64_t v13 = 0xEF726567676F4C64;
      double v14 = 0.0;
      unint64_t v15 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      id v7 = objc_msgSend(v16, sel_description);
      sub_214D1A038();

      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_getDynamicType();
      sub_214D1ADC8();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      id v8 = objc_msgSend(v11, sel_description);
      sub_214D1A038();

      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      swift_getDynamicType();
      sub_214D1ADC8();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      LOBYTE(v14) = 6;
      CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v14);
      swift_bridgeObjectRelease();
      sub_214B6A264(0, (unint64_t *)&unk_26784D220);
      char v4 = sub_214D1A5A8();

      goto LABEL_24;
    }
  }
  sub_214B6A264(0, &qword_26784D210);
  if (swift_dynamicCast() && (*(id *)&v12, swift_dynamicCast()))
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    char v4 = 1;
  }
  else
  {
    double v12 = 0.0;
    unint64_t v13 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    double v14 = -2.31584178e77;
    unint64_t v15 = 0x8000000214D30FF0;
    sub_214B93DCC((uint64_t)a1, (uint64_t)&v12);
    sub_214D1A0B8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    swift_getDynamicType();
    sub_214D1ADC8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214B93DCC((uint64_t)a2, (uint64_t)&v12);
    sub_214D1A0B8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    swift_getDynamicType();
    sub_214D1ADC8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    if (qword_26ACE3920 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_214D19EE8();
    __swift_project_value_buffer(v10, (uint64_t)qword_26ACEB998);
    swift_bridgeObjectRetain();
    sub_214C3DE8C();
    swift_bridgeObjectRelease_n();
    sub_214B59CE0((uint64_t)v17, &qword_26784D218);
    char v4 = 0;
  }
  return v4 & 1;
}

void sub_214BAE744(void *a1)
{
  *a1 = 1;
  bzero(a1 + 1, 0x402uLL);
}

double sub_214BAE754(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void *sub_214BAE770(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[2];
  uint64_t v8 = a1[11];
  uint64_t v9 = a1[10];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v5 = a1[14];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[15];
  swift_bridgeObjectRelease();
  sub_214B7902C(v4, v3);
  sub_214B79090(v9, v8, v7, v6, v5);
  sub_214BAE8A8(v11, v10);
  return a1;
}

uint64_t sub_214BAE8A8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214BAE938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)MEMORY[0x270FA5388](a1, a2);
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = (char *)v2 + 1042;
  uint64_t v7 = *v2;
  sub_214B6AC38((uint64_t)(v2 + 1), (uint64_t)v23, &qword_26784D010);
  int v8 = *((unsigned __int8 *)v5 + 1042);
  int v9 = v6[1];
  uint64_t v10 = *(void *)v4;
  sub_214B6AC38(v4 + 8, (uint64_t)v24, &qword_26784D010);
  if (v8 != *(unsigned __int8 *)(v4 + 1042)) {
    return 0;
  }
  int v11 = *(unsigned __int8 *)(v4 + 1043);
  sub_214B6AC38((uint64_t)v23, (uint64_t)v22, &qword_26784D010);
  if (sub_214B945BC(v22) != 1)
  {
    sub_214B6AC38((uint64_t)v23, (uint64_t)v19, &qword_26784D010);
    sub_214B6AC38((uint64_t)v24, (uint64_t)v20, &qword_26784D010);
    if (sub_214B945BC(v20) != 1)
    {
      sub_214B6AC38((uint64_t)v24, (uint64_t)__src, &qword_26784D010);
      memcpy(v15, __src, 0x40AuLL);
      sub_214B6AC38((uint64_t)v23, (uint64_t)__dst, &qword_26784D010);
      sub_214B954C4(v23, sub_214B94214);
      sub_214BB6CB4((uint64_t)__dst);
      char v12 = _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(v19, (uint64_t)v15);
      memcpy(v18, v19, 0x40AuLL);
      sub_214B952CC((uint64_t)v18);
      sub_214B954C4(v23, sub_214B94CC8);
      if ((v12 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    memcpy(__dst, v19, 0x40AuLL);
    sub_214B6AC38((uint64_t)v23, (uint64_t)v18, &qword_26784D010);
    sub_214BB6CB4((uint64_t)v18);
    sub_214BB6CB4((uint64_t)v18);
    sub_214B952CC((uint64_t)__dst);
LABEL_7:
    sub_214B6AC38((uint64_t)v23, (uint64_t)v20, &qword_26784D010);
    sub_214B6AC38((uint64_t)v24, (uint64_t)&v21, &qword_26784D010);
    sub_214B954C4(v24, sub_214B94214);
    sub_214B945E0(v20);
    return 0;
  }
  sub_214B6AC38((uint64_t)v24, (uint64_t)v20, &qword_26784D010);
  if (sub_214B945BC(v20) != 1) {
    goto LABEL_7;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_214BA7464(v7, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13 & 1) != 0 && (Dictionary<>.isSubset(of:)(v10, v7)) {
    return v9 ^ v11 ^ 1u;
  }
  return 0;
}

BOOL _s17CoreODIEssentials16AssessmentTimingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_214D1A8C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v185 = &v159[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D190);
  uint64_t v9 = MEMORY[0x270FA5388](v188, v8);
  int v11 = &v159[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  unint64_t v174 = &v159[-v14];
  uint64_t v16 = MEMORY[0x270FA5388](v13, v15);
  v176 = &v159[-v17];
  uint64_t v19 = MEMORY[0x270FA5388](v16, v18);
  uint64_t v181 = &v159[-v20];
  uint64_t v22 = MEMORY[0x270FA5388](v19, v21);
  unint64_t v184 = &v159[-v23];
  MEMORY[0x270FA5388](v22, v24);
  long long v26 = &v159[-v25];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  uint64_t v29 = MEMORY[0x270FA5388](v27 - 8, v28);
  uint64_t v169 = &v159[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = MEMORY[0x270FA5388](v29, v31);
  char v170 = &v159[-v33];
  uint64_t v35 = MEMORY[0x270FA5388](v32, v34);
  char v171 = &v159[-v36];
  uint64_t v38 = MEMORY[0x270FA5388](v35, v37);
  uint64_t v172 = &v159[-v39];
  uint64_t v41 = MEMORY[0x270FA5388](v38, v40);
  unint64_t v175 = &v159[-v42];
  uint64_t v44 = MEMORY[0x270FA5388](v41, v43);
  uint64_t v173 = &v159[-v45];
  uint64_t v47 = MEMORY[0x270FA5388](v44, v46);
  unint64_t v49 = &v159[-v48];
  uint64_t v51 = MEMORY[0x270FA5388](v47, v50);
  uint64_t v179 = &v159[-v52];
  uint64_t v54 = MEMORY[0x270FA5388](v51, v53);
  v177 = &v159[-v55];
  uint64_t v57 = MEMORY[0x270FA5388](v54, v56);
  uint64_t v178 = &v159[-v58];
  uint64_t v60 = MEMORY[0x270FA5388](v57, v59);
  uint64_t v183 = &v159[-v61];
  uint64_t v63 = MEMORY[0x270FA5388](v60, v62);
  uint64_t v180 = &v159[-v64];
  uint64_t v66 = MEMORY[0x270FA5388](v63, v65);
  v182 = &v159[-v67];
  uint64_t v69 = MEMORY[0x270FA5388](v66, v68);
  char v187 = &v159[-v70];
  uint64_t v72 = MEMORY[0x270FA5388](v69, v71);
  uint64_t v186 = (uint64_t)&v159[-v73];
  uint64_t v75 = MEMORY[0x270FA5388](v72, v74);
  long long v77 = &v159[-v76];
  uint64_t v79 = MEMORY[0x270FA5388](v75, v78);
  long long v81 = &v159[-v80];
  MEMORY[0x270FA5388](v79, v82);
  char v84 = &v159[-v83];
  if ((sub_214D1A8A8() & 1) == 0) {
    return 0;
  }
  unint64_t v167 = v49;
  uint64_t v85 = type metadata accessor for AssessmentTiming();
  if ((sub_214D1A8A8() & 1) == 0) {
    return 0;
  }
  unint64_t v162 = v11;
  uint64_t v86 = *(int *)(v85 + 24);
  uint64_t v163 = a1;
  uint64_t v168 = v4;
  sub_214B95764(a1 + v86, (uint64_t)v84, &qword_26784CED0);
  unint64_t v165 = (int *)v85;
  uint64_t v87 = *(int *)(v85 + 24);
  uint64_t v164 = a2;
  sub_214B95764(a2 + v87, (uint64_t)v81, &qword_26784CED0);
  uint64_t v88 = v188;
  uint64_t v89 = (uint64_t)&v26[*(int *)(v188 + 48)];
  sub_214B95764((uint64_t)v84, (uint64_t)v26, &qword_26784CED0);
  uint64_t v90 = v168;
  sub_214B95764((uint64_t)v81, v89, &qword_26784CED0);
  uint64_t v166 = v5;
  char v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  unint64_t v91 = (unsigned char *)(v5 + 48);
  long long v92 = v93;
  if (v93((uint64_t)v26, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v81, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v84, &qword_26784CED0);
    if (v92(v89, 1, v90) == 1)
    {
      sub_214B59CE0((uint64_t)v26, &qword_26784CED0);
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v94 = (uint64_t)v26;
LABEL_35:
    sub_214B59CE0(v94, &qword_26784D190);
    return 0;
  }
  sub_214B95764((uint64_t)v26, (uint64_t)v77, &qword_26784CED0);
  if (v92(v89, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v81, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v84, &qword_26784CED0);
    (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v77, v90);
    goto LABEL_8;
  }
  uint64_t v161 = v92;
  char v95 = v91;
  uint64_t v96 = v166;
  char v97 = v185;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v89, v90);
  sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
  int v160 = sub_214D1A018();
  long long v98 = *(void (**)(unsigned char *, uint64_t))(v96 + 8);
  v98(v97, v168);
  sub_214B59CE0((uint64_t)v81, &qword_26784CED0);
  sub_214B59CE0((uint64_t)v84, &qword_26784CED0);
  v98(v77, v168);
  unint64_t v91 = v95;
  long long v92 = v161;
  uint64_t v90 = v168;
  sub_214B59CE0((uint64_t)v26, &qword_26784CED0);
  if ((v160 & 1) == 0) {
    return 0;
  }
LABEL_10:
  long long v99 = v165;
  uint64_t v100 = v163;
  uint64_t v101 = v186;
  sub_214B95764(v163 + v165[7], v186, &qword_26784CED0);
  long long v102 = v187;
  sub_214B95764(v164 + v99[7], (uint64_t)v187, &qword_26784CED0);
  long long v103 = v184;
  uint64_t v104 = (uint64_t)&v184[*(int *)(v88 + 48)];
  sub_214B95764(v101, (uint64_t)v184, &qword_26784CED0);
  sub_214B95764((uint64_t)v102, v104, &qword_26784CED0);
  if (v92((uint64_t)v103, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v102, &qword_26784CED0);
    sub_214B59CE0(v101, &qword_26784CED0);
    if (v92(v104, 1, v90) == 1)
    {
      sub_214B59CE0((uint64_t)v103, &qword_26784CED0);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  char v105 = v182;
  sub_214B95764((uint64_t)v103, (uint64_t)v182, &qword_26784CED0);
  if (v92(v104, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v187, &qword_26784CED0);
    sub_214B59CE0(v101, &qword_26784CED0);
    (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v105, v90);
LABEL_15:
    uint64_t v94 = (uint64_t)v103;
    goto LABEL_35;
  }
  uint64_t v106 = (uint64_t)v103;
  uint64_t v107 = v166;
  uint64_t v108 = v105;
  int v109 = v185;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v104, v90);
  sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
  char v110 = sub_214D1A018();
  uint64_t v111 = *(void (**)(unsigned char *, uint64_t))(v107 + 8);
  v111(v109, v168);
  sub_214B59CE0((uint64_t)v187, &qword_26784CED0);
  sub_214B59CE0(v186, &qword_26784CED0);
  v111(v108, v168);
  uint64_t v90 = v168;
  sub_214B59CE0(v106, &qword_26784CED0);
  if ((v110 & 1) == 0) {
    return 0;
  }
LABEL_17:
  uint64_t v112 = v165;
  uint64_t v113 = v180;
  sub_214B95764(v100 + v165[8], (uint64_t)v180, &qword_26784CED0);
  uint64_t v114 = v164;
  uint64_t v115 = v183;
  sub_214B95764(v164 + v112[8], (uint64_t)v183, &qword_26784CED0);
  uint64_t v116 = v181;
  uint64_t v117 = (uint64_t)&v181[*(int *)(v88 + 48)];
  sub_214B95764((uint64_t)v113, (uint64_t)v181, &qword_26784CED0);
  sub_214B95764((uint64_t)v115, v117, &qword_26784CED0);
  if (v92((uint64_t)v116, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v115, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v113, &qword_26784CED0);
    if (v92(v117, 1, v90) != 1) {
      goto LABEL_34;
    }
    sub_214B59CE0((uint64_t)v116, &qword_26784CED0);
  }
  else
  {
    uint64_t v118 = v178;
    sub_214B95764((uint64_t)v116, (uint64_t)v178, &qword_26784CED0);
    if (v92(v117, 1, v90) == 1)
    {
      sub_214B59CE0((uint64_t)v183, &qword_26784CED0);
      sub_214B59CE0((uint64_t)v113, &qword_26784CED0);
      (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v118, v90);
      goto LABEL_34;
    }
    char v187 = v91;
    uint64_t v119 = v90;
    uint64_t v120 = v166;
    uint64_t v121 = (uint64_t)v113;
    uint64_t v122 = v185;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v117, v119);
    sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
    LODWORD(v186) = sub_214D1A018();
    uint64_t v123 = v114;
    uint64_t v124 = v116;
    uint64_t v125 = *(void (**)(unsigned char *, uint64_t))(v120 + 8);
    v125(v122, v119);
    sub_214B59CE0((uint64_t)v183, &qword_26784CED0);
    sub_214B59CE0(v121, &qword_26784CED0);
    v125(v118, v119);
    uint64_t v90 = v119;
    unint64_t v91 = v187;
    uint64_t v112 = v165;
    uint64_t v126 = (uint64_t)v124;
    uint64_t v114 = v123;
    sub_214B59CE0(v126, &qword_26784CED0);
    if ((v186 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v127 = v163;
  int64_t v128 = v177;
  sub_214B95764(v163 + v112[9], (uint64_t)v177, &qword_26784CED0);
  uint64_t v129 = v114 + v112[9];
  uint64_t v130 = v179;
  sub_214B95764(v129, (uint64_t)v179, &qword_26784CED0);
  uint64_t v116 = v176;
  uint64_t v131 = (uint64_t)&v176[*(int *)(v188 + 48)];
  sub_214B95764((uint64_t)v128, (uint64_t)v176, &qword_26784CED0);
  sub_214B95764((uint64_t)v130, v131, &qword_26784CED0);
  if (v92((uint64_t)v116, 1, v90) == 1)
  {
    sub_214B59CE0((uint64_t)v130, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v128, &qword_26784CED0);
    if (v92(v131, 1, v90) != 1) {
      goto LABEL_34;
    }
    char v187 = v91;
    sub_214B59CE0((uint64_t)v116, &qword_26784CED0);
  }
  else
  {
    uint64_t v132 = (uint64_t)v167;
    sub_214B95764((uint64_t)v116, (uint64_t)v167, &qword_26784CED0);
    if (v92(v131, 1, v90) == 1)
    {
      sub_214B59CE0((uint64_t)v179, &qword_26784CED0);
      sub_214B59CE0((uint64_t)v128, &qword_26784CED0);
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v132, v90);
      goto LABEL_34;
    }
    char v187 = v91;
    uint64_t v133 = v90;
    uint64_t v134 = v166;
    long long v135 = v185;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v131, v133);
    sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
    LODWORD(v186) = sub_214D1A018();
    uint64_t v136 = (uint64_t)v116;
    long long v137 = *(void (**)(unsigned char *, uint64_t))(v134 + 8);
    v137(v135, v133);
    sub_214B59CE0((uint64_t)v179, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v177, &qword_26784CED0);
    v137((unsigned char *)v132, v133);
    uint64_t v90 = v133;
    sub_214B59CE0(v136, &qword_26784CED0);
    if ((v186 & 1) == 0) {
      return 0;
    }
  }
  long long v138 = v173;
  sub_214B95764(v127 + v112[10], (uint64_t)v173, &qword_26784CED0);
  uint64_t v139 = v164;
  long long v140 = v175;
  sub_214B95764(v164 + v112[10], (uint64_t)v175, &qword_26784CED0);
  uint64_t v116 = v174;
  uint64_t v141 = (uint64_t)&v174[*(int *)(v188 + 48)];
  sub_214B95764((uint64_t)v138, (uint64_t)v174, &qword_26784CED0);
  sub_214B95764((uint64_t)v140, v141, &qword_26784CED0);
  if (v92((uint64_t)v116, 1, v90) != 1)
  {
    char v143 = v172;
    sub_214B95764((uint64_t)v116, (uint64_t)v172, &qword_26784CED0);
    if (v92(v141, 1, v90) != 1)
    {
      uint64_t v142 = v90;
      uint64_t v145 = v166;
      uint64_t v146 = (uint64_t)v138;
      uint64_t v147 = v185;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v141, v142);
      sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
      LODWORD(v186) = sub_214D1A018();
      uint64_t v148 = *(void (**)(unsigned char *, uint64_t))(v145 + 8);
      v148(v147, v142);
      sub_214B59CE0((uint64_t)v175, &qword_26784CED0);
      sub_214B59CE0(v146, &qword_26784CED0);
      v148(v172, v142);
      sub_214B59CE0((uint64_t)v116, &qword_26784CED0);
      if ((v186 & 1) == 0) {
        return 0;
      }
      goto LABEL_39;
    }
    sub_214B59CE0((uint64_t)v140, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v138, &qword_26784CED0);
    (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v143, v90);
    goto LABEL_34;
  }
  sub_214B59CE0((uint64_t)v140, &qword_26784CED0);
  sub_214B59CE0((uint64_t)v138, &qword_26784CED0);
  if (v92(v141, 1, v90) != 1)
  {
LABEL_34:
    uint64_t v94 = (uint64_t)v116;
    goto LABEL_35;
  }
  sub_214B59CE0((uint64_t)v116, &qword_26784CED0);
  uint64_t v142 = v90;
LABEL_39:
  uint64_t v149 = v165;
  uint64_t v150 = v171;
  sub_214B95764(v127 + v165[11], (uint64_t)v171, &qword_26784CED0);
  uint64_t v151 = v170;
  sub_214B95764(v139 + v149[11], (uint64_t)v170, &qword_26784CED0);
  uint64_t v152 = (uint64_t)v162;
  uint64_t v153 = (uint64_t)&v162[*(int *)(v188 + 48)];
  sub_214B95764((uint64_t)v150, (uint64_t)v162, &qword_26784CED0);
  sub_214B95764((uint64_t)v151, v153, &qword_26784CED0);
  if (v92(v152, 1, v142) == 1)
  {
    sub_214B59CE0((uint64_t)v151, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v150, &qword_26784CED0);
    if (v92(v153, 1, v142) == 1)
    {
      sub_214B59CE0((uint64_t)v162, &qword_26784CED0);
      return 1;
    }
    goto LABEL_44;
  }
  unint64_t v154 = v169;
  sub_214B95764(v152, (uint64_t)v169, &qword_26784CED0);
  if (v92(v153, 1, v142) == 1)
  {
    sub_214B59CE0((uint64_t)v151, &qword_26784CED0);
    sub_214B59CE0((uint64_t)v150, &qword_26784CED0);
    (*(void (**)(unsigned char *, uint64_t))(v166 + 8))(v154, v142);
LABEL_44:
    uint64_t v94 = (uint64_t)v162;
    goto LABEL_35;
  }
  uint64_t v155 = v166;
  uint64_t v156 = v185;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v166 + 32))(v185, v153, v142);
  sub_214BB6EAC(&qword_26784D198, 255, MEMORY[0x263F8F6D8]);
  char v157 = sub_214D1A018();
  uint64_t v158 = *(void (**)(unsigned char *, uint64_t))(v155 + 8);
  v158(v156, v142);
  sub_214B59CE0((uint64_t)v151, &qword_26784CED0);
  sub_214B59CE0((uint64_t)v150, &qword_26784CED0);
  v158(v154, v142);
  sub_214B59CE0(v152, &qword_26784CED0);
  return (v157 & 1) != 0;
}

uint64_t sub_214BAFF2C(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v34 = v9;
  uint64_t v10 = v8;
  *(void *)(v9 + 560) = v8;
  *(void *)(v9 + 552) = a8;
  *(void *)(v9 + 544) = a7;
  *(void *)(v9 + 536) = a6;
  *(void *)(v9 + 528) = a5;
  *(void *)(v9 + 520) = a2;
  *(void *)(v9 + 512) = a1;
  *(void *)(v9 + 568) = type metadata accessor for ODISignpost();
  uint64_t v14 = swift_task_alloc();
  *(void *)(v9 + 576) = v14;
  uint64_t v27 = swift_task_alloc();
  *(void *)(v9 + 584) = v27;
  *(unsigned char *)(v9 + 259) = *a3;
  *(unsigned char *)(v9 + 260) = *a4;
  swift_defaultActor_initialize();
  v8[26] = sub_214B7F364(MEMORY[0x263F8EE78]);
  if (qword_26784C9A0 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_267863A18;
  uint64_t v15 = unk_267863A20;
  char v17 = byte_267863A28;
  uint64_t v18 = (void *)qword_267863A30;
  int v19 = byte_267863A38;
  *(void *)(v14 + 32) = "enableTelemetry=YES";
  *(void *)(v14 + 40) = 19;
  *(unsigned char *)(v14 + 48) = 2;
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v15;
  *(unsigned char *)(v14 + 16) = v17;
  *(void *)(v14 + 24) = v18;
  id v20 = v18;
  sub_214D19EA8();
  sub_214D1A588();
  if (v19 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }

  sub_214BB7578(v14, v27, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  v10[17] = a1;
  v10[18] = a2;
  v10[15] = a5;
  v10[16] = a6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if (sub_214BD5A34())
  {
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    uint64_t v23 = &off_26C5A7B10;
    uint64_t v24 = &type metadata for AMPAssessmentPayloadAdapter;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    uint64_t v23 = &off_26C5A7E40;
    uint64_t v24 = &type metadata for Base64AssessmentPayloadAdapter;
  }
  v10[19] = v21;
  v10[20] = v22;
  v10[21] = 45;
  v10[22] = 0xE100000000000000;
  v10[24] = v24;
  v10[25] = v23;
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  char v31 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D30D50, &v31);
  swift_bridgeObjectRelease();
  if (qword_26ACE3C10 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v9 + 592) = v25;
  *uint64_t v25 = v9;
  v25[1] = sub_214BB0338;
  return sub_214C11404(v9 + 264);
}

uint64_t sub_214BB0338()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v22 = v2;
  __int16 v3 = *(_WORD *)((char *)v2 + 259);
  uint64_t v22 = (void *)*v0;
  uint64_t v4 = v22;
  swift_task_dealloc();
  long long v5 = *(_OWORD *)(v2 + 59);
  *((_OWORD *)v2 + 13) = *(_OWORD *)(v2 + 57);
  *((_OWORD *)v2 + 14) = v5;
  *((_OWORD *)v2 + 15) = *(_OWORD *)(v2 + 61);
  *((unsigned char *)v2 + 256) = *((unsigned char *)v2 + 504);
  long long v6 = *(_OWORD *)(v2 + 51);
  *((_OWORD *)v2 + 9) = *(_OWORD *)(v2 + 49);
  *((_OWORD *)v2 + 10) = v6;
  long long v7 = *(_OWORD *)(v2 + 55);
  *((_OWORD *)v2 + 11) = *(_OWORD *)(v2 + 53);
  *((_OWORD *)v2 + 12) = v7;
  long long v8 = *(_OWORD *)(v2 + 43);
  *((_OWORD *)v2 + 5) = *(_OWORD *)(v2 + 41);
  *((_OWORD *)v2 + 6) = v8;
  long long v9 = *(_OWORD *)(v2 + 47);
  *((_OWORD *)v2 + 7) = *(_OWORD *)(v2 + 45);
  *((_OWORD *)v2 + 8) = v9;
  long long v10 = *(_OWORD *)(v2 + 35);
  *((_OWORD *)v2 + 1) = *(_OWORD *)(v2 + 33);
  *((_OWORD *)v2 + 2) = v10;
  long long v11 = *(_OWORD *)(v2 + 39);
  *((_OWORD *)v2 + 3) = *(_OWORD *)(v2 + 37);
  *((_OWORD *)v2 + 4) = v11;
  sub_214B99814(v2 + 2);
  char v21 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001ELL, 0x8000000214D30D70, &v21);
  swift_bridgeObjectRelease();
  *(_WORD *)((char *)v2 + 257) = v3;
  type metadata accessor for ODNAtorQueueManager();
  swift_allocObject();
  id v20 = (uint64_t (*)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26784D6F0 + dword_26784D6F0);
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v2[75] = v12;
  void *v12 = v4;
  v12[1] = sub_214BB0604;
  uint64_t v13 = v2[69];
  uint64_t v14 = v1[68];
  uint64_t v15 = v1[67];
  uint64_t v16 = v1[66];
  uint64_t v17 = v1[65];
  uint64_t v18 = v1[64];
  return v20(v18, v17, (char *)v2 + 257, (char *)v2 + 258, v16, v15, v14, v13);
}

uint64_t sub_214BB0604(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 560);
  *(void *)(*(void *)v1 + 608) = a1;
  swift_task_dealloc();
  swift_release();
  *(void *)(v3 + 112) = a1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BB0750, v3, 0);
}

uint64_t sub_214BB0750()
{
  long long v6 = v0;
  uint64_t v1 = v0[73];
  char v5 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x8000000214D30D90, &v5);
  swift_release();
  swift_bridgeObjectRelease();
  sub_214D1A578();
  sub_214D19E98();
  sub_214BB75E0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[70];
  return v2(v3);
}

uint64_t sub_214BB0874(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for AssessmentTiming()
{
  uint64_t result = qword_26784D1D0;
  if (!qword_26784D1D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214BB0914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BB097C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_214BB09E8()
{
  unint64_t result = qword_26784D1A0;
  if (!qword_26784D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D1A0);
  }
  return result;
}

unint64_t sub_214BB0A40()
{
  unint64_t result = qword_26784D1A8;
  if (!qword_26784D1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D1A8);
  }
  return result;
}

uint64_t destroy for ODIBindingsState()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17CoreODIEssentials16ODIBindingsStateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODIBindingsState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ODIBindingsState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIBindingsState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIBindingsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIBindingsState()
{
  return &type metadata for ODIBindingsState;
}

unsigned char *storeEnumTagSinglePayload for ODIFieldsSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BB0D28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIFieldsSource()
{
  return &type metadata for ODIFieldsSource;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ComputationContext(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ComputationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BB0EDCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComputationContext()
{
  return &type metadata for ComputationContext;
}

uint64_t destroy for ODNAtorParameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v6 = (const void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 16), v6, 0x40AuLL);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v37 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v37;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v36 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v36;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v35 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v35;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    uint64_t v34 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v34;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    uint64_t v33 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v33;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v32 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v32;
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    uint64_t v8 = *(void *)(a2 + 168);
    *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
    *(void *)(a1 + 168) = v8;
    uint64_t v9 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v9;
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    uint64_t v10 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v10;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    uint64_t v11 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v11;
    *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
    uint64_t v12 = *(void *)(a2 + 280);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = v12;
    *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
    uint64_t v13 = *(void *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v13;
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    uint64_t v14 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v14;
    *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
    *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
    uint64_t v15 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v15;
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
    uint64_t v16 = *(void *)(a2 + 376);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = v16;
    *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
    uint64_t v17 = *(void *)(a2 + 400);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = v17;
    *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
    *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
    uint64_t v18 = *(void *)(a2 + 416);
    *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
    *(void *)(a1 + 416) = v18;
    uint64_t v19 = *(void *)(a2 + 432);
    *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
    *(void *)(a1 + 432) = v19;
    uint64_t v20 = *(void *)(a2 + 448);
    *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
    *(void *)(a1 + 448) = v20;
    uint64_t v21 = *(void *)(a2 + 464);
    *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
    *(void *)(a1 + 464) = v21;
    uint64_t v22 = *(void *)(a2 + 480);
    *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
    *(void *)(a1 + 480) = v22;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(void *)(a1 + 640) = *(void *)(a2 + 640);
    *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
    long long v23 = *(_OWORD *)(a2 + 800);
    long long v24 = *(_OWORD *)(a2 + 816);
    *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
    *(_OWORD *)(a1 + 800) = v23;
    *(_OWORD *)(a1 + 816) = v24;
    long long v25 = *(_OWORD *)(a2 + 840);
    long long v26 = *(_OWORD *)(a2 + 856);
    long long v27 = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
    *(_OWORD *)(a1 + 888) = v27;
    *(_OWORD *)(a1 + 840) = v25;
    *(_OWORD *)(a1 + 856) = v26;
    long long v28 = *(_OWORD *)(a2 + 904);
    long long v29 = *(_OWORD *)(a2 + 920);
    long long v30 = *(_OWORD *)(a2 + 936);
    *(_OWORD *)(a1 + 946) = *(_OWORD *)(a2 + 946);
    *(_OWORD *)(a1 + 920) = v29;
    *(_OWORD *)(a1 + 936) = v30;
    *(_OWORD *)(a1 + 904) = v28;
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    *(void *)(a1 + 976) = *(void *)(a2 + 976);
    *(unsigned char *)(a1 + 984) = *(unsigned char *)(a2 + 984);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
    *(unsigned char *)(a1 + 1008) = *(unsigned char *)(a2 + 1008);
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    *(unsigned char *)(a1 + 1032) = *(unsigned char *)(a2 + 1032);
    *(_WORD *)(a1 + 1048) = *(_WORD *)(a2 + 1048);
    *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
    *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(_WORD *)(a1 + 1064) = *(_WORD *)(a2 + 1064);
  *(unsigned char *)(a1 + 1066) = *(unsigned char *)(a2 + 1066);
  *(_WORD *)(a1 + 1067) = *(_WORD *)(a2 + 1067);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      uint64_t v21 = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 168) = v21;
      *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      uint64_t v22 = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 208) = v22;
      *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
      *(unsigned char *)(a1 + 337) = *(unsigned char *)(a2 + 337);
      *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
      *(unsigned char *)(a1 + 361) = *(unsigned char *)(a2 + 361);
      *(unsigned char *)(a1 + 362) = *(unsigned char *)(a2 + 362);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
      *(unsigned char *)(a1 + 409) = *(unsigned char *)(a2 + 409);
      *(unsigned char *)(a1 + 410) = *(unsigned char *)(a2 + 410);
      uint64_t v23 = *(void *)(a2 + 416);
      *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
      *(void *)(a1 + 416) = v23;
      *(unsigned char *)(a1 + 425) = *(unsigned char *)(a2 + 425);
      uint64_t v24 = *(void *)(a2 + 432);
      *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
      *(void *)(a1 + 432) = v24;
      *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
      uint64_t v25 = *(void *)(a2 + 448);
      *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
      *(void *)(a1 + 448) = v25;
      *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
      uint64_t v26 = *(void *)(a2 + 464);
      *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
      *(void *)(a1 + 464) = v26;
      *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
      uint64_t v27 = *(void *)(a2 + 480);
      *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
      *(void *)(a1 + 480) = v27;
      *(unsigned char *)(a1 + 489) = *(unsigned char *)(a2 + 489);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
      *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
      *(unsigned char *)(a1 + 801) = *(unsigned char *)(a2 + 801);
      *(unsigned char *)(a1 + 802) = *(unsigned char *)(a2 + 802);
      *(unsigned char *)(a1 + 803) = *(unsigned char *)(a2 + 803);
      uint64_t v28 = *(void *)(a2 + 808);
      *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
      *(void *)(a1 + 808) = v28;
      *(unsigned char *)(a1 + 817) = *(unsigned char *)(a2 + 817);
      uint64_t v29 = *(void *)(a2 + 824);
      *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
      *(void *)(a1 + 824) = v29;
      *(unsigned char *)(a1 + 833) = *(unsigned char *)(a2 + 833);
      uint64_t v30 = *(void *)(a2 + 840);
      *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
      *(void *)(a1 + 840) = v30;
      *(unsigned char *)(a1 + 849) = *(unsigned char *)(a2 + 849);
      uint64_t v31 = *(void *)(a2 + 856);
      *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
      *(void *)(a1 + 856) = v31;
      *(unsigned char *)(a1 + 865) = *(unsigned char *)(a2 + 865);
      uint64_t v32 = *(void *)(a2 + 872);
      *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
      *(void *)(a1 + 872) = v32;
      *(unsigned char *)(a1 + 881) = *(unsigned char *)(a2 + 881);
      uint64_t v33 = *(void *)(a2 + 888);
      *(unsigned char *)(a1 + 896) = *(unsigned char *)(a2 + 896);
      *(void *)(a1 + 888) = v33;
      *(unsigned char *)(a1 + 897) = *(unsigned char *)(a2 + 897);
      uint64_t v34 = *(void *)(a2 + 904);
      *(unsigned char *)(a1 + 912) = *(unsigned char *)(a2 + 912);
      *(void *)(a1 + 904) = v34;
      *(unsigned char *)(a1 + 913) = *(unsigned char *)(a2 + 913);
      uint64_t v35 = *(void *)(a2 + 920);
      *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
      *(void *)(a1 + 920) = v35;
      *(unsigned char *)(a1 + 929) = *(unsigned char *)(a2 + 929);
      uint64_t v36 = *(void *)(a2 + 936);
      *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
      *(void *)(a1 + 936) = v36;
      *(unsigned char *)(a1 + 945) = *(unsigned char *)(a2 + 945);
      uint64_t v37 = *(void *)(a2 + 952);
      *(unsigned char *)(a1 + 960) = *(unsigned char *)(a2 + 960);
      *(void *)(a1 + 952) = v37;
      *(unsigned char *)(a1 + 961) = *(unsigned char *)(a2 + 961);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 984) = *(unsigned char *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1008) = *(unsigned char *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1032) = *(unsigned char *)(a2 + 1032);
      uint64_t v38 = *(void *)(a2 + 1040);
      *(unsigned char *)(a1 + 1048) = *(unsigned char *)(a2 + 1048);
      *(void *)(a1 + 1040) = v38;
      *(unsigned char *)(a1 + 1049) = *(unsigned char *)(a2 + 1049);
      goto LABEL_8;
    }
    sub_214BB22D0(a1 + 16);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x40AuLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v5 = *(void *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  *(void *)(a1 + 168) = v5;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  uint64_t v6 = *(void *)(a2 + 208);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  *(void *)(a1 + 208) = v6;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
  uint64_t v7 = *(void *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(void *)(a1 + 416) = v7;
  uint64_t v8 = *(void *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  *(void *)(a1 + 432) = v8;
  uint64_t v9 = *(void *)(a2 + 448);
  *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
  *(void *)(a1 + 448) = v9;
  uint64_t v10 = *(void *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(void *)(a1 + 464) = v10;
  uint64_t v11 = *(void *)(a2 + 480);
  *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
  *(void *)(a1 + 480) = v11;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
  long long v12 = *(_OWORD *)(a2 + 800);
  long long v13 = *(_OWORD *)(a2 + 816);
  *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
  *(_OWORD *)(a1 + 800) = v12;
  *(_OWORD *)(a1 + 816) = v13;
  long long v15 = *(_OWORD *)(a2 + 920);
  long long v14 = *(_OWORD *)(a2 + 936);
  long long v16 = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 946) = *(_OWORD *)(a2 + 946);
  *(_OWORD *)(a1 + 920) = v15;
  *(_OWORD *)(a1 + 936) = v14;
  *(_OWORD *)(a1 + 904) = v16;
  long long v17 = *(_OWORD *)(a2 + 840);
  long long v18 = *(_OWORD *)(a2 + 856);
  long long v19 = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 888) = v19;
  *(_OWORD *)(a1 + 840) = v17;
  *(_OWORD *)(a1 + 856) = v18;
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(unsigned char *)(a1 + 984) = *(unsigned char *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(unsigned char *)(a1 + 1008) = *(unsigned char *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(unsigned char *)(a1 + 1032) = *(unsigned char *)(a2 + 1032);
  uint64_t v20 = *(void *)(a2 + 1040);
  *(_WORD *)(a1 + 1048) = *(_WORD *)(a2 + 1048);
  *(void *)(a1 + 1040) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1064) = *(unsigned char *)(a2 + 1064);
  *(unsigned char *)(a1 + 1065) = *(unsigned char *)(a2 + 1065);
  *(unsigned char *)(a1 + 1066) = *(unsigned char *)(a2 + 1066);
  *(unsigned char *)(a1 + 1067) = *(unsigned char *)(a2 + 1067);
  *(unsigned char *)(a1 + 1068) = *(unsigned char *)(a2 + 1068);
  return a1;
}

uint64_t sub_214BB22D0(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy1069_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42DuLL);
}

uint64_t assignWithTake for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v7 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v7;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      uint64_t v8 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      uint64_t v9 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v10 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
      uint64_t v11 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v11;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
      uint64_t v12 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v12;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      uint64_t v13 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v13;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
      uint64_t v14 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v14;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      uint64_t v15 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v15;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
      uint64_t v16 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v16;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
      *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
      uint64_t v17 = *(void *)(a2 + 352);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = v17;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
      *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
      uint64_t v18 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v18;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
      uint64_t v19 = *(void *)(a2 + 400);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = v19;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
      *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
      uint64_t v20 = *(void *)(a2 + 464);
      *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
      *(void *)(a1 + 464) = v20;
      *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 600) = *(unsigned char *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      *(void *)(a1 + 688) = *(void *)(a2 + 688);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 744) = *(unsigned char *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 768) = *(unsigned char *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
      *(_DWORD *)(a1 + 800) = *(_DWORD *)(a2 + 800);
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(_WORD *)(a1 + 848) = *(_WORD *)(a2 + 848);
      *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(unsigned char *)(a1 + 865) = *(unsigned char *)(a2 + 865);
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      *(_WORD *)(a1 + 880) = *(_WORD *)(a2 + 880);
      *(void *)(a1 + 888) = *(void *)(a2 + 888);
      *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
      *(void *)(a1 + 904) = *(void *)(a2 + 904);
      *(_WORD *)(a1 + 912) = *(_WORD *)(a2 + 912);
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
      *(unsigned char *)(a1 + 929) = *(unsigned char *)(a2 + 929);
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      *(_WORD *)(a1 + 944) = *(_WORD *)(a2 + 944);
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      *(_WORD *)(a1 + 960) = *(_WORD *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 984) = *(unsigned char *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1008) = *(unsigned char *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1032) = *(unsigned char *)(a2 + 1032);
      *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
      *(_WORD *)(a1 + 1048) = *(_WORD *)(a2 + 1048);
      goto LABEL_6;
    }
    sub_214BB22D0(a1 + 16);
  }
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x40AuLL);
LABEL_6:
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1064) = *(unsigned char *)(a2 + 1064);
  *(unsigned char *)(a1 + 1065) = *(unsigned char *)(a2 + 1065);
  *(unsigned char *)(a1 + 1066) = *(unsigned char *)(a2 + 1066);
  *(_WORD *)(a1 + 1067) = *(_WORD *)(a2 + 1067);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAtorParameters(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 1069)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAtorParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1068) = 0;
    *(_DWORD *)(result + 1064) = 0;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1069) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1069) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAtorParameters()
{
  return &type metadata for ODNAtorParameters;
}

uint64_t type metadata accessor for ODNAtorProxy()
{
  return self;
}

uint64_t method lookup function for ODNAtorProxy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODNAtorProxy);
}

uint64_t dispatch thunk of ODNAtorProxy.getBestAssessmentForBindings(bindingsState:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ODNAtorProxy.__allocating_init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 160) + **(int **)(v8 + 160));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v18;
  *uint64_t v18 = v9;
  v18[1] = sub_214BB2C3C;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_214BB2C3C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of ODNAtorProxy.getOutputPayload(getAssessmentsParameters:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 176) + **(int **)(*(void *)v2 + 176));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_214B6A55C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ODNAtorProxy.sendODNResults(assessmentTiming:outcome:partialAssessmentStates:sessionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 192)
                                                                            + **(int **)(*(void *)v5 + 192));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  void *v12 = v6;
  v12[1] = sub_214B6B4A4;
  return v14(a1, a2, a3, a4, a5);
}

unsigned char *storeEnumTagSinglePayload for AssessmentOutcome(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BB3048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentOutcome()
{
  return &type metadata for AssessmentOutcome;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssessmentTiming(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_214D1A8C8();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9((char *)a1, (char *)a2, v7);
    v9((char *)a1 + a3[5], (char *)a2 + a3[5], v7);
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v39 = v8;
    if (v38((char *)a2 + v10, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v38((char *)a2 + v15, 1, v7))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      uint64_t v19 = v9;
    }
    else
    {
      uint64_t v19 = v9;
      v9(v16, v17, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v16, 0, 1, v7);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v38((char *)a2 + v20, 1, v7))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      v19(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v7);
    }
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v38((char *)a2 + v24, 1, v7))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v19(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v25, 0, 1, v7);
    }
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (v38((char *)a2 + v28, 1, v7))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      uint64_t v32 = v39;
    }
    else
    {
      v19(v29, v30, v7);
      uint64_t v32 = v39;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v29, 0, 1, v7);
    }
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v38(v35, 1, v7))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v19(v34, v35, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AssessmentTiming(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_214D1A8C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(a1, v4);
  v14(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4)) {
    v14(v6, v4);
  }
  uint64_t v8 = a1 + a2[7];
  if (!v7(v8, 1, v4)) {
    v14(v8, v4);
  }
  uint64_t v9 = a1 + a2[8];
  if (!v7(v9, 1, v4)) {
    v14(v9, v4);
  }
  uint64_t v10 = a1 + a2[9];
  if (!v7(v10, 1, v4)) {
    v14(v10, v4);
  }
  uint64_t v11 = a1 + a2[10];
  if (!v7(v11, 1, v4)) {
    v14(v11, v4);
  }
  uint64_t v12 = a1 + a2[11];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v12, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
  }
  return result;
}

char *initializeWithCopy for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v38 = a3;
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v39 = v7;
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v38[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = v12;
  if (v12(&a2[v14], 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v19 = v8;
  }
  else
  {
    uint64_t v19 = v8;
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v6);
  }
  uint64_t v20 = v38[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v12(&a2[v20], 1, v6))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v19(v21, v22, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v6);
  }
  uint64_t v24 = v38[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v12(&a2[v24], 1, v6))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v19(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v38[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v12(&a2[v28], 1, v6))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v39;
  }
  else
  {
    v19(v29, v30, v6);
    uint64_t v32 = v39;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v29, 0, 1, v6);
  }
  uint64_t v33 = v38[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v17(v35, 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v19(v34, v35, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v47 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v47(v10, v11, v6);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  int v19 = v12(&a1[v16], 1, v6);
  int v20 = v12(v18, 1, v6);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v47(v17, v18, v6);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  int v25 = v12(&a1[v22], 1, v6);
  int v26 = v12(v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
LABEL_18:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v47(v23, v24, v6);
LABEL_19:
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  int v31 = v12(&a1[v28], 1, v6);
  int v32 = v12(v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_24:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  v47(v29, v30, v6);
LABEL_25:
  uint64_t v34 = a3[10];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  int v37 = v12(&a1[v34], 1, v6);
  int v38 = v12(v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
LABEL_30:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  v47(v35, v36, v6);
LABEL_31:
  uint64_t v40 = a3[11];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  int v43 = v12(&a1[v40], 1, v6);
  int v44 = v12(v42, 1, v6);
  if (!v43)
  {
    if (!v44)
    {
      v47(v41, v42, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v6);
    goto LABEL_36;
  }
  if (v44)
  {
LABEL_36:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v41, v42, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  int v38 = a3;
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v39 = v7;
  if (v12(&a2[v9], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v38[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = v12;
  if (v12(&a2[v14], 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    int v19 = v8;
  }
  else
  {
    int v19 = v8;
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v6);
  }
  uint64_t v20 = v38[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v12(&a2[v20], 1, v6))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v19(v21, v22, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v6);
  }
  uint64_t v24 = v38[9];
  int v25 = &a1[v24];
  int v26 = &a2[v24];
  if (v12(&a2[v24], 1, v6))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v19(v25, v26, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v25, 0, 1, v6);
  }
  uint64_t v28 = v38[10];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v12(&a2[v28], 1, v6))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = v39;
  }
  else
  {
    v19(v29, v30, v6);
    uint64_t v32 = v39;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v29, 0, 1, v6);
  }
  uint64_t v33 = v38[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v17(v35, 1, v6))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v19(v34, v35, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v47 = v8;
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v47(v10, v11, v6);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  int v19 = v12(&a1[v16], 1, v6);
  int v20 = v12(v18, 1, v6);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v47(v17, v18, v6);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  int v25 = v12(&a1[v22], 1, v6);
  int v26 = v12(v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
LABEL_18:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v47(v23, v24, v6);
LABEL_19:
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  int v31 = v12(&a1[v28], 1, v6);
  int v32 = v12(v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v30, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_24:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  v47(v29, v30, v6);
LABEL_25:
  uint64_t v34 = a3[10];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  int v37 = v12(&a1[v34], 1, v6);
  int v38 = v12(v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v36, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
LABEL_30:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  v47(v35, v36, v6);
LABEL_31:
  uint64_t v40 = a3[11];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  int v43 = v12(&a1[v40], 1, v6);
  int v44 = v12(v42, 1, v6);
  if (!v43)
  {
    if (!v44)
    {
      v47(v41, v42, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v6);
    goto LABEL_36;
  }
  if (v44)
  {
LABEL_36:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v41, v42, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentTiming(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214BB4E48);
}

uint64_t sub_214BB4E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D1A8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AssessmentTiming(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214BB4F58);
}

uint64_t sub_214BB4F58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_214D1A8C8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_214BB5060()
{
  sub_214D1A8C8();
  if (v0 <= 0x3F)
  {
    sub_214B7B3E8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for OdiAssessmentsParameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = (const void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4 == 1)
  {
    memcpy((void *)(a1 + 8), v5, 0x40AuLL);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v37 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v37;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v36 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v36;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v35 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v35;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v34 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v34;
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    uint64_t v33 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v33;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    uint64_t v32 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v32;
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    uint64_t v7 = *(void *)(a2 + 160);
    *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
    *(void *)(a1 + 160) = v7;
    uint64_t v8 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v8;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    uint64_t v9 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v9;
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    uint64_t v10 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v10;
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    uint64_t v11 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v11;
    *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
    uint64_t v12 = *(void *)(a2 + 296);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = v12;
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
    uint64_t v13 = *(void *)(a2 + 320);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = v13;
    *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
    *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
    uint64_t v14 = *(void *)(a2 + 344);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = v14;
    *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
    *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
    uint64_t v15 = *(void *)(a2 + 368);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = v15;
    *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
    uint64_t v16 = *(void *)(a2 + 392);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v16;
    *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
    *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
    uint64_t v17 = *(void *)(a2 + 408);
    *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
    *(void *)(a1 + 408) = v17;
    uint64_t v18 = *(void *)(a2 + 424);
    *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
    *(void *)(a1 + 424) = v18;
    uint64_t v19 = *(void *)(a2 + 440);
    *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
    *(void *)(a1 + 440) = v19;
    uint64_t v20 = *(void *)(a2 + 456);
    *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
    *(void *)(a1 + 456) = v20;
    uint64_t v21 = *(void *)(a2 + 472);
    *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
    *(void *)(a1 + 472) = v21;
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    uint64_t v22 = *(void *)(a2 + 512);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = v22;
    *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
    long long v23 = *(_OWORD *)(a2 + 792);
    long long v24 = *(_OWORD *)(a2 + 808);
    *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
    *(_OWORD *)(a1 + 792) = v23;
    *(_OWORD *)(a1 + 808) = v24;
    long long v25 = *(_OWORD *)(a2 + 832);
    long long v26 = *(_OWORD *)(a2 + 848);
    long long v27 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 864) = v27;
    *(_OWORD *)(a1 + 848) = v26;
    *(_OWORD *)(a1 + 832) = v25;
    long long v28 = *(_OWORD *)(a2 + 896);
    long long v29 = *(_OWORD *)(a2 + 912);
    long long v30 = *(_OWORD *)(a2 + 928);
    *(_OWORD *)(a1 + 938) = *(_OWORD *)(a2 + 938);
    *(_OWORD *)(a1 + 928) = v30;
    *(_OWORD *)(a1 + 912) = v29;
    *(_OWORD *)(a1 + 896) = v28;
    *(void *)(a1 + 960) = *(void *)(a2 + 960);
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    *(unsigned char *)(a1 + 1000) = *(unsigned char *)(a2 + 1000);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    *(unsigned char *)(a1 + 1024) = *(unsigned char *)(a2 + 1024);
    *(_WORD *)(a1 + 1040) = *(_WORD *)(a2 + 1040);
    *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 1042) = *(unsigned char *)(a2 + 1042);
  *(_WORD *)(a1 + 1043) = *(_WORD *)(a2 + 1043);
  return a1;
}

uint64_t assignWithCopy for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = a2 + 329;
  if (*(void *)(a1 + 8) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      uint64_t v22 = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(void *)(a1 + 160) = v22;
      *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      uint64_t v23 = *(void *)(a2 + 200);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 200) = v23;
      *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
      *(unsigned char *)(a1 + 330) = *(unsigned char *)(a2 + 330);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
      *(unsigned char *)(a1 + 353) = *(unsigned char *)(a2 + 353);
      *(unsigned char *)(a1 + 354) = *(unsigned char *)(a2 + 354);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
      *(unsigned char *)(a1 + 401) = *(unsigned char *)(a2 + 401);
      *(unsigned char *)(a1 + 402) = *(unsigned char *)(a2 + 402);
      uint64_t v24 = *(void *)(a2 + 408);
      *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
      *(void *)(a1 + 408) = v24;
      *(unsigned char *)(a1 + 417) = *(unsigned char *)(a2 + 417);
      uint64_t v25 = *(void *)(a2 + 424);
      *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
      *(void *)(a1 + 424) = v25;
      *(unsigned char *)(a1 + 433) = *(unsigned char *)(a2 + 433);
      uint64_t v26 = *(void *)(a2 + 440);
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      *(void *)(a1 + 440) = v26;
      *(unsigned char *)(a1 + 449) = *(unsigned char *)(a2 + 449);
      uint64_t v27 = *(void *)(a2 + 456);
      *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
      *(void *)(a1 + 456) = v27;
      *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
      uint64_t v28 = *(void *)(a2 + 472);
      *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
      *(void *)(a1 + 472) = v28;
      *(unsigned char *)(a1 + 481) = *(unsigned char *)(a2 + 481);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
      *(unsigned char *)(a1 + 792) = *(unsigned char *)(a2 + 792);
      *(unsigned char *)(a1 + 793) = *(unsigned char *)(a2 + 793);
      *(unsigned char *)(a1 + 794) = *(unsigned char *)(a2 + 794);
      *(unsigned char *)(a1 + 795) = *(unsigned char *)(a2 + 795);
      uint64_t v29 = *(void *)(a2 + 800);
      *(unsigned char *)(a1 + 808) = *(unsigned char *)(a2 + 808);
      *(void *)(a1 + 800) = v29;
      *(unsigned char *)(a1 + 809) = *(unsigned char *)(a2 + 809);
      uint64_t v30 = *(void *)(a2 + 816);
      *(unsigned char *)(a1 + 824) = *(unsigned char *)(a2 + 824);
      *(void *)(a1 + 816) = v30;
      *(unsigned char *)(a1 + 825) = *(unsigned char *)(a2 + 825);
      uint64_t v31 = *(void *)(a2 + 832);
      *(unsigned char *)(a1 + 840) = *(unsigned char *)(a2 + 840);
      *(void *)(a1 + 832) = v31;
      *(unsigned char *)(a1 + 841) = *(unsigned char *)(a2 + 841);
      uint64_t v32 = *(void *)(a2 + 848);
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(void *)(a1 + 848) = v32;
      *(unsigned char *)(a1 + 857) = *(unsigned char *)(a2 + 857);
      uint64_t v33 = *(void *)(a2 + 864);
      *(unsigned char *)(a1 + 872) = *(unsigned char *)(a2 + 872);
      *(void *)(a1 + 864) = v33;
      *(unsigned char *)(a1 + 873) = *(unsigned char *)(a2 + 873);
      uint64_t v34 = *(void *)(a2 + 880);
      *(unsigned char *)(a1 + 888) = *(unsigned char *)(a2 + 888);
      *(void *)(a1 + 880) = v34;
      *(unsigned char *)(a1 + 889) = *(unsigned char *)(a2 + 889);
      uint64_t v35 = *(void *)(a2 + 896);
      *(unsigned char *)(a1 + 904) = *(unsigned char *)(a2 + 904);
      *(void *)(a1 + 896) = v35;
      *(unsigned char *)(a1 + 905) = *(unsigned char *)(a2 + 905);
      uint64_t v36 = *(void *)(a2 + 912);
      *(unsigned char *)(a1 + 920) = *(unsigned char *)(a2 + 920);
      *(void *)(a1 + 912) = v36;
      *(unsigned char *)(a1 + 921) = *(unsigned char *)(a2 + 921);
      uint64_t v37 = *(void *)(a2 + 928);
      *(unsigned char *)(a1 + 936) = *(unsigned char *)(a2 + 936);
      *(void *)(a1 + 928) = v37;
      *(unsigned char *)(a1 + 937) = *(unsigned char *)(a2 + 937);
      uint64_t v38 = *(void *)(a2 + 944);
      *(unsigned char *)(a1 + 952) = *(unsigned char *)(a2 + 952);
      *(void *)(a1 + 944) = v38;
      *(unsigned char *)(a1 + 953) = *(unsigned char *)(a2 + 953);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1000) = *(unsigned char *)(a2 + 1000);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1024) = *(unsigned char *)(a2 + 1024);
      uint64_t v39 = *(void *)(a2 + 1032);
      *(unsigned char *)(a1 + 1040) = *(unsigned char *)(a2 + 1040);
      *(void *)(a1 + 1032) = v39;
      *(unsigned char *)(a1 + 1041) = *(unsigned char *)(a2 + 1041);
      goto LABEL_8;
    }
    sub_214BB22D0(a1 + 8);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x40AuLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v6 = *(void *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 160) = v6;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v7 = *(void *)(a2 + 200);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(void *)(a1 + 200) = v7;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(_WORD *)(a1 + 329) = *(_WORD *)v5;
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
  uint64_t v8 = *(void *)(a2 + 408);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  *(void *)(a1 + 408) = v8;
  uint64_t v9 = *(void *)(a2 + 424);
  *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
  *(void *)(a1 + 424) = v9;
  uint64_t v10 = *(void *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(void *)(a1 + 440) = v10;
  uint64_t v11 = *(void *)(a2 + 456);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(void *)(a1 + 456) = v11;
  uint64_t v12 = *(void *)(a2 + 472);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  *(void *)(a1 + 472) = v12;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  long long v13 = *(_OWORD *)(a2 + 792);
  long long v14 = *(_OWORD *)(a2 + 808);
  *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
  *(_OWORD *)(a1 + 792) = v13;
  *(_OWORD *)(a1 + 808) = v14;
  long long v15 = *(_OWORD *)(a2 + 938);
  long long v17 = *(_OWORD *)(a2 + 912);
  long long v16 = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 938) = v15;
  *(_OWORD *)(a1 + 928) = v16;
  *(_OWORD *)(a1 + 912) = v17;
  long long v18 = *(_OWORD *)(a2 + 832);
  long long v19 = *(_OWORD *)(a2 + 848);
  long long v20 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = v20;
  *(_OWORD *)(a1 + 848) = v19;
  *(_OWORD *)(a1 + 832) = v18;
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(unsigned char *)(a1 + 1000) = *(unsigned char *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(unsigned char *)(a1 + 1024) = *(unsigned char *)(a2 + 1024);
  uint64_t v21 = *(void *)(a2 + 1032);
  *(_WORD *)(a1 + 1040) = *(_WORD *)(a2 + 1040);
  *(void *)(a1 + 1032) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = a2 + 329;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(unsigned char *)(a1 + 1042) = *(unsigned char *)(v5 + 713);
  *(unsigned char *)(a1 + 1043) = *(unsigned char *)(v5 + 714);
  *(unsigned char *)(a1 + 1044) = *(unsigned char *)(a2 + 1044);
  return a1;
}

void *__swift_memcpy1045_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x415uLL);
}

uint64_t assignWithTake for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v7 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v7;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v8 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v8;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v9 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      uint64_t v10 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      uint64_t v11 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v11;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
      uint64_t v12 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v12;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      uint64_t v13 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v13;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      uint64_t v14 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
      uint64_t v15 = *(void *)(a2 + 296);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = v15;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
      uint64_t v16 = *(void *)(a2 + 320);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = v16;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
      uint64_t v17 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v17;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
      *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
      uint64_t v18 = *(void *)(a2 + 368);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = v18;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
      uint64_t v19 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v19;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
      *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
      uint64_t v20 = *(void *)(a2 + 456);
      *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
      *(void *)(a1 + 456) = v20;
      *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
      *(void *)(a1 + 472) = *(void *)(a2 + 472);
      *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      uint64_t v21 = *(void *)(a2 + 512);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = v21;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      *(void *)(a1 + 680) = *(void *)(a2 + 680);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 736) = *(unsigned char *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
      *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      *(_WORD *)(a1 + 808) = *(_WORD *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      *(_WORD *)(a1 + 840) = *(_WORD *)(a2 + 840);
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      *(unsigned char *)(a1 + 857) = *(unsigned char *)(a2 + 857);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(_WORD *)(a1 + 872) = *(_WORD *)(a2 + 872);
      *(void *)(a1 + 880) = *(void *)(a2 + 880);
      *(_WORD *)(a1 + 888) = *(_WORD *)(a2 + 888);
      *(void *)(a1 + 896) = *(void *)(a2 + 896);
      *(_WORD *)(a1 + 904) = *(_WORD *)(a2 + 904);
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      *(unsigned char *)(a1 + 920) = *(unsigned char *)(a2 + 920);
      *(unsigned char *)(a1 + 921) = *(unsigned char *)(a2 + 921);
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      *(_WORD *)(a1 + 936) = *(_WORD *)(a2 + 936);
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      *(_WORD *)(a1 + 952) = *(_WORD *)(a2 + 952);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 976) = *(unsigned char *)(a2 + 976);
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1000) = *(unsigned char *)(a2 + 1000);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 1024) = *(unsigned char *)(a2 + 1024);
      *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
      *(_WORD *)(a1 + 1040) = *(_WORD *)(a2 + 1040);
      goto LABEL_6;
    }
    sub_214BB22D0(a1 + 8);
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x40AuLL);
LABEL_6:
  *(unsigned char *)(a1 + 1042) = *(unsigned char *)(a2 + 1042);
  *(unsigned char *)(a1 + 1043) = *(unsigned char *)(a2 + 1043);
  *(unsigned char *)(a1 + 1044) = *(unsigned char *)(a2 + 1044);
  return a1;
}

uint64_t getEnumTagSinglePayload for OdiAssessmentsParameters(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 1045)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OdiAssessmentsParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1032) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1044) = 0;
    *(_DWORD *)(result + 1040) = 0;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1045) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1045) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OdiAssessmentsParameters()
{
  return &type metadata for OdiAssessmentsParameters;
}

unint64_t sub_214BB6C04()
{
  unint64_t result = qword_26784D1E0;
  if (!qword_26784D1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784D1E0);
  }
  return result;
}

uint64_t sub_214BB6C58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_214BB6CB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB6EAC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214BB6EF4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 1109, 7);
}

uint64_t sub_214BB7054(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_214B6A55C;
  return sub_214BAB4AC(a1, v4, v5, v6, v1 + 5);
}

uint64_t sub_214BB7118(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B94214(v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214BB7510(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_214BB7578(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_214BB75E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_214BB7640(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB766C()
{
  return objectdestroy_36Tm(81);
}

uint64_t sub_214BB7674()
{
  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_214BB7684()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214BB7694()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 297, 7);
}

uint64_t sub_214BB7724(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB7800(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB782C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 114, 7);
}

uint64_t sub_214BB7864()
{
  return objectdestroy_36Tm(83);
}

uint64_t sub_214BB786C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_214BB78AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB78E4()
{
  return objectdestroy_36Tm(98);
}

uint64_t sub_214BB78EC()
{
  return objectdestroy_36Tm(81);
}

uint64_t objectdestroy_36Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_214BB7948(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BB7994()
{
  return swift_release();
}

uint64_t sub_214BB79A0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B69F08;
  return v7(a1, a2);
}

uint64_t sub_214BB7A90()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_214BB7AB0, 0, 0);
}

uint64_t sub_214BB7AB0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F4A070]), sel_initWithQueue_, *(void *)(v0[16] + 16));
  v0[17] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214BB7BDC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214BB7F78;
  v0[13] = &block_descriptor_0;
  v0[14] = v2;
  objc_msgSend(v1, sel_generatePhoneAuthenticationSignatureOverData_withCompletion_, 0, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214BB7BDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_214BB7F08;
  }
  else {
    uint64_t v2 = sub_214BB7CEC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BB7CEC()
{
  uint64_t v1 = (void *)v0[15];
  id v2 = objc_msgSend(v1, sel_authenticationCertificateSignatures);
  sub_214B6A264(0, &qword_26784D250);
  unint64_t v3 = sub_214D1A268();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v18 = (void *)v0[17];

    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t result = sub_214B67D50(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v20 = v1;
  uint64_t v21 = v0;
  uint64_t v6 = 0;
  uint64_t v7 = v22;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x2166B0290](v6, v3);
    }
    else {
      id v8 = *(id *)(v3 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_serverVerifiableEncoding, v20, v21);
    uint64_t v11 = sub_214D1A038();
    uint64_t v13 = v12;

    unint64_t v15 = *(void *)(v22 + 16);
    unint64_t v14 = *(void *)(v22 + 24);
    if (v15 >= v14 >> 1) {
      sub_214B67D50(v14 > 1, v15 + 1, 1);
    }
    ++v6;
    *(void *)(v22 + 16) = v15 + 1;
    uint64_t v16 = v22 + 16 * v15;
    *(void *)(v16 + 32) = v11;
    *(void *)(v16 + 40) = v13;
  }
  while (v4 != v6);
  uint64_t v0 = v21;
  uint64_t v17 = (void *)v21[17];

  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(v7);
}

uint64_t sub_214BB7F08()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214BB7F78(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x270FA2410](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x270FA2410](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

uint64_t type metadata accessor for PhoneCertificateVendorWrapper()
{
  return self;
}

uint64_t sub_214BB805C()
{
  uint64_t v1 = sub_214D1A508();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_214D1A4F8();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v8 = sub_214D19F38();
  MEMORY[0x270FA5388](v8 - 8, v9);
  sub_214B6A264(0, (unint64_t *)&qword_26ACE4370);
  sub_214D19F28();
  v11[1] = MEMORY[0x263F8EE78];
  sub_214BB948C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4300);
  sub_214BB94E4();
  sub_214D1A678();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F8F130], v1);
  *(void *)(v0 + 16) = sub_214D1A538();
  return v0;
}

uint64_t sub_214BB8270()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214BB831C;
  v3[16] = v2;
  return MEMORY[0x270FA2498](sub_214BB7AB0, 0, 0);
}

uint64_t sub_214BB831C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_214BB841C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_214BB843C, v0, 0);
}

uint64_t sub_214BB843C()
{
  uint64_t v1 = (void *)v0[2];
  if (v1[19])
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v2 = swift_bridgeObjectRetain();
    return v8(v2);
  }
  else
  {
    uint64_t v4 = v1[17];
    uint64_t v5 = v1[18];
    __swift_project_boxed_opaque_existential_1(v1 + 14, v4);
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
    uint64_t v6 = (void *)swift_task_alloc();
    v0[3] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_214BB858C;
    return v7(v4, v5);
  }
}

uint64_t sub_214BB858C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v1) {
    uint64_t v6 = sub_214BB8868;
  }
  else {
    uint64_t v6 = sub_214BB86C0;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214BB86C0()
{
  uint64_t v1 = v0[4];
  if (*(void *)(v1 + 16))
  {
    *(void *)(v0[2] + 152) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v2 = v0[4];
    uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
    return v3(v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_214D19EE8();
    __swift_project_value_buffer(v5, (uint64_t)qword_26ACEBA58);
    uint64_t v6 = sub_214D19EC8();
    os_log_type_t v7 = sub_214D1A4B8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_214B4E000, v6, v7, "No PAC to process", v8, 2u);
      MEMORY[0x2166B1540](v8, -1, -1);
    }

    sub_214BB93E4();
    swift_allocError();
    *uint64_t v9 = 4;
    swift_willThrow();
    id v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_214BB8868()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = (void *)sub_214D199A8();
  char v3 = sub_214BB8A28(v2);
  sub_214BB93E4();
  swift_allocError();
  unsigned char *v4 = v3;
  swift_willThrow();

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214BB891C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for PhoneAuthenticationCertificateProvider()
{
  return self;
}

uint64_t sub_214BB8980()
{
  uint64_t v2 = *v0;
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_214BB972C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_214BB843C, v2, 0);
}

uint64_t sub_214BB8A28(void *a1)
{
  id v2 = objc_msgSend(a1, sel_domain);
  uint64_t v3 = sub_214D1A038();
  uint64_t v5 = v4;

  if (v3 == sub_214D1A038() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      if (qword_26ACE41E0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_214D19EE8();
      __swift_project_value_buffer(v9, (uint64_t)qword_26ACEBA58);
      id v10 = a1;
      uint64_t v11 = sub_214D19EC8();
      os_log_type_t v12 = sub_214D1A4B8();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(void *)&long long v66 = v14;
        *(_DWORD *)uint64_t v13 = 136315394;
        id v15 = objc_msgSend(v10, sel_domain);
        uint64_t v16 = sub_214D1A038();
        unint64_t v18 = v17;

        id v68 = (id)sub_214C3D88C(v16, v18, (uint64_t *)&v66);
        sub_214D1A5F8();

        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2048;
        id v19 = objc_msgSend(v10, sel_code);

        id v68 = v19;
        sub_214D1A5F8();

        _os_log_impl(&dword_214B4E000, v11, v12, "Unexpected PAC domain: %s, with error code: %ld", (uint8_t *)v13, 0x16u);
        uint64_t v20 = 1;
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v14, -1, -1);
        MEMORY[0x2166B1540](v13, -1, -1);
      }
      else
      {

        return 1;
      }
      return v20;
    }
  }
  id v21 = objc_msgSend(a1, sel_userInfo);
  uint64_t v22 = sub_214D19F98();

  uint64_t v23 = sub_214D1A038();
  if (!*(void *)(v22 + 16) || (uint64_t v25 = sub_214B87FEC(v23, v24), (v26 & 1) == 0))
  {
    long long v66 = 0u;
    long long v67 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  sub_214B5EC30(*(void *)(v22 + 56) + 32 * v25, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v67 + 1))
  {
LABEL_22:
    sub_214B5ECF4((uint64_t)&v66);
    goto LABEL_23;
  }
  sub_214B6A264(0, (unint64_t *)&qword_26ACE3A08);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    uint64_t v28 = (uint64_t)objc_msgSend(a1, sel_code);
    uint64_t v27 = 0;
    goto LABEL_24;
  }
  uint64_t v27 = v68;
  uint64_t v28 = (uint64_t)objc_msgSend(a1, sel_code);
  if (v27)
  {
    id v29 = objc_msgSend(v27, sel_domain);
    uint64_t v30 = sub_214D1A038();
    uint64_t v32 = v31;

    uint64_t v20 = (uint64_t)objc_msgSend(v27, sel_code);
    int v33 = 0;
    if (v28 > -1101) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v20 = 0;
  uint64_t v30 = 0;
  uint64_t v32 = 0;
  int v33 = 1;
  if (v28 > -1101)
  {
LABEL_17:
    if (v28 == -1100)
    {

      swift_bridgeObjectRelease();
      return 11;
    }
    if (v28 != -1000)
    {
      if (v28 == -900)
      {

        swift_bridgeObjectRelease();
        return 10;
      }
      goto LABEL_45;
    }
    if (!v32)
    {
      sub_214D1A038();
      swift_bridgeObjectRelease();

      return 2;
    }
    if (v30 == 0xD00000000000001FLL && v32 == 0x8000000214D31150)
    {
      if (v20 == -1000) {
        char v34 = v33;
      }
      else {
        char v34 = 1;
      }
      if (v34)
      {
        if (v20 == -5000) {
          char v35 = v33;
        }
        else {
          char v35 = 1;
        }
        if (v35)
        {
LABEL_67:
          if (sub_214D1A038() == v30 && v32 == v62)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v20 == 3) {
              int v63 = v33;
            }
            else {
              int v63 = 1;
            }
            if (v63 != 1) {
              return 3;
            }
          }
          else
          {
            char v64 = sub_214D1ABC8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((v64 & 1) != 0 && v33 != 1 && v20 == 3) {
              return v20;
            }
          }
          return 2;
        }
LABEL_66:

        swift_bridgeObjectRelease();
        return 6;
      }
    }
    else
    {
      int v55 = v33 ^ 1;
      if ((sub_214D1ABC8() & 1) == 0 || !v55 || v20 != -1000)
      {
        if ((sub_214D1ABC8() & v55) != 1 || v20 != -5000) {
          goto LABEL_67;
        }
        goto LABEL_66;
      }
    }

    swift_bridgeObjectRelease();
    return 5;
  }
LABEL_25:
  switch(v28)
  {
    case -4000:

      swift_bridgeObjectRelease();
      return 7;
    case -3000:

      swift_bridgeObjectRelease();
      return 8;
    case -2000:

      swift_bridgeObjectRelease();
      return 9;
  }
LABEL_45:
  swift_bridgeObjectRelease();
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_214D19EE8();
  __swift_project_value_buffer(v36, (uint64_t)qword_26ACEBA58);
  id v37 = a1;
  id v38 = v27;
  id v39 = v37;
  id v40 = v38;
  id v41 = v39;
  id v42 = v40;
  id v43 = v41;
  id v44 = v42;
  uint64_t v45 = sub_214D19EC8();
  os_log_type_t v46 = sub_214D1A4B8();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(void *)&long long v66 = v65;
    *(_DWORD *)uint64_t v47 = 136315906;
    id v48 = objc_msgSend(v43, sel_domain);
    uint64_t v49 = sub_214D1A038();
    unint64_t v51 = v50;

    id v68 = (id)sub_214C3D88C(v49, v51, (uint64_t *)&v66);
    sub_214D1A5F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2048;
    id v52 = objc_msgSend(v43, sel_code);

    id v68 = v52;
    sub_214D1A5F8();

    *(_WORD *)(v47 + 22) = 2080;
    if (v33)
    {
      unint64_t v53 = 0xE300000000000000;
      uint64_t v54 = 7104878;
    }
    else
    {
      id v56 = objc_msgSend(v44, sel_domain);
      uint64_t v54 = sub_214D1A038();
      unint64_t v53 = v57;
    }
    id v68 = (id)sub_214C3D88C(v54, v53, (uint64_t *)&v66);
    sub_214D1A5F8();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 32) = 2080;
    if (v33)
    {
      unint64_t v58 = 0xE300000000000000;
      uint64_t v59 = 7104878;
    }
    else
    {
      id v68 = objc_msgSend(v44, sel_code);
      sub_214BB9438();
      uint64_t v59 = sub_214D1A658();
      unint64_t v58 = v60;
    }
    id v68 = (id)sub_214C3D88C(v59, v58, (uint64_t *)&v66);
    sub_214D1A5F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v45, v46, "Unexpected PAC domain: %s, with error code: %ld, and underlying error domain: %s with underlying error code: %s", (uint8_t *)v47, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v65, -1, -1);
    MEMORY[0x2166B1540](v47, -1, -1);
  }
  else
  {
  }
  return 0;
}

unint64_t sub_214BB93E4()
{
  unint64_t result = qword_26784D258;
  if (!qword_26784D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D258);
  }
  return result;
}

unint64_t sub_214BB9438()
{
  unint64_t result = qword_26ACE5468;
  if (!qword_26ACE5468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE5468);
  }
  return result;
}

unint64_t sub_214BB948C()
{
  unint64_t result = qword_26ACE4368;
  if (!qword_26ACE4368)
  {
    sub_214D1A4F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4368);
  }
  return result;
}

unint64_t sub_214BB94E4()
{
  unint64_t result = qword_26ACE4308;
  if (!qword_26ACE4308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4308);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneAuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhoneAuthenticationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BB969CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneAuthenticationError()
{
  return &type metadata for PhoneAuthenticationError;
}

unint64_t sub_214BB96D8()
{
  unint64_t result = qword_26784D260;
  if (!qword_26784D260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D260);
  }
  return result;
}

uint64_t sub_214BB9730(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_214BB9758(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_214BB9780(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_214BB97A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_214BB97D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_214BB97F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_214BB980C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_214BB9834(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_214BB9848(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 72) + **(int **)(a2 + 72));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BA6744;
  return v7(a1, a2);
}

uint64_t sub_214BB9938(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

unint64_t sub_214BB994C(char a1)
{
  unint64_t result = 0x776F6C666B726F77;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000033;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
      unint64_t result = 0x5F64616F6C796170;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_214BB9A30(char a1)
{
  unint64_t result = 0x776F6C666B726F77;
  switch(a1)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000033;
      break;
    case 3:
      unint64_t result = 0xD000000000000026;
      break;
    case 4:
      unint64_t result = 0x5F64616F6C796170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BB9B14()
{
  uint64_t result = 0x656D697473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684955506;
      break;
    case 2:
      uint64_t result = 0x656D697464;
      break;
    case 3:
      uint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BB9B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214BBC020(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214BB9BBC(uint64_t a1)
{
  unint64_t v2 = sub_214BBC79C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214BB9BF8(uint64_t a1)
{
  unint64_t v2 = sub_214BBC79C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214BB9C34(unsigned __int8 *a1, char *a2)
{
  return sub_214C1C594(*a1, *a2);
}

uint64_t sub_214BB9C40()
{
  return sub_214C56924();
}

uint64_t sub_214BB9C48()
{
  return sub_214C571D8();
}

uint64_t sub_214BB9C50()
{
  return sub_214C57704();
}

uint64_t sub_214BB9C58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214BBC1B0();
  *a1 = result;
  return result;
}

unint64_t sub_214BB9C88@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_214BB994C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_214BB9CB4()
{
  return sub_214BB9A30(*v0);
}

uint64_t sub_214BB9CBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214BBC1B0();
  *a1 = result;
  return result;
}

void sub_214BB9CE4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_214BB9CF0(uint64_t a1)
{
  unint64_t v2 = sub_214BBCB64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214BB9D2C(uint64_t a1)
{
  unint64_t v2 = sub_214BBCB64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214BB9D68(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D280);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  BOOL v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBC79C();
  sub_214D1AD88();
  v9[15] = 0;
  sub_214D1AAF8();
  if (!v1)
  {
    v9[14] = 1;
    sub_214D1AAF8();
    v9[13] = 2;
    sub_214D1AAF8();
    v9[12] = 3;
    sub_214D1AAF8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214BB9F18(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D2A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBCB64();
  sub_214D1AD88();
  v12[0] = 0;
  sub_214D1AAF8();
  if (!v2)
  {
    v12[0] = 1;
    sub_214D1AB08();
    v12[0] = 2;
    sub_214D1AAD8();
    sub_214B6AC38(v3 + 40, (uint64_t)v13, &qword_26784D2A8);
    sub_214B6AC38((uint64_t)v13, (uint64_t)v12, &qword_26784D2A8);
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
    sub_214BBCBB8(&qword_26784D2B0);
    sub_214D1AAE8();
    v12[0] = 4;
    sub_214D1AB28();
    v12[0] = 5;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_214BBA17C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D2E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBD2F4();
  sub_214D1AD88();
  sub_214B6AC38(v3, (uint64_t)v14, &qword_26784D2E8);
  sub_214B6AC38((uint64_t)v14, (uint64_t)v11, &qword_26784D2E8);
  char v15 = 0;
  sub_214BBD6AC();
  sub_214D1AAE8();
  if (!v2)
  {
    v11[0] = 1;
    sub_214D1AAA8();
    v11[0] = 2;
    sub_214D1AAA8();
    sub_214B6AC38(v3 + 96, (uint64_t)v13, &qword_26784D2F8);
    sub_214B6AC38((uint64_t)v13, (uint64_t)v11, &qword_26784D2F8);
    char v15 = 3;
    sub_214BBD700();
    sub_214D1AAE8();
    sub_214B6AC38(v3 + 168, (uint64_t)v12, &qword_26784D308);
    sub_214B6AC38((uint64_t)v12, (uint64_t)v11, &qword_26784D308);
    char v15 = 4;
    sub_214BBD754();
    sub_214D1AAE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_214BBA408()
{
  uint64_t result = 0x7364656573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49656C69666F7270;
      break;
    case 2:
      uint64_t result = 0x656D737365737361;
      break;
    case 3:
      uint64_t result = 0x6E6F697469646461;
      break;
    case 4:
      uint64_t result = 0x666E49726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BBA4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214BBC1FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_214BBA4F8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_214BBA504(uint64_t a1)
{
  unint64_t v2 = sub_214BBD2F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214BBA540(uint64_t a1)
{
  unint64_t v2 = sub_214BBD2F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_214BBA57C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_214BBC454(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_214BBA5C0(void *a1)
{
  return sub_214BB9D68(a1);
}

__n128 sub_214BBA5D8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214BBC7F0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_214BBA62C(void *a1)
{
  return sub_214BB9F18(a1);
}

__n128 sub_214BBA670@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214BBCC00(a1, v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_214BBA6DC(void *a1)
{
  return sub_214BBA17C(a1);
}

uint64_t sub_214BBA740(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D318);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  long long v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  unint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_214BBD7A8();
  sub_214D1AD78();
  if (v2) {
    goto LABEL_13;
  }
  LOBYTE(v46[0]) = 0;
  uint64_t v11 = sub_214D1AA28();
  id v40 = v9;
  uint64_t v41 = v5;
  uint64_t v42 = v6;
  uint64_t v43 = v3;
  uint64_t v44 = v11;
  uint64_t v45 = v12;
  uint64_t v49 = 45;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 43;
  unint64_t v48 = 0xE100000000000000;
  sub_214BBD7FC();
  uint64_t v13 = sub_214D1A628();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v44 = v13;
  uint64_t v45 = v15;
  uint64_t v49 = 95;
  unint64_t v50 = 0xE100000000000000;
  uint64_t v47 = 47;
  unint64_t v48 = 0xE100000000000000;
  uint64_t v16 = sub_214D1A628();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *(void *)&v46[0] = v16;
  *((void *)&v46[0] + 1) = v18;
  swift_bridgeObjectRetain();
  if ((sub_214D1A0E8() & 3) != 0)
  {
    if ((sub_214D1A0E8() & 3) != 0)
    {
      uint64_t v19 = sub_214D1A0E8();
      swift_bridgeObjectRelease();
      uint64_t v20 = v19 & 3;
      if (v19 <= 0) {
        uint64_t v20 = -(-v19 & 3);
      }
      MEMORY[0x2166AFC60](61, 0xE100000000000000, 4 - v20);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = v42;
    uint64_t v3 = v43;
    sub_214D1A108();
  }
  else
  {
    uint64_t v21 = v42;
    uint64_t v3 = v43;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_214D19AE8();
  unint64_t v24 = v23;
  sub_214B6A3F8(v22, v23);
  swift_bridgeObjectRelease();
  if (v24 >> 60 == 15)
  {
    LOWORD(v46[0]) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D311C0, 0, (unsigned __int16 *)v46, 0, 0, 0xD00000000000006CLL, 0x8000000214D311F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 75);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v40, v41);
LABEL_13:
    uint64_t v25 = (uint64_t)v51;
    type metadata accessor for AMPCristalPayloadData();
    swift_deallocPartialClassInstance();
    uint64_t v39 = v25;
    goto LABEL_14;
  }
  sub_214B59EAC(v22, v24);
  sub_214D19768();
  swift_allocObject();
  sub_214D19758();
  sub_214BBD850();
  sub_214D19748();
  swift_release();
  long long v27 = v46[11];
  *(_OWORD *)(v3 + 176) = v46[10];
  *(_OWORD *)(v3 + 192) = v27;
  *(_OWORD *)(v3 + 208) = v46[12];
  long long v28 = v46[7];
  *(_OWORD *)(v3 + 112) = v46[6];
  *(_OWORD *)(v3 + 128) = v28;
  long long v29 = v46[9];
  *(_OWORD *)(v3 + 144) = v46[8];
  *(_OWORD *)(v3 + 160) = v29;
  long long v30 = v46[3];
  *(_OWORD *)(v3 + 48) = v46[2];
  *(_OWORD *)(v3 + 64) = v30;
  long long v31 = v46[5];
  *(_OWORD *)(v3 + 80) = v46[4];
  *(_OWORD *)(v3 + 96) = v31;
  long long v32 = v46[1];
  *(_OWORD *)(v3 + 16) = v46[0];
  *(_OWORD *)(v3 + 32) = v32;
  LOBYTE(v49) = 1;
  int v33 = v40;
  uint64_t v34 = v41;
  uint64_t v35 = sub_214D1AA28();
  uint64_t v36 = v33;
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v34);
  sub_214B59EAC(v22, v24);
  *(void *)(v3 + 224) = v35;
  *(void *)(v3 + 232) = v38;
  uint64_t v39 = (uint64_t)v51;
LABEL_14:
  __swift_destroy_boxed_opaque_existential_1(v39);
  return v3;
}

uint64_t sub_214BBACC8(char *a1, char *a2)
{
  return sub_214C1C794(*a1, *a2);
}

uint64_t sub_214BBACD4()
{
  return sub_214D1AD48();
}

uint64_t sub_214BBAD60()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BBADD8()
{
  return sub_214D1AD48();
}

uint64_t sub_214BBAE60@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_214BBAEC0(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x656D737365737361;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x8000000214D2D880;
  if (!*v1) {
    unint64_t v3 = 0xEA0000000000746ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_214BBAF08()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x656D737365737361;
  }
}

uint64_t sub_214BBAF4C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_214BBAFB0(uint64_t a1)
{
  unint64_t v2 = sub_214BBD7A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214BBAFEC(uint64_t a1)
{
  unint64_t v2 = sub_214BBD7A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_214BBB028(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D330);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  long long v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBD7A8();
  sub_214D1AD88();
  char v39 = 1;
  sub_214D1AAF8();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    LOWORD(v27[0]) = 85;
    uint64_t v22 = v2;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x8000000214D31260, v2, (unsigned __int16 *)v27, 0, 0, 0xD00000000000006CLL, 0x8000000214D311F0, 0x742865646F636E65, 0xEB00000000293A6FLL, 101);

    swift_willThrow();
  }
  else
  {
    sub_214D19798();
    swift_allocObject();
    sub_214D19788();
    long long v10 = v3[10];
    long long v11 = v3[12];
    long long v36 = v3[11];
    long long v37 = v11;
    long long v12 = v3[12];
    long long v38 = v3[13];
    long long v13 = v3[6];
    long long v14 = v3[8];
    long long v32 = v3[7];
    long long v33 = v14;
    long long v15 = v3[8];
    long long v16 = v3[10];
    long long v34 = v3[9];
    long long v35 = v16;
    long long v17 = v3[2];
    long long v18 = v3[4];
    long long v28 = v3[3];
    long long v29 = v18;
    long long v19 = v3[4];
    long long v20 = v3[6];
    long long v30 = v3[5];
    long long v31 = v20;
    long long v21 = v3[2];
    v27[0] = v3[1];
    v27[1] = v21;
    v26[10] = v36;
    v26[11] = v12;
    v26[12] = v3[13];
    v26[6] = v32;
    v26[7] = v15;
    _OWORD v26[8] = v34;
    v26[9] = v10;
    long long v26[2] = v28;
    _OWORD v26[3] = v19;
    v26[4] = v30;
    v26[5] = v13;
    v26[0] = v27[0];
    v26[1] = v17;
    sub_214BBD4E4((uint64_t *)v27);
    sub_214BBD8A4();
    uint64_t v23 = sub_214D19778();
    unint64_t v25 = v24;
    sub_214BBD5C8((uint64_t *)v27);
    swift_release();
    sub_214D19B48();
    sub_214B58A4C(v23, v25);
    LOBYTE(v26[0]) = 0;
    sub_214D1AAF8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_214BBB394()
{
  long long v1 = v0[12];
  v8[10] = v0[11];
  v8[11] = v1;
  v8[12] = v0[13];
  long long v2 = v0[8];
  _OWORD v8[6] = v0[7];
  v8[7] = v2;
  long long v3 = v0[10];
  v8[8] = v0[9];
  v8[9] = v3;
  long long v4 = v0[4];
  v8[2] = v0[3];
  void v8[3] = v4;
  long long v5 = v0[6];
  v8[4] = v0[5];
  v8[5] = v5;
  long long v6 = v0[2];
  v8[0] = v0[1];
  v8[1] = v6;
  sub_214BBD5C8((uint64_t *)v8);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AMPCristalPayloadData()
{
  return self;
}

uint64_t destroy for ODNAssessmentResultAMP(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[25];
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ODNAssessmentResultAMP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v12;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    long long v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 200);
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v16;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
  }
  else
  {
    uint64_t v17 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v17;
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentResultAMP(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BBB9C4(a1);
      long long v5 = a2[3];
      long long v7 = *a2;
      long long v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (_OWORD *)(a1 + 96);
  uint64_t v12 = a2 + 6;
  uint64_t v13 = *((void *)a2 + 13);
  if (*(void *)(a1 + 104))
  {
    if (v13)
    {
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v14 = *((void *)a2 + 15);
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
      *(void *)(a1 + 120) = v14;
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      swift_retain();
      swift_release();
      *(void *)(a1 + 144) = *((void *)a2 + 18);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BBB9F4(a1 + 96);
      _OWORD *v11 = *v12;
      long long v17 = a2[8];
      long long v16 = a2[9];
      long long v18 = a2[7];
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      *(_OWORD *)(a1 + 128) = v17;
      *(_OWORD *)(a1 + 144) = v16;
      *(_OWORD *)(a1 + 112) = v18;
    }
  }
  else if (v13)
  {
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    uint64_t v15 = *((void *)a2 + 15);
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(void *)(a1 + 120) = v15;
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(void *)(a1 + 144) = *((void *)a2 + 18);
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    _OWORD *v11 = *v12;
    long long v19 = a2[7];
    long long v20 = a2[8];
    long long v21 = a2[9];
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(_OWORD *)(a1 + 128) = v20;
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 112) = v19;
  }
  uint64_t v22 = (long long *)(a1 + 168);
  uint64_t v23 = (long long *)((char *)a2 + 168);
  uint64_t v24 = *((void *)a2 + 25);
  if (*(void *)(a1 + 200) == 1)
  {
    if (v24 == 1)
    {
      long long v25 = *v23;
      long long v26 = *(long long *)((char *)a2 + 184);
      *(void *)(a1 + 200) = *((void *)a2 + 25);
      *uint64_t v22 = v25;
      *(_OWORD *)(a1 + 184) = v26;
    }
    else
    {
      *(void *)(a1 + 168) = *((void *)a2 + 21);
      uint64_t v29 = *((void *)a2 + 22);
      *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
      *(void *)(a1 + 176) = v29;
      *(void *)(a1 + 192) = *((void *)a2 + 24);
      *(void *)(a1 + 200) = *((void *)a2 + 25);
      swift_bridgeObjectRetain();
    }
  }
  else if (v24 == 1)
  {
    sub_214B78054(a1 + 168);
    uint64_t v27 = *((void *)a2 + 25);
    long long v28 = *(long long *)((char *)a2 + 184);
    *uint64_t v22 = *v23;
    *(_OWORD *)(a1 + 184) = v28;
    *(void *)(a1 + 200) = v27;
  }
  else
  {
    *(void *)(a1 + 168) = *((void *)a2 + 21);
    uint64_t v30 = *((void *)a2 + 22);
    *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
    *(void *)(a1 + 176) = v30;
    *(void *)(a1 + 192) = *((void *)a2 + 24);
    *(void *)(a1 + 200) = *((void *)a2 + 25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_214BBB9C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BBB9F4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for ODNAssessmentResultAMP(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214BBB9C4(a1);
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 104))
  {
    uint64_t v12 = *(void *)(a2 + 104);
    if (v12)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_release();
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214BBB9F4(a1 + 96);
  }
  long long v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
LABEL_11:
  if (*(void *)(a1 + 200) != 1)
  {
    uint64_t v15 = *(void *)(a2 + 200);
    if (v15 != 1)
    {
      uint64_t v17 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v17;
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_214B78054(a1 + 168);
  }
  long long v16 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v16;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 208)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP()
{
  return &type metadata for ODNAssessmentResultAMP;
}

uint64_t destroy for ODNAssessmentResultAMP.AdditionalInfo()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.AdditionalInfo()
{
  return &type metadata for ODNAssessmentResultAMP.AdditionalInfo;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.Seeds()
{
  return &type metadata for ODNAssessmentResultAMP.Seeds;
}

uint64_t sub_214BBBFA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for AMPCristalPayloadData();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_214BBA740(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_214BBBFFC(void *a1)
{
}

uint64_t sub_214BBC020(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D697473 && a2 == 0xE500000000000000;
  if (v3 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684955506 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D697464 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214BBC1B0()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_214BBC1FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7364656573 && a2 == 0xE500000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000064 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D737365737361 && a2 == 0xEA0000000000746ELL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_214BBC454@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D270);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  long long v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBC79C();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v32 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v12 = v11;
  uint64_t v27 = v10;
  char v31 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_214D1AA28();
  uint64_t v28 = v14;
  uint64_t v26 = v13;
  char v30 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_214D1AA28();
  uint64_t v25 = v15;
  char v29 = 3;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_214D1AA28();
  uint64_t v18 = v17;
  long long v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v16;
  v19(v9, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v12;
  a2[2] = v26;
  a2[3] = v20;
  a2[4] = v24;
  a2[5] = v21;
  a2[6] = v23;
  a2[7] = v18;
  return result;
}

unint64_t sub_214BBC79C()
{
  unint64_t result = qword_26784D278;
  if (!qword_26784D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D278);
  }
  return result;
}

uint64_t sub_214BBC7F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D288);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  long long v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBCB64();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v35 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v12 = v11;
  char v34 = 1;
  swift_bridgeObjectRetain();
  int v28 = sub_214D1AA38();
  char v33 = 2;
  uint64_t v13 = sub_214D1AA08();
  int v26 = v14;
  uint64_t v27 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
  char v32 = 3;
  sub_214BBCBB8(&qword_26784D298);
  sub_214D1AA18();
  char v31 = 4;
  uint64_t v25 = v29;
  swift_retain();
  uint64_t v24 = sub_214D1AA58();
  char v30 = 5;
  uint64_t v15 = sub_214D1A9D8();
  uint64_t v17 = v16;
  v28 &= 1u;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v15;
  v18(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v25;
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(unsigned char *)(a2 + 32) = v26 & 1;
  uint64_t v21 = v24;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v21;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_214BBCB64()
{
  unint64_t result = qword_26784D290;
  if (!qword_26784D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D290);
  }
  return result;
}

uint64_t sub_214BBCBB8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE3868);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_214BBCC00@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  char v64 = a2;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D2B8);
  uint64_t v4 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65, v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BBD2F4();
  uint64_t v8 = v7;
  sub_214D1AD78();
  if (v2) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v62 = a1;
  uint64_t v63 = v4;
  LOBYTE(v66) = 0;
  sub_214BBD348();
  uint64_t v9 = v65;
  uint64_t v10 = v8;
  sub_214D1AA18();
  uint64_t v11 = v79;
  uint64_t v12 = v81;
  uint64_t v13 = v82;
  uint64_t v14 = v83;
  LOBYTE(v79) = 1;
  uint64_t v15 = v11;
  uint64_t v16 = v80;
  uint64_t v60 = v85;
  uint64_t v61 = v84;
  uint64_t v59 = v86;
  sub_214B79260(v11, v80);
  uint64_t v50 = sub_214D1A9D8();
  uint64_t v57 = v17;
  uint64_t v58 = v14;
  uint64_t v48 = v13;
  uint64_t v49 = v12;
  uint64_t v47 = v16;
  LOBYTE(v79) = 2;
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  uint64_t v18 = sub_214D1A9D8();
  LOBYTE(v66) = 3;
  uint64_t v20 = v19;
  sub_214BBD3EC();
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v45 = v20;
  uint64_t v41 = v18;
  uint64_t v21 = v79;
  uint64_t v22 = v87;
  char v108 = 4;
  uint64_t v55 = v81;
  uint64_t v56 = v80;
  uint64_t v53 = v83;
  uint64_t v54 = v82;
  uint64_t v52 = v84;
  uint64_t v43 = v86;
  uint64_t v44 = v85;
  sub_214BBD440(v79, v80);
  sub_214BBD490();
  sub_214D1AA18();
  uint64_t v51 = v21;
  uint64_t v42 = v22;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v10, v9);
  uint64_t v65 = v106;
  *(void *)&long long v66 = v15;
  uint64_t v63 = *((void *)&v106 + 1);
  uint64_t v46 = v107;
  uint64_t v39 = v105;
  uint64_t v40 = *((void *)&v107 + 1);
  uint64_t v38 = v15;
  *((void *)&v66 + 1) = v47;
  *(void *)&long long v67 = v49;
  *((void *)&v67 + 1) = v48;
  *(void *)&long long v68 = v58;
  *((void *)&v68 + 1) = v61;
  *(void *)&long long v69 = v60;
  *((void *)&v69 + 1) = v59;
  *(void *)&long long v70 = v50;
  *((void *)&v70 + 1) = v57;
  *(void *)&long long v71 = v41;
  *((void *)&v71 + 1) = v45;
  *(void *)&long long v72 = v21;
  *((void *)&v72 + 1) = v56;
  *(void *)&long long v73 = v55;
  *((void *)&v73 + 1) = v54;
  *(void *)&long long v74 = v53;
  *((void *)&v74 + 1) = v52;
  *(void *)&long long v75 = v44;
  *((void *)&v75 + 1) = v43;
  *(void *)&long long v76 = v22;
  *((void *)&v76 + 1) = v105;
  long long v77 = v106;
  long long v78 = v107;
  sub_214BBD4E4((uint64_t *)&v66);
  sub_214BBD39C(v51, v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v38;
  uint64_t v25 = v47;
  uint64_t v24 = v48;
  uint64_t v26 = v49;
  uint64_t v28 = v58;
  uint64_t v27 = v59;
  uint64_t v29 = v60;
  sub_214B7902C(v38, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  uint64_t v79 = v23;
  uint64_t v80 = v25;
  uint64_t v81 = v26;
  uint64_t v82 = v24;
  uint64_t v83 = v28;
  uint64_t v84 = v61;
  uint64_t v85 = v29;
  uint64_t v86 = v27;
  uint64_t v87 = v50;
  uint64_t v88 = v57;
  uint64_t v89 = v41;
  uint64_t v90 = v45;
  uint64_t v91 = v51;
  uint64_t v92 = v56;
  uint64_t v93 = v55;
  uint64_t v94 = v54;
  uint64_t v95 = v53;
  uint64_t v96 = v52;
  uint64_t v97 = v44;
  uint64_t v98 = v43;
  uint64_t v99 = v42;
  uint64_t v100 = v39;
  uint64_t v101 = v65;
  uint64_t v102 = v63;
  uint64_t v103 = v46;
  uint64_t v104 = v40;
  uint64_t result = sub_214BBD5C8(&v79);
  long long v31 = v77;
  char v32 = v64;
  v64[10] = v76;
  v32[11] = v31;
  v32[12] = v78;
  long long v33 = v73;
  v32[6] = v72;
  v32[7] = v33;
  long long v34 = v75;
  v32[8] = v74;
  v32[9] = v34;
  long long v35 = v69;
  v32[2] = v68;
  v32[3] = v35;
  long long v36 = v71;
  void v32[4] = v70;
  v32[5] = v36;
  long long v37 = v67;
  *char v32 = v66;
  v32[1] = v37;
  return result;
}

unint64_t sub_214BBD2F4()
{
  unint64_t result = qword_26784D2C0;
  if (!qword_26784D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D2C0);
  }
  return result;
}

unint64_t sub_214BBD348()
{
  unint64_t result = qword_26784D2C8;
  if (!qword_26784D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D2C8);
  }
  return result;
}

uint64_t sub_214BBD39C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_214BBD3EC()
{
  unint64_t result = qword_26784D2D0;
  if (!qword_26784D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D2D0);
  }
  return result;
}

uint64_t sub_214BBD440(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_214BBD490()
{
  unint64_t result = qword_26784D2D8;
  if (!qword_26784D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D2D8);
  }
  return result;
}

uint64_t *sub_214BBD4E4(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v4 = a1[12];
  uint64_t v8 = a1[22];
  uint64_t v9 = a1[21];
  uint64_t v6 = a1[24];
  uint64_t v7 = a1[23];
  uint64_t v5 = a1[25];
  sub_214B79260(*a1, a1[1]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214BBD440(v4, v2);
  sub_214B792C4(v9, v8, v7, v6, v5);
  return a1;
}

uint64_t *sub_214BBD5C8(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v4 = a1[12];
  uint64_t v8 = a1[22];
  uint64_t v9 = a1[21];
  uint64_t v6 = a1[24];
  uint64_t v7 = a1[23];
  uint64_t v5 = a1[25];
  sub_214B7902C(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214BBD39C(v4, v2);
  sub_214B79090(v9, v8, v7, v6, v5);
  return a1;
}

unint64_t sub_214BBD6AC()
{
  unint64_t result = qword_26784D2F0;
  if (!qword_26784D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D2F0);
  }
  return result;
}

unint64_t sub_214BBD700()
{
  unint64_t result = qword_26784D300;
  if (!qword_26784D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D300);
  }
  return result;
}

unint64_t sub_214BBD754()
{
  unint64_t result = qword_26784D310;
  if (!qword_26784D310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D310);
  }
  return result;
}

unint64_t sub_214BBD7A8()
{
  unint64_t result = qword_26784D320;
  if (!qword_26784D320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D320);
  }
  return result;
}

unint64_t sub_214BBD7FC()
{
  unint64_t result = qword_26ACE4230;
  if (!qword_26ACE4230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4230);
  }
  return result;
}

unint64_t sub_214BBD850()
{
  unint64_t result = qword_26784D328;
  if (!qword_26784D328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D328);
  }
  return result;
}

unint64_t sub_214BBD8A4()
{
  unint64_t result = qword_26784D338;
  if (!qword_26784D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D338);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AMPCristalPayloadData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BBD9C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AMPCristalPayloadData.CodingKeys()
{
  return &type metadata for AMPCristalPayloadData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ODNAssessmentResultAMP.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BBDB58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BBDC5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ODNAssessmentResultAMP.Seeds.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BBDD60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.Seeds.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys;
}

unint64_t sub_214BBDD9C()
{
  unint64_t result = qword_26784D340;
  if (!qword_26784D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D340);
  }
  return result;
}

unint64_t sub_214BBDDF4()
{
  unint64_t result = qword_26784D348;
  if (!qword_26784D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D348);
  }
  return result;
}

unint64_t sub_214BBDE4C()
{
  unint64_t result = qword_26784D350;
  if (!qword_26784D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D350);
  }
  return result;
}

unint64_t sub_214BBDEA4()
{
  unint64_t result = qword_26784D358;
  if (!qword_26784D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D358);
  }
  return result;
}

unint64_t sub_214BBDEFC()
{
  unint64_t result = qword_26784D360;
  if (!qword_26784D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D360);
  }
  return result;
}

unint64_t sub_214BBDF54()
{
  unint64_t result = qword_26784D368;
  if (!qword_26784D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D368);
  }
  return result;
}

unint64_t sub_214BBDFAC()
{
  unint64_t result = qword_26784D370;
  if (!qword_26784D370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D370);
  }
  return result;
}

unint64_t sub_214BBE004()
{
  unint64_t result = qword_26784D378;
  if (!qword_26784D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D378);
  }
  return result;
}

unint64_t sub_214BBE05C()
{
  unint64_t result = qword_26784D380;
  if (!qword_26784D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D380);
  }
  return result;
}

unint64_t sub_214BBE0B4()
{
  unint64_t result = qword_26784D388;
  if (!qword_26784D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D388);
  }
  return result;
}

unint64_t sub_214BBE10C()
{
  unint64_t result = qword_26784D390;
  if (!qword_26784D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D390);
  }
  return result;
}

unint64_t sub_214BBE164()
{
  unint64_t result = qword_26784D398;
  if (!qword_26784D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D398);
  }
  return result;
}

uint64_t sub_214BBE1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_214BBE1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_214BBE208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DIPRetrier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPRetrier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPRetrier()
{
  return &type metadata for DIPRetrier;
}

uint64_t sub_214BBE2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 112) = a4;
  *(void *)(v6 + 120) = a6;
  *(unsigned char *)(v6 + 42) = a5;
  *(void *)(v6 + 96) = a2;
  *(void *)(v6 + 104) = a3;
  *(void *)(v6 + 88) = a1;
  return MEMORY[0x270FA2498](sub_214BBE310, 0, 0);
}

uint64_t sub_214BBE310()
{
  uint64_t v16 = v0;
  long long v1 = *(uint64_t **)(v0 + 96);
  uint64_t v2 = *v1;
  *(void *)(v0 + 128) = *v1;
  if (v2 <= 0)
  {
    uint64_t v10 = *(void **)(v0 + 112);
    uint64_t v9 = *(void **)(v0 + 120);
    uint64_t v11 = *(void **)(v0 + 104);
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0x656972742078616DLL;
    uint64_t v15 = 0xEA00000000002073;
    *(void *)(v0 + 80) = v2;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    uint64_t v12 = v14;
    LOWORD(v14) = 107;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v12, v15, 0, (unsigned __int16 *)&v14, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 109);
    swift_bridgeObjectRelease();
    swift_willThrow();

    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    *(_OWORD *)(v0 + 136) = xmmword_214D1DF40;
    unsigned int v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v3;
    *unsigned int v3 = v0;
    v3[1] = sub_214BBE544;
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 120);
    char v6 = *(unsigned char *)(v0 + 42);
    uint64_t v7 = *(void *)(v0 + 104);
    return sub_214BCAE30(v0 + 16, 1, v7, v4, v6, v5);
  }
}

uint64_t sub_214BBE544()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BBE640, 0, 0);
}

uint64_t sub_214BBE640()
{
  uint64_t v52 = v0;

  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (double *)(v0 + 48);
  double v3 = *(double *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  *(void *)(v0 + 160) = v1;
  *(double *)(v0 + 168) = v3;
  *(void *)(v0 + 176) = v4;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 40);
  *(unsigned char *)(v0 + 43) = v5;
  switch(*(unsigned char *)(v0 + 41))
  {
    case 1:
      uint64_t v10 = v1;
      if (qword_26ACE41D8 == -1) {
        goto LABEL_4;
      }
      goto LABEL_84;
    case 2:
      uint64_t v16 = v1;
      uint64_t v17 = v1;
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v18 = (id)qword_26ACEBA50;
      sub_214B5ADD8(v1, 0xD00000000000002BLL, 0x8000000214D313C0);

      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_214BBF100;
      uint64_t v20 = *(void *)(v0 + 96);
      v19[6] = *(void *)(v0 + 144);
      v19[7] = v20;
      uint64_t v21 = sub_214BBFE88;
      goto LABEL_35;
    case 3:
      if (v1)
      {
        uint64_t v22 = v1;
        sub_214BC0338(v1, *(uint64_t *)&v3, v4, v5, 3u);
        uint64_t v23 = v1;
        if (qword_26ACE41D8 != -1) {
          swift_once();
        }
        id v24 = (id)qword_26ACEBA50;
        sub_214B5ADD8(v1, 0xD00000000000002CLL, 0x8000000214D312B0);
      }
      else
      {
        id v35 = 0;
        if (qword_26ACE41D8 != -1) {
          swift_once();
        }
        sub_214D1A498();
        sub_214D19E78();
      }
      if (*(void *)(v0 + 144) == *(void *)(v0 + 128))
      {
        sub_214BC02AC(v1, *(uint64_t *)&v3, v4, v5, 3u);

        uint64_t v36 = *(void *)(v0 + 144);
        *(void *)&double v3 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          do
          {
            __break(1u);
LABEL_84:
            swift_once();
LABEL_4:
            uint64_t v11 = *(void *)(v0 + 144);
            id v12 = (id)qword_26ACEBA50;
            sub_214B5ADD8(v1, 0xD00000000000002ALL, 0x8000000214D31420);

            sub_214BC02AC(v1, *(uint64_t *)&v3, v4, v5, 1u);
          }
          while (v11 == 0x7FFFFFFFFFFFFFFFLL);
          uint64_t v14 = *(void **)(v0 + 112);
          uint64_t v13 = *(void **)(v0 + 120);
          uint64_t v15 = *(void **)(v0 + 104);
          if (!v1)
          {
            LOWORD(v50) = 0;
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x8000000214D312E0, 0, (unsigned __int16 *)&v50, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 118);
            swift_willThrow();
LABEL_56:

            uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_57:
            return v9();
          }
          LOWORD(v50) = 0;
          DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000214D313A0, v1, (unsigned __int16 *)&v50, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 115);
        }
        else
        {
          uint64_t v37 = *(void *)(v0 + 128);
          if (v37 >= *(uint64_t *)&v3)
          {
            *(void *)(v0 + 136) = v1;
            *(double *)(v0 + 144) = v3;
            uint64_t v40 = (void *)swift_task_alloc();
            *(void *)(v0 + 152) = v40;
            *uint64_t v40 = v0;
            v40[1] = sub_214BBE544;
            uint64_t v41 = *(void *)(v0 + 112);
            uint64_t v42 = *(void *)(v0 + 120);
            char v43 = *(unsigned char *)(v0 + 42);
            uint64_t v44 = *(void *)(v0 + 104);
            return sub_214BCAE30(v0 + 16, *(uint64_t *)&v3, v44, v41, v43, v42);
          }
          uint64_t v14 = *(void **)(v0 + 112);
          uint64_t v13 = *(void **)(v0 + 120);
          uint64_t v15 = *(void **)(v0 + 104);
          sub_214D1A7A8();
          swift_bridgeObjectRelease();
          uint64_t v50 = 0x656972742078616DLL;
          uint64_t v51 = 0xEA00000000002073;
          *(void *)(v0 + 80) = v37;
          sub_214D1AB78();
          sub_214D1A108();
          swift_bridgeObjectRelease();
          sub_214D1A108();
          uint64_t v38 = v50;
          LOWORD(v50) = 107;
          DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v38, v51, v1, (unsigned __int16 *)&v50, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 109);
          swift_bridgeObjectRelease();
        }
        swift_willThrow();

        goto LABEL_56;
      }
      if (v3 <= 0.0)
      {
        unint64_t v27 = 0;
        goto LABEL_74;
      }
      if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -1.0)
        {
          if (v3 < 1.84467441e19)
          {
            if ((unint64_t)v3 >= 0x44B82FA09)
            {
              unint64_t v27 = -1;
              goto LABEL_74;
            }
            double v39 = v3 * 1000000000.0;
            if ((~COERCE__INT64(v3 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              if (v39 > -1.0)
              {
                if (v39 < 1.84467441e19)
                {
                  unint64_t v27 = (unint64_t)v39;
LABEL_74:
                  uint64_t v47 = (void *)swift_task_alloc();
                  *(void *)(v0 + 224) = v47;
                  *uint64_t v47 = v0;
                  uint64_t v48 = sub_214BBFA60;
LABEL_80:
                  v47[1] = v48;
                  return MEMORY[0x270FA1FF0](v27);
                }
                goto LABEL_90;
              }
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
              goto LABEL_91;
            }
LABEL_88:
            __break(1u);
            goto LABEL_89;
          }
LABEL_87:
          __break(1u);
          goto LABEL_88;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_87;
    case 4:
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      uint64_t v25 = *(void *)(v0 + 144);
      uint64_t v26 = *(void *)(v0 + 128);
      sub_214D1A498();
      sub_214D19E78();
      if (v25 == v26) {
        goto LABEL_34;
      }
      sub_214BC03C4((uint64_t *)(*(void *)(v0 + 96) + 8), v0 + 64);
      sub_214BC03C4((uint64_t *)(v0 + 64), v0 + 48);
      if (!*(unsigned char *)(v0 + 56))
      {
        double v45 = *v2;
        if (*v2 <= 0.0)
        {
          unint64_t v27 = 0;
        }
        else
        {
          if ((~*(void *)&v45 & 0x7FF0000000000000) == 0)
          {
LABEL_94:
            __break(1u);
            goto LABEL_95;
          }
          if (v45 <= -1.0)
          {
LABEL_95:
            __break(1u);
            goto LABEL_96;
          }
          if (v45 >= 1.84467441e19)
          {
LABEL_96:
            __break(1u);
            goto LABEL_97;
          }
          if ((unint64_t)v45 >= 0x44B82FA09)
          {
            unint64_t v27 = -1;
          }
          else
          {
            double v46 = v45 * 1000000000.0;
            if ((~*(void *)&v46 & 0x7FF0000000000000) == 0)
            {
LABEL_100:
              __break(1u);
              goto LABEL_101;
            }
            if (v46 <= -1.0)
            {
LABEL_101:
              __break(1u);
              goto LABEL_102;
            }
            if (v46 >= 1.84467441e19)
            {
LABEL_102:
              __break(1u);
              JUMPOUT(0x214BBF0ECLL);
            }
            unint64_t v27 = (unint64_t)v46;
          }
        }
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v47;
        *uint64_t v47 = v0;
        uint64_t v48 = sub_214BBF45C;
        goto LABEL_80;
      }
      if (*(unsigned char *)(v0 + 56) == 1)
      {
        unint64_t v27 = 0;
        uint64_t v28 = *(void *)(v0 + 144);
        unint64_t v29 = v28 - 1;
        unint64_t v30 = v28 - 66;
        if (v29 >= 0x40) {
          uint64_t v31 = 0;
        }
        else {
          uint64_t v31 = 1 << v29;
        }
        if (v30 >= 0xFFFFFFFFFFFFFF7FLL) {
          uint64_t v32 = v31;
        }
        else {
          uint64_t v32 = 0;
        }
        double v33 = *(double *)(v0 + 48) * (double)v32;
        if (v33 > 0.0)
        {
          if ((~*(void *)&v33 & 0x7FF0000000000000) == 0)
          {
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
          if (v33 <= -1.0)
          {
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
          if (v33 >= 1.84467441e19)
          {
LABEL_93:
            __break(1u);
            goto LABEL_94;
          }
          if ((unint64_t)v33 >= 0x44B82FA09)
          {
            unint64_t v27 = -1;
          }
          else
          {
            double v34 = v33 * 1000000000.0;
            if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
            {
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
            if (v34 <= -1.0)
            {
LABEL_98:
              __break(1u);
              goto LABEL_99;
            }
            if (v34 >= 1.84467441e19)
            {
LABEL_99:
              __break(1u);
              goto LABEL_100;
            }
            unint64_t v27 = (unint64_t)v34;
          }
        }
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 216) = v47;
        *uint64_t v47 = v0;
        uint64_t v48 = sub_214BBF608;
        goto LABEL_80;
      }
LABEL_34:
      uint64_t v21 = sub_214BBF214;
LABEL_35:
      return MEMORY[0x270FA2498](v21, 0, 0);
    default:
      uint64_t v7 = *(void **)(v0 + 112);
      char v6 = *(void **)(v0 + 120);
      uint64_t v8 = *(void *)(v0 + 88);

      *(void *)uint64_t v8 = v1;
      *(double *)(v8 + 8) = v3;
      *(void *)(v8 + 16) = v4;
      *(unsigned char *)(v8 + 24) = v5 & 1;

      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_57;
  }
}

uint64_t sub_214BBF100()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BBF988;
  }
  else {
    uint64_t v2 = sub_214BBF728;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_214BBF214()
{
  uint64_t v16 = v0;
  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 128);
    if (v3 >= v2)
    {
      *(void *)(v0 + 136) = 0;
      *(void *)(v0 + 144) = v2;
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_214BBE544;
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v11 = *(void *)(v0 + 120);
      char v12 = *(unsigned char *)(v0 + 42);
      uint64_t v13 = *(void *)(v0 + 104);
      sub_214BCAE30(v0 + 16, v2, v13, v10, v12, v11);
    }
    else
    {
      uint64_t v5 = *(void **)(v0 + 112);
      uint64_t v4 = *(void **)(v0 + 120);
      char v6 = *(void **)(v0 + 104);
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      uint64_t v14 = 0x656972742078616DLL;
      uint64_t v15 = 0xEA00000000002073;
      *(void *)(v0 + 80) = v3;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      uint64_t v7 = v14;
      LOWORD(v14) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v7, v15, 0, (unsigned __int16 *)&v14, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      uint64_t v8 = *(void (**)(void))(v0 + 8);
      v8();
    }
  }
}

uint64_t sub_214BBF45C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 208) = v0;
    uint64_t v3 = sub_214BBF57C;
  }
  else
  {
    uint64_t v3 = sub_214BBF214;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214BBF57C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 104);
  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214BBF608()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 208) = v0;
    uint64_t v3 = sub_214BBF57C;
  }
  else
  {
    uint64_t v3 = sub_214BBF214;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

void sub_214BBF728()
{
  uint64_t v17 = v0;
  sub_214BC02AC(*(id *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(unsigned __int8 *)(v0 + 43), 2u);
  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 128);
    if (v4 >= v2)
    {
      *(void *)(v0 + 136) = v3;
      *(void *)(v0 + 144) = v2;
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_214BBE544;
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 120);
      char v13 = *(unsigned char *)(v0 + 42);
      uint64_t v14 = *(void *)(v0 + 104);
      sub_214BCAE30(v0 + 16, v2, v14, v11, v13, v12);
    }
    else
    {
      uint64_t v6 = *(void **)(v0 + 112);
      uint64_t v5 = *(void **)(v0 + 120);
      uint64_t v7 = *(void **)(v0 + 104);
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      uint64_t v15 = 0x656972742078616DLL;
      uint64_t v16 = 0xEA00000000002073;
      *(void *)(v0 + 80) = v4;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      uint64_t v8 = v15;
      LOWORD(v15) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v16, v3, (unsigned __int16 *)&v15, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      uint64_t v9 = *(void (**)(void))(v0 + 8);
      v9();
    }
  }
}

uint64_t sub_214BBF988()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v5 = *(void **)(v0 + 112);
  uint64_t v4 = *(void **)(v0 + 120);
  uint64_t v6 = *(void **)(v0 + 104);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 43);
  sub_214BC02AC(v3, v1, v2, v7, 2u);
  sub_214BC02AC(v3, v1, v2, v7, 2u);
  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));

  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_214BBFA60()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BBFDC8;
  }
  else {
    uint64_t v2 = sub_214BBFB74;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_214BBFB74()
{
  uint64_t v17 = v0;

  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 128);
    if (v4 >= v2)
    {
      *(void *)(v0 + 136) = v3;
      *(void *)(v0 + 144) = v2;
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_214BBE544;
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 120);
      char v13 = *(unsigned char *)(v0 + 42);
      uint64_t v14 = *(void *)(v0 + 104);
      sub_214BCAE30(v0 + 16, v2, v14, v11, v13, v12);
    }
    else
    {
      uint64_t v6 = *(void **)(v0 + 112);
      uint64_t v5 = *(void **)(v0 + 120);
      uint64_t v7 = *(void **)(v0 + 104);
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      uint64_t v15 = 0x656972742078616DLL;
      uint64_t v16 = 0xEA00000000002073;
      *(void *)(v0 + 80) = v4;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      uint64_t v8 = v15;
      LOWORD(v15) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v16, v3, (unsigned __int16 *)&v15, 0, 0, 0xD000000000000069, 0x8000000214D31330, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      uint64_t v9 = *(void (**)(void))(v0 + 8);
      v9();
    }
  }
}

uint64_t sub_214BBFDC8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v4 = *(void **)(v0 + 104);

  sub_214BC02AC(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214BBFE68(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v1;
  return MEMORY[0x270FA2498](sub_214BBFE88, 0, 0);
}

uint64_t sub_214BBFE88()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (*v1 != *(void *)(v0 + 48))
  {
    uint64_t v2 = (double *)(v0 + 16);
    sub_214BC03C4(v1 + 1, v0 + 32);
    uint64_t v3 = sub_214BC03C4((uint64_t *)(v0 + 32), v0 + 16);
    if (!*(unsigned char *)(v0 + 24))
    {
      double v14 = *v2;
      if (*v2 <= 0.0)
      {
        unint64_t v9 = 0;
      }
      else
      {
        if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
        {
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        if (v14 <= -1.0)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v14 >= 1.84467441e19)
        {
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        if ((unint64_t)v14 > 0x44B82FA08)
        {
          unint64_t v9 = -1;
        }
        else
        {
          double v15 = v14 * 1000000000.0;
          if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          if (v15 <= -1.0)
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          if (v15 >= 1.84467441e19)
          {
LABEL_35:
            __break(1u);
            return MEMORY[0x270FA1FF0](v3);
          }
          unint64_t v9 = (unint64_t)v15;
        }
      }
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 64) = v10;
      *uint64_t v10 = v0;
      uint64_t v11 = sub_214BC00C4;
LABEL_26:
      v10[1] = v11;
      uint64_t v3 = v9;
      return MEMORY[0x270FA1FF0](v3);
    }
    if (*(unsigned char *)(v0 + 24) == 1)
    {
      uint64_t v4 = *(void *)(v0 + 48);
      BOOL v5 = __OFSUB__(v4, 1);
      unint64_t v6 = v4 - 1;
      if (!v5)
      {
        BOOL v7 = v6 > 0x40;
        if (v6 >= 0x40) {
          uint64_t v8 = 0;
        }
        else {
          uint64_t v8 = 1 << v6;
        }
        if (v7) {
          uint64_t v8 = 0;
        }
        unint64_t v9 = sub_214BE0AEC(*(double *)(v0 + 16) * (double)v8);
        uint64_t v10 = (void *)swift_task_alloc();
        *(void *)(v0 + 72) = v10;
        *uint64_t v10 = v0;
        uint64_t v11 = sub_214BC01B8;
        goto LABEL_26;
      }
      __break(1u);
      goto LABEL_30;
    }
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_214BC00C4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BC01B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_214BC02AC(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 3u)
  {
    uint64_t v5 = a5;
    if (a5 > 3uLL) {
      uint64_t v5 = 0;
    }
    ((void (*)(id))((char *)&loc_214BC02D0 + (int)funcs_214BC02D8[v5]))(a1);
  }
}

void sub_214BC02DC(id a1)
{
}

void sub_214BC02F0(uint64_t a1, unint64_t a2, void *a3)
{
  sub_214B58A4C(a1, a2);
}

id sub_214BC0338(id result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 <= 3u)
  {
    uint64_t v5 = a5;
    if (a5 > 3uLL) {
      uint64_t v5 = 0;
    }
    return ((id (*)(id))((char *)&loc_214BC035C + (int)funcs_214BC0364[v5]))(result);
  }
  return result;
}

id sub_214BC0368(id a1)
{
  return a1;
}

id sub_214BC037C(uint64_t a1, unint64_t a2, void *a3)
{
  sub_214B6A3A0(a1, a2);
  return a3;
}

uint64_t sub_214BC03C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for DIPBackoffStrategy(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPBackoffStrategy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214BC0468(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_214BC0480(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPBackoffStrategy()
{
  return &type metadata for DIPBackoffStrategy;
}

uint64_t sub_214BC04A8(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B72738;
  return v7(a1, a2);
}

uint64_t sub_214BC0598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_214B6B4A4;
  return v9(a1, a2, a3);
}

uint64_t sub_214BC06A0(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BC5478;
  return v7(a1, a2);
}

uint64_t sub_214BC0790(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v14 = a1[1];
  long long v15 = *a1;
  long long v12 = a1[3];
  long long v13 = a1[2];
  long long v10 = a1[5];
  long long v11 = a1[4];
  uint64_t v6 = *((void *)a1 + 12);
  uint64_t v7 = *((void *)a1 + 13);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(void *)(v3 + 120) = v7;
  *(void *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(void *)(v3 + 112) = v6;
  *uint64_t v8 = v3;
  v8[1] = sub_214BC08E8;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_214BC08E8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BC09DC(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v14 = a1[1];
  long long v15 = *a1;
  long long v12 = a1[3];
  long long v13 = a1[2];
  long long v10 = a1[5];
  long long v11 = a1[4];
  uint64_t v6 = *((void *)a1 + 12);
  uint64_t v7 = *((void *)a1 + 13);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v8 = (void *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(void *)(v3 + 120) = v7;
  *(void *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(void *)(v3 + 112) = v6;
  *uint64_t v8 = v3;
  v8[1] = sub_214BC08E8;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_214BC0B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_214B6A55C;
  return v9(a1, a2, a3);
}

uint64_t sub_214BC0C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_214BA6744;
  return v9(a1, a2, a3);
}

uint64_t sub_214BC0D3C(long long *a1, uint64_t a2, uint64_t a3)
{
  long long v14 = a1[1];
  long long v15 = *a1;
  long long v12 = a1[3];
  long long v13 = a1[2];
  long long v10 = a1[5];
  long long v11 = a1[4];
  uint64_t v6 = *((void *)a1 + 12);
  uint64_t v7 = *((void *)a1 + 13);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v8 = (void *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(void *)(v3 + 120) = v7;
  *(void *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(void *)(v3 + 112) = v6;
  *uint64_t v8 = v3;
  v8[1] = sub_214BC0E94;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_214BC0E94(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_214BC0FA0()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x270FA2498](sub_214BC0FC0, v0, 0);
}

uint64_t sub_214BC0FC0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  void *v4 = v0;
  v4[1] = sub_214BC1074;
  return sub_214BC2450(v0 + 16, v2, v3);
}

uint64_t sub_214BC1074()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC1184, v1, 0);
}

uint64_t sub_214BC1184()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v0 + 64);
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v2 + 104) = v4;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v0 + 112);
  long long v5 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 40) = v5;
  *(void *)(v0 + 152) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 56) = v3;
  swift_retain_n();
  sub_214BC50F8(v0 + 16);
  return MEMORY[0x270FA2498](sub_214BC1248, 0, 0);
}

uint64_t sub_214BC1248()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_26784D460;
  v2[4] = v1;
  v2[5] = &unk_26784F198;
  v2[6] = 0;
  long long v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  *long long v3 = v0;
  uint64_t v4 = MEMORY[0x263F8EE60];
  v3[1] = sub_214BC1364;
  return MEMORY[0x270FA2360](v3, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214BC5448, v2, v4 + 8);
}

uint64_t sub_214BC1364()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    long long v3 = sub_214BC14C8;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v2 + 16;
    uint64_t v6 = *(void *)(v2 + 136);
    swift_release();
    swift_release();
    sub_214BC5184(v5);
    swift_task_dealloc();
    long long v3 = sub_214BC14B0;
    uint64_t v4 = v6;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214BC14B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214BC14C8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC1534, v1, 0);
}

uint64_t sub_214BC1534()
{
  uint64_t v10 = v0;
  uint64_t v1 = *(void **)(v0 + 176);
  swift_release();
  swift_release();
  sub_214BC5184(v0 + 16);
  *(void *)(v0 + 128) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 176);
  if (v3)
  {

    v9[0] = 0x203A726F727201;
    v9[1] = 0xE700000000000000;
    sub_214B74FB0();
    swift_bridgeObjectRetain();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    CoreODILogger.error(_:category:)(0x203A726F727245, 0xE700000000000000, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v9[0]) = -89;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000214D31690, 0, (unsigned __int8 *)v9, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD00000000000001ALL, 0x8000000214D31710, 60);
    swift_willThrow();
    uint64_t v5 = *(void **)(v0 + 128);
  }
  else
  {

    LOBYTE(v9[0]) = 0;
    id v6 = v4;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v4, (unsigned __int8 *)v9, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD00000000000001ALL, 0x8000000214D31710, 62);

    swift_willThrow();
    uint64_t v5 = v4;
  }

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_214BC1788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_214BC17A8, 0, 0);
}

uint64_t sub_214BC17A8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[2] + 144), *(void *)(v0[2] + 168));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BC1850;
  uint64_t v2 = v0[3];
  return sub_214C2CA08(v2);
}

uint64_t sub_214BC1850()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BC1944()
{
  *(void *)(v1 + 192) = v0;
  return MEMORY[0x270FA2498](sub_214BC1964, v0, 0);
}

uint64_t sub_214BC1964()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v4;
  void *v4 = v0;
  v4[1] = sub_214BC1A18;
  return sub_214BC2450(v0 + 16, v2, v3);
}

uint64_t sub_214BC1A18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC1B28, v1, 0);
}

uint64_t sub_214BC1B28()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v0 + 64);
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v2 + 104) = v4;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v0 + 112);
  long long v5 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 40) = v5;
  *(void *)(v0 + 208) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 56) = v3;
  swift_retain_n();
  sub_214BC50F8(v0 + 16);
  return MEMORY[0x270FA2498](sub_214BC1BEC, 0, 0);
}

uint64_t sub_214BC1BEC()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[27] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_26784D430;
  v2[4] = v1;
  v2[5] = &unk_26784D438;
  v2[6] = 0;
  long long v3 = (void *)swift_task_alloc();
  v0[28] = v3;
  *long long v3 = v0;
  v3[1] = sub_214BC1D18;
  uint64_t v4 = MEMORY[0x263F8D310];
  return MEMORY[0x270FA2360](v0 + 16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214BC5210, v2, v4);
}

uint64_t sub_214BC1D18()
{
  uint64_t v2 = (void *)*v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214BC1E88, 0, 0);
  }
  else
  {
    swift_release();
    swift_release();
    sub_214BC5184((uint64_t)(v2 + 2));
    swift_task_dealloc();
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    long long v5 = (uint64_t (*)(uint64_t, uint64_t))v2[1];
    return v5(v3, v4);
  }
}

uint64_t sub_214BC1E88()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC1EF4, v1, 0);
}

uint64_t sub_214BC1EF4()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  swift_release();
  swift_release();
  sub_214BC5184(v0 + 16);
  *(void *)(v0 + 176) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {

    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    *(void *)(v0 + 160) = 0;
    *(void *)(v0 + 168) = 0xE000000000000000;
    sub_214D1A108();
    sub_214D1A908();
    uint64_t v3 = *(void *)(v0 + 160);
    unint64_t v4 = *(void *)(v0 + 168);
    LOBYTE(v12) = 1;
    CoreODILogger.error(_:category:)(v3, v4, &v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v12) = -89;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000214D31690, 0, (unsigned __int8 *)&v12, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000016, 0x8000000214D31670, 80);
    swift_willThrow();
    long long v5 = *(void **)(v0 + 176);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 232);

    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    *(void *)(v0 + 144) = 0;
    *(void *)(v0 + 152) = 0xE000000000000000;
    sub_214D1A108();
    *(void *)(v0 + 184) = v6;
    sub_214D1A908();
    uint64_t v7 = *(void *)(v0 + 144);
    unint64_t v8 = *(void *)(v0 + 152);
    LOBYTE(v12) = 1;
    CoreODILogger.error(_:category:)(v7, v8, &v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v12) = 0;
    id v9 = v6;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v6, (unsigned __int8 *)&v12, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000016, 0x8000000214D31670, 83);

    swift_willThrow();
    long long v5 = v6;
  }

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_214BC2200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_214BC2224, 0, 0);
}

uint64_t sub_214BC2224()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[3] + 144), *(void *)(v0[3] + 168));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BC22D0;
  uint64_t v2 = v0[4];
  return sub_214C2F5F0(v2, 0);
}

uint64_t sub_214BC22D0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 48) = a2;
    *(void *)(v6 + 56) = a1;
    return MEMORY[0x270FA2498](sub_214BC242C, 0, 0);
  }
}

uint64_t sub_214BC242C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 16);
  void *v2 = *(void *)(v0 + 56);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214BC2450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[125] = v3;
  v4[124] = a3;
  v4[123] = a2;
  v4[122] = a1;
  v4[126] = *v3;
  uint64_t v5 = sub_214D19D78();
  v4[127] = v5;
  v4[128] = *(void *)(v5 - 8);
  v4[129] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B18);
  v4[130] = swift_task_alloc();
  uint64_t v6 = sub_214D19D98();
  v4[131] = v6;
  v4[132] = *(void *)(v6 - 8);
  v4[133] = swift_task_alloc();
  v4[134] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B20);
  v4[135] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BC2610, 0, 0);
}

uint64_t sub_214BC2610()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 1088) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BC26B8, v1, 0);
}

uint64_t sub_214BC26B8()
{
  if (*(unsigned char *)(v0[136] + 168))
  {
    uint64_t v1 = v0[125];
    return MEMORY[0x270FA2498](sub_214BC289C, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[137] = v2;
    void *v2 = v0;
    v2[1] = sub_214BC278C;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214BC278C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1000);
  return MEMORY[0x270FA2498](sub_214BC289C, v2, 0);
}

uint64_t sub_214BC289C()
{
  uint64_t v1 = (_OWORD *)(v0 + 896);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v4 = objc_msgSend(v3, sel_infoDictionary);

  if (!v4 || (uint64_t v5 = sub_214D19F98(), v4, !v5))
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 912) = 0u;
    goto LABEL_10;
  }
  if (!*(void *)(v5 + 16) || (uint64_t v6 = sub_214B87FEC(0x656C646E75424643, 0xEF6E6F6973726556), (v7 & 1) == 0))
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 912) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_214B5EC30(*(void *)(v5 + 56) + 32 * v6, v0 + 896);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 920))
  {
LABEL_10:
    sub_214B59CE0(v0 + 896, (uint64_t *)&unk_26ACE44A0);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    uint64_t v8 = *(void *)(v0 + 944);
    unint64_t v9 = *(void *)(v0 + 952);
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v9 = 0xE700000000000000;
  uint64_t v8 = 0x6E776F6E6B6E75;
LABEL_12:
  *(void *)(v0 + 1112) = v9;
  *(void *)(v0 + 1104) = v8;
  uint64_t v10 = *(void *)(v0 + 1088);
  return MEMORY[0x270FA2498](sub_214BC2A50, v10, 0);
}

uint64_t sub_214BC2A50()
{
  uint64_t v1 = v0[136];
  uint64_t v2 = sub_214BC52D4((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  id v3 = (void *)swift_task_alloc();
  v0[140] = v3;
  v3[2] = v1;
  v3[3] = 0x4E746375646F7250;
  v3[4] = 0xEB00000000656D61;
  id v4 = (void *)swift_task_alloc();
  v0[141] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  void *v4 = v0;
  v4[1] = sub_214BC2BC4;
  return MEMORY[0x270FA2318](v0 + 116, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BC4F98, v3, v5);
}

uint64_t sub_214BC2BC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 1000);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 1136) = *(_OWORD *)(v1 + 928);
  return MEMORY[0x270FA2498](sub_214BC2D00, v2, 0);
}

uint64_t sub_214BC2D00()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  objc_msgSend(v1, sel_operatingSystemVersion);
  uint64_t v2 = v33;

  v0[121] = v31;
  uint64_t v32 = sub_214D1AB78();
  uint64_t v34 = v3;
  sub_214D1A108();
  v0[120] = v2;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  v0[144] = v32;
  v0[145] = v34;
  if (qword_26ACE4060 != -1) {
    swift_once();
  }
  uint64_t v4 = 0x6E776F6E6B6E75;
  uint64_t v5 = v0[135];
  uint64_t v6 = v0[134];
  uint64_t v7 = v0[132];
  uint64_t v8 = v0[131];
  v0[111] = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE40C0);
  v0[108] = &type metadata for AssessmentConfig;
  sub_214BD622C((uint64_t)(v0 + 108), 10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 108));
  sub_214D19D58();
  sub_214D19D48();
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  uint64_t v10 = sub_214D19D38();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10);
  uint64_t v13 = v0[135];
  if (v12 == 1)
  {
    sub_214B59CE0(v0[135], &qword_26ACE3B20);
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v15 = sub_214D19CE8();
    unint64_t v14 = v16;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  v0[147] = v14;
  v0[146] = v15;
  uint64_t v17 = v0[133];
  uint64_t v18 = v0[131];
  uint64_t v19 = v0[130];
  uint64_t v20 = v0[129];
  uint64_t v21 = v0[128];
  uint64_t v22 = v0[127];
  sub_214D19D58();
  sub_214D19D88();
  v9(v17, v18);
  sub_214D19D68();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  uint64_t v23 = sub_214D19CF8();
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23);
  uint64_t v26 = v0[130];
  if (v25 == 1)
  {
    sub_214B59CE0(v0[130], &qword_26ACE3B18);
    unint64_t v27 = 0xE700000000000000;
  }
  else
  {
    uint64_t v4 = sub_214D19CE8();
    unint64_t v27 = v28;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  v0[149] = v27;
  v0[148] = v4;
  if (qword_26ACE3C10 != -1) {
    swift_once();
  }
  unint64_t v29 = (void *)swift_task_alloc();
  v0[150] = v29;
  *unint64_t v29 = v0;
  v29[1] = sub_214BC3114;
  return sub_214C11404((uint64_t)(v0 + 72));
}

uint64_t sub_214BC3114()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC3224, v1, 0);
}

uint64_t sub_214BC3224()
{
  long long v1 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 536) = v1;
  *(_OWORD *)(v0 + 552) = *(_OWORD *)(v0 + 800);
  *(unsigned char *)(v0 + 568) = *(unsigned char *)(v0 + 816);
  long long v2 = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 472) = v2;
  long long v3 = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 504) = v3;
  long long v4 = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 408) = v4;
  long long v5 = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 440) = v5;
  long long v6 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 344) = v6;
  long long v7 = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 360) = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 376) = v7;
  id v8 = objc_msgSend(self, sel_standardUserDefaults);
  *(void *)(v0 + 848) = sub_214BC4FA4();
  *(void *)(v0 + 856) = &off_26C5A8468;
  *(void *)(v0 + 824) = v8;
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  int v9 = byte_26ACEB960;
  if (qword_26ACE44D0 != -1)
  {
    swift_once();
    if (v9) {
      goto LABEL_5;
    }
LABEL_12:
    char v10 = 0;
    goto LABEL_13;
  }
  if (!byte_26ACEB960) {
    goto LABEL_12;
  }
LABEL_5:
  if (qword_26ACEBAC0
    && (qword_26ACEBAB8 == 0x7972726163 && qword_26ACEBAC0 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0))
  {
    char v10 = 2;
  }
  else
  {
    char v10 = 1;
  }
LABEL_13:
  uint64_t v11 = *(void *)(v0 + 992);
  uint64_t v12 = *(void *)(v0 + 984);
  *(void *)(v0 + 16) = 45;
  *(void *)(v0 + 24) = 0xE100000000000000;
  long long v13 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 240) = v13;
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 552);
  *(unsigned char *)(v0 + 272) = *(unsigned char *)(v0 + 568);
  long long v14 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 176) = v14;
  long long v15 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 208) = v15;
  long long v16 = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 392);
  *(_OWORD *)(v0 + 112) = v16;
  long long v17 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 144) = v17;
  long long v18 = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 48) = v18;
  long long v19 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 80) = v19;
  sub_214B59EC0((long long *)(v0 + 824), v0 + 280);
  *(unsigned char *)(v0 + 320) = v10;
  unsigned __int8 v20 = sub_214C525C8(v12, v11);
  sub_214BC4FE4(v0 + 16);
  uint64_t v34 = *(void *)(v0 + 1192);
  uint64_t v21 = *(void *)(v0 + 1160);
  uint64_t v22 = *(void *)(v0 + 1152);
  uint64_t v23 = *(void *)(v0 + 1144);
  long long v31 = *(_OWORD *)(v0 + 1104);
  long long v32 = *(_OWORD *)(v0 + 1168);
  uint64_t v33 = *(void *)(v0 + 1184);
  uint64_t v24 = *(void *)(v0 + 992);
  uint64_t v25 = *(void *)(v0 + 984);
  if (v23) {
    unint64_t v26 = *(void *)(v0 + 1144);
  }
  else {
    unint64_t v26 = 0xE700000000000000;
  }
  if (v23) {
    uint64_t v27 = *(void *)(v0 + 1136);
  }
  else {
    uint64_t v27 = 0x6E776F6E6B6E75;
  }
  uint64_t v28 = *(void *)(v0 + 976);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)uint64_t v28 = v25;
  *(void *)(v28 + 8) = v24;
  *(void *)(v28 + 16) = v22;
  *(void *)(v28 + 24) = v21;
  *(void *)(v28 + 32) = v27;
  *(void *)(v28 + 40) = v26;
  *(_OWORD *)(v28 + 48) = v31;
  *(_OWORD *)(v28 + 64) = v32;
  *(void *)(v28 + 80) = v33;
  *(void *)(v28 + 88) = v34;
  *(void *)(v28 + 96) = v20 + 48;
  *(void *)(v28 + 104) = 0xE100000000000000;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_214BC356C()
{
  *(void *)(v1 + 16) = v0;
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_214BC3618;
  v2[24] = v0;
  return MEMORY[0x270FA2498](sub_214BC1964, v0, 0);
}

uint64_t sub_214BC3618(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v6 + 16);
  if (v2)
  {

    int v9 = sub_214BC3870;
  }
  else
  {
    *(void *)(v7 + 32) = a2;
    *(void *)(v7 + 40) = a1;
    int v9 = sub_214BC3760;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

uint64_t sub_214BC3760()
{
  uint64_t v6 = v0;
  uint64_t v1 = v0[4];
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v5[0] = 0xD000000000000001;
  v5[1] = 0x8000000214D31610;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000026, 0x8000000214D31610, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[5];
  long long v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_214BC3870()
{
  uint64_t v4 = v0;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v3[0] = 0xD000000000000001;
  v3[1] = 0x8000000214D315F0;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x8000000214D315F0, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 8);
  return v1(0, 0);
}

uint64_t sub_214BC397C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_214D19AE8();
  if (v5 >> 60 == 15)
  {
    LOBYTE(v20[0]) = 101;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000214D31510, 0, (unsigned __int8 *)v20, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000017, 0x8000000214D31590, 127);
    return swift_willThrow();
  }
  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BC4F44();
    sub_214D19748();
    swift_release();
    if (v2)
    {
      uint64_t v9 = *(void *)(v1 + 200);
      *(void *)&v20[0] = *(void *)(v1 + 192);
      *((void *)&v20[0] + 1) = v9;
      unint64_t v18 = 0x20726F727201;
      unint64_t v19 = 0xE600000000000000;
      swift_getErrorValue();
      swift_bridgeObjectRetain();
      sub_214D1AC88();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0x20726F727245, 0xE600000000000000, &v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v20[0]) = 105;
      id v10 = v2;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D315B0, (char *)v2, (unsigned __int8 *)v20, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000017, 0x8000000214D31590, 136);

      swift_willThrow();
      return sub_214B59EAC(v7, v8);
    }
    else
    {
      long long v16 = v20[1];
      long long v17 = v20[0];
      uint64_t v11 = v22;
      uint64_t v12 = v23;
      uint64_t v14 = v24;
      uint64_t v15 = v21;
      uint64_t v13 = *(void *)(v1 + 200);
      *(void *)&v20[0] = *(void *)(v1 + 192);
      *((void *)&v20[0] + 1) = v13;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000001;
      unint64_t v19 = 0x8000000214D315D0;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.debug(_:category:)(0xD000000000000010, 0x8000000214D315D0, &v18);
      swift_bridgeObjectRelease();
      sub_214B59EAC(v7, v8);
      uint64_t result = swift_bridgeObjectRelease();
      *(_OWORD *)a1 = v17;
      *(_OWORD *)(a1 + 16) = v16;
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v11;
      *(void *)(a1 + 48) = v12;
      *(void *)(a1 + 56) = v14;
    }
  }
  return result;
}

uint64_t sub_214BC3CB0(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  long long v3 = (void *)swift_task_alloc();
  v2[7] = v3;
  *long long v3 = v2;
  v3[1] = sub_214BC3D40;
  return sub_214BC356C();
}

uint64_t sub_214BC3D40(uint64_t a1, uint64_t a2)
{
  long long v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  void v4[2] = v2;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = v3[6];
  v4[8] = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC3E5C, v5, 0);
}

uint64_t sub_214BC3E5C()
{
  uint64_t v4 = v0;
  if (v0[8])
  {
    sub_214BC397C(v0[5]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3[0] = 123;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x8000000214D31730, 0, v3, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000015, 0x8000000214D31750, 142);
    swift_willThrow();
  }
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_214BC3F5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ProfileManager()
{
  return self;
}

uint64_t sub_214BC3FD8()
{
  *(void *)(v1 + 72) = v0;
  return MEMORY[0x270FA2498](sub_214BC3FF8, v0, 0);
}

uint64_t sub_214BC3FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[9];
  uint64_t v4 = *(void *)(v3 + 192);
  v2[10] = v4;
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 184);
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v2[1];
    swift_bridgeObjectRetain();
    return v11(v5, v4);
  }
  else if (*(unsigned char *)(v3 + 168))
  {
    uint64_t v7 = sub_214BC52D4(&qword_26784D450, a2, (void (*)(uint64_t))type metadata accessor for ServerTimeSeedProvider);
    unint64_t v8 = (void *)swift_task_alloc();
    v2[16] = v8;
    *unint64_t v8 = v2;
    v8[1] = sub_214BC47AC;
    uint64_t v9 = v2[9];
    uint64_t v10 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2318](v8, v3, v7, 0xD000000000000013, 0x8000000214D316D0, sub_214BC531C, v9, v10);
  }
  else
  {
    *(unsigned char *)(v3 + 168) = 1;
    swift_retain_n();
    return MEMORY[0x270FA2498](sub_214BC41C8, 0, 0);
  }
}

uint64_t sub_214BC41C8()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_26784D448;
  v2[4] = v1;
  v2[5] = &unk_26784D438;
  v2[6] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214BC42F4;
  uint64_t v4 = MEMORY[0x263F8D310];
  return MEMORY[0x270FA2360](v0 + 5, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214BC5210, v2, v4);
}

uint64_t sub_214BC42F4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214BC44DC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v2[9];
    swift_release_n();
    swift_task_dealloc();
    uint64_t v6 = v2[6];
    v2[14] = v2[5];
    v2[15] = v6;
    uint64_t v3 = sub_214BC443C;
    uint64_t v4 = v5;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214BC443C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[9];
  *(void *)(v2 + 184) = v0[14];
  *(void *)(v2 + 192) = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 192);
  swift_bridgeObjectRetain();
  sub_214BC4AFC(v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v6(v3, v4);
}

uint64_t sub_214BC44DC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC4548, v1, 0);
}

uint64_t sub_214BC4548()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release_n();
  *(void *)(v0 + 56) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 72);

    unint64_t v4 = *(void *)(v3 + 208);
    uint64_t v14 = *(void *)(v3 + 200);
    unint64_t v15 = v4;
    LOBYTE(v13[0]) = 1;
    swift_bridgeObjectRetain();
    CoreODILogger.error(_:category:)(0xD00000000000001CLL, 0x8000000214D316F0, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 72);

    LOBYTE(v14) = 0;
    id v7 = v5;
    id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x8000000214D316B0, (char *)v5, (unsigned __int8 *)&v14, 0, 0, 0xD00000000000005CLL, 0x8000000214D31530, 0xD000000000000013, 0x8000000214D316D0, 196);

    uint64_t v9 = *(void *)(v6 + 208);
    v13[0] = *(void *)(v6 + 200);
    v13[1] = v9;
    uint64_t v14 = 0x203A726F727245;
    unint64_t v15 = 0xE700000000000000;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v10 = v14;
    LOBYTE(v14) = 1;
    CoreODILogger.error(_:category:)(v10, v15, &v14);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  sub_214BC4AFC(*(void *)(v0 + 72));
  uint64_t v12 = *(uint64_t (**)(void, void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v12(0, 0);
}

uint64_t sub_214BC47AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC48BC, v1, 0);
}

uint64_t sub_214BC48BC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5(v3, v2);
}

uint64_t sub_214BC4940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 168) != 1) {
    return sub_214D1A2F8();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v9 = (unint64_t *)(a2 + 176);
  swift_beginAccess();
  unint64_t v10 = *(void *)(a2 + 176);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 176) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_214B877EC(0, *(void *)(v10 + 16) + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_214B877EC(v12 > 1, v13 + 1, 1, v10);
    *uint64_t v9 = v10;
  }
  *(void *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

uint64_t sub_214BC4AFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + 168) = 0;
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 176);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    uint64_t v11 = v12;
    uint64_t v13 = v8 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v14 = *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v11(v6, v13, v2);
      sub_214D1A2F8();
      (*(void (**)(char *, uint64_t))(v10 - 8))(v6, v2);
      v13 += v14;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214BC4C54(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_214BC4C74, 0, 0);
}

uint64_t sub_214BC4C74()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 24) + 112), *(void *)(*(void *)(v0 + 24) + 136));
  *(unsigned char *)(v0 + 64) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BC4D24;
  return sub_214C2CE44((unsigned char *)(v0 + 64));
}

uint64_t sub_214BC4D24(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 40) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_214BC4E58;
  }
  else
  {
    *(void *)(v6 + 48) = a2;
    *(void *)(v6 + 56) = a1;
    uint64_t v7 = sub_214BC242C;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214BC4E58()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214BC4E70()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ServerTimeSeedProvider()
{
  return self;
}

uint64_t sub_214BC4EEC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_214BC52D4(&qword_26784D420, a2, (void (*)(uint64_t))type metadata accessor for ProfileManager);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_214BC4F44()
{
  unint64_t result = qword_26ACE40E0;
  if (!qword_26ACE40E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40E0);
  }
  return result;
}

uint64_t sub_214BC4F98(uint64_t a1)
{
  return sub_214B575B0(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_214BC4FA4()
{
  unint64_t result = qword_26ACE39F0;
  if (!qword_26ACE39F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE39F0);
  }
  return result;
}

uint64_t sub_214BC4FE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BC503C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  _OWORD v5[3] = v4;
  v5[4] = v1 + 24;
  v5[1] = sub_214B6B4A4;
  void v5[2] = a1;
  return MEMORY[0x270FA2498](sub_214BC2224, 0, 0);
}

uint64_t sub_214BC50F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BC5184(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BC5210(uint64_t a1)
{
  return sub_214BC5460(a1, sub_214C3F278);
}

uint64_t sub_214BC5228(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  void v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_214B6B4A4;
  return MEMORY[0x270FA2498](sub_214BC4C74, 0, 0);
}

uint64_t sub_214BC52D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214BC531C(uint64_t a1)
{
  return sub_214BC4940(a1, v1);
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_214BC5398()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  void v3[2] = v2;
  v3[3] = v0 + 24;
  v3[1] = sub_214B6A55C;
  return MEMORY[0x270FA2498](sub_214BC17A8, 0, 0);
}

uint64_t sub_214BC5448(uint64_t a1)
{
  return sub_214BC5460(a1, sub_214C3F654);
}

uint64_t sub_214BC5460(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t getEnumTagSinglePayload for DIPCertUsage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DIPCertUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BC55D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPCertUsage()
{
  return &type metadata for DIPCertUsage;
}

uint64_t sub_214BC5610(unsigned __int8 a1)
{
  int v1 = a1;
  int v2 = 851968;
  int v3 = a1;
  switch(a1)
  {
    case 1u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 256;
      break;
    case 2u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 512;
      break;
    case 3u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 768;
      break;
    case 4u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 1024;
      break;
    case 5u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 1280;
      break;
    case 6u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 1536;
      break;
    case 7u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 1792;
      break;
    case 8u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 2048;
      break;
    case 9u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 2304;
      break;
    case 0xAu:
      int v2 = 0x100000;
      int v3 = 4096;
      int v1 = 1;
      break;
    case 0xBu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4470);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_214D1C1E0;
      CFOptionFlags v5 = 3;
      goto LABEL_15;
    case 0xCu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4470);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_214D1C1E0;
      int v1 = 3;
      *(void *)(v6 + 32) = SecPolicyCreateRevocation(3uLL);
      sub_214D1A288();
      int v2 = 0x100000;
      int v3 = 4096;
      break;
    case 0xDu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4470);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_214D1C1E0;
      CFOptionFlags v5 = 16;
LABEL_15:
      *(void *)(v4 + 32) = SecPolicyCreateRevocation(v5);
      sub_214D1A288();
      int v2 = 0x100000;
      int v3 = 4096;
      int v1 = 2;
      break;
    case 0xEu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4470);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_214D1C1E0;
      *(void *)(v7 + 32) = SecPolicyCreateRevocation(0x10uLL);
      sub_214D1A288();
      int v2 = 0x100000;
      int v3 = 4096;
      int v1 = 3;
      break;
    case 0xFu:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 2816;
      break;
    case 0x10u:
      int v1 = 0;
      int v2 = 917504;
      int v3 = 3072;
      break;
    default:
      return v3 | v1 | v2;
  }
  return v3 | v1 | v2;
}

unint64_t sub_214BC58A8(char a1)
{
  unint64_t result = 0x6449746E65696C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000021;
      break;
    case 5:
      unint64_t result = 0x696E6769536F6E69;
      break;
    case 6:
      unint64_t result = 0x7972636E456F6E69;
      break;
    case 7:
      unint64_t result = 0x6E696E6769537073;
      break;
    case 8:
      unint64_t result = 0x707972636E457073;
      break;
    case 9:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
    case 12:
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 14:
      unint64_t result = 0xD000000000000020;
      break;
    case 15:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BC5AC4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_214BC58A8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_214BC58A8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214BC5B50()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214BC58A8(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214BC5BB4()
{
  sub_214BC58A8(*v0);
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BC5C08()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214BC58A8(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214BC5C68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214BC5E6C();
  *a1 = result;
  return result;
}

unint64_t sub_214BC5C98@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_214BC58A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_214BC5CC8()
{
  unint64_t result = qword_26784D468;
  if (!qword_26784D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D468);
  }
  return result;
}

unint64_t sub_214BC5D1C(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BC5E6C()
{
  unint64_t v0 = sub_214D1AC28();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11) {
    return 17;
  }
  else {
    return v0;
  }
}

__SecTrust *sub_214BC5EC0(unint64_t a1, int a2, uint64_t a3)
{
  LODWORD(v5) = a2;
  trust[10] = *(SecTrustRef *)MEMORY[0x263EF8340];
  uint64_t v7 = type metadata accessor for ODISignpost();
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  uint64_t v11 = (char *)v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v14 = (__SecTrust *)((char *)v109 - v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4440);
  uint64_t inited = swift_initStackObject();
  long long v114 = xmmword_214D1C1E0;
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 17;
  *(void *)(inited + 64) = &type metadata for DIPCertUsage;
  *(unsigned char *)(inited + 40) = (_BYTE)v5;
  unint64_t v16 = sub_214B7E744(inited);
  uint64_t v115 = v3;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v17 = sub_214D1A948();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v17 >= 1)
  {
    uint64_t v116 = (__SecTrust *)v16;
    char v18 = sub_214BC5610(v5);
    swift_bridgeObjectRelease();
    int v111 = (int)v5;
    uint64_t v112 = v14;
    unint64_t v113 = v7;
    switch(v18)
    {
      case 1:
        *(void *)&long long v122 = 0x657261685369646FLL;
        *((void *)&v122 + 1) = 0xEF726567676F4C64;
        LOBYTE(error[0]) = 16;
        CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x8000000214D31AC0, error);
        uint64_t v22 = (void *)sub_214D1A2C8();
        ApplePayModelSigning = (void *)DIPSecPolicyCreateApplePayModelSigning((uint64_t)v22);

        break;
      case 2:
        *(void *)&long long v122 = 0x657261685369646FLL;
        *((void *)&v122 + 1) = 0xEF726567676F4C64;
        LOBYTE(error[0]) = 16;
        CoreODILogger.debug(_:category:)(0xD00000000000001BLL, 0x8000000214D31AA0, error);
        goto LABEL_10;
      case 3:
        *(void *)&long long v122 = 0x657261685369646FLL;
        *((void *)&v122 + 1) = 0xEF726567676F4C64;
        LOBYTE(error[0]) = 16;
        CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x8000000214D31840, error);
LABEL_10:
        ApplePayModelSigning = (void *)SecPolicyCreateMDLTerminalAuth();
        break;
      default:
        *(void *)&long long v122 = 0x657261685369646FLL;
        *((void *)&v122 + 1) = 0xEF726567676F4C64;
        LOBYTE(error[0]) = 16;
        CoreODILogger.debug(_:category:)(0xD00000000000001BLL, 0x8000000214D31AE0, error);
        char v19 = sub_214BC5610(v5) >> 16;
        swift_bridgeObjectRelease();
        if (v19 == 16)
        {
          unsigned __int8 v20 = 0;
        }
        else
        {
          sub_214BC5D1C(v19);
          unsigned __int8 v20 = (void *)sub_214D1A028();
          swift_bridgeObjectRelease();
        }
        char v23 = (unsigned __int16)sub_214BC5610(v5) >> 8;
        swift_bridgeObjectRelease();
        if (v23 == 16)
        {
          uint64_t v24 = 0;
        }
        else
        {
          sub_214BC5D1C(v23);
          uint64_t v24 = (void *)sub_214D1A028();
          swift_bridgeObjectRelease();
        }
        sub_214BC58A8((char)v5);
        uint64_t v5 = (void *)sub_214D1A028();
        swift_bridgeObjectRelease();
        ApplePayModelSigning = (void *)DIPSecPolicyCreateApplePinned();

        LOBYTE(v5) = v111;
        break;
    }
    sub_214BC5610(v5);
    uint64_t v120 = v25;
    id v26 = ApplePayModelSigning;
    MEMORY[0x2166AFD10]();
    if (*(void *)(v120 + 16) >= *(void *)(v120 + 24) >> 1) {
      sub_214D1A298();
    }
    id v117 = v26;
    sub_214D1A2B8();
    sub_214D1A288();
    trust[0] = 0;
    type metadata accessor for SecCertificate(0);
    uint64_t v27 = (void *)sub_214D1A258();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4350);
    uint64_t v28 = (void *)sub_214D1A258();
    swift_bridgeObjectRelease();
    OSStatus v29 = SecTrustCreateWithCertificates(v27, v28, trust);

    if (!v29)
    {
      SecTrustRef v30 = trust[0];
      if (trust[0])
      {
        if (a3)
        {
          long long v31 = trust[0];
          CFArrayRef v32 = (const __CFArray *)sub_214D1A258();
          uint64_t v33 = v31;
          OSStatus v34 = SecTrustSetAnchorCertificates(v31, v32);

          if (v34)
          {
            swift_bridgeObjectRelease();
            uint64_t v123 = MEMORY[0x263F8E548];
            LODWORD(v122) = v34;
            sub_214B5EC20(&v122, error);
            uint64_t v35 = (uint64_t)v116;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)unint64_t result = v35;
            sub_214B8E200(error, 20, isUniquelyReferenced_nonNull_native);
            uint64_t v14 = *(__SecTrust **)result;
            swift_bridgeObjectRelease();
            *(void *)&long long v122 = 0;
            *((void *)&v122 + 1) = 0xE000000000000000;
            sub_214D1A7A8();
            sub_214D1A108();
            CFStringRef v37 = SecCopyErrorMessageString(v34, 0);
            if (v37)
            {
              uint64_t v38 = (__CFString *)v37;
              double v39 = (__CFError *)sub_214D1A038();
              uint64_t v41 = v40;
            }
            else
            {
              double v39 = 0;
              uint64_t v41 = 0;
            }
            id v49 = v117;
            error[0] = v39;
            error[1] = v41;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
            sub_214D1A908();
            swift_bridgeObjectRelease();
            uint64_t v88 = v122;
            LOWORD(v122) = 121;
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v88, *((uint64_t *)&v122 + 1), 0, (unsigned __int16 *)&v122, 0, (uint64_t)v14, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 323);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_willThrow();

LABEL_55:
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v51 = trust[0];
        }
        char v110 = v30;
        error[0] = 0;
        if (qword_26ACE40F8 != -1) {
          swift_once();
        }
        uint64_t v52 = qword_26ACEB9F0;
        uint64_t v53 = *(void *)algn_26ACEB9F8;
        char v54 = byte_26ACEBA00;
        uint64_t v55 = (void *)qword_26ACEBA08;
        int v56 = byte_26ACEBA10;
        *((void *)v11 + 4) = "enableTelemetry=YES";
        *((void *)v11 + 5) = 19;
        v11[48] = 2;
        *(void *)uint64_t v11 = v52;
        *((void *)v11 + 1) = v53;
        unsigned char v11[16] = v54;
        *((void *)v11 + 3) = v55;
        id v57 = v55;
        sub_214D19EA8();
        sub_214D1A588();
        if (v56 == 1) {
          sub_214D19E88();
        }
        else {
          sub_214D19E98();
        }

        uint64_t v58 = (uint64_t)v112;
        sub_214B6A2A8((uint64_t)v11, (uint64_t)v112);
        uint64_t v14 = v110;
        BOOL v59 = SecTrustEvaluateWithError(v110, error);
        CFErrorRef v60 = error[0];
        sub_214D1A578();
        sub_214D19E98();
        id v61 = v117;
        if (v60)
        {
          id v62 = objc_msgSend(self, sel_standardUserDefaults);
          if (qword_26ACE38D8 != -1) {
            swift_once();
          }
          if (byte_26ACEB960 == 1)
          {
            uint64_t v63 = (void *)sub_214D1A028();
            unsigned __int8 v64 = objc_msgSend(v62, sel_BOOLForKey_, v63);

            if (v64)
            {
              if (qword_26ACE41D8 != -1) {
                swift_once();
              }
              id v65 = (id)qword_26ACEBA50;
              sub_214D1A498();
              v109[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
              uint64_t v66 = swift_allocObject();
              *(_OWORD *)(v66 + 16) = v114;
              *(void *)&long long v122 = 0;
              *((void *)&v122 + 1) = 0xE000000000000000;
              LOBYTE(result[0]) = v111;
              sub_214D1A908();
              unint64_t v68 = *((void *)&v122 + 1);
              unint64_t v67 = v122;
              *(void *)(v66 + 56) = MEMORY[0x263F8D310];
              unint64_t v113 = sub_214B5F3EC();
              *(void *)(v66 + 64) = v113;
              *(_OWORD *)(v66 + 32) = __PAIR128__(v68, v67);
              sub_214D19E78();

              swift_bridgeObjectRelease();
              *(void *)&long long v122 = MEMORY[0x263F8EE78];
              long long v69 = v60;
              sub_214B67D50(0, v17, 0);
              uint64_t v70 = v122;
              *(void *)&long long v114 = v69;
              if ((a1 & 0xC000000000000001) != 0)
              {
                uint64_t v71 = 0;
                do
                {
                  long long v72 = (__SecCertificate *)MEMORY[0x2166B0290](v71, a1);
                  CFDataRef v73 = SecCertificateCopyData(v72);
                  uint64_t v74 = sub_214D19B68();
                  unint64_t v76 = v75;

                  uint64_t v77 = sub_214D19B48();
                  uint64_t v79 = v78;
                  sub_214B58A4C(v74, v76);
                  swift_unknownObjectRelease();
                  *(void *)&long long v122 = v70;
                  unint64_t v81 = *(void *)(v70 + 16);
                  unint64_t v80 = *(void *)(v70 + 24);
                  if (v81 >= v80 >> 1)
                  {
                    sub_214B67D50(v80 > 1, v81 + 1, 1);
                    uint64_t v70 = v122;
                  }
                  ++v71;
                  *(void *)(v70 + 16) = v81 + 1;
                  uint64_t v82 = v70 + 16 * v81;
                  *(void *)(v82 + 32) = v77;
                  *(void *)(v82 + 40) = v79;
                }
                while (v17 != v71);
              }
              else
              {
                uint64_t v90 = (id *)(a1 + 32);
                do
                {
                  uint64_t v91 = (__SecCertificate *)*v90;
                  CFDataRef v92 = SecCertificateCopyData(v91);
                  uint64_t v93 = sub_214D19B68();
                  unint64_t v95 = v94;

                  uint64_t v96 = sub_214D19B48();
                  uint64_t v98 = v97;
                  sub_214B58A4C(v93, v95);

                  *(void *)&long long v122 = v70;
                  unint64_t v100 = *(void *)(v70 + 16);
                  unint64_t v99 = *(void *)(v70 + 24);
                  if (v100 >= v99 >> 1)
                  {
                    sub_214B67D50(v99 > 1, v100 + 1, 1);
                    uint64_t v70 = v122;
                  }
                  *(void *)(v70 + 16) = v100 + 1;
                  uint64_t v101 = v70 + 16 * v100;
                  *(void *)(v101 + 32) = v96;
                  *(void *)(v101 + 40) = v98;
                  ++v90;
                  --v17;
                }
                while (v17);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v102 = (id)qword_26ACEBA50;
              sub_214D1A4A8();
              uint64_t v103 = swift_allocObject();
              *(_OWORD *)(v103 + 16) = xmmword_214D1EB80;
              *(void *)&long long v122 = 0;
              *((void *)&v122 + 1) = 0xE000000000000000;
              LOBYTE(result[0]) = v111;
              sub_214D1A908();
              long long v104 = v122;
              uint64_t v105 = MEMORY[0x263F8D310];
              unint64_t v106 = v113;
              *(void *)(v103 + 56) = MEMORY[0x263F8D310];
              *(void *)(v103 + 64) = v106;
              *(_OWORD *)(v103 + 32) = v104;
              *(void *)&long long v122 = 0;
              *((void *)&v122 + 1) = 0xE000000000000000;
              long long v107 = (void *)v114;
              *(void *)unint64_t result = v114;
              type metadata accessor for CFError(0);
              sub_214D1A908();
              long long v108 = v122;
              *(void *)(v103 + 96) = v105;
              *(void *)(v103 + 104) = v106;
              *(_OWORD *)(v103 + 72) = v108;
              *(void *)(v103 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
              *(void *)(v103 + 144) = sub_214BC710C();
              *(void *)(v103 + 112) = v70;
              sub_214D19E78();

              swift_bridgeObjectRelease();
              sub_214B6A30C((uint64_t)v112);

              uint64_t v14 = v110;
              goto LABEL_56;
            }
          }
          else
          {
          }
          swift_bridgeObjectRelease();
          type metadata accessor for CFError(0);
          sub_214BC70B4();
          uint64_t v85 = (void *)swift_allocError();
          *uint64_t v86 = v60;
          LOWORD(v122) = 210;
          uint64_t v87 = v60;
          uint64_t v14 = v116;
          DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x8000000214D318D0, v85, (unsigned __int16 *)&v122, 0, (uint64_t)v116, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 350);

          swift_bridgeObjectRelease();
          swift_willThrow();
        }
        else
        {
          swift_bridgeObjectRelease();
          result[0] = kSecTrustResultInvalid;
          if (!SecTrustGetTrustResult(v14, result)
            && (result[0] == kSecTrustResultUnspecified || result[0] == kSecTrustResultProceed))
          {
            if (v59)
            {
              sub_214B6A30C(v58);
              swift_bridgeObjectRelease();

              goto LABEL_56;
            }
            LOWORD(v122) = 210;
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000035, 0x8000000214D31A20, 0, (unsigned __int16 *)&v122, 0, (uint64_t)v116, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 362);
            swift_bridgeObjectRelease();
            swift_willThrow();
          }
          else
          {
            *(void *)&long long v122 = 0;
            *((void *)&v122 + 1) = 0xE000000000000000;
            sub_214D1A7A8();
            uint64_t v83 = v14;
            sub_214D1A108();
            SecTrustResultType v118 = result[0];
            sub_214D1AB78();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            uint64_t v84 = v122;
            LOWORD(v122) = 210;
            uint64_t v14 = v116;
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v84, *((uint64_t *)&v122 + 1), 0, (unsigned __int16 *)&v122, 0, (uint64_t)v116, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 358);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_willThrow();
          }
        }
        sub_214B6A30C(v58);

LABEL_56:
        return v14;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v123 = MEMORY[0x263F8E548];
    LODWORD(v122) = v29;
    sub_214B5EC20(&v122, error);
    uint64_t v42 = (uint64_t)v116;
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t result = v42;
    sub_214B8E200(error, 20, v43);
    uint64_t v14 = *(__SecTrust **)result;
    swift_bridgeObjectRelease();
    *(void *)&long long v122 = 0;
    *((void *)&v122 + 1) = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    CFStringRef v44 = SecCopyErrorMessageString(v29, 0);
    if (v44)
    {
      double v45 = (__CFString *)v44;
      double v46 = (__CFError *)sub_214D1A038();
      uint64_t v48 = v47;
    }
    else
    {
      double v46 = 0;
      uint64_t v48 = 0;
    }
    id v49 = v117;
    error[0] = v46;
    error[1] = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
    sub_214D1A908();
    swift_bridgeObjectRelease();
    uint64_t v50 = v122;
    LOWORD(v122) = 121;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v50, *((uint64_t *)&v122 + 1), 0, (unsigned __int16 *)&v122, 0, (uint64_t)v14, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 314);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    goto LABEL_55;
  }
  LOWORD(v122) = 210;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x8000000214D31770, 0, (unsigned __int16 *)&v122, 0, v16, 0xD00000000000006DLL, 0x8000000214D317B0, 0xD000000000000018, 0x8000000214D31820, 266);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return v14;
}

unint64_t sub_214BC70B4()
{
  unint64_t result = qword_26ACE44F0;
  if (!qword_26ACE44F0)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE44F0);
  }
  return result;
}

unint64_t sub_214BC710C()
{
  unint64_t result = qword_26784D470;
  if (!qword_26784D470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE42E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D470);
  }
  return result;
}

id sub_214BC7168()
{
  uint64_t v0 = sub_214D19D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  unint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  sub_214D19CD8();
  uint64_t v6 = (void *)sub_214D19D08();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v5, sel_setLocale_, v6);

  id result = objc_msgSend(v5, sel_setMaximumFractionDigits_, 2);
  qword_26784D478 = (uint64_t)v5;
  return result;
}

uint64_t sub_214BC72A4()
{
  uint64_t v0 = sub_214D19EE8();
  __swift_allocate_value_buffer(v0, qword_26ACE3BA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26ACE3BA0);
  return sub_214D19ED8();
}

id sub_214BC7314()
{
  return sub_214BC736C(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession, 0xD00000000000003CLL, 0x8000000214D31F70, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration);
}

id sub_214BC7340()
{
  return sub_214BC736C(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession, 0xD000000000000045, 0x8000000214D31F20, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration);
}

id sub_214BC736C(uint64_t *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    uint64_t v11 = v4;
    uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
    uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    uint64_t v19 = v12;
    char v17 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(a2, a3, &v17);
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, *(void *)(v4 + *a4), v4, 0);
    uint64_t v14 = *(void **)(v4 + v5);
    *(void *)(v11 + v5) = v13;
    id v7 = v13;

    uint64_t v6 = 0;
  }
  id v15 = v6;
  return v7;
}

uint64_t sub_214BC7464()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8];
  v8[2] = *(void *)&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger];
  void v8[3] = v1;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  id v2 = objc_msgSend(v0, sel_debugDescription);
  uint64_t v3 = sub_214D1A038();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();

  v8[0] = v3;
  v8[1] = v5;
  sub_214D1A108();
  uint64_t v6 = (void *)MEMORY[0x2166B1650](&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_owner]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3628);
  sub_214D1A5C8();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A5C8();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(v8[0]) = 14;
  CoreODILogger.debug(_:category:)(v3, v5, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectWeakAssign();
}

char *sub_214BC75FC(uint64_t a1)
{
  uint64_t v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &qword_26784D000;
  *(void *)&v1[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession] = 0;
  id v7 = &qword_26784D000;
  *(void *)&v1[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession] = 0;
  uint64_t v8 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state;
  type metadata accessor for DIPHTTPSession.SessionState();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = v1;
  swift_defaultActor_initialize();
  v9[14] = 0;
  v9[15] = 0;
  *(void *)&v3[v8] = v9;
  uint64_t v11 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger];
  *(void *)uint64_t v11 = 45;
  *((void *)v11 + 1) = 0xE100000000000000;
  swift_unknownObjectWeakInit();
  uint64_t v12 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration];
  long long v13 = *(_OWORD *)a1;
  long long v14 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v12 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v12 + 2) = v14;
  *(_OWORD *)uint64_t v12 = v13;
  uint64_t v15 = *(void *)(a1 + 8);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  char v18 = *(unsigned char *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 16);
  unsigned __int8 v20 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier];
  *(void *)unsigned __int8 v20 = v17;
  *((void *)v20 + 1) = v19;
  v20[16] = v18;
  *((void *)v20 + 3) = 0;
  v20[32] = 1;
  uint64_t v21 = self;
  sub_214BD0658(a1);
  uint64_t v3 = (char *)objc_msgSend(v21, sel_defaultSessionConfiguration);
  uint64_t v9 = objc_msgSend(v21, sel_defaultSessionConfiguration);
  double v22 = *(double *)a1;
  objc_msgSend(v3, sel_setTimeoutIntervalForRequest_, *(double *)a1);
  objc_msgSend(v9, sel_setTimeoutIntervalForRequest_, v22);
  objc_msgSend(v3, sel_setURLCache_, 0);
  objc_msgSend(v9, sel_setURLCache_, 0);
  objc_msgSend(v3, sel_setRequestCachePolicy_, 1);
  objc_msgSend(v9, sel_setRequestCachePolicy_, 1);
  sub_214B6AC38(a1 + 32, (uint64_t)v43, &qword_26ACE4288);
  sub_214B6AC38((uint64_t)v43, (uint64_t)&v44, &qword_26ACE4288);
  uint64_t v8 = v45;
  if (!v45)
  {
    sub_214BD0684(a1);
    if ((*(unsigned char *)(a1 + 26) & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  uint64_t v2 = v44;
  sub_214BD0658(a1);
  if (qword_26ACE41D8 != -1) {
    goto LABEL_12;
  }
LABEL_4:
  id v23 = (id)qword_26ACEBA50;
  sub_214D1A498();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_214D1C1E0;
  *(void *)(v24 + 56) = MEMORY[0x263F8D310];
  *(void *)(v24 + 64) = sub_214B5F3EC();
  *(void *)(v24 + 32) = v2;
  *(void *)(v24 + 40) = v8;
  sub_214BD0658(a1);
  sub_214D19E78();

  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)sub_214D1A028();
  objc_msgSend(v3, sel_set_sourceApplicationBundleIdentifier_, v25);

  id v26 = (void *)sub_214D1A028();
  sub_214BD0684(a1);
  objc_msgSend(v9, sel_set_sourceApplicationBundleIdentifier_, v26);

  sub_214BD0684(a1);
  id v7 = &qword_26784D000;
  uint64_t v6 = &qword_26784D000;
  if ((*(unsigned char *)(a1 + 26) & 1) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  id v27 = objc_msgSend(self, sel_mainBundle);
  id v28 = objc_msgSend(v27, sel_bundleIdentifier);

  if (v28)
  {
    sub_214D1A038();

    id v28 = (id)sub_214D1A028();
    swift_bridgeObjectRelease();
  }
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F29120]), sel_initWithIdentifier_, v28);

  objc_msgSend(v3, sel_set_appleIDContext_, v29);
LABEL_10:
  *(void *)&v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration] = v3;
  *(void *)&v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration] = v9;
  SecTrustRef v30 = v3;
  long long v31 = v9;

  v42.receiver = v10;
  v42.super_class = ObjectType;
  id v32 = objc_msgSendSuper2(&v42, sel_init);
  uint64_t v33 = self;
  OSStatus v34 = (char *)v32;
  id v35 = objc_msgSend(v33, sel_sessionWithConfiguration_delegate_delegateQueue_, v30, v34, 0);
  uint64_t v36 = v6[145];
  CFStringRef v37 = *(void **)&v34[v36];
  *(void *)&v34[v36] = v35;

  id v38 = objc_msgSend(v33, sel_sessionWithConfiguration_delegate_delegateQueue_, v31, v34, 0);
  uint64_t v39 = v7[146];
  uint64_t v40 = *(void **)&v34[v39];
  *(void *)&v34[v39] = v38;

  return v34;
}

uint64_t sub_214BC7B4C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_214D1A7A8();
  v6.receiver = v0;
  v6.super_class = ObjectType;
  id v2 = objc_msgSendSuper2(&v6, sel_description);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A408();
  sub_214D1A108();
  id v3 = sub_214BC736C(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession, 0xD00000000000003CLL, 0x8000000214D31F70, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration);
  id v4 = objc_msgSend(v3, sel_sessionDescription);

  if (v4)
  {
    sub_214D1A038();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_214BC7D48(char a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession;
    id v4 = *(void **)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession);
    if (!v4)
    {
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      uint64_t v15 = v5;
      char v13 = 14;
      swift_bridgeObjectRetain();
      CoreODILogger.fault(_:category:)(0xD000000000000045, 0x8000000214D31F20, &v13);
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration), v1, 0);
LABEL_7:
      id v9 = v6;
      uint64_t v10 = *(void **)(v1 + v3);
      *(void *)(v2 + v3) = v9;
      id v7 = v9;

      id v4 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession;
    id v4 = *(void **)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession);
    if (!v4)
    {
      uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      uint64_t v15 = v8;
      char v13 = 14;
      swift_bridgeObjectRetain();
      CoreODILogger.fault(_:category:)(0xD00000000000003CLL, 0x8000000214D31F70, &v13);
      swift_bridgeObjectRelease();
      id v6 = objc_msgSend(self, sel_sessionWithConfiguration_delegate_delegateQueue_, *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration), v1, 0);
      goto LABEL_7;
    }
  }
  id v7 = v4;
LABEL_8:
  id v11 = v4;
  return v7;
}

uint64_t sub_214BC7ED8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 57) = a4;
  *(unsigned char *)(v5 + 56) = a3;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x270FA2498](sub_214BC7F04, 0, 0);
}

uint64_t sub_214BC7F04()
{
  char v1 = *(unsigned char *)(v0 + 56);
  id v2 = objc_allocWithZone(MEMORY[0x263F089E0]);
  uint64_t v3 = (void *)sub_214D19A28();
  id v4 = objc_msgSend(v2, sel_initWithURL_, v3);
  *(void *)(v0 + 40) = v4;

  if ((v1 & 1) == 0)
  {
    uint64_t v22 = swift_task_alloc();
    *(void *)(v0 + 48) = v22;
    *(void *)uint64_t v22 = v0;
    *(void *)(v22 + 8) = sub_214BC8214;
    uint64_t v23 = *(void *)(v0 + 32);
    *(unsigned char *)(v22 + 192) = *(unsigned char *)(v0 + 57);
    *(void *)(v22 + 72) = v4;
    *(void *)(v22 + 80) = v23;
    uint64_t v12 = (uint64_t)sub_214BC8564;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    return MEMORY[0x270FA2498](v12, v13, v14);
  }
  uint64_t v5 = *(void *)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 40), sel_setCachePolicy_, 1);
  if (!v5)
  {
LABEL_27:
    uint64_t v24 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v25 = *(void *)(v0 + 40);
    return v24(v25);
  }
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v27 = v6 + 64;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  uint64_t v10 = v8 & v7;
  int64_t v11 = (unint64_t)(63 - v9) >> 6;
  uint64_t v12 = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    if (v10)
    {
      v10 &= v10 - 1;
      goto LABEL_7;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v11) {
      goto LABEL_26;
    }
    uint64_t v20 = *(void *)(v27 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v11) {
        goto LABEL_26;
      }
      uint64_t v20 = *(void *)(v27 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v11) {
          goto LABEL_26;
        }
        uint64_t v20 = *(void *)(v27 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v10 = (v20 - 1) & v20;
LABEL_7:
    BOOL v16 = *(void **)(v0 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    char v18 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setValue_forHTTPHeaderField_, v17, v18);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v11)
  {
LABEL_26:
    swift_release();
    goto LABEL_27;
  }
  uint64_t v20 = *(void *)(v27 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_26;
    }
    uint64_t v20 = *(void *)(v27 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_214BC8214()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC8310, 0, 0);
}

void sub_214BC8310()
{
  uint64_t v1 = *(void *)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 40), sel_setCachePolicy_, 1);
  if (!v1)
  {
LABEL_23:
    int64_t v15 = *(void (**)(uint64_t))(v0 + 8);
    uint64_t v16 = *(void *)(v0 + 40);
    v15(v16);
    return;
  }
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v17 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  uint64_t v6 = v4 & v3;
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_6;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v7) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v17 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_22;
      }
      uint64_t v13 = *(void *)(v17 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v7) {
          goto LABEL_22;
        }
        uint64_t v13 = *(void *)(v17 + 8 * v8);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_6:
    uint64_t v9 = *(void **)(v0 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    int64_t v11 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setValue_forHTTPHeaderField_, v10, v11);
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v7)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v17 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_22;
    }
    uint64_t v13 = *(void *)(v17 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_214BC8540(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 192) = a2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v2;
  return MEMORY[0x270FA2498](sub_214BC8564, 0, 0);
}

uint64_t sub_214BC8564()
{
  if ((*(unsigned char *)(v0 + 192) & 1) != 0
    || *(unsigned char *)(*(void *)(v0 + 80) + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) != 1)
  {
    uint64_t v4 = *(void **)(v0 + 72);
    id v5 = objc_msgSend(self, sel__deviceLanguage);
    uint64_t v6 = (void *)sub_214D1A028();
    objc_msgSend(v4, sel_setValue_forHTTPHeaderField_, v5, v6);

    id v7 = objc_msgSend(v4, sel_HTTPBody);
    if (v7)
    {
      int64_t v8 = v7;
      uint64_t v9 = sub_214D19B68();
      unint64_t v11 = v10;

      switch(v11 >> 62)
      {
        case 1uLL:
          sub_214B58A4C(v9, v11);
          LODWORD(v12) = HIDWORD(v9) - v9;
          if (__OFSUB__(HIDWORD(v9), v9))
          {
            __break(1u);
            JUMPOUT(0x214BC8854);
          }
          uint64_t v12 = (int)v12;
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v9 + 16);
          uint64_t v13 = *(void *)(v9 + 24);
          sub_214B58A4C(v9, v11);
          uint64_t v12 = v13 - v14;
          if (__OFSUB__(v13, v14))
          {
            __break(1u);
            goto LABEL_12;
          }
          break;
        case 3uLL:
LABEL_12:
          sub_214B58A4C(v9, v11);
          goto LABEL_13;
        default:
          sub_214B58A4C(v9, v11);
          uint64_t v12 = BYTE6(v11);
          break;
      }
    }
    else
    {
LABEL_13:
      uint64_t v12 = 0;
    }
    int64_t v15 = *(void **)(v0 + 72);
    *(void *)(v0 + 64) = v12;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)sub_214D1A028();
    objc_msgSend(v15, sel_setValue_forHTTPHeaderField_, v16, v17);

    if (qword_26784C878 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_2678635D8;
    *(void *)(v0 + 96) = qword_2678635D8;
    uint64_t v2 = sub_214BC8BD8;
  }
  else
  {
    uint64_t v1 = swift_task_alloc();
    *(void *)(v0 + 88) = v1;
    *(void *)uint64_t v1 = v0;
    *(void *)(v1 + 8) = sub_214BC8864;
    *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 72);
    uint64_t v2 = sub_214BCCA5C;
    uint64_t v3 = 0;
  }
  return MEMORY[0x270FA2498](v2, v3, 0);
}

uint64_t sub_214BC8864()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC8960, 0, 0);
}

uint64_t sub_214BC8960()
{
  uint64_t v1 = (void *)v0[9];
  id v2 = objc_msgSend(self, sel__deviceLanguage);
  uint64_t v3 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  id v4 = objc_msgSend(v1, sel_HTTPBody);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_214D19B68();
    unint64_t v8 = v7;

    switch(v8 >> 62)
    {
      case 1uLL:
        sub_214B58A4C(v6, v8);
        LODWORD(v9) = HIDWORD(v6) - v6;
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
          JUMPOUT(0x214BC8BC8);
        }
        uint64_t v9 = (int)v9;
        break;
      case 2uLL:
        uint64_t v11 = *(void *)(v6 + 16);
        uint64_t v10 = *(void *)(v6 + 24);
        sub_214B58A4C(v6, v8);
        uint64_t v9 = v10 - v11;
        if (__OFSUB__(v10, v11))
        {
          __break(1u);
          goto LABEL_9;
        }
        break;
      case 3uLL:
LABEL_9:
        sub_214B58A4C(v6, v8);
        goto LABEL_10;
      default:
        sub_214B58A4C(v6, v8);
        uint64_t v9 = BYTE6(v8);
        break;
    }
  }
  else
  {
LABEL_10:
    uint64_t v9 = 0;
  }
  uint64_t v12 = (void *)v0[9];
  v0[8] = v9;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_214D1A028();
  objc_msgSend(v12, sel_setValue_forHTTPHeaderField_, v13, v14);

  if (qword_26784C878 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_2678635D8;
  v0[12] = qword_2678635D8;
  return MEMORY[0x270FA2498](sub_214BC8BD8, v15, 0);
}

uint64_t sub_214BC8BD8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    v0[16] = *(void *)(v1 + 112);
    v0[17] = v2;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_214BC8E48;
  }
  else
  {
    id v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    void *v4 = v0;
    v4[1] = sub_214BC8CAC;
    uint64_t v3 = sub_214BCE8E8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214BC8CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 96);
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BC8DC4, v4, 0);
}

uint64_t sub_214BC8DC4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  *(void *)(v2 + 112) = v0[14];
  *(void *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[15];
  v0[16] = v0[14];
  v0[17] = v3;
  return MEMORY[0x270FA2498](sub_214BC8E48, 0, 0);
}

uint64_t sub_214BC8E48()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26ACE4030;
  *(void *)(v0 + 144) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BC8F54, v4, 0);
}

uint64_t sub_214BC8F54()
{
  uint64_t v1 = *(void *)(v0 + 144);
  if (*(unsigned char *)(v1 + 168))
  {
    return MEMORY[0x270FA2498](sub_214BC9134, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    void *v2 = v0;
    v2[1] = sub_214BC9024;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214BC9024()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_214BC9134, v2, 0);
}

uint64_t sub_214BC9134()
{
  uint64_t v1 = v0[18];
  unint64_t v2 = sub_214BCF9A8();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[20] = v3;
  void v3[2] = v1;
  v3[3] = 0xD000000000000010;
  v3[4] = 0x8000000214D32470;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  void *v4 = v0;
  v4[1] = sub_214BC926C;
  return MEMORY[0x270FA2318](v0 + 2, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BC4F98, v3, v5);
}

uint64_t sub_214BC926C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 176) = *(_OWORD *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_214BC93A8, v2, 0);
}

uint64_t sub_214BC93A8()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_214BC9410, 0, 0);
}

uint64_t sub_214BC9410()
{
  if (*(void *)(v0 + 184))
  {
    uint64_t v1 = *(void **)(v0 + 72);
    uint64_t v2 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)sub_214D1A028();
    objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);
  }
  objc_msgSend(*(id *)(v0 + 72), sel_ak_addClientInfoHeader);
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v5 = (void *)sub_214D1A028();
  id v6 = objc_msgSend(v4, sel_stringForKey_, v5);

  if (!v6) {
    goto LABEL_5;
  }
  uint64_t v7 = sub_214D1A038();
  uint64_t v9 = v8;

  *(void *)(v0 + 32) = v7;
  *(void *)(v0 + 40) = v9;
  *(void *)(v0 + 48) = 1685025392;
  *(void *)(v0 + 56) = 0xE400000000000000;
  sub_214BBD7FC();
  uint64_t v10 = sub_214D1A638();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_5:
    uint64_t v11 = *(void **)(v0 + 72);
    uint64_t v12 = (void *)sub_214D1A028();
    uint64_t v13 = (void *)sub_214D1A028();
    objc_msgSend(v11, sel_setValue_forHTTPHeaderField_, v12, v13);
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_214BC961C(uint64_t a1, char a2, char a3, unsigned char *a4)
{
  *(unsigned char *)(v5 + 50) = a3;
  *(unsigned char *)(v5 + 49) = a2;
  *(void *)(v5 + 88) = a1;
  *(void *)(v5 + 96) = v4;
  uint64_t v7 = sub_214D19738();
  *(void *)(v5 + 104) = v7;
  *(void *)(v5 + 112) = *(void *)(v7 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  uint64_t v8 = sub_214D19AA8();
  *(void *)(v5 + 128) = v8;
  *(void *)(v5 + 136) = *(void *)(v8 - 8);
  *(void *)(v5 + 144) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  *(void *)(v5 + 152) = swift_task_alloc();
  *(void *)(v5 + 160) = swift_task_alloc();
  *(unsigned char *)(v5 + 51) = *a4;
  return MEMORY[0x270FA2498](sub_214BC978C, 0, 0);
}

uint64_t sub_214BC978C()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  id v2 = objc_msgSend(v1, sel_URL);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_214D19A48();

    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, v4, 1, v7);
  sub_214B6AC38(v5, v6, (uint64_t *)&unk_26ACE3B00);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  uint64_t v10 = *(void *)(v0 + 160);
  if (v9)
  {
    sub_214B59CE0(*(void *)(v0 + 160), (uint64_t *)&unk_26ACE3B00);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 16))(v11, *(void *)(v0 + 160), v13);
    sub_214B59CE0(v10, (uint64_t *)&unk_26ACE3B00);
    sub_214D199E8();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  char v45 = *(unsigned char *)(v0 + 51);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  char v46 = *(unsigned char *)(v0 + 49);
  uint64_t v47 = *(void *)(v0 + 104);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v16 = v49;
  LOBYTE(v49) = v45;
  CoreODILogger.info(_:category:)(v16, v50, &v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214D196E8();
  LOBYTE(v49) = v45;
  id v17 = sub_214BC9F74(v14, (unsigned __int8 *)&v49);
  char v19 = v18;
  *(void *)(v0 + 168) = v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v47);
  if ((v46 & 1) != 0 || (v19 & 1) == 0)
  {
    if (v17)
    {
      uint64_t v28 = qword_26ACE3BD0;
      id v29 = v17;
      if (v28 != -1) {
        swift_once();
      }
      sub_214C06AC8(v29);
      if (v30)
      {
        long long v31 = *(void **)(v0 + 88);
        id v32 = (void *)sub_214D1A028();
        swift_bridgeObjectRelease();
        uint64_t v33 = (void *)sub_214D1A028();
        objc_msgSend(v31, sel_addValue_forHTTPHeaderField_, v32, v33);
      }
    }
  }
  else if (v17)
  {
    id v20 = v17;
    id v21 = objc_msgSend(v20, sel_data);
    uint64_t v22 = sub_214D19B68();
    uint64_t v24 = v23;

    id v25 = objc_msgSend(v20, sel_response);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v26 = *(uint64_t (**)(uint64_t, uint64_t, id, uint64_t))(v0 + 8);
    return v26(v22, v24, v25, 1);
  }
  id v35 = *(void **)(v0 + 88);
  OSStatus v34 = *(unsigned char **)(v0 + 96);
  long long v37 = *(_OWORD *)&v34[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier];
  long long v36 = *(_OWORD *)&v34[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier + 16];
  *(unsigned char *)(v0 + 48) = v34[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier + 32];
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_26784D3A0
                                                                                  + dword_26784D3A0);
  *(_OWORD *)(v0 + 16) = v37;
  *(_OWORD *)(v0 + 32) = v36;
  id v38 = v17;
  uint64_t v39 = v34;
  id v40 = v35;
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_214BC9D08;
  char v42 = *(unsigned char *)(v0 + 50);
  uint64_t v44 = *(void *)(v0 + 88);
  uint64_t v43 = *(void *)(v0 + 96);
  return v48(v0 + 56, v0 + 16, v43, v44, v42, (uint64_t)v17);
}

uint64_t sub_214BC9D08()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_214BC9EDC;
  }
  else {
    id v2 = sub_214BC9E1C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BC9E1C()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v1, v3, v4);
}

uint64_t sub_214BC9EDC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_214BC9F74(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_214D19C78();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8, v10);
  unint64_t v113 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v13);
  uint64_t v15 = (char *)&v104 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  uint64_t v18 = MEMORY[0x270FA5388](v16 - 8, v17);
  id v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v18, v21);
  uint64_t v24 = MEMORY[0x270FA5388](v22, v23);
  MEMORY[0x270FA5388](v24, v25);
  uint64_t v28 = MEMORY[0x270FA5388]((char *)&v104 - v26, v27);
  uint64_t v30 = MEMORY[0x270FA5388](v28, v29);
  id v32 = (char *)&v104 - v31;
  uint64_t v34 = MEMORY[0x270FA5388](v30, v33);
  uint64_t v39 = (char *)&v104 - v38;
  uint64_t v114 = v2;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 27) != 1) {
    return 0;
  }
  uint64_t v105 = v34;
  uint64_t v106 = v37;
  uint64_t v109 = v36;
  uint64_t v110 = v35;
  uint64_t v111 = v8;
  int v107 = *a2;
  id v40 = self;
  id v41 = objc_msgSend(v40, sel_standardUserDefaults);
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  long long v108 = v15;
  uint64_t v112 = v9;
  if (byte_26ACEB960 == 1)
  {
    char v42 = (void *)sub_214D1A028();
    unsigned __int8 v43 = objc_msgSend(v41, sel_BOOLForKey_, v42);

    if (v43) {
      return 0;
    }
  }
  else
  {
  }
  uint64_t v44 = sub_214D196A8();
  if (!v45) {
    return 0;
  }
  if (v44 == 5522759 && v45 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v47 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  if ((v47 & 1) == 0) {
    return 0;
  }
LABEL_13:
  if (qword_26ACE3BD0 != -1) {
    swift_once();
  }
  uint64_t v48 = (void *)qword_26ACEB9E0;
  uint64_t v49 = (void *)sub_214D196C8();
  id v46 = objc_msgSend(v48, sel_cachedResponseForRequest_, v49);

  if (!v46)
  {
    uint64_t v60 = *(void *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
    uint64_t v117 = *(void *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    uint64_t v118 = v60;
    *(void *)&long long v119 = 0;
    *((void *)&v119 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    *(void *)&long long v119 = 0xD00000000000001CLL;
    *((void *)&v119 + 1) = 0x8000000214D32350;
    sub_214D19708();
    uint64_t v61 = sub_214D19AA8();
    uint64_t v62 = *(void *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v20, 1, v61) == 1)
    {
      sub_214B59CE0((uint64_t)v20, (uint64_t *)&unk_26ACE3B00);
    }
    else
    {
      sub_214D199E8();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v61);
    }
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v79 = v119;
    LOBYTE(v119) = 14;
    CoreODILogger.debug(_:category:)(v79, *((unint64_t *)&v119 + 1), &v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id v50 = objc_msgSend(v40, sel_standardUserDefaults);
  uint64_t v51 = v50;
  if (byte_26ACEB960 == 1)
  {
    uint64_t v52 = (void *)sub_214D1A028();
    unsigned __int8 v53 = objc_msgSend(v51, sel_BOOLForKey_, v52);

    uint64_t v54 = v112;
    if (v53)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v55 = (id)qword_26ACEBA50;
      sub_214D1A488();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_214D1C1E0;
      id v57 = objc_msgSend(v46, sel_response);
      id v58 = objc_msgSend(v57, sel_URL);

      if (v58)
      {
        sub_214D19A48();

        uint64_t v59 = sub_214D19AA8();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v32, 0, 1, v59);
      }
      else
      {
        uint64_t v59 = sub_214D19AA8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v32, 1, 1, v59);
      }
      sub_214B6AC38((uint64_t)v32, (uint64_t)v39, (uint64_t *)&unk_26ACE3B00);
      sub_214D19AA8();
      uint64_t v95 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v39, 1, v59) == 1)
      {
        sub_214B59CE0((uint64_t)v39, (uint64_t *)&unk_26ACE3B00);
        uint64_t v96 = 0;
        unint64_t v97 = 0;
      }
      else
      {
        uint64_t v96 = sub_214D199E8();
        unint64_t v97 = v98;
        (*(void (**)(char *, uint64_t))(v95 + 8))(v39, v59);
      }
      *(void *)(v56 + 56) = MEMORY[0x263F8D310];
      *(void *)(v56 + 64) = sub_214B5F3EC();
      uint64_t v99 = 0x3E6C696E3CLL;
      if (v97) {
        uint64_t v99 = v96;
      }
      unint64_t v100 = 0xE500000000000000;
      if (v97) {
        unint64_t v100 = v97;
      }
      *(void *)(v56 + 32) = v99;
      *(void *)(v56 + 40) = v100;
      sub_214D19E78();

      swift_bridgeObjectRelease();
      return v46;
    }
  }
  else
  {

    uint64_t v54 = v112;
  }
  id v63 = objc_msgSend(v46, sel_userInfo);
  if (!v63)
  {
    long long v119 = 0u;
    long long v120 = 0u;
    uint64_t v66 = v111;
LABEL_40:
    sub_214B59CE0((uint64_t)&v119, (uint64_t *)&unk_26ACE44A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v7, 1, 1, v66);
    goto LABEL_41;
  }
  unsigned __int8 v64 = v63;
  uint64_t v65 = sub_214D19F98();

  uint64_t v115 = 0x4173657269707865;
  unint64_t v116 = 0xE900000000000074;
  sub_214D1A728();
  uint64_t v66 = v111;
  if (*(void *)(v65 + 16) && (unint64_t v67 = sub_214B88110((uint64_t)&v117), (v68 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v65 + 56) + 32 * v67, (uint64_t)&v119);
  }
  else
  {
    long long v119 = 0u;
    long long v120 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_214B6ABE4((uint64_t)&v117);
  if (!*((void *)&v120 + 1)) {
    goto LABEL_40;
  }
  int v69 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v7, v69 ^ 1u, 1, v66);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v7, 1, v66) != 1)
  {
    uint64_t v70 = v108;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v108, v7, v66);
    uint64_t v71 = v113;
    sub_214D19C68();
    char v72 = sub_214D19BE8();
    CFDataRef v73 = *(void (**)(char *, uint64_t))(v54 + 8);
    v73(v71, v66);
    if (v72)
    {
      uint64_t v74 = *(void *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      uint64_t v117 = *(void *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      uint64_t v118 = v74;
      *(void *)&long long v119 = 0;
      *((void *)&v119 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      *(void *)&long long v119 = 0xD00000000000001ALL;
      *((void *)&v119 + 1) = 0x8000000214D323E0;
      id v75 = objc_msgSend(v46, sel_response);
      id v76 = objc_msgSend(v75, sel_URL);

      if (v76)
      {
        uint64_t v77 = v105;
        sub_214D19A48();

        uint64_t v78 = sub_214D19AA8();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 0, 1, v78);
      }
      else
      {
        uint64_t v78 = sub_214D19AA8();
        uint64_t v77 = v105;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v105, 1, 1, v78);
      }
      uint64_t v101 = v106;
      sub_214B6AC38(v77, v106, (uint64_t *)&unk_26ACE3B00);
      sub_214D19AA8();
      uint64_t v102 = *(void *)(v78 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v101, 1, v78) == 1)
      {
        sub_214B59CE0(v101, (uint64_t *)&unk_26ACE3B00);
      }
      else
      {
        sub_214D199E8();
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v101, v78);
      }
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t v103 = v119;
      LOBYTE(v119) = v107;
      CoreODILogger.info(_:category:)(v103, *((unint64_t *)&v119 + 1), &v119);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v73(v108, v111);
      return v46;
    }
    v73(v70, v66);
    goto LABEL_42;
  }
LABEL_41:
  sub_214B59CE0((uint64_t)v7, &qword_26ACE3B10);
LABEL_42:
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  id v81 = (id)qword_26ACEBA50;
  sub_214D1A488();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_214D1C1E0;
  id v83 = objc_msgSend(v46, sel_response);
  id v84 = objc_msgSend(v83, sel_URL);

  if (v84)
  {
    uint64_t v85 = v109;
    sub_214D19A48();

    uint64_t v86 = sub_214D19AA8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 0, 1, v86);
  }
  else
  {
    uint64_t v86 = sub_214D19AA8();
    uint64_t v85 = v109;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v109, 1, 1, v86);
  }
  uint64_t v87 = MEMORY[0x263F8D310];
  uint64_t v88 = v110;
  sub_214B6AC38(v85, v110, (uint64_t *)&unk_26ACE3B00);
  sub_214D19AA8();
  uint64_t v89 = *(void *)(v86 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v88, 1, v86) == 1)
  {
    sub_214B59CE0(v88, (uint64_t *)&unk_26ACE3B00);
    uint64_t v90 = 0;
    unint64_t v91 = 0;
  }
  else
  {
    uint64_t v90 = sub_214D199E8();
    unint64_t v91 = v92;
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v86);
  }
  *(void *)(v82 + 56) = v87;
  *(void *)(v82 + 64) = sub_214B5F3EC();
  uint64_t v93 = 0x3E6C696E3CLL;
  if (v91) {
    uint64_t v93 = v90;
  }
  unint64_t v94 = 0xE500000000000000;
  if (v91) {
    unint64_t v94 = v91;
  }
  *(void *)(v82 + 32) = v93;
  *(void *)(v82 + 40) = v94;
  sub_214D19E78();

  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_214BCAE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 232) = a5;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 104) = a6;
  *(void *)(v6 + 80) = a1;
  *(void *)(v6 + 88) = a3;
  uint64_t v7 = sub_214D19738();
  *(void *)(v6 + 112) = v7;
  *(void *)(v6 + 120) = *(void *)(v7 - 8);
  *(void *)(v6 + 128) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BCAEF8, 0, 0);
}

uint64_t sub_214BCAEF8()
{
  sub_214D196E8();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BCAFA0;
  uint64_t v2 = *(void *)(v0 + 128);
  char v3 = *(unsigned char *)(v0 + 232);
  return sub_214BCC4E0(v2, v3);
}

uint64_t sub_214BCAFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[18] = a1;
  v6[19] = a2;
  v6[20] = a3;
  v6[21] = v3;
  swift_task_dealloc();
  (*(void (**)(void, void))(v5[15] + 8))(v5[16], v5[14]);
  if (v3) {
    uint64_t v7 = sub_214BCBDEC;
  }
  else {
    uint64_t v7 = sub_214BCB114;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214BCB114()
{
  uint64_t v59 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = v1;
  id v3 = sub_214BCDE94(v1, 0);

  if (!v3)
  {
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = (void *)(*(void *)(v0 + 88) + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    uint64_t v17 = v16[1];
    v57[0] = *v16;
    v57[1] = v17;
    v58[0] = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000012, 0x8000000214D32210, v58);
    swift_bridgeObjectRelease();
    char v18 = 0;
    *(void *)uint64_t v15 = v14;
    *(void *)(v15 + 8) = v13;
    *(void *)(v15 + 16) = v1;
    *(unsigned char *)(v15 + 24) = 0;
LABEL_41:
    *(unsigned char *)(*(void *)(v0 + 80) + 25) = v18;
    swift_task_dealloc();
    uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
    return v52();
  }
  unint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void **)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 144);
  swift_willThrow();

  sub_214B58A4C(v6, v4);
  *(void *)(v0 + 176) = v3;
  LOBYTE(v57[0]) = 10;
  id v7 = v3;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D31FF0, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 405);

  swift_getErrorValue();
  uint64_t v9 = sub_214D1ACA8();
  uint64_t v11 = v10;
  if (v9 == sub_214D1A038() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
  }
  id v20 = objc_msgSend(*(id *)(v0 + 96), sel_HTTPMethod);
  uint64_t v21 = sub_214D1A038();
  uint64_t v23 = v22;

  if (v21 == 5522759 && v23 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_getErrorValue();
  uint64_t v25 = sub_214D1AC98();
  if (v25 == -1009)
  {
    uint64_t v26 = *(void *)(v0 + 80);
    LOBYTE(v57[0]) = 23;
    id v38 = v3;
    id v28 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D32190, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 326);
    goto LABEL_29;
  }
  if (v25 == -1005)
  {
    uint64_t v26 = *(void *)(v0 + 80);
    LOBYTE(v57[0]) = 0;
    id v27 = v3;
    id v28 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000049, 0x8000000214D321C0, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 323);
LABEL_29:
    id v39 = v28;

    *(void *)(v26 + 8) = 0;
    *(void *)(v26 + 16) = 0;
    *(void *)uint64_t v26 = v39;
    char v18 = 1;
    *(unsigned char *)(v26 + 24) = 0;
    goto LABEL_41;
  }
LABEL_14:
  uint64_t v29 = (void *)sub_214D199A8();
  id v30 = objc_msgSend(v29, sel_domain);
  uint64_t v31 = sub_214D1A038();
  uint64_t v33 = v32;

  if (v31 == 0x726F72724549444FLL && v33 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {

      goto LABEL_31;
    }
  }
  id v35 = objc_msgSend(v29, sel_code);

  ODIErrorCode.init(rawValue:)((Swift::Int)v35);
  if (LOBYTE(v57[0]) - 171 > 0xD)
  {
LABEL_39:
    if (LOBYTE(v57[0]) - 10 < 2) {
      goto LABEL_40;
    }
LABEL_31:
    uint64_t v40 = *(void *)(v0 + 80);
    *(void *)(v40 + 8) = 0;
    *(void *)(v40 + 16) = 0;
    *(void *)uint64_t v40 = v3;
    *(unsigned char *)(v40 + 24) = 0;
    char v18 = 1;
    goto LABEL_41;
  }
  if (((1 << (LOBYTE(v57[0]) + 85)) & 0x3E00) != 0)
  {
LABEL_40:
    uint64_t v51 = *(void *)(v0 + 80);
    *(void *)(v51 + 8) = 0;
    *(void *)(v51 + 16) = 0;
    *(void *)uint64_t v51 = v3;
    *(unsigned char *)(v51 + 24) = 0;
    char v18 = 2;
    goto LABEL_41;
  }
  if (((1 << (LOBYTE(v57[0]) + 85)) & 0x184) == 0)
  {
    if (LOBYTE(v57[0]) == 171)
    {
      id v41 = *(void **)(v0 + 104);
      if (v41)
      {
        uint64_t v42 = qword_26ACE41D8;
        id v43 = v41;
        if (v42 != -1) {
          swift_once();
        }
        id v44 = (id)qword_26ACEBA50;
        sub_214D1A498();
        sub_214D19E78();

        if (qword_26ACE3BD0 != -1) {
          swift_once();
        }
        uint64_t v45 = *(void *)(v0 + 80);
        objc_msgSend((id)qword_26ACEB9E0, sel_storeCachedResponse_forRequest_, v43, *(void *)(v0 + 96));
        id v46 = objc_msgSend(v43, sel_data);
        uint64_t v47 = sub_214D19B68();
        uint64_t v49 = v48;

        id v50 = objc_msgSend(v43, sel_response);
        char v18 = 0;
        *(void *)uint64_t v45 = v47;
        *(void *)(v45 + 8) = v49;
        *(void *)(v45 + 16) = v50;
        *(unsigned char *)(v45 + 24) = 1;
      }
      else
      {
        uint64_t v53 = *(void *)(v0 + 80);
        LOBYTE(v57[0]) = 0;
        id v54 = v3;
        id v55 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000031, 0x8000000214D32100, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 343);

        *(void *)(v53 + 8) = 0;
        *(void *)(v53 + 16) = 0;
        *(void *)uint64_t v53 = v55;
        char v18 = 2;
        *(unsigned char *)(v53 + 24) = 0;
      }
      goto LABEL_41;
    }
    goto LABEL_39;
  }
  if (*(unsigned char *)(v0 + 232)) {
    goto LABEL_31;
  }
  uint64_t v36 = *(void *)(v0 + 88);
  if (*(unsigned char *)(v36 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) != 1) {
    goto LABEL_31;
  }
  if (qword_26ACE3710 != -1)
  {
    swift_once();
    uint64_t v36 = *(void *)(v0 + 88);
  }
  *(void *)(v0 + 184) = qword_26ACE3700;
  uint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
  *(void *)(v0 + 192) = v37;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BCB8A8, v37, 0);
}

uint64_t sub_214BCB8A8()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  v0[25] = v3;
  swift_bridgeObjectRetain();
  swift_release();
  unint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  void *v4 = v0;
  v4[1] = sub_214BCB964;
  return sub_214C74564(v2, v3);
}

uint64_t sub_214BCB964()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214BCBCB4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_214BCBA80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BCBA80()
{
  swift_release();
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 224) = v1;
  v1->i64[0] = v0;
  v1->i64[1] = (uint64_t)sub_214BCBB38;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 88), *(int8x16_t *)(v0 + 88), 8uLL);
  return MEMORY[0x270FA2498](sub_214BCCA5C, 0, 0);
}

uint64_t sub_214BCBB38()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BCBC34, 0, 0);
}

uint64_t sub_214BCBC34()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[10];
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 24) = 0;
  *(unsigned char *)(v0[10] + 25) = 2;
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214BCBCB4()
{
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[10];
  swift_release();
  swift_bridgeObjectRelease();
  unsigned __int8 v8 = 0;
  id v4 = v1;
  id v5 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x8000000214D320A0, (char *)v1, &v8, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 362);

  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)uint64_t v3 = v5;
  *(unsigned char *)(v3 + 24) = 0;
  *(unsigned char *)(v0[10] + 25) = 1;
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214BCBDEC()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void **)(v0 + 168);
  *(void *)(v0 + 176) = v1;
  unsigned __int8 v48 = 10;
  id v2 = v1;
  id v3 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D31FF0, (char *)v1, &v48, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 405);

  swift_getErrorValue();
  uint64_t v4 = sub_214D1ACA8();
  uint64_t v6 = v5;
  if (v4 == sub_214D1A038() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_15;
    }
  }
  id v10 = objc_msgSend(*(id *)(v0 + 96), sel_HTTPMethod);
  uint64_t v11 = sub_214D1A038();
  uint64_t v13 = v12;

  if (v11 == 5522759 && v13 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_15;
    }
  }
  swift_getErrorValue();
  uint64_t v15 = sub_214D1AC98();
  if (v15 == -1009)
  {
    uint64_t v16 = *(void *)(v0 + 80);
    unsigned __int8 v51 = 23;
    id v28 = v1;
    id v18 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D32190, (char *)v1, &v51, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 326);
    goto LABEL_30;
  }
  if (v15 != -1005)
  {
LABEL_15:
    char v19 = (void *)sub_214D199A8();
    id v20 = objc_msgSend(v19, sel_domain);
    uint64_t v21 = sub_214D1A038();
    uint64_t v23 = v22;

    if (v21 == 0x726F72724549444FLL && v23 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {

        goto LABEL_32;
      }
    }
    id v25 = objc_msgSend(v19, sel_code);

    ODIErrorCode.init(rawValue:)((Swift::Int)v25);
    if (v49 - 171 <= 0xD)
    {
      if (((1 << (v49 + 85)) & 0x3E00) != 0)
      {
LABEL_41:
        uint64_t v42 = *(void *)(v0 + 80);
        *(void *)(v42 + 8) = 0;
        *(void *)(v42 + 16) = 0;
        *(void *)uint64_t v42 = v1;
        *(unsigned char *)(v42 + 24) = 0;
        char v30 = 2;
        goto LABEL_42;
      }
      if (((1 << (v49 + 85)) & 0x184) != 0)
      {
        if ((*(unsigned char *)(v0 + 232) & 1) == 0)
        {
          uint64_t v26 = *(void *)(v0 + 88);
          if (*(unsigned char *)(v26 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) == 1)
          {
            if (qword_26ACE3710 != -1)
            {
              swift_once();
              uint64_t v26 = *(void *)(v0 + 88);
            }
            *(void *)(v0 + 184) = qword_26ACE3700;
            uint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
            *(void *)(v0 + 192) = v27;
            swift_retain();
            swift_retain();
            return MEMORY[0x270FA2498](sub_214BCB8A8, v27, 0);
          }
        }
        goto LABEL_32;
      }
      if (v49 == 171)
      {
        uint64_t v32 = *(void **)(v0 + 104);
        if (v32)
        {
          uint64_t v33 = qword_26ACE41D8;
          id v34 = v32;
          if (v33 != -1) {
            swift_once();
          }
          id v35 = (id)qword_26ACEBA50;
          sub_214D1A498();
          sub_214D19E78();

          if (qword_26ACE3BD0 != -1) {
            swift_once();
          }
          uint64_t v36 = *(void *)(v0 + 80);
          objc_msgSend((id)qword_26ACEB9E0, sel_storeCachedResponse_forRequest_, v34, *(void *)(v0 + 96));
          id v37 = objc_msgSend(v34, sel_data);
          uint64_t v38 = sub_214D19B68();
          uint64_t v40 = v39;

          id v41 = objc_msgSend(v34, sel_response);
          char v30 = 0;
          *(void *)uint64_t v36 = v38;
          *(void *)(v36 + 8) = v40;
          *(void *)(v36 + 16) = v41;
          *(unsigned char *)(v36 + 24) = 1;
        }
        else
        {
          uint64_t v44 = *(void *)(v0 + 80);
          unsigned __int8 v50 = 0;
          id v45 = v1;
          id v46 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000031, 0x8000000214D32100, (char *)v1, &v50, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 343);

          *(void *)(v44 + 8) = 0;
          *(void *)(v44 + 16) = 0;
          *(void *)uint64_t v44 = v46;
          char v30 = 2;
          *(unsigned char *)(v44 + 24) = 0;
        }
        goto LABEL_42;
      }
    }
    if (v49 - 10 < 2) {
      goto LABEL_41;
    }
LABEL_32:
    uint64_t v31 = *(void *)(v0 + 80);
    *(void *)(v31 + 8) = 0;
    *(void *)(v31 + 16) = 0;
    *(void *)uint64_t v31 = v1;
    *(unsigned char *)(v31 + 24) = 0;
    char v30 = 1;
    goto LABEL_42;
  }
  uint64_t v16 = *(void *)(v0 + 80);
  unsigned __int8 v52 = 0;
  id v17 = v1;
  id v18 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000049, 0x8000000214D321C0, (char *)v1, &v52, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD000000000000036, 0x8000000214D320C0, 323);
LABEL_30:
  id v29 = v18;

  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = 0;
  *(void *)uint64_t v16 = v29;
  char v30 = 1;
  *(unsigned char *)(v16 + 24) = 0;
LABEL_42:
  *(unsigned char *)(*(void *)(v0 + 80) + 25) = v30;
  swift_task_dealloc();
  id v43 = *(uint64_t (**)(void))(v0 + 8);
  return v43();
}

uint64_t sub_214BCC4E0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = sub_214D19EE8();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = *(void *)(v4 - 8);
  *(void *)(v3 + 48) = swift_task_alloc();
  sub_214D1A0A8();
  *(void *)(v3 + 56) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BCC5D0, 0, 0);
}

uint64_t sub_214BCC5D0()
{
  char v1 = *(unsigned char *)(v0 + 112);
  sub_214BCD80C(*(void *)(v0 + 16));
  *(void *)(v0 + 64) = sub_214BC7D48(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  void *v2 = v0;
  v2[1] = sub_214BCC688;
  uint64_t v3 = *(void *)(v0 + 16);
  return MEMORY[0x270EF1EB0](v3, 0);
}

uint64_t sub_214BCC688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[10] = a1;
  v5[11] = a2;
  v5[12] = a3;
  v5[13] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_214BCC9C4;
  }
  else {
    uint64_t v6 = sub_214BCC7A0;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

id sub_214BCC7A0()
{
  char v1 = (id *)(v0 + 96);
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    unint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 80);
    id v6 = *(id *)(v0 + 96);
    sub_214B6A3A0(v5, v4);
    sub_214D1A088();
    uint64_t v7 = sub_214D1A058();
    if (v8) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v8) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = 0xE000000000000000;
    }
    id result = objc_msgSend(v3, sel_allHeaderFields);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = result;
    if (qword_26ACE3BC0 != -1) {
      swift_once();
    }
    uint64_t v23 = *(void *)(v0 + 80);
    unint64_t v24 = *(void *)(v0 + 88);
    uint64_t v22 = *(void **)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_26ACE3BA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v16, v15);
    id v17 = (void *)swift_task_alloc();
    void v17[2] = v3;
    v17[3] = v12;
    v17[4] = v9;
    v17[5] = v10;
    Logger.sensitive(_:)(sub_214BCE85C);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);

    swift_bridgeObjectRelease();
    sub_214B58A4C(v23, v24);
  }
  else
  {
    char v1 = (id *)(v0 + 64);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v19 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 80);
  return (id)v18(v21, v19, v20);
}

uint64_t sub_214BCC9C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BCCA3C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_214BCCA5C, 0, 0);
}

uint64_t sub_214BCCA5C()
{
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  v0[4] = qword_26ACE3700;
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
  v0[5] = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BCCB1C, v2, 0);
}

uint64_t sub_214BCCB1C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  v0[6] = *(void *)(v2 + 112);
  v0[7] = *(void *)(v2 + 120);
  swift_bridgeObjectRetain();
  swift_release();
  return MEMORY[0x270FA2498](sub_214BCCB9C, v1, 0);
}

uint64_t sub_214BCCB9C()
{
  uint64_t v1 = sub_214C756BC(v0[6], v0[7]);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  v0[8] = v1;
  v0[9] = v3;
  return MEMORY[0x270FA2498](sub_214BCCC28, 0, 0);
}

uint64_t sub_214BCCC28()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214BCCCF8()
{
  type metadata accessor for DIPHTTPSession.ClientInfoHeaderProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  qword_2678635D8 = v0;
  return result;
}

uint64_t sub_214BCCD38()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_214BCD144(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  unint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  id v12 = objc_msgSend(a1, sel_URL);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_214D19A48();

    uint64_t v14 = sub_214D19AA8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    uint64_t v14 = sub_214D19AA8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_214B6AC38((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_26ACE3B00);
  sub_214D19AA8();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    sub_214B59CE0((uint64_t)v11, (uint64_t *)&unk_26ACE3B00);
  }
  else
  {
    sub_214D199E8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  id v18 = objc_msgSend(a1, sel_statusCode);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  id v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_214D1A108();
  v17[1] = a2;
  sub_214D1A908();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  sub_214D1A108();
  return v20;
}

id sub_214BCD4B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPHTTPSession()
{
  return self;
}

uint64_t type metadata accessor for DIPHTTPSession.SessionState()
{
  return self;
}

uint64_t type metadata accessor for DIPHTTPSession.ClientInfoHeaderProvider()
{
  return self;
}

uint64_t destroy for DIPHTTPSession.Configuration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPHTTPSession.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPHTTPSession.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPHTTPSession.Configuration()
{
  return &type metadata for DIPHTTPSession.Configuration;
}

void sub_214BCD80C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D19738();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v5, v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v16 = sub_214D19728();
  if (v17 >> 60 != 15)
  {
    uint64_t v18 = v16;
    unint64_t v19 = v17;
    sub_214D1A088();
    uint64_t v20 = sub_214D1A058();
    if (v21)
    {
      unint64_t v22 = v21;
      uint64_t v55 = v20;
      sub_214B59EAC(v18, v19);
      goto LABEL_6;
    }
    sub_214B59EAC(v18, v19);
  }
  uint64_t v55 = 0;
  unint64_t v22 = 0xE000000000000000;
LABEL_6:
  unint64_t v23 = sub_214D196D8();
  id v57 = v10;
  if (!v23) {
    unint64_t v23 = sub_214B7F218(MEMORY[0x263F8EE78]);
  }
  uint64_t v24 = v23;
  id v25 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v26 = (void *)sub_214D1A028();
  unsigned __int8 v27 = objc_msgSend(v25, sel_BOOLForKey_, v26);

  if ((v27 & 1) == 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v24;
    sub_214B8E388(0x455443414445523CLL, 0xEA00000000003E44, 0x7A69726F68747541, 0xED00006E6F697461, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  id v29 = v57;
  if (qword_26ACE3BC0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_214D19EE8();
  __swift_project_value_buffer(v30, (uint64_t)qword_26ACE3BA0);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v31(v13, a1, v5);
  v31(v29, a1, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_214D19EC8();
  int v33 = sub_214D1A498();
  if (os_log_type_enabled(v32, (os_log_type_t)v33))
  {
    int v53 = v33;
    unint64_t v54 = v22;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v59 = v52;
    *(_DWORD *)uint64_t v34 = 136315906;
    uint64_t v35 = sub_214D196A8();
    if (v36)
    {
      unint64_t v37 = v36;
    }
    else
    {
      uint64_t v35 = 0;
      unint64_t v37 = 0xE000000000000000;
    }
    uint64_t v58 = sub_214C3D88C(v35, v37, &v59);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v6 + 8);
    v38(v13, v5);
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v39 = (uint64_t)v56;
    sub_214D19708();
    uint64_t v40 = sub_214D19AA8();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
    {
      sub_214B59CE0(v39, (uint64_t *)&unk_26ACE3B00);
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
    }
    else
    {
      uint64_t v42 = sub_214D199E8();
      uint64_t v45 = v39;
      unint64_t v43 = v46;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v40);
    }
    uint64_t v58 = sub_214C3D88C(v42, v43, &v59);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    v38(v57, v5);
    *(_WORD *)(v34 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_214D19FA8();
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_214C3D88C(v47, v49, &v59);
    sub_214D1A5F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 32) = 2080;
    unint64_t v50 = v54;
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_214C3D88C(v55, v50, &v59);
    sub_214D1A5F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_214B4E000, v32, (os_log_type_t)v53, "Performing request\n%s %s\n%s\n%s\n", (uint8_t *)v34, 0x2Au);
    uint64_t v51 = v52;
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v51, -1, -1);
    MEMORY[0x2166B1540](v34, -1, -1);
  }
  else
  {
    uint64_t v44 = *(void (**)(char *, uint64_t))(v6 + 8);
    v44(v13, v5);
    v44(v29, v5);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

id sub_214BCDE94(void *a1, char *a2)
{
  if (!a2)
  {
    if (!a1)
    {
      LOBYTE(v45) = 12;
      return ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D32230, 0, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 408);
    }
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (!v5)
    {
      uint64_t v45 = 12;
      uint64_t v46 = 0xE000000000000000;
      id v16 = a1;
      sub_214D1A7A8();
      sub_214D1A108();
      id v7 = v16;
      id v17 = objc_msgSend(v7, sel_description);
      sub_214D1A038();

      sub_214D1A108();
      swift_bridgeObjectRelease();
      id v18 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 411);
      goto LABEL_52;
    }
    uint64_t v6 = (void *)v5;
    id v7 = a1;
    uint64_t v8 = (uint64_t)objc_msgSend(v6, sel_statusCode);
    id v9 = objc_msgSend(self, sel_standardUserDefaults);
    if (qword_26ACE38D8 != -1) {
      swift_once();
    }
    if (byte_26ACEB960 == 1
      && (uint64_t v10 = (void *)sub_214D1A028(),
          id v11 = objc_msgSend(v9, sel_stringForKey_, v10),
          v10,
          v11))
    {
      uint64_t v12 = sub_214D1A038();
      unint64_t v14 = v13;

      if ((v12 || v14 != 0xE000000000000000) && (sub_214D1ABC8() & 1) == 0)
      {
        uint64_t v19 = HIBYTE(v14) & 0xF;
        uint64_t v20 = v12 & 0xFFFFFFFFFFFFLL;
        if ((v14 & 0x2000000000000000) != 0 ? HIBYTE(v14) & 0xF : v12 & 0xFFFFFFFFFFFFLL)
        {
          if ((v14 & 0x1000000000000000) != 0)
          {
            uint64_t v23 = (uint64_t)sub_214C6639C(v12, v14, 10);
            LOBYTE(v12) = v44;
            goto LABEL_88;
          }
          if ((v14 & 0x2000000000000000) == 0)
          {
            if ((v12 & 0x1000000000000000) != 0) {
              unint64_t v22 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }
            else {
              unint64_t v22 = (unsigned __int8 *)sub_214D1A818();
            }
            uint64_t v23 = (uint64_t)sub_214C66384(v22, v20, 10);
            LOBYTE(v12) = v24 & 1;
LABEL_88:
            swift_bridgeObjectRelease();
            if ((v12 & 1) == 0)
            {
              if (qword_26ACE41D8 != -1) {
                swift_once();
              }
              id v37 = (id)qword_26ACEBA50;
              sub_214D1A488();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
              uint64_t v38 = swift_allocObject();
              uint64_t v39 = MEMORY[0x263F8D6C8];
              *(_OWORD *)(v38 + 16) = xmmword_214D1C1E0;
              uint64_t v40 = MEMORY[0x263F8D750];
              *(void *)(v38 + 56) = v39;
              *(void *)(v38 + 64) = v40;
              *(void *)(v38 + 32) = v23;
              sub_214D19E78();

              swift_bridgeObjectRelease();
              uint64_t v8 = v23;
            }
            goto LABEL_15;
          }
          uint64_t v45 = v12;
          uint64_t v46 = v14 & 0xFFFFFFFFFFFFFFLL;
          if (v12 == 43)
          {
            if (!v19) {
              goto LABEL_101;
            }
            if (v19 == 1 || (BYTE1(v12) - 48) > 9u) {
              goto LABEL_75;
            }
            uint64_t v23 = (BYTE1(v12) - 48);
            if (v19 != 2)
            {
              if ((BYTE2(v12) - 48) > 9u) {
                goto LABEL_75;
              }
              uint64_t v23 = 10 * (BYTE1(v12) - 48) + (BYTE2(v12) - 48);
              uint64_t v28 = v19 - 3;
              if (v28)
              {
                id v29 = (unsigned __int8 *)&v45 + 3;
                while (1)
                {
                  unsigned int v30 = *v29 - 48;
                  if (v30 > 9) {
                    goto LABEL_75;
                  }
                  uint64_t v31 = 10 * v23;
                  if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
                    goto LABEL_75;
                  }
                  uint64_t v23 = v31 + v30;
                  if (__OFADD__(v31, v30)) {
                    goto LABEL_75;
                  }
                  LOBYTE(v12) = 0;
                  ++v29;
                  if (!--v28) {
                    goto LABEL_88;
                  }
                }
              }
            }
          }
          else
          {
            if (v12 == 45)
            {
              if (v19)
              {
                if (v19 != 1 && (BYTE1(v12) - 48) <= 9u)
                {
                  if (v19 == 2)
                  {
                    LOBYTE(v12) = 0;
                    uint64_t v23 = -(uint64_t)(BYTE1(v12) - 48);
                    goto LABEL_88;
                  }
                  if ((BYTE2(v12) - 48) <= 9u)
                  {
                    uint64_t v23 = -10 * (BYTE1(v12) - 48) - (BYTE2(v12) - 48);
                    uint64_t v36 = v19 - 3;
                    if (!v36) {
                      goto LABEL_87;
                    }
                    uint64_t v41 = (unsigned __int8 *)&v45 + 3;
                    while (1)
                    {
                      unsigned int v42 = *v41 - 48;
                      if (v42 > 9) {
                        break;
                      }
                      uint64_t v43 = 10 * v23;
                      if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
                        break;
                      }
                      uint64_t v23 = v43 - v42;
                      if (__OFSUB__(v43, v42)) {
                        break;
                      }
                      LOBYTE(v12) = 0;
                      ++v41;
                      if (!--v36) {
                        goto LABEL_88;
                      }
                    }
                  }
                }
LABEL_75:
                uint64_t v23 = 0;
                LOBYTE(v12) = 1;
                goto LABEL_88;
              }
              __break(1u);
LABEL_101:
              __break(1u);
              JUMPOUT(0x214BCE6BCLL);
            }
            if (!v19 || (v12 - 48) > 9u) {
              goto LABEL_75;
            }
            uint64_t v23 = (v12 - 48);
            if (v19 != 1)
            {
              if ((BYTE1(v12) - 48) > 9u) {
                goto LABEL_75;
              }
              uint64_t v23 = 10 * (v12 - 48) + (BYTE1(v12) - 48);
              uint64_t v32 = v19 - 2;
              if (v32)
              {
                int v33 = (unsigned __int8 *)&v45 + 2;
                while (1)
                {
                  unsigned int v34 = *v33 - 48;
                  if (v34 > 9) {
                    goto LABEL_75;
                  }
                  uint64_t v35 = 10 * v23;
                  if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63) {
                    goto LABEL_75;
                  }
                  uint64_t v23 = v35 + v34;
                  if (__OFADD__(v35, v34)) {
                    goto LABEL_75;
                  }
                  LOBYTE(v12) = 0;
                  ++v33;
                  if (!--v32) {
                    goto LABEL_88;
                  }
                }
              }
            }
          }
LABEL_87:
          LOBYTE(v12) = 0;
          goto LABEL_88;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
    }
LABEL_15:
    if (v8 <= 303)
    {
      if (v8 == 200 || v8 == 204)
      {

        return 0;
      }
      if (v8 == 301)
      {
        char v15 = -86;
      }
      else
      {
LABEL_37:
        if (v8 == 504) {
          char v15 = -72;
        }
        else {
          char v15 = -87;
        }
      }
    }
    else
    {
      switch(v8)
      {
        case 400:
          char v15 = -84;
          break;
        case 401:
          char v15 = -83;
          break;
        case 402:
        case 405:
        case 406:
        case 407:
        case 408:
        case 409:
        case 410:
        case 411:
        case 412:
        case 413:
        case 414:
        case 415:
        case 416:
        case 417:
        case 418:
        case 419:
        case 420:
        case 421:
        case 422:
        case 423:
        case 424:
        case 425:
        case 426:
        case 427:
        case 430:
        case 431:
        case 432:
        case 435:
        case 436:
        case 437:
        case 438:
        case 439:
        case 440:
        case 441:
        case 442:
        case 443:
        case 444:
        case 445:
        case 446:
        case 447:
        case 448:
        case 449:
        case 450:
        case 451:
        case 452:
        case 453:
        case 454:
        case 455:
        case 456:
        case 457:
        case 458:
        case 459:
        case 460:
        case 461:
        case 462:
        case 463:
        case 464:
        case 465:
        case 466:
        case 467:
        case 468:
        case 469:
        case 470:
        case 471:
        case 472:
        case 473:
        case 474:
        case 475:
        case 476:
        case 477:
        case 478:
        case 479:
        case 480:
        case 481:
        case 482:
        case 483:
        case 484:
        case 485:
        case 486:
        case 487:
        case 488:
        case 489:
        case 490:
        case 491:
        case 492:
        case 493:
        case 494:
        case 495:
        case 496:
        case 497:
        case 498:
        case 499:
          goto LABEL_37;
        case 403:
          char v15 = -82;
          break;
        case 404:
          char v15 = -81;
          break;
        case 428:
          char v15 = -80;
          break;
        case 429:
          char v15 = -79;
          break;
        case 433:
          char v15 = -78;
          break;
        case 434:
          char v15 = -77;
          break;
        case 500:
          char v15 = -76;
          break;
        case 501:
          char v15 = -75;
          break;
        case 502:
          char v15 = -74;
          break;
        case 503:
          char v15 = -73;
          break;
        default:
          if (v8 != 304) {
            goto LABEL_37;
          }
          char v15 = -85;
          break;
      }
    }
    LOBYTE(v45) = v15;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(inited + 32) = 3;
    *(void *)(inited + 64) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 40) = v8;
    unint64_t v26 = sub_214B7E71C(inited);
    id v18 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x8000000214D322D0, 0, (unsigned __int8 *)&v45, 0, v26, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 458);
LABEL_52:
    id v3 = v18;
    swift_bridgeObjectRelease();

    return v3;
  }
  LOBYTE(v45) = 10;
  return ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D31FF0, a2, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x8000000214D32020, 0xD00000000000001ELL, 0x8000000214D32080, 405);
}

uint64_t sub_214BCE85C()
{
  return sub_214BCD144(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_214BCE8CC()
{
  return MEMORY[0x270FA2498](sub_214BCE8E8, 0, 0);
}

uint64_t sub_214BCE8E8()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 240) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BCE990, v1, 0);
}

uint64_t sub_214BCE990()
{
  uint64_t v1 = *(void *)(v0 + 240);
  if (*(unsigned char *)(v1 + 168))
  {
    return MEMORY[0x270FA2498](sub_214BCEB70, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v2;
    void *v2 = v0;
    v2[1] = sub_214BCEA60;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214BCEA60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 240);
  return MEMORY[0x270FA2498](sub_214BCEB70, v2, 0);
}

uint64_t sub_214BCEB70()
{
  uint64_t v1 = v0[30];
  unint64_t v2 = sub_214BCF9A8();
  v0[32] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[33] = v3;
  void v3[2] = v1;
  v3[3] = 0x54746375646F7250;
  v3[4] = 0xEB00000000657079;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[34] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  v0[35] = v5;
  void *v4 = v0;
  v4[1] = sub_214BCECB4;
  return MEMORY[0x270FA2318](v0 + 20, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BCECB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 288) = *(_OWORD *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_214BCEDF0, v2, 0);
}

uint64_t sub_214BCEDF0()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[38] = v3;
  void v3[2] = v2;
  v3[3] = 0x4E746375646F7250;
  v3[4] = 0xEB00000000656D61;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[39] = v4;
  void *v4 = v0;
  v4[1] = sub_214BCEF14;
  uint64_t v5 = v0[35];
  return MEMORY[0x270FA2318](v0 + 24, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BCEF14()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 320) = *(_OWORD *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_214BCF050, v2, 0);
}

uint64_t sub_214BCF050()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = swift_task_alloc();
  v0[42] = v3;
  *(void *)(v3 + 16) = v2;
  strcpy((char *)(v3 + 24), "ProductVersion");
  *(unsigned char *)(v3 + 39) = -18;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[43] = v4;
  void *v4 = v0;
  v4[1] = sub_214BCF178;
  uint64_t v5 = v0[35];
  return MEMORY[0x270FA2318](v0 + 22, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BCF178()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 352) = *(_OWORD *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_214BCF2B4, v2, 0);
}

uint64_t sub_214BCF2B4()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = swift_task_alloc();
  v0[46] = v3;
  *(void *)(v3 + 16) = v2;
  strcpy((char *)(v3 + 24), "BuildVersion");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  void *v4 = v0;
  v4[1] = sub_214BCF3D8;
  uint64_t v5 = v0[35];
  return MEMORY[0x270FA2318](v0 + 18, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BCF3D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 384) = *(_OWORD *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_214BCF4F8, 0, 0);
}

id sub_214BCF4F8()
{
  type metadata accessor for DIPHTTPSession();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id result = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = *MEMORY[0x263EFFB70];
  if (!*MEMORY[0x263EFFB70])
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  if (objc_msgSend(result, sel_objectForInfoDictionaryKey_, *MEMORY[0x263EFFB70]))
  {
    sub_214D1A668();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_214B6AC38(v0 + 16, v0 + 112, (uint64_t *)&unk_26ACE44A0);
  if (*(void *)(v0 + 136)) {
    swift_dynamicCast();
  }
  else {
    sub_214B59CE0(v0 + 112, (uint64_t *)&unk_26ACE44A0);
  }
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_214D1A038();
  }
  id v8 = objc_msgSend(v2, sel_mainBundle);
  if (objc_msgSend(v8, sel_objectForInfoDictionaryKey_, v4))
  {
    sub_214D1A668();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_214B6AC38(v0 + 48, v0 + 80, (uint64_t *)&unk_26ACE44A0);
  if (!*(void *)(v0 + 104))
  {
    sub_214B59CE0(v0 + 80, (uint64_t *)&unk_26ACE44A0);
    goto LABEL_17;
  }
  if (!swift_dynamicCast())
  {
LABEL_17:
    uint64_t v9 = 7104878;
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)(v0 + 208);
LABEL_18:
  id v10 = objc_msgSend(v8, sel_bundleIdentifier, v9);
  if (v10)
  {
    id v11 = v10;
    sub_214D1A038();
  }
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  swift_release();

  uint64_t v12 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return (id)v12(60, 0xE100000000000000);
}

unint64_t sub_214BCF9A8()
{
  unint64_t result = qword_26ACE44B0;
  if (!qword_26ACE44B0)
  {
    type metadata accessor for ODIDeviceInfo();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE44B0);
  }
  return result;
}

uint64_t sub_214BCFA00(__SecTrust *a1)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    uint64_t v3 = (void *)sub_214D1A028();
    unsigned __int8 v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

    if (v4)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v5 = (id)qword_26ACEBA50;
      sub_214D1A488();
      sub_214D19E78();

      return 1;
    }
  }
  else
  {
  }
  error[0] = 0;
  BOOL v6 = SecTrustEvaluateWithError(a1, error);
  if (error[0])
  {
    uint64_t v7 = error[0];
    CFStringRef v8 = CFErrorCopyDescription(v7);
    if (v8)
    {
      uint64_t v9 = (__CFString *)v8;
      uint64_t v10 = sub_214D1A038();
      unint64_t v12 = v11;
    }
    else
    {
      uint64_t v10 = 0;
      unint64_t v12 = 0;
    }
    if (qword_26ACE3BC0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_214D19EE8();
    __swift_project_value_buffer(v13, (uint64_t)qword_26ACE3BA0);
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_214D19EC8();
    os_log_type_t v15 = sub_214D1A4A8();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v20 = v17;
      *(_DWORD *)id v16 = 136315138;
      if (v12)
      {
        unint64_t v18 = v12;
      }
      else
      {
        uint64_t v10 = 7104878;
        unint64_t v18 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_214C3D88C(v10, v18, &v20);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_214B4E000, v14, v15, "Invalid server certificate, error: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v17, -1, -1);
      MEMORY[0x2166B1540](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }

  return v6;
}

void sub_214BCFD84(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D588);
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8, v3);
  BOOL v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4, v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26ACE3BC0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_214D19EE8();
  __swift_project_value_buffer(v14, (uint64_t)qword_26ACE3BA0);
  id v32 = a1;
  os_log_type_t v15 = sub_214D19EC8();
  os_log_type_t v16 = sub_214D1A498();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    id v19 = objc_msgSend(v32, sel_currentRequest);
    if (v19)
    {
      uint64_t v20 = v19;
      sub_214D196E8();

      uint64_t v21 = sub_214D19738();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 0, 1, v21);
    }
    else
    {
      uint64_t v21 = sub_214D19738();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
    }
    sub_214B6AC38((uint64_t)v6, (uint64_t)v9, &qword_26784D588);
    sub_214D19738();
    uint64_t v23 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v21) == 1)
    {
      char v24 = &qword_26784D588;
      uint64_t v25 = (uint64_t)v9;
    }
    else
    {
      sub_214D19708();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v21);
      uint64_t v26 = sub_214D19AA8();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v26) != 1)
      {
        uint64_t v28 = sub_214D199E8();
        unint64_t v29 = v30;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
        goto LABEL_16;
      }
      char v24 = (uint64_t *)&unk_26ACE3B00;
      uint64_t v25 = (uint64_t)v13;
    }
    sub_214B59CE0(v25, v24);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
LABEL_16:
    uint64_t v33 = sub_214C3D88C(v28, v29, &v34);
    sub_214D1A5F8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v15, v16, "Task for URL %s is waiting for connectivity", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v18, -1, -1);
    MEMORY[0x2166B1540](v17, -1, -1);

    return;
  }

  id v22 = v32;
}

void sub_214BD01EC(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_26ACE3BC0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_214D19EE8();
    __swift_project_value_buffer(v3, (uint64_t)qword_26ACE3BA0);
    id v4 = a1;
    oslog = sub_214D19EC8();
    os_log_type_t v5 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v5))
    {
      BOOL v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v6 = 138412290;
      uint64_t v12 = sub_214D199A8();
      sub_214D1A5F8();
      *uint64_t v7 = v12;

      _os_log_impl(&dword_214B4E000, oslog, v5, "URL session became invalid with error %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784D580);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v7, -1, -1);
      MEMORY[0x2166B1540](v6, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_26ACE3BC0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_214D19EE8();
    __swift_project_value_buffer(v8, (uint64_t)qword_26ACE3BA0);
    oslog = sub_214D19EC8();
    os_log_type_t v9 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_214B4E000, oslog, v9, "URL session did become invalid, explicit invalidation", v10, 2u);
      MEMORY[0x2166B1540](v10, -1, -1);
    }
  }
}

void sub_214BD0474(void *a1, uint64_t a2)
{
  id v13 = objc_msgSend(a1, sel_protectionSpace);
  id v3 = objc_msgSend(v13, sel_authenticationMethod);
  uint64_t v4 = sub_214D1A038();
  uint64_t v6 = v5;

  if (sub_214D1A038() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 1, 0);
      goto LABEL_13;
    }
  }
  uint64_t v10 = (__SecTrust *)objc_msgSend(v13, sel_serverTrust);
  if (v10)
  {
    uint64_t v11 = v10;
    if (sub_214BCFA00(v10))
    {
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08BB8]), sel_initWithTrust_, v11);
      (*(void (**)(uint64_t, void, id))(a2 + 16))(a2, 0, v12);

      id v13 = v12;
      goto LABEL_13;
    }
  }
  (*(void (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 2, 0);
LABEL_13:
}

uint64_t sub_214BD05F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BD0658(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BD0684(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BD06B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_214BD06DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_214BD0704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_214BD072C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 32))(a1);
}

uint64_t sub_214BD0764(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for DIPECIESSessionECV1()
{
  return self;
}

uint64_t sub_214BD07B0()
{
  uint64_t result = sub_214BD28AC();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_214BD07DC()
{
  return sub_214BD2A0C();
}

uint64_t sub_214BD07F4(void *a1)
{
  uint64_t v3 = v1;
  CFErrorRef error[2] = *(CFErrorRef *)MEMORY[0x263EF8340];
  if (a1)
  {
    *(void *)(v3 + 16) = a1;
    uint64_t v5 = a1;
    uint64_t v6 = SecKeyCopyPublicKey(v5);
    if (!v6)
    {
      LOWORD(error[0]) = 121;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D32BC0, 0, (unsigned __int16 *)error, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x293A5F2874696E69, 0xE800000000000000, 127);
      swift_willThrow();

      uint64_t v7 = *(void **)(v3 + 16);
LABEL_12:

LABEL_13:
      type metadata accessor for DIPECIESSessionECV3();
      swift_deallocPartialClassInstance();
      return v3;
    }
  }
  else
  {
    sub_214B765B4(0, 0, 0);
    if (v2)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v10 = (id)qword_26ACEBA50;
      sub_214D1A4A8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_214D1C1E0;
      swift_getErrorValue();
      uint64_t v12 = sub_214D1AC88();
      uint64_t v14 = v13;
      *(void *)(v11 + 56) = MEMORY[0x263F8D310];
      *(void *)(v11 + 64) = sub_214B5F3EC();
      *(void *)(v11 + 32) = v12;
      *(void *)(v11 + 40) = v14;
      sub_214D19E78();

      swift_bridgeObjectRelease();
      LOWORD(error[0]) = 0;
      os_log_type_t v15 = v2;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x8000000214D32B60, v2, (unsigned __int16 *)error, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x293A5F2874696E69, 0xE800000000000000, 135);

      swift_willThrow();
      goto LABEL_13;
    }
    error[0] = v8;
    error[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A40);
    swift_dynamicCast();
    uint64_t v6 = (__SecKey *)v22[1];
    *(void *)(v3 + 16) = v22[0];
  }
  *(void *)(v3 + 24) = v6;
  error[0] = 0;
  CFDataRef v16 = SecKeyCopyExternalRepresentation(v6, error);
  if (!v16)
  {
    LOWORD(v22[0]) = 121;
    sub_214B751B4(error[0], 0xD000000000000021, 0x8000000214D32B90, (__int16 *)v22);
    swift_willThrow();

    uint64_t v7 = *(void **)(v3 + 24);
    goto LABEL_12;
  }
  CFDataRef v17 = v16;
  uint64_t v18 = sub_214D19B68();
  uint64_t v20 = v19;

  *(void *)(v3 + 32) = v18;
  *(void *)(v3 + 40) = v20;
  return v3;
}

void sub_214BD0B8C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  v50[4] = *MEMORY[0x263EF8340];
  if (!a4
    || !*(void *)(a4 + 16)
    || (uint64_t v7 = v4, v11 = sub_214B881A4(0), (v12 & 1) == 0)
    || !*(void *)(a4 + 16)
    || (uint64_t v13 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v11),
        uint64_t v14 = *v13,
        unint64_t v15 = v13[1],
        unint64_t v16 = sub_214B881A4(1),
        (v17 & 1) == 0))
  {
    LOWORD(v50[0]) = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000053, 0x8000000214D32830, 0, (unsigned __int16 *)v50, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 178);
    swift_willThrow();
    return;
  }
  uint64_t v18 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v16);
  unint64_t v19 = v18[1];
  uint64_t v47 = v14;
  uint64_t v48 = *v18;
  uint64_t v20 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
      }
      uint64_t v20 = HIDWORD(a1) - (int)a1;
LABEL_12:
      id v23 = objc_allocWithZone(MEMORY[0x263EFF990]);
      sub_214B6A3A0(v47, v15);
      sub_214B6A3A0(v48, v19);
      unint64_t v46 = v15;
      id v24 = objc_msgSend(v23, sel_initWithLength_, v20);
      if (!v24)
      {
        LOWORD(v50[0]) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000029, 0x8000000214D32AA0, 0, (unsigned __int16 *)v50, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 181);
        swift_willThrow();
        uint64_t v30 = v48;
        unint64_t v31 = v19;
LABEL_18:
        sub_214B58A4C(v30, v31);
        unint64_t v29 = v15;
        uint64_t v28 = v47;
        goto LABEL_19;
      }
      uint64_t v25 = v24;
      id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF990]), sel_initWithLength_, 16);
      if (!v26)
      {
        LOWORD(v50[0]) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D32AD0, 0, (unsigned __int16 *)v50, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 184);
        swift_willThrow();

        uint64_t v30 = v48;
        unint64_t v31 = v19;
        goto LABEL_18;
      }
      char v44 = v26;
      uint64_t v45 = v25;
      uint64_t v27 = (*(uint64_t (**)(void, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(void *)v7 + 152))(0, a3, v47, v15, v48, v19);
      if (v5)
      {

        sub_214B58A4C(v48, v19);
        uint64_t v28 = v47;
        unint64_t v29 = v15;
LABEL_19:
        sub_214B58A4C(v28, v29);
        return;
      }
      uint64_t v32 = v27;
      uint64_t v33 = v44;
      switch(a2 >> 62)
      {
        case 0uLL:
          v49[0] = a1;
          LOWORD(v49[1]) = a2;
          BYTE2(v49[1]) = BYTE2(a2);
          BYTE3(v49[1]) = BYTE3(a2);
          BYTE4(v49[1]) = BYTE4(a2);
          BYTE5(v49[1]) = BYTE5(a2);
          swift_retain();
          id v34 = v45;
          sub_214BD12F4((uint64_t)v49, (uint64_t)v49 + BYTE6(a2), v32, v34, v44, v50);
          sub_214B58A4C(v47, v46);
          sub_214B58A4C(v48, v19);
          swift_release();

          uint64_t v33 = v44;
          goto LABEL_28;
        case 1uLL:
          if (a1 >> 32 < (int)a1) {
            goto LABEL_31;
          }
          id v35 = v45;
          id v36 = v44;
          swift_retain();
          id v37 = v35;
          id v38 = v36;
          sub_214B6A3A0(a1, a2);
          sub_214BD27D8((int)a1, a1 >> 32, v32, v37, v38, v50);
          sub_214B58A4C(a1, a2);
LABEL_26:
          sub_214B58A4C(v47, v46);
          sub_214B58A4C(v48, v19);
LABEL_27:

LABEL_28:
          swift_release();

          break;
        case 2uLL:
          uint64_t v39 = *(void *)(a1 + 16);
          uint64_t v40 = *(void *)(a1 + 24);
          id v41 = v45;
          id v42 = v44;
          swift_retain();
          id v37 = v41;
          id v43 = v42;
          swift_retain();
          swift_retain();
          sub_214BD27D8(v39, v40, v32, v37, v43, v50);
          swift_release();
          swift_release();
          goto LABEL_26;
        case 3uLL:
          memset(v49, 0, 14);
          swift_retain();
          id v37 = v45;
          sub_214BD12F4((uint64_t)v49, (uint64_t)v49, v32, v37, v44, v50);
          sub_214B58A4C(v47, v46);
          sub_214B58A4C(v48, v19);
          swift_release();
          goto LABEL_27;
        default:
          JUMPOUT(0);
      }
      return;
    case 2uLL:
      uint64_t v22 = *(void *)(a1 + 16);
      uint64_t v21 = *(void *)(a1 + 24);
      uint64_t v20 = v21 - v22;
      if (!__OFSUB__(v21, v22)) {
        goto LABEL_12;
      }
      goto LABEL_30;
    case 3uLL:
      goto LABEL_12;
    default:
      uint64_t v20 = BYTE6(a2);
      goto LABEL_12;
  }
}

uint64_t sub_214BD12F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  CFDataRef v11 = *(const __CFData **)(a3 + 16);
  uint64_t result = (uint64_t)CFDataGetBytePtr(v11);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v29 = a6;
  uint64_t result = (uint64_t)CFDataGetBytePtr(v11);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1) {
    uint64_t v13 = a2 - a1;
  }
  else {
    uint64_t v13 = 0;
  }
  id v14 = a4;
  id v15 = objc_msgSend(v14, sel_mutableBytes);
  id v16 = a5;
  id v28 = objc_msgSend(v16, sel_mutableBytes);
  int v17 = CCCryptorGCMOneshotEncrypt();
  if (v17)
  {
    int v18 = v17;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v30[0] = 0xD00000000000007ALL;
    v30[1] = 0x8000000214D32B00;
    int v31 = v18;
    uint64_t v19 = MEMORY[0x263F8E548];
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4440);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(inited + 32) = 20;
    *(void *)(inited + 64) = v19;
    *(_DWORD *)(inited + 40) = v18;
    unint64_t v21 = sub_214B7E744(inited);
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x8000000214D32B00, 0, (unsigned __int16 *)v30, 0, v21, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 208);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  objc_msgSend(v14, sel_appendData_, v16, v13, v15, v28, 16);
  uint64_t result = (uint64_t)CFDataGetBytePtr(v11);
  if (result)
  {
    uint64_t v22 = sub_214BD2958((unsigned char *)(result + 16), 16);
    unint64_t v24 = v23;
    *unint64_t v29 = v22;
    v29[1] = v23;
    sub_214B6A3A0(v22, v23);
    uint64_t v25 = sub_214D19B68();
    uint64_t v27 = v26;
    uint64_t result = sub_214B58A4C(v22, v24);
    _OWORD v29[2] = v25;
    v29[3] = v27;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

CFStringRef sub_214BD1598(const __CFString *a1, SecKeyRef key, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  unint64_t v7 = a4 >> 62;
  uint64_t v8 = v6;
  unsigned __int8 v9 = BYTE6(a6);
  unsigned __int8 v11 = BYTE6(a4);
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v15) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (v15 == 65)
      {
        unint64_t v19 = a6 >> 62;
        switch(a6 >> 62)
        {
          case 1uLL:
            LODWORD(v20) = HIDWORD(a5) - a5;
            if (__OFSUB__(HIDWORD(a5), a5)) {
              goto LABEL_47;
            }
            uint64_t v20 = (int)v20;
LABEL_18:
            if (v20 != 65)
            {
LABEL_33:
              *(void *)&long long v50 = 0;
              *((void *)&v50 + 1) = 0xE000000000000000;
              sub_214D1A7A8();
              sub_214D1A108();
              uint64_t v39 = 0;
              switch((int)v19)
              {
                case 0:
                  uint64_t v39 = (__CFError *)v9;
                  goto LABEL_38;
                case 1:
                  LODWORD(v39) = HIDWORD(a5) - a5;
                  if (__OFSUB__(HIDWORD(a5), a5)) {
                    goto LABEL_49;
                  }
                  uint64_t v39 = (__CFError *)(int)v39;
LABEL_38:
                  CFErrorRef error = v39;
                  sub_214D1AB78();
                  sub_214D1A108();
                  swift_bridgeObjectRelease();
                  a1 = (const __CFString *)*((void *)&v50 + 1);
                  uint64_t v42 = v50;
                  LOWORD(v50) = 74;
                  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v42, *((uint64_t *)&v50 + 1), 0, (unsigned __int16 *)&v50, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0xD00000000000001CLL, 0x8000000214D32A40, 285);
                  break;
                case 2:
                  uint64_t v41 = *(void *)(a5 + 16);
                  uint64_t v40 = *(void *)(a5 + 24);
                  BOOL v18 = __OFSUB__(v40, v41);
                  uint64_t v39 = (__CFError *)(v40 - v41);
                  if (!v18) {
                    goto LABEL_38;
                  }
                  goto LABEL_50;
                case 3:
                  goto LABEL_38;
                default:
                  goto LABEL_51;
              }
              goto LABEL_39;
            }
            CFErrorRef error = 0;
            CFDataRef v27 = SecKeyCopyExternalRepresentation(key, &error);
            if (!v27)
            {
              LOWORD(v50) = 121;
              sub_214B751B4(error, 0xD000000000000029, 0x8000000214D329D0, (__int16 *)&v50);
              goto LABEL_40;
            }
            CFDataRef v28 = v27;
            uint64_t v47 = sub_214D19B68();
            unint64_t v48 = v29;

            uint64_t v30 = v8[4];
            unint64_t v31 = v8[5];
            if (a1) {
              uint64_t v32 = v8[4];
            }
            else {
              uint64_t v32 = v47;
            }
            if (a1) {
              unint64_t v33 = v8[5];
            }
            else {
              unint64_t v33 = v48;
            }
            unint64_t v45 = v33;
            uint64_t v46 = v32;
            if (a1) {
              uint64_t v34 = v47;
            }
            else {
              uint64_t v34 = v8[4];
            }
            if (a1) {
              unint64_t v35 = v48;
            }
            else {
              unint64_t v35 = v8[5];
            }
            unint64_t v44 = v35;
            long long v50 = xmmword_214D1C200;
            sub_214B6A3A0(v30, v31);
            sub_214B6A3A0(v47, v48);
            sub_214D19B78();
            sub_214D19B78();
            sub_214D19B78();
            sub_214D19B78();
            id v36 = (__SecKey *)v8[2];
            CFStringRef v37 = (const __CFString *)*MEMORY[0x263F17290];
            long long v38 = v50;
            sub_214B6A3A0(v50, *((unint64_t *)&v50 + 1));
            a1 = sub_214B761C4(v36, key, v37, 32, v38, *((unint64_t *)&v38 + 1));
            sub_214B58A4C(v38, *((unint64_t *)&v38 + 1));
            sub_214B58A4C(v34, v44);
            sub_214B58A4C(v46, v45);
            sub_214B58A4C(v47, v48);
            sub_214B58A4C(v38, *((unint64_t *)&v38 + 1));
            break;
          case 2uLL:
            uint64_t v26 = *(void *)(a5 + 16);
            uint64_t v25 = *(void *)(a5 + 24);
            BOOL v18 = __OFSUB__(v25, v26);
            uint64_t v20 = v25 - v26;
            if (!v18) {
              goto LABEL_18;
            }
            goto LABEL_48;
          case 3uLL:
            goto LABEL_33;
          default:
            uint64_t v20 = BYTE6(a6);
            goto LABEL_18;
        }
      }
      else
      {
LABEL_9:
        *(void *)&long long v50 = 0;
        *((void *)&v50 + 1) = 0xE000000000000000;
        sub_214D1A7A8();
        sub_214D1A108();
        unint64_t v21 = 0;
        switch((int)v7)
        {
          case 0:
            unint64_t v21 = (__CFError *)v11;
            goto LABEL_14;
          case 1:
            LODWORD(v21) = HIDWORD(a3) - a3;
            if (__OFSUB__(HIDWORD(a3), a3)) {
              goto LABEL_45;
            }
            unint64_t v21 = (__CFError *)(int)v21;
LABEL_14:
            CFErrorRef error = v21;
            sub_214D1AB78();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            a1 = (const __CFString *)*((void *)&v50 + 1);
            uint64_t v24 = v50;
            LOWORD(v50) = 74;
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v24, *((uint64_t *)&v50 + 1), 0, (unsigned __int16 *)&v50, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0xD00000000000001CLL, 0x8000000214D32A40, 282);
LABEL_39:
            swift_bridgeObjectRelease();
LABEL_40:
            swift_willThrow();
            break;
          case 2:
            uint64_t v23 = *(void *)(a3 + 16);
            uint64_t v22 = *(void *)(a3 + 24);
            BOOL v18 = __OFSUB__(v22, v23);
            unint64_t v21 = (__CFError *)(v22 - v23);
            if (!v18) {
              goto LABEL_14;
            }
            goto LABEL_46;
          case 3:
            goto LABEL_14;
          default:
LABEL_51:
            JUMPOUT(0);
        }
      }
      return a1;
    case 2uLL:
      uint64_t v17 = *(void *)(a3 + 16);
      uint64_t v16 = *(void *)(a3 + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v15 = BYTE6(a4);
      goto LABEL_6;
  }
}

uint64_t sub_214BD1AD4()
{
  sub_214B58A4C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPECIESSessionECV3()
{
  return self;
}

uint64_t sub_214BD1B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_214BD2748(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_214BD0B8C);
}

uint64_t sub_214BD1B6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 32);
  sub_214B6A3A0(v2, *(void *)(v1 + 40));
  return v2;
}

__SecKey *sub_214BD1BB4(char a1, SecKeyRef key)
{
  uint64_t v3 = v2;
  uint64_t v4 = key;
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFDataRef v6 = SecKeyCopyExternalRepresentation(key, error);
  if (v6)
  {
    CFDataRef v7 = v6;
    uint64_t v8 = sub_214D19B68();
    unint64_t v10 = v9;

    uint64_t v11 = v3[4];
    unint64_t v12 = v3[5];
    if (a1) {
      uint64_t v13 = v3[4];
    }
    else {
      uint64_t v13 = v8;
    }
    if (a1) {
      unint64_t v14 = v3[5];
    }
    else {
      unint64_t v14 = v10;
    }
    if (a1) {
      uint64_t v15 = v8;
    }
    else {
      uint64_t v15 = v3[4];
    }
    if (a1) {
      unint64_t v16 = v10;
    }
    else {
      unint64_t v16 = v3[5];
    }
    long long v20 = xmmword_214D1C200;
    sub_214B6A3A0(v11, v12);
    sub_214B6A3A0(v8, v10);
    sub_214D19B78();
    sub_214D19B78();
    uint64_t v17 = (__SecKey *)v3[2];
    CFStringRef v18 = (const __CFString *)*MEMORY[0x263F17290];
    sub_214B6A3A0(0, 0xC000000000000000);
    uint64_t v4 = (__SecKey *)sub_214B761C4(v17, v4, v18, 32, 0, 0xC000000000000000);
    sub_214B58A4C(0, 0xC000000000000000);
    sub_214B58A4C(v15, v16);
    sub_214B58A4C(v13, v14);
    sub_214B58A4C(v8, v10);
    sub_214B58A4C(0, 0xC000000000000000);
  }
  else
  {
    LOWORD(v20) = 121;
    sub_214B751B4(error[0], 0xD000000000000029, 0x8000000214D329D0, (__int16 *)&v20);
    swift_willThrow();
  }
  return v4;
}

uint64_t type metadata accessor for DIPECIESSessionECV3SH()
{
  return self;
}

uint64_t sub_214BD1DA4(uint64_t a1, uint64_t a2, __SecKey *a3, uint64_t a4)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  if (!a4
    || (uint64_t v5 = v4, !*(void *)(a4 + 16))
    || (unint64_t v8 = sub_214B881A4(0), (v9 & 1) == 0)
    || !*(void *)(a4 + 16)
    || (unint64_t v10 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v8),
        uint64_t v12 = *v10,
        unint64_t v11 = v10[1],
        unint64_t v13 = sub_214B881A4(1),
        (v14 & 1) == 0))
  {
    LOWORD(v72) = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000053, 0x8000000214D32830, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 357);
    return swift_willThrow();
  }
  uint64_t v15 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v13);
  unint64_t v16 = v15[1];
  uint64_t v69 = *v15;
  switch(v11 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(v12) - v12;
      if (__OFSUB__(HIDWORD(v12), v12))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
      }
      uint64_t v17 = (int)v17;
LABEL_12:
      if (v17 != 65)
      {
LABEL_15:
        sub_214B6A3A0(v12, v11);
        uint64_t v23 = v69;
        unint64_t v24 = v16;
        sub_214B6A3A0(v69, v16);
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        *(void *)&long long v72 = 0xD00000000000002FLL;
        *((void *)&v72 + 1) = 0x8000000214D32890;
        uint64_t v25 = 0;
        switch(v11 >> 62)
        {
          case 0uLL:
            uint64_t v25 = (__CFError *)BYTE6(v11);
            goto LABEL_20;
          case 1uLL:
            LODWORD(v25) = HIDWORD(v12) - v12;
            if (__OFSUB__(HIDWORD(v12), v12)) {
              goto LABEL_55;
            }
            uint64_t v25 = (__CFError *)(int)v25;
LABEL_20:
            CFErrorRef error = v25;
            sub_214D1AB78();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            uint64_t v29 = *((void *)&v72 + 1);
            uint64_t v28 = v72;
            LOWORD(v72) = 74;
            uint64_t v30 = 360;
            break;
          case 2uLL:
            uint64_t v27 = *(void *)(v12 + 16);
            uint64_t v26 = *(void *)(v12 + 24);
            BOOL v21 = __OFSUB__(v26, v27);
            uint64_t v25 = (__CFError *)(v26 - v27);
            if (!v21) {
              goto LABEL_20;
            }
            goto LABEL_56;
          case 3uLL:
            goto LABEL_20;
          default:
LABEL_66:
            JUMPOUT(0);
        }
        goto LABEL_35;
      }
      switch(v16 >> 62)
      {
        case 1uLL:
          LODWORD(v22) = HIDWORD(v69) - v69;
          if (__OFSUB__(HIDWORD(v69), v69)) {
            goto LABEL_57;
          }
          uint64_t v22 = (int)v22;
LABEL_24:
          if (v22 != 65)
          {
LABEL_29:
            *(void *)&long long v72 = 0;
            *((void *)&v72 + 1) = 0xE000000000000000;
            sub_214B6A3A0(v12, v11);
            uint64_t v23 = v69;
            unint64_t v24 = v16;
            sub_214B6A3A0(v69, v16);
            sub_214D1A7A8();
            sub_214D1A108();
            unint64_t v49 = 0;
            switch(v16 >> 62)
            {
              case 0uLL:
                unint64_t v49 = (__CFError *)BYTE6(v16);
                goto LABEL_34;
              case 1uLL:
                LODWORD(v49) = HIDWORD(v69) - v69;
                if (__OFSUB__(HIDWORD(v69), v69)) {
                  goto LABEL_59;
                }
                unint64_t v49 = (__CFError *)(int)v49;
LABEL_34:
                CFErrorRef error = v49;
                sub_214D1AB78();
                sub_214D1A108();
                swift_bridgeObjectRelease();
                uint64_t v29 = *((void *)&v72 + 1);
                uint64_t v28 = v72;
                LOWORD(v72) = 74;
                uint64_t v30 = 363;
                break;
              case 2uLL:
                uint64_t v51 = *(void *)(v69 + 16);
                uint64_t v50 = *(void *)(v69 + 24);
                BOOL v21 = __OFSUB__(v50, v51);
                unint64_t v49 = (__CFError *)(v50 - v51);
                if (!v21) {
                  goto LABEL_34;
                }
                goto LABEL_60;
              case 3uLL:
                goto LABEL_34;
              default:
                goto LABEL_66;
            }
LABEL_35:
            DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v28, v29, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, v30);
            swift_bridgeObjectRelease();
            swift_willThrow();
            sub_214B58A4C(v23, v24);
            uint64_t v52 = v12;
            unint64_t v53 = v11;
            return sub_214B58A4C(v52, v53);
          }
          CFErrorRef error = 0;
          sub_214B6A3A0(v12, v11);
          sub_214B6A3A0(v69, v16);
          CFDataRef v33 = SecKeyCopyExternalRepresentation(a3, &error);
          unint64_t v68 = v16;
          if (!v33)
          {
            LOWORD(v72) = 198;
            sub_214B751B4(error, 0xD000000000000049, 0x8000000214D32900, (__int16 *)&v72);
            swift_willThrow();
            sub_214B58A4C(v12, v11);
            uint64_t v52 = v69;
            unint64_t v53 = v16;
            return sub_214B58A4C(v52, v53);
          }
          CFDataRef v34 = v33;
          uint64_t v67 = sub_214D19B68();
          unint64_t v36 = v35;

          long long v72 = xmmword_214D1C200;
          sub_214D19B78();
          unint64_t v66 = v36;
          sub_214D19B78();
          sub_214D19B78();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AC8);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
          long long v38 = (void *)*MEMORY[0x263F173E0];
          long long v39 = v72;
          *(void *)(inited + 64) = MEMORY[0x263F06F78];
          *(void *)(inited + 32) = v38;
          *(_OWORD *)(inited + 40) = v39;
          id v40 = v38;
          sub_214B6A3A0(v39, *((unint64_t *)&v39 + 1));
          sub_214B7EB68(inited);
          uint64_t v41 = (void *)sub_214D19B38();
          sub_214B76450();
          sub_214BD2B60();
          uint64_t v42 = (void *)sub_214D19F88();
          swift_bridgeObjectRelease();
          EncryptedDataWithParameters = (void *)DIPSecKeyCreateEncryptedDataWithParameters();

          if (!EncryptedDataWithParameters)
          {
            __int16 v70 = 121;
            sub_214B751B4(error, 0xD00000000000003DLL, 0x8000000214D32950, &v70);
            swift_willThrow();
            sub_214B58A4C(v12, v11);
            sub_214B58A4C(v69, v68);
            unint64_t v55 = v66;
            uint64_t v54 = v67;
LABEL_48:
            sub_214B58A4C(v54, v55);
            unint64_t v53 = *((void *)&v39 + 1);
            uint64_t v52 = v39;
            return sub_214B58A4C(v52, v53);
          }
          uint64_t v44 = sub_214D19B68();
          unint64_t v46 = v45;

          unint64_t v47 = v46 >> 62;
          switch(v46 >> 62)
          {
            case 1uLL:
              LODWORD(v48) = HIDWORD(v44) - v44;
              if (__OFSUB__(HIDWORD(v44), v44))
              {
                __break(1u);
LABEL_62:
                __break(1u);
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              uint64_t v48 = (int)v48;
LABEL_42:
              if (v48 < 66)
              {
LABEL_47:
                __int16 v70 = 121;
                DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000032, 0x8000000214D32990, 0, (unsigned __int16 *)&v70, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 383);
                swift_willThrow();
                sub_214B58A4C(v12, v11);
                sub_214B58A4C(v69, v68);
                sub_214B58A4C(v44, v46);
                uint64_t v54 = v67;
                unint64_t v55 = v66;
                goto LABEL_48;
              }
              uint64_t v58 = sub_214D19B88();
              uint64_t v59 = *(void *)(v5 + 16);
              unint64_t v60 = *(void *)(v5 + 24);
              *(void *)(v5 + 16) = v58;
              *(void *)(v5 + 24) = v61;
              sub_214B59EAC(v59, v60);
              if (v47)
              {
                if (v47 == 1)
                {
                  uint64_t v62 = v69;
                  if (!__OFSUB__(HIDWORD(v44), v44))
                  {
                    uint64_t v63 = HIDWORD(v44) - (int)v44;
                    goto LABEL_51;
                  }
                  goto LABEL_63;
                }
                uint64_t v65 = *(void *)(v44 + 16);
                uint64_t v64 = *(void *)(v44 + 24);
                uint64_t v63 = v64 - v65;
                uint64_t v62 = v69;
                if (__OFSUB__(v64, v65))
                {
LABEL_64:
                  __break(1u);
                  goto LABEL_65;
                }
              }
              else
              {
                uint64_t v63 = BYTE6(v46);
                uint64_t v62 = v69;
              }
LABEL_51:
              if (v63 < 65)
              {
LABEL_65:
                __break(1u);
                JUMPOUT(0x214BD2668);
              }
              sub_214D19B88();
              sub_214B58A4C(v12, v11);
              sub_214B58A4C(v62, v68);
              sub_214B58A4C(v44, v46);
              sub_214B58A4C(v67, v66);
              sub_214B58A4C(v39, *((unint64_t *)&v39 + 1));
              return 0;
            case 2uLL:
              uint64_t v57 = *(void *)(v44 + 16);
              uint64_t v56 = *(void *)(v44 + 24);
              BOOL v21 = __OFSUB__(v56, v57);
              uint64_t v48 = v56 - v57;
              if (!v21) {
                goto LABEL_42;
              }
              goto LABEL_62;
            case 3uLL:
              goto LABEL_47;
            default:
              uint64_t v48 = BYTE6(v46);
              goto LABEL_42;
          }
        case 2uLL:
          uint64_t v32 = *(void *)(v69 + 16);
          uint64_t v31 = *(void *)(v69 + 24);
          BOOL v21 = __OFSUB__(v31, v32);
          uint64_t v22 = v31 - v32;
          if (!v21) {
            goto LABEL_24;
          }
          goto LABEL_58;
        case 3uLL:
          goto LABEL_29;
        default:
          uint64_t v22 = BYTE6(v16);
          goto LABEL_24;
      }
    case 2uLL:
      uint64_t v20 = *(void *)(v12 + 16);
      uint64_t v19 = *(void *)(v12 + 24);
      BOOL v21 = __OFSUB__(v19, v20);
      uint64_t v17 = v19 - v20;
      if (!v21) {
        goto LABEL_12;
      }
      goto LABEL_54;
    case 3uLL:
      goto LABEL_15;
    default:
      uint64_t v17 = BYTE6(v11);
      goto LABEL_12;
  }
}

uint64_t sub_214BD26B8()
{
  sub_214B59EAC(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPECIESSessionV3SecKey()
{
  return self;
}

uint64_t sub_214BD271C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_214BD2748(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_214BD1DA4);
}

uint64_t sub_214BD2748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t result = a7();
  if (v7) {
    return v9;
  }
  return result;
}

uint64_t sub_214BD2784()
{
  uint64_t v1 = sub_214BD2AA8();
  uint64_t v3 = v1;
  if (!v0) {
    sub_214B6A3A0(v1, v2);
  }
  return v3;
}

uint64_t sub_214BD27D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X4>, void *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_214D19888();
  uint64_t v13 = result;
  if (result)
  {
    uint64_t result = sub_214D198B8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v13 += a1 - result;
  }
  BOOL v14 = __OFSUB__(a2, a1);
  uint64_t v15 = a2 - a1;
  if (v14)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v16 = sub_214D198A8();
  if (v16 >= v15) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = v13 + v17;
  if (v13) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  sub_214BD12F4(v13, v19, a3, a4, a5, a6);

  return swift_release();
}

uint64_t sub_214BD28AC()
{
  unsigned __int16 v1 = 75;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003DLL, 0x8000000214D327C0, 0, &v1, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 75);
  return swift_willThrow();
}

uint64_t sub_214BD2958(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_214B587C8(__src, &__src[a2]);
  }
  sub_214D198C8();
  swift_allocObject();
  sub_214D19878();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_214D19AF8();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_214BD2A0C()
{
  unsigned __int16 v1 = 75;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002FLL, 0x8000000214D32700, 0, &v1, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0xD000000000000013, 0x8000000214D327A0, 102);
  return swift_willThrow();
}

uint64_t sub_214BD2AA8()
{
  if (*(void *)(v0 + 24) >> 60 != 15) {
    return *(void *)(v0 + 16);
  }
  unsigned __int16 v2 = 73;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x8000000214D32800, 0, &v2, 0, 0, 0xD00000000000006ELL, 0x8000000214D32730, 0xD000000000000013, 0x8000000214D327A0, 428);
  return swift_willThrow();
}

unint64_t sub_214BD2B60()
{
  unint64_t result = qword_26ACE3A18;
  if (!qword_26ACE3A18)
  {
    sub_214B76450();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3A18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ECIESOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BD2C84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ECIESOption()
{
  return &type metadata for ECIESOption;
}

unint64_t sub_214BD2CC0()
{
  unint64_t result = qword_26ACE3610;
  if (!qword_26ACE3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3610);
  }
  return result;
}

uint64_t sub_214BD2D14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a2[2];
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = v6;
      uint64_t v7 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v7;
      uint64_t v8 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v8;
      uint64_t v9 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v9;
      uint64_t v10 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v10;
      uint64_t v11 = a2[12];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v11;
      uint64_t v12 = a2[14];
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v12;
      uint64_t v13 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = a2[19];
      if (v14)
      {
LABEL_4:
        *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v14;
        uint64_t v15 = a2[21];
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v15;
        uint64_t v16 = a2[23];
        *(void *)(a1 + 176) = a2[22];
        *(void *)(a1 + 184) = v16;
        uint64_t v17 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v17;
        uint64_t v18 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v18;
        uint64_t v19 = a2[29];
        *(void *)(a1 + 224) = a2[28];
        *(void *)(a1 + 232) = v19;
        uint64_t v20 = a2[31];
        *(void *)(a1 + 240) = a2[30];
        *(void *)(a1 + 248) = v20;
        uint64_t v21 = a2[33];
        *(void *)(a1 + 256) = a2[32];
        *(void *)(a1 + 264) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
    }
    else
    {
      long long v23 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v23;
      *(void *)(a1 + 128) = a2[16];
      long long v24 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v24;
      long long v25 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v25;
      long long v26 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v26;
      uint64_t v14 = a2[19];
      if (v14) {
        goto LABEL_4;
      }
    }
    long long v27 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v27;
    *(void *)(a1 + 264) = a2[33];
    long long v28 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v28;
    long long v29 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v29;
    long long v30 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v30;
LABEL_8:
    uint64_t v31 = a2[35];
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v31;
    uint64_t v32 = a2[37];
    *(void *)(a1 + 288) = a2[36];
    *(void *)(a1 + 296) = v32;
    uint64_t v33 = a2[39];
    *(void *)(a1 + 304) = a2[38];
    *(void *)(a1 + 312) = v33;
    uint64_t v34 = a2[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 == 1)
    {
      long long v35 = *((_OWORD *)a2 + 21);
      *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
      *(_OWORD *)(a1 + 336) = v35;
      *(void *)(a1 + 352) = a2[44];
      uint64_t v36 = a2[46];
      if (v36)
      {
LABEL_10:
        *(void *)(a1 + 360) = a2[45];
        *(void *)(a1 + 368) = v36;
        uint64_t v37 = a2[48];
        *(void *)(a1 + 376) = a2[47];
        *(void *)(a1 + 384) = v37;
        uint64_t v38 = a2[50];
        *(void *)(a1 + 392) = a2[49];
        *(void *)(a1 + 400) = v38;
        uint64_t v39 = a2[52];
        *(void *)(a1 + 408) = a2[51];
        *(void *)(a1 + 416) = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        uint64_t v43 = a2[54];
        *(void *)(a1 + 424) = a2[53];
        *(void *)(a1 + 432) = v43;
        uint64_t v44 = a2[56];
        *(void *)(a1 + 440) = a2[55];
        *(void *)(a1 + 448) = v44;
        uint64_t v45 = a2[58];
        *(void *)(a1 + 456) = a2[57];
        *(void *)(a1 + 464) = v45;
        uint64_t v46 = a2[60];
        *(void *)(a1 + 472) = a2[59];
        *(void *)(a1 + 480) = v46;
        uint64_t v47 = a2[62];
        *(void *)(a1 + 488) = a2[61];
        *(void *)(a1 + 496) = v47;
        uint64_t v48 = a2[64];
        *(void *)(a1 + 504) = a2[63];
        *(void *)(a1 + 512) = v48;
        *(unsigned char *)(a1 + 520) = *((unsigned char *)a2 + 520);
        *(void *)(a1 + 528) = a2[66];
        *(void *)(a1 + 536) = a2[67];
        *(void *)(a1 + 544) = a2[68];
        *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
        *(void *)(a1 + 560) = a2[70];
        uint64_t v49 = *(int *)(a3 + 52);
        uint64_t v53 = a1 + v49;
        uint64_t v55 = (uint64_t)a2 + v49;
        *(unsigned char *)(a1 + 568) = *((unsigned char *)a2 + 568);
        uint64_t v50 = sub_214D1A8C8();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v53, v55, v50);
        return a1;
      }
    }
    else
    {
      uint64_t v40 = a2[41];
      *(void *)(a1 + 320) = a2[40];
      *(void *)(a1 + 328) = v40;
      *(unsigned char *)(a1 + 336) = *((unsigned char *)a2 + 336);
      *(void *)(a1 + 344) = a2[43];
      *(void *)(a1 + 352) = v34;
      swift_bridgeObjectRetain();
      uint64_t v36 = a2[46];
      if (v36) {
        goto LABEL_10;
      }
    }
    long long v41 = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 45);
    *(_OWORD *)(a1 + 376) = v41;
    long long v42 = *(_OWORD *)(a2 + 51);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 408) = v42;
    goto LABEL_13;
  }
  uint64_t v22 = *a2;
  *(void *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_214BD3108(void *a1, uint64_t a2)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[44] != 1) {
    swift_bridgeObjectRelease();
  }
  if (a1[46])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_214D1A8C8();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_214BD328C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v9;
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = *(void *)(a2 + 152);
    if (v13)
    {
LABEL_3:
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v13;
      uint64_t v14 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v14;
      uint64_t v15 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v15;
      uint64_t v16 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v16;
      uint64_t v17 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v17;
      uint64_t v18 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v18;
      uint64_t v19 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v19;
      uint64_t v20 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v21;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
    long long v23 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v23;
    long long v24 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v24;
    uint64_t v13 = *(void *)(a2 + 152);
    if (v13) {
      goto LABEL_3;
    }
  }
  long long v25 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v25;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v26 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v26;
  long long v27 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v27;
  long long v28 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v28;
LABEL_6:
  uint64_t v29 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v29;
  uint64_t v30 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v30;
  uint64_t v31 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v31;
  uint64_t v32 = *(void *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 != 1)
  {
    uint64_t v38 = *(void *)(a2 + 328);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v38;
    *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v32;
    swift_bridgeObjectRetain();
    uint64_t v34 = *(void *)(a2 + 368);
    if (v34) {
      goto LABEL_8;
    }
LABEL_10:
    long long v39 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v39;
    long long v40 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v40;
    goto LABEL_11;
  }
  long long v33 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v33;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v34 = *(void *)(a2 + 368);
  if (!v34) {
    goto LABEL_10;
  }
LABEL_8:
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v34;
  uint64_t v35 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v35;
  uint64_t v36 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v36;
  uint64_t v37 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  uint64_t v41 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v41;
  uint64_t v42 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v42;
  uint64_t v43 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v43;
  uint64_t v44 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v44;
  uint64_t v45 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v45;
  uint64_t v46 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v46;
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  uint64_t v47 = *(int *)(a3 + 52);
  uint64_t v51 = a1 + v47;
  uint64_t v53 = a2 + v47;
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  uint64_t v48 = sub_214D1A8C8();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50(v51, v53, v48);
  return a1;
}

uint64_t sub_214BD3630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v7 = *(_OWORD *)(a2 + 64);
      long long v9 = *(_OWORD *)(a2 + 16);
      long long v8 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      long long v11 = *(_OWORD *)(a2 + 96);
      long long v10 = *(_OWORD *)(a2 + 112);
      long long v12 = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 80) = v12;
    }
  }
  else if (v6)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v13 = *(_OWORD *)(a2 + 16);
    long long v14 = *(_OWORD *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v14;
    long long v16 = *(_OWORD *)(a2 + 80);
    long long v17 = *(_OWORD *)(a2 + 96);
    long long v18 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v18;
    *(_OWORD *)(a1 + 80) = v16;
  }
  uint64_t v19 = (_OWORD *)(a1 + 136);
  uint64_t v20 = (_OWORD *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v21)
    {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1 + 136);
      *uint64_t v19 = *v20;
      long long v22 = *(_OWORD *)(a2 + 200);
      long long v24 = *(_OWORD *)(a2 + 152);
      long long v23 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v22;
      *(_OWORD *)(a1 + 152) = v24;
      *(_OWORD *)(a1 + 168) = v23;
      long long v26 = *(_OWORD *)(a2 + 232);
      long long v25 = *(_OWORD *)(a2 + 248);
      long long v27 = *(_OWORD *)(a2 + 216);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(_OWORD *)(a1 + 232) = v26;
      *(_OWORD *)(a1 + 248) = v25;
      *(_OWORD *)(a1 + 216) = v27;
    }
  }
  else if (v21)
  {
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v19 = *v20;
    long long v28 = *(_OWORD *)(a2 + 152);
    long long v29 = *(_OWORD *)(a2 + 168);
    long long v30 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v30;
    *(_OWORD *)(a1 + 152) = v28;
    *(_OWORD *)(a1 + 168) = v29;
    long long v31 = *(_OWORD *)(a2 + 216);
    long long v32 = *(_OWORD *)(a2 + 232);
    long long v33 = *(_OWORD *)(a2 + 248);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 232) = v32;
    *(_OWORD *)(a1 + 248) = v33;
    *(_OWORD *)(a1 + 216) = v31;
  }
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = (long long *)(a1 + 320);
  uint64_t v35 = (long long *)(a2 + 320);
  uint64_t v36 = *(void *)(a2 + 352);
  if (*(void *)(a1 + 352) == 1)
  {
    if (v36 == 1)
    {
      long long v37 = *v35;
      long long v38 = *(_OWORD *)(a2 + 336);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *uint64_t v34 = v37;
      *(_OWORD *)(a1 + 336) = v38;
    }
    else
    {
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      uint64_t v41 = *(void *)(a2 + 328);
      *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
      *(void *)(a1 + 328) = v41;
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 1)
  {
    sub_214B78054(a1 + 320);
    uint64_t v39 = *(void *)(a2 + 352);
    long long v40 = *(_OWORD *)(a2 + 336);
    *uint64_t v34 = *v35;
    *(_OWORD *)(a1 + 336) = v40;
    *(void *)(a1 + 352) = v39;
  }
  else
  {
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    uint64_t v42 = *(void *)(a2 + 328);
    *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
    *(void *)(a1 + 328) = v42;
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = (_OWORD *)(a1 + 360);
  uint64_t v44 = (long long *)(a2 + 360);
  uint64_t v45 = *(void *)(a2 + 368);
  if (*(void *)(a1 + 368))
  {
    if (v45)
    {
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 360);
      long long v46 = *(_OWORD *)(a2 + 408);
      long long v48 = *v44;
      long long v47 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v46;
      *uint64_t v43 = v48;
      *(_OWORD *)(a1 + 376) = v47;
    }
  }
  else if (v45)
  {
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v49 = *v44;
    long long v50 = *(_OWORD *)(a2 + 376);
    long long v51 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v51;
    *uint64_t v43 = v49;
    *(_OWORD *)(a1 + 376) = v50;
  }
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_retain();
  swift_release();
  uint64_t v52 = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(void *)(a1 + 512) = v52;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  uint64_t v53 = *(int *)(a3 + 52);
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_214D1A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  return a1;
}

uint64_t sub_214BD3ECC(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BD3F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  long long v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  long long v10 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v10;
  long long v11 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v11;
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  long long v12 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 488) = v12;
  long long v13 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v13;
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  long long v14 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v14;
  long long v15 = *(_OWORD *)(a2 + 520);
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v15;
  uint64_t v19 = sub_214D1A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_214BD407C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214BD3ECC(a1);
  }
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v16;
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
LABEL_6:
  if (*(void *)(a1 + 152))
  {
    uint64_t v18 = *(void *)(a2 + 152);
    if (v18)
    {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214BD3ECC(a1 + 136);
  }
  long long v26 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v26;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v27 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v27;
  long long v28 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v28;
  long long v29 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v29;
LABEL_11:
  uint64_t v30 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v32;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 352) == 1)
  {
LABEL_14:
    long long v34 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v34;
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    goto LABEL_16;
  }
  uint64_t v33 = *(void *)(a2 + 352);
  if (v33 == 1)
  {
    sub_214B78054(a1 + 320);
    goto LABEL_14;
  }
  uint64_t v35 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v35;
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v33;
  swift_bridgeObjectRelease();
LABEL_16:
  if (!*(void *)(a1 + 368))
  {
LABEL_20:
    long long v40 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v40;
    long long v41 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v41;
    goto LABEL_21;
  }
  uint64_t v36 = *(void *)(a2 + 368);
  if (!v36)
  {
    sub_214B78000(a1 + 360);
    goto LABEL_20;
  }
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v39;
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v42 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v44;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v46;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_release();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(unsigned char *)(a1 + 520) = *(unsigned char *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  uint64_t v47 = *(int *)(a3 + 52);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_214D1A8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t sub_214BD4444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214BD4458);
}

uint64_t sub_214BD4458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 448);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_214D1A8C8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_214BD4508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214BD451C);
}

uint64_t sub_214BD451C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 448) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_214D1A8C8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 52);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentResult()
{
  uint64_t result = qword_26784D5F0;
  if (!qword_26784D5F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214BD4610()
{
  uint64_t result = sub_214D1A8C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 sub_214BD46D8@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v35 = a2[1];
  long long v36 = *a2;
  long long v34 = a2[2];
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  type metadata accessor for ODNAssessmentResult();
  sub_214D1A898();
  long long v13 = *(_OWORD *)(a3 + 112);
  v37[6] = *(_OWORD *)(a3 + 96);
  v37[7] = v13;
  uint64_t v38 = *(void *)(a3 + 128);
  long long v14 = *(_OWORD *)(a3 + 48);
  v37[2] = *(_OWORD *)(a3 + 32);
  v37[3] = v14;
  long long v15 = *(_OWORD *)(a3 + 80);
  v37[4] = *(_OWORD *)(a3 + 64);
  v37[5] = v15;
  long long v16 = *(_OWORD *)(a3 + 16);
  v37[0] = *(_OWORD *)a3;
  v37[1] = v16;
  nullsub_1(v37);
  sub_214B58AA4((uint64_t)v37, a6);
  long long v17 = *(_OWORD *)(a4 + 112);
  v39[6] = *(_OWORD *)(a4 + 96);
  v39[7] = v17;
  uint64_t v40 = *(void *)(a4 + 128);
  long long v18 = *(_OWORD *)(a4 + 48);
  v39[2] = *(_OWORD *)(a4 + 32);
  v39[3] = v18;
  long long v19 = *(_OWORD *)(a4 + 80);
  v39[4] = *(_OWORD *)(a4 + 64);
  v39[5] = v19;
  long long v20 = *(_OWORD *)(a4 + 16);
  v39[0] = *(_OWORD *)a4;
  v39[1] = v20;
  nullsub_1(v39);
  sub_214B58AA4((uint64_t)v39, a6 + 136);
  uint64_t v21 = (int *)type metadata accessor for PregeneratedAssessment();
  uint64_t v22 = (uint64_t *)(a1 + v21[12]);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)(a6 + 272) = v24;
  *(void *)(a6 + 280) = v23;
  uint64_t v25 = (void *)(a1 + v21[6]);
  uint64_t v26 = v25[1];
  *(void *)(a6 + 288) = *v25;
  *(void *)(a6 + 296) = v26;
  *(_OWORD *)(a6 + 304) = 0u;
  *(_OWORD *)(a6 + 320) = 0u;
  *(_OWORD *)(a6 + 336) = 0u;
  *(void *)(a6 + 352) = 1;
  *(_OWORD *)(a6 + 360) = v36;
  *(_OWORD *)(a6 + 376) = v35;
  *(_OWORD *)(a6 + 392) = v34;
  *(void *)(a6 + 408) = v11;
  *(void *)(a6 + 416) = v12;
  long long v27 = (uint64_t *)(a1 + v21[19]);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214BD4880(a1);
  *(void *)(a6 + 424) = v29;
  *(void *)(a6 + 432) = v28;
  long long v30 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(a6 + 536) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(a6 + 552) = v30;
  *(unsigned char *)(a6 + 568) = *(unsigned char *)(a5 + 128);
  long long v31 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a6 + 472) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a6 + 488) = v31;
  long long v32 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(a6 + 504) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(a6 + 520) = v32;
  __n128 result = *(__n128 *)(a5 + 16);
  *(_OWORD *)(a6 + 440) = *(_OWORD *)a5;
  *(__n128 *)(a6 + 456) = result;
  return result;
}

uint64_t sub_214BD4880(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ODIAssessmentAdapter.adapt(withError:)@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = -1;
  switch(*a1)
  {
    case 1:
      uint64_t v3 = -2;
      break;
    case 2:
      uint64_t v3 = -3;
      break;
    case 3:
      uint64_t v3 = -4;
      break;
    case 4:
      uint64_t v3 = -5;
      break;
    case 5:
      uint64_t v3 = -6;
      break;
    case 6:
      uint64_t v3 = -7;
      break;
    case 7:
      uint64_t v3 = -8;
      break;
    case 8:
      uint64_t v3 = -9;
      break;
    case 9:
      uint64_t v3 = -10;
      break;
    case 0xA:
      uint64_t v3 = -11;
      break;
    case 0xB:
      uint64_t v3 = -12;
      break;
    case 0xC:
      uint64_t v3 = -13;
      break;
    case 0xD:
      uint64_t v3 = -14;
      break;
    case 0xE:
      uint64_t v3 = -15;
      break;
    case 0xF:
      uint64_t v3 = -16;
      break;
    case 0x10:
      uint64_t v3 = -17;
      break;
    case 0x11:
      uint64_t v3 = -18;
      break;
    case 0x12:
      uint64_t v3 = -19;
      break;
    case 0x13:
      uint64_t v3 = -20;
      break;
    case 0x14:
      uint64_t v3 = -21;
      break;
    case 0x15:
      uint64_t v3 = -22;
      break;
    case 0x16:
      uint64_t v3 = -28;
      break;
    case 0x17:
      uint64_t v3 = -29;
      break;
    case 0x18:
      uint64_t v3 = 200;
      break;
    case 0x19:
      uint64_t v3 = 20000;
      break;
    case 0x1A:
      uint64_t v3 = 20001;
      break;
    case 0x1B:
      uint64_t v3 = 20100;
      break;
    case 0x1C:
      uint64_t v3 = 40000;
      break;
    case 0x1D:
      uint64_t v3 = 40010;
      break;
    case 0x1E:
      uint64_t v3 = 40011;
      break;
    case 0x1F:
      uint64_t v3 = 40012;
      break;
    case 0x20:
      uint64_t v3 = 40013;
      break;
    case 0x21:
      uint64_t v3 = 40014;
      break;
    case 0x22:
      uint64_t v3 = 40015;
      break;
    case 0x23:
      uint64_t v3 = 40020;
      break;
    case 0x24:
      uint64_t v3 = 40021;
      break;
    case 0x25:
      uint64_t v3 = 40022;
      break;
    case 0x26:
      uint64_t v3 = 40023;
      break;
    case 0x27:
      uint64_t v3 = 40024;
      break;
    case 0x28:
      uint64_t v3 = 40025;
      break;
    case 0x29:
      uint64_t v3 = 40026;
      break;
    case 0x2A:
      uint64_t v3 = 40027;
      break;
    case 0x2B:
      uint64_t v3 = 40028;
      break;
    case 0x2C:
      uint64_t v3 = 40029;
      break;
    case 0x2D:
      uint64_t v3 = 40030;
      break;
    case 0x2E:
      uint64_t v3 = 40101;
      break;
    case 0x2F:
      uint64_t v3 = 40102;
      break;
    case 0x30:
      uint64_t v3 = 40200;
      break;
    case 0x31:
      uint64_t v3 = 40201;
      break;
    case 0x32:
      uint64_t v3 = 40205;
      break;
    case 0x33:
      uint64_t v3 = 40401;
      break;
    case 0x34:
      uint64_t v3 = 40402;
      break;
    case 0x35:
      uint64_t v3 = 40403;
      break;
    case 0x36:
      uint64_t v3 = 40404;
      break;
    case 0x37:
      uint64_t v3 = 40500;
      break;
    case 0x38:
      uint64_t v3 = 40600;
      break;
    case 0x39:
      uint64_t v3 = 40601;
      break;
    case 0x3A:
      uint64_t v3 = 50000;
      break;
    case 0x3B:
      uint64_t v3 = 50001;
      break;
    case 0x3C:
      uint64_t v3 = 50002;
      break;
    case 0x3D:
      uint64_t v3 = 99991;
      break;
    case 0x3E:
      uint64_t v3 = 99992;
      break;
    case 0x3F:
      uint64_t v3 = 99993;
      break;
    case 0x40:
      uint64_t v3 = -1101;
      break;
    case 0x41:
      uint64_t v3 = -1102;
      break;
    case 0x42:
      uint64_t v3 = -1103;
      break;
    case 0x43:
      uint64_t v3 = -1104;
      break;
    case 0x44:
      uint64_t v3 = -1110;
      break;
    case 0x45:
      uint64_t v3 = -1111;
      break;
    case 0x46:
      uint64_t v3 = -1112;
      break;
    case 0x47:
      uint64_t v3 = -1113;
      break;
    case 0x48:
      uint64_t v3 = -1114;
      break;
    case 0x49:
      uint64_t v3 = -1115;
      break;
    case 0x4A:
      uint64_t v3 = -1116;
      break;
    case 0x4B:
      uint64_t v3 = -1117;
      break;
    case 0x4C:
      uint64_t v3 = -1118;
      break;
    case 0x4D:
      uint64_t v3 = -1119;
      break;
    case 0x4E:
      uint64_t v3 = -1201;
      break;
    case 0x4F:
      uint64_t v3 = -1202;
      break;
    case 0x50:
      uint64_t v3 = -1203;
      break;
    case 0x51:
      uint64_t v3 = -1204;
      break;
    case 0x52:
      uint64_t v3 = -1402;
      break;
    case 0x53:
      uint64_t v3 = -1403;
      break;
    case 0x54:
      uint64_t v3 = -1404;
      break;
    case 0x55:
      uint64_t v3 = -1301;
      break;
    case 0x56:
      uint64_t v3 = -1302;
      break;
    case 0x57:
      uint64_t v3 = -1303;
      break;
    case 0x58:
      uint64_t v3 = -1304;
      break;
    case 0x59:
      uint64_t v3 = -1305;
      break;
    case 0x5A:
      uint64_t v3 = -1306;
      break;
    case 0x5B:
      uint64_t v3 = -1307;
      break;
    case 0x5C:
      uint64_t v3 = -1308;
      break;
    case 0x5D:
      uint64_t v3 = -1309;
      break;
    case 0x5E:
      uint64_t v3 = -1310;
      break;
    case 0x5F:
      uint64_t v3 = -1315;
      break;
    case 0x60:
      uint64_t v3 = -1316;
      break;
    case 0x61:
      uint64_t v3 = -1317;
      break;
    case 0x62:
      uint64_t v3 = -131600;
      break;
    case 0x63:
      uint64_t v3 = -2103;
      break;
    case 0x64:
      uint64_t v3 = -2104;
      break;
    case 0x65:
      uint64_t v3 = -2107;
      break;
    case 0x66:
      uint64_t v3 = -2110;
      break;
    case 0x67:
      uint64_t v3 = -2111;
      break;
    case 0x68:
      uint64_t v3 = -2112;
      break;
    case 0x69:
      uint64_t v3 = -2123;
      break;
    case 0x6A:
      uint64_t v3 = -2124;
      break;
    case 0x6B:
      uint64_t v3 = -2125;
      break;
    case 0x6C:
      uint64_t v3 = -2126;
      break;
    case 0x6D:
      uint64_t v3 = -2127;
      break;
    case 0x6E:
      uint64_t v3 = -3101;
      break;
    case 0x6F:
      uint64_t v3 = -3102;
      break;
    case 0x70:
      uint64_t v3 = -3103;
      break;
    case 0x71:
      uint64_t v3 = -3104;
      break;
    case 0x72:
      uint64_t v3 = -3105;
      break;
    case 0x73:
      uint64_t v3 = -3106;
      break;
    case 0x74:
      uint64_t v3 = -3107;
      break;
    case 0x75:
      uint64_t v3 = -3108;
      break;
    case 0x76:
      uint64_t v3 = -3109;
      break;
    case 0x77:
      uint64_t v3 = -3110;
      break;
    case 0x78:
      uint64_t v3 = -3111;
      break;
    case 0x79:
      uint64_t v3 = -3112;
      break;
    case 0x7A:
      uint64_t v3 = -3113;
      break;
    case 0x7B:
      uint64_t v3 = -3151;
      break;
    case 0x7C:
      uint64_t v3 = -3152;
      break;
    case 0x7D:
      uint64_t v3 = -3153;
      break;
    case 0x7E:
      uint64_t v3 = -3154;
      break;
    case 0x7F:
      uint64_t v3 = -3155;
      break;
    case 0x80:
      uint64_t v3 = -3156;
      break;
    case 0x81:
      uint64_t v3 = -3157;
      break;
    case 0x82:
      uint64_t v3 = -3158;
      break;
    case 0x83:
      uint64_t v3 = -3159;
      break;
    case 0x84:
      uint64_t v3 = -3161;
      break;
    case 0x85:
      uint64_t v3 = -3162;
      break;
    case 0x86:
      uint64_t v3 = -3163;
      break;
    case 0x87:
      uint64_t v3 = -3164;
      break;
    case 0x88:
      uint64_t v3 = -3165;
      break;
    case 0x89:
      uint64_t v3 = -3166;
      break;
    case 0x8A:
      uint64_t v3 = -3167;
      break;
    case 0x8B:
      uint64_t v3 = -3168;
      break;
    case 0x8C:
      uint64_t v3 = -3169;
      break;
    case 0x8D:
      uint64_t v3 = -3170;
      break;
    case 0x8E:
      uint64_t v3 = -3171;
      break;
    case 0x8F:
      uint64_t v3 = -3172;
      break;
    case 0x90:
      uint64_t v3 = -3173;
      break;
    case 0x91:
      uint64_t v3 = -3174;
      break;
    case 0x92:
      uint64_t v3 = -3175;
      break;
    case 0x93:
      uint64_t v3 = -3176;
      break;
    case 0x94:
      uint64_t v3 = -3177;
      break;
    case 0x95:
      uint64_t v3 = -3178;
      break;
    case 0x96:
      uint64_t v3 = -3179;
      break;
    case 0x97:
      uint64_t v3 = -3180;
      break;
    case 0x98:
      uint64_t v3 = -3181;
      break;
    case 0x99:
      uint64_t v3 = -3182;
      break;
    case 0x9A:
      uint64_t v3 = -3183;
      break;
    case 0x9B:
      uint64_t v3 = -3184;
      break;
    case 0x9C:
      uint64_t v3 = -3185;
      break;
    case 0x9D:
      uint64_t v3 = -3186;
      break;
    case 0x9E:
      uint64_t v3 = -3187;
      break;
    case 0x9F:
      uint64_t v3 = -3188;
      break;
    case 0xA0:
      uint64_t v3 = -3189;
      break;
    case 0xA1:
      uint64_t v3 = -3300;
      break;
    case 0xA2:
      uint64_t v3 = -5108;
      break;
    case 0xA3:
      uint64_t v3 = -6009;
      break;
    case 0xA4:
      uint64_t v3 = -6010;
      break;
    case 0xA5:
      uint64_t v3 = -6102;
      break;
    case 0xA6:
      uint64_t v3 = -6103;
      break;
    case 0xA7:
      uint64_t v3 = -6104;
      break;
    case 0xA8:
      uint64_t v3 = -6105;
      break;
    case 0xA9:
      uint64_t v3 = -8001;
      break;
    case 0xAA:
      uint64_t v3 = -8301;
      break;
    case 0xAB:
      uint64_t v3 = -8304;
      break;
    case 0xAC:
      uint64_t v3 = -8400;
      break;
    case 0xAD:
      uint64_t v3 = -8401;
      break;
    case 0xAE:
      uint64_t v3 = -8403;
      break;
    case 0xAF:
      uint64_t v3 = -8404;
      break;
    case 0xB0:
      uint64_t v3 = -8428;
      break;
    case 0xB1:
      uint64_t v3 = -8429;
      break;
    case 0xB2:
      uint64_t v3 = -8433;
      break;
    case 0xB3:
      uint64_t v3 = -8434;
      break;
    case 0xB4:
      uint64_t v3 = -8500;
      break;
    case 0xB5:
      uint64_t v3 = -8501;
      break;
    case 0xB6:
      uint64_t v3 = -8502;
      break;
    case 0xB7:
      uint64_t v3 = -8503;
      break;
    case 0xB8:
      uint64_t v3 = -8504;
      break;
    case 0xB9:
      uint64_t v3 = -22200;
      break;
    case 0xBA:
      uint64_t v3 = -22201;
      break;
    case 0xBB:
      uint64_t v3 = -22202;
      break;
    case 0xBC:
      uint64_t v3 = -22203;
      break;
    case 0xBD:
      uint64_t v3 = -22204;
      break;
    case 0xBE:
      uint64_t v3 = -22205;
      break;
    case 0xBF:
      uint64_t v3 = -22206;
      break;
    case 0xC0:
      uint64_t v3 = -22207;
      break;
    case 0xC1:
      uint64_t v3 = -22208;
      break;
    case 0xC2:
      uint64_t v3 = -72200;
      break;
    case 0xC3:
      uint64_t v3 = -72201;
      break;
    case 0xC4:
      uint64_t v3 = -72202;
      break;
    case 0xC5:
      uint64_t v3 = -72203;
      break;
    case 0xC6:
      uint64_t v3 = -72204;
      break;
    case 0xC7:
      uint64_t v3 = -72205;
      break;
    case 0xC8:
      uint64_t v3 = -72206;
      break;
    case 0xC9:
      uint64_t v3 = -72207;
      break;
    case 0xCA:
      uint64_t v3 = -72208;
      break;
    case 0xCB:
      uint64_t v3 = -72209;
      break;
    case 0xCC:
      uint64_t v3 = -72210;
      break;
    case 0xCD:
      uint64_t v3 = -72211;
      break;
    case 0xCE:
      uint64_t v3 = -72780;
      break;
    case 0xCF:
      uint64_t v3 = -72781;
      break;
    case 0xD0:
      uint64_t v3 = -72782;
      break;
    default:
      break;
  }
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  sub_214BAE754((uint64_t)v18);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  *(_OWORD *)&v24[8] = xmmword_214D1DF40;
  *(void *)uint64_t v24 = v3;
  *(void *)&v24[24] = v6;
  *(void *)&v25[0] = v5;
  sub_214B964D0((uint64_t)v18, (uint64_t)v25 + 8);
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v7);
  v16[12] = v25[5];
  v16[13] = v25[6];
  v17[0] = v26[0];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v26 + 9);
  v16[8] = v25[1];
  v16[9] = v25[2];
  v16[10] = v25[3];
  v16[11] = v25[4];
  v16[4] = v23;
  v16[5] = *(_OWORD *)v24;
  _OWORD v16[6] = *(_OWORD *)&v24[16];
  v16[7] = v25[0];
  v16[0] = v19;
  v16[1] = v20;
  _OWORD v16[2] = v21;
  void v16[3] = v22;
  uint64_t v9 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  uint64_t v10 = v9(v16, v7, v8);
  uint64_t v12 = v11;
  long long v13 = (char *)a2 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  sub_214D1A898();
  sub_214BAE770(&v19);
  uint64_t v14 = sub_214D1A8C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  a2[1] = v10;
  a2[2] = v12;
  *a2 = v3;
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_214BD54E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v39 = *(void *)(a1 + 288);
  uint64_t v4 = *(void *)(a1 + 384);
  uint64_t v46 = *(void *)(a1 + 296);
  uint64_t v47 = *(void *)(a1 + 376);
  uint64_t v5 = *(void *)(a1 + 392);
  uint64_t v6 = *(void *)(a1 + 416);
  uint64_t v48 = *(void *)(a1 + 368);
  uint64_t v49 = *(void *)(a1 + 408);
  uint64_t v7 = *(void *)(a1 + 328);
  uint64_t v45 = *(void *)(a1 + 320);
  uint64_t v8 = *(void *)(a1 + 344);
  uint64_t v36 = *(void *)(a1 + 400);
  uint64_t v37 = *(void *)(a1 + 336);
  uint64_t v42 = v8;
  uint64_t v9 = *(void *)(a1 + 360);
  uint64_t v38 = *(void *)(a1 + 352);
  uint64_t v10 = *(void *)(a1 + 488);
  uint64_t v43 = *(void *)(a1 + 480);
  v54[2] = *(void *)(a1 + 456);
  char v11 = *(unsigned char *)(a1 + 520);
  uint64_t v56 = v43;
  uint64_t v57 = v10;
  uint64_t v12 = *(void *)(a1 + 536);
  char v53 = v11;
  char v60 = v11;
  char v13 = *(unsigned char *)(a1 + 552);
  uint64_t v61 = a2;
  uint64_t v62 = v12;
  uint64_t v14 = *(void *)(a1 + 560);
  char v64 = v13;
  uint64_t v65 = v14;
  uint64_t v15 = *(void *)(a1 + 440);
  uint64_t v16 = *(void *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 504);
  char v66 = *(unsigned char *)(a1 + 568);
  uint64_t v40 = *(void *)(a1 + 496);
  v54[0] = v15;
  v54[1] = v16;
  uint64_t v44 = *(void *)(a1 + 544);
  long long v55 = *(_OWORD *)(a1 + 464);
  uint64_t v58 = v40;
  long long v59 = v17;
  uint64_t v63 = v44;
  nullsub_1(v54);
  *(void *)&long long v67 = v39;
  *((void *)&v67 + 1) = v46;
  *(void *)&long long v68 = v9;
  *((void *)&v68 + 1) = v48;
  *(void *)&long long v69 = v47;
  *((void *)&v69 + 1) = v4;
  *(void *)&long long v70 = v5;
  *((void *)&v70 + 1) = v36;
  *(void *)&long long v71 = v49;
  *((void *)&v71 + 1) = v6;
  *(void *)&long long v72 = v45;
  *((void *)&v72 + 1) = v7;
  *(void *)&long long v73 = v37;
  *((void *)&v73 + 1) = v8;
  *(void *)&v74[0] = v38;
  sub_214B964D0((uint64_t)v54, (uint64_t)v74 + 8);
  uint64_t v18 = v41[5];
  uint64_t v19 = v41[6];
  __swift_project_boxed_opaque_existential_1(v41 + 2, v18);
  v51[12] = v74[5];
  v51[13] = v74[6];
  v52[0] = v75[0];
  *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)((char *)v75 + 9);
  v51[8] = v74[1];
  v51[9] = v74[2];
  v51[10] = v74[3];
  v51[11] = v74[4];
  v51[4] = v71;
  v51[5] = v72;
  v51[6] = v73;
  v51[7] = v74[0];
  v51[0] = v67;
  v51[1] = v68;
  v51[2] = v69;
  v51[3] = v70;
  long long v20 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B79260(v9, v48);
  sub_214B792C4(v45, v7, v37, v42, v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = v20(v51, v18, v19);
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(a1 + 280);
  if (v24)
  {
    uint64_t v25 = *(void *)(a1 + 272);
    swift_bridgeObjectRetain();
    sub_214BAE770(&v67);
    uint64_t v26 = (char *)a3 + *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    uint64_t v27 = a1 + *(int *)(type metadata accessor for ODNAssessmentResult() + 52);
    uint64_t v28 = sub_214D1A8C8();
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    *a3 = v25;
    a3[1] = v24;
    a3[2] = v21;
    a3[3] = v23;
  }
  else
  {
    if (v38 == 1)
    {
      *(void *)&v51[0] = 45;
      *((void *)&v51[0] + 1) = 0xE100000000000000;
      char v50 = 14;
      CoreODILogger.fault(_:category:)(0xD000000000000033, 0x8000000214D32BE0, &v50);
      sub_214BAE770(&v67);
      uint64_t v45 = -1;
    }
    else
    {
      sub_214BAE770(&v67);
    }
    long long v30 = (char *)a3 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
    uint64_t v31 = a1 + *(int *)(type metadata accessor for ODNAssessmentResult() + 52);
    uint64_t v32 = sub_214D1A8C8();
    uint64_t v33 = *(void *)(v32 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    a3[1] = v21;
    a3[2] = v23;
    *a3 = v45;
  }
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIAssessmentAdapter.init(providerID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_214BD5A34())
  {
    uint64_t v6 = &type metadata for AMPAssessmentPayloadAdapter;
    uint64_t v7 = &off_26C5A7B10;
  }
  else
  {
    uint64_t v6 = &type metadata for Base64AssessmentPayloadAdapter;
    uint64_t v7 = &off_26C5A7E40;
  }
  a3[5] = v6;
  a3[6] = v7;
  a3[2] = 45;
  a3[3] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_214BD5A34()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_214D1A118();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_214D1A118();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_214D1ABC8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_214D1A118();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_214D1A118();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t destroy for ODIAssessmentAdapter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for ODIAssessmentAdapter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for ODIAssessmentAdapter(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        char v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for ODIAssessmentAdapter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for ODIAssessmentAdapter()
{
  return &type metadata for ODIAssessmentAdapter;
}

uint64_t ODIAnalyticsManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ODIAnalyticsManager.init()()
{
  return v0;
}

unint64_t sub_214BD5F68(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
  if (a1 < 0)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000214D32C50;
    *(void *)(inited + 48) = sub_214D1A428();
    *(void *)(inited + 56) = 0x646F43726F727265;
    *(void *)(inited + 64) = 0xE900000000000065;
    *(void *)(inited + 72) = sub_214D1A458();
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000214D32C50;
    *(void *)(inited + 48) = sub_214D1A428();
  }
  return sub_214B7F6B8(inited);
}

uint64_t ODIAnalyticsManager.deinit()
{
  return v0;
}

uint64_t ODIAnalyticsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s17CoreODIEssentials19ODIAnalyticsManagerC5track5eventyAA0C5EventO_tF_0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  _OWORD v6[4] = sub_214BD620C;
  v6[5] = v4;
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_214BF1534;
  v6[3] = &block_descriptor_10;
  long long v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

uint64_t dispatch thunk of AnalyticsManager.track(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ODIAnalyticsManager()
{
  return self;
}

uint64_t method lookup function for ODIAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODIAnalyticsManager);
}

uint64_t dispatch thunk of ODIAnalyticsManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_214BD61FC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_214BD620C()
{
  return sub_214BD5F68(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_214BD622C(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v4 = sub_214D19F08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_214D19F38();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v10);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_214B5EC30(a1, (uint64_t)aBlock);
  uint64_t v13 = sub_214D1A0B8();
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = v20;
  aBlock[4] = sub_214BD6750;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = &block_descriptor_11;
  long long v17 = _Block_copy(aBlock);
  swift_retain();
  sub_214D19F28();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_214B96140((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B96188((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v12, v8, v17);
  _Block_release(v17);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v21);
  return swift_release();
}

uint64_t sub_214BD650C()
{
  type metadata accessor for CertUsageMapper();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_214BD6778();
  qword_26ACEB9E8 = v0;
  return result;
}

uint64_t sub_214BD6548(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_214B8E894(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_214BD65FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_214B87FEC(a2, a3);
    if (v10) {
      char v11 = *(unsigned char *)(*(void *)(v8 + 56) + v9);
    }
    else {
      char v11 = 17;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 17;
  }
  *a4 = v11;
  return swift_endAccess();
}

uint64_t sub_214BD66AC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CertUsageMapper()
{
  return self;
}

uint64_t sub_214BD6710()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_214BD6750()
{
  return sub_214BD6548(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_214BD6778()
{
  v11[0] = sub_214D1A508();
  uint64_t v1 = *(void *)(v11[0] - 8);
  MEMORY[0x270FA5388](v11[0], v2);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D1A4F8();
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v7 = sub_214D19F38();
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = sub_214B7EFA0(MEMORY[0x263F8EE78]);
  sub_214BD69C8();
  sub_214D19F28();
  v11[1] = v9;
  sub_214B96140((unint64_t *)&qword_26ACE4368, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4300);
  sub_214B96188((unint64_t *)&qword_26ACE4308, &qword_26ACE4300);
  sub_214D1A678();
  (*(void (**)(char *, void, void))(v1 + 104))(v4, *MEMORY[0x263F8F130], v11[0]);
  *(void *)(v0 + 24) = sub_214D1A538();
  return v0;
}

unint64_t sub_214BD69C8()
{
  unint64_t result = qword_26ACE4370;
  if (!qword_26ACE4370)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE4370);
  }
  return result;
}

uint64_t sub_214BD6A08(uint64_t a1)
{
  uint64_t v34 = sub_214D197D8();
  uint64_t v3 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  uint64_t v32 = v6;
  uint64_t v26 = v1;
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_214B67EE8(0, v7, 0);
  uint64_t v8 = v36;
  uint64_t result = sub_214C50238(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v30 = a1 + 64;
  uint64_t v31 = v3 + 32;
  uint64_t v27 = a1 + 80;
  int64_t v28 = v7;
  uint64_t v33 = v3;
  uint64_t v29 = v10;
  uint64_t v14 = v32;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v11 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_24;
    }
    uint64_t v35 = v12;
    uint64_t v18 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214D197C8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v8;
    unint64_t v20 = *(void *)(v8 + 16);
    unint64_t v19 = *(void *)(v8 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_214B67EE8(v19 > 1, v20 + 1, 1);
      uint64_t v8 = v36;
    }
    *(void *)(v8 + 16) = v20 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v33 + 32))(v8+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v20, v14, v34);
    int64_t v15 = 1 << *(unsigned char *)(v18 + 32);
    if (v11 >= v15) {
      goto LABEL_25;
    }
    uint64_t v13 = v30;
    uint64_t v21 = *(void *)(v30 + 8 * v17);
    if ((v21 & (1 << v11)) == 0) {
      goto LABEL_26;
    }
    a1 = v18;
    LODWORD(v10) = v29;
    if (*(_DWORD *)(v18 + 36) != v29) {
      goto LABEL_27;
    }
    unint64_t v22 = v21 & (-2 << (v11 & 0x3F));
    if (v22)
    {
      int64_t v15 = __clz(__rbit64(v22)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v28;
    }
    else
    {
      unint64_t v23 = v17 + 1;
      unint64_t v24 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v28;
      if (v17 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v30 + 8 * v23);
        if (v25)
        {
LABEL_20:
          int64_t v15 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v17)
          {
            unint64_t v25 = *(void *)(v27 + 8 * v17++);
            if (v25)
            {
              unint64_t v23 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v12 = v35 + 1;
    uint64_t v11 = v15;
    if (v35 + 1 == v16) {
      return v8;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t TapToRadar.trigger(error:for:file:line:timestamp:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v53 = a7;
  uint64_t v54 = a6;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v10 = 0xD000000000000013;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v15 - 8, v16);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_214D19AA8();
  uint64_t v19 = *(void *)(v52 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v52, v20);
  uint64_t v49 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v22;
  MEMORY[0x270FA5388](v21, v23);
  char v50 = (char *)&v46 - v24;
  unint64_t v25 = (void *)(v7 + 56);
  uint64_t v26 = *(void *)(v7 + 80);
  uint64_t v27 = *(void *)(v8 + 88);
  uint64_t v47 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  LOBYTE(v58) = 14;
  Loggable.info(_:category:)(0xD000000000000017, 0x8000000214D32D90, (char *)&v58, v26, v27);
  *(void *)&v57[0] = a1;
  id v28 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  int v29 = swift_dynamicCast();
  long long v51 = v14;
  if (v29)
  {
    long long v30 = v58;
    switch(v59)
    {
      case 1:
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = 0xE000000000000000;
        sub_214D1A7A8();
        sub_214D1A108();
        sub_214D1A108();
        sub_214D1A108();
        sub_214D1A408();
        uint64_t v31 = *((void *)&v58 + 1);
        uint64_t v32 = v58;
        uint64_t v35 = 0x8000000214D32DF0;
        uint64_t v34 = 0xE700000000000000;
        uint64_t v33 = 0x74756F656D6954;
        break;
      case 2:
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = 0xE000000000000000;
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        *(void *)&long long v58 = 0xD000000000000018;
        *((void *)&v58 + 1) = 0x8000000214D32DB0;
        sub_214D1A108();
        uint64_t v34 = *((void *)&v58 + 1);
        uint64_t v33 = v58;
        strcpy((char *)&v58, "workflow ID: ");
        HIWORD(v58) = -4864;
        sub_214D1A108();
        sub_214B8FAAC(v30, *((uint64_t *)&v30 + 1), 2);
        uint64_t v10 = 0;
        uint64_t v35 = 0;
        goto LABEL_6;
      case 3:
        strcpy((char *)&v58, "workflow ID: ");
        HIWORD(v58) = -4864;
        sub_214D1A108();
        uint64_t v35 = 0;
        uint64_t v31 = *((void *)&v58 + 1);
        uint64_t v32 = v58;
        uint64_t v33 = 0xD000000000000012;
        uint64_t v34 = 0x8000000214D32DD0;
        uint64_t v10 = 0;
        break;
      default:
        *(void *)&long long v58 = 0;
        *((void *)&v58 + 1) = 0xE000000000000000;
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        strcpy((char *)&v58, "workflow ID: ");
        HIWORD(v58) = -4864;
        sub_214D1A108();
        sub_214D1A108();
        MEMORY[0x2166AFD40](v30, MEMORY[0x263F8D310]);
        sub_214D1A108();
        swift_bridgeObjectRelease();
        uint64_t v31 = *((void *)&v58 + 1);
        uint64_t v32 = v58;
        sub_214B8FAAC(v30, *((uint64_t *)&v30 + 1), 0);
        uint64_t v33 = 0xD000000000000010;
        uint64_t v10 = 0xD00000000000001CLL;
        uint64_t v34 = 0x8000000214D32E10;
        uint64_t v35 = 0x8000000214D32E50;
        break;
    }
  }
  else
  {
    uint64_t v34 = 0xE000000000000000;
    *(void *)&long long v58 = 0;
    *((void *)&v58 + 1) = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    strcpy((char *)&v58, "workflow ID: ");
    HIWORD(v58) = -4864;
    sub_214D1A108();
    sub_214D1A108();
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    uint64_t v35 = 0;
    uint64_t v33 = 0;
LABEL_6:
    uint64_t v31 = *((void *)&v58 + 1);
    uint64_t v32 = v58;
  }
  uint64_t v36 = v52;
  sub_214BD7808(v33, v34, v32, v31, v10, v35, v55, (uint64_t)v18, v54, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v36) == 1) {
    return sub_214B59CE0((uint64_t)v18, (uint64_t *)&unk_26ACE3B00);
  }
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v39 = v50;
  v38(v50, v18, v36);
  uint64_t v40 = sub_214D1A368();
  uint64_t v41 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v51, 1, 1, v40);
  uint64_t v42 = *(void *)(v8 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_ttrDelay);
  sub_214B93DCC((uint64_t)v47, (uint64_t)&v58);
  sub_214B93DCC(v8 + 16, (uint64_t)v57);
  uint64_t v43 = v49;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v49, v39, v36);
  unint64_t v44 = (*(unsigned __int8 *)(v19 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = 0;
  *((void *)v45 + 3) = 0;
  sub_214B59EC0(&v58, (uint64_t)(v45 + 32));
  *((void *)v45 + 9) = v42;
  sub_214B59EC0(v57, (uint64_t)(v45 + 80));
  v38(&v45[v44], v43, v36);
  sub_214BD7480(v41, (uint64_t)&unk_26784D610, (uint64_t)v45);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v39, v36);
}

uint64_t sub_214BD7480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_214D1A368();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_214D1A358();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_214B59CE0(a1, (uint64_t *)&unk_26ACE4338);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_214D1A2D8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_214BD7608(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

id sub_214BD7614()
{
  uint64_t v1 = OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter);
  }
  else
  {
    id v4 = sub_214BD7678();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_214BD7678()
{
  uint64_t v0 = sub_214D19D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  id v6 = (void *)sub_214D19E18();
  objc_msgSend(v5, sel_setTimeZone_, v6);

  sub_214D19CD8();
  uint64_t v7 = (void *)sub_214D19D08();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v5, sel_setLocale_, v7);

  uint64_t v8 = (void *)sub_214D1A028();
  objc_msgSend(v5, sel_setDateFormat_, v8);

  return v5;
}

uint64_t sub_214BD7808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v62 = a1;
  uint64_t v60 = a7;
  uint64_t v67 = a6;
  v56[1] = a5;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v63 = a2;
  uint64_t v71 = a8;
  uint64_t v61 = a10;
  uint64_t v66 = a9;
  uint64_t v10 = sub_214D197D8();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v57 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_214D19858();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  long long v68 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v19 = (char *)v56 - v18;
  uint64_t v20 = sub_214D199D8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20, v22);
  uint64_t v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v25 - 8, v26);
  id v28 = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_214D19AA8();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29, v31);
  uint64_t v33 = (char *)v56 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v24, *MEMORY[0x263F06E50], v20);
  swift_bridgeObjectRetain();
  sub_214D19A78();
  uint64_t v34 = sub_214D199F8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  if (*(void *)(v34 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  id v35 = sub_214BD7614();
  uint64_t v36 = (void *)sub_214D19BD8();
  id v37 = objc_msgSend(v35, sel_stringFromDate_, v36);

  sub_214D1A038();
  sub_214D19848();
  sub_214D19838();
  MEMORY[0x2166AF2F0](7824750, 0xE300000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D648);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1EB90;
  *(void *)(inited + 32) = 0x656C746954;
  *(void *)(inited + 40) = 0xE500000000000000;
  strcpy((char *)v72, "[CoreODI] - ");
  BYTE5(v72[1]) = 0;
  HIWORD(v72[1]) = -5120;
  sub_214D1A108();
  uint64_t v39 = v72[1];
  *(void *)(inited + 48) = v72[0];
  *(void *)(inited + 56) = v39;
  *(void *)(inited + 64) = 0x7470697263736544;
  *(void *)(inited + 72) = 0xEB000000006E6F69;
  v72[0] = 0;
  v72[1] = 0xE000000000000000;
  sub_214D1A7A8();
  uint64_t v40 = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72[0] = v64;
  v72[1] = v40;
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  v72[6] = v66;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v41 = v72[1];
  *(void *)(inited + 80) = v72[0];
  *(void *)(inited + 88) = v41;
  *(void *)(inited + 96) = 0x6E656E6F706D6F43;
  *(void *)(inited + 104) = 0xEB00000000444974;
  *(_OWORD *)(inited + 112) = xmmword_214D20B00;
  strcpy((char *)(inited + 128), "ComponentName");
  *(_WORD *)(inited + 142) = -4864;
  *(void *)(inited + 144) = 0xD00000000000001ALL;
  *(void *)(inited + 152) = 0x8000000214D32F20;
  *(void *)(inited + 160) = 0xD000000000000010;
  *(void *)(inited + 168) = 0x8000000214D32F40;
  *(_OWORD *)(inited + 176) = xmmword_214D20B10;
  strcpy((char *)(inited + 192), "Classification");
  *(unsigned char *)(inited + 207) = -18;
  *(void *)(inited + 208) = 0xD000000000000014;
  *(void *)(inited + 216) = 0x8000000214D32F60;
  unint64_t v42 = sub_214B7EA1C(inited);
  sub_214BD6A08(v42);
  swift_bridgeObjectRelease();
  sub_214D197F8();
  if (v67)
  {
    unint64_t v44 = (void (*)(void *, void))sub_214D197E8();
    if (*v43)
    {
      uint64_t v45 = v43;
      uint64_t v46 = v57;
      sub_214D197C8();
      unint64_t v47 = *v45;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v45 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v47 = sub_214B87254(0, *(void *)(v47 + 16) + 1, 1, v47);
        *uint64_t v45 = v47;
      }
      unint64_t v50 = *(void *)(v47 + 16);
      unint64_t v49 = *(void *)(v47 + 24);
      if (v50 >= v49 >> 1)
      {
        unint64_t v47 = sub_214B87254(v49 > 1, v50 + 1, 1, v47);
        *uint64_t v45 = v47;
      }
      *(void *)(v47 + 16) = v50 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v47+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v50, v46, v59);
      v44(v72, 0);
    }
    else
    {
      v44(v72, 0);
    }
  }
  uint64_t v52 = v68;
  uint64_t v51 = v69;
  uint64_t v53 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v19, v70);
  sub_214D19818();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v52, v53);
  return ((uint64_t (*)(char *, uint64_t))v54)(v19, v53);
}

uint64_t sub_214BD7FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[4] = a5;
  v7[5] = a7;
  _OWORD v7[3] = a4;
  uint64_t v8 = sub_214D1A8E8();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  v7[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BD80C0, 0, 0);
}

uint64_t sub_214BD80C0()
{
  uint64_t v10 = v0;
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "Awaiting for ");
  HIWORD(v9[1]) = -4864;
  v0[2] = v2;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v5 = v9[0];
  LOBYTE(v9[0]) = 14;
  Loggable.info(_:category:)(v5, v9[1], (char *)v9, v4, v3);
  swift_bridgeObjectRelease();
  sub_214D1A8D8();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26784D630 + dword_26784D630);
  id v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  *id v6 = v0;
  v6[1] = sub_214BD8294;
  return v8(1000000000000000000 * v2, ((v2 >> 63) & 0xF21F494C589C0000)+ (((unint64_t)v2 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64), 0, 0, 1);
}

uint64_t sub_214BD8294()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_214BD84CC;
  }
  else {
    uint64_t v5 = sub_214BD8404;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

id sub_214BD8404()
{
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)sub_214D19A28();
    objc_msgSend(v2, sel_openURL_withOptions_, v3, 0);

    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_214BD84CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TapToRadar.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
  uint64_t v2 = sub_214D19E38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t TapToRadar.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
  uint64_t v2 = sub_214D19E38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_214BD8674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_214D1A8C8();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_214BD8778, 0, 0);
}

uint64_t sub_214BD8778()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_214D1A8E8();
  uint64_t v5 = sub_214BD9338(&qword_26784D638, MEMORY[0x263F8F710]);
  sub_214D1AC68();
  sub_214BD9338(&qword_26784D640, MEMORY[0x263F8F6D8]);
  sub_214D1A8F8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_214BD8918;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_214BD8918()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214BD8AD4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_214BD8AD4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BD8B40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v21[3] = &type metadata for CoreODILogger;
  v21[4] = &protocol witness table for CoreODILogger;
  v21[0] = a3;
  v21[1] = a4;
  _OWORD v20[3] = type metadata accessor for DeepLink();
  v20[4] = &off_26C5AD5C0;
  v20[0] = a2;
  *(void *)(a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter) = 0;
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1
    && (uint64_t v10 = (void *)sub_214D1A028(),
        unsigned int v11 = objc_msgSend(a1, sel_BOOLForKey_, v10, v20[0]),
        v10,
        v11))
  {
    sub_214B93DCC((uint64_t)v20, a6 + 16);
    sub_214B93DCC((uint64_t)v21, a6 + 56);
    uint64_t v12 = a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
    uint64_t v13 = sub_214D19E38();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a5, v13);
    v15._object = (void *)0x8000000214D32FC0;
    v15._countAndFlagsBits = 0xD000000000000010;
    Swift::Int_optional v22 = NSUserDefaults.internalInt(forKey:)(v15);
    Swift::Int value = v22.value;
    LOBYTE(v12) = v22.is_nil;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    uint64_t v17 = 30;
    if ((v12 & 1) == 0) {
      uint64_t v17 = value;
    }
    *(void *)(a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_ttrDelay) = v17;
  }
  else
  {
    uint64_t v18 = sub_214D19E38();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a5, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);

    swift_deallocPartialClassInstance();
    return 0;
  }
  return a6;
}

uint64_t _s17CoreODIEssentials10TapToRadarCACSgycfC_0()
{
  uint64_t v0 = sub_214D19E38();
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v3 = (char *)&v17[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v5 = type metadata accessor for DeepLink();
  uint64_t v6 = swift_allocObject();
  sub_214D19E28();
  v17[3] = v5;
  v17[4] = &off_26C5AD5C0;
  v17[0] = v6;
  type metadata accessor for TapToRadar();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v5);
  MEMORY[0x270FA5388](v8, v8);
  uint64_t v10 = (void *)((char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = *v10;
  id v13 = v4;
  swift_retain();
  uint64_t v14 = sub_214BD8B40(v13, v12, 45, 0xE100000000000000, (uint64_t)v3, v7);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  swift_release();
  return v14;
}

uint64_t sub_214BD8FB8()
{
  uint64_t v1 = sub_214D19AA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_214BD9094(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_214D19AA8() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (uint64_t)(v1 + 4);
  uint64_t v8 = v1[9];
  uint64_t v9 = (uint64_t)(v1 + 10);
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_214B6A55C;
  return sub_214BD7FFC(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214BD91A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_214BD91BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_214BD91D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_214BD91E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_214BD9218()
{
  return type metadata accessor for TapToRadar();
}

uint64_t type metadata accessor for TapToRadar()
{
  uint64_t result = qword_26784D620;
  if (!qword_26784D620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214BD926C()
{
  uint64_t result = sub_214D19E38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TapToRadar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TapToRadar);
}

uint64_t sub_214BD9338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t FeedbackState.state.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedbackState.missingBindings.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FeedbackState.currentBindings.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FeedbackState.trainingSignalID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedbackState.errorCode.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t FeedbackState.isNominated.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_214BD9450(unsigned __int8 *a1, char *a2)
{
  return sub_214C1CFA0(*a1, *a2);
}

uint64_t sub_214BD945C()
{
  return sub_214D1AD48();
}

uint64_t sub_214BD9564()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BD9654()
{
  return sub_214D1AD48();
}

uint64_t sub_214BD9758@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214BDA100();
  *a1 = result;
  return result;
}

void sub_214BD9788(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6574617473;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x42676E697373696DLL;
      unint64_t v2 = 0xEF73676E69646E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x42746E6572727563;
      a1[1] = 0xEF73676E69646E69;
      break;
    case 3:
      *a1 = 0x646F43726F727265;
      a1[1] = 0xE900000000000065;
      break;
    case 4:
      *a1 = 0x616E696D6F4E7369;
      a1[1] = 0xEB00000000646574;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_214BD9864()
{
  uint64_t result = 0x6574617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x42676E697373696DLL;
      break;
    case 2:
      uint64_t result = 0x42746E6572727563;
      break;
    case 3:
      uint64_t result = 0x646F43726F727265;
      break;
    case 4:
      uint64_t result = 0x616E696D6F4E7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BD9920@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214BDA100();
  *a1 = result;
  return result;
}

uint64_t sub_214BD9948(uint64_t a1)
{
  unint64_t v2 = sub_214BD9C40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214BD9984(uint64_t a1)
{
  unint64_t v2 = sub_214BD9C40();
  return MEMORY[0x270FA00B8](a1, v2);
}

void __swiftcall FeedbackState.init(state:missingBindings:currentBindings:trainingSignalID:errorCode:)(CoreODIEssentials::FeedbackState *__return_ptr retstr, Swift::String state, Swift::Int missingBindings, Swift::Int currentBindings, Swift::String_optional trainingSignalID, Swift::Int errorCode)
{
  retstr->state = state;
  retstr->missingBindings = missingBindings;
  retstr->currentBindings = currentBindings;
  retstr->trainingSignalID = trainingSignalID;
  retstr->errorCode = errorCode;
  retstr->isNominated = 0;
}

void __swiftcall FeedbackState.nominated()(CoreODIEssentials::FeedbackState *__return_ptr retstr)
{
  unint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  retstr->state._countAndFlagsBits = *(void *)v1;
  retstr->state._object = v2;
  *(_OWORD *)&retstr->missingBindings = *(_OWORD *)(v1 + 16);
  retstr->trainingSignalID.value._countAndFlagsBits = v3;
  *(_OWORD *)&retstr->trainingSignalID.value._object = *(_OWORD *)(v1 + 40);
  retstr->isNominated = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t FeedbackState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D650);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v8;
  uint64_t v12 = *(void *)(v1 + 48);
  v11[3] = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214BD9C40();
  sub_214D1AD88();
  char v20 = 0;
  uint64_t v9 = v15;
  sub_214D1AAF8();
  if (!v9)
  {
    char v19 = 1;
    sub_214D1AB28();
    char v18 = 2;
    sub_214D1AB28();
    char v17 = 3;
    sub_214D1AB28();
    char v16 = 4;
    sub_214D1AB08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_214BD9C40()
{
  unint64_t result = qword_26784D658;
  if (!qword_26784D658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D658);
  }
  return result;
}

uint64_t sub_214BD9C94(void *a1)
{
  return FeedbackState.encode(to:)(a1);
}

uint64_t destroy for FeedbackState()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FeedbackState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackState()
{
  return &type metadata for FeedbackState;
}

unsigned char *storeEnumTagSinglePayload for FeedbackState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BD9FC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackState.CodingKeys()
{
  return &type metadata for FeedbackState.CodingKeys;
}

unint64_t sub_214BD9FFC()
{
  unint64_t result = qword_26784D660;
  if (!qword_26784D660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D660);
  }
  return result;
}

unint64_t sub_214BDA054()
{
  unint64_t result = qword_26784D668;
  if (!qword_26784D668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D668);
  }
  return result;
}

unint64_t sub_214BDA0AC()
{
  unint64_t result = qword_26784D670;
  if (!qword_26784D670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D670);
  }
  return result;
}

uint64_t sub_214BDA100()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

void *PrecomputationSession.__allocating_init(workflowID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_214D19CC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_214D19CB8();
  uint64_t v9 = sub_214D19C88();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v28 = 0x4024000000000000;
  long long v29 = xmmword_214D20D80;
  int v30 = 16777217;
  uint64_t v12 = (objc_class *)type metadata accessor for DIPAssessmentStaticWebService();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  uint64_t v14 = &v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_STS_ENDPOINT];
  *(void *)uint64_t v14 = 1937011503;
  *((void *)v14 + 1) = 0xE400000000000000;
  uint64_t v15 = &v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_PROFILE_ENDPOINT];
  *(void *)uint64_t v15 = 0x656C69666F72702FLL;
  *((void *)v15 + 1) = 0xE800000000000000;
  v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo] = 5;
  id v16 = sub_214BDAEFC(v9, v11, (uint64_t)&v28, 0xD000000000000015, 0x8000000214D20D80, v13);
  v27[3] = v12;
  v27[4] = &off_26C5AD280;
  v27[0] = v16;
  char v17 = (void *)swift_allocObject();
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, (uint64_t)v12);
  MEMORY[0x270FA5388](v18, v18);
  char v20 = (void *)((char *)&v27[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = *v20;
  id v23 = v16;
  uint64_t v24 = sub_214BDB250(a1, a2, a1, a2, v22, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

  return v24;
}

uint64_t PrecomputationSession.fetchProfile()(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return MEMORY[0x270FA2498](sub_214BDA40C, 0, 0);
}

uint64_t sub_214BDA40C()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v17 = v1[3];
  uint64_t v2 = v1[5];
  uint64_t v18 = v1[4];
  uint64_t v19 = v1[2];
  sub_214B93DCC((uint64_t)(v1 + 6), (uint64_t)(v0 + 2));
  uint64_t v3 = v0[5];
  uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v3);
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v3);
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for DIPAssessmentStaticWebService();
  v0[10] = v8;
  v0[11] = &off_26C5AD280;
  v0[7] = v7;
  type metadata accessor for ProfileManager();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v8);
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v8);
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[14] = sub_214BDAFF4(v19, v17, v18, v2, v13, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[15] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_214BDA67C;
  uint64_t v15 = v0[12];
  return sub_214BC3CB0(v15);
}

uint64_t sub_214BDA67C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BDA7F4;
  }
  else {
    uint64_t v2 = sub_214BDA790;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BDA790()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BDA7F4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PrecomputationSession.forceCacheProfile()()
{
  *(void *)(v1 + 96) = v0;
  return MEMORY[0x270FA2498](sub_214BDA878, 0, 0);
}

uint64_t sub_214BDA878()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v16 = v1[3];
  uint64_t v2 = v1[5];
  uint64_t v17 = v1[4];
  uint64_t v18 = v1[2];
  sub_214B93DCC((uint64_t)(v1 + 6), (uint64_t)(v0 + 2));
  uint64_t v3 = v0[5];
  uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v3);
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v3);
  uint64_t v7 = *v6;
  uint64_t v8 = type metadata accessor for DIPAssessmentStaticWebService();
  v0[10] = v8;
  v0[11] = &off_26C5AD280;
  v0[7] = v7;
  type metadata accessor for ProfileManager();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v8);
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v8);
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[13] = sub_214BDAFF4(v18, v16, v17, v2, v13, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[14] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_214BDAAE0;
  return sub_214BC0FA0();
}

uint64_t sub_214BDAAE0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BDAC58;
  }
  else {
    uint64_t v2 = sub_214BDABF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BDABF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BDAC58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PrecomputationSession.getServerTimeSeed()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_214BDACDC, 0, 0);
}

uint64_t sub_214BDACDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BDAD70;
  return sub_214BC3FD8();
}

uint64_t sub_214BDAD70(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t PrecomputationSession.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  return v0;
}

uint64_t PrecomputationSession.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  return swift_deallocClassInstance();
}

id sub_214BDAEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  v14[3] = &type metadata for CoreODILogger;
  v14[4] = &protocol witness table for CoreODILogger;
  v14[0] = a4;
  v14[1] = a5;
  uint64_t v8 = &a6[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  id v9 = objc_allocWithZone((Class)type metadata accessor for DIPHTTPSession());
  uint64_t v10 = a6;
  *(void *)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession] = sub_214BC75FC(a3);
  sub_214B93DCC((uint64_t)v14, (uint64_t)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger]);

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for DIPWebService();
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  sub_214BC7464();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

void *sub_214BDAFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for DIPAssessmentStaticWebService();
  uint64_t v33 = v12;
  uint64_t v34 = &off_26C5AD280;
  *(void *)&long long v32 = a5;
  swift_defaultActor_initialize();
  a6[24] = 45;
  a6[25] = 0xE100000000000000;
  sub_214B93DCC((uint64_t)&v32, (uint64_t)v30);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  MEMORY[0x270FA5388](v13, v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v15;
  v29[3] = v12;
  v29[4] = &off_26C5AD280;
  v29[0] = v17;
  type metadata accessor for ServerTimeSeedProvider();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v12);
  MEMORY[0x270FA5388](v19, v19);
  uint64_t v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = *v21;
  uint64_t v27 = v12;
  uint64_t v28 = &off_26C5AD280;
  *(void *)&long long v26 = v23;
  swift_bridgeObjectRetain();
  swift_defaultActor_initialize();
  *(unsigned char *)(v18 + 168) = 0;
  *(void *)(v18 + 176) = MEMORY[0x263F8EE78];
  *(void *)(v18 + 184) = 0;
  *(void *)(v18 + 192) = 0;
  *(void *)(v18 + 200) = 45;
  *(void *)(v18 + 208) = 0xE100000000000000;
  sub_214B59EC0(&v26, v18 + 112);
  *(void *)(v18 + 152) = a1;
  *(void *)(v18 + 160) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  a6[23] = v18;
  sub_214B59EC0(&v32, (uint64_t)(a6 + 18));
  a6[14] = a1;
  a6[15] = a2;
  a6[16] = a3;
  a6[17] = a4;
  return a6;
}

void *sub_214BDB250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for DIPAssessmentStaticWebService();
  v31[3] = v12;
  v31[4] = &off_26C5AD280;
  v31[0] = a5;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  sub_214B93DCC((uint64_t)v31, (uint64_t)(a6 + 6));
  sub_214B93DCC((uint64_t)v31, (uint64_t)v29);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x270FA5388](v13, v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v15;
  v28[3] = v12;
  v28[4] = &off_26C5AD280;
  v28[0] = v17;
  type metadata accessor for ServerTimeSeedProvider();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v12);
  MEMORY[0x270FA5388](v19, v19);
  uint64_t v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = *v21;
  uint64_t v26 = v12;
  uint64_t v27 = &off_26C5AD280;
  *(void *)&long long v25 = v23;
  swift_bridgeObjectRetain();
  swift_defaultActor_initialize();
  *(unsigned char *)(v18 + 168) = 0;
  *(void *)(v18 + 176) = MEMORY[0x263F8EE78];
  *(void *)(v18 + 184) = 0;
  *(void *)(v18 + 192) = 0;
  *(void *)(v18 + 200) = 45;
  *(void *)(v18 + 208) = 0xE100000000000000;
  sub_214B59EC0(&v25, v18 + 112);
  *(void *)(v18 + 152) = a1;
  *(void *)(v18 + 160) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  a6[11] = v18;
  return a6;
}

uint64_t type metadata accessor for PrecomputationSession()
{
  return self;
}

uint64_t method lookup function for PrecomputationSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PrecomputationSession);
}

uint64_t *sub_214BDB4D8@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_214BDB4F0(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_214BDB4FC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_214BDB51C()
{
  v1[7] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D158);
  v1[8] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ODNAssessmentResult();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BDB61C, v0, 0);
}

uint64_t sub_214BDB61C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(void *)(v1 + 136))
  {
    unint64_t v2 = *(void *)(v1 + 136);
  }
  else
  {
    unint64_t v2 = sub_214B7E450(MEMORY[0x263F8EE78]);
    uint64_t v1 = *(void *)(v0 + 56);
  }
  *(void *)(v0 + 104) = v2;
  uint64_t v3 = *(void *)(v1 + 120);
  *(void *)(v0 + 112) = v3;
  unint64_t v4 = *(void *)(v1 + 128);
  *(void *)(v0 + 120) = v4;
  char v5 = *(unsigned char *)(v1 + 144);
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(unsigned char *)(v0 + 48) = v5;
  *(unsigned char *)(v0 + 49) = 1;
  uint64_t v6 = *(void *)(v1 + 152);
  *(void *)(v0 + 128) = v6;
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v3, v4);
  return MEMORY[0x270FA2498](sub_214BDB6F8, v6, 0);
}

uint64_t sub_214BDB6F8()
{
  unint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v1 + 944);
  unint64_t v5 = *(void *)(v1 + 952);
  long long v7 = *(_OWORD *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_WORD *)(v1 + 960) = *(_WORD *)(v0 + 48);
  *(_OWORD *)(v1 + 928) = v7;
  *(_OWORD *)(v1 + 944) = v6;
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v3, v2);
  swift_bridgeObjectRelease();
  sub_214B59EAC(v4, v5);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_214BDB7F8;
  uint64_t v9 = *(void *)(v0 + 64);
  return sub_214B9AE34(v9, v0 + 16);
}

uint64_t sub_214BDB7F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BDB908, v1, 0);
}

uint64_t sub_214BDB908()
{
  uint64_t v1 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[10] + 48))(v1, 1, v0[9]) == 1)
  {
    sub_214BE059C(v1);
    unint64_t v2 = (void *)swift_task_alloc();
    v0[18] = v2;
    void *v2 = v0;
    v2[1] = sub_214BDBA38;
    uint64_t v3 = v0[12];
    return sub_214B9D458(v3, (uint64_t)(v0 + 2));
  }
  else
  {
    uint64_t v6 = v0[11];
    uint64_t v5 = v0[12];
    sub_214BE05FC(v1, v6);
    sub_214BE05FC(v6, v5);
    uint64_t v7 = v0[7];
    return MEMORY[0x270FA2498](sub_214BDBBC0, v7, 0);
  }
}

uint64_t sub_214BDBA38()
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[20] = v4;
    void *v4 = v3;
    v4[1] = sub_214BDBCF8;
    uint64_t v5 = v2[12];
    return sub_214BA122C(v5, v0);
  }
  else
  {
    uint64_t v7 = v2[7];
    return MEMORY[0x270FA2498](sub_214BDBBC0, v7, 0);
  }
}

uint64_t sub_214BDBBC0()
{
  uint64_t v10 = v0;
  uint64_t v2 = v0[14];
  unint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[7];
  uint64_t v5 = *(void *)(v4 + 192);
  uint64_t v6 = *(void *)(v4 + 200);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 168), v5);
  char v9 = 8;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v6 + 16))(0xD00000000000002CLL, 0x8000000214D333D0, &v9, v5, v6);
  (*(void (**)(uint64_t))(v4 + 216))(v3);
  swift_bridgeObjectRelease();
  sub_214B59EAC(v2, v1);
  sub_214BE0894(v3, (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_214BDBCF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BDBE08, v1, 0);
}

uint64_t sub_214BDBE08()
{
  uint64_t v1 = *(void *)(v0 + 56);
  return MEMORY[0x270FA2498](sub_214BDBBC0, v1, 0);
}

uint64_t sub_214BDBE70()
{
  sub_214B59EAC(*(void *)(v0 + 120), *(void *)(v0 + 128));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNRequestTask()
{
  return self;
}

uint64_t sub_214BDBEEC()
{
  return 1;
}

uint64_t sub_214BDBEF4()
{
  return sub_214D1AD48();
}

uint64_t sub_214BDBF38()
{
  return sub_214D1AD18();
}

uint64_t sub_214BDBF60()
{
  return sub_214D1AD48();
}

uint64_t sub_214BDBFA0(unint64_t *a1)
{
  unint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_214BE9970(v2);
    unint64_t v2 = v4;
    *a1 = v4;
  }
  uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v5;
  sub_214BDE8D0(v7);
  return sub_214D1A288();
}

uint64_t sub_214BDC028()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_214BDC048, v0, 0);
}

uint64_t sub_214BDC048()
{
  uint64_t v1 = v0[5];
  swift_beginAccess();
  unint64_t v2 = *(void *)(v1 + 112);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      unint64_t v3 = *(void *)(v0[5] + 112);
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_214D1A948();
        swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_5:
          unint64_t v3 = *(void *)(v0[5] + 112);
          if (!(v3 >> 62))
          {
            uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v4) {
              goto LABEL_7;
            }
            goto LABEL_22;
          }
LABEL_21:
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_214D1A948();
          swift_bridgeObjectRelease();
          if (v4)
          {
LABEL_7:
            if ((v3 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_25;
              }
              uint64_t v4 = *(void *)(v3 + 32);
              uint64_t v5 = swift_retain();
LABEL_10:
              v0[6] = v4;
              unint64_t v8 = *(void *)(v0[5] + 112);
              if (!(v8 >> 62))
              {
                if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_12;
                }
                goto LABEL_26;
              }
LABEL_25:
              swift_bridgeObjectRetain();
              uint64_t v13 = sub_214D1A948();
              uint64_t v5 = swift_bridgeObjectRelease();
              if (v13)
              {
LABEL_12:
                sub_214C51610(0, 1);
                swift_endAccess();
                swift_retain();
                uint64_t v5 = (uint64_t)sub_214BDC2C8;
                uint64_t v6 = v4;
                uint64_t v7 = 0;
                return MEMORY[0x270FA2498](v5, v6, v7);
              }
LABEL_26:
              __break(1u);
              return MEMORY[0x270FA2498](v5, v6, v7);
            }
LABEL_23:
            uint64_t v5 = MEMORY[0x2166B0290](0, v3);
            uint64_t v4 = v5;
            goto LABEL_10;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
      }
      else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      __break(1u);
      goto LABEL_21;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  sub_214BE0548();
  swift_allocError();
  swift_willThrow();
  swift_endAccess();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_214BDC2C8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 56) = *(unsigned char *)(*(void *)(v0 + 48) + 208);
  swift_release();
  return MEMORY[0x270FA2498](sub_214BDC338, v1, 0);
}

uint64_t sub_214BDC338()
{
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 40);
    swift_beginAccess();
    unint64_t v2 = *(void *)(v1 + 112);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_214D1A948();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_4:
        unint64_t v3 = *(void *)(*(void *)(v0 + 40) + 112);
        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = sub_214D1A948();
          swift_bridgeObjectRelease();
          if (v14)
          {
LABEL_6:
            unint64_t v3 = *(void *)(*(void *)(v0 + 40) + 112);
            if (!(v3 >> 62))
            {
              uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v4) {
                goto LABEL_8;
              }
              goto LABEL_26;
            }
LABEL_25:
            swift_bridgeObjectRetain();
            uint64_t v4 = sub_214D1A948();
            swift_bridgeObjectRelease();
            if (v4)
            {
LABEL_8:
              if ((v3 & 0xC000000000000001) == 0)
              {
                if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_29;
                }
                uint64_t v4 = *(void *)(v3 + 32);
                uint64_t v5 = (uint64_t (*)())swift_retain();
LABEL_11:
                *(void *)(v0 + 48) = v4;
                unint64_t v8 = *(void *)(*(void *)(v0 + 40) + 112);
                if (!(v8 >> 62))
                {
                  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_13;
                  }
                  goto LABEL_30;
                }
LABEL_29:
                swift_bridgeObjectRetain();
                uint64_t v15 = sub_214D1A948();
                uint64_t v5 = (uint64_t (*)())swift_bridgeObjectRelease();
                if (v15)
                {
LABEL_13:
                  sub_214C51610(0, 1);
                  swift_endAccess();
                  swift_release();
                  swift_retain();
                  uint64_t v5 = sub_214BDC2C8;
                  uint64_t v6 = v4;
                  uint64_t v7 = 0;
                  return MEMORY[0x270FA2498](v5, v6, v7);
                }
LABEL_30:
                __break(1u);
                return MEMORY[0x270FA2498](v5, v6, v7);
              }
LABEL_27:
              uint64_t v5 = (uint64_t (*)())MEMORY[0x2166B0290](0, v3);
              uint64_t v4 = (uint64_t)v5;
              goto LABEL_11;
            }
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_6;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    sub_214BE0548();
    swift_allocError();
    swift_willThrow();
    swift_endAccess();
    swift_release();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v10 = *(void *)(v0 + 48);
    return v9(v10);
  }
}

uint64_t sub_214BDC610()
{
  *(void *)(v1 + 88) = v0;
  return MEMORY[0x270FA2498](sub_214BDC630, v0, 0);
}

uint64_t sub_214BDC630()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v1[19];
  v0[12] = v2;
  unint64_t v3 = v1[20];
  v0[13] = v3;
  v13[0] = v2;
  v13[1] = v3;
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  swift_beginAccess();
  unint64_t v4 = v1[14];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_214D1A948();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = v0[11];
  v0[8] = v5;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v7 = v14;
  LOBYTE(v14) = 8;
  CoreODILogger.debug(_:category:)(v7, v15, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 136) || (uint64_t v8 = v0[11], (*(unsigned char *)(v8 + 144) & 1) != 0))
  {
    uint64_t v14 = v2;
    unint64_t v15 = v3;
    LOBYTE(v13[0]) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000027, 0x8000000214D33340, v13);
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    *(unsigned char *)(v8 + 144) = 1;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[14] = v11;
    void *v11 = v0;
    v11[1] = sub_214BDC8BC;
    uint64_t v12 = v0[11];
    v11[5] = v12;
    return MEMORY[0x270FA2498](sub_214BDC048, v12, 0);
  }
}

uint64_t sub_214BDC8BC(uint64_t a1)
{
  unint64_t v4 = (void *)*v2;
  v4[15] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[11];
  if (v1)
  {
    uint64_t v6 = sub_214BDCE40;
  }
  else
  {
    v4[16] = a1;
    uint64_t v6 = sub_214BDC9F8;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214BDC9F8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v2 + 136) = v1;
  swift_retain();
  swift_release();
  *(unsigned char *)(v2 + 144) = 0;
  return MEMORY[0x270FA2498](sub_214BDCA84, v1, 0);
}

uint64_t sub_214BDCA84()
{
  *(unsigned char *)(*(void *)(v0 + 128) + 209) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BDCB20;
  return sub_214BDB51C();
}

uint64_t sub_214BDCB20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BDCC30, v1, 0);
}

uint64_t sub_214BDCC30()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  char v5 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x8000000214D333A0, &v5);
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v1 + 136) = 0;
  swift_release();
  *(unsigned char *)(v1 + 144) = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  void *v2 = v0;
  v2[1] = sub_214BDCD4C;
  uint64_t v3 = *(void *)(v0 + 88);
  v2[11] = v3;
  return MEMORY[0x270FA2498](sub_214BDC630, v3, 0);
}

uint64_t sub_214BDCD4C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BDCE40()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v2 + 136) = 0;
  swift_release();
  *(unsigned char *)(v2 + 144) = 0;
  *(void *)(v0 + 72) = v1;
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v7[0] = 0xD000000000000008;
    v7[1] = 0x8000000214D33370;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    CoreODILogger.error(_:category:)(0xD000000000000028, 0x8000000214D33370, v7);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  char v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214BDCFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(void *)(v7 + 56) = a4;
  *(void *)(v7 + 64) = v6;
  *(unsigned char *)(v7 + 90) = a6;
  *(unsigned char *)(v7 + 89) = a5;
  *(void *)(v7 + 40) = a2;
  *(void *)(v7 + 48) = a3;
  *(void *)(v7 + 32) = a1;
  return MEMORY[0x270FA2498](sub_214BDCFEC, v6, 0);
}

uint64_t sub_214BDCFEC()
{
  uint64_t v25 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 90);
  unsigned __int8 v17 = *(unsigned char *)(v0 + 89);
  char v18 = *(unsigned char *)(v0 + 90);
  unint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = *(void *)(v0 + 40);
  unint64_t v5 = *(void *)(v2 + 152);
  unint64_t v4 = *(void *)(v2 + 160);
  unint64_t v23 = v5;
  unint64_t v24 = v4;
  LOBYTE(v21) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000027, 0x8000000214D33180, &v21);
  swift_bridgeObjectRelease();
  if (v3 >> 60 == 15) {
    unsigned int v6 = 2;
  }
  else {
    unsigned int v6 = 1;
  }
  if (v1) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(unsigned char *)(v0 + 88) = v7;
  unint64_t v21 = v5;
  unint64_t v22 = v4;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD00000000000002CLL;
  unint64_t v24 = 0x8000000214D331B0;
  *(void *)(v0 + 16) = v7;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v8 = v23;
  LOBYTE(v23) = 8;
  CoreODILogger.debug(_:category:)(v8, v24, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v21 = v5;
  unint64_t v22 = v4;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD00000000000002FLL;
  unint64_t v24 = 0x8000000214D331E0;
  *(void *)(v0 + 24) = (v17 ^ 1) & 1;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v9 = v23;
  LOBYTE(v23) = 8;
  CoreODILogger.debug(_:category:)(v9, v24, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_214BE08F4(&qword_26784D6C8, v10, (void (*)(uint64_t))type metadata accessor for ODNAtorQueueManager);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v0 + 72) = v12;
  *(void *)(v12 + 16) = v0 + 88;
  *(unsigned char *)(v12 + 24) = (v17 ^ 1) & 1;
  *(void *)(v12 + 32) = v19;
  *(void *)(v12 + 40) = v3;
  *(void *)(v12 + 48) = v20;
  *(unsigned char *)(v12 + 56) = v18;
  *(void *)(v12 + 64) = v2;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v13;
  uint64_t v14 = type metadata accessor for ODNAssessmentResult();
  void *v13 = v0;
  v13[1] = sub_214BDD334;
  uint64_t v15 = *(void *)(v0 + 32);
  return MEMORY[0x270FA2318](v15, v2, v11, 0xD00000000000004BLL, 0x8000000214D33210, sub_214BDE7AC, v12, v14);
}

uint64_t sub_214BDD334()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BDD460, v1, 0);
}

uint64_t sub_214BDD460()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214BDD474(uint64_t a1, unsigned char *a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, unint64_t *a8)
{
  unint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v38 = a4;
  int v41 = a3 & 1;
  int v42 = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v43 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D6D0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = a8[15];
  uint64_t v18 = a8[16];
  unint64_t v20 = a8[20];
  unint64_t v36 = a8[19];
  uint64_t v37 = v18;
  LOBYTE(a2) = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v22 + v21, (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  type metadata accessor for ODNRequestTask();
  uint64_t v23 = swift_allocObject();
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  sub_214B6A3F8(v38, v39);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v40;
  swift_bridgeObjectRetain();
  *((void *)&v34 + 1) = v20;
  *(void *)&long long v34 = v36;
  sub_214BDF2E4((char)a2, v41, v25, v24, v26, v42, v19, v37, v34, (uint64_t)sub_214BDE85C, v22, v23);
  swift_beginAccess();
  uint64_t v27 = swift_retain();
  MEMORY[0x2166AFD10](v27);
  if (*(void *)((a8[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a8[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_214D1A298();
  }
  sub_214D1A2B8();
  sub_214D1A288();
  sub_214BDBFA0(a8 + 14);
  swift_endAccess();
  uint64_t v28 = sub_214D1A368();
  uint64_t v29 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v43, 1, 1, v28);
  uint64_t v31 = sub_214BE08F4(&qword_26784D6C8, v30, (void (*)(uint64_t))type metadata accessor for ODNAtorQueueManager);
  long long v32 = (void *)swift_allocObject();
  v32[2] = a8;
  v32[3] = v31;
  void v32[4] = a8;
  swift_retain_n();
  sub_214BF1024(v29, (uint64_t)&unk_26784D6E0, (uint64_t)v32);
  swift_release();
  return swift_release();
}

uint64_t sub_214BDD7E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ODNAssessmentResult();
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_214BE0660(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ODNAssessmentResult);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D6D0);
  return sub_214D1A2F8();
}

uint64_t sub_214BDD890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_214B6B4A4;
  v6[11] = a4;
  return MEMORY[0x270FA2498](sub_214BDC630, a4, 0);
}

uint64_t sub_214BDD93C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 984) = v5;
  *(void *)(v6 + 976) = a5;
  *(void *)(v6 + 968) = a4;
  *(void *)(v6 + 960) = a3;
  *(void *)(v6 + 952) = a1;
  *(void *)(v6 + 992) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  *(void *)(v6 + 1000) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  *(void *)(v6 + 1008) = v8;
  *(void *)(v6 + 1016) = *(void *)(v8 - 8);
  *(void *)(v6 + 1024) = swift_task_alloc();
  *(unsigned char *)(v6 + 610) = *a2;
  return MEMORY[0x270FA2498](sub_214BDDA48, v5, 0);
}

uint64_t sub_214BDDA48()
{
  uint64_t v10 = v0;
  uint64_t v1 = (void *)v0[123];
  uint64_t v2 = v1[19];
  v0[129] = v2;
  uint64_t v3 = v1[20];
  v0[130] = v3;
  v0[116] = v2;
  v0[117] = v3;
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v0[114] = 0xD000000000000027;
  v0[115] = 0x8000000214D33400;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0[114];
  unint64_t v5 = v0[115];
  LOBYTE(v9[0]) = 12;
  CoreODILogger.debug(_:category:)(v4, v5, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[131] = v1[15];
  swift_getObjectType();
  uint64_t v7 = sub_214D1A2D8();
  return MEMORY[0x270FA2498](sub_214BDDBBC, v7, v6);
}

uint64_t sub_214BDDBBC()
{
  uint64_t v1 = v0[123];
  memcpy(v0 + 2, (const void *)(v0[131] + 368), 0x252uLL);
  sub_214BA5C80(v0 + 2);
  return MEMORY[0x270FA2498](sub_214BDDC40, v1, 0);
}

uint64_t sub_214BDDC40()
{
  uint64_t v45 = v0 + 616;
  char v43 = *(unsigned char *)(v0 + 610);
  uint64_t v1 = *(void **)(v0 + 1024);
  uint64_t v2 = *(int **)(v0 + 1008);
  uint64_t v3 = *(void *)(v0 + 976);
  uint64_t v4 = *(void *)(v0 + 968);
  uint64_t v41 = *(void *)(v0 + 960);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v36 = *(void *)(v0 + 32);
  uint64_t v39 = *(void *)(v0 + 40);
  uint64_t v47 = *(void *)(v0 + 96);
  unint64_t v49 = *(void *)(v0 + 104);
  uint64_t v7 = (uint64_t)v1 + v2[6];
  sub_214BE0660(*(void *)(v0 + 952), v7, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
  uint64_t v8 = type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  uint64_t v37 = v5;
  *uint64_t v1 = v5;
  v1[1] = v6;
  uint64_t v38 = v6;
  v1[2] = v4;
  v1[3] = v3;
  *((unsigned char *)v1 + v2[7]) = v43;
  *(void *)((char *)v1 + v2[8]) = v41;
  sub_214B6AC38(v0 + 112, v0 + 752, qword_26ACE3630);
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  if (sub_214B58B0C(v0 + 752) != 1)
  {
    uint64_t v9 = *(void *)(v0 + 872);
    uint64_t v10 = *(void *)(v0 + 880);
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38(v0 + 344, v45, qword_26ACE3630);
  uint64_t v33 = v10;
  uint64_t v34 = v9;
  if (sub_214B58B0C(v45) == 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 744);
    uint64_t v30 = *(void *)(v0 + 736);
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = *(void *)(v0 + 1016);
  uint64_t v23 = *(void *)(v0 + 1008);
  uint64_t v12 = *(void *)(v0 + 1000);
  uint64_t v35 = *(void *)(v0 + 1048);
  if (v49) {
    uint64_t v13 = v47;
  }
  else {
    uint64_t v13 = 0;
  }
  unint64_t v14 = 0xE000000000000000;
  if (v49) {
    unint64_t v14 = v49;
  }
  unint64_t v31 = v14;
  uint64_t v32 = v13;
  uint64_t v16 = *(void *)(v0 + 264);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v46 = *(void *)(v0 + 296);
  uint64_t v48 = *(void *)(v0 + 288);
  uint64_t v42 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 304);
  uint64_t v40 = *(void *)(v0 + 320);
  uint64_t v26 = *(void *)(v0 + 504);
  uint64_t v27 = *(void *)(v0 + 496);
  uint64_t v24 = *(void *)(v0 + 520);
  uint64_t v25 = *(void *)(v0 + 512);
  uint64_t v18 = *(void *)(v0 + 528);
  uint64_t v19 = *(void *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 544);
  uint64_t v20 = v12 + *(int *)(*(void *)(v0 + 992) + 88);
  uint64_t v21 = *(void *)(v0 + 552);
  sub_214BE0660(*(void *)(v0 + 1024), v20, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v23);
  *(void *)uint64_t v12 = v36;
  *(void *)(v12 + 8) = v39;
  *(void *)(v12 + 16) = v37;
  *(void *)(v12 + 24) = v38;
  *(void *)(v12 + 32) = v34;
  *(void *)(v12 + 40) = v33;
  *(void *)(v12 + 48) = v16;
  *(void *)(v12 + 56) = v15;
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 72) = v48;
  *(void *)(v12 + 80) = v46;
  *(void *)(v12 + 88) = v44;
  *(void *)(v12 + 96) = v42;
  *(void *)(v12 + 104) = v40;
  *(void *)(v12 + 112) = v30;
  *(void *)(v12 + 120) = v29;
  *(void *)(v12 + 128) = v27;
  *(void *)(v12 + 136) = v26;
  *(void *)(v12 + 144) = v25;
  *(void *)(v12 + 152) = v24;
  *(void *)(v12 + 160) = v18;
  *(void *)(v12 + 168) = v19;
  *(void *)(v12 + 176) = v28;
  *(void *)(v12 + 184) = v21;
  *(_OWORD *)(v12 + 272) = 0u;
  *(_OWORD *)(v12 + 288) = 0u;
  *(_OWORD *)(v12 + 240) = 0u;
  *(_OWORD *)(v12 + 256) = 0u;
  *(_OWORD *)(v12 + 208) = 0u;
  *(_OWORD *)(v12 + 224) = 0u;
  *(_OWORD *)(v12 + 192) = 0u;
  *(void *)(v12 + 304) = 0;
  *(void *)(v12 + 312) = 1;
  *(unsigned char *)(v12 + 320) = 2;
  *(void *)(v12 + 328) = 0;
  *(void *)(v12 + 336) = 0;
  *(unsigned char *)(v12 + 344) = 1;
  *(void *)(v12 + 352) = 0;
  *(void *)(v12 + 360) = 0;
  *(unsigned char *)(v12 + 368) = 1;
  *(void *)(v12 + 376) = v32;
  *(void *)(v12 + 384) = v31;
  *(void *)(v12 + 392) = 0;
  *(unsigned char *)(v12 + 400) = 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214BE06C8((uint64_t *)(v0 + 112));
  swift_bridgeObjectRetain();
  sub_214B79260(v16, v15);
  sub_214B79260(v27, v26);
  return MEMORY[0x270FA2498](sub_214BDE02C, v35, 0);
}

uint64_t sub_214BDE02C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[131] + 192), *(void *)(v0[131] + 216));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[132] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BDE0D8;
  uint64_t v2 = v0[125];
  return sub_214C1EC70(v2, 0);
}

uint64_t sub_214BDE0D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1064) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 984);
  if (v0) {
    uint64_t v4 = sub_214BDE2CC;
  }
  else {
    uint64_t v4 = sub_214BDE204;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BDE204()
{
  uint64_t v1 = v0[128];
  uint64_t v2 = v0[125];
  sub_214BA598C(v0 + 14);
  sub_214BA5F0C(v0 + 2);
  sub_214BE0894(v2, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_214BE0894(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214BDE2CC()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)v0[133];
  uint64_t v2 = v0[128];
  uint64_t v3 = v0[125];
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v6[0] = 0xD00000000000000CLL;
  v6[1] = 0x8000000214D33430;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.error(_:category:)(0xD00000000000001ALL, 0x8000000214D33430, v6);
  swift_bridgeObjectRelease();

  sub_214BA598C(v0 + 14);
  sub_214BA5F0C(v0 + 2);
  swift_bridgeObjectRelease();
  sub_214BE0894(v3, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_214BE0894(v2, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214BDE470()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAtorQueueManager()
{
  return self;
}

ValueMetadata *type metadata accessor for ODNRequestTaskQueue()
{
  return &type metadata for ODNRequestTaskQueue;
}

unsigned char *storeEnumTagSinglePayload for ODNRequestTask.ODNatorTriggeringCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BDE5C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNRequestTask.ODNatorTriggeringCase()
{
  return &type metadata for ODNRequestTask.ODNatorTriggeringCase;
}

unsigned char *storeEnumTagSinglePayload for ODNRequestTask.ODNatorContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BDE6C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNRequestTask.ODNatorContentType()
{
  return &type metadata for ODNRequestTask.ODNatorContentType;
}

unint64_t sub_214BDE700()
{
  unint64_t result = qword_26784D6B8;
  if (!qword_26784D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D6B8);
  }
  return result;
}

unint64_t sub_214BDE758()
{
  unint64_t result = qword_26784D6C0;
  if (!qword_26784D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D6C0);
  }
  return result;
}

uint64_t sub_214BDE7AC(uint64_t a1)
{
  return sub_214BDD474(a1, *(unsigned char **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unint64_t **)(v1 + 64));
}

uint64_t sub_214BDE7C8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D6D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_214BDE85C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D6D0);
  return sub_214BDD7E4(a1);
}

uint64_t sub_214BDE8D0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_214D1AB68();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_137;
    }
    if (v4) {
      return sub_214BDEFA4(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_145;
  }
  uint64_t v7 = result;
  unint64_t v94 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    uint64_t v100 = MEMORY[0x263F8EE78];
    __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      uint64_t v86 = v10;
      if (v13 >= 2)
      {
        uint64_t v87 = *v94;
        do
        {
          unint64_t v88 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v87) {
            goto LABEL_144;
          }
          uint64_t v89 = v86;
          uint64_t v90 = *(void *)&v86[16 * v88 + 32];
          uint64_t v91 = *(void *)&v86[16 * v13 + 24];
          sub_214BDF02C((char *)(v87 + 8 * v90), (char *)(v87 + 8 * *(void *)&v86[16 * v13 + 16]), (char *)(v87 + 8 * v91), __dst);
          if (v2) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v89 = sub_214BE995C((uint64_t)v89);
          }
          if (v88 >= *((void *)v89 + 2)) {
            goto LABEL_134;
          }
          unint64_t v92 = &v89[16 * v88 + 32];
          *(void *)unint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v89 + 2);
          if (v13 > v93) {
            goto LABEL_135;
          }
          memmove(&v89[16 * v13 + 16], &v89[16 * v13 + 32], 16 * (v93 - v13));
          uint64_t v86 = v89;
          *((void *)v89 + 2) = v93 - 1;
          unint64_t v13 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_100:
      swift_bridgeObjectRelease();
      *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_214D1A288();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for ODNRequestTask();
    uint64_t v9 = sub_214D1A2A8();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v100 = v9;
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v95 = *a1 - 8;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v96 = v7;
  uint64_t v97 = v4;
  uint64_t v98 = *a1;
  while (1)
  {
    uint64_t v14 = v11++;
    if (v11 < v4)
    {
      uint64_t v15 = *(void *)(v12 + 8 * v11);
      uint64_t v16 = *(void *)(v12 + 8 * v14);
      int v17 = *(unsigned __int8 *)(v15 + 113);
      int v18 = *(unsigned __int8 *)(v16 + 113);
      if (v17 == v18) {
        int v19 = *(unsigned __int8 *)(v15 + 112) < *(unsigned __int8 *)(v16 + 112);
      }
      else {
        int v19 = v18 & (v17 ^ 1);
      }
      uint64_t v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        do
        {
          uint64_t v20 = *(void *)(v12 + 8 * v11);
          int v21 = *(unsigned __int8 *)(v20 + 113);
          if (v21 == (v17 & 1))
          {
            if (v19 != *(unsigned __int8 *)(v20 + 112) < *(unsigned __int8 *)(v15 + 112)) {
              goto LABEL_26;
            }
          }
          else if (v19 != (v17 & (v21 ^ 1)))
          {
            goto LABEL_26;
          }
          ++v11;
          int v17 = *(unsigned __int8 *)(v20 + 113);
          uint64_t v15 = v20;
        }
        while (v4 != v11);
        uint64_t v11 = v4;
      }
LABEL_26:
      if (v19)
      {
        if (v11 < v14) {
          goto LABEL_138;
        }
        if (v14 < v11)
        {
          uint64_t v22 = (uint64_t *)(v95 + 8 * v11);
          uint64_t v23 = v11;
          uint64_t v24 = v14;
          uint64_t v25 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v24 != --v23)
            {
              if (!v12) {
                goto LABEL_143;
              }
              uint64_t v26 = *v25;
              *uint64_t v25 = *v22;
              *uint64_t v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_53;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_136;
    }
    if (v11 - v14 >= v7) {
      goto LABEL_53;
    }
    uint64_t v27 = v14 + v7;
    if (__OFADD__(v14, v7)) {
      goto LABEL_139;
    }
    if (v27 >= v4) {
      uint64_t v27 = v4;
    }
    if (v27 < v14) {
      break;
    }
    if (v11 != v27)
    {
      uint64_t v28 = (void *)(v95 + 8 * v11);
      do
      {
        uint64_t v29 = *(void *)(v12 + 8 * v11);
        uint64_t v30 = v14;
        unint64_t v31 = v28;
        do
        {
          uint64_t v32 = *v31;
          int v33 = *(unsigned __int8 *)(v29 + 113);
          int v34 = *(unsigned __int8 *)(*v31 + 113);
          if (v33 == v34)
          {
            if (*(unsigned __int8 *)(v29 + 112) >= *(unsigned __int8 *)(v32 + 112)) {
              break;
            }
          }
          else if ((v34 & (v33 ^ 1) & 1) == 0)
          {
            break;
          }
          if (!v12) {
            goto LABEL_141;
          }
          *unint64_t v31 = v29;
          v31[1] = v32;
          --v31;
          ++v30;
        }
        while (v11 != v30);
        ++v11;
        ++v28;
      }
      while (v11 != v27);
      uint64_t v11 = v27;
    }
LABEL_53:
    if (v11 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_214BE97A0(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v36 = *((void *)v10 + 2);
    unint64_t v35 = *((void *)v10 + 3);
    unint64_t v13 = v36 + 1;
    uint64_t v12 = v98;
    if (v36 >= v35 >> 1)
    {
      uint64_t v85 = sub_214BE97A0((char *)(v35 > 1), v36 + 1, 1, v10);
      uint64_t v12 = v98;
      uint64_t v10 = v85;
    }
    *((void *)v10 + 2) = v13;
    uint64_t v37 = v10 + 32;
    uint64_t v38 = &v10[16 * v36 + 32];
    *(void *)uint64_t v38 = v14;
    *((void *)v38 + 1) = v11;
    if (v36)
    {
      while (1)
      {
        unint64_t v39 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v44 = &v37[16 * v13];
          uint64_t v45 = *((void *)v44 - 8);
          uint64_t v46 = *((void *)v44 - 7);
          BOOL v50 = __OFSUB__(v46, v45);
          uint64_t v47 = v46 - v45;
          if (v50) {
            goto LABEL_120;
          }
          uint64_t v49 = *((void *)v44 - 6);
          uint64_t v48 = *((void *)v44 - 5);
          BOOL v50 = __OFSUB__(v48, v49);
          uint64_t v42 = v48 - v49;
          char v43 = v50;
          if (v50) {
            goto LABEL_121;
          }
          unint64_t v51 = v13 - 2;
          uint64_t v52 = &v37[16 * v13 - 32];
          uint64_t v54 = *(void *)v52;
          uint64_t v53 = *((void *)v52 + 1);
          BOOL v50 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          if (v50) {
            goto LABEL_123;
          }
          BOOL v50 = __OFADD__(v42, v55);
          uint64_t v56 = v42 + v55;
          if (v50) {
            goto LABEL_126;
          }
          if (v56 >= v47)
          {
            uint64_t v74 = &v37[16 * v39];
            uint64_t v76 = *(void *)v74;
            uint64_t v75 = *((void *)v74 + 1);
            BOOL v50 = __OFSUB__(v75, v76);
            uint64_t v77 = v75 - v76;
            if (v50) {
              goto LABEL_130;
            }
            BOOL v67 = v42 < v77;
            goto LABEL_90;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v68 = *((void *)v10 + 4);
            uint64_t v69 = *((void *)v10 + 5);
            BOOL v50 = __OFSUB__(v69, v68);
            uint64_t v61 = v69 - v68;
            char v62 = v50;
            goto LABEL_84;
          }
          uint64_t v41 = *((void *)v10 + 4);
          uint64_t v40 = *((void *)v10 + 5);
          BOOL v50 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          char v43 = v50;
        }
        if (v43) {
          goto LABEL_122;
        }
        unint64_t v51 = v13 - 2;
        uint64_t v57 = &v37[16 * v13 - 32];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v60 = __OFSUB__(v58, v59);
        uint64_t v61 = v58 - v59;
        char v62 = v60;
        if (v60) {
          goto LABEL_125;
        }
        uint64_t v63 = &v37[16 * v39];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v50 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v50) {
          goto LABEL_128;
        }
        if (__OFADD__(v61, v66)) {
          goto LABEL_129;
        }
        if (v61 + v66 >= v42)
        {
          BOOL v67 = v42 < v66;
LABEL_90:
          if (v67) {
            unint64_t v39 = v51;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v62) {
          goto LABEL_124;
        }
        uint64_t v70 = &v37[16 * v39];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v50 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v50) {
          goto LABEL_127;
        }
        if (v73 < v61) {
          goto LABEL_14;
        }
LABEL_92:
        unint64_t v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v12) {
          goto LABEL_142;
        }
        uint64_t v79 = v10;
        unint64_t v80 = &v37[16 * v78];
        uint64_t v81 = *(void *)v80;
        uint64_t v82 = &v37[16 * v39];
        uint64_t v83 = *((void *)v82 + 1);
        sub_214BDF02C((char *)(v12 + 8 * *(void *)v80), (char *)(v12 + 8 * *(void *)v82), (char *)(v12 + 8 * v83), __dst);
        if (v1) {
          goto LABEL_100;
        }
        if (v83 < v81) {
          goto LABEL_117;
        }
        if (v39 > *((void *)v79 + 2)) {
          goto LABEL_118;
        }
        *(void *)unint64_t v80 = v81;
        *(void *)&v37[16 * v78 + 8] = v83;
        unint64_t v84 = *((void *)v79 + 2);
        if (v39 >= v84) {
          goto LABEL_119;
        }
        uint64_t v10 = v79;
        unint64_t v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((void *)v79 + 2) = v84 - 1;
        uint64_t v12 = v98;
        if (v84 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v7 = v96;
    uint64_t v4 = v97;
    if (v11 >= v97)
    {
      uint64_t v2 = v1;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_214D1A918();
  __break(1u);
  return result;
}

uint64_t sub_214BDEFA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void *)(v4 + 8 * a3);
    uint64_t v7 = result;
    uint64_t v8 = (void *)v5;
    while (1)
    {
      uint64_t v9 = *v8;
      int v10 = *(unsigned __int8 *)(v6 + 113);
      int v11 = *(unsigned __int8 *)(*v8 + 113);
      if (v10 == v11)
      {
        if (*(unsigned __int8 *)(v6 + 112) >= *(unsigned __int8 *)(v9 + 112)) {
          goto LABEL_4;
        }
      }
      else if ((v11 & (v10 ^ 1) & 1) == 0)
      {
        goto LABEL_4;
      }
      if (!v4) {
        break;
      }
      *uint64_t v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_214BDF02C(char *__src, char *a2, char *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - a2;
  uint64_t v12 = a3 - a2 + 7;
  if (a3 - a2 >= 0) {
    uint64_t v12 = a3 - a2;
  }
  uint64_t v13 = v12 >> 3;
  unint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_47;
    }
    if (__dst != a2 || &a2[8 * v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    uint64_t v20 = &v4[8 * v13];
    uint64_t v29 = v20;
    unint64_t v31 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_31:
      sub_214BE989C(&v31, &v30, &v29);
      return 1;
    }
    while (1)
    {
      uint64_t v22 = *((void *)v20 - 1);
      uint64_t v23 = v6 - 8;
      uint64_t v24 = *((void *)v6 - 1);
      int v25 = *(unsigned __int8 *)(v22 + 113);
      int v26 = *(unsigned __int8 *)(v24 + 113);
      if (v25 == v26)
      {
        unsigned int v28 = *(unsigned __int8 *)(v22 + 112);
        uint64_t v27 = v5 - 8;
        if (v28 >= *(unsigned __int8 *)(v24 + 112))
        {
LABEL_37:
          uint64_t v29 = v20 - 8;
          if (v5 < v20 || v27 >= v20 || v5 != v20) {
            *(void *)uint64_t v27 = *((void *)v20 - 1);
          }
          v20 -= 8;
          if (v6 <= v7) {
            goto LABEL_31;
          }
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v27 = v5 - 8;
        if ((v26 & (v25 ^ 1) & 1) == 0) {
          goto LABEL_37;
        }
      }
      if (v5 != v6 || v27 >= v6) {
        *(void *)uint64_t v27 = v24;
      }
      unint64_t v31 = v6 - 8;
      v6 -= 8;
      if (v23 <= v7) {
        goto LABEL_31;
      }
LABEL_34:
      uint64_t v5 = v27;
      if (v20 <= v4) {
        goto LABEL_31;
      }
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v29 = v14;
    if (v6 < v5 && v8 >= 8)
    {
      while (1)
      {
        uint64_t v15 = *(void *)v6;
        uint64_t v16 = *(void *)v4;
        int v17 = *(unsigned __int8 *)(*(void *)v6 + 113);
        int v18 = *(unsigned __int8 *)(*(void *)v4 + 113);
        if (v17 == v18)
        {
          if (*(unsigned __int8 *)(v15 + 112) < *(unsigned __int8 *)(v16 + 112))
          {
LABEL_18:
            int v19 = v6 + 8;
            if (v7 < v6 || v7 >= v19 || v7 != v6) {
              *(void *)uint64_t v7 = v15;
            }
            goto LABEL_22;
          }
        }
        else if (v18 & (v17 ^ 1))
        {
          goto LABEL_18;
        }
        if (v7 != v4) {
          *(void *)uint64_t v7 = v16;
        }
        v4 += 8;
        uint64_t v30 = v4;
        int v19 = v6;
LABEL_22:
        v7 += 8;
        if (v4 < v14)
        {
          uint64_t v6 = v19;
          if (v19 < v5) {
            continue;
          }
        }
        unint64_t v31 = v7;
        goto LABEL_31;
      }
    }
    goto LABEL_31;
  }
LABEL_47:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214BDF2E4(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v18 = a2 & 1;
  uint64_t v22 = &type metadata for CoreODILogger;
  uint64_t v23 = &protocol witness table for CoreODILogger;
  long long v21 = a9;
  swift_defaultActor_initialize();
  *(_WORD *)(a12 + 208) = 0;
  *(unsigned char *)(a12 + 112) = a1;
  *(unsigned char *)(a12 + 113) = v18;
  *(void *)(a12 + 120) = a3;
  *(void *)(a12 + 128) = a4;
  *(void *)(a12 + 136) = a5;
  *(unsigned char *)(a12 + 144) = a6;
  *(void *)(a12 + 152) = a7;
  *(void *)(a12 + 160) = a8;
  *(void *)(a12 + 216) = a10;
  *(void *)(a12 + 224) = a11;
  sub_214B59EC0(&v21, a12 + 168);
  return a12;
}

uint64_t sub_214BDF3A8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_214BDF3E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_214B6A55C;
  return sub_214BDD890(a1, v4, v5, v6);
}

uint64_t sub_214BDF49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1968) = v60;
  *(void *)(v8 + 1960) = v59;
  *(void *)(v8 + 1952) = v58;
  *(unsigned char *)(v8 + 2002) = v53;
  *(void *)(v8 + 1944) = a6;
  *(void *)(v8 + 1936) = a5;
  uint64_t v10 = sub_214D19CC8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = swift_task_alloc();
  *(void *)(v8 + 1976) = v12;
  *(void *)(v8 + 1840) = type metadata accessor for ODNAssessmentsFactory();
  *(void *)(v8 + 1848) = &off_26C5A63F8;
  *(void *)(v8 + 1816) = v54;
  swift_defaultActor_initialize();
  *(unsigned char *)(v60 + 320) = 0;
  *(_OWORD *)(v60 + 288) = 0u;
  *(_OWORD *)(v60 + 304) = 0u;
  *(_OWORD *)(v60 + 256) = 0u;
  *(_OWORD *)(v60 + 272) = 0u;
  *(_OWORD *)(v60 + 240) = 0u;
  *(_OWORD *)(v60 + 328) = 0u;
  *(_OWORD *)(v60 + 344) = 0u;
  *(void *)(v60 + 360) = 0;
  sub_214B93DCC(v8 + 1816, v60 + 112);
  *(void *)(v60 + 152) = v56;
  *(void *)(v60 + 160) = v57;
  *(void *)(v8 + 1728) = 0x404E000000000000;
  *(void *)(v8 + 1736) = 3;
  *(void *)(v8 + 1744) = 0x3FE0000000000000;
  *(_DWORD *)(v8 + 1752) = 65793;
  uint64_t v13 = (objc_class *)type metadata accessor for DIPAssessmentWebService();
  *(_OWORD *)(v8 + 1760) = 0u;
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(void *)uint64_t v15 = 0x726F5F646E65732FLL;
  *((void *)v15 + 1) = 0xE900000000000064;
  uint64_t v16 = &v14[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(void *)uint64_t v16 = 0x746F5F646E65732FLL;
  *((void *)v16 + 1) = 0xE900000000000064;
  swift_bridgeObjectRetain_n();
  *(void *)(v60 + 232) = sub_214BDAEFC(a1, a2, v8 + 1728, v56, v57, v14);
  uint64_t v17 = a8;
  uint64_t v45 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214D19CB8();
  uint64_t v18 = sub_214D19C88();
  uint64_t v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  *(void *)(v8 + 1680) = 0x4024000000000000;
  *(void *)(v8 + 1688) = 3;
  *(void *)(v8 + 1696) = 0x3FE0000000000000;
  *(_DWORD *)(v8 + 1704) = 16777217;
  *(void *)(v8 + 1712) = a7;
  *(void *)(v8 + 1720) = v17;
  long long v21 = (objc_class *)type metadata accessor for DIPAssessmentStaticWebService();
  uint64_t v22 = (char *)objc_allocWithZone(v21);
  uint64_t v23 = &v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_STS_ENDPOINT];
  *(void *)uint64_t v23 = 1937011503;
  *((void *)v23 + 1) = 0xE400000000000000;
  uint64_t v24 = &v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_PROFILE_ENDPOINT];
  *(void *)uint64_t v24 = 0x656C69666F72702FLL;
  *((void *)v24 + 1) = 0xE800000000000000;
  v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo] = v55;
  id v25 = sub_214BDAEFC(v18, v20, v8 + 1680, v56, v57, v22);
  *(void *)(v60 + 168) = v25;
  *(void *)(v8 + 1880) = v21;
  *(void *)(v8 + 1888) = &off_26C5AD280;
  *(void *)(v8 + 1856) = v25;
  type metadata accessor for ProfileManager();
  uint64_t v46 = (void *)swift_allocObject();
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1(v8 + 1856, (uint64_t)v21);
  uint64_t v27 = *((void *)v21 - 1);
  unsigned int v28 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, objc_class *))(v27 + 16))(v28, v26, v21);
  uint64_t v29 = *v28;
  id v30 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_214BDAFF4(a5, a6, a3, a4, v29, v46);
  __swift_destroy_boxed_opaque_existential_1(v8 + 1856);
  swift_task_dealloc();

  uint64_t v32 = sub_214BE08F4(&qword_26784D708, 255, (void (*)(uint64_t))type metadata accessor for ProfileManager);
  *(void *)(v60 + 176) = v31;
  *(void *)(v60 + 184) = v32;
  sub_214B59FCC(v8 + 1544);
  sub_214B6AC38(v8 + 1544, v8 + 576, qword_26ACE3630);
  *(_OWORD *)(v8 + 712) = 0u;
  *(_OWORD *)(v8 + 728) = 0u;
  *(_OWORD *)(v8 + 744) = 0u;
  *(_OWORD *)(v8 + 760) = 0u;
  *(_OWORD *)(v8 + 776) = 0u;
  *(void *)(v8 + 792) = 0;
  *(void *)(v8 + 800) = 0xF000000000000000;
  sub_214B6AC38(v8 + 1544, v8 + 808, qword_26ACE3630);
  *(_OWORD *)(v8 + 944) = 0u;
  *(_OWORD *)(v8 + 960) = 0u;
  *(_OWORD *)(v8 + 976) = 0u;
  *(_OWORD *)(v8 + 992) = 0u;
  *(_OWORD *)(v8 + 1008) = 0u;
  *(void *)(v8 + 1024) = 0;
  *(void *)(v8 + 1032) = 0xF000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = MEMORY[0x263F8EE78];
  unint64_t v34 = sub_214B7E450(MEMORY[0x263F8EE78]);
  *(void *)(v60 + 368) = a3;
  *(void *)(v60 + 376) = a4;
  *(void *)(v60 + 384) = a5;
  *(void *)(v60 + 392) = a6;
  *(void *)(v60 + 400) = a7;
  *(void *)(v60 + 408) = v45;
  *(_OWORD *)(v60 + 416) = 0u;
  *(_OWORD *)(v60 + 432) = 0u;
  *(_OWORD *)(v60 + 448) = 0u;
  memcpy((void *)(v60 + 464), (const void *)(v8 + 576), 0x1D0uLL);
  *(unsigned char *)(v60 + 928) = 2;
  int v35 = *(_DWORD *)(v8 + 1540);
  *(_DWORD *)(v60 + 929) = *(_DWORD *)(v8 + 1537);
  *(_DWORD *)(v60 + 932) = v35;
  *(void *)(v60 + 936) = v34;
  *(_OWORD *)(v60 + 944) = xmmword_214D1DF20;
  *(_WORD *)(v60 + 960) = 0;
  unint64_t v36 = *(void **)(v60 + 232);
  *(void *)(v8 + 1920) = &type metadata for CoreODILogger;
  *(void *)(v8 + 1928) = &protocol witness table for CoreODILogger;
  *(void *)(v8 + 1896) = v56;
  *(void *)(v8 + 1904) = v57;
  uint64_t v37 = type metadata accessor for ODNAssessmentsFeedbackManager();
  uint64_t v38 = swift_allocObject();
  id v39 = v36;
  swift_bridgeObjectRetain();
  id v40 = v39;
  swift_defaultActor_initialize();
  sub_214B78DBC((_OWORD *)(v8 + 1040));
  sub_214BE093C(v8 + 1328);
  uint64_t v41 = sub_214B7EDDC(v33);
  *(_WORD *)(v8 + 16) = 0;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  sub_214B6AC38(v8 + 1040, v8 + 56, &qword_26784CEC8);
  sub_214B6AC38(v8 + 1328, v8 + 344, &qword_26784D710);
  *(void *)(v8 + 560) = v41;
  *(void *)(v8 + 568) = MEMORY[0x263F8EE88];
  memcpy((void *)(v38 + 112), (const void *)(v8 + 16), 0x230uLL);
  sub_214B59EC0((long long *)(v8 + 1896), v38 + 680);
  *(void *)(v38 + 672) = v40;
  *(void *)(v8 + 1800) = v37;
  *(void *)(v8 + 1808) = &off_26C5A7DF0;
  swift_bridgeObjectRelease();

  *(void *)(v8 + 1776) = v38;
  sub_214B59EC0((long long *)(v8 + 1776), v60 + 192);
  return MEMORY[0x270FA2498](sub_214BDFB9C, v60, 0);
}

uint64_t sub_214BDFB9C()
{
  *(unsigned char *)(v0 + 2000) = *(unsigned char *)(v0 + 2002);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1984) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BDFC3C;
  return sub_214B99D7C((unsigned char *)(v0 + 2000));
}

uint64_t sub_214BDFC3C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    sub_214B9A574(5, v0);
  }
  uint64_t v4 = (void *)swift_task_alloc();
  v2[249] = v4;
  void *v4 = v3;
  v4[1] = sub_214BDFDA0;
  uint64_t v5 = v2[245];
  uint64_t v6 = v2[244];
  return sub_214B9A730((uint64_t)v2 + 2001, v6, v5);
}

uint64_t sub_214BDFDA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1968);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BDFEB0, v1, 0);
}

uint64_t sub_214BDFEB0()
{
  uint64_t v1 = (void *)v0[246];
  uint64_t v2 = v0[243];
  uint64_t v3 = v0[242];
  v1[52] = v3;
  v1[53] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[54] = v3;
  v1[55] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 227));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[246];
  return v4(v5);
}

void sub_214BDFF70(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = v8;
  v9[8] = a8;
  unsigned char v9[9] = v10;
  v9[7] = a2;
  uint64_t v16 = sub_214D19CC8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = swift_task_alloc();
  v9[10] = v18;
  int v37 = *a3;
  int v40 = *a4;
  swift_defaultActor_initialize();
  *(void *)(v10 + 112) = MEMORY[0x263F8EE78];
  *(void *)(v10 + 136) = 0;
  *(unsigned char *)(v10 + 144) = 0;
  *(void *)(v10 + 152) = a5;
  *(void *)(v10 + 160) = a6;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v32[0] = 0xD000000000000008;
  v32[1] = 0x8000000214D33450;
  sub_214D1A108();
  CoreODILogger.debug(_:category:)(0xD00000000000002BLL, 0x8000000214D33450, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  v9[11] = v34;
  sub_214D19CB8();
  sub_214D19C88();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
  uint64_t v19 = type metadata accessor for ODNAssessmentsFactory();
  uint64_t v20 = swift_allocObject();
  v9[12] = v20;
  uint64_t v21 = *(void *)(v10 + 160);
  uint64_t v28 = *(void *)(v10 + 152);
  v9[5] = v19;
  v9[6] = &off_26C5A63F8;
  void v9[2] = v20;
  type metadata accessor for ODNAssessmentsManager();
  uint64_t v22 = swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v9 + 2), v19);
  uint64_t v23 = *(void *)(v19 - 8);
  uint64_t v24 = (uint64_t *)swift_task_alloc();
  v9[13] = v24;
  (*(void (**)(void))(v23 + 16))();
  uint64_t v25 = *v24;
  uint64_t v27 = (char *)&dword_26784D6F8 + dword_26784D6F8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v26 = (void *)swift_task_alloc();
  v9[14] = v26;
  *uint64_t v26 = v9;
  v26[1] = sub_214BE031C;
  uint64_t v44 = a8;
  uint64_t v45 = v22;
  uint64_t v42 = v21;
  uint64_t v43 = a7;
  uint64_t v41 = v28;
  char v39 = v37;
  uint64_t v38 = v25;
  char v36 = v40;
  __asm { BR              X8; sub_214BDF49C }
}

uint64_t sub_214BE031C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + 16;
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v10 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = sub_214BE08F4(&qword_26784D700, 255, (void (*)(uint64_t))type metadata accessor for ODNAssessmentsManager);
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = v5;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v10 + 8);
  uint64_t v7 = *(void *)(v2 + 72);
  return v6(v7);
}

unint64_t sub_214BE0548()
{
  unint64_t result = qword_26784D6E8;
  if (!qword_26784D6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D6E8);
  }
  return result;
}

uint64_t sub_214BE059C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D158);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_214BE05FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BE0660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_214BE06C8(uint64_t *a1)
{
  uint64_t v2 = a1[19];
  uint64_t v3 = a1[20];
  uint64_t v6 = a1[27];
  uint64_t v9 = a1[29];
  unint64_t v5 = a1[28];
  uint64_t v7 = a1[31];
  uint64_t v8 = a1[30];
  uint64_t v10 = a1[49];
  uint64_t v11 = a1[48];
  unint64_t v12 = a1[57];
  uint64_t v13 = a1[56];
  sub_214BA5278(*a1, a1[1], a1[2]);
  swift_bridgeObjectRetain();
  sub_214B79260(v2, v3);
  sub_214B6A3F8(v6, v5);
  sub_214BA5278(v9, v8, v7);
  swift_bridgeObjectRetain();
  sub_214B79260(v11, v10);
  sub_214B6A3F8(v13, v12);
  return a1;
}

uint64_t sub_214BE0894(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_214BE08F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_214BE093C(uint64_t a1)
{
  *(unsigned char *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t getEnumTagSinglePayload for ODNRequestTaskQueue.ODNRequestTaskQueueError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ODNRequestTaskQueue.ODNRequestTaskQueueError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x214BE0A54);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BE0A7C()
{
  return 0;
}

ValueMetadata *type metadata accessor for ODNRequestTaskQueue.ODNRequestTaskQueueError()
{
  return &type metadata for ODNRequestTaskQueue.ODNRequestTaskQueueError;
}

unint64_t sub_214BE0A98()
{
  unint64_t result = qword_26784D718;
  if (!qword_26784D718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D718);
  }
  return result;
}

unint64_t sub_214BE0AEC(double a1)
{
  if (a1 <= 0.0) {
    return 0;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a1 <= -1.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a1 >= 1.84467441e19)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((unint64_t)a1 > 0x44B82FA08) {
    return -1;
  }
  double v1 = a1 * 1000000000.0;
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0) {
    goto LABEL_15;
  }
  if (v1 > -1.0)
  {
    if (v1 < 1.84467441e19) {
      return (unint64_t)v1;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t DsidType.init(from:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_214B93DCC(a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_214D1AD68();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_214D1ABE8();
    DsidType.init(rawValue:)(v8);
    if (v7 == 4) {
      char v6 = 0;
    }
    else {
      char v6 = v7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
  }
  return result;
}

void *sub_214BE0CB4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_214D19B98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  Swift::String v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10)
      {
        if (v10 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4480);
          uint64_t v9 = (void *)swift_allocObject();
          size_t v13 = _swift_stdlib_malloc_size(v9);
          void v9[2] = v10;
          void v9[3] = 2 * v13 - 64;
        }
        sub_214B6A3A0(a1, a2);
        uint64_t v14 = sub_214D19AD8();
        sub_214B58A4C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        if (v14 != v10)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x214BE0E60);
        }
      }
      return v9;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_214BE0E70()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D748);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_214D21190;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_214D211A0;
  *(void *)(v3 + 32) = 0xE400000000000000;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = &unk_26C5A6A20;
  *(void *)(v3 + 40) = v4 | 0x1000000000000000;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v2 + 32) = v3 | 0x7000000000000000;
  *(unsigned char *)(v2 + 40) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_214D211B0;
  *(void *)(v5 + 32) = 0xE400000000000000;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &unk_26C5A6720;
  *(void *)(v5 + 40) = v6 | 0x1000000000000000;
  *(unsigned char *)(v5 + 48) = 0;
  *(void *)(v2 + 48) = v5 | 0x7000000000000000;
  *(unsigned char *)(v2 + 56) = 0;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_214D211C0;
  *(void *)(v7 + 32) = 0xE400000000000000;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &unk_26C5A67E0;
  *(void *)(v7 + 40) = v8 | 0x1000000000000000;
  *(unsigned char *)(v7 + 48) = 0;
  *(void *)(v2 + 64) = v7 | 0x7000000000000000;
  *(unsigned char *)(v2 + 72) = 0;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_214D211D0;
  *(void *)(v9 + 32) = 0xE400000000000000;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &unk_26C5A6820;
  *(void *)(v9 + 40) = v10 | 0x1000000000000000;
  *(unsigned char *)(v9 + 48) = 0;
  *(void *)(v2 + 80) = v9 | 0x7000000000000000;
  *(unsigned char *)(v2 + 88) = 0;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_214D211E0;
  *(void *)(v11 + 32) = 0xE400000000000000;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_26C5A6860;
  *(void *)(v11 + 40) = v12 | 0x1000000000000000;
  *(unsigned char *)(v11 + 48) = 0;
  *(void *)(v2 + 96) = v11 | 0x7000000000000000;
  *(unsigned char *)(v2 + 104) = 0;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_214D211F0;
  *(void *)(v13 + 32) = 0xE400000000000000;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &unk_26C5A68A0;
  *(void *)(v13 + 40) = v14 | 0x1000000000000000;
  *(unsigned char *)(v13 + 48) = 0;
  *(void *)(v2 + 112) = v13 | 0x7000000000000000;
  *(unsigned char *)(v2 + 120) = 0;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_214D21200;
  *(void *)(v15 + 32) = 0xE400000000000000;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = &unk_26C5A68E0;
  *(void *)(v15 + 40) = v16 | 0x1000000000000000;
  *(unsigned char *)(v15 + 48) = 0;
  *(void *)(v2 + 128) = v15 | 0x7000000000000000;
  *(unsigned char *)(v2 + 136) = 0;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_214D21210;
  *(void *)(v17 + 32) = 0xE400000000000000;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_26C5A6920;
  *(void *)(v17 + 40) = v18 | 0x1000000000000000;
  *(unsigned char *)(v17 + 48) = 0;
  *(void *)(v2 + 144) = v17 | 0x7000000000000000;
  *(unsigned char *)(v2 + 152) = 0;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_214D21220;
  *(void *)(v19 + 32) = 0xE400000000000000;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = &unk_26C5A6960;
  *(void *)(v19 + 40) = v20 | 0x1000000000000000;
  *(unsigned char *)(v19 + 48) = 0;
  *(void *)(v2 + 160) = v19 | 0x7000000000000000;
  *(unsigned char *)(v2 + 168) = 0;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_214D21230;
  *(void *)(v21 + 32) = 0xE400000000000000;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &unk_26C5A69A0;
  *(void *)(v21 + 40) = v22 | 0x1000000000000000;
  *(unsigned char *)(v21 + 48) = 0;
  *(void *)(v2 + 176) = v21 | 0x7000000000000000;
  *(unsigned char *)(v2 + 184) = 0;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_214D21240;
  *(void *)(v23 + 32) = 0xE400000000000000;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = &unk_26C5A69E0;
  *(void *)(v23 + 40) = v24 | 0x1000000000000000;
  *(unsigned char *)(v23 + 48) = 0;
  *(void *)(v2 + 192) = v23 | 0x7000000000000000;
  *(unsigned char *)(v2 + 200) = 0;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_214D21250;
  *(void *)(v25 + 32) = 0xE400000000000000;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = &unk_26C5A6760;
  *(void *)(v25 + 40) = v26 | 0x1000000000000000;
  *(unsigned char *)(v25 + 48) = 0;
  *(void *)(v2 + 208) = v25 | 0x7000000000000000;
  *(unsigned char *)(v2 + 216) = 0;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_214D21260;
  *(void *)(v27 + 32) = 0xE400000000000000;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = &unk_26C5A67A0;
  *(void *)(v27 + 40) = v28 | 0x1000000000000000;
  *(unsigned char *)(v27 + 48) = 0;
  *(void *)(v2 + 224) = v27 | 0x7000000000000000;
  *(unsigned char *)(v2 + 232) = 0;
  *(void *)(v2 + 240) = 0x8000000000000030;
  *(unsigned char *)(v2 + 248) = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v0 + 16) = v1 | 0x3000000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_214BE13AC()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D748);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_214D1C1F0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_214D21270;
  *(void *)(v2 + 32) = 0xE90000000000006ELL;
  *(void *)(v2 + 40) = 0x8000000000000008;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v1 + 32) = v2 | 0x6000000000000000;
  *(unsigned char *)(v1 + 40) = 0;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_214D21280;
  *(void *)(v3 + 32) = 0x8000000214D33480;
  *(void *)(v3 + 40) = 0x8000000000000000;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v1 + 48) = v3 | 0x6000000000000000;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v0 + 16) = v1;
  return v0 | 0x1000000000000000;
}

void *sub_214BE14AC(void *a1)
{
  v59[4] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v48 = 0;
  uint64_t v8 = SecCertificateCopyExtensionValue();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    long long v46 = xmmword_214D1DF20;
    long long v55 = xmmword_214D1DF20;
    sub_214D19B58();

    unint64_t v10 = *((void *)&v55 + 1);
    if (*((void *)&v55 + 1) >> 60 != 15)
    {
      uint64_t v12 = v55;
      sub_214B6A3A0(v55, *((unint64_t *)&v55 + 1));
      uint64_t v13 = sub_214BE0CB4(v12, v10);
      sub_214B59EAC(v12, v10);
      uint64_t v14 = (2 * v13[2]) | 1;
      v47[0] = (uint64_t)v13;
      v47[1] = (uint64_t)(v13 + 4);
      v47[2] = 0;
      v47[3] = v14;
      uint64_t v2 = (void *)sub_214BE0E70();
      sub_214B7BEB0(v47, (unint64_t)v2, v15 & 1, v16, (unint64_t)&v55);
      if (v1)
      {
        sub_214B59EAC(v12, v10);
        sub_214BE222C((unint64_t)v2);

LABEL_20:
        swift_unknownObjectRelease();
        return v2;
      }
      sub_214BE222C((unint64_t)v2);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_214BE21D8();
        swift_allocError();
        *uint64_t v26 = 2;
        swift_willThrow();

        sub_214B59EAC(v12, v10);
        goto LABEL_20;
      }
      v43[1] = v17;
      uint64_t v18 = *(void *)(v49 + 16);
      unint64_t v45 = v10;
      uint64_t v44 = v12;
      if (v18)
      {
        v43[3] = v7;
        uint64_t v19 = v49 + 32;
        v43[2] = v49;
        swift_bridgeObjectRetain();
        uint64_t v2 = (void *)MEMORY[0x263F8EE78];
        do
        {
          sub_214B5EC30(v19, (uint64_t)v59);
          sub_214B5EC30((uint64_t)v59, (uint64_t)&v49);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v58 = 0;
            long long v56 = 0u;
            long long v57 = 0u;
            long long v55 = 0u;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
          if ((void)v56)
          {
            long long v49 = v55;
            long long v50 = v56;
            long long v51 = v57;
            uint64_t v52 = v58;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v2 = sub_214B87A6C(0, v2[2] + 1, 1, v2);
            }
            unint64_t v21 = v2[2];
            unint64_t v20 = v2[3];
            if (v21 >= v20 >> 1) {
              uint64_t v2 = sub_214B87A6C((void *)(v20 > 1), v21 + 1, 1, v2);
            }
            v2[2] = v21 + 1;
            uint64_t v22 = &v2[7 * v21];
            long long v23 = v49;
            long long v24 = v50;
            long long v25 = v51;
            v22[10] = v52;
            *((_OWORD *)v22 + 3) = v24;
            *((_OWORD *)v22 + 4) = v25;
            *((_OWORD *)v22 + 2) = v23;
          }
          else
          {
            sub_214B59CE0((uint64_t)&v55, &qword_26784D720);
          }
          v19 += 32;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease_n();
        unint64_t v10 = v45;
        uint64_t v12 = v44;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = (void *)MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = SecCertificateCopyExtensionValue();
      if (!v28
        || (uint64_t v29 = (void *)v28,
            long long v55 = v46,
            sub_214D19B58(),
            v29,
            unint64_t v30 = *((void *)&v55 + 1),
            *((void *)&v55 + 1) >> 60 == 15))
      {
        swift_bridgeObjectRelease();
        sub_214BE21D8();
        swift_allocError();
        *unint64_t v31 = 1;
        swift_willThrow();

        sub_214B59EAC(v12, v10);
LABEL_31:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v32 = v55;
      sub_214B6A3A0(v55, *((unint64_t *)&v55 + 1));
      uint64_t v33 = sub_214BE0CB4(v32, v30);
      sub_214B59EAC(v32, v30);
      uint64_t v34 = (2 * v33[2]) | 1;
      *(void *)&long long v49 = v33;
      *((void *)&v49 + 1) = v33 + 4;
      *(void *)&long long v50 = 0;
      *((void *)&v50 + 1) = v34;
      unint64_t v35 = sub_214BE13AC();
      sub_214B7BEB0((uint64_t *)&v49, v35, v36 & 1, v37, (unint64_t)&v55);
      sub_214BE222C(v35);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_214BE21D8();
        swift_allocError();
        *int v40 = 2;
        swift_willThrow();

        sub_214B59EAC(v32, v30);
        sub_214B59EAC(v44, v45);
        swift_unknownObjectRelease();
        goto LABEL_31;
      }
      *(void *)&long long v46 = v32;
      unint64_t v38 = v45;
      uint64_t v39 = v44;
      if (*(void *)(v59[0] + 16))
      {
        sub_214B5EC30(v59[0] + 32, (uint64_t)&v53);
      }
      else
      {
        long long v53 = 0u;
        long long v54 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v54 + 1))
      {
        if (swift_dynamicCast())
        {
          if ((void)v56)
          {
            sub_214B5EC30((uint64_t)&v56 + 8, (uint64_t)v59);
            sub_214BE2284((uint64_t)&v55);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39A8);
            if (swift_dynamicCast())
            {
              sub_214D1A098();
              sub_214BE217C();
              sub_214D1A068();
              sub_214B59EAC(v44, v45);
              sub_214B59EAC(v46, v30);
              swift_bridgeObjectRelease();

LABEL_42:
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              return v2;
            }
            uint64_t v41 = v44;
            unint64_t v42 = v45;
LABEL_41:
            sub_214B59EAC(v41, v42);
            sub_214B59EAC(v46, v30);

            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v58 = 0;
          long long v56 = 0u;
          long long v57 = 0u;
          long long v55 = 0u;
        }
      }
      else
      {
        sub_214B59CE0((uint64_t)&v53, (uint64_t *)&unk_26ACE44A0);
        long long v55 = 0u;
        long long v56 = 0u;
        long long v57 = 0u;
        uint64_t v58 = 0;
      }
      sub_214B59CE0((uint64_t)&v55, &qword_26784D740);
      uint64_t v41 = v39;
      unint64_t v42 = v38;
      goto LABEL_41;
    }
  }
  sub_214BE21D8();
  swift_allocError();
  unsigned char *v11 = 0;
  swift_willThrow();

  return v2;
}

uint64_t sub_214BE1CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v8 = *(void *)(a3 + 16);
  if (!v8)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v9 = a3 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_214BE20CC(v9, (uint64_t)&v14);
    BOOL v10 = *((void *)&v14 + 1) == a1 && (void)v15 == a2;
    if (v10 || (sub_214D1ABC8() & 1) != 0) {
      break;
    }
    sub_214BE2128((uint64_t)&v14);
    v9 += 56;
    if (!--v8) {
      goto LABEL_15;
    }
  }
  long long v18 = v14;
  long long v19 = v15;
  long long v20 = v16;
  uint64_t v21 = v17;
  swift_bridgeObjectRelease();
  if (!(void)v19)
  {
LABEL_16:
    sub_214B59CE0((uint64_t)&v18, &qword_26784D720);
    goto LABEL_17;
  }
  sub_214B5EC30((uint64_t)&v19 + 8, (uint64_t)v22);
  sub_214BE2128((uint64_t)&v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    long long v23 = 0u;
    long long v24 = 0u;
LABEL_18:
    sub_214B59CE0((uint64_t)&v23, (uint64_t *)&unk_26ACE44A0);
    return 0;
  }
  uint64_t v11 = *(void *)(v18 + 16);
  if (v11)
  {
    sub_214B5EC30(v18 + 32 * v11, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1)) {
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39A8);
  if (swift_dynamicCast())
  {
    sub_214D1A098();
    sub_214BE217C();
    uint64_t v12 = sub_214D1A068();
    swift_bridgeObjectRelease();
    return v12;
  }
  return 0;
}

uint64_t sub_214BE1F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v6 = a3 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_214BE20CC(v6, (uint64_t)&v10);
    BOOL v7 = *((void *)&v10 + 1) == a1 && (void)v11 == a2;
    if (v7 || (sub_214D1ABC8() & 1) != 0) {
      break;
    }
    sub_214BE2128((uint64_t)&v10);
    v6 += 56;
    if (!--v3) {
      goto LABEL_15;
    }
  }
  long long v14 = v10;
  long long v15 = v11;
  long long v16 = v12;
  uint64_t v17 = v13;
  swift_bridgeObjectRelease();
  if (!(void)v15)
  {
LABEL_16:
    sub_214B59CE0((uint64_t)&v14, &qword_26784D720);
    goto LABEL_17;
  }
  sub_214B5EC30((uint64_t)&v15 + 8, (uint64_t)v18);
  sub_214BE2128((uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_18:
    sub_214B59CE0((uint64_t)&v14, (uint64_t *)&unk_26ACE44A0);
    return 0;
  }
  uint64_t v8 = *(void *)(v14 + 16);
  if (v8)
  {
    sub_214B5EC30(v14 + 32 * v8, (uint64_t)&v14);
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1)) {
    goto LABEL_18;
  }
  if (swift_dynamicCast()) {
    return v10;
  }
  else {
    return 0;
  }
}

uint64_t sub_214BE20CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_214BE2128(uint64_t a1)
{
  return a1;
}

unint64_t sub_214BE217C()
{
  unint64_t result = qword_26784D730;
  if (!qword_26784D730)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE39A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D730);
  }
  return result;
}

unint64_t sub_214BE21D8()
{
  unint64_t result = qword_26784D738;
  if (!qword_26784D738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D738);
  }
  return result;
}

unint64_t sub_214BE222C(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      unint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214BE2284(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BE22D8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214BE2310()
{
  swift_bridgeObjectRelease();
  sub_214BE222C(*(void *)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_214BE2350()
{
  sub_214BE222C(*(void *)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 25, 7);
}

unsigned char *storeEnumTagSinglePayload for BAADeviceDataExtractor.BAADeviceDataExtractorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BE2454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BAADeviceDataExtractor.BAADeviceDataExtractorError()
{
  return &type metadata for BAADeviceDataExtractor.BAADeviceDataExtractorError;
}

unint64_t sub_214BE2490()
{
  unint64_t result = qword_26784D750;
  if (!qword_26784D750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D750);
  }
  return result;
}

uint64_t static ODIDeviceInfo.shared.getter()
{
  return MEMORY[0x270FA2498](sub_214BE2500, 0, 0);
}

uint64_t sub_214BE2500()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 16) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BE25A8, v1, 0);
}

uint64_t sub_214BE25A8()
{
  if (*(unsigned char *)(v0[2] + 168))
  {
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[3] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_214BE268C;
    uint64_t v4 = v0[2];
    v3[23] = v4;
    return MEMORY[0x270FA2498](sub_214BE3C7C, v4, 0);
  }
}

uint64_t sub_214BE268C()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  return v2(v3);
}

BOOL static ODIDeviceInfo.isDeviceLocked()()
{
  return MKBGetDeviceLockState() - 1 < 2;
}