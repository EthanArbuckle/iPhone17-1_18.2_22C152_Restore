unint64_t sub_214C7A768(__int16 a1)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = HIBYTE(a1);
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
  v3 = v1;
  if (v2 == 2)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    if ((v3 + 47) >= 9u)
    {
      v5 = -1;
      switch(v3)
      {
        case 1:
          v5 = -2;
          break;
        case 2:
          v5 = -3;
          break;
        case 3:
          v5 = -4;
          break;
        case 4:
          v5 = -5;
          break;
        case 5:
          v5 = -6;
          break;
        case 6:
          v5 = -7;
          break;
        case 7:
          v5 = -8;
          break;
        case 8:
          v5 = -9;
          break;
        case 9:
          v5 = -10;
          break;
        case 10:
          v5 = -11;
          break;
        case 11:
          v5 = -12;
          break;
        case 12:
          v5 = -13;
          break;
        case 13:
          v5 = -14;
          break;
        case 14:
          v5 = -15;
          break;
        case 15:
          v5 = -16;
          break;
        case 16:
          v5 = -17;
          break;
        case 17:
          v5 = -18;
          break;
        case 18:
          v5 = -19;
          break;
        case 19:
          v5 = -20;
          break;
        case 20:
          v5 = -21;
          break;
        case 21:
          v5 = -22;
          break;
        case 22:
          v5 = -28;
          break;
        case 23:
          v5 = -29;
          break;
        case 24:
          v5 = 200;
          break;
        case 25:
          v5 = 20000;
          break;
        case 26:
          v5 = 20001;
          break;
        case 27:
          v5 = 20100;
          break;
        case 28:
          v5 = 40000;
          break;
        case 29:
          v5 = 40010;
          break;
        case 30:
          v5 = 40011;
          break;
        case 31:
          v5 = 40012;
          break;
        case 32:
          v5 = 40013;
          break;
        case 33:
          v5 = 40014;
          break;
        case 34:
          v5 = 40015;
          break;
        case 35:
          v5 = 40020;
          break;
        case 36:
          v5 = 40021;
          break;
        case 37:
          v5 = 40022;
          break;
        case 38:
          v5 = 40023;
          break;
        case 39:
          v5 = 40024;
          break;
        case 40:
          v5 = 40025;
          break;
        case 41:
          v5 = 40026;
          break;
        case 42:
          v5 = 40027;
          break;
        case 43:
          v5 = 40028;
          break;
        case 44:
          v5 = 40029;
          break;
        case 45:
          v5 = 40030;
          break;
        case 46:
          v5 = 40101;
          break;
        case 47:
          v5 = 40102;
          break;
        case 48:
          v5 = 40200;
          break;
        case 49:
          v5 = 40201;
          break;
        case 50:
          v5 = 40205;
          break;
        case 51:
          v5 = 40401;
          break;
        case 52:
          v5 = 40402;
          break;
        case 53:
          v5 = 40403;
          break;
        case 54:
          v5 = 40404;
          break;
        case 55:
          v5 = 40500;
          break;
        case 56:
          v5 = 40600;
          break;
        case 57:
          v5 = 40601;
          break;
        case 58:
          v5 = 50000;
          break;
        case 59:
          v5 = 50001;
          break;
        case 60:
          v5 = 50002;
          break;
        case 61:
          v5 = 99991;
          break;
        case 62:
          v5 = 99992;
          break;
        case 63:
          v5 = 99993;
          break;
        case 64:
          v5 = -1101;
          break;
        case 65:
          v5 = -1102;
          break;
        case 66:
          v5 = -1103;
          break;
        case 67:
          v5 = -1104;
          break;
        case 68:
          v5 = -1110;
          break;
        case 69:
          v5 = -1111;
          break;
        case 70:
          v5 = -1112;
          break;
        case 71:
          v5 = -1113;
          break;
        case 72:
          v5 = -1114;
          break;
        case 73:
          v5 = -1115;
          break;
        case 74:
          v5 = -1116;
          break;
        case 75:
          v5 = -1117;
          break;
        case 76:
          v5 = -1118;
          break;
        case 77:
          v5 = -1119;
          break;
        case 78:
          v5 = -1201;
          break;
        case 79:
          v5 = -1202;
          break;
        case 80:
          v5 = -1203;
          break;
        case 81:
          v5 = -1204;
          break;
        case 82:
          v5 = -1402;
          break;
        case 83:
          v5 = -1403;
          break;
        case 84:
          v5 = -1404;
          break;
        case 85:
          v5 = -1301;
          break;
        case 86:
          v5 = -1302;
          break;
        case 87:
          v5 = -1303;
          break;
        case 88:
          v5 = -1304;
          break;
        case 89:
          v5 = -1305;
          break;
        case 90:
          v5 = -1306;
          break;
        case 91:
          v5 = -1307;
          break;
        case 92:
          v5 = -1308;
          break;
        case 93:
          v5 = -1309;
          break;
        case 94:
          v5 = -1310;
          break;
        case 95:
          v5 = -1315;
          break;
        case 96:
          v5 = -1316;
          break;
        case 97:
          v5 = -1317;
          break;
        case 98:
          v5 = -131600;
          break;
        case 99:
          v5 = -2103;
          break;
        case 100:
          v5 = -2104;
          break;
        case 101:
          v5 = -2107;
          break;
        case 102:
          v5 = -2110;
          break;
        case 103:
          v5 = -2111;
          break;
        case 104:
          v5 = -2112;
          break;
        case 105:
          v5 = -2123;
          break;
        case 106:
          v5 = -2124;
          break;
        case 107:
          v5 = -2125;
          break;
        case 108:
          v5 = -2126;
          break;
        case 109:
          v5 = -2127;
          break;
        case 110:
          v5 = -3101;
          break;
        case 111:
          v5 = -3102;
          break;
        case 112:
          v5 = -3103;
          break;
        case 113:
          v5 = -3104;
          break;
        case 114:
          v5 = -3105;
          break;
        case 115:
          v5 = -3106;
          break;
        case 116:
          v5 = -3107;
          break;
        case 117:
          v5 = -3108;
          break;
        case 118:
          v5 = -3109;
          break;
        case 119:
          v5 = -3110;
          break;
        case 120:
          v5 = -3111;
          break;
        case 121:
          v5 = -3112;
          break;
        case 122:
          v5 = -3113;
          break;
        case 123:
          v5 = -3151;
          break;
        case 124:
          v5 = -3152;
          break;
        case 125:
          v5 = -3153;
          break;
        case 126:
          v5 = -3154;
          break;
        case 127:
          v5 = -3155;
          break;
        case 128:
          v5 = -3156;
          break;
        case 129:
          v5 = -3157;
          break;
        case 130:
          v5 = -3158;
          break;
        case 131:
          v5 = -3159;
          break;
        case 132:
          v5 = -3161;
          break;
        case 133:
          v5 = -3162;
          break;
        case 134:
          v5 = -3163;
          break;
        case 135:
          v5 = -3164;
          break;
        case 136:
          v5 = -3165;
          break;
        case 137:
          v5 = -3166;
          break;
        case 138:
          v5 = -3167;
          break;
        case 139:
          v5 = -3168;
          break;
        case 140:
          v5 = -3169;
          break;
        case 141:
          v5 = -3170;
          break;
        case 142:
          v5 = -3171;
          break;
        case 143:
          v5 = -3172;
          break;
        case 144:
          v5 = -3173;
          break;
        case 145:
          v5 = -3174;
          break;
        case 146:
          v5 = -3175;
          break;
        case 147:
          v5 = -3176;
          break;
        case 148:
          v5 = -3177;
          break;
        case 149:
          v5 = -3178;
          break;
        case 150:
          v5 = -3179;
          break;
        case 151:
          v5 = -3180;
          break;
        case 152:
          v5 = -3181;
          break;
        case 153:
          v5 = -3182;
          break;
        case 154:
          v5 = -3183;
          break;
        case 155:
          v5 = -3184;
          break;
        case 156:
          v5 = -3185;
          break;
        case 157:
          v5 = -3186;
          break;
        case 158:
          v5 = -3187;
          break;
        case 159:
          v5 = -3188;
          break;
        case 160:
          v5 = -3189;
          break;
        case 161:
          v5 = -3300;
          break;
        case 162:
          v5 = -5108;
          break;
        case 163:
          v5 = -6009;
          break;
        case 164:
          v5 = -6010;
          break;
        case 165:
          v5 = -6102;
          break;
        case 166:
          v5 = -6103;
          break;
        case 167:
          v5 = -6104;
          break;
        case 168:
          v5 = -6105;
          break;
        case 169:
          v5 = -8001;
          break;
        case 170:
          v5 = -8301;
          break;
        case 171:
          v5 = -8304;
          break;
        case 172:
          v5 = -8400;
          break;
        case 173:
          v5 = -8401;
          break;
        case 174:
          v5 = -8403;
          break;
        case 175:
          v5 = -8404;
          break;
        case 176:
          v5 = -8428;
          break;
        case 177:
          v5 = -8429;
          break;
        case 178:
          v5 = -8433;
          break;
        case 179:
          v5 = -8434;
          break;
        case 180:
          v5 = -8500;
          break;
        case 181:
          v5 = -8501;
          break;
        case 182:
          v5 = -8502;
          break;
        case 183:
          v5 = -8503;
          break;
        case 184:
          v5 = -8504;
          break;
        case 185:
          v5 = -22200;
          break;
        case 186:
          v5 = -22201;
          break;
        case 187:
          v5 = -22202;
          break;
        case 188:
          v5 = -22203;
          break;
        case 189:
          v5 = -22204;
          break;
        case 190:
          v5 = -22205;
          break;
        case 191:
          v5 = -22206;
          break;
        case 192:
          v5 = -22207;
          break;
        case 193:
          v5 = -22208;
          break;
        case 194:
          v5 = -72200;
          break;
        case 195:
          v5 = -72201;
          break;
        case 196:
          v5 = -72202;
          break;
        case 197:
          v5 = -72203;
          break;
        case 198:
          v5 = -72204;
          break;
        case 199:
          v5 = -72205;
          break;
        case 200:
          v5 = -72206;
          break;
        case 201:
          v5 = -72207;
          break;
        case 202:
          v5 = -72208;
          break;
        case 203:
          v5 = -72209;
          break;
        case 204:
          v5 = -72210;
          break;
        case 205:
          v5 = -72211;
          break;
        case 206:
          v5 = -72780;
          break;
        case 207:
          v5 = -72781;
          break;
        case 208:
          v5 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      v5 = -(uint64_t)(v3 + 47);
    }
    v6 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v6;
    *(void *)(inited + 48) = v5;
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    v7 = MEMORY[0x263F8D4F8];
    *(void *)(inited + 32) = 0x65756C6176;
    *(void *)(inited + 40) = 0xE500000000000000;
    v8 = MEMORY[0x263F8D508];
    *(void *)(inited + 72) = v7;
    *(void *)(inited + 80) = v8;
    *(unsigned char *)(inited + 48) = v2 & 1;
    *(void *)(inited + 88) = 0x646F43726F727265;
    *(void *)(inited + 96) = 0xE900000000000065;
    if ((v3 + 47) >= 9u)
    {
      v9 = -1;
      switch(v3)
      {
        case 1:
          v9 = -2;
          break;
        case 2:
          v9 = -3;
          break;
        case 3:
          v9 = -4;
          break;
        case 4:
          v9 = -5;
          break;
        case 5:
          v9 = -6;
          break;
        case 6:
          v9 = -7;
          break;
        case 7:
          v9 = -8;
          break;
        case 8:
          v9 = -9;
          break;
        case 9:
          v9 = -10;
          break;
        case 10:
          v9 = -11;
          break;
        case 11:
          v9 = -12;
          break;
        case 12:
          v9 = -13;
          break;
        case 13:
          v9 = -14;
          break;
        case 14:
          v9 = -15;
          break;
        case 15:
          v9 = -16;
          break;
        case 16:
          v9 = -17;
          break;
        case 17:
          v9 = -18;
          break;
        case 18:
          v9 = -19;
          break;
        case 19:
          v9 = -20;
          break;
        case 20:
          v9 = -21;
          break;
        case 21:
          v9 = -22;
          break;
        case 22:
          v9 = -28;
          break;
        case 23:
          v9 = -29;
          break;
        case 24:
          v9 = 200;
          break;
        case 25:
          v9 = 20000;
          break;
        case 26:
          v9 = 20001;
          break;
        case 27:
          v9 = 20100;
          break;
        case 28:
          v9 = 40000;
          break;
        case 29:
          v9 = 40010;
          break;
        case 30:
          v9 = 40011;
          break;
        case 31:
          v9 = 40012;
          break;
        case 32:
          v9 = 40013;
          break;
        case 33:
          v9 = 40014;
          break;
        case 34:
          v9 = 40015;
          break;
        case 35:
          v9 = 40020;
          break;
        case 36:
          v9 = 40021;
          break;
        case 37:
          v9 = 40022;
          break;
        case 38:
          v9 = 40023;
          break;
        case 39:
          v9 = 40024;
          break;
        case 40:
          v9 = 40025;
          break;
        case 41:
          v9 = 40026;
          break;
        case 42:
          v9 = 40027;
          break;
        case 43:
          v9 = 40028;
          break;
        case 44:
          v9 = 40029;
          break;
        case 45:
          v9 = 40030;
          break;
        case 46:
          v9 = 40101;
          break;
        case 47:
          v9 = 40102;
          break;
        case 48:
          v9 = 40200;
          break;
        case 49:
          v9 = 40201;
          break;
        case 50:
          v9 = 40205;
          break;
        case 51:
          v9 = 40401;
          break;
        case 52:
          v9 = 40402;
          break;
        case 53:
          v9 = 40403;
          break;
        case 54:
          v9 = 40404;
          break;
        case 55:
          v9 = 40500;
          break;
        case 56:
          v9 = 40600;
          break;
        case 57:
          v9 = 40601;
          break;
        case 58:
          v9 = 50000;
          break;
        case 59:
          v9 = 50001;
          break;
        case 60:
          v9 = 50002;
          break;
        case 61:
          v9 = 99991;
          break;
        case 62:
          v9 = 99992;
          break;
        case 63:
          v9 = 99993;
          break;
        case 64:
          v9 = -1101;
          break;
        case 65:
          v9 = -1102;
          break;
        case 66:
          v9 = -1103;
          break;
        case 67:
          v9 = -1104;
          break;
        case 68:
          v9 = -1110;
          break;
        case 69:
          v9 = -1111;
          break;
        case 70:
          v9 = -1112;
          break;
        case 71:
          v9 = -1113;
          break;
        case 72:
          v9 = -1114;
          break;
        case 73:
          v9 = -1115;
          break;
        case 74:
          v9 = -1116;
          break;
        case 75:
          v9 = -1117;
          break;
        case 76:
          v9 = -1118;
          break;
        case 77:
          v9 = -1119;
          break;
        case 78:
          v9 = -1201;
          break;
        case 79:
          v9 = -1202;
          break;
        case 80:
          v9 = -1203;
          break;
        case 81:
          v9 = -1204;
          break;
        case 82:
          v9 = -1402;
          break;
        case 83:
          v9 = -1403;
          break;
        case 84:
          v9 = -1404;
          break;
        case 85:
          v9 = -1301;
          break;
        case 86:
          v9 = -1302;
          break;
        case 87:
          v9 = -1303;
          break;
        case 88:
          v9 = -1304;
          break;
        case 89:
          v9 = -1305;
          break;
        case 90:
          v9 = -1306;
          break;
        case 91:
          v9 = -1307;
          break;
        case 92:
          v9 = -1308;
          break;
        case 93:
          v9 = -1309;
          break;
        case 94:
          v9 = -1310;
          break;
        case 95:
          v9 = -1315;
          break;
        case 96:
          v9 = -1316;
          break;
        case 97:
          v9 = -1317;
          break;
        case 98:
          v9 = -131600;
          break;
        case 99:
          v9 = -2103;
          break;
        case 100:
          v9 = -2104;
          break;
        case 101:
          v9 = -2107;
          break;
        case 102:
          v9 = -2110;
          break;
        case 103:
          v9 = -2111;
          break;
        case 104:
          v9 = -2112;
          break;
        case 105:
          v9 = -2123;
          break;
        case 106:
          v9 = -2124;
          break;
        case 107:
          v9 = -2125;
          break;
        case 108:
          v9 = -2126;
          break;
        case 109:
          v9 = -2127;
          break;
        case 110:
          v9 = -3101;
          break;
        case 111:
          v9 = -3102;
          break;
        case 112:
          v9 = -3103;
          break;
        case 113:
          v9 = -3104;
          break;
        case 114:
          v9 = -3105;
          break;
        case 115:
          v9 = -3106;
          break;
        case 116:
          v9 = -3107;
          break;
        case 117:
          v9 = -3108;
          break;
        case 118:
          v9 = -3109;
          break;
        case 119:
          v9 = -3110;
          break;
        case 120:
          v9 = -3111;
          break;
        case 121:
          v9 = -3112;
          break;
        case 122:
          v9 = -3113;
          break;
        case 123:
          v9 = -3151;
          break;
        case 124:
          v9 = -3152;
          break;
        case 125:
          v9 = -3153;
          break;
        case 126:
          v9 = -3154;
          break;
        case 127:
          v9 = -3155;
          break;
        case 128:
          v9 = -3156;
          break;
        case 129:
          v9 = -3157;
          break;
        case 130:
          v9 = -3158;
          break;
        case 131:
          v9 = -3159;
          break;
        case 132:
          v9 = -3161;
          break;
        case 133:
          v9 = -3162;
          break;
        case 134:
          v9 = -3163;
          break;
        case 135:
          v9 = -3164;
          break;
        case 136:
          v9 = -3165;
          break;
        case 137:
          v9 = -3166;
          break;
        case 138:
          v9 = -3167;
          break;
        case 139:
          v9 = -3168;
          break;
        case 140:
          v9 = -3169;
          break;
        case 141:
          v9 = -3170;
          break;
        case 142:
          v9 = -3171;
          break;
        case 143:
          v9 = -3172;
          break;
        case 144:
          v9 = -3173;
          break;
        case 145:
          v9 = -3174;
          break;
        case 146:
          v9 = -3175;
          break;
        case 147:
          v9 = -3176;
          break;
        case 148:
          v9 = -3177;
          break;
        case 149:
          v9 = -3178;
          break;
        case 150:
          v9 = -3179;
          break;
        case 151:
          v9 = -3180;
          break;
        case 152:
          v9 = -3181;
          break;
        case 153:
          v9 = -3182;
          break;
        case 154:
          v9 = -3183;
          break;
        case 155:
          v9 = -3184;
          break;
        case 156:
          v9 = -3185;
          break;
        case 157:
          v9 = -3186;
          break;
        case 158:
          v9 = -3187;
          break;
        case 159:
          v9 = -3188;
          break;
        case 160:
          v9 = -3189;
          break;
        case 161:
          v9 = -3300;
          break;
        case 162:
          v9 = -5108;
          break;
        case 163:
          v9 = -6009;
          break;
        case 164:
          v9 = -6010;
          break;
        case 165:
          v9 = -6102;
          break;
        case 166:
          v9 = -6103;
          break;
        case 167:
          v9 = -6104;
          break;
        case 168:
          v9 = -6105;
          break;
        case 169:
          v9 = -8001;
          break;
        case 170:
          v9 = -8301;
          break;
        case 171:
          v9 = -8304;
          break;
        case 172:
          v9 = -8400;
          break;
        case 173:
          v9 = -8401;
          break;
        case 174:
          v9 = -8403;
          break;
        case 175:
          v9 = -8404;
          break;
        case 176:
          v9 = -8428;
          break;
        case 177:
          v9 = -8429;
          break;
        case 178:
          v9 = -8433;
          break;
        case 179:
          v9 = -8434;
          break;
        case 180:
          v9 = -8500;
          break;
        case 181:
          v9 = -8501;
          break;
        case 182:
          v9 = -8502;
          break;
        case 183:
          v9 = -8503;
          break;
        case 184:
          v9 = -8504;
          break;
        case 185:
          v9 = -22200;
          break;
        case 186:
          v9 = -22201;
          break;
        case 187:
          v9 = -22202;
          break;
        case 188:
          v9 = -22203;
          break;
        case 189:
          v9 = -22204;
          break;
        case 190:
          v9 = -22205;
          break;
        case 191:
          v9 = -22206;
          break;
        case 192:
          v9 = -22207;
          break;
        case 193:
          v9 = -22208;
          break;
        case 194:
          v9 = -72200;
          break;
        case 195:
          v9 = -72201;
          break;
        case 196:
          v9 = -72202;
          break;
        case 197:
          v9 = -72203;
          break;
        case 198:
          v9 = -72204;
          break;
        case 199:
          v9 = -72205;
          break;
        case 200:
          v9 = -72206;
          break;
        case 201:
          v9 = -72207;
          break;
        case 202:
          v9 = -72208;
          break;
        case 203:
          v9 = -72209;
          break;
        case 204:
          v9 = -72210;
          break;
        case 205:
          v9 = -72211;
          break;
        case 206:
          v9 = -72780;
          break;
        case 207:
          v9 = -72781;
          break;
        case 208:
          v9 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      v9 = -(uint64_t)(v3 + 47);
    }
    v10 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 128) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 136) = v10;
    *(void *)(inited + 104) = v9;
  }
  return sub_214B7E450(inited);
}

unint64_t sub_214C7BD8C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
  if (a2)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    if ((HIBYTE(a2) + 47) >= 9u)
    {
      uint64_t v11 = -1;
      switch(HIBYTE(a2))
      {
        case 1:
          uint64_t v11 = -2;
          break;
        case 2:
          uint64_t v11 = -3;
          break;
        case 3:
          uint64_t v11 = -4;
          break;
        case 4:
          uint64_t v11 = -5;
          break;
        case 5:
          uint64_t v11 = -6;
          break;
        case 6:
          uint64_t v11 = -7;
          break;
        case 7:
          uint64_t v11 = -8;
          break;
        case 8:
          uint64_t v11 = -9;
          break;
        case 9:
          uint64_t v11 = -10;
          break;
        case 0xA:
          uint64_t v11 = -11;
          break;
        case 0xB:
          uint64_t v11 = -12;
          break;
        case 0xC:
          uint64_t v11 = -13;
          break;
        case 0xD:
          uint64_t v11 = -14;
          break;
        case 0xE:
          uint64_t v11 = -15;
          break;
        case 0xF:
          uint64_t v11 = -16;
          break;
        case 0x10:
          uint64_t v11 = -17;
          break;
        case 0x11:
          uint64_t v11 = -18;
          break;
        case 0x12:
          uint64_t v11 = -19;
          break;
        case 0x13:
          uint64_t v11 = -20;
          break;
        case 0x14:
          uint64_t v11 = -21;
          break;
        case 0x15:
          uint64_t v11 = -22;
          break;
        case 0x16:
          uint64_t v11 = -28;
          break;
        case 0x17:
          uint64_t v11 = -29;
          break;
        case 0x18:
          uint64_t v11 = 200;
          break;
        case 0x19:
          uint64_t v11 = 20000;
          break;
        case 0x1A:
          uint64_t v11 = 20001;
          break;
        case 0x1B:
          uint64_t v11 = 20100;
          break;
        case 0x1C:
          uint64_t v11 = 40000;
          break;
        case 0x1D:
          uint64_t v11 = 40010;
          break;
        case 0x1E:
          uint64_t v11 = 40011;
          break;
        case 0x1F:
          uint64_t v11 = 40012;
          break;
        case 0x20:
          uint64_t v11 = 40013;
          break;
        case 0x21:
          uint64_t v11 = 40014;
          break;
        case 0x22:
          uint64_t v11 = 40015;
          break;
        case 0x23:
          uint64_t v11 = 40020;
          break;
        case 0x24:
          uint64_t v11 = 40021;
          break;
        case 0x25:
          uint64_t v11 = 40022;
          break;
        case 0x26:
          uint64_t v11 = 40023;
          break;
        case 0x27:
          uint64_t v11 = 40024;
          break;
        case 0x28:
          uint64_t v11 = 40025;
          break;
        case 0x29:
          uint64_t v11 = 40026;
          break;
        case 0x2A:
          uint64_t v11 = 40027;
          break;
        case 0x2B:
          uint64_t v11 = 40028;
          break;
        case 0x2C:
          uint64_t v11 = 40029;
          break;
        case 0x2D:
          uint64_t v11 = 40030;
          break;
        case 0x2E:
          uint64_t v11 = 40101;
          break;
        case 0x2F:
          uint64_t v11 = 40102;
          break;
        case 0x30:
          uint64_t v11 = 40200;
          break;
        case 0x31:
          uint64_t v11 = 40201;
          break;
        case 0x32:
          uint64_t v11 = 40205;
          break;
        case 0x33:
          uint64_t v11 = 40401;
          break;
        case 0x34:
          uint64_t v11 = 40402;
          break;
        case 0x35:
          uint64_t v11 = 40403;
          break;
        case 0x36:
          uint64_t v11 = 40404;
          break;
        case 0x37:
          uint64_t v11 = 40500;
          break;
        case 0x38:
          uint64_t v11 = 40600;
          break;
        case 0x39:
          uint64_t v11 = 40601;
          break;
        case 0x3A:
          uint64_t v11 = 50000;
          break;
        case 0x3B:
          uint64_t v11 = 50001;
          break;
        case 0x3C:
          uint64_t v11 = 50002;
          break;
        case 0x3D:
          uint64_t v11 = 99991;
          break;
        case 0x3E:
          uint64_t v11 = 99992;
          break;
        case 0x3F:
          uint64_t v11 = 99993;
          break;
        case 0x40:
          uint64_t v11 = -1101;
          break;
        case 0x41:
          uint64_t v11 = -1102;
          break;
        case 0x42:
          uint64_t v11 = -1103;
          break;
        case 0x43:
          uint64_t v11 = -1104;
          break;
        case 0x44:
          uint64_t v11 = -1110;
          break;
        case 0x45:
          uint64_t v11 = -1111;
          break;
        case 0x46:
          uint64_t v11 = -1112;
          break;
        case 0x47:
          uint64_t v11 = -1113;
          break;
        case 0x48:
          uint64_t v11 = -1114;
          break;
        case 0x49:
          uint64_t v11 = -1115;
          break;
        case 0x4A:
          uint64_t v11 = -1116;
          break;
        case 0x4B:
          uint64_t v11 = -1117;
          break;
        case 0x4C:
          uint64_t v11 = -1118;
          break;
        case 0x4D:
          uint64_t v11 = -1119;
          break;
        case 0x4E:
          uint64_t v11 = -1201;
          break;
        case 0x4F:
          uint64_t v11 = -1202;
          break;
        case 0x50:
          uint64_t v11 = -1203;
          break;
        case 0x51:
          uint64_t v11 = -1204;
          break;
        case 0x52:
          uint64_t v11 = -1402;
          break;
        case 0x53:
          uint64_t v11 = -1403;
          break;
        case 0x54:
          uint64_t v11 = -1404;
          break;
        case 0x55:
          uint64_t v11 = -1301;
          break;
        case 0x56:
          uint64_t v11 = -1302;
          break;
        case 0x57:
          uint64_t v11 = -1303;
          break;
        case 0x58:
          uint64_t v11 = -1304;
          break;
        case 0x59:
          uint64_t v11 = -1305;
          break;
        case 0x5A:
          uint64_t v11 = -1306;
          break;
        case 0x5B:
          uint64_t v11 = -1307;
          break;
        case 0x5C:
          uint64_t v11 = -1308;
          break;
        case 0x5D:
          uint64_t v11 = -1309;
          break;
        case 0x5E:
          uint64_t v11 = -1310;
          break;
        case 0x5F:
          uint64_t v11 = -1315;
          break;
        case 0x60:
          uint64_t v11 = -1316;
          break;
        case 0x61:
          uint64_t v11 = -1317;
          break;
        case 0x62:
          uint64_t v11 = -131600;
          break;
        case 0x63:
          uint64_t v11 = -2103;
          break;
        case 0x64:
          uint64_t v11 = -2104;
          break;
        case 0x65:
          uint64_t v11 = -2107;
          break;
        case 0x66:
          uint64_t v11 = -2110;
          break;
        case 0x67:
          uint64_t v11 = -2111;
          break;
        case 0x68:
          uint64_t v11 = -2112;
          break;
        case 0x69:
          uint64_t v11 = -2123;
          break;
        case 0x6A:
          uint64_t v11 = -2124;
          break;
        case 0x6B:
          uint64_t v11 = -2125;
          break;
        case 0x6C:
          uint64_t v11 = -2126;
          break;
        case 0x6D:
          uint64_t v11 = -2127;
          break;
        case 0x6E:
          uint64_t v11 = -3101;
          break;
        case 0x6F:
          uint64_t v11 = -3102;
          break;
        case 0x70:
          uint64_t v11 = -3103;
          break;
        case 0x71:
          uint64_t v11 = -3104;
          break;
        case 0x72:
          uint64_t v11 = -3105;
          break;
        case 0x73:
          uint64_t v11 = -3106;
          break;
        case 0x74:
          uint64_t v11 = -3107;
          break;
        case 0x75:
          uint64_t v11 = -3108;
          break;
        case 0x76:
          uint64_t v11 = -3109;
          break;
        case 0x77:
          uint64_t v11 = -3110;
          break;
        case 0x78:
          uint64_t v11 = -3111;
          break;
        case 0x79:
          uint64_t v11 = -3112;
          break;
        case 0x7A:
          uint64_t v11 = -3113;
          break;
        case 0x7B:
          uint64_t v11 = -3151;
          break;
        case 0x7C:
          uint64_t v11 = -3152;
          break;
        case 0x7D:
          uint64_t v11 = -3153;
          break;
        case 0x7E:
          uint64_t v11 = -3154;
          break;
        case 0x7F:
          uint64_t v11 = -3155;
          break;
        case 0x80:
          uint64_t v11 = -3156;
          break;
        case 0x81:
          uint64_t v11 = -3157;
          break;
        case 0x82:
          uint64_t v11 = -3158;
          break;
        case 0x83:
          uint64_t v11 = -3159;
          break;
        case 0x84:
          uint64_t v11 = -3161;
          break;
        case 0x85:
          uint64_t v11 = -3162;
          break;
        case 0x86:
          uint64_t v11 = -3163;
          break;
        case 0x87:
          uint64_t v11 = -3164;
          break;
        case 0x88:
          uint64_t v11 = -3165;
          break;
        case 0x89:
          uint64_t v11 = -3166;
          break;
        case 0x8A:
          uint64_t v11 = -3167;
          break;
        case 0x8B:
          uint64_t v11 = -3168;
          break;
        case 0x8C:
          uint64_t v11 = -3169;
          break;
        case 0x8D:
          uint64_t v11 = -3170;
          break;
        case 0x8E:
          uint64_t v11 = -3171;
          break;
        case 0x8F:
          uint64_t v11 = -3172;
          break;
        case 0x90:
          uint64_t v11 = -3173;
          break;
        case 0x91:
          uint64_t v11 = -3174;
          break;
        case 0x92:
          uint64_t v11 = -3175;
          break;
        case 0x93:
          uint64_t v11 = -3176;
          break;
        case 0x94:
          uint64_t v11 = -3177;
          break;
        case 0x95:
          uint64_t v11 = -3178;
          break;
        case 0x96:
          uint64_t v11 = -3179;
          break;
        case 0x97:
          uint64_t v11 = -3180;
          break;
        case 0x98:
          uint64_t v11 = -3181;
          break;
        case 0x99:
          uint64_t v11 = -3182;
          break;
        case 0x9A:
          uint64_t v11 = -3183;
          break;
        case 0x9B:
          uint64_t v11 = -3184;
          break;
        case 0x9C:
          uint64_t v11 = -3185;
          break;
        case 0x9D:
          uint64_t v11 = -3186;
          break;
        case 0x9E:
          uint64_t v11 = -3187;
          break;
        case 0x9F:
          uint64_t v11 = -3188;
          break;
        case 0xA0:
          uint64_t v11 = -3189;
          break;
        case 0xA1:
          uint64_t v11 = -3300;
          break;
        case 0xA2:
          uint64_t v11 = -5108;
          break;
        case 0xA3:
          uint64_t v11 = -6009;
          break;
        case 0xA4:
          uint64_t v11 = -6010;
          break;
        case 0xA5:
          uint64_t v11 = -6102;
          break;
        case 0xA6:
          uint64_t v11 = -6103;
          break;
        case 0xA7:
          uint64_t v11 = -6104;
          break;
        case 0xA8:
          uint64_t v11 = -6105;
          break;
        case 0xA9:
          uint64_t v11 = -8001;
          break;
        case 0xAA:
          uint64_t v11 = -8301;
          break;
        case 0xAB:
          uint64_t v11 = -8304;
          break;
        case 0xAC:
          uint64_t v11 = -8400;
          break;
        case 0xAD:
          uint64_t v11 = -8401;
          break;
        case 0xAE:
          uint64_t v11 = -8403;
          break;
        case 0xAF:
          uint64_t v11 = -8404;
          break;
        case 0xB0:
          uint64_t v11 = -8428;
          break;
        case 0xB1:
          uint64_t v11 = -8429;
          break;
        case 0xB2:
          uint64_t v11 = -8433;
          break;
        case 0xB3:
          uint64_t v11 = -8434;
          break;
        case 0xB4:
          uint64_t v11 = -8500;
          break;
        case 0xB5:
          uint64_t v11 = -8501;
          break;
        case 0xB6:
          uint64_t v11 = -8502;
          break;
        case 0xB7:
          uint64_t v11 = -8503;
          break;
        case 0xB8:
          uint64_t v11 = -8504;
          break;
        case 0xB9:
          uint64_t v11 = -22200;
          break;
        case 0xBA:
          uint64_t v11 = -22201;
          break;
        case 0xBB:
          uint64_t v11 = -22202;
          break;
        case 0xBC:
          uint64_t v11 = -22203;
          break;
        case 0xBD:
          uint64_t v11 = -22204;
          break;
        case 0xBE:
          uint64_t v11 = -22205;
          break;
        case 0xBF:
          uint64_t v11 = -22206;
          break;
        case 0xC0:
          uint64_t v11 = -22207;
          break;
        case 0xC1:
          uint64_t v11 = -22208;
          break;
        case 0xC2:
          uint64_t v11 = -72200;
          break;
        case 0xC3:
          uint64_t v11 = -72201;
          break;
        case 0xC4:
          uint64_t v11 = -72202;
          break;
        case 0xC5:
          uint64_t v11 = -72203;
          break;
        case 0xC6:
          uint64_t v11 = -72204;
          break;
        case 0xC7:
          uint64_t v11 = -72205;
          break;
        case 0xC8:
          uint64_t v11 = -72206;
          break;
        case 0xC9:
          uint64_t v11 = -72207;
          break;
        case 0xCA:
          uint64_t v11 = -72208;
          break;
        case 0xCB:
          uint64_t v11 = -72209;
          break;
        case 0xCC:
          uint64_t v11 = -72210;
          break;
        case 0xCD:
          uint64_t v11 = -72211;
          break;
        case 0xCE:
          uint64_t v11 = -72780;
          break;
        case 0xCF:
          uint64_t v11 = -72781;
          break;
        case 0xD0:
          uint64_t v11 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v11 = -(uint64_t)(HIBYTE(a2) + 47);
    }
    uint64_t v12 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v12;
    *(void *)(inited + 48) = v11;
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    *(void *)(inited + 32) = 0x65756C6176;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 72) = a3;
    *(void *)(inited + 80) = a4;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 88) = 0x646F43726F727265;
    *(void *)(inited + 96) = 0xE900000000000065;
    if ((HIBYTE(a2) + 47) >= 9u)
    {
      uint64_t v9 = -1;
      switch(HIBYTE(a2))
      {
        case 1:
          uint64_t v9 = -2;
          break;
        case 2:
          uint64_t v9 = -3;
          break;
        case 3:
          uint64_t v9 = -4;
          break;
        case 4:
          uint64_t v9 = -5;
          break;
        case 5:
          uint64_t v9 = -6;
          break;
        case 6:
          uint64_t v9 = -7;
          break;
        case 7:
          uint64_t v9 = -8;
          break;
        case 8:
          uint64_t v9 = -9;
          break;
        case 9:
          uint64_t v9 = -10;
          break;
        case 0xA:
          uint64_t v9 = -11;
          break;
        case 0xB:
          uint64_t v9 = -12;
          break;
        case 0xC:
          uint64_t v9 = -13;
          break;
        case 0xD:
          uint64_t v9 = -14;
          break;
        case 0xE:
          uint64_t v9 = -15;
          break;
        case 0xF:
          uint64_t v9 = -16;
          break;
        case 0x10:
          uint64_t v9 = -17;
          break;
        case 0x11:
          uint64_t v9 = -18;
          break;
        case 0x12:
          uint64_t v9 = -19;
          break;
        case 0x13:
          uint64_t v9 = -20;
          break;
        case 0x14:
          uint64_t v9 = -21;
          break;
        case 0x15:
          uint64_t v9 = -22;
          break;
        case 0x16:
          uint64_t v9 = -28;
          break;
        case 0x17:
          uint64_t v9 = -29;
          break;
        case 0x18:
          uint64_t v9 = 200;
          break;
        case 0x19:
          uint64_t v9 = 20000;
          break;
        case 0x1A:
          uint64_t v9 = 20001;
          break;
        case 0x1B:
          uint64_t v9 = 20100;
          break;
        case 0x1C:
          uint64_t v9 = 40000;
          break;
        case 0x1D:
          uint64_t v9 = 40010;
          break;
        case 0x1E:
          uint64_t v9 = 40011;
          break;
        case 0x1F:
          uint64_t v9 = 40012;
          break;
        case 0x20:
          uint64_t v9 = 40013;
          break;
        case 0x21:
          uint64_t v9 = 40014;
          break;
        case 0x22:
          uint64_t v9 = 40015;
          break;
        case 0x23:
          uint64_t v9 = 40020;
          break;
        case 0x24:
          uint64_t v9 = 40021;
          break;
        case 0x25:
          uint64_t v9 = 40022;
          break;
        case 0x26:
          uint64_t v9 = 40023;
          break;
        case 0x27:
          uint64_t v9 = 40024;
          break;
        case 0x28:
          uint64_t v9 = 40025;
          break;
        case 0x29:
          uint64_t v9 = 40026;
          break;
        case 0x2A:
          uint64_t v9 = 40027;
          break;
        case 0x2B:
          uint64_t v9 = 40028;
          break;
        case 0x2C:
          uint64_t v9 = 40029;
          break;
        case 0x2D:
          uint64_t v9 = 40030;
          break;
        case 0x2E:
          uint64_t v9 = 40101;
          break;
        case 0x2F:
          uint64_t v9 = 40102;
          break;
        case 0x30:
          uint64_t v9 = 40200;
          break;
        case 0x31:
          uint64_t v9 = 40201;
          break;
        case 0x32:
          uint64_t v9 = 40205;
          break;
        case 0x33:
          uint64_t v9 = 40401;
          break;
        case 0x34:
          uint64_t v9 = 40402;
          break;
        case 0x35:
          uint64_t v9 = 40403;
          break;
        case 0x36:
          uint64_t v9 = 40404;
          break;
        case 0x37:
          uint64_t v9 = 40500;
          break;
        case 0x38:
          uint64_t v9 = 40600;
          break;
        case 0x39:
          uint64_t v9 = 40601;
          break;
        case 0x3A:
          uint64_t v9 = 50000;
          break;
        case 0x3B:
          uint64_t v9 = 50001;
          break;
        case 0x3C:
          uint64_t v9 = 50002;
          break;
        case 0x3D:
          uint64_t v9 = 99991;
          break;
        case 0x3E:
          uint64_t v9 = 99992;
          break;
        case 0x3F:
          uint64_t v9 = 99993;
          break;
        case 0x40:
          uint64_t v9 = -1101;
          break;
        case 0x41:
          uint64_t v9 = -1102;
          break;
        case 0x42:
          uint64_t v9 = -1103;
          break;
        case 0x43:
          uint64_t v9 = -1104;
          break;
        case 0x44:
          uint64_t v9 = -1110;
          break;
        case 0x45:
          uint64_t v9 = -1111;
          break;
        case 0x46:
          uint64_t v9 = -1112;
          break;
        case 0x47:
          uint64_t v9 = -1113;
          break;
        case 0x48:
          uint64_t v9 = -1114;
          break;
        case 0x49:
          uint64_t v9 = -1115;
          break;
        case 0x4A:
          uint64_t v9 = -1116;
          break;
        case 0x4B:
          uint64_t v9 = -1117;
          break;
        case 0x4C:
          uint64_t v9 = -1118;
          break;
        case 0x4D:
          uint64_t v9 = -1119;
          break;
        case 0x4E:
          uint64_t v9 = -1201;
          break;
        case 0x4F:
          uint64_t v9 = -1202;
          break;
        case 0x50:
          uint64_t v9 = -1203;
          break;
        case 0x51:
          uint64_t v9 = -1204;
          break;
        case 0x52:
          uint64_t v9 = -1402;
          break;
        case 0x53:
          uint64_t v9 = -1403;
          break;
        case 0x54:
          uint64_t v9 = -1404;
          break;
        case 0x55:
          uint64_t v9 = -1301;
          break;
        case 0x56:
          uint64_t v9 = -1302;
          break;
        case 0x57:
          uint64_t v9 = -1303;
          break;
        case 0x58:
          uint64_t v9 = -1304;
          break;
        case 0x59:
          uint64_t v9 = -1305;
          break;
        case 0x5A:
          uint64_t v9 = -1306;
          break;
        case 0x5B:
          uint64_t v9 = -1307;
          break;
        case 0x5C:
          uint64_t v9 = -1308;
          break;
        case 0x5D:
          uint64_t v9 = -1309;
          break;
        case 0x5E:
          uint64_t v9 = -1310;
          break;
        case 0x5F:
          uint64_t v9 = -1315;
          break;
        case 0x60:
          uint64_t v9 = -1316;
          break;
        case 0x61:
          uint64_t v9 = -1317;
          break;
        case 0x62:
          uint64_t v9 = -131600;
          break;
        case 0x63:
          uint64_t v9 = -2103;
          break;
        case 0x64:
          uint64_t v9 = -2104;
          break;
        case 0x65:
          uint64_t v9 = -2107;
          break;
        case 0x66:
          uint64_t v9 = -2110;
          break;
        case 0x67:
          uint64_t v9 = -2111;
          break;
        case 0x68:
          uint64_t v9 = -2112;
          break;
        case 0x69:
          uint64_t v9 = -2123;
          break;
        case 0x6A:
          uint64_t v9 = -2124;
          break;
        case 0x6B:
          uint64_t v9 = -2125;
          break;
        case 0x6C:
          uint64_t v9 = -2126;
          break;
        case 0x6D:
          uint64_t v9 = -2127;
          break;
        case 0x6E:
          uint64_t v9 = -3101;
          break;
        case 0x6F:
          uint64_t v9 = -3102;
          break;
        case 0x70:
          uint64_t v9 = -3103;
          break;
        case 0x71:
          uint64_t v9 = -3104;
          break;
        case 0x72:
          uint64_t v9 = -3105;
          break;
        case 0x73:
          uint64_t v9 = -3106;
          break;
        case 0x74:
          uint64_t v9 = -3107;
          break;
        case 0x75:
          uint64_t v9 = -3108;
          break;
        case 0x76:
          uint64_t v9 = -3109;
          break;
        case 0x77:
          uint64_t v9 = -3110;
          break;
        case 0x78:
          uint64_t v9 = -3111;
          break;
        case 0x79:
          uint64_t v9 = -3112;
          break;
        case 0x7A:
          uint64_t v9 = -3113;
          break;
        case 0x7B:
          uint64_t v9 = -3151;
          break;
        case 0x7C:
          uint64_t v9 = -3152;
          break;
        case 0x7D:
          uint64_t v9 = -3153;
          break;
        case 0x7E:
          uint64_t v9 = -3154;
          break;
        case 0x7F:
          uint64_t v9 = -3155;
          break;
        case 0x80:
          uint64_t v9 = -3156;
          break;
        case 0x81:
          uint64_t v9 = -3157;
          break;
        case 0x82:
          uint64_t v9 = -3158;
          break;
        case 0x83:
          uint64_t v9 = -3159;
          break;
        case 0x84:
          uint64_t v9 = -3161;
          break;
        case 0x85:
          uint64_t v9 = -3162;
          break;
        case 0x86:
          uint64_t v9 = -3163;
          break;
        case 0x87:
          uint64_t v9 = -3164;
          break;
        case 0x88:
          uint64_t v9 = -3165;
          break;
        case 0x89:
          uint64_t v9 = -3166;
          break;
        case 0x8A:
          uint64_t v9 = -3167;
          break;
        case 0x8B:
          uint64_t v9 = -3168;
          break;
        case 0x8C:
          uint64_t v9 = -3169;
          break;
        case 0x8D:
          uint64_t v9 = -3170;
          break;
        case 0x8E:
          uint64_t v9 = -3171;
          break;
        case 0x8F:
          uint64_t v9 = -3172;
          break;
        case 0x90:
          uint64_t v9 = -3173;
          break;
        case 0x91:
          uint64_t v9 = -3174;
          break;
        case 0x92:
          uint64_t v9 = -3175;
          break;
        case 0x93:
          uint64_t v9 = -3176;
          break;
        case 0x94:
          uint64_t v9 = -3177;
          break;
        case 0x95:
          uint64_t v9 = -3178;
          break;
        case 0x96:
          uint64_t v9 = -3179;
          break;
        case 0x97:
          uint64_t v9 = -3180;
          break;
        case 0x98:
          uint64_t v9 = -3181;
          break;
        case 0x99:
          uint64_t v9 = -3182;
          break;
        case 0x9A:
          uint64_t v9 = -3183;
          break;
        case 0x9B:
          uint64_t v9 = -3184;
          break;
        case 0x9C:
          uint64_t v9 = -3185;
          break;
        case 0x9D:
          uint64_t v9 = -3186;
          break;
        case 0x9E:
          uint64_t v9 = -3187;
          break;
        case 0x9F:
          uint64_t v9 = -3188;
          break;
        case 0xA0:
          uint64_t v9 = -3189;
          break;
        case 0xA1:
          uint64_t v9 = -3300;
          break;
        case 0xA2:
          uint64_t v9 = -5108;
          break;
        case 0xA3:
          uint64_t v9 = -6009;
          break;
        case 0xA4:
          uint64_t v9 = -6010;
          break;
        case 0xA5:
          uint64_t v9 = -6102;
          break;
        case 0xA6:
          uint64_t v9 = -6103;
          break;
        case 0xA7:
          uint64_t v9 = -6104;
          break;
        case 0xA8:
          uint64_t v9 = -6105;
          break;
        case 0xA9:
          uint64_t v9 = -8001;
          break;
        case 0xAA:
          uint64_t v9 = -8301;
          break;
        case 0xAB:
          uint64_t v9 = -8304;
          break;
        case 0xAC:
          uint64_t v9 = -8400;
          break;
        case 0xAD:
          uint64_t v9 = -8401;
          break;
        case 0xAE:
          uint64_t v9 = -8403;
          break;
        case 0xAF:
          uint64_t v9 = -8404;
          break;
        case 0xB0:
          uint64_t v9 = -8428;
          break;
        case 0xB1:
          uint64_t v9 = -8429;
          break;
        case 0xB2:
          uint64_t v9 = -8433;
          break;
        case 0xB3:
          uint64_t v9 = -8434;
          break;
        case 0xB4:
          uint64_t v9 = -8500;
          break;
        case 0xB5:
          uint64_t v9 = -8501;
          break;
        case 0xB6:
          uint64_t v9 = -8502;
          break;
        case 0xB7:
          uint64_t v9 = -8503;
          break;
        case 0xB8:
          uint64_t v9 = -8504;
          break;
        case 0xB9:
          uint64_t v9 = -22200;
          break;
        case 0xBA:
          uint64_t v9 = -22201;
          break;
        case 0xBB:
          uint64_t v9 = -22202;
          break;
        case 0xBC:
          uint64_t v9 = -22203;
          break;
        case 0xBD:
          uint64_t v9 = -22204;
          break;
        case 0xBE:
          uint64_t v9 = -22205;
          break;
        case 0xBF:
          uint64_t v9 = -22206;
          break;
        case 0xC0:
          uint64_t v9 = -22207;
          break;
        case 0xC1:
          uint64_t v9 = -22208;
          break;
        case 0xC2:
          uint64_t v9 = -72200;
          break;
        case 0xC3:
          uint64_t v9 = -72201;
          break;
        case 0xC4:
          uint64_t v9 = -72202;
          break;
        case 0xC5:
          uint64_t v9 = -72203;
          break;
        case 0xC6:
          uint64_t v9 = -72204;
          break;
        case 0xC7:
          uint64_t v9 = -72205;
          break;
        case 0xC8:
          uint64_t v9 = -72206;
          break;
        case 0xC9:
          uint64_t v9 = -72207;
          break;
        case 0xCA:
          uint64_t v9 = -72208;
          break;
        case 0xCB:
          uint64_t v9 = -72209;
          break;
        case 0xCC:
          uint64_t v9 = -72210;
          break;
        case 0xCD:
          uint64_t v9 = -72211;
          break;
        case 0xCE:
          uint64_t v9 = -72780;
          break;
        case 0xCF:
          uint64_t v9 = -72781;
          break;
        case 0xD0:
          uint64_t v9 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v9 = -(uint64_t)(HIBYTE(a2) + 47);
    }
    uint64_t v10 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 128) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 136) = v10;
    *(void *)(inited + 104) = v9;
  }
  return sub_214B7E450(inited);
}

uint64_t sub_214C7D3A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x270FA5388](v4, v5);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_214B9163C(v2, (uint64_t)v7);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v11 = *v7;
      uint64_t v12 = v7[1];
      uint64_t v13 = MEMORY[0x263F8D320];
      a1[3] = MEMORY[0x263F8D310];
      a1[4] = v13;
      *a1 = v11;
      a1[1] = v12;
      break;
    case 2:
      uint64_t v14 = *v7;
      uint64_t v15 = MEMORY[0x263F8D6D8];
      a1[3] = MEMORY[0x263F8D6C8];
      a1[4] = v15;
      *a1 = v14;
      break;
    case 3:
      uint64_t v16 = sub_214D19C78();
      a1[3] = v16;
      a1[4] = sub_214D03FC8(&qword_26784EE40, 255, MEMORY[0x263F07490]);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 32))(boxed_opaque_existential_0, v7, v16);
      break;
    case 4:
      char v18 = *(unsigned char *)v7;
      uint64_t v19 = MEMORY[0x263F8D508];
      a1[3] = MEMORY[0x263F8D4F8];
      a1[4] = v19;
      *(unsigned char *)a1 = v18;
      break;
    case 5:
      id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
      a1[3] = sub_214B6A264(0, &qword_26784D210);
      uint64_t result = sub_214D03F78(&qword_26784EE38, &qword_26784D210);
      a1[4] = result;
      *a1 = (uint64_t)v20;
      break;
    default:
      uint64_t v9 = *v7;
      uint64_t v10 = MEMORY[0x263F8D558];
      a1[3] = MEMORY[0x263F8D538];
      a1[4] = v10;
      *a1 = v9;
      break;
  }
  return result;
}

uint64_t sub_214C7D5D8(uint64_t a1, uint64_t a2, __int16 a3)
{
  char v3 = HIBYTE(a3);
  if (a3)
  {
    sub_214D1AD28();
  }
  else
  {
    sub_214D1AD28();
    sub_214D1AD38();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214C7E0C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a3)
  {
    case -47:
      if (a6 == 209) {
        goto LABEL_22;
      }
      return 0;
    case -46:
      if (a6 != 210) {
        return 0;
      }
      goto LABEL_22;
    case -45:
      if (a6 == 211) {
        goto LABEL_22;
      }
      return 0;
    case -44:
      if (a6 == 212) {
        goto LABEL_22;
      }
      return 0;
    case -43:
      if (a6 == 213) {
        goto LABEL_22;
      }
      return 0;
    case -42:
      if (a6 == 214) {
        goto LABEL_22;
      }
      return 0;
    case -41:
      if (a6 == 215) {
        goto LABEL_22;
      }
      return 0;
    case -40:
      if (a6 == 216) {
        goto LABEL_22;
      }
      return 0;
    case -39:
      if (a6 == 217) {
        goto LABEL_22;
      }
      return 0;
    default:
      if ((a6 + 47) < 9u) {
        return 0;
      }
      uint64_t v6 = -1;
      switch(a3)
      {
        case 1:
          uint64_t v6 = -2;
          break;
        case 2:
          uint64_t v6 = -3;
          break;
        case 3:
          uint64_t v6 = -4;
          break;
        case 4:
          uint64_t v6 = -5;
          break;
        case 5:
          uint64_t v6 = -6;
          break;
        case 6:
          uint64_t v6 = -7;
          break;
        case 7:
          uint64_t v6 = -8;
          break;
        case 8:
          uint64_t v6 = -9;
          break;
        case 9:
          uint64_t v6 = -10;
          break;
        case 10:
          uint64_t v6 = -11;
          break;
        case 11:
          uint64_t v6 = -12;
          break;
        case 12:
          uint64_t v6 = -13;
          break;
        case 13:
          uint64_t v6 = -14;
          break;
        case 14:
          uint64_t v6 = -15;
          break;
        case 15:
          uint64_t v6 = -16;
          break;
        case 16:
          uint64_t v6 = -17;
          break;
        case 17:
          uint64_t v6 = -18;
          break;
        case 18:
          uint64_t v6 = -19;
          break;
        case 19:
          uint64_t v6 = -20;
          break;
        case 20:
          uint64_t v6 = -21;
          break;
        case 21:
          uint64_t v6 = -22;
          break;
        case 22:
          uint64_t v6 = -28;
          break;
        case 23:
          uint64_t v6 = -29;
          break;
        case 24:
          uint64_t v6 = 200;
          break;
        case 25:
          uint64_t v6 = 20000;
          break;
        case 26:
          uint64_t v6 = 20001;
          break;
        case 27:
          uint64_t v6 = 20100;
          break;
        case 28:
          uint64_t v6 = 40000;
          break;
        case 29:
          uint64_t v6 = 40010;
          break;
        case 30:
          uint64_t v6 = 40011;
          break;
        case 31:
          uint64_t v6 = 40012;
          break;
        case 32:
          uint64_t v6 = 40013;
          break;
        case 33:
          uint64_t v6 = 40014;
          break;
        case 34:
          uint64_t v6 = 40015;
          break;
        case 35:
          uint64_t v6 = 40020;
          break;
        case 36:
          uint64_t v6 = 40021;
          break;
        case 37:
          uint64_t v6 = 40022;
          break;
        case 38:
          uint64_t v6 = 40023;
          break;
        case 39:
          uint64_t v6 = 40024;
          break;
        case 40:
          uint64_t v6 = 40025;
          break;
        case 41:
          uint64_t v6 = 40026;
          break;
        case 42:
          uint64_t v6 = 40027;
          break;
        case 43:
          uint64_t v6 = 40028;
          break;
        case 44:
          uint64_t v6 = 40029;
          break;
        case 45:
          uint64_t v6 = 40030;
          break;
        case 46:
          uint64_t v6 = 40101;
          break;
        case 47:
          uint64_t v6 = 40102;
          break;
        case 48:
          uint64_t v6 = 40200;
          break;
        case 49:
          uint64_t v6 = 40201;
          break;
        case 50:
          uint64_t v6 = 40205;
          break;
        case 51:
          uint64_t v6 = 40401;
          break;
        case 52:
          uint64_t v6 = 40402;
          break;
        case 53:
          uint64_t v6 = 40403;
          break;
        case 54:
          uint64_t v6 = 40404;
          break;
        case 55:
          uint64_t v6 = 40500;
          break;
        case 56:
          uint64_t v6 = 40600;
          break;
        case 57:
          uint64_t v6 = 40601;
          break;
        case 58:
          uint64_t v6 = 50000;
          break;
        case 59:
          uint64_t v6 = 50001;
          break;
        case 60:
          uint64_t v6 = 50002;
          break;
        case 61:
          uint64_t v6 = 99991;
          break;
        case 62:
          uint64_t v6 = 99992;
          break;
        case 63:
          uint64_t v6 = 99993;
          break;
        case 64:
          uint64_t v6 = -1101;
          break;
        case 65:
          uint64_t v6 = -1102;
          break;
        case 66:
          uint64_t v6 = -1103;
          break;
        case 67:
          uint64_t v6 = -1104;
          break;
        case 68:
          uint64_t v6 = -1110;
          break;
        case 69:
          uint64_t v6 = -1111;
          break;
        case 70:
          uint64_t v6 = -1112;
          break;
        case 71:
          uint64_t v6 = -1113;
          break;
        case 72:
          uint64_t v6 = -1114;
          break;
        case 73:
          uint64_t v6 = -1115;
          break;
        case 74:
          uint64_t v6 = -1116;
          break;
        case 75:
          uint64_t v6 = -1117;
          break;
        case 76:
          uint64_t v6 = -1118;
          break;
        case 77:
          uint64_t v6 = -1119;
          break;
        case 78:
          uint64_t v6 = -1201;
          break;
        case 79:
          uint64_t v6 = -1202;
          break;
        case 80:
          uint64_t v6 = -1203;
          break;
        case 81:
          uint64_t v6 = -1204;
          break;
        case 82:
          uint64_t v6 = -1402;
          break;
        case 83:
          uint64_t v6 = -1403;
          break;
        case 84:
          uint64_t v6 = -1404;
          break;
        case 85:
          uint64_t v6 = -1301;
          break;
        case 86:
          uint64_t v6 = -1302;
          break;
        case 87:
          uint64_t v6 = -1303;
          break;
        case 88:
          uint64_t v6 = -1304;
          break;
        case 89:
          uint64_t v6 = -1305;
          break;
        case 90:
          uint64_t v6 = -1306;
          break;
        case 91:
          uint64_t v6 = -1307;
          break;
        case 92:
          uint64_t v6 = -1308;
          break;
        case 93:
          uint64_t v6 = -1309;
          break;
        case 94:
          uint64_t v6 = -1310;
          break;
        case 95:
          uint64_t v6 = -1315;
          break;
        case 96:
          uint64_t v6 = -1316;
          break;
        case 97:
          uint64_t v6 = -1317;
          break;
        case 98:
          uint64_t v6 = -131600;
          break;
        case 99:
          uint64_t v6 = -2103;
          break;
        case 100:
          uint64_t v6 = -2104;
          break;
        case 101:
          uint64_t v6 = -2107;
          break;
        case 102:
          uint64_t v6 = -2110;
          break;
        case 103:
          uint64_t v6 = -2111;
          break;
        case 104:
          uint64_t v6 = -2112;
          break;
        case 105:
          uint64_t v6 = -2123;
          break;
        case 106:
          uint64_t v6 = -2124;
          break;
        case 107:
          uint64_t v6 = -2125;
          break;
        case 108:
          uint64_t v6 = -2126;
          break;
        case 109:
          uint64_t v6 = -2127;
          break;
        case 110:
          uint64_t v6 = -3101;
          break;
        case 111:
          uint64_t v6 = -3102;
          break;
        case 112:
          uint64_t v6 = -3103;
          break;
        case 113:
          uint64_t v6 = -3104;
          break;
        case 114:
          uint64_t v6 = -3105;
          break;
        case 115:
          uint64_t v6 = -3106;
          break;
        case 116:
          uint64_t v6 = -3107;
          break;
        case 117:
          uint64_t v6 = -3108;
          break;
        case 118:
          uint64_t v6 = -3109;
          break;
        case 119:
          uint64_t v6 = -3110;
          break;
        case 120:
          uint64_t v6 = -3111;
          break;
        case 121:
          uint64_t v6 = -3112;
          break;
        case 122:
          uint64_t v6 = -3113;
          break;
        case 123:
          uint64_t v6 = -3151;
          break;
        case 124:
          uint64_t v6 = -3152;
          break;
        case 125:
          uint64_t v6 = -3153;
          break;
        case 126:
          uint64_t v6 = -3154;
          break;
        case 127:
          uint64_t v6 = -3155;
          break;
        case -128:
          uint64_t v6 = -3156;
          break;
        case -127:
          uint64_t v6 = -3157;
          break;
        case -126:
          uint64_t v6 = -3158;
          break;
        case -125:
          uint64_t v6 = -3159;
          break;
        case -124:
          uint64_t v6 = -3161;
          break;
        case -123:
          uint64_t v6 = -3162;
          break;
        case -122:
          uint64_t v6 = -3163;
          break;
        case -121:
          uint64_t v6 = -3164;
          break;
        case -120:
          uint64_t v6 = -3165;
          break;
        case -119:
          uint64_t v6 = -3166;
          break;
        case -118:
          uint64_t v6 = -3167;
          break;
        case -117:
          uint64_t v6 = -3168;
          break;
        case -116:
          uint64_t v6 = -3169;
          break;
        case -115:
          uint64_t v6 = -3170;
          break;
        case -114:
          uint64_t v6 = -3171;
          break;
        case -113:
          uint64_t v6 = -3172;
          break;
        case -112:
          uint64_t v6 = -3173;
          break;
        case -111:
          uint64_t v6 = -3174;
          break;
        case -110:
          uint64_t v6 = -3175;
          break;
        case -109:
          uint64_t v6 = -3176;
          break;
        case -108:
          uint64_t v6 = -3177;
          break;
        case -107:
          uint64_t v6 = -3178;
          break;
        case -106:
          uint64_t v6 = -3179;
          break;
        case -105:
          uint64_t v6 = -3180;
          break;
        case -104:
          uint64_t v6 = -3181;
          break;
        case -103:
          uint64_t v6 = -3182;
          break;
        case -102:
          uint64_t v6 = -3183;
          break;
        case -101:
          uint64_t v6 = -3184;
          break;
        case -100:
          uint64_t v6 = -3185;
          break;
        case -99:
          uint64_t v6 = -3186;
          break;
        case -98:
          uint64_t v6 = -3187;
          break;
        case -97:
          uint64_t v6 = -3188;
          break;
        case -96:
          uint64_t v6 = -3189;
          break;
        case -95:
          uint64_t v6 = -3300;
          break;
        case -94:
          uint64_t v6 = -5108;
          break;
        case -93:
          uint64_t v6 = -6009;
          break;
        case -92:
          uint64_t v6 = -6010;
          break;
        case -91:
          uint64_t v6 = -6102;
          break;
        case -90:
          uint64_t v6 = -6103;
          break;
        case -89:
          uint64_t v6 = -6104;
          break;
        case -88:
          uint64_t v6 = -6105;
          break;
        case -87:
          uint64_t v6 = -8001;
          break;
        case -86:
          uint64_t v6 = -8301;
          break;
        case -85:
          uint64_t v6 = -8304;
          break;
        case -84:
          uint64_t v6 = -8400;
          break;
        case -83:
          uint64_t v6 = -8401;
          break;
        case -82:
          uint64_t v6 = -8403;
          break;
        case -81:
          uint64_t v6 = -8404;
          break;
        case -80:
          uint64_t v6 = -8428;
          break;
        case -79:
          uint64_t v6 = -8429;
          break;
        case -78:
          uint64_t v6 = -8433;
          break;
        case -77:
          uint64_t v6 = -8434;
          break;
        case -76:
          uint64_t v6 = -8500;
          break;
        case -75:
          uint64_t v6 = -8501;
          break;
        case -74:
          uint64_t v6 = -8502;
          break;
        case -73:
          uint64_t v6 = -8503;
          break;
        case -72:
          uint64_t v6 = -8504;
          break;
        case -71:
          uint64_t v6 = -22200;
          break;
        case -70:
          uint64_t v6 = -22201;
          break;
        case -69:
          uint64_t v6 = -22202;
          break;
        case -68:
          uint64_t v6 = -22203;
          break;
        case -67:
          uint64_t v6 = -22204;
          break;
        case -66:
          uint64_t v6 = -22205;
          break;
        case -65:
          uint64_t v6 = -22206;
          break;
        case -64:
          uint64_t v6 = -22207;
          break;
        case -63:
          uint64_t v6 = -22208;
          break;
        case -62:
          uint64_t v6 = -72200;
          break;
        case -61:
          uint64_t v6 = -72201;
          break;
        case -60:
          uint64_t v6 = -72202;
          break;
        case -59:
          uint64_t v6 = -72203;
          break;
        case -58:
          uint64_t v6 = -72204;
          break;
        case -57:
          uint64_t v6 = -72205;
          break;
        case -56:
          uint64_t v6 = -72206;
          break;
        case -55:
          uint64_t v6 = -72207;
          break;
        case -54:
          uint64_t v6 = -72208;
          break;
        case -53:
          uint64_t v6 = -72209;
          break;
        case -52:
          uint64_t v6 = -72210;
          break;
        case -51:
          uint64_t v6 = -72211;
          break;
        case -50:
          uint64_t v6 = -72780;
          break;
        case -49:
          uint64_t v6 = -72781;
          break;
        case -48:
          uint64_t v6 = -72782;
          break;
        default:
          break;
      }
      uint64_t v9 = -1;
      switch(a6)
      {
        case 1u:
          uint64_t v9 = -2;
          break;
        case 2u:
          uint64_t v9 = -3;
          break;
        case 3u:
          uint64_t v9 = -4;
          break;
        case 4u:
          uint64_t v9 = -5;
          break;
        case 5u:
          uint64_t v9 = -6;
          break;
        case 6u:
          uint64_t v9 = -7;
          break;
        case 7u:
          uint64_t v9 = -8;
          break;
        case 8u:
          uint64_t v9 = -9;
          break;
        case 9u:
          uint64_t v9 = -10;
          break;
        case 0xAu:
          uint64_t v9 = -11;
          break;
        case 0xBu:
          uint64_t v9 = -12;
          break;
        case 0xCu:
          uint64_t v9 = -13;
          break;
        case 0xDu:
          uint64_t v9 = -14;
          break;
        case 0xEu:
          uint64_t v9 = -15;
          break;
        case 0xFu:
          uint64_t v9 = -16;
          break;
        case 0x10u:
          uint64_t v9 = -17;
          break;
        case 0x11u:
          uint64_t v9 = -18;
          break;
        case 0x12u:
          uint64_t v9 = -19;
          break;
        case 0x13u:
          uint64_t v9 = -20;
          break;
        case 0x14u:
          uint64_t v9 = -21;
          break;
        case 0x15u:
          uint64_t v9 = -22;
          break;
        case 0x16u:
          uint64_t v9 = -28;
          break;
        case 0x17u:
          uint64_t v9 = -29;
          break;
        case 0x18u:
          uint64_t v9 = 200;
          break;
        case 0x19u:
          uint64_t v9 = 20000;
          break;
        case 0x1Au:
          uint64_t v9 = 20001;
          break;
        case 0x1Bu:
          uint64_t v9 = 20100;
          break;
        case 0x1Cu:
          uint64_t v9 = 40000;
          break;
        case 0x1Du:
          uint64_t v9 = 40010;
          break;
        case 0x1Eu:
          uint64_t v9 = 40011;
          break;
        case 0x1Fu:
          uint64_t v9 = 40012;
          break;
        case 0x20u:
          uint64_t v9 = 40013;
          break;
        case 0x21u:
          uint64_t v9 = 40014;
          break;
        case 0x22u:
          uint64_t v9 = 40015;
          break;
        case 0x23u:
          uint64_t v9 = 40020;
          break;
        case 0x24u:
          uint64_t v9 = 40021;
          break;
        case 0x25u:
          uint64_t v9 = 40022;
          break;
        case 0x26u:
          uint64_t v9 = 40023;
          break;
        case 0x27u:
          uint64_t v9 = 40024;
          break;
        case 0x28u:
          uint64_t v9 = 40025;
          break;
        case 0x29u:
          uint64_t v9 = 40026;
          break;
        case 0x2Au:
          uint64_t v9 = 40027;
          break;
        case 0x2Bu:
          uint64_t v9 = 40028;
          break;
        case 0x2Cu:
          uint64_t v9 = 40029;
          break;
        case 0x2Du:
          uint64_t v9 = 40030;
          break;
        case 0x2Eu:
          uint64_t v9 = 40101;
          break;
        case 0x2Fu:
          uint64_t v9 = 40102;
          break;
        case 0x30u:
          uint64_t v9 = 40200;
          break;
        case 0x31u:
          uint64_t v9 = 40201;
          break;
        case 0x32u:
          uint64_t v9 = 40205;
          break;
        case 0x33u:
          uint64_t v9 = 40401;
          break;
        case 0x34u:
          uint64_t v9 = 40402;
          break;
        case 0x35u:
          uint64_t v9 = 40403;
          break;
        case 0x36u:
          uint64_t v9 = 40404;
          break;
        case 0x37u:
          uint64_t v9 = 40500;
          break;
        case 0x38u:
          uint64_t v9 = 40600;
          break;
        case 0x39u:
          uint64_t v9 = 40601;
          break;
        case 0x3Au:
          uint64_t v9 = 50000;
          break;
        case 0x3Bu:
          uint64_t v9 = 50001;
          break;
        case 0x3Cu:
          uint64_t v9 = 50002;
          break;
        case 0x3Du:
          uint64_t v9 = 99991;
          break;
        case 0x3Eu:
          uint64_t v9 = 99992;
          break;
        case 0x3Fu:
          uint64_t v9 = 99993;
          break;
        case 0x40u:
          uint64_t v9 = -1101;
          break;
        case 0x41u:
          uint64_t v9 = -1102;
          break;
        case 0x42u:
          uint64_t v9 = -1103;
          break;
        case 0x43u:
          uint64_t v9 = -1104;
          break;
        case 0x44u:
          uint64_t v9 = -1110;
          break;
        case 0x45u:
          uint64_t v9 = -1111;
          break;
        case 0x46u:
          uint64_t v9 = -1112;
          break;
        case 0x47u:
          uint64_t v9 = -1113;
          break;
        case 0x48u:
          uint64_t v9 = -1114;
          break;
        case 0x49u:
          uint64_t v9 = -1115;
          break;
        case 0x4Au:
          uint64_t v9 = -1116;
          break;
        case 0x4Bu:
          uint64_t v9 = -1117;
          break;
        case 0x4Cu:
          uint64_t v9 = -1118;
          break;
        case 0x4Du:
          uint64_t v9 = -1119;
          break;
        case 0x4Eu:
          uint64_t v9 = -1201;
          break;
        case 0x4Fu:
          uint64_t v9 = -1202;
          break;
        case 0x50u:
          uint64_t v9 = -1203;
          break;
        case 0x51u:
          uint64_t v9 = -1204;
          break;
        case 0x52u:
          uint64_t v9 = -1402;
          break;
        case 0x53u:
          uint64_t v9 = -1403;
          break;
        case 0x54u:
          uint64_t v9 = -1404;
          break;
        case 0x55u:
          uint64_t v9 = -1301;
          break;
        case 0x56u:
          uint64_t v9 = -1302;
          break;
        case 0x57u:
          uint64_t v9 = -1303;
          break;
        case 0x58u:
          uint64_t v9 = -1304;
          break;
        case 0x59u:
          uint64_t v9 = -1305;
          break;
        case 0x5Au:
          uint64_t v9 = -1306;
          break;
        case 0x5Bu:
          uint64_t v9 = -1307;
          break;
        case 0x5Cu:
          uint64_t v9 = -1308;
          break;
        case 0x5Du:
          uint64_t v9 = -1309;
          break;
        case 0x5Eu:
          uint64_t v9 = -1310;
          break;
        case 0x5Fu:
          uint64_t v9 = -1315;
          break;
        case 0x60u:
          uint64_t v9 = -1316;
          break;
        case 0x61u:
          uint64_t v9 = -1317;
          break;
        case 0x62u:
          uint64_t v9 = -131600;
          break;
        case 0x63u:
          uint64_t v9 = -2103;
          break;
        case 0x64u:
          uint64_t v9 = -2104;
          break;
        case 0x65u:
          uint64_t v9 = -2107;
          break;
        case 0x66u:
          uint64_t v9 = -2110;
          break;
        case 0x67u:
          uint64_t v9 = -2111;
          break;
        case 0x68u:
          uint64_t v9 = -2112;
          break;
        case 0x69u:
          uint64_t v9 = -2123;
          break;
        case 0x6Au:
          uint64_t v9 = -2124;
          break;
        case 0x6Bu:
          uint64_t v9 = -2125;
          break;
        case 0x6Cu:
          uint64_t v9 = -2126;
          break;
        case 0x6Du:
          uint64_t v9 = -2127;
          break;
        case 0x6Eu:
          uint64_t v9 = -3101;
          break;
        case 0x6Fu:
          uint64_t v9 = -3102;
          break;
        case 0x70u:
          uint64_t v9 = -3103;
          break;
        case 0x71u:
          uint64_t v9 = -3104;
          break;
        case 0x72u:
          uint64_t v9 = -3105;
          break;
        case 0x73u:
          uint64_t v9 = -3106;
          break;
        case 0x74u:
          uint64_t v9 = -3107;
          break;
        case 0x75u:
          uint64_t v9 = -3108;
          break;
        case 0x76u:
          uint64_t v9 = -3109;
          break;
        case 0x77u:
          uint64_t v9 = -3110;
          break;
        case 0x78u:
          uint64_t v9 = -3111;
          break;
        case 0x79u:
          uint64_t v9 = -3112;
          break;
        case 0x7Au:
          uint64_t v9 = -3113;
          break;
        case 0x7Bu:
          uint64_t v9 = -3151;
          break;
        case 0x7Cu:
          uint64_t v9 = -3152;
          break;
        case 0x7Du:
          uint64_t v9 = -3153;
          break;
        case 0x7Eu:
          uint64_t v9 = -3154;
          break;
        case 0x7Fu:
          uint64_t v9 = -3155;
          break;
        case 0x80u:
          uint64_t v9 = -3156;
          break;
        case 0x81u:
          uint64_t v9 = -3157;
          break;
        case 0x82u:
          uint64_t v9 = -3158;
          break;
        case 0x83u:
          uint64_t v9 = -3159;
          break;
        case 0x84u:
          uint64_t v9 = -3161;
          break;
        case 0x85u:
          uint64_t v9 = -3162;
          break;
        case 0x86u:
          uint64_t v9 = -3163;
          break;
        case 0x87u:
          uint64_t v9 = -3164;
          break;
        case 0x88u:
          uint64_t v9 = -3165;
          break;
        case 0x89u:
          uint64_t v9 = -3166;
          break;
        case 0x8Au:
          uint64_t v9 = -3167;
          break;
        case 0x8Bu:
          uint64_t v9 = -3168;
          break;
        case 0x8Cu:
          uint64_t v9 = -3169;
          break;
        case 0x8Du:
          uint64_t v9 = -3170;
          break;
        case 0x8Eu:
          uint64_t v9 = -3171;
          break;
        case 0x8Fu:
          uint64_t v9 = -3172;
          break;
        case 0x90u:
          uint64_t v9 = -3173;
          break;
        case 0x91u:
          uint64_t v9 = -3174;
          break;
        case 0x92u:
          uint64_t v9 = -3175;
          break;
        case 0x93u:
          uint64_t v9 = -3176;
          break;
        case 0x94u:
          uint64_t v9 = -3177;
          break;
        case 0x95u:
          uint64_t v9 = -3178;
          break;
        case 0x96u:
          uint64_t v9 = -3179;
          break;
        case 0x97u:
          uint64_t v9 = -3180;
          break;
        case 0x98u:
          uint64_t v9 = -3181;
          break;
        case 0x99u:
          uint64_t v9 = -3182;
          break;
        case 0x9Au:
          uint64_t v9 = -3183;
          break;
        case 0x9Bu:
          uint64_t v9 = -3184;
          break;
        case 0x9Cu:
          uint64_t v9 = -3185;
          break;
        case 0x9Du:
          uint64_t v9 = -3186;
          break;
        case 0x9Eu:
          uint64_t v9 = -3187;
          break;
        case 0x9Fu:
          uint64_t v9 = -3188;
          break;
        case 0xA0u:
          uint64_t v9 = -3189;
          break;
        case 0xA1u:
          uint64_t v9 = -3300;
          break;
        case 0xA2u:
          uint64_t v9 = -5108;
          break;
        case 0xA3u:
          uint64_t v9 = -6009;
          break;
        case 0xA4u:
          uint64_t v9 = -6010;
          break;
        case 0xA5u:
          uint64_t v9 = -6102;
          break;
        case 0xA6u:
          uint64_t v9 = -6103;
          break;
        case 0xA7u:
          uint64_t v9 = -6104;
          break;
        case 0xA8u:
          uint64_t v9 = -6105;
          break;
        case 0xA9u:
          uint64_t v9 = -8001;
          break;
        case 0xAAu:
          uint64_t v9 = -8301;
          break;
        case 0xABu:
          uint64_t v9 = -8304;
          break;
        case 0xACu:
          uint64_t v9 = -8400;
          break;
        case 0xADu:
          uint64_t v9 = -8401;
          break;
        case 0xAEu:
          uint64_t v9 = -8403;
          break;
        case 0xAFu:
          uint64_t v9 = -8404;
          break;
        case 0xB0u:
          uint64_t v9 = -8428;
          break;
        case 0xB1u:
          uint64_t v9 = -8429;
          break;
        case 0xB2u:
          uint64_t v9 = -8433;
          break;
        case 0xB3u:
          uint64_t v9 = -8434;
          break;
        case 0xB4u:
          uint64_t v9 = -8500;
          break;
        case 0xB5u:
          uint64_t v9 = -8501;
          break;
        case 0xB6u:
          uint64_t v9 = -8502;
          break;
        case 0xB7u:
          uint64_t v9 = -8503;
          break;
        case 0xB8u:
          uint64_t v9 = -8504;
          break;
        case 0xB9u:
          uint64_t v9 = -22200;
          break;
        case 0xBAu:
          uint64_t v9 = -22201;
          break;
        case 0xBBu:
          uint64_t v9 = -22202;
          break;
        case 0xBCu:
          uint64_t v9 = -22203;
          break;
        case 0xBDu:
          uint64_t v9 = -22204;
          break;
        case 0xBEu:
          uint64_t v9 = -22205;
          break;
        case 0xBFu:
          uint64_t v9 = -22206;
          break;
        case 0xC0u:
          uint64_t v9 = -22207;
          break;
        case 0xC1u:
          uint64_t v9 = -22208;
          break;
        case 0xC2u:
          uint64_t v9 = -72200;
          break;
        case 0xC3u:
          uint64_t v9 = -72201;
          break;
        case 0xC4u:
          uint64_t v9 = -72202;
          break;
        case 0xC5u:
          uint64_t v9 = -72203;
          break;
        case 0xC6u:
          uint64_t v9 = -72204;
          break;
        case 0xC7u:
          uint64_t v9 = -72205;
          break;
        case 0xC8u:
          uint64_t v9 = -72206;
          break;
        case 0xC9u:
          uint64_t v9 = -72207;
          break;
        case 0xCAu:
          uint64_t v9 = -72208;
          break;
        case 0xCBu:
          uint64_t v9 = -72209;
          break;
        case 0xCCu:
          uint64_t v9 = -72210;
          break;
        case 0xCDu:
          uint64_t v9 = -72211;
          break;
        case 0xCEu:
          uint64_t v9 = -72780;
          break;
        case 0xCFu:
          uint64_t v9 = -72781;
          break;
        case 0xD0u:
          uint64_t v9 = -72782;
          break;
        default:
          break;
      }
      if (v6 != v9) {
        return 0;
      }
LABEL_22:
      BOOL v8 = (a2 | a5) == 0;
      if (!a2 || !a5) {
        return v8;
      }
      if (a1 != a4 || a2 != a5) {
        return sub_214D1ABC8();
      }
      return 1;
  }
}

uint64_t sub_214C7F6F0(__int16 a1, __int16 a2)
{
  switch(HIBYTE(a1))
  {
    case 0xD1:
      if (HIBYTE(a2) == 209) {
        goto LABEL_22;
      }
      return 0;
    case 0xD2:
      if (HIBYTE(a2) != 210) {
        return 0;
      }
      goto LABEL_22;
    case 0xD3:
      if (HIBYTE(a2) == 211) {
        goto LABEL_22;
      }
      return 0;
    case 0xD4:
      if (HIBYTE(a2) == 212) {
        goto LABEL_22;
      }
      return 0;
    case 0xD5:
      if (HIBYTE(a2) == 213) {
        goto LABEL_22;
      }
      return 0;
    case 0xD6:
      if (HIBYTE(a2) == 214) {
        goto LABEL_22;
      }
      return 0;
    case 0xD7:
      if (HIBYTE(a2) == 215) {
        goto LABEL_22;
      }
      return 0;
    case 0xD8:
      if (HIBYTE(a2) == 216) {
        goto LABEL_22;
      }
      return 0;
    case 0xD9:
      if (HIBYTE(a2) == 217) {
        goto LABEL_22;
      }
      return 0;
    default:
      if ((HIBYTE(a2) + 47) < 9u) {
        return 0;
      }
      uint64_t v2 = -1;
      switch(HIBYTE(a1))
      {
        case 0xD2u:
          uint64_t v2 = -2;
          break;
        case 0xD3u:
          uint64_t v2 = -3;
          break;
        case 0xD4u:
          uint64_t v2 = -4;
          break;
        case 0xD5u:
          uint64_t v2 = -5;
          break;
        case 0xD6u:
          uint64_t v2 = -6;
          break;
        case 0xD7u:
          uint64_t v2 = -7;
          break;
        case 0xD8u:
          uint64_t v2 = -8;
          break;
        case 0xD9u:
          uint64_t v2 = -9;
          break;
        case 0xDAu:
          uint64_t v2 = -10;
          break;
        case 0xDBu:
          uint64_t v2 = -11;
          break;
        case 0xDCu:
          uint64_t v2 = -12;
          break;
        case 0xDDu:
          uint64_t v2 = -13;
          break;
        case 0xDEu:
          uint64_t v2 = -14;
          break;
        case 0xDFu:
          uint64_t v2 = -15;
          break;
        case 0xE0u:
          uint64_t v2 = -16;
          break;
        case 0xE1u:
          uint64_t v2 = -17;
          break;
        case 0xE2u:
          uint64_t v2 = -18;
          break;
        case 0xE3u:
          uint64_t v2 = -19;
          break;
        case 0xE4u:
          uint64_t v2 = -20;
          break;
        case 0xE5u:
          uint64_t v2 = -21;
          break;
        case 0xE6u:
          uint64_t v2 = -22;
          break;
        case 0xE7u:
          uint64_t v2 = -28;
          break;
        case 0xE8u:
          uint64_t v2 = -29;
          break;
        case 0xE9u:
          uint64_t v2 = 200;
          break;
        case 0xEAu:
          uint64_t v2 = 20000;
          break;
        case 0xEBu:
          uint64_t v2 = 20001;
          break;
        case 0xECu:
          uint64_t v2 = 20100;
          break;
        case 0xEDu:
          uint64_t v2 = 40000;
          break;
        case 0xEEu:
          uint64_t v2 = 40010;
          break;
        case 0xEFu:
          uint64_t v2 = 40011;
          break;
        case 0xF0u:
          uint64_t v2 = 40012;
          break;
        case 0xF1u:
          uint64_t v2 = 40013;
          break;
        case 0xF2u:
          uint64_t v2 = 40014;
          break;
        case 0xF3u:
          uint64_t v2 = 40015;
          break;
        case 0xF4u:
          uint64_t v2 = 40020;
          break;
        case 0xF5u:
          uint64_t v2 = 40021;
          break;
        case 0xF6u:
          uint64_t v2 = 40022;
          break;
        case 0xF7u:
          uint64_t v2 = 40023;
          break;
        case 0xF8u:
          uint64_t v2 = 40024;
          break;
        case 0xF9u:
          uint64_t v2 = 40025;
          break;
        case 0xFAu:
          uint64_t v2 = 40026;
          break;
        case 0xFBu:
          uint64_t v2 = 40027;
          break;
        case 0xFCu:
          uint64_t v2 = 40028;
          break;
        case 0xFDu:
          uint64_t v2 = 40029;
          break;
        case 0xFEu:
          uint64_t v2 = 40030;
          break;
        case 0xFFu:
          uint64_t v2 = 40101;
          break;
        case 0u:
          uint64_t v2 = 40102;
          break;
        case 1u:
          uint64_t v2 = 40200;
          break;
        case 2u:
          uint64_t v2 = 40201;
          break;
        case 3u:
          uint64_t v2 = 40205;
          break;
        case 4u:
          uint64_t v2 = 40401;
          break;
        case 5u:
          uint64_t v2 = 40402;
          break;
        case 6u:
          uint64_t v2 = 40403;
          break;
        case 7u:
          uint64_t v2 = 40404;
          break;
        case 8u:
          uint64_t v2 = 40500;
          break;
        case 9u:
          uint64_t v2 = 40600;
          break;
        case 0xAu:
          uint64_t v2 = 40601;
          break;
        case 0xBu:
          uint64_t v2 = 50000;
          break;
        case 0xCu:
          uint64_t v2 = 50001;
          break;
        case 0xDu:
          uint64_t v2 = 50002;
          break;
        case 0xEu:
          uint64_t v2 = 99991;
          break;
        case 0xFu:
          uint64_t v2 = 99992;
          break;
        case 0x10u:
          uint64_t v2 = 99993;
          break;
        case 0x11u:
          uint64_t v2 = -1101;
          break;
        case 0x12u:
          uint64_t v2 = -1102;
          break;
        case 0x13u:
          uint64_t v2 = -1103;
          break;
        case 0x14u:
          uint64_t v2 = -1104;
          break;
        case 0x15u:
          uint64_t v2 = -1110;
          break;
        case 0x16u:
          uint64_t v2 = -1111;
          break;
        case 0x17u:
          uint64_t v2 = -1112;
          break;
        case 0x18u:
          uint64_t v2 = -1113;
          break;
        case 0x19u:
          uint64_t v2 = -1114;
          break;
        case 0x1Au:
          uint64_t v2 = -1115;
          break;
        case 0x1Bu:
          uint64_t v2 = -1116;
          break;
        case 0x1Cu:
          uint64_t v2 = -1117;
          break;
        case 0x1Du:
          uint64_t v2 = -1118;
          break;
        case 0x1Eu:
          uint64_t v2 = -1119;
          break;
        case 0x1Fu:
          uint64_t v2 = -1201;
          break;
        case 0x20u:
          uint64_t v2 = -1202;
          break;
        case 0x21u:
          uint64_t v2 = -1203;
          break;
        case 0x22u:
          uint64_t v2 = -1204;
          break;
        case 0x23u:
          uint64_t v2 = -1402;
          break;
        case 0x24u:
          uint64_t v2 = -1403;
          break;
        case 0x25u:
          uint64_t v2 = -1404;
          break;
        case 0x26u:
          uint64_t v2 = -1301;
          break;
        case 0x27u:
          uint64_t v2 = -1302;
          break;
        case 0x28u:
          uint64_t v2 = -1303;
          break;
        case 0x29u:
          uint64_t v2 = -1304;
          break;
        case 0x2Au:
          uint64_t v2 = -1305;
          break;
        case 0x2Bu:
          uint64_t v2 = -1306;
          break;
        case 0x2Cu:
          uint64_t v2 = -1307;
          break;
        case 0x2Du:
          uint64_t v2 = -1308;
          break;
        case 0x2Eu:
          uint64_t v2 = -1309;
          break;
        case 0x2Fu:
          uint64_t v2 = -1310;
          break;
        case 0x30u:
          uint64_t v2 = -1315;
          break;
        case 0x31u:
          uint64_t v2 = -1316;
          break;
        case 0x32u:
          uint64_t v2 = -1317;
          break;
        case 0x33u:
          uint64_t v2 = -131600;
          break;
        case 0x34u:
          uint64_t v2 = -2103;
          break;
        case 0x35u:
          uint64_t v2 = -2104;
          break;
        case 0x36u:
          uint64_t v2 = -2107;
          break;
        case 0x37u:
          uint64_t v2 = -2110;
          break;
        case 0x38u:
          uint64_t v2 = -2111;
          break;
        case 0x39u:
          uint64_t v2 = -2112;
          break;
        case 0x3Au:
          uint64_t v2 = -2123;
          break;
        case 0x3Bu:
          uint64_t v2 = -2124;
          break;
        case 0x3Cu:
          uint64_t v2 = -2125;
          break;
        case 0x3Du:
          uint64_t v2 = -2126;
          break;
        case 0x3Eu:
          uint64_t v2 = -2127;
          break;
        case 0x3Fu:
          uint64_t v2 = -3101;
          break;
        case 0x40u:
          uint64_t v2 = -3102;
          break;
        case 0x41u:
          uint64_t v2 = -3103;
          break;
        case 0x42u:
          uint64_t v2 = -3104;
          break;
        case 0x43u:
          uint64_t v2 = -3105;
          break;
        case 0x44u:
          uint64_t v2 = -3106;
          break;
        case 0x45u:
          uint64_t v2 = -3107;
          break;
        case 0x46u:
          uint64_t v2 = -3108;
          break;
        case 0x47u:
          uint64_t v2 = -3109;
          break;
        case 0x48u:
          uint64_t v2 = -3110;
          break;
        case 0x49u:
          uint64_t v2 = -3111;
          break;
        case 0x4Au:
          uint64_t v2 = -3112;
          break;
        case 0x4Bu:
          uint64_t v2 = -3113;
          break;
        case 0x4Cu:
          uint64_t v2 = -3151;
          break;
        case 0x4Du:
          uint64_t v2 = -3152;
          break;
        case 0x4Eu:
          uint64_t v2 = -3153;
          break;
        case 0x4Fu:
          uint64_t v2 = -3154;
          break;
        case 0x50u:
          uint64_t v2 = -3155;
          break;
        case 0x51u:
          uint64_t v2 = -3156;
          break;
        case 0x52u:
          uint64_t v2 = -3157;
          break;
        case 0x53u:
          uint64_t v2 = -3158;
          break;
        case 0x54u:
          uint64_t v2 = -3159;
          break;
        case 0x55u:
          uint64_t v2 = -3161;
          break;
        case 0x56u:
          uint64_t v2 = -3162;
          break;
        case 0x57u:
          uint64_t v2 = -3163;
          break;
        case 0x58u:
          uint64_t v2 = -3164;
          break;
        case 0x59u:
          uint64_t v2 = -3165;
          break;
        case 0x5Au:
          uint64_t v2 = -3166;
          break;
        case 0x5Bu:
          uint64_t v2 = -3167;
          break;
        case 0x5Cu:
          uint64_t v2 = -3168;
          break;
        case 0x5Du:
          uint64_t v2 = -3169;
          break;
        case 0x5Eu:
          uint64_t v2 = -3170;
          break;
        case 0x5Fu:
          uint64_t v2 = -3171;
          break;
        case 0x60u:
          uint64_t v2 = -3172;
          break;
        case 0x61u:
          uint64_t v2 = -3173;
          break;
        case 0x62u:
          uint64_t v2 = -3174;
          break;
        case 0x63u:
          uint64_t v2 = -3175;
          break;
        case 0x64u:
          uint64_t v2 = -3176;
          break;
        case 0x65u:
          uint64_t v2 = -3177;
          break;
        case 0x66u:
          uint64_t v2 = -3178;
          break;
        case 0x67u:
          uint64_t v2 = -3179;
          break;
        case 0x68u:
          uint64_t v2 = -3180;
          break;
        case 0x69u:
          uint64_t v2 = -3181;
          break;
        case 0x6Au:
          uint64_t v2 = -3182;
          break;
        case 0x6Bu:
          uint64_t v2 = -3183;
          break;
        case 0x6Cu:
          uint64_t v2 = -3184;
          break;
        case 0x6Du:
          uint64_t v2 = -3185;
          break;
        case 0x6Eu:
          uint64_t v2 = -3186;
          break;
        case 0x6Fu:
          uint64_t v2 = -3187;
          break;
        case 0x70u:
          uint64_t v2 = -3188;
          break;
        case 0x71u:
          uint64_t v2 = -3189;
          break;
        case 0x72u:
          uint64_t v2 = -3300;
          break;
        case 0x73u:
          uint64_t v2 = -5108;
          break;
        case 0x74u:
          uint64_t v2 = -6009;
          break;
        case 0x75u:
          uint64_t v2 = -6010;
          break;
        case 0x76u:
          uint64_t v2 = -6102;
          break;
        case 0x77u:
          uint64_t v2 = -6103;
          break;
        case 0x78u:
          uint64_t v2 = -6104;
          break;
        case 0x79u:
          uint64_t v2 = -6105;
          break;
        case 0x7Au:
          uint64_t v2 = -8001;
          break;
        case 0x7Bu:
          uint64_t v2 = -8301;
          break;
        case 0x7Cu:
          uint64_t v2 = -8304;
          break;
        case 0x7Du:
          uint64_t v2 = -8400;
          break;
        case 0x7Eu:
          uint64_t v2 = -8401;
          break;
        case 0x7Fu:
          uint64_t v2 = -8403;
          break;
        case 0x80u:
          uint64_t v2 = -8404;
          break;
        case 0x81u:
          uint64_t v2 = -8428;
          break;
        case 0x82u:
          uint64_t v2 = -8429;
          break;
        case 0x83u:
          uint64_t v2 = -8433;
          break;
        case 0x84u:
          uint64_t v2 = -8434;
          break;
        case 0x85u:
          uint64_t v2 = -8500;
          break;
        case 0x86u:
          uint64_t v2 = -8501;
          break;
        case 0x87u:
          uint64_t v2 = -8502;
          break;
        case 0x88u:
          uint64_t v2 = -8503;
          break;
        case 0x89u:
          uint64_t v2 = -8504;
          break;
        case 0x8Au:
          uint64_t v2 = -22200;
          break;
        case 0x8Bu:
          uint64_t v2 = -22201;
          break;
        case 0x8Cu:
          uint64_t v2 = -22202;
          break;
        case 0x8Du:
          uint64_t v2 = -22203;
          break;
        case 0x8Eu:
          uint64_t v2 = -22204;
          break;
        case 0x8Fu:
          uint64_t v2 = -22205;
          break;
        case 0x90u:
          uint64_t v2 = -22206;
          break;
        case 0x91u:
          uint64_t v2 = -22207;
          break;
        case 0x92u:
          uint64_t v2 = -22208;
          break;
        case 0x93u:
          uint64_t v2 = -72200;
          break;
        case 0x94u:
          uint64_t v2 = -72201;
          break;
        case 0x95u:
          uint64_t v2 = -72202;
          break;
        case 0x96u:
          uint64_t v2 = -72203;
          break;
        case 0x97u:
          uint64_t v2 = -72204;
          break;
        case 0x98u:
          uint64_t v2 = -72205;
          break;
        case 0x99u:
          uint64_t v2 = -72206;
          break;
        case 0x9Au:
          uint64_t v2 = -72207;
          break;
        case 0x9Bu:
          uint64_t v2 = -72208;
          break;
        case 0x9Cu:
          uint64_t v2 = -72209;
          break;
        case 0x9Du:
          uint64_t v2 = -72210;
          break;
        case 0x9Eu:
          uint64_t v2 = -72211;
          break;
        case 0x9Fu:
          uint64_t v2 = -72780;
          break;
        case 0xA0u:
          uint64_t v2 = -72781;
          break;
        case 0xA1u:
          uint64_t v2 = -72782;
          break;
        default:
          break;
      }
      uint64_t v5 = -1;
      switch(HIBYTE(a2))
      {
        case 1:
          uint64_t v5 = -2;
          break;
        case 2:
          uint64_t v5 = -3;
          break;
        case 3:
          uint64_t v5 = -4;
          break;
        case 4:
          uint64_t v5 = -5;
          break;
        case 5:
          uint64_t v5 = -6;
          break;
        case 6:
          uint64_t v5 = -7;
          break;
        case 7:
          uint64_t v5 = -8;
          break;
        case 8:
          uint64_t v5 = -9;
          break;
        case 9:
          uint64_t v5 = -10;
          break;
        case 0xA:
          uint64_t v5 = -11;
          break;
        case 0xB:
          uint64_t v5 = -12;
          break;
        case 0xC:
          uint64_t v5 = -13;
          break;
        case 0xD:
          uint64_t v5 = -14;
          break;
        case 0xE:
          uint64_t v5 = -15;
          break;
        case 0xF:
          uint64_t v5 = -16;
          break;
        case 0x10:
          uint64_t v5 = -17;
          break;
        case 0x11:
          uint64_t v5 = -18;
          break;
        case 0x12:
          uint64_t v5 = -19;
          break;
        case 0x13:
          uint64_t v5 = -20;
          break;
        case 0x14:
          uint64_t v5 = -21;
          break;
        case 0x15:
          uint64_t v5 = -22;
          break;
        case 0x16:
          uint64_t v5 = -28;
          break;
        case 0x17:
          uint64_t v5 = -29;
          break;
        case 0x18:
          uint64_t v5 = 200;
          break;
        case 0x19:
          uint64_t v5 = 20000;
          break;
        case 0x1A:
          uint64_t v5 = 20001;
          break;
        case 0x1B:
          uint64_t v5 = 20100;
          break;
        case 0x1C:
          uint64_t v5 = 40000;
          break;
        case 0x1D:
          uint64_t v5 = 40010;
          break;
        case 0x1E:
          uint64_t v5 = 40011;
          break;
        case 0x1F:
          uint64_t v5 = 40012;
          break;
        case 0x20:
          uint64_t v5 = 40013;
          break;
        case 0x21:
          uint64_t v5 = 40014;
          break;
        case 0x22:
          uint64_t v5 = 40015;
          break;
        case 0x23:
          uint64_t v5 = 40020;
          break;
        case 0x24:
          uint64_t v5 = 40021;
          break;
        case 0x25:
          uint64_t v5 = 40022;
          break;
        case 0x26:
          uint64_t v5 = 40023;
          break;
        case 0x27:
          uint64_t v5 = 40024;
          break;
        case 0x28:
          uint64_t v5 = 40025;
          break;
        case 0x29:
          uint64_t v5 = 40026;
          break;
        case 0x2A:
          uint64_t v5 = 40027;
          break;
        case 0x2B:
          uint64_t v5 = 40028;
          break;
        case 0x2C:
          uint64_t v5 = 40029;
          break;
        case 0x2D:
          uint64_t v5 = 40030;
          break;
        case 0x2E:
          uint64_t v5 = 40101;
          break;
        case 0x2F:
          uint64_t v5 = 40102;
          break;
        case 0x30:
          uint64_t v5 = 40200;
          break;
        case 0x31:
          uint64_t v5 = 40201;
          break;
        case 0x32:
          uint64_t v5 = 40205;
          break;
        case 0x33:
          uint64_t v5 = 40401;
          break;
        case 0x34:
          uint64_t v5 = 40402;
          break;
        case 0x35:
          uint64_t v5 = 40403;
          break;
        case 0x36:
          uint64_t v5 = 40404;
          break;
        case 0x37:
          uint64_t v5 = 40500;
          break;
        case 0x38:
          uint64_t v5 = 40600;
          break;
        case 0x39:
          uint64_t v5 = 40601;
          break;
        case 0x3A:
          uint64_t v5 = 50000;
          break;
        case 0x3B:
          uint64_t v5 = 50001;
          break;
        case 0x3C:
          uint64_t v5 = 50002;
          break;
        case 0x3D:
          uint64_t v5 = 99991;
          break;
        case 0x3E:
          uint64_t v5 = 99992;
          break;
        case 0x3F:
          uint64_t v5 = 99993;
          break;
        case 0x40:
          uint64_t v5 = -1101;
          break;
        case 0x41:
          uint64_t v5 = -1102;
          break;
        case 0x42:
          uint64_t v5 = -1103;
          break;
        case 0x43:
          uint64_t v5 = -1104;
          break;
        case 0x44:
          uint64_t v5 = -1110;
          break;
        case 0x45:
          uint64_t v5 = -1111;
          break;
        case 0x46:
          uint64_t v5 = -1112;
          break;
        case 0x47:
          uint64_t v5 = -1113;
          break;
        case 0x48:
          uint64_t v5 = -1114;
          break;
        case 0x49:
          uint64_t v5 = -1115;
          break;
        case 0x4A:
          uint64_t v5 = -1116;
          break;
        case 0x4B:
          uint64_t v5 = -1117;
          break;
        case 0x4C:
          uint64_t v5 = -1118;
          break;
        case 0x4D:
          uint64_t v5 = -1119;
          break;
        case 0x4E:
          uint64_t v5 = -1201;
          break;
        case 0x4F:
          uint64_t v5 = -1202;
          break;
        case 0x50:
          uint64_t v5 = -1203;
          break;
        case 0x51:
          uint64_t v5 = -1204;
          break;
        case 0x52:
          uint64_t v5 = -1402;
          break;
        case 0x53:
          uint64_t v5 = -1403;
          break;
        case 0x54:
          uint64_t v5 = -1404;
          break;
        case 0x55:
          uint64_t v5 = -1301;
          break;
        case 0x56:
          uint64_t v5 = -1302;
          break;
        case 0x57:
          uint64_t v5 = -1303;
          break;
        case 0x58:
          uint64_t v5 = -1304;
          break;
        case 0x59:
          uint64_t v5 = -1305;
          break;
        case 0x5A:
          uint64_t v5 = -1306;
          break;
        case 0x5B:
          uint64_t v5 = -1307;
          break;
        case 0x5C:
          uint64_t v5 = -1308;
          break;
        case 0x5D:
          uint64_t v5 = -1309;
          break;
        case 0x5E:
          uint64_t v5 = -1310;
          break;
        case 0x5F:
          uint64_t v5 = -1315;
          break;
        case 0x60:
          uint64_t v5 = -1316;
          break;
        case 0x61:
          uint64_t v5 = -1317;
          break;
        case 0x62:
          uint64_t v5 = -131600;
          break;
        case 0x63:
          uint64_t v5 = -2103;
          break;
        case 0x64:
          uint64_t v5 = -2104;
          break;
        case 0x65:
          uint64_t v5 = -2107;
          break;
        case 0x66:
          uint64_t v5 = -2110;
          break;
        case 0x67:
          uint64_t v5 = -2111;
          break;
        case 0x68:
          uint64_t v5 = -2112;
          break;
        case 0x69:
          uint64_t v5 = -2123;
          break;
        case 0x6A:
          uint64_t v5 = -2124;
          break;
        case 0x6B:
          uint64_t v5 = -2125;
          break;
        case 0x6C:
          uint64_t v5 = -2126;
          break;
        case 0x6D:
          uint64_t v5 = -2127;
          break;
        case 0x6E:
          uint64_t v5 = -3101;
          break;
        case 0x6F:
          uint64_t v5 = -3102;
          break;
        case 0x70:
          uint64_t v5 = -3103;
          break;
        case 0x71:
          uint64_t v5 = -3104;
          break;
        case 0x72:
          uint64_t v5 = -3105;
          break;
        case 0x73:
          uint64_t v5 = -3106;
          break;
        case 0x74:
          uint64_t v5 = -3107;
          break;
        case 0x75:
          uint64_t v5 = -3108;
          break;
        case 0x76:
          uint64_t v5 = -3109;
          break;
        case 0x77:
          uint64_t v5 = -3110;
          break;
        case 0x78:
          uint64_t v5 = -3111;
          break;
        case 0x79:
          uint64_t v5 = -3112;
          break;
        case 0x7A:
          uint64_t v5 = -3113;
          break;
        case 0x7B:
          uint64_t v5 = -3151;
          break;
        case 0x7C:
          uint64_t v5 = -3152;
          break;
        case 0x7D:
          uint64_t v5 = -3153;
          break;
        case 0x7E:
          uint64_t v5 = -3154;
          break;
        case 0x7F:
          uint64_t v5 = -3155;
          break;
        case 0x80:
          uint64_t v5 = -3156;
          break;
        case 0x81:
          uint64_t v5 = -3157;
          break;
        case 0x82:
          uint64_t v5 = -3158;
          break;
        case 0x83:
          uint64_t v5 = -3159;
          break;
        case 0x84:
          uint64_t v5 = -3161;
          break;
        case 0x85:
          uint64_t v5 = -3162;
          break;
        case 0x86:
          uint64_t v5 = -3163;
          break;
        case 0x87:
          uint64_t v5 = -3164;
          break;
        case 0x88:
          uint64_t v5 = -3165;
          break;
        case 0x89:
          uint64_t v5 = -3166;
          break;
        case 0x8A:
          uint64_t v5 = -3167;
          break;
        case 0x8B:
          uint64_t v5 = -3168;
          break;
        case 0x8C:
          uint64_t v5 = -3169;
          break;
        case 0x8D:
          uint64_t v5 = -3170;
          break;
        case 0x8E:
          uint64_t v5 = -3171;
          break;
        case 0x8F:
          uint64_t v5 = -3172;
          break;
        case 0x90:
          uint64_t v5 = -3173;
          break;
        case 0x91:
          uint64_t v5 = -3174;
          break;
        case 0x92:
          uint64_t v5 = -3175;
          break;
        case 0x93:
          uint64_t v5 = -3176;
          break;
        case 0x94:
          uint64_t v5 = -3177;
          break;
        case 0x95:
          uint64_t v5 = -3178;
          break;
        case 0x96:
          uint64_t v5 = -3179;
          break;
        case 0x97:
          uint64_t v5 = -3180;
          break;
        case 0x98:
          uint64_t v5 = -3181;
          break;
        case 0x99:
          uint64_t v5 = -3182;
          break;
        case 0x9A:
          uint64_t v5 = -3183;
          break;
        case 0x9B:
          uint64_t v5 = -3184;
          break;
        case 0x9C:
          uint64_t v5 = -3185;
          break;
        case 0x9D:
          uint64_t v5 = -3186;
          break;
        case 0x9E:
          uint64_t v5 = -3187;
          break;
        case 0x9F:
          uint64_t v5 = -3188;
          break;
        case 0xA0:
          uint64_t v5 = -3189;
          break;
        case 0xA1:
          uint64_t v5 = -3300;
          break;
        case 0xA2:
          uint64_t v5 = -5108;
          break;
        case 0xA3:
          uint64_t v5 = -6009;
          break;
        case 0xA4:
          uint64_t v5 = -6010;
          break;
        case 0xA5:
          uint64_t v5 = -6102;
          break;
        case 0xA6:
          uint64_t v5 = -6103;
          break;
        case 0xA7:
          uint64_t v5 = -6104;
          break;
        case 0xA8:
          uint64_t v5 = -6105;
          break;
        case 0xA9:
          uint64_t v5 = -8001;
          break;
        case 0xAA:
          uint64_t v5 = -8301;
          break;
        case 0xAB:
          uint64_t v5 = -8304;
          break;
        case 0xAC:
          uint64_t v5 = -8400;
          break;
        case 0xAD:
          uint64_t v5 = -8401;
          break;
        case 0xAE:
          uint64_t v5 = -8403;
          break;
        case 0xAF:
          uint64_t v5 = -8404;
          break;
        case 0xB0:
          uint64_t v5 = -8428;
          break;
        case 0xB1:
          uint64_t v5 = -8429;
          break;
        case 0xB2:
          uint64_t v5 = -8433;
          break;
        case 0xB3:
          uint64_t v5 = -8434;
          break;
        case 0xB4:
          uint64_t v5 = -8500;
          break;
        case 0xB5:
          uint64_t v5 = -8501;
          break;
        case 0xB6:
          uint64_t v5 = -8502;
          break;
        case 0xB7:
          uint64_t v5 = -8503;
          break;
        case 0xB8:
          uint64_t v5 = -8504;
          break;
        case 0xB9:
          uint64_t v5 = -22200;
          break;
        case 0xBA:
          uint64_t v5 = -22201;
          break;
        case 0xBB:
          uint64_t v5 = -22202;
          break;
        case 0xBC:
          uint64_t v5 = -22203;
          break;
        case 0xBD:
          uint64_t v5 = -22204;
          break;
        case 0xBE:
          uint64_t v5 = -22205;
          break;
        case 0xBF:
          uint64_t v5 = -22206;
          break;
        case 0xC0:
          uint64_t v5 = -22207;
          break;
        case 0xC1:
          uint64_t v5 = -22208;
          break;
        case 0xC2:
          uint64_t v5 = -72200;
          break;
        case 0xC3:
          uint64_t v5 = -72201;
          break;
        case 0xC4:
          uint64_t v5 = -72202;
          break;
        case 0xC5:
          uint64_t v5 = -72203;
          break;
        case 0xC6:
          uint64_t v5 = -72204;
          break;
        case 0xC7:
          uint64_t v5 = -72205;
          break;
        case 0xC8:
          uint64_t v5 = -72206;
          break;
        case 0xC9:
          uint64_t v5 = -72207;
          break;
        case 0xCA:
          uint64_t v5 = -72208;
          break;
        case 0xCB:
          uint64_t v5 = -72209;
          break;
        case 0xCC:
          uint64_t v5 = -72210;
          break;
        case 0xCD:
          uint64_t v5 = -72211;
          break;
        case 0xCE:
          uint64_t v5 = -72780;
          break;
        case 0xCF:
          uint64_t v5 = -72781;
          break;
        case 0xD0:
          uint64_t v5 = -72782;
          break;
        default:
          break;
      }
      if (v2 != v5) {
        return 0;
      }
LABEL_22:
      char v4 = a2 == 2 && a1 == 2;
      if (a1 != 2 && a2 != 2) {
        char v4 = ((a2 & 1) == 0) ^ a1;
      }
      return v4 & 1;
  }
}

BOOL sub_214C80D1C(uint64_t a1, __int16 a2, uint64_t a3, unsigned int a4)
{
  switch(HIBYTE(a2))
  {
    case 0xD1:
      BOOL v4 = BYTE1(a4) == 209;
      goto LABEL_432;
    case 0xD2:
      BOOL v4 = BYTE1(a4) == 210;
      goto LABEL_432;
    case 0xD3:
      BOOL v4 = BYTE1(a4) == 211;
      goto LABEL_432;
    case 0xD4:
      BOOL v4 = BYTE1(a4) == 212;
      goto LABEL_432;
    case 0xD5:
      BOOL v4 = BYTE1(a4) == 213;
      goto LABEL_432;
    case 0xD6:
      BOOL v4 = BYTE1(a4) == 214;
      goto LABEL_432;
    case 0xD7:
      BOOL v4 = BYTE1(a4) == 215;
      goto LABEL_432;
    case 0xD8:
      BOOL v4 = BYTE1(a4) == 216;
      goto LABEL_432;
    case 0xD9:
      BOOL v4 = BYTE1(a4) == 217;
      goto LABEL_432;
    default:
      if ((BYTE1(a4) + 47) < 9u) {
        return 0;
      }
      uint64_t v6 = -1;
      switch(HIBYTE(a2))
      {
        case 0xD2u:
          uint64_t v6 = -2;
          break;
        case 0xD3u:
          uint64_t v6 = -3;
          break;
        case 0xD4u:
          uint64_t v6 = -4;
          break;
        case 0xD5u:
          uint64_t v6 = -5;
          break;
        case 0xD6u:
          uint64_t v6 = -6;
          break;
        case 0xD7u:
          uint64_t v6 = -7;
          break;
        case 0xD8u:
          uint64_t v6 = -8;
          break;
        case 0xD9u:
          uint64_t v6 = -9;
          break;
        case 0xDAu:
          uint64_t v6 = -10;
          break;
        case 0xDBu:
          uint64_t v6 = -11;
          break;
        case 0xDCu:
          uint64_t v6 = -12;
          break;
        case 0xDDu:
          uint64_t v6 = -13;
          break;
        case 0xDEu:
          uint64_t v6 = -14;
          break;
        case 0xDFu:
          uint64_t v6 = -15;
          break;
        case 0xE0u:
          uint64_t v6 = -16;
          break;
        case 0xE1u:
          uint64_t v6 = -17;
          break;
        case 0xE2u:
          uint64_t v6 = -18;
          break;
        case 0xE3u:
          uint64_t v6 = -19;
          break;
        case 0xE4u:
          uint64_t v6 = -20;
          break;
        case 0xE5u:
          uint64_t v6 = -21;
          break;
        case 0xE6u:
          uint64_t v6 = -22;
          break;
        case 0xE7u:
          uint64_t v6 = -28;
          break;
        case 0xE8u:
          uint64_t v6 = -29;
          break;
        case 0xE9u:
          uint64_t v6 = 200;
          break;
        case 0xEAu:
          uint64_t v6 = 20000;
          break;
        case 0xEBu:
          uint64_t v6 = 20001;
          break;
        case 0xECu:
          uint64_t v6 = 20100;
          break;
        case 0xEDu:
          uint64_t v6 = 40000;
          break;
        case 0xEEu:
          uint64_t v6 = 40010;
          break;
        case 0xEFu:
          uint64_t v6 = 40011;
          break;
        case 0xF0u:
          uint64_t v6 = 40012;
          break;
        case 0xF1u:
          uint64_t v6 = 40013;
          break;
        case 0xF2u:
          uint64_t v6 = 40014;
          break;
        case 0xF3u:
          uint64_t v6 = 40015;
          break;
        case 0xF4u:
          uint64_t v6 = 40020;
          break;
        case 0xF5u:
          uint64_t v6 = 40021;
          break;
        case 0xF6u:
          uint64_t v6 = 40022;
          break;
        case 0xF7u:
          uint64_t v6 = 40023;
          break;
        case 0xF8u:
          uint64_t v6 = 40024;
          break;
        case 0xF9u:
          uint64_t v6 = 40025;
          break;
        case 0xFAu:
          uint64_t v6 = 40026;
          break;
        case 0xFBu:
          uint64_t v6 = 40027;
          break;
        case 0xFCu:
          uint64_t v6 = 40028;
          break;
        case 0xFDu:
          uint64_t v6 = 40029;
          break;
        case 0xFEu:
          uint64_t v6 = 40030;
          break;
        case 0xFFu:
          uint64_t v6 = 40101;
          break;
        case 0u:
          uint64_t v6 = 40102;
          break;
        case 1u:
          uint64_t v6 = 40200;
          break;
        case 2u:
          uint64_t v6 = 40201;
          break;
        case 3u:
          uint64_t v6 = 40205;
          break;
        case 4u:
          uint64_t v6 = 40401;
          break;
        case 5u:
          uint64_t v6 = 40402;
          break;
        case 6u:
          uint64_t v6 = 40403;
          break;
        case 7u:
          uint64_t v6 = 40404;
          break;
        case 8u:
          uint64_t v6 = 40500;
          break;
        case 9u:
          uint64_t v6 = 40600;
          break;
        case 0xAu:
          uint64_t v6 = 40601;
          break;
        case 0xBu:
          uint64_t v6 = 50000;
          break;
        case 0xCu:
          uint64_t v6 = 50001;
          break;
        case 0xDu:
          uint64_t v6 = 50002;
          break;
        case 0xEu:
          uint64_t v6 = 99991;
          break;
        case 0xFu:
          uint64_t v6 = 99992;
          break;
        case 0x10u:
          uint64_t v6 = 99993;
          break;
        case 0x11u:
          uint64_t v6 = -1101;
          break;
        case 0x12u:
          uint64_t v6 = -1102;
          break;
        case 0x13u:
          uint64_t v6 = -1103;
          break;
        case 0x14u:
          uint64_t v6 = -1104;
          break;
        case 0x15u:
          uint64_t v6 = -1110;
          break;
        case 0x16u:
          uint64_t v6 = -1111;
          break;
        case 0x17u:
          uint64_t v6 = -1112;
          break;
        case 0x18u:
          uint64_t v6 = -1113;
          break;
        case 0x19u:
          uint64_t v6 = -1114;
          break;
        case 0x1Au:
          uint64_t v6 = -1115;
          break;
        case 0x1Bu:
          uint64_t v6 = -1116;
          break;
        case 0x1Cu:
          uint64_t v6 = -1117;
          break;
        case 0x1Du:
          uint64_t v6 = -1118;
          break;
        case 0x1Eu:
          uint64_t v6 = -1119;
          break;
        case 0x1Fu:
          uint64_t v6 = -1201;
          break;
        case 0x20u:
          uint64_t v6 = -1202;
          break;
        case 0x21u:
          uint64_t v6 = -1203;
          break;
        case 0x22u:
          uint64_t v6 = -1204;
          break;
        case 0x23u:
          uint64_t v6 = -1402;
          break;
        case 0x24u:
          uint64_t v6 = -1403;
          break;
        case 0x25u:
          uint64_t v6 = -1404;
          break;
        case 0x26u:
          uint64_t v6 = -1301;
          break;
        case 0x27u:
          uint64_t v6 = -1302;
          break;
        case 0x28u:
          uint64_t v6 = -1303;
          break;
        case 0x29u:
          uint64_t v6 = -1304;
          break;
        case 0x2Au:
          uint64_t v6 = -1305;
          break;
        case 0x2Bu:
          uint64_t v6 = -1306;
          break;
        case 0x2Cu:
          uint64_t v6 = -1307;
          break;
        case 0x2Du:
          uint64_t v6 = -1308;
          break;
        case 0x2Eu:
          uint64_t v6 = -1309;
          break;
        case 0x2Fu:
          uint64_t v6 = -1310;
          break;
        case 0x30u:
          uint64_t v6 = -1315;
          break;
        case 0x31u:
          uint64_t v6 = -1316;
          break;
        case 0x32u:
          uint64_t v6 = -1317;
          break;
        case 0x33u:
          uint64_t v6 = -131600;
          break;
        case 0x34u:
          uint64_t v6 = -2103;
          break;
        case 0x35u:
          uint64_t v6 = -2104;
          break;
        case 0x36u:
          uint64_t v6 = -2107;
          break;
        case 0x37u:
          uint64_t v6 = -2110;
          break;
        case 0x38u:
          uint64_t v6 = -2111;
          break;
        case 0x39u:
          uint64_t v6 = -2112;
          break;
        case 0x3Au:
          uint64_t v6 = -2123;
          break;
        case 0x3Bu:
          uint64_t v6 = -2124;
          break;
        case 0x3Cu:
          uint64_t v6 = -2125;
          break;
        case 0x3Du:
          uint64_t v6 = -2126;
          break;
        case 0x3Eu:
          uint64_t v6 = -2127;
          break;
        case 0x3Fu:
          uint64_t v6 = -3101;
          break;
        case 0x40u:
          uint64_t v6 = -3102;
          break;
        case 0x41u:
          uint64_t v6 = -3103;
          break;
        case 0x42u:
          uint64_t v6 = -3104;
          break;
        case 0x43u:
          uint64_t v6 = -3105;
          break;
        case 0x44u:
          uint64_t v6 = -3106;
          break;
        case 0x45u:
          uint64_t v6 = -3107;
          break;
        case 0x46u:
          uint64_t v6 = -3108;
          break;
        case 0x47u:
          uint64_t v6 = -3109;
          break;
        case 0x48u:
          uint64_t v6 = -3110;
          break;
        case 0x49u:
          uint64_t v6 = -3111;
          break;
        case 0x4Au:
          uint64_t v6 = -3112;
          break;
        case 0x4Bu:
          uint64_t v6 = -3113;
          break;
        case 0x4Cu:
          uint64_t v6 = -3151;
          break;
        case 0x4Du:
          uint64_t v6 = -3152;
          break;
        case 0x4Eu:
          uint64_t v6 = -3153;
          break;
        case 0x4Fu:
          uint64_t v6 = -3154;
          break;
        case 0x50u:
          uint64_t v6 = -3155;
          break;
        case 0x51u:
          uint64_t v6 = -3156;
          break;
        case 0x52u:
          uint64_t v6 = -3157;
          break;
        case 0x53u:
          uint64_t v6 = -3158;
          break;
        case 0x54u:
          uint64_t v6 = -3159;
          break;
        case 0x55u:
          uint64_t v6 = -3161;
          break;
        case 0x56u:
          uint64_t v6 = -3162;
          break;
        case 0x57u:
          uint64_t v6 = -3163;
          break;
        case 0x58u:
          uint64_t v6 = -3164;
          break;
        case 0x59u:
          uint64_t v6 = -3165;
          break;
        case 0x5Au:
          uint64_t v6 = -3166;
          break;
        case 0x5Bu:
          uint64_t v6 = -3167;
          break;
        case 0x5Cu:
          uint64_t v6 = -3168;
          break;
        case 0x5Du:
          uint64_t v6 = -3169;
          break;
        case 0x5Eu:
          uint64_t v6 = -3170;
          break;
        case 0x5Fu:
          uint64_t v6 = -3171;
          break;
        case 0x60u:
          uint64_t v6 = -3172;
          break;
        case 0x61u:
          uint64_t v6 = -3173;
          break;
        case 0x62u:
          uint64_t v6 = -3174;
          break;
        case 0x63u:
          uint64_t v6 = -3175;
          break;
        case 0x64u:
          uint64_t v6 = -3176;
          break;
        case 0x65u:
          uint64_t v6 = -3177;
          break;
        case 0x66u:
          uint64_t v6 = -3178;
          break;
        case 0x67u:
          uint64_t v6 = -3179;
          break;
        case 0x68u:
          uint64_t v6 = -3180;
          break;
        case 0x69u:
          uint64_t v6 = -3181;
          break;
        case 0x6Au:
          uint64_t v6 = -3182;
          break;
        case 0x6Bu:
          uint64_t v6 = -3183;
          break;
        case 0x6Cu:
          uint64_t v6 = -3184;
          break;
        case 0x6Du:
          uint64_t v6 = -3185;
          break;
        case 0x6Eu:
          uint64_t v6 = -3186;
          break;
        case 0x6Fu:
          uint64_t v6 = -3187;
          break;
        case 0x70u:
          uint64_t v6 = -3188;
          break;
        case 0x71u:
          uint64_t v6 = -3189;
          break;
        case 0x72u:
          uint64_t v6 = -3300;
          break;
        case 0x73u:
          uint64_t v6 = -5108;
          break;
        case 0x74u:
          uint64_t v6 = -6009;
          break;
        case 0x75u:
          uint64_t v6 = -6010;
          break;
        case 0x76u:
          uint64_t v6 = -6102;
          break;
        case 0x77u:
          uint64_t v6 = -6103;
          break;
        case 0x78u:
          uint64_t v6 = -6104;
          break;
        case 0x79u:
          uint64_t v6 = -6105;
          break;
        case 0x7Au:
          uint64_t v6 = -8001;
          break;
        case 0x7Bu:
          uint64_t v6 = -8301;
          break;
        case 0x7Cu:
          uint64_t v6 = -8304;
          break;
        case 0x7Du:
          uint64_t v6 = -8400;
          break;
        case 0x7Eu:
          uint64_t v6 = -8401;
          break;
        case 0x7Fu:
          uint64_t v6 = -8403;
          break;
        case 0x80u:
          uint64_t v6 = -8404;
          break;
        case 0x81u:
          uint64_t v6 = -8428;
          break;
        case 0x82u:
          uint64_t v6 = -8429;
          break;
        case 0x83u:
          uint64_t v6 = -8433;
          break;
        case 0x84u:
          uint64_t v6 = -8434;
          break;
        case 0x85u:
          uint64_t v6 = -8500;
          break;
        case 0x86u:
          uint64_t v6 = -8501;
          break;
        case 0x87u:
          uint64_t v6 = -8502;
          break;
        case 0x88u:
          uint64_t v6 = -8503;
          break;
        case 0x89u:
          uint64_t v6 = -8504;
          break;
        case 0x8Au:
          uint64_t v6 = -22200;
          break;
        case 0x8Bu:
          uint64_t v6 = -22201;
          break;
        case 0x8Cu:
          uint64_t v6 = -22202;
          break;
        case 0x8Du:
          uint64_t v6 = -22203;
          break;
        case 0x8Eu:
          uint64_t v6 = -22204;
          break;
        case 0x8Fu:
          uint64_t v6 = -22205;
          break;
        case 0x90u:
          uint64_t v6 = -22206;
          break;
        case 0x91u:
          uint64_t v6 = -22207;
          break;
        case 0x92u:
          uint64_t v6 = -22208;
          break;
        case 0x93u:
          uint64_t v6 = -72200;
          break;
        case 0x94u:
          uint64_t v6 = -72201;
          break;
        case 0x95u:
          uint64_t v6 = -72202;
          break;
        case 0x96u:
          uint64_t v6 = -72203;
          break;
        case 0x97u:
          uint64_t v6 = -72204;
          break;
        case 0x98u:
          uint64_t v6 = -72205;
          break;
        case 0x99u:
          uint64_t v6 = -72206;
          break;
        case 0x9Au:
          uint64_t v6 = -72207;
          break;
        case 0x9Bu:
          uint64_t v6 = -72208;
          break;
        case 0x9Cu:
          uint64_t v6 = -72209;
          break;
        case 0x9Du:
          uint64_t v6 = -72210;
          break;
        case 0x9Eu:
          uint64_t v6 = -72211;
          break;
        case 0x9Fu:
          uint64_t v6 = -72780;
          break;
        case 0xA0u:
          uint64_t v6 = -72781;
          break;
        case 0xA1u:
          uint64_t v6 = -72782;
          break;
        default:
          break;
      }
      uint64_t v7 = -1;
      switch(BYTE1(a4))
      {
        case 1:
          uint64_t v7 = -2;
          break;
        case 2:
          uint64_t v7 = -3;
          break;
        case 3:
          uint64_t v7 = -4;
          break;
        case 4:
          uint64_t v7 = -5;
          break;
        case 5:
          uint64_t v7 = -6;
          break;
        case 6:
          uint64_t v7 = -7;
          break;
        case 7:
          uint64_t v7 = -8;
          break;
        case 8:
          uint64_t v7 = -9;
          break;
        case 9:
          uint64_t v7 = -10;
          break;
        case 0xA:
          uint64_t v7 = -11;
          break;
        case 0xB:
          uint64_t v7 = -12;
          break;
        case 0xC:
          uint64_t v7 = -13;
          break;
        case 0xD:
          uint64_t v7 = -14;
          break;
        case 0xE:
          uint64_t v7 = -15;
          break;
        case 0xF:
          uint64_t v7 = -16;
          break;
        case 0x10:
          uint64_t v7 = -17;
          break;
        case 0x11:
          uint64_t v7 = -18;
          break;
        case 0x12:
          uint64_t v7 = -19;
          break;
        case 0x13:
          uint64_t v7 = -20;
          break;
        case 0x14:
          uint64_t v7 = -21;
          break;
        case 0x15:
          uint64_t v7 = -22;
          break;
        case 0x16:
          uint64_t v7 = -28;
          break;
        case 0x17:
          uint64_t v7 = -29;
          break;
        case 0x18:
          uint64_t v7 = 200;
          break;
        case 0x19:
          uint64_t v7 = 20000;
          break;
        case 0x1A:
          uint64_t v7 = 20001;
          break;
        case 0x1B:
          uint64_t v7 = 20100;
          break;
        case 0x1C:
          uint64_t v7 = 40000;
          break;
        case 0x1D:
          uint64_t v7 = 40010;
          break;
        case 0x1E:
          uint64_t v7 = 40011;
          break;
        case 0x1F:
          uint64_t v7 = 40012;
          break;
        case 0x20:
          uint64_t v7 = 40013;
          break;
        case 0x21:
          uint64_t v7 = 40014;
          break;
        case 0x22:
          uint64_t v7 = 40015;
          break;
        case 0x23:
          uint64_t v7 = 40020;
          break;
        case 0x24:
          uint64_t v7 = 40021;
          break;
        case 0x25:
          uint64_t v7 = 40022;
          break;
        case 0x26:
          uint64_t v7 = 40023;
          break;
        case 0x27:
          uint64_t v7 = 40024;
          break;
        case 0x28:
          uint64_t v7 = 40025;
          break;
        case 0x29:
          uint64_t v7 = 40026;
          break;
        case 0x2A:
          uint64_t v7 = 40027;
          break;
        case 0x2B:
          uint64_t v7 = 40028;
          break;
        case 0x2C:
          uint64_t v7 = 40029;
          break;
        case 0x2D:
          uint64_t v7 = 40030;
          break;
        case 0x2E:
          uint64_t v7 = 40101;
          break;
        case 0x2F:
          uint64_t v7 = 40102;
          break;
        case 0x30:
          uint64_t v7 = 40200;
          break;
        case 0x31:
          uint64_t v7 = 40201;
          break;
        case 0x32:
          uint64_t v7 = 40205;
          break;
        case 0x33:
          uint64_t v7 = 40401;
          break;
        case 0x34:
          uint64_t v7 = 40402;
          break;
        case 0x35:
          uint64_t v7 = 40403;
          break;
        case 0x36:
          uint64_t v7 = 40404;
          break;
        case 0x37:
          uint64_t v7 = 40500;
          break;
        case 0x38:
          uint64_t v7 = 40600;
          break;
        case 0x39:
          uint64_t v7 = 40601;
          break;
        case 0x3A:
          uint64_t v7 = 50000;
          break;
        case 0x3B:
          uint64_t v7 = 50001;
          break;
        case 0x3C:
          uint64_t v7 = 50002;
          break;
        case 0x3D:
          uint64_t v7 = 99991;
          break;
        case 0x3E:
          uint64_t v7 = 99992;
          break;
        case 0x3F:
          uint64_t v7 = 99993;
          break;
        case 0x40:
          uint64_t v7 = -1101;
          break;
        case 0x41:
          uint64_t v7 = -1102;
          break;
        case 0x42:
          uint64_t v7 = -1103;
          break;
        case 0x43:
          uint64_t v7 = -1104;
          break;
        case 0x44:
          uint64_t v7 = -1110;
          break;
        case 0x45:
          uint64_t v7 = -1111;
          break;
        case 0x46:
          uint64_t v7 = -1112;
          break;
        case 0x47:
          uint64_t v7 = -1113;
          break;
        case 0x48:
          uint64_t v7 = -1114;
          break;
        case 0x49:
          uint64_t v7 = -1115;
          break;
        case 0x4A:
          uint64_t v7 = -1116;
          break;
        case 0x4B:
          uint64_t v7 = -1117;
          break;
        case 0x4C:
          uint64_t v7 = -1118;
          break;
        case 0x4D:
          uint64_t v7 = -1119;
          break;
        case 0x4E:
          uint64_t v7 = -1201;
          break;
        case 0x4F:
          uint64_t v7 = -1202;
          break;
        case 0x50:
          uint64_t v7 = -1203;
          break;
        case 0x51:
          uint64_t v7 = -1204;
          break;
        case 0x52:
          uint64_t v7 = -1402;
          break;
        case 0x53:
          uint64_t v7 = -1403;
          break;
        case 0x54:
          uint64_t v7 = -1404;
          break;
        case 0x55:
          uint64_t v7 = -1301;
          break;
        case 0x56:
          uint64_t v7 = -1302;
          break;
        case 0x57:
          uint64_t v7 = -1303;
          break;
        case 0x58:
          uint64_t v7 = -1304;
          break;
        case 0x59:
          uint64_t v7 = -1305;
          break;
        case 0x5A:
          uint64_t v7 = -1306;
          break;
        case 0x5B:
          uint64_t v7 = -1307;
          break;
        case 0x5C:
          uint64_t v7 = -1308;
          break;
        case 0x5D:
          uint64_t v7 = -1309;
          break;
        case 0x5E:
          uint64_t v7 = -1310;
          break;
        case 0x5F:
          uint64_t v7 = -1315;
          break;
        case 0x60:
          uint64_t v7 = -1316;
          break;
        case 0x61:
          uint64_t v7 = -1317;
          break;
        case 0x62:
          uint64_t v7 = -131600;
          break;
        case 0x63:
          uint64_t v7 = -2103;
          break;
        case 0x64:
          uint64_t v7 = -2104;
          break;
        case 0x65:
          uint64_t v7 = -2107;
          break;
        case 0x66:
          uint64_t v7 = -2110;
          break;
        case 0x67:
          uint64_t v7 = -2111;
          break;
        case 0x68:
          uint64_t v7 = -2112;
          break;
        case 0x69:
          uint64_t v7 = -2123;
          break;
        case 0x6A:
          uint64_t v7 = -2124;
          break;
        case 0x6B:
          uint64_t v7 = -2125;
          break;
        case 0x6C:
          uint64_t v7 = -2126;
          break;
        case 0x6D:
          uint64_t v7 = -2127;
          break;
        case 0x6E:
          uint64_t v7 = -3101;
          break;
        case 0x6F:
          uint64_t v7 = -3102;
          break;
        case 0x70:
          uint64_t v7 = -3103;
          break;
        case 0x71:
          uint64_t v7 = -3104;
          break;
        case 0x72:
          uint64_t v7 = -3105;
          break;
        case 0x73:
          uint64_t v7 = -3106;
          break;
        case 0x74:
          uint64_t v7 = -3107;
          break;
        case 0x75:
          uint64_t v7 = -3108;
          break;
        case 0x76:
          uint64_t v7 = -3109;
          break;
        case 0x77:
          uint64_t v7 = -3110;
          break;
        case 0x78:
          uint64_t v7 = -3111;
          break;
        case 0x79:
          uint64_t v7 = -3112;
          break;
        case 0x7A:
          uint64_t v7 = -3113;
          break;
        case 0x7B:
          uint64_t v7 = -3151;
          break;
        case 0x7C:
          uint64_t v7 = -3152;
          break;
        case 0x7D:
          uint64_t v7 = -3153;
          break;
        case 0x7E:
          uint64_t v7 = -3154;
          break;
        case 0x7F:
          uint64_t v7 = -3155;
          break;
        case 0x80:
          uint64_t v7 = -3156;
          break;
        case 0x81:
          uint64_t v7 = -3157;
          break;
        case 0x82:
          uint64_t v7 = -3158;
          break;
        case 0x83:
          uint64_t v7 = -3159;
          break;
        case 0x84:
          uint64_t v7 = -3161;
          break;
        case 0x85:
          uint64_t v7 = -3162;
          break;
        case 0x86:
          uint64_t v7 = -3163;
          break;
        case 0x87:
          uint64_t v7 = -3164;
          break;
        case 0x88:
          uint64_t v7 = -3165;
          break;
        case 0x89:
          uint64_t v7 = -3166;
          break;
        case 0x8A:
          uint64_t v7 = -3167;
          break;
        case 0x8B:
          uint64_t v7 = -3168;
          break;
        case 0x8C:
          uint64_t v7 = -3169;
          break;
        case 0x8D:
          uint64_t v7 = -3170;
          break;
        case 0x8E:
          uint64_t v7 = -3171;
          break;
        case 0x8F:
          uint64_t v7 = -3172;
          break;
        case 0x90:
          uint64_t v7 = -3173;
          break;
        case 0x91:
          uint64_t v7 = -3174;
          break;
        case 0x92:
          uint64_t v7 = -3175;
          break;
        case 0x93:
          uint64_t v7 = -3176;
          break;
        case 0x94:
          uint64_t v7 = -3177;
          break;
        case 0x95:
          uint64_t v7 = -3178;
          break;
        case 0x96:
          uint64_t v7 = -3179;
          break;
        case 0x97:
          uint64_t v7 = -3180;
          break;
        case 0x98:
          uint64_t v7 = -3181;
          break;
        case 0x99:
          uint64_t v7 = -3182;
          break;
        case 0x9A:
          uint64_t v7 = -3183;
          break;
        case 0x9B:
          uint64_t v7 = -3184;
          break;
        case 0x9C:
          uint64_t v7 = -3185;
          break;
        case 0x9D:
          uint64_t v7 = -3186;
          break;
        case 0x9E:
          uint64_t v7 = -3187;
          break;
        case 0x9F:
          uint64_t v7 = -3188;
          break;
        case 0xA0:
          uint64_t v7 = -3189;
          break;
        case 0xA1:
          uint64_t v7 = -3300;
          break;
        case 0xA2:
          uint64_t v7 = -5108;
          break;
        case 0xA3:
          uint64_t v7 = -6009;
          break;
        case 0xA4:
          uint64_t v7 = -6010;
          break;
        case 0xA5:
          uint64_t v7 = -6102;
          break;
        case 0xA6:
          uint64_t v7 = -6103;
          break;
        case 0xA7:
          uint64_t v7 = -6104;
          break;
        case 0xA8:
          uint64_t v7 = -6105;
          break;
        case 0xA9:
          uint64_t v7 = -8001;
          break;
        case 0xAA:
          uint64_t v7 = -8301;
          break;
        case 0xAB:
          uint64_t v7 = -8304;
          break;
        case 0xAC:
          uint64_t v7 = -8400;
          break;
        case 0xAD:
          uint64_t v7 = -8401;
          break;
        case 0xAE:
          uint64_t v7 = -8403;
          break;
        case 0xAF:
          uint64_t v7 = -8404;
          break;
        case 0xB0:
          uint64_t v7 = -8428;
          break;
        case 0xB1:
          uint64_t v7 = -8429;
          break;
        case 0xB2:
          uint64_t v7 = -8433;
          break;
        case 0xB3:
          uint64_t v7 = -8434;
          break;
        case 0xB4:
          uint64_t v7 = -8500;
          break;
        case 0xB5:
          uint64_t v7 = -8501;
          break;
        case 0xB6:
          uint64_t v7 = -8502;
          break;
        case 0xB7:
          uint64_t v7 = -8503;
          break;
        case 0xB8:
          uint64_t v7 = -8504;
          break;
        case 0xB9:
          uint64_t v7 = -22200;
          break;
        case 0xBA:
          uint64_t v7 = -22201;
          break;
        case 0xBB:
          uint64_t v7 = -22202;
          break;
        case 0xBC:
          uint64_t v7 = -22203;
          break;
        case 0xBD:
          uint64_t v7 = -22204;
          break;
        case 0xBE:
          uint64_t v7 = -22205;
          break;
        case 0xBF:
          uint64_t v7 = -22206;
          break;
        case 0xC0:
          uint64_t v7 = -22207;
          break;
        case 0xC1:
          uint64_t v7 = -22208;
          break;
        case 0xC2:
          uint64_t v7 = -72200;
          break;
        case 0xC3:
          uint64_t v7 = -72201;
          break;
        case 0xC4:
          uint64_t v7 = -72202;
          break;
        case 0xC5:
          uint64_t v7 = -72203;
          break;
        case 0xC6:
          uint64_t v7 = -72204;
          break;
        case 0xC7:
          uint64_t v7 = -72205;
          break;
        case 0xC8:
          uint64_t v7 = -72206;
          break;
        case 0xC9:
          uint64_t v7 = -72207;
          break;
        case 0xCA:
          uint64_t v7 = -72208;
          break;
        case 0xCB:
          uint64_t v7 = -72209;
          break;
        case 0xCC:
          uint64_t v7 = -72210;
          break;
        case 0xCD:
          uint64_t v7 = -72211;
          break;
        case 0xCE:
          uint64_t v7 = -72780;
          break;
        case 0xCF:
          uint64_t v7 = -72781;
          break;
        case 0xD0:
          uint64_t v7 = -72782;
          break;
        default:
          break;
      }
      BOOL v4 = v6 == v7;
LABEL_432:
      int v8 = v4;
      uint64_t v9 = v8 & a4;
      if (!v4 || (a2 & 1) != 0) {
        return v9;
      }
      return (a4 & 1) == 0 && a1 == a3;
  }
}

BOOL sub_214C82314(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  switch(HIBYTE(a2))
  {
    case 0xD1:
      BOOL v4 = HIBYTE(a4) == 209;
      goto LABEL_432;
    case 0xD2:
      BOOL v4 = HIBYTE(a4) == 210;
      goto LABEL_432;
    case 0xD3:
      BOOL v4 = HIBYTE(a4) == 211;
      goto LABEL_432;
    case 0xD4:
      BOOL v4 = HIBYTE(a4) == 212;
      goto LABEL_432;
    case 0xD5:
      BOOL v4 = HIBYTE(a4) == 213;
      goto LABEL_432;
    case 0xD6:
      BOOL v4 = HIBYTE(a4) == 214;
      goto LABEL_432;
    case 0xD7:
      BOOL v4 = HIBYTE(a4) == 215;
      goto LABEL_432;
    case 0xD8:
      BOOL v4 = HIBYTE(a4) == 216;
      goto LABEL_432;
    case 0xD9:
      BOOL v4 = HIBYTE(a4) == 217;
      goto LABEL_432;
    default:
      if ((HIBYTE(a4) + 47) < 9u) {
        return 0;
      }
      uint64_t v6 = -1;
      switch(HIBYTE(a2))
      {
        case 0xD2u:
          uint64_t v6 = -2;
          break;
        case 0xD3u:
          uint64_t v6 = -3;
          break;
        case 0xD4u:
          uint64_t v6 = -4;
          break;
        case 0xD5u:
          uint64_t v6 = -5;
          break;
        case 0xD6u:
          uint64_t v6 = -6;
          break;
        case 0xD7u:
          uint64_t v6 = -7;
          break;
        case 0xD8u:
          uint64_t v6 = -8;
          break;
        case 0xD9u:
          uint64_t v6 = -9;
          break;
        case 0xDAu:
          uint64_t v6 = -10;
          break;
        case 0xDBu:
          uint64_t v6 = -11;
          break;
        case 0xDCu:
          uint64_t v6 = -12;
          break;
        case 0xDDu:
          uint64_t v6 = -13;
          break;
        case 0xDEu:
          uint64_t v6 = -14;
          break;
        case 0xDFu:
          uint64_t v6 = -15;
          break;
        case 0xE0u:
          uint64_t v6 = -16;
          break;
        case 0xE1u:
          uint64_t v6 = -17;
          break;
        case 0xE2u:
          uint64_t v6 = -18;
          break;
        case 0xE3u:
          uint64_t v6 = -19;
          break;
        case 0xE4u:
          uint64_t v6 = -20;
          break;
        case 0xE5u:
          uint64_t v6 = -21;
          break;
        case 0xE6u:
          uint64_t v6 = -22;
          break;
        case 0xE7u:
          uint64_t v6 = -28;
          break;
        case 0xE8u:
          uint64_t v6 = -29;
          break;
        case 0xE9u:
          uint64_t v6 = 200;
          break;
        case 0xEAu:
          uint64_t v6 = 20000;
          break;
        case 0xEBu:
          uint64_t v6 = 20001;
          break;
        case 0xECu:
          uint64_t v6 = 20100;
          break;
        case 0xEDu:
          uint64_t v6 = 40000;
          break;
        case 0xEEu:
          uint64_t v6 = 40010;
          break;
        case 0xEFu:
          uint64_t v6 = 40011;
          break;
        case 0xF0u:
          uint64_t v6 = 40012;
          break;
        case 0xF1u:
          uint64_t v6 = 40013;
          break;
        case 0xF2u:
          uint64_t v6 = 40014;
          break;
        case 0xF3u:
          uint64_t v6 = 40015;
          break;
        case 0xF4u:
          uint64_t v6 = 40020;
          break;
        case 0xF5u:
          uint64_t v6 = 40021;
          break;
        case 0xF6u:
          uint64_t v6 = 40022;
          break;
        case 0xF7u:
          uint64_t v6 = 40023;
          break;
        case 0xF8u:
          uint64_t v6 = 40024;
          break;
        case 0xF9u:
          uint64_t v6 = 40025;
          break;
        case 0xFAu:
          uint64_t v6 = 40026;
          break;
        case 0xFBu:
          uint64_t v6 = 40027;
          break;
        case 0xFCu:
          uint64_t v6 = 40028;
          break;
        case 0xFDu:
          uint64_t v6 = 40029;
          break;
        case 0xFEu:
          uint64_t v6 = 40030;
          break;
        case 0xFFu:
          uint64_t v6 = 40101;
          break;
        case 0u:
          uint64_t v6 = 40102;
          break;
        case 1u:
          uint64_t v6 = 40200;
          break;
        case 2u:
          uint64_t v6 = 40201;
          break;
        case 3u:
          uint64_t v6 = 40205;
          break;
        case 4u:
          uint64_t v6 = 40401;
          break;
        case 5u:
          uint64_t v6 = 40402;
          break;
        case 6u:
          uint64_t v6 = 40403;
          break;
        case 7u:
          uint64_t v6 = 40404;
          break;
        case 8u:
          uint64_t v6 = 40500;
          break;
        case 9u:
          uint64_t v6 = 40600;
          break;
        case 0xAu:
          uint64_t v6 = 40601;
          break;
        case 0xBu:
          uint64_t v6 = 50000;
          break;
        case 0xCu:
          uint64_t v6 = 50001;
          break;
        case 0xDu:
          uint64_t v6 = 50002;
          break;
        case 0xEu:
          uint64_t v6 = 99991;
          break;
        case 0xFu:
          uint64_t v6 = 99992;
          break;
        case 0x10u:
          uint64_t v6 = 99993;
          break;
        case 0x11u:
          uint64_t v6 = -1101;
          break;
        case 0x12u:
          uint64_t v6 = -1102;
          break;
        case 0x13u:
          uint64_t v6 = -1103;
          break;
        case 0x14u:
          uint64_t v6 = -1104;
          break;
        case 0x15u:
          uint64_t v6 = -1110;
          break;
        case 0x16u:
          uint64_t v6 = -1111;
          break;
        case 0x17u:
          uint64_t v6 = -1112;
          break;
        case 0x18u:
          uint64_t v6 = -1113;
          break;
        case 0x19u:
          uint64_t v6 = -1114;
          break;
        case 0x1Au:
          uint64_t v6 = -1115;
          break;
        case 0x1Bu:
          uint64_t v6 = -1116;
          break;
        case 0x1Cu:
          uint64_t v6 = -1117;
          break;
        case 0x1Du:
          uint64_t v6 = -1118;
          break;
        case 0x1Eu:
          uint64_t v6 = -1119;
          break;
        case 0x1Fu:
          uint64_t v6 = -1201;
          break;
        case 0x20u:
          uint64_t v6 = -1202;
          break;
        case 0x21u:
          uint64_t v6 = -1203;
          break;
        case 0x22u:
          uint64_t v6 = -1204;
          break;
        case 0x23u:
          uint64_t v6 = -1402;
          break;
        case 0x24u:
          uint64_t v6 = -1403;
          break;
        case 0x25u:
          uint64_t v6 = -1404;
          break;
        case 0x26u:
          uint64_t v6 = -1301;
          break;
        case 0x27u:
          uint64_t v6 = -1302;
          break;
        case 0x28u:
          uint64_t v6 = -1303;
          break;
        case 0x29u:
          uint64_t v6 = -1304;
          break;
        case 0x2Au:
          uint64_t v6 = -1305;
          break;
        case 0x2Bu:
          uint64_t v6 = -1306;
          break;
        case 0x2Cu:
          uint64_t v6 = -1307;
          break;
        case 0x2Du:
          uint64_t v6 = -1308;
          break;
        case 0x2Eu:
          uint64_t v6 = -1309;
          break;
        case 0x2Fu:
          uint64_t v6 = -1310;
          break;
        case 0x30u:
          uint64_t v6 = -1315;
          break;
        case 0x31u:
          uint64_t v6 = -1316;
          break;
        case 0x32u:
          uint64_t v6 = -1317;
          break;
        case 0x33u:
          uint64_t v6 = -131600;
          break;
        case 0x34u:
          uint64_t v6 = -2103;
          break;
        case 0x35u:
          uint64_t v6 = -2104;
          break;
        case 0x36u:
          uint64_t v6 = -2107;
          break;
        case 0x37u:
          uint64_t v6 = -2110;
          break;
        case 0x38u:
          uint64_t v6 = -2111;
          break;
        case 0x39u:
          uint64_t v6 = -2112;
          break;
        case 0x3Au:
          uint64_t v6 = -2123;
          break;
        case 0x3Bu:
          uint64_t v6 = -2124;
          break;
        case 0x3Cu:
          uint64_t v6 = -2125;
          break;
        case 0x3Du:
          uint64_t v6 = -2126;
          break;
        case 0x3Eu:
          uint64_t v6 = -2127;
          break;
        case 0x3Fu:
          uint64_t v6 = -3101;
          break;
        case 0x40u:
          uint64_t v6 = -3102;
          break;
        case 0x41u:
          uint64_t v6 = -3103;
          break;
        case 0x42u:
          uint64_t v6 = -3104;
          break;
        case 0x43u:
          uint64_t v6 = -3105;
          break;
        case 0x44u:
          uint64_t v6 = -3106;
          break;
        case 0x45u:
          uint64_t v6 = -3107;
          break;
        case 0x46u:
          uint64_t v6 = -3108;
          break;
        case 0x47u:
          uint64_t v6 = -3109;
          break;
        case 0x48u:
          uint64_t v6 = -3110;
          break;
        case 0x49u:
          uint64_t v6 = -3111;
          break;
        case 0x4Au:
          uint64_t v6 = -3112;
          break;
        case 0x4Bu:
          uint64_t v6 = -3113;
          break;
        case 0x4Cu:
          uint64_t v6 = -3151;
          break;
        case 0x4Du:
          uint64_t v6 = -3152;
          break;
        case 0x4Eu:
          uint64_t v6 = -3153;
          break;
        case 0x4Fu:
          uint64_t v6 = -3154;
          break;
        case 0x50u:
          uint64_t v6 = -3155;
          break;
        case 0x51u:
          uint64_t v6 = -3156;
          break;
        case 0x52u:
          uint64_t v6 = -3157;
          break;
        case 0x53u:
          uint64_t v6 = -3158;
          break;
        case 0x54u:
          uint64_t v6 = -3159;
          break;
        case 0x55u:
          uint64_t v6 = -3161;
          break;
        case 0x56u:
          uint64_t v6 = -3162;
          break;
        case 0x57u:
          uint64_t v6 = -3163;
          break;
        case 0x58u:
          uint64_t v6 = -3164;
          break;
        case 0x59u:
          uint64_t v6 = -3165;
          break;
        case 0x5Au:
          uint64_t v6 = -3166;
          break;
        case 0x5Bu:
          uint64_t v6 = -3167;
          break;
        case 0x5Cu:
          uint64_t v6 = -3168;
          break;
        case 0x5Du:
          uint64_t v6 = -3169;
          break;
        case 0x5Eu:
          uint64_t v6 = -3170;
          break;
        case 0x5Fu:
          uint64_t v6 = -3171;
          break;
        case 0x60u:
          uint64_t v6 = -3172;
          break;
        case 0x61u:
          uint64_t v6 = -3173;
          break;
        case 0x62u:
          uint64_t v6 = -3174;
          break;
        case 0x63u:
          uint64_t v6 = -3175;
          break;
        case 0x64u:
          uint64_t v6 = -3176;
          break;
        case 0x65u:
          uint64_t v6 = -3177;
          break;
        case 0x66u:
          uint64_t v6 = -3178;
          break;
        case 0x67u:
          uint64_t v6 = -3179;
          break;
        case 0x68u:
          uint64_t v6 = -3180;
          break;
        case 0x69u:
          uint64_t v6 = -3181;
          break;
        case 0x6Au:
          uint64_t v6 = -3182;
          break;
        case 0x6Bu:
          uint64_t v6 = -3183;
          break;
        case 0x6Cu:
          uint64_t v6 = -3184;
          break;
        case 0x6Du:
          uint64_t v6 = -3185;
          break;
        case 0x6Eu:
          uint64_t v6 = -3186;
          break;
        case 0x6Fu:
          uint64_t v6 = -3187;
          break;
        case 0x70u:
          uint64_t v6 = -3188;
          break;
        case 0x71u:
          uint64_t v6 = -3189;
          break;
        case 0x72u:
          uint64_t v6 = -3300;
          break;
        case 0x73u:
          uint64_t v6 = -5108;
          break;
        case 0x74u:
          uint64_t v6 = -6009;
          break;
        case 0x75u:
          uint64_t v6 = -6010;
          break;
        case 0x76u:
          uint64_t v6 = -6102;
          break;
        case 0x77u:
          uint64_t v6 = -6103;
          break;
        case 0x78u:
          uint64_t v6 = -6104;
          break;
        case 0x79u:
          uint64_t v6 = -6105;
          break;
        case 0x7Au:
          uint64_t v6 = -8001;
          break;
        case 0x7Bu:
          uint64_t v6 = -8301;
          break;
        case 0x7Cu:
          uint64_t v6 = -8304;
          break;
        case 0x7Du:
          uint64_t v6 = -8400;
          break;
        case 0x7Eu:
          uint64_t v6 = -8401;
          break;
        case 0x7Fu:
          uint64_t v6 = -8403;
          break;
        case 0x80u:
          uint64_t v6 = -8404;
          break;
        case 0x81u:
          uint64_t v6 = -8428;
          break;
        case 0x82u:
          uint64_t v6 = -8429;
          break;
        case 0x83u:
          uint64_t v6 = -8433;
          break;
        case 0x84u:
          uint64_t v6 = -8434;
          break;
        case 0x85u:
          uint64_t v6 = -8500;
          break;
        case 0x86u:
          uint64_t v6 = -8501;
          break;
        case 0x87u:
          uint64_t v6 = -8502;
          break;
        case 0x88u:
          uint64_t v6 = -8503;
          break;
        case 0x89u:
          uint64_t v6 = -8504;
          break;
        case 0x8Au:
          uint64_t v6 = -22200;
          break;
        case 0x8Bu:
          uint64_t v6 = -22201;
          break;
        case 0x8Cu:
          uint64_t v6 = -22202;
          break;
        case 0x8Du:
          uint64_t v6 = -22203;
          break;
        case 0x8Eu:
          uint64_t v6 = -22204;
          break;
        case 0x8Fu:
          uint64_t v6 = -22205;
          break;
        case 0x90u:
          uint64_t v6 = -22206;
          break;
        case 0x91u:
          uint64_t v6 = -22207;
          break;
        case 0x92u:
          uint64_t v6 = -22208;
          break;
        case 0x93u:
          uint64_t v6 = -72200;
          break;
        case 0x94u:
          uint64_t v6 = -72201;
          break;
        case 0x95u:
          uint64_t v6 = -72202;
          break;
        case 0x96u:
          uint64_t v6 = -72203;
          break;
        case 0x97u:
          uint64_t v6 = -72204;
          break;
        case 0x98u:
          uint64_t v6 = -72205;
          break;
        case 0x99u:
          uint64_t v6 = -72206;
          break;
        case 0x9Au:
          uint64_t v6 = -72207;
          break;
        case 0x9Bu:
          uint64_t v6 = -72208;
          break;
        case 0x9Cu:
          uint64_t v6 = -72209;
          break;
        case 0x9Du:
          uint64_t v6 = -72210;
          break;
        case 0x9Eu:
          uint64_t v6 = -72211;
          break;
        case 0x9Fu:
          uint64_t v6 = -72780;
          break;
        case 0xA0u:
          uint64_t v6 = -72781;
          break;
        case 0xA1u:
          uint64_t v6 = -72782;
          break;
        default:
          break;
      }
      uint64_t v7 = -1;
      switch(HIBYTE(a4))
      {
        case 1:
          uint64_t v7 = -2;
          break;
        case 2:
          uint64_t v7 = -3;
          break;
        case 3:
          uint64_t v7 = -4;
          break;
        case 4:
          uint64_t v7 = -5;
          break;
        case 5:
          uint64_t v7 = -6;
          break;
        case 6:
          uint64_t v7 = -7;
          break;
        case 7:
          uint64_t v7 = -8;
          break;
        case 8:
          uint64_t v7 = -9;
          break;
        case 9:
          uint64_t v7 = -10;
          break;
        case 0xA:
          uint64_t v7 = -11;
          break;
        case 0xB:
          uint64_t v7 = -12;
          break;
        case 0xC:
          uint64_t v7 = -13;
          break;
        case 0xD:
          uint64_t v7 = -14;
          break;
        case 0xE:
          uint64_t v7 = -15;
          break;
        case 0xF:
          uint64_t v7 = -16;
          break;
        case 0x10:
          uint64_t v7 = -17;
          break;
        case 0x11:
          uint64_t v7 = -18;
          break;
        case 0x12:
          uint64_t v7 = -19;
          break;
        case 0x13:
          uint64_t v7 = -20;
          break;
        case 0x14:
          uint64_t v7 = -21;
          break;
        case 0x15:
          uint64_t v7 = -22;
          break;
        case 0x16:
          uint64_t v7 = -28;
          break;
        case 0x17:
          uint64_t v7 = -29;
          break;
        case 0x18:
          uint64_t v7 = 200;
          break;
        case 0x19:
          uint64_t v7 = 20000;
          break;
        case 0x1A:
          uint64_t v7 = 20001;
          break;
        case 0x1B:
          uint64_t v7 = 20100;
          break;
        case 0x1C:
          uint64_t v7 = 40000;
          break;
        case 0x1D:
          uint64_t v7 = 40010;
          break;
        case 0x1E:
          uint64_t v7 = 40011;
          break;
        case 0x1F:
          uint64_t v7 = 40012;
          break;
        case 0x20:
          uint64_t v7 = 40013;
          break;
        case 0x21:
          uint64_t v7 = 40014;
          break;
        case 0x22:
          uint64_t v7 = 40015;
          break;
        case 0x23:
          uint64_t v7 = 40020;
          break;
        case 0x24:
          uint64_t v7 = 40021;
          break;
        case 0x25:
          uint64_t v7 = 40022;
          break;
        case 0x26:
          uint64_t v7 = 40023;
          break;
        case 0x27:
          uint64_t v7 = 40024;
          break;
        case 0x28:
          uint64_t v7 = 40025;
          break;
        case 0x29:
          uint64_t v7 = 40026;
          break;
        case 0x2A:
          uint64_t v7 = 40027;
          break;
        case 0x2B:
          uint64_t v7 = 40028;
          break;
        case 0x2C:
          uint64_t v7 = 40029;
          break;
        case 0x2D:
          uint64_t v7 = 40030;
          break;
        case 0x2E:
          uint64_t v7 = 40101;
          break;
        case 0x2F:
          uint64_t v7 = 40102;
          break;
        case 0x30:
          uint64_t v7 = 40200;
          break;
        case 0x31:
          uint64_t v7 = 40201;
          break;
        case 0x32:
          uint64_t v7 = 40205;
          break;
        case 0x33:
          uint64_t v7 = 40401;
          break;
        case 0x34:
          uint64_t v7 = 40402;
          break;
        case 0x35:
          uint64_t v7 = 40403;
          break;
        case 0x36:
          uint64_t v7 = 40404;
          break;
        case 0x37:
          uint64_t v7 = 40500;
          break;
        case 0x38:
          uint64_t v7 = 40600;
          break;
        case 0x39:
          uint64_t v7 = 40601;
          break;
        case 0x3A:
          uint64_t v7 = 50000;
          break;
        case 0x3B:
          uint64_t v7 = 50001;
          break;
        case 0x3C:
          uint64_t v7 = 50002;
          break;
        case 0x3D:
          uint64_t v7 = 99991;
          break;
        case 0x3E:
          uint64_t v7 = 99992;
          break;
        case 0x3F:
          uint64_t v7 = 99993;
          break;
        case 0x40:
          uint64_t v7 = -1101;
          break;
        case 0x41:
          uint64_t v7 = -1102;
          break;
        case 0x42:
          uint64_t v7 = -1103;
          break;
        case 0x43:
          uint64_t v7 = -1104;
          break;
        case 0x44:
          uint64_t v7 = -1110;
          break;
        case 0x45:
          uint64_t v7 = -1111;
          break;
        case 0x46:
          uint64_t v7 = -1112;
          break;
        case 0x47:
          uint64_t v7 = -1113;
          break;
        case 0x48:
          uint64_t v7 = -1114;
          break;
        case 0x49:
          uint64_t v7 = -1115;
          break;
        case 0x4A:
          uint64_t v7 = -1116;
          break;
        case 0x4B:
          uint64_t v7 = -1117;
          break;
        case 0x4C:
          uint64_t v7 = -1118;
          break;
        case 0x4D:
          uint64_t v7 = -1119;
          break;
        case 0x4E:
          uint64_t v7 = -1201;
          break;
        case 0x4F:
          uint64_t v7 = -1202;
          break;
        case 0x50:
          uint64_t v7 = -1203;
          break;
        case 0x51:
          uint64_t v7 = -1204;
          break;
        case 0x52:
          uint64_t v7 = -1402;
          break;
        case 0x53:
          uint64_t v7 = -1403;
          break;
        case 0x54:
          uint64_t v7 = -1404;
          break;
        case 0x55:
          uint64_t v7 = -1301;
          break;
        case 0x56:
          uint64_t v7 = -1302;
          break;
        case 0x57:
          uint64_t v7 = -1303;
          break;
        case 0x58:
          uint64_t v7 = -1304;
          break;
        case 0x59:
          uint64_t v7 = -1305;
          break;
        case 0x5A:
          uint64_t v7 = -1306;
          break;
        case 0x5B:
          uint64_t v7 = -1307;
          break;
        case 0x5C:
          uint64_t v7 = -1308;
          break;
        case 0x5D:
          uint64_t v7 = -1309;
          break;
        case 0x5E:
          uint64_t v7 = -1310;
          break;
        case 0x5F:
          uint64_t v7 = -1315;
          break;
        case 0x60:
          uint64_t v7 = -1316;
          break;
        case 0x61:
          uint64_t v7 = -1317;
          break;
        case 0x62:
          uint64_t v7 = -131600;
          break;
        case 0x63:
          uint64_t v7 = -2103;
          break;
        case 0x64:
          uint64_t v7 = -2104;
          break;
        case 0x65:
          uint64_t v7 = -2107;
          break;
        case 0x66:
          uint64_t v7 = -2110;
          break;
        case 0x67:
          uint64_t v7 = -2111;
          break;
        case 0x68:
          uint64_t v7 = -2112;
          break;
        case 0x69:
          uint64_t v7 = -2123;
          break;
        case 0x6A:
          uint64_t v7 = -2124;
          break;
        case 0x6B:
          uint64_t v7 = -2125;
          break;
        case 0x6C:
          uint64_t v7 = -2126;
          break;
        case 0x6D:
          uint64_t v7 = -2127;
          break;
        case 0x6E:
          uint64_t v7 = -3101;
          break;
        case 0x6F:
          uint64_t v7 = -3102;
          break;
        case 0x70:
          uint64_t v7 = -3103;
          break;
        case 0x71:
          uint64_t v7 = -3104;
          break;
        case 0x72:
          uint64_t v7 = -3105;
          break;
        case 0x73:
          uint64_t v7 = -3106;
          break;
        case 0x74:
          uint64_t v7 = -3107;
          break;
        case 0x75:
          uint64_t v7 = -3108;
          break;
        case 0x76:
          uint64_t v7 = -3109;
          break;
        case 0x77:
          uint64_t v7 = -3110;
          break;
        case 0x78:
          uint64_t v7 = -3111;
          break;
        case 0x79:
          uint64_t v7 = -3112;
          break;
        case 0x7A:
          uint64_t v7 = -3113;
          break;
        case 0x7B:
          uint64_t v7 = -3151;
          break;
        case 0x7C:
          uint64_t v7 = -3152;
          break;
        case 0x7D:
          uint64_t v7 = -3153;
          break;
        case 0x7E:
          uint64_t v7 = -3154;
          break;
        case 0x7F:
          uint64_t v7 = -3155;
          break;
        case 0x80:
          uint64_t v7 = -3156;
          break;
        case 0x81:
          uint64_t v7 = -3157;
          break;
        case 0x82:
          uint64_t v7 = -3158;
          break;
        case 0x83:
          uint64_t v7 = -3159;
          break;
        case 0x84:
          uint64_t v7 = -3161;
          break;
        case 0x85:
          uint64_t v7 = -3162;
          break;
        case 0x86:
          uint64_t v7 = -3163;
          break;
        case 0x87:
          uint64_t v7 = -3164;
          break;
        case 0x88:
          uint64_t v7 = -3165;
          break;
        case 0x89:
          uint64_t v7 = -3166;
          break;
        case 0x8A:
          uint64_t v7 = -3167;
          break;
        case 0x8B:
          uint64_t v7 = -3168;
          break;
        case 0x8C:
          uint64_t v7 = -3169;
          break;
        case 0x8D:
          uint64_t v7 = -3170;
          break;
        case 0x8E:
          uint64_t v7 = -3171;
          break;
        case 0x8F:
          uint64_t v7 = -3172;
          break;
        case 0x90:
          uint64_t v7 = -3173;
          break;
        case 0x91:
          uint64_t v7 = -3174;
          break;
        case 0x92:
          uint64_t v7 = -3175;
          break;
        case 0x93:
          uint64_t v7 = -3176;
          break;
        case 0x94:
          uint64_t v7 = -3177;
          break;
        case 0x95:
          uint64_t v7 = -3178;
          break;
        case 0x96:
          uint64_t v7 = -3179;
          break;
        case 0x97:
          uint64_t v7 = -3180;
          break;
        case 0x98:
          uint64_t v7 = -3181;
          break;
        case 0x99:
          uint64_t v7 = -3182;
          break;
        case 0x9A:
          uint64_t v7 = -3183;
          break;
        case 0x9B:
          uint64_t v7 = -3184;
          break;
        case 0x9C:
          uint64_t v7 = -3185;
          break;
        case 0x9D:
          uint64_t v7 = -3186;
          break;
        case 0x9E:
          uint64_t v7 = -3187;
          break;
        case 0x9F:
          uint64_t v7 = -3188;
          break;
        case 0xA0:
          uint64_t v7 = -3189;
          break;
        case 0xA1:
          uint64_t v7 = -3300;
          break;
        case 0xA2:
          uint64_t v7 = -5108;
          break;
        case 0xA3:
          uint64_t v7 = -6009;
          break;
        case 0xA4:
          uint64_t v7 = -6010;
          break;
        case 0xA5:
          uint64_t v7 = -6102;
          break;
        case 0xA6:
          uint64_t v7 = -6103;
          break;
        case 0xA7:
          uint64_t v7 = -6104;
          break;
        case 0xA8:
          uint64_t v7 = -6105;
          break;
        case 0xA9:
          uint64_t v7 = -8001;
          break;
        case 0xAA:
          uint64_t v7 = -8301;
          break;
        case 0xAB:
          uint64_t v7 = -8304;
          break;
        case 0xAC:
          uint64_t v7 = -8400;
          break;
        case 0xAD:
          uint64_t v7 = -8401;
          break;
        case 0xAE:
          uint64_t v7 = -8403;
          break;
        case 0xAF:
          uint64_t v7 = -8404;
          break;
        case 0xB0:
          uint64_t v7 = -8428;
          break;
        case 0xB1:
          uint64_t v7 = -8429;
          break;
        case 0xB2:
          uint64_t v7 = -8433;
          break;
        case 0xB3:
          uint64_t v7 = -8434;
          break;
        case 0xB4:
          uint64_t v7 = -8500;
          break;
        case 0xB5:
          uint64_t v7 = -8501;
          break;
        case 0xB6:
          uint64_t v7 = -8502;
          break;
        case 0xB7:
          uint64_t v7 = -8503;
          break;
        case 0xB8:
          uint64_t v7 = -8504;
          break;
        case 0xB9:
          uint64_t v7 = -22200;
          break;
        case 0xBA:
          uint64_t v7 = -22201;
          break;
        case 0xBB:
          uint64_t v7 = -22202;
          break;
        case 0xBC:
          uint64_t v7 = -22203;
          break;
        case 0xBD:
          uint64_t v7 = -22204;
          break;
        case 0xBE:
          uint64_t v7 = -22205;
          break;
        case 0xBF:
          uint64_t v7 = -22206;
          break;
        case 0xC0:
          uint64_t v7 = -22207;
          break;
        case 0xC1:
          uint64_t v7 = -22208;
          break;
        case 0xC2:
          uint64_t v7 = -72200;
          break;
        case 0xC3:
          uint64_t v7 = -72201;
          break;
        case 0xC4:
          uint64_t v7 = -72202;
          break;
        case 0xC5:
          uint64_t v7 = -72203;
          break;
        case 0xC6:
          uint64_t v7 = -72204;
          break;
        case 0xC7:
          uint64_t v7 = -72205;
          break;
        case 0xC8:
          uint64_t v7 = -72206;
          break;
        case 0xC9:
          uint64_t v7 = -72207;
          break;
        case 0xCA:
          uint64_t v7 = -72208;
          break;
        case 0xCB:
          uint64_t v7 = -72209;
          break;
        case 0xCC:
          uint64_t v7 = -72210;
          break;
        case 0xCD:
          uint64_t v7 = -72211;
          break;
        case 0xCE:
          uint64_t v7 = -72780;
          break;
        case 0xCF:
          uint64_t v7 = -72781;
          break;
        case 0xD0:
          uint64_t v7 = -72782;
          break;
        default:
          break;
      }
      BOOL v4 = v6 == v7;
LABEL_432:
      char v8 = !v4;
      char v9 = v8 | a2;
      char v10 = (v8 ^ (v8 | a2)) & a4;
      if (v9 & 1) != 0 || (a4) {
        return v10 & 1;
      }
      else {
        return *(double *)&a1 == *(double *)&a3;
      }
  }
}

uint64_t sub_214C8391C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a5 == 1)
  {
LABEL_2:
    char v6 = 0;
    return v6 & 1;
  }
  if (a2 == 1)
  {
LABEL_4:
    char v6 = 1;
    return v6 & 1;
  }
  if (a6 == 209)
  {
    if (a3 == 209)
    {
LABEL_8:
      if (a2)
      {
        if (a5)
        {
          if (a1 != a4 || a2 != a5)
          {
            char v6 = sub_214D1ABC8() ^ 1;
            return v6 & 1;
          }
          goto LABEL_2;
        }
      }
      else if (!a5)
      {
        sub_214D06940(a1, 0);
        sub_214D06940(a4, 0);
        char v6 = 0;
        return v6 & 1;
      }
    }
    goto LABEL_4;
  }
  char v6 = 0;
  switch(a3)
  {
    case 0xD1u:
      return v6 & 1;
    case 0xD2u:
      if (a6 == 210) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD3u:
      if (a6 == 211) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD4u:
      if (a6 == 212) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD5u:
      if (a6 == 213) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD6u:
      if (a6 == 214) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD7u:
      if (a6 == 215) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD8u:
      if (a6 == 216) {
        goto LABEL_8;
      }
      goto LABEL_2;
    case 0xD9u:
      if (a6 == 217) {
        goto LABEL_8;
      }
      goto LABEL_2;
    default:
      if ((a6 + 47) >= 9u)
      {
        uint64_t v9 = -1;
        switch(a3)
        {
          case 1u:
            uint64_t v9 = -2;
            break;
          case 2u:
            uint64_t v9 = -3;
            break;
          case 3u:
            uint64_t v9 = -4;
            break;
          case 4u:
            uint64_t v9 = -5;
            break;
          case 5u:
            uint64_t v9 = -6;
            break;
          case 6u:
            uint64_t v9 = -7;
            break;
          case 7u:
            uint64_t v9 = -8;
            break;
          case 8u:
            uint64_t v9 = -9;
            break;
          case 9u:
            uint64_t v9 = -10;
            break;
          case 0xAu:
            uint64_t v9 = -11;
            break;
          case 0xBu:
            uint64_t v9 = -12;
            break;
          case 0xCu:
            uint64_t v9 = -13;
            break;
          case 0xDu:
            uint64_t v9 = -14;
            break;
          case 0xEu:
            uint64_t v9 = -15;
            break;
          case 0xFu:
            uint64_t v9 = -16;
            break;
          case 0x10u:
            uint64_t v9 = -17;
            break;
          case 0x11u:
            uint64_t v9 = -18;
            break;
          case 0x12u:
            uint64_t v9 = -19;
            break;
          case 0x13u:
            uint64_t v9 = -20;
            break;
          case 0x14u:
            uint64_t v9 = -21;
            break;
          case 0x15u:
            uint64_t v9 = -22;
            break;
          case 0x16u:
            uint64_t v9 = -28;
            break;
          case 0x17u:
            uint64_t v9 = -29;
            break;
          case 0x18u:
            uint64_t v9 = 200;
            break;
          case 0x19u:
            uint64_t v9 = 20000;
            break;
          case 0x1Au:
            uint64_t v9 = 20001;
            break;
          case 0x1Bu:
            uint64_t v9 = 20100;
            break;
          case 0x1Cu:
            uint64_t v9 = 40000;
            break;
          case 0x1Du:
            uint64_t v9 = 40010;
            break;
          case 0x1Eu:
            uint64_t v9 = 40011;
            break;
          case 0x1Fu:
            uint64_t v9 = 40012;
            break;
          case 0x20u:
            uint64_t v9 = 40013;
            break;
          case 0x21u:
            uint64_t v9 = 40014;
            break;
          case 0x22u:
            uint64_t v9 = 40015;
            break;
          case 0x23u:
            uint64_t v9 = 40020;
            break;
          case 0x24u:
            uint64_t v9 = 40021;
            break;
          case 0x25u:
            uint64_t v9 = 40022;
            break;
          case 0x26u:
            uint64_t v9 = 40023;
            break;
          case 0x27u:
            uint64_t v9 = 40024;
            break;
          case 0x28u:
            uint64_t v9 = 40025;
            break;
          case 0x29u:
            uint64_t v9 = 40026;
            break;
          case 0x2Au:
            uint64_t v9 = 40027;
            break;
          case 0x2Bu:
            uint64_t v9 = 40028;
            break;
          case 0x2Cu:
            uint64_t v9 = 40029;
            break;
          case 0x2Du:
            uint64_t v9 = 40030;
            break;
          case 0x2Eu:
            uint64_t v9 = 40101;
            break;
          case 0x2Fu:
            uint64_t v9 = 40102;
            break;
          case 0x30u:
            uint64_t v9 = 40200;
            break;
          case 0x31u:
            uint64_t v9 = 40201;
            break;
          case 0x32u:
            uint64_t v9 = 40205;
            break;
          case 0x33u:
            uint64_t v9 = 40401;
            break;
          case 0x34u:
            uint64_t v9 = 40402;
            break;
          case 0x35u:
            uint64_t v9 = 40403;
            break;
          case 0x36u:
            uint64_t v9 = 40404;
            break;
          case 0x37u:
            uint64_t v9 = 40500;
            break;
          case 0x38u:
            uint64_t v9 = 40600;
            break;
          case 0x39u:
            uint64_t v9 = 40601;
            break;
          case 0x3Au:
            uint64_t v9 = 50000;
            break;
          case 0x3Bu:
            uint64_t v9 = 50001;
            break;
          case 0x3Cu:
            uint64_t v9 = 50002;
            break;
          case 0x3Du:
            uint64_t v9 = 99991;
            break;
          case 0x3Eu:
            uint64_t v9 = 99992;
            break;
          case 0x3Fu:
            uint64_t v9 = 99993;
            break;
          case 0x40u:
            uint64_t v9 = -1101;
            break;
          case 0x41u:
            uint64_t v9 = -1102;
            break;
          case 0x42u:
            uint64_t v9 = -1103;
            break;
          case 0x43u:
            uint64_t v9 = -1104;
            break;
          case 0x44u:
            uint64_t v9 = -1110;
            break;
          case 0x45u:
            uint64_t v9 = -1111;
            break;
          case 0x46u:
            uint64_t v9 = -1112;
            break;
          case 0x47u:
            uint64_t v9 = -1113;
            break;
          case 0x48u:
            uint64_t v9 = -1114;
            break;
          case 0x49u:
            uint64_t v9 = -1115;
            break;
          case 0x4Au:
            uint64_t v9 = -1116;
            break;
          case 0x4Bu:
            uint64_t v9 = -1117;
            break;
          case 0x4Cu:
            uint64_t v9 = -1118;
            break;
          case 0x4Du:
            uint64_t v9 = -1119;
            break;
          case 0x4Eu:
            uint64_t v9 = -1201;
            break;
          case 0x4Fu:
            uint64_t v9 = -1202;
            break;
          case 0x50u:
            uint64_t v9 = -1203;
            break;
          case 0x51u:
            uint64_t v9 = -1204;
            break;
          case 0x52u:
            uint64_t v9 = -1402;
            break;
          case 0x53u:
            uint64_t v9 = -1403;
            break;
          case 0x54u:
            uint64_t v9 = -1404;
            break;
          case 0x55u:
            uint64_t v9 = -1301;
            break;
          case 0x56u:
            uint64_t v9 = -1302;
            break;
          case 0x57u:
            uint64_t v9 = -1303;
            break;
          case 0x58u:
            uint64_t v9 = -1304;
            break;
          case 0x59u:
            uint64_t v9 = -1305;
            break;
          case 0x5Au:
            uint64_t v9 = -1306;
            break;
          case 0x5Bu:
            uint64_t v9 = -1307;
            break;
          case 0x5Cu:
            uint64_t v9 = -1308;
            break;
          case 0x5Du:
            uint64_t v9 = -1309;
            break;
          case 0x5Eu:
            uint64_t v9 = -1310;
            break;
          case 0x5Fu:
            uint64_t v9 = -1315;
            break;
          case 0x60u:
            uint64_t v9 = -1316;
            break;
          case 0x61u:
            uint64_t v9 = -1317;
            break;
          case 0x62u:
            uint64_t v9 = -131600;
            break;
          case 0x63u:
            uint64_t v9 = -2103;
            break;
          case 0x64u:
            uint64_t v9 = -2104;
            break;
          case 0x65u:
            uint64_t v9 = -2107;
            break;
          case 0x66u:
            uint64_t v9 = -2110;
            break;
          case 0x67u:
            uint64_t v9 = -2111;
            break;
          case 0x68u:
            uint64_t v9 = -2112;
            break;
          case 0x69u:
            uint64_t v9 = -2123;
            break;
          case 0x6Au:
            uint64_t v9 = -2124;
            break;
          case 0x6Bu:
            uint64_t v9 = -2125;
            break;
          case 0x6Cu:
            uint64_t v9 = -2126;
            break;
          case 0x6Du:
            uint64_t v9 = -2127;
            break;
          case 0x6Eu:
            uint64_t v9 = -3101;
            break;
          case 0x6Fu:
            uint64_t v9 = -3102;
            break;
          case 0x70u:
            uint64_t v9 = -3103;
            break;
          case 0x71u:
            uint64_t v9 = -3104;
            break;
          case 0x72u:
            uint64_t v9 = -3105;
            break;
          case 0x73u:
            uint64_t v9 = -3106;
            break;
          case 0x74u:
            uint64_t v9 = -3107;
            break;
          case 0x75u:
            uint64_t v9 = -3108;
            break;
          case 0x76u:
            uint64_t v9 = -3109;
            break;
          case 0x77u:
            uint64_t v9 = -3110;
            break;
          case 0x78u:
            uint64_t v9 = -3111;
            break;
          case 0x79u:
            uint64_t v9 = -3112;
            break;
          case 0x7Au:
            uint64_t v9 = -3113;
            break;
          case 0x7Bu:
            uint64_t v9 = -3151;
            break;
          case 0x7Cu:
            uint64_t v9 = -3152;
            break;
          case 0x7Du:
            uint64_t v9 = -3153;
            break;
          case 0x7Eu:
            uint64_t v9 = -3154;
            break;
          case 0x7Fu:
            uint64_t v9 = -3155;
            break;
          case 0x80u:
            uint64_t v9 = -3156;
            break;
          case 0x81u:
            uint64_t v9 = -3157;
            break;
          case 0x82u:
            uint64_t v9 = -3158;
            break;
          case 0x83u:
            uint64_t v9 = -3159;
            break;
          case 0x84u:
            uint64_t v9 = -3161;
            break;
          case 0x85u:
            uint64_t v9 = -3162;
            break;
          case 0x86u:
            uint64_t v9 = -3163;
            break;
          case 0x87u:
            uint64_t v9 = -3164;
            break;
          case 0x88u:
            uint64_t v9 = -3165;
            break;
          case 0x89u:
            uint64_t v9 = -3166;
            break;
          case 0x8Au:
            uint64_t v9 = -3167;
            break;
          case 0x8Bu:
            uint64_t v9 = -3168;
            break;
          case 0x8Cu:
            uint64_t v9 = -3169;
            break;
          case 0x8Du:
            uint64_t v9 = -3170;
            break;
          case 0x8Eu:
            uint64_t v9 = -3171;
            break;
          case 0x8Fu:
            uint64_t v9 = -3172;
            break;
          case 0x90u:
            uint64_t v9 = -3173;
            break;
          case 0x91u:
            uint64_t v9 = -3174;
            break;
          case 0x92u:
            uint64_t v9 = -3175;
            break;
          case 0x93u:
            uint64_t v9 = -3176;
            break;
          case 0x94u:
            uint64_t v9 = -3177;
            break;
          case 0x95u:
            uint64_t v9 = -3178;
            break;
          case 0x96u:
            uint64_t v9 = -3179;
            break;
          case 0x97u:
            uint64_t v9 = -3180;
            break;
          case 0x98u:
            uint64_t v9 = -3181;
            break;
          case 0x99u:
            uint64_t v9 = -3182;
            break;
          case 0x9Au:
            uint64_t v9 = -3183;
            break;
          case 0x9Bu:
            uint64_t v9 = -3184;
            break;
          case 0x9Cu:
            uint64_t v9 = -3185;
            break;
          case 0x9Du:
            uint64_t v9 = -3186;
            break;
          case 0x9Eu:
            uint64_t v9 = -3187;
            break;
          case 0x9Fu:
            uint64_t v9 = -3188;
            break;
          case 0xA0u:
            uint64_t v9 = -3189;
            break;
          case 0xA1u:
            uint64_t v9 = -3300;
            break;
          case 0xA2u:
            uint64_t v9 = -5108;
            break;
          case 0xA3u:
            uint64_t v9 = -6009;
            break;
          case 0xA4u:
            uint64_t v9 = -6010;
            break;
          case 0xA5u:
            uint64_t v9 = -6102;
            break;
          case 0xA6u:
            uint64_t v9 = -6103;
            break;
          case 0xA7u:
            uint64_t v9 = -6104;
            break;
          case 0xA8u:
            uint64_t v9 = -6105;
            break;
          case 0xA9u:
            uint64_t v9 = -8001;
            break;
          case 0xAAu:
            uint64_t v9 = -8301;
            break;
          case 0xABu:
            uint64_t v9 = -8304;
            break;
          case 0xACu:
            uint64_t v9 = -8400;
            break;
          case 0xADu:
            uint64_t v9 = -8401;
            break;
          case 0xAEu:
            uint64_t v9 = -8403;
            break;
          case 0xAFu:
            uint64_t v9 = -8404;
            break;
          case 0xB0u:
            uint64_t v9 = -8428;
            break;
          case 0xB1u:
            uint64_t v9 = -8429;
            break;
          case 0xB2u:
            uint64_t v9 = -8433;
            break;
          case 0xB3u:
            uint64_t v9 = -8434;
            break;
          case 0xB4u:
            uint64_t v9 = -8500;
            break;
          case 0xB5u:
            uint64_t v9 = -8501;
            break;
          case 0xB6u:
            uint64_t v9 = -8502;
            break;
          case 0xB7u:
            uint64_t v9 = -8503;
            break;
          case 0xB8u:
            uint64_t v9 = -8504;
            break;
          case 0xB9u:
            uint64_t v9 = -22200;
            break;
          case 0xBAu:
            uint64_t v9 = -22201;
            break;
          case 0xBBu:
            uint64_t v9 = -22202;
            break;
          case 0xBCu:
            uint64_t v9 = -22203;
            break;
          case 0xBDu:
            uint64_t v9 = -22204;
            break;
          case 0xBEu:
            uint64_t v9 = -22205;
            break;
          case 0xBFu:
            uint64_t v9 = -22206;
            break;
          case 0xC0u:
            uint64_t v9 = -22207;
            break;
          case 0xC1u:
            uint64_t v9 = -22208;
            break;
          case 0xC2u:
            uint64_t v9 = -72200;
            break;
          case 0xC3u:
            uint64_t v9 = -72201;
            break;
          case 0xC4u:
            uint64_t v9 = -72202;
            break;
          case 0xC5u:
            uint64_t v9 = -72203;
            break;
          case 0xC6u:
            uint64_t v9 = -72204;
            break;
          case 0xC7u:
            uint64_t v9 = -72205;
            break;
          case 0xC8u:
            uint64_t v9 = -72206;
            break;
          case 0xC9u:
            uint64_t v9 = -72207;
            break;
          case 0xCAu:
            uint64_t v9 = -72208;
            break;
          case 0xCBu:
            uint64_t v9 = -72209;
            break;
          case 0xCCu:
            uint64_t v9 = -72210;
            break;
          case 0xCDu:
            uint64_t v9 = -72211;
            break;
          case 0xCEu:
            uint64_t v9 = -72780;
            break;
          case 0xCFu:
            uint64_t v9 = -72781;
            break;
          case 0xD0u:
            uint64_t v9 = -72782;
            break;
          default:
            break;
        }
        uint64_t v10 = -1;
        switch(a6)
        {
          case 1u:
            uint64_t v10 = -2;
            break;
          case 2u:
            uint64_t v10 = -3;
            break;
          case 3u:
            uint64_t v10 = -4;
            break;
          case 4u:
            uint64_t v10 = -5;
            break;
          case 5u:
            uint64_t v10 = -6;
            break;
          case 6u:
            uint64_t v10 = -7;
            break;
          case 7u:
            uint64_t v10 = -8;
            break;
          case 8u:
            uint64_t v10 = -9;
            break;
          case 9u:
            uint64_t v10 = -10;
            break;
          case 0xAu:
            uint64_t v10 = -11;
            break;
          case 0xBu:
            uint64_t v10 = -12;
            break;
          case 0xCu:
            uint64_t v10 = -13;
            break;
          case 0xDu:
            uint64_t v10 = -14;
            break;
          case 0xEu:
            uint64_t v10 = -15;
            break;
          case 0xFu:
            uint64_t v10 = -16;
            break;
          case 0x10u:
            uint64_t v10 = -17;
            break;
          case 0x11u:
            uint64_t v10 = -18;
            break;
          case 0x12u:
            uint64_t v10 = -19;
            break;
          case 0x13u:
            uint64_t v10 = -20;
            break;
          case 0x14u:
            uint64_t v10 = -21;
            break;
          case 0x15u:
            uint64_t v10 = -22;
            break;
          case 0x16u:
            uint64_t v10 = -28;
            break;
          case 0x17u:
            uint64_t v10 = -29;
            break;
          case 0x18u:
            uint64_t v10 = 200;
            break;
          case 0x19u:
            uint64_t v10 = 20000;
            break;
          case 0x1Au:
            uint64_t v10 = 20001;
            break;
          case 0x1Bu:
            uint64_t v10 = 20100;
            break;
          case 0x1Cu:
            uint64_t v10 = 40000;
            break;
          case 0x1Du:
            uint64_t v10 = 40010;
            break;
          case 0x1Eu:
            uint64_t v10 = 40011;
            break;
          case 0x1Fu:
            uint64_t v10 = 40012;
            break;
          case 0x20u:
            uint64_t v10 = 40013;
            break;
          case 0x21u:
            uint64_t v10 = 40014;
            break;
          case 0x22u:
            uint64_t v10 = 40015;
            break;
          case 0x23u:
            uint64_t v10 = 40020;
            break;
          case 0x24u:
            uint64_t v10 = 40021;
            break;
          case 0x25u:
            uint64_t v10 = 40022;
            break;
          case 0x26u:
            uint64_t v10 = 40023;
            break;
          case 0x27u:
            uint64_t v10 = 40024;
            break;
          case 0x28u:
            uint64_t v10 = 40025;
            break;
          case 0x29u:
            uint64_t v10 = 40026;
            break;
          case 0x2Au:
            uint64_t v10 = 40027;
            break;
          case 0x2Bu:
            uint64_t v10 = 40028;
            break;
          case 0x2Cu:
            uint64_t v10 = 40029;
            break;
          case 0x2Du:
            uint64_t v10 = 40030;
            break;
          case 0x2Eu:
            uint64_t v10 = 40101;
            break;
          case 0x2Fu:
            uint64_t v10 = 40102;
            break;
          case 0x30u:
            uint64_t v10 = 40200;
            break;
          case 0x31u:
            uint64_t v10 = 40201;
            break;
          case 0x32u:
            uint64_t v10 = 40205;
            break;
          case 0x33u:
            uint64_t v10 = 40401;
            break;
          case 0x34u:
            uint64_t v10 = 40402;
            break;
          case 0x35u:
            uint64_t v10 = 40403;
            break;
          case 0x36u:
            uint64_t v10 = 40404;
            break;
          case 0x37u:
            uint64_t v10 = 40500;
            break;
          case 0x38u:
            uint64_t v10 = 40600;
            break;
          case 0x39u:
            uint64_t v10 = 40601;
            break;
          case 0x3Au:
            uint64_t v10 = 50000;
            break;
          case 0x3Bu:
            uint64_t v10 = 50001;
            break;
          case 0x3Cu:
            uint64_t v10 = 50002;
            break;
          case 0x3Du:
            uint64_t v10 = 99991;
            break;
          case 0x3Eu:
            uint64_t v10 = 99992;
            break;
          case 0x3Fu:
            uint64_t v10 = 99993;
            break;
          case 0x40u:
            uint64_t v10 = -1101;
            break;
          case 0x41u:
            uint64_t v10 = -1102;
            break;
          case 0x42u:
            uint64_t v10 = -1103;
            break;
          case 0x43u:
            uint64_t v10 = -1104;
            break;
          case 0x44u:
            uint64_t v10 = -1110;
            break;
          case 0x45u:
            uint64_t v10 = -1111;
            break;
          case 0x46u:
            uint64_t v10 = -1112;
            break;
          case 0x47u:
            uint64_t v10 = -1113;
            break;
          case 0x48u:
            uint64_t v10 = -1114;
            break;
          case 0x49u:
            uint64_t v10 = -1115;
            break;
          case 0x4Au:
            uint64_t v10 = -1116;
            break;
          case 0x4Bu:
            uint64_t v10 = -1117;
            break;
          case 0x4Cu:
            uint64_t v10 = -1118;
            break;
          case 0x4Du:
            uint64_t v10 = -1119;
            break;
          case 0x4Eu:
            uint64_t v10 = -1201;
            break;
          case 0x4Fu:
            uint64_t v10 = -1202;
            break;
          case 0x50u:
            uint64_t v10 = -1203;
            break;
          case 0x51u:
            uint64_t v10 = -1204;
            break;
          case 0x52u:
            uint64_t v10 = -1402;
            break;
          case 0x53u:
            uint64_t v10 = -1403;
            break;
          case 0x54u:
            uint64_t v10 = -1404;
            break;
          case 0x55u:
            uint64_t v10 = -1301;
            break;
          case 0x56u:
            uint64_t v10 = -1302;
            break;
          case 0x57u:
            uint64_t v10 = -1303;
            break;
          case 0x58u:
            uint64_t v10 = -1304;
            break;
          case 0x59u:
            uint64_t v10 = -1305;
            break;
          case 0x5Au:
            uint64_t v10 = -1306;
            break;
          case 0x5Bu:
            uint64_t v10 = -1307;
            break;
          case 0x5Cu:
            uint64_t v10 = -1308;
            break;
          case 0x5Du:
            uint64_t v10 = -1309;
            break;
          case 0x5Eu:
            uint64_t v10 = -1310;
            break;
          case 0x5Fu:
            uint64_t v10 = -1315;
            break;
          case 0x60u:
            uint64_t v10 = -1316;
            break;
          case 0x61u:
            uint64_t v10 = -1317;
            break;
          case 0x62u:
            uint64_t v10 = -131600;
            break;
          case 0x63u:
            uint64_t v10 = -2103;
            break;
          case 0x64u:
            uint64_t v10 = -2104;
            break;
          case 0x65u:
            uint64_t v10 = -2107;
            break;
          case 0x66u:
            uint64_t v10 = -2110;
            break;
          case 0x67u:
            uint64_t v10 = -2111;
            break;
          case 0x68u:
            uint64_t v10 = -2112;
            break;
          case 0x69u:
            uint64_t v10 = -2123;
            break;
          case 0x6Au:
            uint64_t v10 = -2124;
            break;
          case 0x6Bu:
            uint64_t v10 = -2125;
            break;
          case 0x6Cu:
            uint64_t v10 = -2126;
            break;
          case 0x6Du:
            uint64_t v10 = -2127;
            break;
          case 0x6Eu:
            uint64_t v10 = -3101;
            break;
          case 0x6Fu:
            uint64_t v10 = -3102;
            break;
          case 0x70u:
            uint64_t v10 = -3103;
            break;
          case 0x71u:
            uint64_t v10 = -3104;
            break;
          case 0x72u:
            uint64_t v10 = -3105;
            break;
          case 0x73u:
            uint64_t v10 = -3106;
            break;
          case 0x74u:
            uint64_t v10 = -3107;
            break;
          case 0x75u:
            uint64_t v10 = -3108;
            break;
          case 0x76u:
            uint64_t v10 = -3109;
            break;
          case 0x77u:
            uint64_t v10 = -3110;
            break;
          case 0x78u:
            uint64_t v10 = -3111;
            break;
          case 0x79u:
            uint64_t v10 = -3112;
            break;
          case 0x7Au:
            uint64_t v10 = -3113;
            break;
          case 0x7Bu:
            uint64_t v10 = -3151;
            break;
          case 0x7Cu:
            uint64_t v10 = -3152;
            break;
          case 0x7Du:
            uint64_t v10 = -3153;
            break;
          case 0x7Eu:
            uint64_t v10 = -3154;
            break;
          case 0x7Fu:
            uint64_t v10 = -3155;
            break;
          case 0x80u:
            uint64_t v10 = -3156;
            break;
          case 0x81u:
            uint64_t v10 = -3157;
            break;
          case 0x82u:
            uint64_t v10 = -3158;
            break;
          case 0x83u:
            uint64_t v10 = -3159;
            break;
          case 0x84u:
            uint64_t v10 = -3161;
            break;
          case 0x85u:
            uint64_t v10 = -3162;
            break;
          case 0x86u:
            uint64_t v10 = -3163;
            break;
          case 0x87u:
            uint64_t v10 = -3164;
            break;
          case 0x88u:
            uint64_t v10 = -3165;
            break;
          case 0x89u:
            uint64_t v10 = -3166;
            break;
          case 0x8Au:
            uint64_t v10 = -3167;
            break;
          case 0x8Bu:
            uint64_t v10 = -3168;
            break;
          case 0x8Cu:
            uint64_t v10 = -3169;
            break;
          case 0x8Du:
            uint64_t v10 = -3170;
            break;
          case 0x8Eu:
            uint64_t v10 = -3171;
            break;
          case 0x8Fu:
            uint64_t v10 = -3172;
            break;
          case 0x90u:
            uint64_t v10 = -3173;
            break;
          case 0x91u:
            uint64_t v10 = -3174;
            break;
          case 0x92u:
            uint64_t v10 = -3175;
            break;
          case 0x93u:
            uint64_t v10 = -3176;
            break;
          case 0x94u:
            uint64_t v10 = -3177;
            break;
          case 0x95u:
            uint64_t v10 = -3178;
            break;
          case 0x96u:
            uint64_t v10 = -3179;
            break;
          case 0x97u:
            uint64_t v10 = -3180;
            break;
          case 0x98u:
            uint64_t v10 = -3181;
            break;
          case 0x99u:
            uint64_t v10 = -3182;
            break;
          case 0x9Au:
            uint64_t v10 = -3183;
            break;
          case 0x9Bu:
            uint64_t v10 = -3184;
            break;
          case 0x9Cu:
            uint64_t v10 = -3185;
            break;
          case 0x9Du:
            uint64_t v10 = -3186;
            break;
          case 0x9Eu:
            uint64_t v10 = -3187;
            break;
          case 0x9Fu:
            uint64_t v10 = -3188;
            break;
          case 0xA0u:
            uint64_t v10 = -3189;
            break;
          case 0xA1u:
            uint64_t v10 = -3300;
            break;
          case 0xA2u:
            uint64_t v10 = -5108;
            break;
          case 0xA3u:
            uint64_t v10 = -6009;
            break;
          case 0xA4u:
            uint64_t v10 = -6010;
            break;
          case 0xA5u:
            uint64_t v10 = -6102;
            break;
          case 0xA6u:
            uint64_t v10 = -6103;
            break;
          case 0xA7u:
            uint64_t v10 = -6104;
            break;
          case 0xA8u:
            uint64_t v10 = -6105;
            break;
          case 0xA9u:
            uint64_t v10 = -8001;
            break;
          case 0xAAu:
            uint64_t v10 = -8301;
            break;
          case 0xABu:
            uint64_t v10 = -8304;
            break;
          case 0xACu:
            uint64_t v10 = -8400;
            break;
          case 0xADu:
            uint64_t v10 = -8401;
            break;
          case 0xAEu:
            uint64_t v10 = -8403;
            break;
          case 0xAFu:
            uint64_t v10 = -8404;
            break;
          case 0xB0u:
            uint64_t v10 = -8428;
            break;
          case 0xB1u:
            uint64_t v10 = -8429;
            break;
          case 0xB2u:
            uint64_t v10 = -8433;
            break;
          case 0xB3u:
            uint64_t v10 = -8434;
            break;
          case 0xB4u:
            uint64_t v10 = -8500;
            break;
          case 0xB5u:
            uint64_t v10 = -8501;
            break;
          case 0xB6u:
            uint64_t v10 = -8502;
            break;
          case 0xB7u:
            uint64_t v10 = -8503;
            break;
          case 0xB8u:
            uint64_t v10 = -8504;
            break;
          case 0xB9u:
            uint64_t v10 = -22200;
            break;
          case 0xBAu:
            uint64_t v10 = -22201;
            break;
          case 0xBBu:
            uint64_t v10 = -22202;
            break;
          case 0xBCu:
            uint64_t v10 = -22203;
            break;
          case 0xBDu:
            uint64_t v10 = -22204;
            break;
          case 0xBEu:
            uint64_t v10 = -22205;
            break;
          case 0xBFu:
            uint64_t v10 = -22206;
            break;
          case 0xC0u:
            uint64_t v10 = -22207;
            break;
          case 0xC1u:
            uint64_t v10 = -22208;
            break;
          case 0xC2u:
            uint64_t v10 = -72200;
            break;
          case 0xC3u:
            uint64_t v10 = -72201;
            break;
          case 0xC4u:
            uint64_t v10 = -72202;
            break;
          case 0xC5u:
            uint64_t v10 = -72203;
            break;
          case 0xC6u:
            uint64_t v10 = -72204;
            break;
          case 0xC7u:
            uint64_t v10 = -72205;
            break;
          case 0xC8u:
            uint64_t v10 = -72206;
            break;
          case 0xC9u:
            uint64_t v10 = -72207;
            break;
          case 0xCAu:
            uint64_t v10 = -72208;
            break;
          case 0xCBu:
            uint64_t v10 = -72209;
            break;
          case 0xCCu:
            uint64_t v10 = -72210;
            break;
          case 0xCDu:
            uint64_t v10 = -72211;
            break;
          case 0xCEu:
            uint64_t v10 = -72780;
            break;
          case 0xCFu:
            uint64_t v10 = -72781;
            break;
          case 0xD0u:
            uint64_t v10 = -72782;
            break;
          default:
            break;
        }
        if (v9 == v10) {
          goto LABEL_8;
        }
      }
      goto LABEL_2;
  }
  return v6 & 1;
}

uint64_t sub_214C84FA8(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if (HIBYTE(a4) == 218) {
    return 0;
  }
  if (HIBYTE(a2) == 218) {
    return 1;
  }
  if (HIBYTE(a4) != 209)
  {
    uint64_t v8 = 0;
    switch(HIBYTE(a2))
    {
      case 0xD1:
        return v8;
      case 0xD2:
        if (HIBYTE(a4) == 210) {
          goto LABEL_7;
        }
        return 0;
      case 0xD3:
        if (HIBYTE(a4) == 211) {
          goto LABEL_7;
        }
        return 0;
      case 0xD4:
        if (HIBYTE(a4) == 212) {
          goto LABEL_7;
        }
        return 0;
      case 0xD5:
        if (HIBYTE(a4) == 213) {
          goto LABEL_7;
        }
        return 0;
      case 0xD6:
        if (HIBYTE(a4) == 214) {
          goto LABEL_7;
        }
        return 0;
      case 0xD7:
        if (HIBYTE(a4) == 215) {
          goto LABEL_7;
        }
        return 0;
      case 0xD8:
        if (HIBYTE(a4) == 216) {
          goto LABEL_7;
        }
        return 0;
      case 0xD9:
        if (HIBYTE(a4) == 217) {
          goto LABEL_7;
        }
        return 0;
      default:
        if ((HIBYTE(a4) + 47) < 9u) {
          return 0;
        }
        uint64_t v9 = -1;
        switch(HIBYTE(a2))
        {
          case 0xD2u:
            uint64_t v9 = -2;
            break;
          case 0xD3u:
            uint64_t v9 = -3;
            break;
          case 0xD4u:
            uint64_t v9 = -4;
            break;
          case 0xD5u:
            uint64_t v9 = -5;
            break;
          case 0xD6u:
            uint64_t v9 = -6;
            break;
          case 0xD7u:
            uint64_t v9 = -7;
            break;
          case 0xD8u:
            uint64_t v9 = -8;
            break;
          case 0xD9u:
            uint64_t v9 = -9;
            break;
          case 0xDAu:
            uint64_t v9 = -10;
            break;
          case 0xDBu:
            uint64_t v9 = -11;
            break;
          case 0xDCu:
            uint64_t v9 = -12;
            break;
          case 0xDDu:
            uint64_t v9 = -13;
            break;
          case 0xDEu:
            uint64_t v9 = -14;
            break;
          case 0xDFu:
            uint64_t v9 = -15;
            break;
          case 0xE0u:
            uint64_t v9 = -16;
            break;
          case 0xE1u:
            uint64_t v9 = -17;
            break;
          case 0xE2u:
            uint64_t v9 = -18;
            break;
          case 0xE3u:
            uint64_t v9 = -19;
            break;
          case 0xE4u:
            uint64_t v9 = -20;
            break;
          case 0xE5u:
            uint64_t v9 = -21;
            break;
          case 0xE6u:
            uint64_t v9 = -22;
            break;
          case 0xE7u:
            uint64_t v9 = -28;
            break;
          case 0xE8u:
            uint64_t v9 = -29;
            break;
          case 0xE9u:
            uint64_t v9 = 200;
            break;
          case 0xEAu:
            uint64_t v9 = 20000;
            break;
          case 0xEBu:
            uint64_t v9 = 20001;
            break;
          case 0xECu:
            uint64_t v9 = 20100;
            break;
          case 0xEDu:
            uint64_t v9 = 40000;
            break;
          case 0xEEu:
            uint64_t v9 = 40010;
            break;
          case 0xEFu:
            uint64_t v9 = 40011;
            break;
          case 0xF0u:
            uint64_t v9 = 40012;
            break;
          case 0xF1u:
            uint64_t v9 = 40013;
            break;
          case 0xF2u:
            uint64_t v9 = 40014;
            break;
          case 0xF3u:
            uint64_t v9 = 40015;
            break;
          case 0xF4u:
            uint64_t v9 = 40020;
            break;
          case 0xF5u:
            uint64_t v9 = 40021;
            break;
          case 0xF6u:
            uint64_t v9 = 40022;
            break;
          case 0xF7u:
            uint64_t v9 = 40023;
            break;
          case 0xF8u:
            uint64_t v9 = 40024;
            break;
          case 0xF9u:
            uint64_t v9 = 40025;
            break;
          case 0xFAu:
            uint64_t v9 = 40026;
            break;
          case 0xFBu:
            uint64_t v9 = 40027;
            break;
          case 0xFCu:
            uint64_t v9 = 40028;
            break;
          case 0xFDu:
            uint64_t v9 = 40029;
            break;
          case 0xFEu:
            uint64_t v9 = 40030;
            break;
          case 0xFFu:
            uint64_t v9 = 40101;
            break;
          case 0u:
            uint64_t v9 = 40102;
            break;
          case 1u:
            uint64_t v9 = 40200;
            break;
          case 2u:
            uint64_t v9 = 40201;
            break;
          case 3u:
            uint64_t v9 = 40205;
            break;
          case 4u:
            uint64_t v9 = 40401;
            break;
          case 5u:
            uint64_t v9 = 40402;
            break;
          case 6u:
            uint64_t v9 = 40403;
            break;
          case 7u:
            uint64_t v9 = 40404;
            break;
          case 8u:
            uint64_t v9 = 40500;
            break;
          case 9u:
            uint64_t v9 = 40600;
            break;
          case 0xAu:
            uint64_t v9 = 40601;
            break;
          case 0xBu:
            uint64_t v9 = 50000;
            break;
          case 0xCu:
            uint64_t v9 = 50001;
            break;
          case 0xDu:
            uint64_t v9 = 50002;
            break;
          case 0xEu:
            uint64_t v9 = 99991;
            break;
          case 0xFu:
            uint64_t v9 = 99992;
            break;
          case 0x10u:
            uint64_t v9 = 99993;
            break;
          case 0x11u:
            uint64_t v9 = -1101;
            break;
          case 0x12u:
            uint64_t v9 = -1102;
            break;
          case 0x13u:
            uint64_t v9 = -1103;
            break;
          case 0x14u:
            uint64_t v9 = -1104;
            break;
          case 0x15u:
            uint64_t v9 = -1110;
            break;
          case 0x16u:
            uint64_t v9 = -1111;
            break;
          case 0x17u:
            uint64_t v9 = -1112;
            break;
          case 0x18u:
            uint64_t v9 = -1113;
            break;
          case 0x19u:
            uint64_t v9 = -1114;
            break;
          case 0x1Au:
            uint64_t v9 = -1115;
            break;
          case 0x1Bu:
            uint64_t v9 = -1116;
            break;
          case 0x1Cu:
            uint64_t v9 = -1117;
            break;
          case 0x1Du:
            uint64_t v9 = -1118;
            break;
          case 0x1Eu:
            uint64_t v9 = -1119;
            break;
          case 0x1Fu:
            uint64_t v9 = -1201;
            break;
          case 0x20u:
            uint64_t v9 = -1202;
            break;
          case 0x21u:
            uint64_t v9 = -1203;
            break;
          case 0x22u:
            uint64_t v9 = -1204;
            break;
          case 0x23u:
            uint64_t v9 = -1402;
            break;
          case 0x24u:
            uint64_t v9 = -1403;
            break;
          case 0x25u:
            uint64_t v9 = -1404;
            break;
          case 0x26u:
            uint64_t v9 = -1301;
            break;
          case 0x27u:
            uint64_t v9 = -1302;
            break;
          case 0x28u:
            uint64_t v9 = -1303;
            break;
          case 0x29u:
            uint64_t v9 = -1304;
            break;
          case 0x2Au:
            uint64_t v9 = -1305;
            break;
          case 0x2Bu:
            uint64_t v9 = -1306;
            break;
          case 0x2Cu:
            uint64_t v9 = -1307;
            break;
          case 0x2Du:
            uint64_t v9 = -1308;
            break;
          case 0x2Eu:
            uint64_t v9 = -1309;
            break;
          case 0x2Fu:
            uint64_t v9 = -1310;
            break;
          case 0x30u:
            uint64_t v9 = -1315;
            break;
          case 0x31u:
            uint64_t v9 = -1316;
            break;
          case 0x32u:
            uint64_t v9 = -1317;
            break;
          case 0x33u:
            uint64_t v9 = -131600;
            break;
          case 0x34u:
            uint64_t v9 = -2103;
            break;
          case 0x35u:
            uint64_t v9 = -2104;
            break;
          case 0x36u:
            uint64_t v9 = -2107;
            break;
          case 0x37u:
            uint64_t v9 = -2110;
            break;
          case 0x38u:
            uint64_t v9 = -2111;
            break;
          case 0x39u:
            uint64_t v9 = -2112;
            break;
          case 0x3Au:
            uint64_t v9 = -2123;
            break;
          case 0x3Bu:
            uint64_t v9 = -2124;
            break;
          case 0x3Cu:
            uint64_t v9 = -2125;
            break;
          case 0x3Du:
            uint64_t v9 = -2126;
            break;
          case 0x3Eu:
            uint64_t v9 = -2127;
            break;
          case 0x3Fu:
            uint64_t v9 = -3101;
            break;
          case 0x40u:
            uint64_t v9 = -3102;
            break;
          case 0x41u:
            uint64_t v9 = -3103;
            break;
          case 0x42u:
            uint64_t v9 = -3104;
            break;
          case 0x43u:
            uint64_t v9 = -3105;
            break;
          case 0x44u:
            uint64_t v9 = -3106;
            break;
          case 0x45u:
            uint64_t v9 = -3107;
            break;
          case 0x46u:
            uint64_t v9 = -3108;
            break;
          case 0x47u:
            uint64_t v9 = -3109;
            break;
          case 0x48u:
            uint64_t v9 = -3110;
            break;
          case 0x49u:
            uint64_t v9 = -3111;
            break;
          case 0x4Au:
            uint64_t v9 = -3112;
            break;
          case 0x4Bu:
            uint64_t v9 = -3113;
            break;
          case 0x4Cu:
            uint64_t v9 = -3151;
            break;
          case 0x4Du:
            uint64_t v9 = -3152;
            break;
          case 0x4Eu:
            uint64_t v9 = -3153;
            break;
          case 0x4Fu:
            uint64_t v9 = -3154;
            break;
          case 0x50u:
            uint64_t v9 = -3155;
            break;
          case 0x51u:
            uint64_t v9 = -3156;
            break;
          case 0x52u:
            uint64_t v9 = -3157;
            break;
          case 0x53u:
            uint64_t v9 = -3158;
            break;
          case 0x54u:
            uint64_t v9 = -3159;
            break;
          case 0x55u:
            uint64_t v9 = -3161;
            break;
          case 0x56u:
            uint64_t v9 = -3162;
            break;
          case 0x57u:
            uint64_t v9 = -3163;
            break;
          case 0x58u:
            uint64_t v9 = -3164;
            break;
          case 0x59u:
            uint64_t v9 = -3165;
            break;
          case 0x5Au:
            uint64_t v9 = -3166;
            break;
          case 0x5Bu:
            uint64_t v9 = -3167;
            break;
          case 0x5Cu:
            uint64_t v9 = -3168;
            break;
          case 0x5Du:
            uint64_t v9 = -3169;
            break;
          case 0x5Eu:
            uint64_t v9 = -3170;
            break;
          case 0x5Fu:
            uint64_t v9 = -3171;
            break;
          case 0x60u:
            uint64_t v9 = -3172;
            break;
          case 0x61u:
            uint64_t v9 = -3173;
            break;
          case 0x62u:
            uint64_t v9 = -3174;
            break;
          case 0x63u:
            uint64_t v9 = -3175;
            break;
          case 0x64u:
            uint64_t v9 = -3176;
            break;
          case 0x65u:
            uint64_t v9 = -3177;
            break;
          case 0x66u:
            uint64_t v9 = -3178;
            break;
          case 0x67u:
            uint64_t v9 = -3179;
            break;
          case 0x68u:
            uint64_t v9 = -3180;
            break;
          case 0x69u:
            uint64_t v9 = -3181;
            break;
          case 0x6Au:
            uint64_t v9 = -3182;
            break;
          case 0x6Bu:
            uint64_t v9 = -3183;
            break;
          case 0x6Cu:
            uint64_t v9 = -3184;
            break;
          case 0x6Du:
            uint64_t v9 = -3185;
            break;
          case 0x6Eu:
            uint64_t v9 = -3186;
            break;
          case 0x6Fu:
            uint64_t v9 = -3187;
            break;
          case 0x70u:
            uint64_t v9 = -3188;
            break;
          case 0x71u:
            uint64_t v9 = -3189;
            break;
          case 0x72u:
            uint64_t v9 = -3300;
            break;
          case 0x73u:
            uint64_t v9 = -5108;
            break;
          case 0x74u:
            uint64_t v9 = -6009;
            break;
          case 0x75u:
            uint64_t v9 = -6010;
            break;
          case 0x76u:
            uint64_t v9 = -6102;
            break;
          case 0x77u:
            uint64_t v9 = -6103;
            break;
          case 0x78u:
            uint64_t v9 = -6104;
            break;
          case 0x79u:
            uint64_t v9 = -6105;
            break;
          case 0x7Au:
            uint64_t v9 = -8001;
            break;
          case 0x7Bu:
            uint64_t v9 = -8301;
            break;
          case 0x7Cu:
            uint64_t v9 = -8304;
            break;
          case 0x7Du:
            uint64_t v9 = -8400;
            break;
          case 0x7Eu:
            uint64_t v9 = -8401;
            break;
          case 0x7Fu:
            uint64_t v9 = -8403;
            break;
          case 0x80u:
            uint64_t v9 = -8404;
            break;
          case 0x81u:
            uint64_t v9 = -8428;
            break;
          case 0x82u:
            uint64_t v9 = -8429;
            break;
          case 0x83u:
            uint64_t v9 = -8433;
            break;
          case 0x84u:
            uint64_t v9 = -8434;
            break;
          case 0x85u:
            uint64_t v9 = -8500;
            break;
          case 0x86u:
            uint64_t v9 = -8501;
            break;
          case 0x87u:
            uint64_t v9 = -8502;
            break;
          case 0x88u:
            uint64_t v9 = -8503;
            break;
          case 0x89u:
            uint64_t v9 = -8504;
            break;
          case 0x8Au:
            uint64_t v9 = -22200;
            break;
          case 0x8Bu:
            uint64_t v9 = -22201;
            break;
          case 0x8Cu:
            uint64_t v9 = -22202;
            break;
          case 0x8Du:
            uint64_t v9 = -22203;
            break;
          case 0x8Eu:
            uint64_t v9 = -22204;
            break;
          case 0x8Fu:
            uint64_t v9 = -22205;
            break;
          case 0x90u:
            uint64_t v9 = -22206;
            break;
          case 0x91u:
            uint64_t v9 = -22207;
            break;
          case 0x92u:
            uint64_t v9 = -22208;
            break;
          case 0x93u:
            uint64_t v9 = -72200;
            break;
          case 0x94u:
            uint64_t v9 = -72201;
            break;
          case 0x95u:
            uint64_t v9 = -72202;
            break;
          case 0x96u:
            uint64_t v9 = -72203;
            break;
          case 0x97u:
            uint64_t v9 = -72204;
            break;
          case 0x98u:
            uint64_t v9 = -72205;
            break;
          case 0x99u:
            uint64_t v9 = -72206;
            break;
          case 0x9Au:
            uint64_t v9 = -72207;
            break;
          case 0x9Bu:
            uint64_t v9 = -72208;
            break;
          case 0x9Cu:
            uint64_t v9 = -72209;
            break;
          case 0x9Du:
            uint64_t v9 = -72210;
            break;
          case 0x9Eu:
            uint64_t v9 = -72211;
            break;
          case 0x9Fu:
            uint64_t v9 = -72780;
            break;
          case 0xA0u:
            uint64_t v9 = -72781;
            break;
          case 0xA1u:
            uint64_t v9 = -72782;
            break;
          default:
            break;
        }
        uint64_t v10 = -1;
        switch(HIBYTE(a4))
        {
          case 1:
            uint64_t v10 = -2;
            break;
          case 2:
            uint64_t v10 = -3;
            break;
          case 3:
            uint64_t v10 = -4;
            break;
          case 4:
            uint64_t v10 = -5;
            break;
          case 5:
            uint64_t v10 = -6;
            break;
          case 6:
            uint64_t v10 = -7;
            break;
          case 7:
            uint64_t v10 = -8;
            break;
          case 8:
            uint64_t v10 = -9;
            break;
          case 9:
            uint64_t v10 = -10;
            break;
          case 0xA:
            uint64_t v10 = -11;
            break;
          case 0xB:
            uint64_t v10 = -12;
            break;
          case 0xC:
            uint64_t v10 = -13;
            break;
          case 0xD:
            uint64_t v10 = -14;
            break;
          case 0xE:
            uint64_t v10 = -15;
            break;
          case 0xF:
            uint64_t v10 = -16;
            break;
          case 0x10:
            uint64_t v10 = -17;
            break;
          case 0x11:
            uint64_t v10 = -18;
            break;
          case 0x12:
            uint64_t v10 = -19;
            break;
          case 0x13:
            uint64_t v10 = -20;
            break;
          case 0x14:
            uint64_t v10 = -21;
            break;
          case 0x15:
            uint64_t v10 = -22;
            break;
          case 0x16:
            uint64_t v10 = -28;
            break;
          case 0x17:
            uint64_t v10 = -29;
            break;
          case 0x18:
            uint64_t v10 = 200;
            break;
          case 0x19:
            uint64_t v10 = 20000;
            break;
          case 0x1A:
            uint64_t v10 = 20001;
            break;
          case 0x1B:
            uint64_t v10 = 20100;
            break;
          case 0x1C:
            uint64_t v10 = 40000;
            break;
          case 0x1D:
            uint64_t v10 = 40010;
            break;
          case 0x1E:
            uint64_t v10 = 40011;
            break;
          case 0x1F:
            uint64_t v10 = 40012;
            break;
          case 0x20:
            uint64_t v10 = 40013;
            break;
          case 0x21:
            uint64_t v10 = 40014;
            break;
          case 0x22:
            uint64_t v10 = 40015;
            break;
          case 0x23:
            uint64_t v10 = 40020;
            break;
          case 0x24:
            uint64_t v10 = 40021;
            break;
          case 0x25:
            uint64_t v10 = 40022;
            break;
          case 0x26:
            uint64_t v10 = 40023;
            break;
          case 0x27:
            uint64_t v10 = 40024;
            break;
          case 0x28:
            uint64_t v10 = 40025;
            break;
          case 0x29:
            uint64_t v10 = 40026;
            break;
          case 0x2A:
            uint64_t v10 = 40027;
            break;
          case 0x2B:
            uint64_t v10 = 40028;
            break;
          case 0x2C:
            uint64_t v10 = 40029;
            break;
          case 0x2D:
            uint64_t v10 = 40030;
            break;
          case 0x2E:
            uint64_t v10 = 40101;
            break;
          case 0x2F:
            uint64_t v10 = 40102;
            break;
          case 0x30:
            uint64_t v10 = 40200;
            break;
          case 0x31:
            uint64_t v10 = 40201;
            break;
          case 0x32:
            uint64_t v10 = 40205;
            break;
          case 0x33:
            uint64_t v10 = 40401;
            break;
          case 0x34:
            uint64_t v10 = 40402;
            break;
          case 0x35:
            uint64_t v10 = 40403;
            break;
          case 0x36:
            uint64_t v10 = 40404;
            break;
          case 0x37:
            uint64_t v10 = 40500;
            break;
          case 0x38:
            uint64_t v10 = 40600;
            break;
          case 0x39:
            uint64_t v10 = 40601;
            break;
          case 0x3A:
            uint64_t v10 = 50000;
            break;
          case 0x3B:
            uint64_t v10 = 50001;
            break;
          case 0x3C:
            uint64_t v10 = 50002;
            break;
          case 0x3D:
            uint64_t v10 = 99991;
            break;
          case 0x3E:
            uint64_t v10 = 99992;
            break;
          case 0x3F:
            uint64_t v10 = 99993;
            break;
          case 0x40:
            uint64_t v10 = -1101;
            break;
          case 0x41:
            uint64_t v10 = -1102;
            break;
          case 0x42:
            uint64_t v10 = -1103;
            break;
          case 0x43:
            uint64_t v10 = -1104;
            break;
          case 0x44:
            uint64_t v10 = -1110;
            break;
          case 0x45:
            uint64_t v10 = -1111;
            break;
          case 0x46:
            uint64_t v10 = -1112;
            break;
          case 0x47:
            uint64_t v10 = -1113;
            break;
          case 0x48:
            uint64_t v10 = -1114;
            break;
          case 0x49:
            uint64_t v10 = -1115;
            break;
          case 0x4A:
            uint64_t v10 = -1116;
            break;
          case 0x4B:
            uint64_t v10 = -1117;
            break;
          case 0x4C:
            uint64_t v10 = -1118;
            break;
          case 0x4D:
            uint64_t v10 = -1119;
            break;
          case 0x4E:
            uint64_t v10 = -1201;
            break;
          case 0x4F:
            uint64_t v10 = -1202;
            break;
          case 0x50:
            uint64_t v10 = -1203;
            break;
          case 0x51:
            uint64_t v10 = -1204;
            break;
          case 0x52:
            uint64_t v10 = -1402;
            break;
          case 0x53:
            uint64_t v10 = -1403;
            break;
          case 0x54:
            uint64_t v10 = -1404;
            break;
          case 0x55:
            uint64_t v10 = -1301;
            break;
          case 0x56:
            uint64_t v10 = -1302;
            break;
          case 0x57:
            uint64_t v10 = -1303;
            break;
          case 0x58:
            uint64_t v10 = -1304;
            break;
          case 0x59:
            uint64_t v10 = -1305;
            break;
          case 0x5A:
            uint64_t v10 = -1306;
            break;
          case 0x5B:
            uint64_t v10 = -1307;
            break;
          case 0x5C:
            uint64_t v10 = -1308;
            break;
          case 0x5D:
            uint64_t v10 = -1309;
            break;
          case 0x5E:
            uint64_t v10 = -1310;
            break;
          case 0x5F:
            uint64_t v10 = -1315;
            break;
          case 0x60:
            uint64_t v10 = -1316;
            break;
          case 0x61:
            uint64_t v10 = -1317;
            break;
          case 0x62:
            uint64_t v10 = -131600;
            break;
          case 0x63:
            uint64_t v10 = -2103;
            break;
          case 0x64:
            uint64_t v10 = -2104;
            break;
          case 0x65:
            uint64_t v10 = -2107;
            break;
          case 0x66:
            uint64_t v10 = -2110;
            break;
          case 0x67:
            uint64_t v10 = -2111;
            break;
          case 0x68:
            uint64_t v10 = -2112;
            break;
          case 0x69:
            uint64_t v10 = -2123;
            break;
          case 0x6A:
            uint64_t v10 = -2124;
            break;
          case 0x6B:
            uint64_t v10 = -2125;
            break;
          case 0x6C:
            uint64_t v10 = -2126;
            break;
          case 0x6D:
            uint64_t v10 = -2127;
            break;
          case 0x6E:
            uint64_t v10 = -3101;
            break;
          case 0x6F:
            uint64_t v10 = -3102;
            break;
          case 0x70:
            uint64_t v10 = -3103;
            break;
          case 0x71:
            uint64_t v10 = -3104;
            break;
          case 0x72:
            uint64_t v10 = -3105;
            break;
          case 0x73:
            uint64_t v10 = -3106;
            break;
          case 0x74:
            uint64_t v10 = -3107;
            break;
          case 0x75:
            uint64_t v10 = -3108;
            break;
          case 0x76:
            uint64_t v10 = -3109;
            break;
          case 0x77:
            uint64_t v10 = -3110;
            break;
          case 0x78:
            uint64_t v10 = -3111;
            break;
          case 0x79:
            uint64_t v10 = -3112;
            break;
          case 0x7A:
            uint64_t v10 = -3113;
            break;
          case 0x7B:
            uint64_t v10 = -3151;
            break;
          case 0x7C:
            uint64_t v10 = -3152;
            break;
          case 0x7D:
            uint64_t v10 = -3153;
            break;
          case 0x7E:
            uint64_t v10 = -3154;
            break;
          case 0x7F:
            uint64_t v10 = -3155;
            break;
          case 0x80:
            uint64_t v10 = -3156;
            break;
          case 0x81:
            uint64_t v10 = -3157;
            break;
          case 0x82:
            uint64_t v10 = -3158;
            break;
          case 0x83:
            uint64_t v10 = -3159;
            break;
          case 0x84:
            uint64_t v10 = -3161;
            break;
          case 0x85:
            uint64_t v10 = -3162;
            break;
          case 0x86:
            uint64_t v10 = -3163;
            break;
          case 0x87:
            uint64_t v10 = -3164;
            break;
          case 0x88:
            uint64_t v10 = -3165;
            break;
          case 0x89:
            uint64_t v10 = -3166;
            break;
          case 0x8A:
            uint64_t v10 = -3167;
            break;
          case 0x8B:
            uint64_t v10 = -3168;
            break;
          case 0x8C:
            uint64_t v10 = -3169;
            break;
          case 0x8D:
            uint64_t v10 = -3170;
            break;
          case 0x8E:
            uint64_t v10 = -3171;
            break;
          case 0x8F:
            uint64_t v10 = -3172;
            break;
          case 0x90:
            uint64_t v10 = -3173;
            break;
          case 0x91:
            uint64_t v10 = -3174;
            break;
          case 0x92:
            uint64_t v10 = -3175;
            break;
          case 0x93:
            uint64_t v10 = -3176;
            break;
          case 0x94:
            uint64_t v10 = -3177;
            break;
          case 0x95:
            uint64_t v10 = -3178;
            break;
          case 0x96:
            uint64_t v10 = -3179;
            break;
          case 0x97:
            uint64_t v10 = -3180;
            break;
          case 0x98:
            uint64_t v10 = -3181;
            break;
          case 0x99:
            uint64_t v10 = -3182;
            break;
          case 0x9A:
            uint64_t v10 = -3183;
            break;
          case 0x9B:
            uint64_t v10 = -3184;
            break;
          case 0x9C:
            uint64_t v10 = -3185;
            break;
          case 0x9D:
            uint64_t v10 = -3186;
            break;
          case 0x9E:
            uint64_t v10 = -3187;
            break;
          case 0x9F:
            uint64_t v10 = -3188;
            break;
          case 0xA0:
            uint64_t v10 = -3189;
            break;
          case 0xA1:
            uint64_t v10 = -3300;
            break;
          case 0xA2:
            uint64_t v10 = -5108;
            break;
          case 0xA3:
            uint64_t v10 = -6009;
            break;
          case 0xA4:
            uint64_t v10 = -6010;
            break;
          case 0xA5:
            uint64_t v10 = -6102;
            break;
          case 0xA6:
            uint64_t v10 = -6103;
            break;
          case 0xA7:
            uint64_t v10 = -6104;
            break;
          case 0xA8:
            uint64_t v10 = -6105;
            break;
          case 0xA9:
            uint64_t v10 = -8001;
            break;
          case 0xAA:
            uint64_t v10 = -8301;
            break;
          case 0xAB:
            uint64_t v10 = -8304;
            break;
          case 0xAC:
            uint64_t v10 = -8400;
            break;
          case 0xAD:
            uint64_t v10 = -8401;
            break;
          case 0xAE:
            uint64_t v10 = -8403;
            break;
          case 0xAF:
            uint64_t v10 = -8404;
            break;
          case 0xB0:
            uint64_t v10 = -8428;
            break;
          case 0xB1:
            uint64_t v10 = -8429;
            break;
          case 0xB2:
            uint64_t v10 = -8433;
            break;
          case 0xB3:
            uint64_t v10 = -8434;
            break;
          case 0xB4:
            uint64_t v10 = -8500;
            break;
          case 0xB5:
            uint64_t v10 = -8501;
            break;
          case 0xB6:
            uint64_t v10 = -8502;
            break;
          case 0xB7:
            uint64_t v10 = -8503;
            break;
          case 0xB8:
            uint64_t v10 = -8504;
            break;
          case 0xB9:
            uint64_t v10 = -22200;
            break;
          case 0xBA:
            uint64_t v10 = -22201;
            break;
          case 0xBB:
            uint64_t v10 = -22202;
            break;
          case 0xBC:
            uint64_t v10 = -22203;
            break;
          case 0xBD:
            uint64_t v10 = -22204;
            break;
          case 0xBE:
            uint64_t v10 = -22205;
            break;
          case 0xBF:
            uint64_t v10 = -22206;
            break;
          case 0xC0:
            uint64_t v10 = -22207;
            break;
          case 0xC1:
            uint64_t v10 = -22208;
            break;
          case 0xC2:
            uint64_t v10 = -72200;
            break;
          case 0xC3:
            uint64_t v10 = -72201;
            break;
          case 0xC4:
            uint64_t v10 = -72202;
            break;
          case 0xC5:
            uint64_t v10 = -72203;
            break;
          case 0xC6:
            uint64_t v10 = -72204;
            break;
          case 0xC7:
            uint64_t v10 = -72205;
            break;
          case 0xC8:
            uint64_t v10 = -72206;
            break;
          case 0xC9:
            uint64_t v10 = -72207;
            break;
          case 0xCA:
            uint64_t v10 = -72208;
            break;
          case 0xCB:
            uint64_t v10 = -72209;
            break;
          case 0xCC:
            uint64_t v10 = -72210;
            break;
          case 0xCD:
            uint64_t v10 = -72211;
            break;
          case 0xCE:
            uint64_t v10 = -72780;
            break;
          case 0xCF:
            uint64_t v10 = -72781;
            break;
          case 0xD0:
            uint64_t v10 = -72782;
            break;
          default:
            break;
        }
        if (v9 != v10) {
          return 0;
        }
        goto LABEL_7;
    }
  }
  if (HIBYTE(a2) != 209) {
    return 1;
  }
LABEL_7:
  int v5 = a4 & 1;
  BOOL v7 = (a4 & 1) == 0 && a1 == a3;
  if ((a2 & 1) == 0) {
    int v5 = v7;
  }
  return v5 ^ 1u;
}

uint64_t sub_214C865E8(__int16 a1, __int16 a2)
{
  if (a2 == 3) {
    return 0;
  }
  if (a1 == 3) {
    return 1;
  }
  if (HIBYTE(a2) != 209)
  {
    char v4 = 0;
    switch(HIBYTE(a1))
    {
      case 0xD1:
        return v4 & 1;
      case 0xD2:
        if (HIBYTE(a2) == 210) {
          goto LABEL_7;
        }
        return 0;
      case 0xD3:
        if (HIBYTE(a2) == 211) {
          goto LABEL_7;
        }
        return 0;
      case 0xD4:
        if (HIBYTE(a2) == 212) {
          goto LABEL_7;
        }
        return 0;
      case 0xD5:
        if (HIBYTE(a2) == 213) {
          goto LABEL_7;
        }
        return 0;
      case 0xD6:
        if (HIBYTE(a2) == 214) {
          goto LABEL_7;
        }
        return 0;
      case 0xD7:
        if (HIBYTE(a2) == 215) {
          goto LABEL_7;
        }
        return 0;
      case 0xD8:
        if (HIBYTE(a2) == 216) {
          goto LABEL_7;
        }
        return 0;
      case 0xD9:
        if (HIBYTE(a2) == 217) {
          goto LABEL_7;
        }
        return 0;
      default:
        if ((HIBYTE(a2) + 47) < 9u) {
          return 0;
        }
        uint64_t v5 = -1;
        switch(HIBYTE(a1))
        {
          case 0xD2u:
            uint64_t v5 = -2;
            break;
          case 0xD3u:
            uint64_t v5 = -3;
            break;
          case 0xD4u:
            uint64_t v5 = -4;
            break;
          case 0xD5u:
            uint64_t v5 = -5;
            break;
          case 0xD6u:
            uint64_t v5 = -6;
            break;
          case 0xD7u:
            uint64_t v5 = -7;
            break;
          case 0xD8u:
            uint64_t v5 = -8;
            break;
          case 0xD9u:
            uint64_t v5 = -9;
            break;
          case 0xDAu:
            uint64_t v5 = -10;
            break;
          case 0xDBu:
            uint64_t v5 = -11;
            break;
          case 0xDCu:
            uint64_t v5 = -12;
            break;
          case 0xDDu:
            uint64_t v5 = -13;
            break;
          case 0xDEu:
            uint64_t v5 = -14;
            break;
          case 0xDFu:
            uint64_t v5 = -15;
            break;
          case 0xE0u:
            uint64_t v5 = -16;
            break;
          case 0xE1u:
            uint64_t v5 = -17;
            break;
          case 0xE2u:
            uint64_t v5 = -18;
            break;
          case 0xE3u:
            uint64_t v5 = -19;
            break;
          case 0xE4u:
            uint64_t v5 = -20;
            break;
          case 0xE5u:
            uint64_t v5 = -21;
            break;
          case 0xE6u:
            uint64_t v5 = -22;
            break;
          case 0xE7u:
            uint64_t v5 = -28;
            break;
          case 0xE8u:
            uint64_t v5 = -29;
            break;
          case 0xE9u:
            uint64_t v5 = 200;
            break;
          case 0xEAu:
            uint64_t v5 = 20000;
            break;
          case 0xEBu:
            uint64_t v5 = 20001;
            break;
          case 0xECu:
            uint64_t v5 = 20100;
            break;
          case 0xEDu:
            uint64_t v5 = 40000;
            break;
          case 0xEEu:
            uint64_t v5 = 40010;
            break;
          case 0xEFu:
            uint64_t v5 = 40011;
            break;
          case 0xF0u:
            uint64_t v5 = 40012;
            break;
          case 0xF1u:
            uint64_t v5 = 40013;
            break;
          case 0xF2u:
            uint64_t v5 = 40014;
            break;
          case 0xF3u:
            uint64_t v5 = 40015;
            break;
          case 0xF4u:
            uint64_t v5 = 40020;
            break;
          case 0xF5u:
            uint64_t v5 = 40021;
            break;
          case 0xF6u:
            uint64_t v5 = 40022;
            break;
          case 0xF7u:
            uint64_t v5 = 40023;
            break;
          case 0xF8u:
            uint64_t v5 = 40024;
            break;
          case 0xF9u:
            uint64_t v5 = 40025;
            break;
          case 0xFAu:
            uint64_t v5 = 40026;
            break;
          case 0xFBu:
            uint64_t v5 = 40027;
            break;
          case 0xFCu:
            uint64_t v5 = 40028;
            break;
          case 0xFDu:
            uint64_t v5 = 40029;
            break;
          case 0xFEu:
            uint64_t v5 = 40030;
            break;
          case 0xFFu:
            uint64_t v5 = 40101;
            break;
          case 0u:
            uint64_t v5 = 40102;
            break;
          case 1u:
            uint64_t v5 = 40200;
            break;
          case 2u:
            uint64_t v5 = 40201;
            break;
          case 3u:
            uint64_t v5 = 40205;
            break;
          case 4u:
            uint64_t v5 = 40401;
            break;
          case 5u:
            uint64_t v5 = 40402;
            break;
          case 6u:
            uint64_t v5 = 40403;
            break;
          case 7u:
            uint64_t v5 = 40404;
            break;
          case 8u:
            uint64_t v5 = 40500;
            break;
          case 9u:
            uint64_t v5 = 40600;
            break;
          case 0xAu:
            uint64_t v5 = 40601;
            break;
          case 0xBu:
            uint64_t v5 = 50000;
            break;
          case 0xCu:
            uint64_t v5 = 50001;
            break;
          case 0xDu:
            uint64_t v5 = 50002;
            break;
          case 0xEu:
            uint64_t v5 = 99991;
            break;
          case 0xFu:
            uint64_t v5 = 99992;
            break;
          case 0x10u:
            uint64_t v5 = 99993;
            break;
          case 0x11u:
            uint64_t v5 = -1101;
            break;
          case 0x12u:
            uint64_t v5 = -1102;
            break;
          case 0x13u:
            uint64_t v5 = -1103;
            break;
          case 0x14u:
            uint64_t v5 = -1104;
            break;
          case 0x15u:
            uint64_t v5 = -1110;
            break;
          case 0x16u:
            uint64_t v5 = -1111;
            break;
          case 0x17u:
            uint64_t v5 = -1112;
            break;
          case 0x18u:
            uint64_t v5 = -1113;
            break;
          case 0x19u:
            uint64_t v5 = -1114;
            break;
          case 0x1Au:
            uint64_t v5 = -1115;
            break;
          case 0x1Bu:
            uint64_t v5 = -1116;
            break;
          case 0x1Cu:
            uint64_t v5 = -1117;
            break;
          case 0x1Du:
            uint64_t v5 = -1118;
            break;
          case 0x1Eu:
            uint64_t v5 = -1119;
            break;
          case 0x1Fu:
            uint64_t v5 = -1201;
            break;
          case 0x20u:
            uint64_t v5 = -1202;
            break;
          case 0x21u:
            uint64_t v5 = -1203;
            break;
          case 0x22u:
            uint64_t v5 = -1204;
            break;
          case 0x23u:
            uint64_t v5 = -1402;
            break;
          case 0x24u:
            uint64_t v5 = -1403;
            break;
          case 0x25u:
            uint64_t v5 = -1404;
            break;
          case 0x26u:
            uint64_t v5 = -1301;
            break;
          case 0x27u:
            uint64_t v5 = -1302;
            break;
          case 0x28u:
            uint64_t v5 = -1303;
            break;
          case 0x29u:
            uint64_t v5 = -1304;
            break;
          case 0x2Au:
            uint64_t v5 = -1305;
            break;
          case 0x2Bu:
            uint64_t v5 = -1306;
            break;
          case 0x2Cu:
            uint64_t v5 = -1307;
            break;
          case 0x2Du:
            uint64_t v5 = -1308;
            break;
          case 0x2Eu:
            uint64_t v5 = -1309;
            break;
          case 0x2Fu:
            uint64_t v5 = -1310;
            break;
          case 0x30u:
            uint64_t v5 = -1315;
            break;
          case 0x31u:
            uint64_t v5 = -1316;
            break;
          case 0x32u:
            uint64_t v5 = -1317;
            break;
          case 0x33u:
            uint64_t v5 = -131600;
            break;
          case 0x34u:
            uint64_t v5 = -2103;
            break;
          case 0x35u:
            uint64_t v5 = -2104;
            break;
          case 0x36u:
            uint64_t v5 = -2107;
            break;
          case 0x37u:
            uint64_t v5 = -2110;
            break;
          case 0x38u:
            uint64_t v5 = -2111;
            break;
          case 0x39u:
            uint64_t v5 = -2112;
            break;
          case 0x3Au:
            uint64_t v5 = -2123;
            break;
          case 0x3Bu:
            uint64_t v5 = -2124;
            break;
          case 0x3Cu:
            uint64_t v5 = -2125;
            break;
          case 0x3Du:
            uint64_t v5 = -2126;
            break;
          case 0x3Eu:
            uint64_t v5 = -2127;
            break;
          case 0x3Fu:
            uint64_t v5 = -3101;
            break;
          case 0x40u:
            uint64_t v5 = -3102;
            break;
          case 0x41u:
            uint64_t v5 = -3103;
            break;
          case 0x42u:
            uint64_t v5 = -3104;
            break;
          case 0x43u:
            uint64_t v5 = -3105;
            break;
          case 0x44u:
            uint64_t v5 = -3106;
            break;
          case 0x45u:
            uint64_t v5 = -3107;
            break;
          case 0x46u:
            uint64_t v5 = -3108;
            break;
          case 0x47u:
            uint64_t v5 = -3109;
            break;
          case 0x48u:
            uint64_t v5 = -3110;
            break;
          case 0x49u:
            uint64_t v5 = -3111;
            break;
          case 0x4Au:
            uint64_t v5 = -3112;
            break;
          case 0x4Bu:
            uint64_t v5 = -3113;
            break;
          case 0x4Cu:
            uint64_t v5 = -3151;
            break;
          case 0x4Du:
            uint64_t v5 = -3152;
            break;
          case 0x4Eu:
            uint64_t v5 = -3153;
            break;
          case 0x4Fu:
            uint64_t v5 = -3154;
            break;
          case 0x50u:
            uint64_t v5 = -3155;
            break;
          case 0x51u:
            uint64_t v5 = -3156;
            break;
          case 0x52u:
            uint64_t v5 = -3157;
            break;
          case 0x53u:
            uint64_t v5 = -3158;
            break;
          case 0x54u:
            uint64_t v5 = -3159;
            break;
          case 0x55u:
            uint64_t v5 = -3161;
            break;
          case 0x56u:
            uint64_t v5 = -3162;
            break;
          case 0x57u:
            uint64_t v5 = -3163;
            break;
          case 0x58u:
            uint64_t v5 = -3164;
            break;
          case 0x59u:
            uint64_t v5 = -3165;
            break;
          case 0x5Au:
            uint64_t v5 = -3166;
            break;
          case 0x5Bu:
            uint64_t v5 = -3167;
            break;
          case 0x5Cu:
            uint64_t v5 = -3168;
            break;
          case 0x5Du:
            uint64_t v5 = -3169;
            break;
          case 0x5Eu:
            uint64_t v5 = -3170;
            break;
          case 0x5Fu:
            uint64_t v5 = -3171;
            break;
          case 0x60u:
            uint64_t v5 = -3172;
            break;
          case 0x61u:
            uint64_t v5 = -3173;
            break;
          case 0x62u:
            uint64_t v5 = -3174;
            break;
          case 0x63u:
            uint64_t v5 = -3175;
            break;
          case 0x64u:
            uint64_t v5 = -3176;
            break;
          case 0x65u:
            uint64_t v5 = -3177;
            break;
          case 0x66u:
            uint64_t v5 = -3178;
            break;
          case 0x67u:
            uint64_t v5 = -3179;
            break;
          case 0x68u:
            uint64_t v5 = -3180;
            break;
          case 0x69u:
            uint64_t v5 = -3181;
            break;
          case 0x6Au:
            uint64_t v5 = -3182;
            break;
          case 0x6Bu:
            uint64_t v5 = -3183;
            break;
          case 0x6Cu:
            uint64_t v5 = -3184;
            break;
          case 0x6Du:
            uint64_t v5 = -3185;
            break;
          case 0x6Eu:
            uint64_t v5 = -3186;
            break;
          case 0x6Fu:
            uint64_t v5 = -3187;
            break;
          case 0x70u:
            uint64_t v5 = -3188;
            break;
          case 0x71u:
            uint64_t v5 = -3189;
            break;
          case 0x72u:
            uint64_t v5 = -3300;
            break;
          case 0x73u:
            uint64_t v5 = -5108;
            break;
          case 0x74u:
            uint64_t v5 = -6009;
            break;
          case 0x75u:
            uint64_t v5 = -6010;
            break;
          case 0x76u:
            uint64_t v5 = -6102;
            break;
          case 0x77u:
            uint64_t v5 = -6103;
            break;
          case 0x78u:
            uint64_t v5 = -6104;
            break;
          case 0x79u:
            uint64_t v5 = -6105;
            break;
          case 0x7Au:
            uint64_t v5 = -8001;
            break;
          case 0x7Bu:
            uint64_t v5 = -8301;
            break;
          case 0x7Cu:
            uint64_t v5 = -8304;
            break;
          case 0x7Du:
            uint64_t v5 = -8400;
            break;
          case 0x7Eu:
            uint64_t v5 = -8401;
            break;
          case 0x7Fu:
            uint64_t v5 = -8403;
            break;
          case 0x80u:
            uint64_t v5 = -8404;
            break;
          case 0x81u:
            uint64_t v5 = -8428;
            break;
          case 0x82u:
            uint64_t v5 = -8429;
            break;
          case 0x83u:
            uint64_t v5 = -8433;
            break;
          case 0x84u:
            uint64_t v5 = -8434;
            break;
          case 0x85u:
            uint64_t v5 = -8500;
            break;
          case 0x86u:
            uint64_t v5 = -8501;
            break;
          case 0x87u:
            uint64_t v5 = -8502;
            break;
          case 0x88u:
            uint64_t v5 = -8503;
            break;
          case 0x89u:
            uint64_t v5 = -8504;
            break;
          case 0x8Au:
            uint64_t v5 = -22200;
            break;
          case 0x8Bu:
            uint64_t v5 = -22201;
            break;
          case 0x8Cu:
            uint64_t v5 = -22202;
            break;
          case 0x8Du:
            uint64_t v5 = -22203;
            break;
          case 0x8Eu:
            uint64_t v5 = -22204;
            break;
          case 0x8Fu:
            uint64_t v5 = -22205;
            break;
          case 0x90u:
            uint64_t v5 = -22206;
            break;
          case 0x91u:
            uint64_t v5 = -22207;
            break;
          case 0x92u:
            uint64_t v5 = -22208;
            break;
          case 0x93u:
            uint64_t v5 = -72200;
            break;
          case 0x94u:
            uint64_t v5 = -72201;
            break;
          case 0x95u:
            uint64_t v5 = -72202;
            break;
          case 0x96u:
            uint64_t v5 = -72203;
            break;
          case 0x97u:
            uint64_t v5 = -72204;
            break;
          case 0x98u:
            uint64_t v5 = -72205;
            break;
          case 0x99u:
            uint64_t v5 = -72206;
            break;
          case 0x9Au:
            uint64_t v5 = -72207;
            break;
          case 0x9Bu:
            uint64_t v5 = -72208;
            break;
          case 0x9Cu:
            uint64_t v5 = -72209;
            break;
          case 0x9Du:
            uint64_t v5 = -72210;
            break;
          case 0x9Eu:
            uint64_t v5 = -72211;
            break;
          case 0x9Fu:
            uint64_t v5 = -72780;
            break;
          case 0xA0u:
            uint64_t v5 = -72781;
            break;
          case 0xA1u:
            uint64_t v5 = -72782;
            break;
          default:
            break;
        }
        uint64_t v6 = -1;
        switch(HIBYTE(a2))
        {
          case 1:
            uint64_t v6 = -2;
            break;
          case 2:
            uint64_t v6 = -3;
            break;
          case 3:
            uint64_t v6 = -4;
            break;
          case 4:
            uint64_t v6 = -5;
            break;
          case 5:
            uint64_t v6 = -6;
            break;
          case 6:
            uint64_t v6 = -7;
            break;
          case 7:
            uint64_t v6 = -8;
            break;
          case 8:
            uint64_t v6 = -9;
            break;
          case 9:
            uint64_t v6 = -10;
            break;
          case 0xA:
            uint64_t v6 = -11;
            break;
          case 0xB:
            uint64_t v6 = -12;
            break;
          case 0xC:
            uint64_t v6 = -13;
            break;
          case 0xD:
            uint64_t v6 = -14;
            break;
          case 0xE:
            uint64_t v6 = -15;
            break;
          case 0xF:
            uint64_t v6 = -16;
            break;
          case 0x10:
            uint64_t v6 = -17;
            break;
          case 0x11:
            uint64_t v6 = -18;
            break;
          case 0x12:
            uint64_t v6 = -19;
            break;
          case 0x13:
            uint64_t v6 = -20;
            break;
          case 0x14:
            uint64_t v6 = -21;
            break;
          case 0x15:
            uint64_t v6 = -22;
            break;
          case 0x16:
            uint64_t v6 = -28;
            break;
          case 0x17:
            uint64_t v6 = -29;
            break;
          case 0x18:
            uint64_t v6 = 200;
            break;
          case 0x19:
            uint64_t v6 = 20000;
            break;
          case 0x1A:
            uint64_t v6 = 20001;
            break;
          case 0x1B:
            uint64_t v6 = 20100;
            break;
          case 0x1C:
            uint64_t v6 = 40000;
            break;
          case 0x1D:
            uint64_t v6 = 40010;
            break;
          case 0x1E:
            uint64_t v6 = 40011;
            break;
          case 0x1F:
            uint64_t v6 = 40012;
            break;
          case 0x20:
            uint64_t v6 = 40013;
            break;
          case 0x21:
            uint64_t v6 = 40014;
            break;
          case 0x22:
            uint64_t v6 = 40015;
            break;
          case 0x23:
            uint64_t v6 = 40020;
            break;
          case 0x24:
            uint64_t v6 = 40021;
            break;
          case 0x25:
            uint64_t v6 = 40022;
            break;
          case 0x26:
            uint64_t v6 = 40023;
            break;
          case 0x27:
            uint64_t v6 = 40024;
            break;
          case 0x28:
            uint64_t v6 = 40025;
            break;
          case 0x29:
            uint64_t v6 = 40026;
            break;
          case 0x2A:
            uint64_t v6 = 40027;
            break;
          case 0x2B:
            uint64_t v6 = 40028;
            break;
          case 0x2C:
            uint64_t v6 = 40029;
            break;
          case 0x2D:
            uint64_t v6 = 40030;
            break;
          case 0x2E:
            uint64_t v6 = 40101;
            break;
          case 0x2F:
            uint64_t v6 = 40102;
            break;
          case 0x30:
            uint64_t v6 = 40200;
            break;
          case 0x31:
            uint64_t v6 = 40201;
            break;
          case 0x32:
            uint64_t v6 = 40205;
            break;
          case 0x33:
            uint64_t v6 = 40401;
            break;
          case 0x34:
            uint64_t v6 = 40402;
            break;
          case 0x35:
            uint64_t v6 = 40403;
            break;
          case 0x36:
            uint64_t v6 = 40404;
            break;
          case 0x37:
            uint64_t v6 = 40500;
            break;
          case 0x38:
            uint64_t v6 = 40600;
            break;
          case 0x39:
            uint64_t v6 = 40601;
            break;
          case 0x3A:
            uint64_t v6 = 50000;
            break;
          case 0x3B:
            uint64_t v6 = 50001;
            break;
          case 0x3C:
            uint64_t v6 = 50002;
            break;
          case 0x3D:
            uint64_t v6 = 99991;
            break;
          case 0x3E:
            uint64_t v6 = 99992;
            break;
          case 0x3F:
            uint64_t v6 = 99993;
            break;
          case 0x40:
            uint64_t v6 = -1101;
            break;
          case 0x41:
            uint64_t v6 = -1102;
            break;
          case 0x42:
            uint64_t v6 = -1103;
            break;
          case 0x43:
            uint64_t v6 = -1104;
            break;
          case 0x44:
            uint64_t v6 = -1110;
            break;
          case 0x45:
            uint64_t v6 = -1111;
            break;
          case 0x46:
            uint64_t v6 = -1112;
            break;
          case 0x47:
            uint64_t v6 = -1113;
            break;
          case 0x48:
            uint64_t v6 = -1114;
            break;
          case 0x49:
            uint64_t v6 = -1115;
            break;
          case 0x4A:
            uint64_t v6 = -1116;
            break;
          case 0x4B:
            uint64_t v6 = -1117;
            break;
          case 0x4C:
            uint64_t v6 = -1118;
            break;
          case 0x4D:
            uint64_t v6 = -1119;
            break;
          case 0x4E:
            uint64_t v6 = -1201;
            break;
          case 0x4F:
            uint64_t v6 = -1202;
            break;
          case 0x50:
            uint64_t v6 = -1203;
            break;
          case 0x51:
            uint64_t v6 = -1204;
            break;
          case 0x52:
            uint64_t v6 = -1402;
            break;
          case 0x53:
            uint64_t v6 = -1403;
            break;
          case 0x54:
            uint64_t v6 = -1404;
            break;
          case 0x55:
            uint64_t v6 = -1301;
            break;
          case 0x56:
            uint64_t v6 = -1302;
            break;
          case 0x57:
            uint64_t v6 = -1303;
            break;
          case 0x58:
            uint64_t v6 = -1304;
            break;
          case 0x59:
            uint64_t v6 = -1305;
            break;
          case 0x5A:
            uint64_t v6 = -1306;
            break;
          case 0x5B:
            uint64_t v6 = -1307;
            break;
          case 0x5C:
            uint64_t v6 = -1308;
            break;
          case 0x5D:
            uint64_t v6 = -1309;
            break;
          case 0x5E:
            uint64_t v6 = -1310;
            break;
          case 0x5F:
            uint64_t v6 = -1315;
            break;
          case 0x60:
            uint64_t v6 = -1316;
            break;
          case 0x61:
            uint64_t v6 = -1317;
            break;
          case 0x62:
            uint64_t v6 = -131600;
            break;
          case 0x63:
            uint64_t v6 = -2103;
            break;
          case 0x64:
            uint64_t v6 = -2104;
            break;
          case 0x65:
            uint64_t v6 = -2107;
            break;
          case 0x66:
            uint64_t v6 = -2110;
            break;
          case 0x67:
            uint64_t v6 = -2111;
            break;
          case 0x68:
            uint64_t v6 = -2112;
            break;
          case 0x69:
            uint64_t v6 = -2123;
            break;
          case 0x6A:
            uint64_t v6 = -2124;
            break;
          case 0x6B:
            uint64_t v6 = -2125;
            break;
          case 0x6C:
            uint64_t v6 = -2126;
            break;
          case 0x6D:
            uint64_t v6 = -2127;
            break;
          case 0x6E:
            uint64_t v6 = -3101;
            break;
          case 0x6F:
            uint64_t v6 = -3102;
            break;
          case 0x70:
            uint64_t v6 = -3103;
            break;
          case 0x71:
            uint64_t v6 = -3104;
            break;
          case 0x72:
            uint64_t v6 = -3105;
            break;
          case 0x73:
            uint64_t v6 = -3106;
            break;
          case 0x74:
            uint64_t v6 = -3107;
            break;
          case 0x75:
            uint64_t v6 = -3108;
            break;
          case 0x76:
            uint64_t v6 = -3109;
            break;
          case 0x77:
            uint64_t v6 = -3110;
            break;
          case 0x78:
            uint64_t v6 = -3111;
            break;
          case 0x79:
            uint64_t v6 = -3112;
            break;
          case 0x7A:
            uint64_t v6 = -3113;
            break;
          case 0x7B:
            uint64_t v6 = -3151;
            break;
          case 0x7C:
            uint64_t v6 = -3152;
            break;
          case 0x7D:
            uint64_t v6 = -3153;
            break;
          case 0x7E:
            uint64_t v6 = -3154;
            break;
          case 0x7F:
            uint64_t v6 = -3155;
            break;
          case 0x80:
            uint64_t v6 = -3156;
            break;
          case 0x81:
            uint64_t v6 = -3157;
            break;
          case 0x82:
            uint64_t v6 = -3158;
            break;
          case 0x83:
            uint64_t v6 = -3159;
            break;
          case 0x84:
            uint64_t v6 = -3161;
            break;
          case 0x85:
            uint64_t v6 = -3162;
            break;
          case 0x86:
            uint64_t v6 = -3163;
            break;
          case 0x87:
            uint64_t v6 = -3164;
            break;
          case 0x88:
            uint64_t v6 = -3165;
            break;
          case 0x89:
            uint64_t v6 = -3166;
            break;
          case 0x8A:
            uint64_t v6 = -3167;
            break;
          case 0x8B:
            uint64_t v6 = -3168;
            break;
          case 0x8C:
            uint64_t v6 = -3169;
            break;
          case 0x8D:
            uint64_t v6 = -3170;
            break;
          case 0x8E:
            uint64_t v6 = -3171;
            break;
          case 0x8F:
            uint64_t v6 = -3172;
            break;
          case 0x90:
            uint64_t v6 = -3173;
            break;
          case 0x91:
            uint64_t v6 = -3174;
            break;
          case 0x92:
            uint64_t v6 = -3175;
            break;
          case 0x93:
            uint64_t v6 = -3176;
            break;
          case 0x94:
            uint64_t v6 = -3177;
            break;
          case 0x95:
            uint64_t v6 = -3178;
            break;
          case 0x96:
            uint64_t v6 = -3179;
            break;
          case 0x97:
            uint64_t v6 = -3180;
            break;
          case 0x98:
            uint64_t v6 = -3181;
            break;
          case 0x99:
            uint64_t v6 = -3182;
            break;
          case 0x9A:
            uint64_t v6 = -3183;
            break;
          case 0x9B:
            uint64_t v6 = -3184;
            break;
          case 0x9C:
            uint64_t v6 = -3185;
            break;
          case 0x9D:
            uint64_t v6 = -3186;
            break;
          case 0x9E:
            uint64_t v6 = -3187;
            break;
          case 0x9F:
            uint64_t v6 = -3188;
            break;
          case 0xA0:
            uint64_t v6 = -3189;
            break;
          case 0xA1:
            uint64_t v6 = -3300;
            break;
          case 0xA2:
            uint64_t v6 = -5108;
            break;
          case 0xA3:
            uint64_t v6 = -6009;
            break;
          case 0xA4:
            uint64_t v6 = -6010;
            break;
          case 0xA5:
            uint64_t v6 = -6102;
            break;
          case 0xA6:
            uint64_t v6 = -6103;
            break;
          case 0xA7:
            uint64_t v6 = -6104;
            break;
          case 0xA8:
            uint64_t v6 = -6105;
            break;
          case 0xA9:
            uint64_t v6 = -8001;
            break;
          case 0xAA:
            uint64_t v6 = -8301;
            break;
          case 0xAB:
            uint64_t v6 = -8304;
            break;
          case 0xAC:
            uint64_t v6 = -8400;
            break;
          case 0xAD:
            uint64_t v6 = -8401;
            break;
          case 0xAE:
            uint64_t v6 = -8403;
            break;
          case 0xAF:
            uint64_t v6 = -8404;
            break;
          case 0xB0:
            uint64_t v6 = -8428;
            break;
          case 0xB1:
            uint64_t v6 = -8429;
            break;
          case 0xB2:
            uint64_t v6 = -8433;
            break;
          case 0xB3:
            uint64_t v6 = -8434;
            break;
          case 0xB4:
            uint64_t v6 = -8500;
            break;
          case 0xB5:
            uint64_t v6 = -8501;
            break;
          case 0xB6:
            uint64_t v6 = -8502;
            break;
          case 0xB7:
            uint64_t v6 = -8503;
            break;
          case 0xB8:
            uint64_t v6 = -8504;
            break;
          case 0xB9:
            uint64_t v6 = -22200;
            break;
          case 0xBA:
            uint64_t v6 = -22201;
            break;
          case 0xBB:
            uint64_t v6 = -22202;
            break;
          case 0xBC:
            uint64_t v6 = -22203;
            break;
          case 0xBD:
            uint64_t v6 = -22204;
            break;
          case 0xBE:
            uint64_t v6 = -22205;
            break;
          case 0xBF:
            uint64_t v6 = -22206;
            break;
          case 0xC0:
            uint64_t v6 = -22207;
            break;
          case 0xC1:
            uint64_t v6 = -22208;
            break;
          case 0xC2:
            uint64_t v6 = -72200;
            break;
          case 0xC3:
            uint64_t v6 = -72201;
            break;
          case 0xC4:
            uint64_t v6 = -72202;
            break;
          case 0xC5:
            uint64_t v6 = -72203;
            break;
          case 0xC6:
            uint64_t v6 = -72204;
            break;
          case 0xC7:
            uint64_t v6 = -72205;
            break;
          case 0xC8:
            uint64_t v6 = -72206;
            break;
          case 0xC9:
            uint64_t v6 = -72207;
            break;
          case 0xCA:
            uint64_t v6 = -72208;
            break;
          case 0xCB:
            uint64_t v6 = -72209;
            break;
          case 0xCC:
            uint64_t v6 = -72210;
            break;
          case 0xCD:
            uint64_t v6 = -72211;
            break;
          case 0xCE:
            uint64_t v6 = -72780;
            break;
          case 0xCF:
            uint64_t v6 = -72781;
            break;
          case 0xD0:
            uint64_t v6 = -72782;
            break;
          default:
            break;
        }
        if (v5 != v6) {
          return 0;
        }
        goto LABEL_7;
    }
  }
  if (HIBYTE(a1) != 209) {
    return 1;
  }
LABEL_7:
  char v3 = a2 == 2 && a1 == 2;
  if (a1 != 2 && a2 != 2) {
    char v3 = ((a2 & 1) == 0) ^ a1;
  }
  char v4 = v3 ^ 1;
  return v4 & 1;
}

BOOL sub_214C87C54(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if (HIBYTE(a4) == 218) {
    return 0;
  }
  if (HIBYTE(a2) == 218) {
    return 1;
  }
  if (HIBYTE(a4) != 209)
  {
    uint64_t v5 = 0;
    switch(HIBYTE(a2))
    {
      case 0xD1:
        return v5;
      case 0xD2:
        if (HIBYTE(a4) == 210) {
          goto LABEL_7;
        }
        return 0;
      case 0xD3:
        if (HIBYTE(a4) == 211) {
          goto LABEL_7;
        }
        return 0;
      case 0xD4:
        if (HIBYTE(a4) == 212) {
          goto LABEL_7;
        }
        return 0;
      case 0xD5:
        if (HIBYTE(a4) == 213) {
          goto LABEL_7;
        }
        return 0;
      case 0xD6:
        if (HIBYTE(a4) == 214) {
          goto LABEL_7;
        }
        return 0;
      case 0xD7:
        if (HIBYTE(a4) == 215) {
          goto LABEL_7;
        }
        return 0;
      case 0xD8:
        if (HIBYTE(a4) == 216) {
          goto LABEL_7;
        }
        return 0;
      case 0xD9:
        if (HIBYTE(a4) == 217) {
          goto LABEL_7;
        }
        return 0;
      default:
        if ((HIBYTE(a4) + 47) < 9u) {
          return 0;
        }
        uint64_t v6 = -1;
        switch(HIBYTE(a2))
        {
          case 0xD2u:
            uint64_t v6 = -2;
            break;
          case 0xD3u:
            uint64_t v6 = -3;
            break;
          case 0xD4u:
            uint64_t v6 = -4;
            break;
          case 0xD5u:
            uint64_t v6 = -5;
            break;
          case 0xD6u:
            uint64_t v6 = -6;
            break;
          case 0xD7u:
            uint64_t v6 = -7;
            break;
          case 0xD8u:
            uint64_t v6 = -8;
            break;
          case 0xD9u:
            uint64_t v6 = -9;
            break;
          case 0xDAu:
            uint64_t v6 = -10;
            break;
          case 0xDBu:
            uint64_t v6 = -11;
            break;
          case 0xDCu:
            uint64_t v6 = -12;
            break;
          case 0xDDu:
            uint64_t v6 = -13;
            break;
          case 0xDEu:
            uint64_t v6 = -14;
            break;
          case 0xDFu:
            uint64_t v6 = -15;
            break;
          case 0xE0u:
            uint64_t v6 = -16;
            break;
          case 0xE1u:
            uint64_t v6 = -17;
            break;
          case 0xE2u:
            uint64_t v6 = -18;
            break;
          case 0xE3u:
            uint64_t v6 = -19;
            break;
          case 0xE4u:
            uint64_t v6 = -20;
            break;
          case 0xE5u:
            uint64_t v6 = -21;
            break;
          case 0xE6u:
            uint64_t v6 = -22;
            break;
          case 0xE7u:
            uint64_t v6 = -28;
            break;
          case 0xE8u:
            uint64_t v6 = -29;
            break;
          case 0xE9u:
            uint64_t v6 = 200;
            break;
          case 0xEAu:
            uint64_t v6 = 20000;
            break;
          case 0xEBu:
            uint64_t v6 = 20001;
            break;
          case 0xECu:
            uint64_t v6 = 20100;
            break;
          case 0xEDu:
            uint64_t v6 = 40000;
            break;
          case 0xEEu:
            uint64_t v6 = 40010;
            break;
          case 0xEFu:
            uint64_t v6 = 40011;
            break;
          case 0xF0u:
            uint64_t v6 = 40012;
            break;
          case 0xF1u:
            uint64_t v6 = 40013;
            break;
          case 0xF2u:
            uint64_t v6 = 40014;
            break;
          case 0xF3u:
            uint64_t v6 = 40015;
            break;
          case 0xF4u:
            uint64_t v6 = 40020;
            break;
          case 0xF5u:
            uint64_t v6 = 40021;
            break;
          case 0xF6u:
            uint64_t v6 = 40022;
            break;
          case 0xF7u:
            uint64_t v6 = 40023;
            break;
          case 0xF8u:
            uint64_t v6 = 40024;
            break;
          case 0xF9u:
            uint64_t v6 = 40025;
            break;
          case 0xFAu:
            uint64_t v6 = 40026;
            break;
          case 0xFBu:
            uint64_t v6 = 40027;
            break;
          case 0xFCu:
            uint64_t v6 = 40028;
            break;
          case 0xFDu:
            uint64_t v6 = 40029;
            break;
          case 0xFEu:
            uint64_t v6 = 40030;
            break;
          case 0xFFu:
            uint64_t v6 = 40101;
            break;
          case 0u:
            uint64_t v6 = 40102;
            break;
          case 1u:
            uint64_t v6 = 40200;
            break;
          case 2u:
            uint64_t v6 = 40201;
            break;
          case 3u:
            uint64_t v6 = 40205;
            break;
          case 4u:
            uint64_t v6 = 40401;
            break;
          case 5u:
            uint64_t v6 = 40402;
            break;
          case 6u:
            uint64_t v6 = 40403;
            break;
          case 7u:
            uint64_t v6 = 40404;
            break;
          case 8u:
            uint64_t v6 = 40500;
            break;
          case 9u:
            uint64_t v6 = 40600;
            break;
          case 0xAu:
            uint64_t v6 = 40601;
            break;
          case 0xBu:
            uint64_t v6 = 50000;
            break;
          case 0xCu:
            uint64_t v6 = 50001;
            break;
          case 0xDu:
            uint64_t v6 = 50002;
            break;
          case 0xEu:
            uint64_t v6 = 99991;
            break;
          case 0xFu:
            uint64_t v6 = 99992;
            break;
          case 0x10u:
            uint64_t v6 = 99993;
            break;
          case 0x11u:
            uint64_t v6 = -1101;
            break;
          case 0x12u:
            uint64_t v6 = -1102;
            break;
          case 0x13u:
            uint64_t v6 = -1103;
            break;
          case 0x14u:
            uint64_t v6 = -1104;
            break;
          case 0x15u:
            uint64_t v6 = -1110;
            break;
          case 0x16u:
            uint64_t v6 = -1111;
            break;
          case 0x17u:
            uint64_t v6 = -1112;
            break;
          case 0x18u:
            uint64_t v6 = -1113;
            break;
          case 0x19u:
            uint64_t v6 = -1114;
            break;
          case 0x1Au:
            uint64_t v6 = -1115;
            break;
          case 0x1Bu:
            uint64_t v6 = -1116;
            break;
          case 0x1Cu:
            uint64_t v6 = -1117;
            break;
          case 0x1Du:
            uint64_t v6 = -1118;
            break;
          case 0x1Eu:
            uint64_t v6 = -1119;
            break;
          case 0x1Fu:
            uint64_t v6 = -1201;
            break;
          case 0x20u:
            uint64_t v6 = -1202;
            break;
          case 0x21u:
            uint64_t v6 = -1203;
            break;
          case 0x22u:
            uint64_t v6 = -1204;
            break;
          case 0x23u:
            uint64_t v6 = -1402;
            break;
          case 0x24u:
            uint64_t v6 = -1403;
            break;
          case 0x25u:
            uint64_t v6 = -1404;
            break;
          case 0x26u:
            uint64_t v6 = -1301;
            break;
          case 0x27u:
            uint64_t v6 = -1302;
            break;
          case 0x28u:
            uint64_t v6 = -1303;
            break;
          case 0x29u:
            uint64_t v6 = -1304;
            break;
          case 0x2Au:
            uint64_t v6 = -1305;
            break;
          case 0x2Bu:
            uint64_t v6 = -1306;
            break;
          case 0x2Cu:
            uint64_t v6 = -1307;
            break;
          case 0x2Du:
            uint64_t v6 = -1308;
            break;
          case 0x2Eu:
            uint64_t v6 = -1309;
            break;
          case 0x2Fu:
            uint64_t v6 = -1310;
            break;
          case 0x30u:
            uint64_t v6 = -1315;
            break;
          case 0x31u:
            uint64_t v6 = -1316;
            break;
          case 0x32u:
            uint64_t v6 = -1317;
            break;
          case 0x33u:
            uint64_t v6 = -131600;
            break;
          case 0x34u:
            uint64_t v6 = -2103;
            break;
          case 0x35u:
            uint64_t v6 = -2104;
            break;
          case 0x36u:
            uint64_t v6 = -2107;
            break;
          case 0x37u:
            uint64_t v6 = -2110;
            break;
          case 0x38u:
            uint64_t v6 = -2111;
            break;
          case 0x39u:
            uint64_t v6 = -2112;
            break;
          case 0x3Au:
            uint64_t v6 = -2123;
            break;
          case 0x3Bu:
            uint64_t v6 = -2124;
            break;
          case 0x3Cu:
            uint64_t v6 = -2125;
            break;
          case 0x3Du:
            uint64_t v6 = -2126;
            break;
          case 0x3Eu:
            uint64_t v6 = -2127;
            break;
          case 0x3Fu:
            uint64_t v6 = -3101;
            break;
          case 0x40u:
            uint64_t v6 = -3102;
            break;
          case 0x41u:
            uint64_t v6 = -3103;
            break;
          case 0x42u:
            uint64_t v6 = -3104;
            break;
          case 0x43u:
            uint64_t v6 = -3105;
            break;
          case 0x44u:
            uint64_t v6 = -3106;
            break;
          case 0x45u:
            uint64_t v6 = -3107;
            break;
          case 0x46u:
            uint64_t v6 = -3108;
            break;
          case 0x47u:
            uint64_t v6 = -3109;
            break;
          case 0x48u:
            uint64_t v6 = -3110;
            break;
          case 0x49u:
            uint64_t v6 = -3111;
            break;
          case 0x4Au:
            uint64_t v6 = -3112;
            break;
          case 0x4Bu:
            uint64_t v6 = -3113;
            break;
          case 0x4Cu:
            uint64_t v6 = -3151;
            break;
          case 0x4Du:
            uint64_t v6 = -3152;
            break;
          case 0x4Eu:
            uint64_t v6 = -3153;
            break;
          case 0x4Fu:
            uint64_t v6 = -3154;
            break;
          case 0x50u:
            uint64_t v6 = -3155;
            break;
          case 0x51u:
            uint64_t v6 = -3156;
            break;
          case 0x52u:
            uint64_t v6 = -3157;
            break;
          case 0x53u:
            uint64_t v6 = -3158;
            break;
          case 0x54u:
            uint64_t v6 = -3159;
            break;
          case 0x55u:
            uint64_t v6 = -3161;
            break;
          case 0x56u:
            uint64_t v6 = -3162;
            break;
          case 0x57u:
            uint64_t v6 = -3163;
            break;
          case 0x58u:
            uint64_t v6 = -3164;
            break;
          case 0x59u:
            uint64_t v6 = -3165;
            break;
          case 0x5Au:
            uint64_t v6 = -3166;
            break;
          case 0x5Bu:
            uint64_t v6 = -3167;
            break;
          case 0x5Cu:
            uint64_t v6 = -3168;
            break;
          case 0x5Du:
            uint64_t v6 = -3169;
            break;
          case 0x5Eu:
            uint64_t v6 = -3170;
            break;
          case 0x5Fu:
            uint64_t v6 = -3171;
            break;
          case 0x60u:
            uint64_t v6 = -3172;
            break;
          case 0x61u:
            uint64_t v6 = -3173;
            break;
          case 0x62u:
            uint64_t v6 = -3174;
            break;
          case 0x63u:
            uint64_t v6 = -3175;
            break;
          case 0x64u:
            uint64_t v6 = -3176;
            break;
          case 0x65u:
            uint64_t v6 = -3177;
            break;
          case 0x66u:
            uint64_t v6 = -3178;
            break;
          case 0x67u:
            uint64_t v6 = -3179;
            break;
          case 0x68u:
            uint64_t v6 = -3180;
            break;
          case 0x69u:
            uint64_t v6 = -3181;
            break;
          case 0x6Au:
            uint64_t v6 = -3182;
            break;
          case 0x6Bu:
            uint64_t v6 = -3183;
            break;
          case 0x6Cu:
            uint64_t v6 = -3184;
            break;
          case 0x6Du:
            uint64_t v6 = -3185;
            break;
          case 0x6Eu:
            uint64_t v6 = -3186;
            break;
          case 0x6Fu:
            uint64_t v6 = -3187;
            break;
          case 0x70u:
            uint64_t v6 = -3188;
            break;
          case 0x71u:
            uint64_t v6 = -3189;
            break;
          case 0x72u:
            uint64_t v6 = -3300;
            break;
          case 0x73u:
            uint64_t v6 = -5108;
            break;
          case 0x74u:
            uint64_t v6 = -6009;
            break;
          case 0x75u:
            uint64_t v6 = -6010;
            break;
          case 0x76u:
            uint64_t v6 = -6102;
            break;
          case 0x77u:
            uint64_t v6 = -6103;
            break;
          case 0x78u:
            uint64_t v6 = -6104;
            break;
          case 0x79u:
            uint64_t v6 = -6105;
            break;
          case 0x7Au:
            uint64_t v6 = -8001;
            break;
          case 0x7Bu:
            uint64_t v6 = -8301;
            break;
          case 0x7Cu:
            uint64_t v6 = -8304;
            break;
          case 0x7Du:
            uint64_t v6 = -8400;
            break;
          case 0x7Eu:
            uint64_t v6 = -8401;
            break;
          case 0x7Fu:
            uint64_t v6 = -8403;
            break;
          case 0x80u:
            uint64_t v6 = -8404;
            break;
          case 0x81u:
            uint64_t v6 = -8428;
            break;
          case 0x82u:
            uint64_t v6 = -8429;
            break;
          case 0x83u:
            uint64_t v6 = -8433;
            break;
          case 0x84u:
            uint64_t v6 = -8434;
            break;
          case 0x85u:
            uint64_t v6 = -8500;
            break;
          case 0x86u:
            uint64_t v6 = -8501;
            break;
          case 0x87u:
            uint64_t v6 = -8502;
            break;
          case 0x88u:
            uint64_t v6 = -8503;
            break;
          case 0x89u:
            uint64_t v6 = -8504;
            break;
          case 0x8Au:
            uint64_t v6 = -22200;
            break;
          case 0x8Bu:
            uint64_t v6 = -22201;
            break;
          case 0x8Cu:
            uint64_t v6 = -22202;
            break;
          case 0x8Du:
            uint64_t v6 = -22203;
            break;
          case 0x8Eu:
            uint64_t v6 = -22204;
            break;
          case 0x8Fu:
            uint64_t v6 = -22205;
            break;
          case 0x90u:
            uint64_t v6 = -22206;
            break;
          case 0x91u:
            uint64_t v6 = -22207;
            break;
          case 0x92u:
            uint64_t v6 = -22208;
            break;
          case 0x93u:
            uint64_t v6 = -72200;
            break;
          case 0x94u:
            uint64_t v6 = -72201;
            break;
          case 0x95u:
            uint64_t v6 = -72202;
            break;
          case 0x96u:
            uint64_t v6 = -72203;
            break;
          case 0x97u:
            uint64_t v6 = -72204;
            break;
          case 0x98u:
            uint64_t v6 = -72205;
            break;
          case 0x99u:
            uint64_t v6 = -72206;
            break;
          case 0x9Au:
            uint64_t v6 = -72207;
            break;
          case 0x9Bu:
            uint64_t v6 = -72208;
            break;
          case 0x9Cu:
            uint64_t v6 = -72209;
            break;
          case 0x9Du:
            uint64_t v6 = -72210;
            break;
          case 0x9Eu:
            uint64_t v6 = -72211;
            break;
          case 0x9Fu:
            uint64_t v6 = -72780;
            break;
          case 0xA0u:
            uint64_t v6 = -72781;
            break;
          case 0xA1u:
            uint64_t v6 = -72782;
            break;
          default:
            break;
        }
        uint64_t v7 = -1;
        switch(HIBYTE(a4))
        {
          case 1:
            uint64_t v7 = -2;
            break;
          case 2:
            uint64_t v7 = -3;
            break;
          case 3:
            uint64_t v7 = -4;
            break;
          case 4:
            uint64_t v7 = -5;
            break;
          case 5:
            uint64_t v7 = -6;
            break;
          case 6:
            uint64_t v7 = -7;
            break;
          case 7:
            uint64_t v7 = -8;
            break;
          case 8:
            uint64_t v7 = -9;
            break;
          case 9:
            uint64_t v7 = -10;
            break;
          case 0xA:
            uint64_t v7 = -11;
            break;
          case 0xB:
            uint64_t v7 = -12;
            break;
          case 0xC:
            uint64_t v7 = -13;
            break;
          case 0xD:
            uint64_t v7 = -14;
            break;
          case 0xE:
            uint64_t v7 = -15;
            break;
          case 0xF:
            uint64_t v7 = -16;
            break;
          case 0x10:
            uint64_t v7 = -17;
            break;
          case 0x11:
            uint64_t v7 = -18;
            break;
          case 0x12:
            uint64_t v7 = -19;
            break;
          case 0x13:
            uint64_t v7 = -20;
            break;
          case 0x14:
            uint64_t v7 = -21;
            break;
          case 0x15:
            uint64_t v7 = -22;
            break;
          case 0x16:
            uint64_t v7 = -28;
            break;
          case 0x17:
            uint64_t v7 = -29;
            break;
          case 0x18:
            uint64_t v7 = 200;
            break;
          case 0x19:
            uint64_t v7 = 20000;
            break;
          case 0x1A:
            uint64_t v7 = 20001;
            break;
          case 0x1B:
            uint64_t v7 = 20100;
            break;
          case 0x1C:
            uint64_t v7 = 40000;
            break;
          case 0x1D:
            uint64_t v7 = 40010;
            break;
          case 0x1E:
            uint64_t v7 = 40011;
            break;
          case 0x1F:
            uint64_t v7 = 40012;
            break;
          case 0x20:
            uint64_t v7 = 40013;
            break;
          case 0x21:
            uint64_t v7 = 40014;
            break;
          case 0x22:
            uint64_t v7 = 40015;
            break;
          case 0x23:
            uint64_t v7 = 40020;
            break;
          case 0x24:
            uint64_t v7 = 40021;
            break;
          case 0x25:
            uint64_t v7 = 40022;
            break;
          case 0x26:
            uint64_t v7 = 40023;
            break;
          case 0x27:
            uint64_t v7 = 40024;
            break;
          case 0x28:
            uint64_t v7 = 40025;
            break;
          case 0x29:
            uint64_t v7 = 40026;
            break;
          case 0x2A:
            uint64_t v7 = 40027;
            break;
          case 0x2B:
            uint64_t v7 = 40028;
            break;
          case 0x2C:
            uint64_t v7 = 40029;
            break;
          case 0x2D:
            uint64_t v7 = 40030;
            break;
          case 0x2E:
            uint64_t v7 = 40101;
            break;
          case 0x2F:
            uint64_t v7 = 40102;
            break;
          case 0x30:
            uint64_t v7 = 40200;
            break;
          case 0x31:
            uint64_t v7 = 40201;
            break;
          case 0x32:
            uint64_t v7 = 40205;
            break;
          case 0x33:
            uint64_t v7 = 40401;
            break;
          case 0x34:
            uint64_t v7 = 40402;
            break;
          case 0x35:
            uint64_t v7 = 40403;
            break;
          case 0x36:
            uint64_t v7 = 40404;
            break;
          case 0x37:
            uint64_t v7 = 40500;
            break;
          case 0x38:
            uint64_t v7 = 40600;
            break;
          case 0x39:
            uint64_t v7 = 40601;
            break;
          case 0x3A:
            uint64_t v7 = 50000;
            break;
          case 0x3B:
            uint64_t v7 = 50001;
            break;
          case 0x3C:
            uint64_t v7 = 50002;
            break;
          case 0x3D:
            uint64_t v7 = 99991;
            break;
          case 0x3E:
            uint64_t v7 = 99992;
            break;
          case 0x3F:
            uint64_t v7 = 99993;
            break;
          case 0x40:
            uint64_t v7 = -1101;
            break;
          case 0x41:
            uint64_t v7 = -1102;
            break;
          case 0x42:
            uint64_t v7 = -1103;
            break;
          case 0x43:
            uint64_t v7 = -1104;
            break;
          case 0x44:
            uint64_t v7 = -1110;
            break;
          case 0x45:
            uint64_t v7 = -1111;
            break;
          case 0x46:
            uint64_t v7 = -1112;
            break;
          case 0x47:
            uint64_t v7 = -1113;
            break;
          case 0x48:
            uint64_t v7 = -1114;
            break;
          case 0x49:
            uint64_t v7 = -1115;
            break;
          case 0x4A:
            uint64_t v7 = -1116;
            break;
          case 0x4B:
            uint64_t v7 = -1117;
            break;
          case 0x4C:
            uint64_t v7 = -1118;
            break;
          case 0x4D:
            uint64_t v7 = -1119;
            break;
          case 0x4E:
            uint64_t v7 = -1201;
            break;
          case 0x4F:
            uint64_t v7 = -1202;
            break;
          case 0x50:
            uint64_t v7 = -1203;
            break;
          case 0x51:
            uint64_t v7 = -1204;
            break;
          case 0x52:
            uint64_t v7 = -1402;
            break;
          case 0x53:
            uint64_t v7 = -1403;
            break;
          case 0x54:
            uint64_t v7 = -1404;
            break;
          case 0x55:
            uint64_t v7 = -1301;
            break;
          case 0x56:
            uint64_t v7 = -1302;
            break;
          case 0x57:
            uint64_t v7 = -1303;
            break;
          case 0x58:
            uint64_t v7 = -1304;
            break;
          case 0x59:
            uint64_t v7 = -1305;
            break;
          case 0x5A:
            uint64_t v7 = -1306;
            break;
          case 0x5B:
            uint64_t v7 = -1307;
            break;
          case 0x5C:
            uint64_t v7 = -1308;
            break;
          case 0x5D:
            uint64_t v7 = -1309;
            break;
          case 0x5E:
            uint64_t v7 = -1310;
            break;
          case 0x5F:
            uint64_t v7 = -1315;
            break;
          case 0x60:
            uint64_t v7 = -1316;
            break;
          case 0x61:
            uint64_t v7 = -1317;
            break;
          case 0x62:
            uint64_t v7 = -131600;
            break;
          case 0x63:
            uint64_t v7 = -2103;
            break;
          case 0x64:
            uint64_t v7 = -2104;
            break;
          case 0x65:
            uint64_t v7 = -2107;
            break;
          case 0x66:
            uint64_t v7 = -2110;
            break;
          case 0x67:
            uint64_t v7 = -2111;
            break;
          case 0x68:
            uint64_t v7 = -2112;
            break;
          case 0x69:
            uint64_t v7 = -2123;
            break;
          case 0x6A:
            uint64_t v7 = -2124;
            break;
          case 0x6B:
            uint64_t v7 = -2125;
            break;
          case 0x6C:
            uint64_t v7 = -2126;
            break;
          case 0x6D:
            uint64_t v7 = -2127;
            break;
          case 0x6E:
            uint64_t v7 = -3101;
            break;
          case 0x6F:
            uint64_t v7 = -3102;
            break;
          case 0x70:
            uint64_t v7 = -3103;
            break;
          case 0x71:
            uint64_t v7 = -3104;
            break;
          case 0x72:
            uint64_t v7 = -3105;
            break;
          case 0x73:
            uint64_t v7 = -3106;
            break;
          case 0x74:
            uint64_t v7 = -3107;
            break;
          case 0x75:
            uint64_t v7 = -3108;
            break;
          case 0x76:
            uint64_t v7 = -3109;
            break;
          case 0x77:
            uint64_t v7 = -3110;
            break;
          case 0x78:
            uint64_t v7 = -3111;
            break;
          case 0x79:
            uint64_t v7 = -3112;
            break;
          case 0x7A:
            uint64_t v7 = -3113;
            break;
          case 0x7B:
            uint64_t v7 = -3151;
            break;
          case 0x7C:
            uint64_t v7 = -3152;
            break;
          case 0x7D:
            uint64_t v7 = -3153;
            break;
          case 0x7E:
            uint64_t v7 = -3154;
            break;
          case 0x7F:
            uint64_t v7 = -3155;
            break;
          case 0x80:
            uint64_t v7 = -3156;
            break;
          case 0x81:
            uint64_t v7 = -3157;
            break;
          case 0x82:
            uint64_t v7 = -3158;
            break;
          case 0x83:
            uint64_t v7 = -3159;
            break;
          case 0x84:
            uint64_t v7 = -3161;
            break;
          case 0x85:
            uint64_t v7 = -3162;
            break;
          case 0x86:
            uint64_t v7 = -3163;
            break;
          case 0x87:
            uint64_t v7 = -3164;
            break;
          case 0x88:
            uint64_t v7 = -3165;
            break;
          case 0x89:
            uint64_t v7 = -3166;
            break;
          case 0x8A:
            uint64_t v7 = -3167;
            break;
          case 0x8B:
            uint64_t v7 = -3168;
            break;
          case 0x8C:
            uint64_t v7 = -3169;
            break;
          case 0x8D:
            uint64_t v7 = -3170;
            break;
          case 0x8E:
            uint64_t v7 = -3171;
            break;
          case 0x8F:
            uint64_t v7 = -3172;
            break;
          case 0x90:
            uint64_t v7 = -3173;
            break;
          case 0x91:
            uint64_t v7 = -3174;
            break;
          case 0x92:
            uint64_t v7 = -3175;
            break;
          case 0x93:
            uint64_t v7 = -3176;
            break;
          case 0x94:
            uint64_t v7 = -3177;
            break;
          case 0x95:
            uint64_t v7 = -3178;
            break;
          case 0x96:
            uint64_t v7 = -3179;
            break;
          case 0x97:
            uint64_t v7 = -3180;
            break;
          case 0x98:
            uint64_t v7 = -3181;
            break;
          case 0x99:
            uint64_t v7 = -3182;
            break;
          case 0x9A:
            uint64_t v7 = -3183;
            break;
          case 0x9B:
            uint64_t v7 = -3184;
            break;
          case 0x9C:
            uint64_t v7 = -3185;
            break;
          case 0x9D:
            uint64_t v7 = -3186;
            break;
          case 0x9E:
            uint64_t v7 = -3187;
            break;
          case 0x9F:
            uint64_t v7 = -3188;
            break;
          case 0xA0:
            uint64_t v7 = -3189;
            break;
          case 0xA1:
            uint64_t v7 = -3300;
            break;
          case 0xA2:
            uint64_t v7 = -5108;
            break;
          case 0xA3:
            uint64_t v7 = -6009;
            break;
          case 0xA4:
            uint64_t v7 = -6010;
            break;
          case 0xA5:
            uint64_t v7 = -6102;
            break;
          case 0xA6:
            uint64_t v7 = -6103;
            break;
          case 0xA7:
            uint64_t v7 = -6104;
            break;
          case 0xA8:
            uint64_t v7 = -6105;
            break;
          case 0xA9:
            uint64_t v7 = -8001;
            break;
          case 0xAA:
            uint64_t v7 = -8301;
            break;
          case 0xAB:
            uint64_t v7 = -8304;
            break;
          case 0xAC:
            uint64_t v7 = -8400;
            break;
          case 0xAD:
            uint64_t v7 = -8401;
            break;
          case 0xAE:
            uint64_t v7 = -8403;
            break;
          case 0xAF:
            uint64_t v7 = -8404;
            break;
          case 0xB0:
            uint64_t v7 = -8428;
            break;
          case 0xB1:
            uint64_t v7 = -8429;
            break;
          case 0xB2:
            uint64_t v7 = -8433;
            break;
          case 0xB3:
            uint64_t v7 = -8434;
            break;
          case 0xB4:
            uint64_t v7 = -8500;
            break;
          case 0xB5:
            uint64_t v7 = -8501;
            break;
          case 0xB6:
            uint64_t v7 = -8502;
            break;
          case 0xB7:
            uint64_t v7 = -8503;
            break;
          case 0xB8:
            uint64_t v7 = -8504;
            break;
          case 0xB9:
            uint64_t v7 = -22200;
            break;
          case 0xBA:
            uint64_t v7 = -22201;
            break;
          case 0xBB:
            uint64_t v7 = -22202;
            break;
          case 0xBC:
            uint64_t v7 = -22203;
            break;
          case 0xBD:
            uint64_t v7 = -22204;
            break;
          case 0xBE:
            uint64_t v7 = -22205;
            break;
          case 0xBF:
            uint64_t v7 = -22206;
            break;
          case 0xC0:
            uint64_t v7 = -22207;
            break;
          case 0xC1:
            uint64_t v7 = -22208;
            break;
          case 0xC2:
            uint64_t v7 = -72200;
            break;
          case 0xC3:
            uint64_t v7 = -72201;
            break;
          case 0xC4:
            uint64_t v7 = -72202;
            break;
          case 0xC5:
            uint64_t v7 = -72203;
            break;
          case 0xC6:
            uint64_t v7 = -72204;
            break;
          case 0xC7:
            uint64_t v7 = -72205;
            break;
          case 0xC8:
            uint64_t v7 = -72206;
            break;
          case 0xC9:
            uint64_t v7 = -72207;
            break;
          case 0xCA:
            uint64_t v7 = -72208;
            break;
          case 0xCB:
            uint64_t v7 = -72209;
            break;
          case 0xCC:
            uint64_t v7 = -72210;
            break;
          case 0xCD:
            uint64_t v7 = -72211;
            break;
          case 0xCE:
            uint64_t v7 = -72780;
            break;
          case 0xCF:
            uint64_t v7 = -72781;
            break;
          case 0xD0:
            uint64_t v7 = -72782;
            break;
          default:
            break;
        }
        if (v6 != v7) {
          return 0;
        }
        goto LABEL_7;
    }
  }
  if (HIBYTE(a2) != 209) {
    return 1;
  }
LABEL_7:
  if ((a4 | a2)) {
    return (a2 & a4 & 1) == 0;
  }
  else {
    return *(double *)&a1 != *(double *)&a3;
  }
}

void sub_214C892A0(uint64_t a1)
{
  sub_214B6A264(0, &qword_26784CD00);
  sub_214D03F78(&qword_26784E3E0, &qword_26784CD00);
  int64_t v2 = 0;
  v13[1] = (id)sub_214D1A438();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_214CDCA98(v13, *(id *)(*(void *)(a1 + 56) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t ArmandDeviceDataErrorCode.hash(into:)()
{
  if ((*v0 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

unint64_t sub_214C89F18(char a1)
{
  unint64_t result = 0x7272456F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C61567465736E75;
      break;
    case 2:
      unint64_t result = 0x6F6974704F6C696ELL;
      break;
    case 3:
      unint64_t result = 0x6465696E6564;
      break;
    case 4:
      unint64_t result = 0x7463657078656E75;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x676E69646F636E65;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0x6369447974706D65;
      break;
    case 9:
      unint64_t result = 0x726F727245636170;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_214C8A088()
{
  return sub_214C89F18(*v0);
}

uint64_t sub_214C8A090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFCE30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C8A0B8(uint64_t a1)
{
  unint64_t v2 = sub_214CFC91C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A0F4(uint64_t a1)
{
  unint64_t v2 = sub_214CFC91C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A130()
{
  return 0;
}

uint64_t sub_214C8A13C(uint64_t a1)
{
  unint64_t v2 = sub_214CFCB68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A178(uint64_t a1)
{
  unint64_t v2 = sub_214CFCB68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A1B4(uint64_t a1)
{
  unint64_t v2 = sub_214CFC9C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A1F0(uint64_t a1)
{
  unint64_t v2 = sub_214CFC9C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A22C(uint64_t a1)
{
  unint64_t v2 = sub_214CFCA6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A268(uint64_t a1)
{
  unint64_t v2 = sub_214CFCA6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A2A4(uint64_t a1)
{
  unint64_t v2 = sub_214CFCBBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A2E0(uint64_t a1)
{
  unint64_t v2 = sub_214CFCBBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A31C(uint64_t a1)
{
  unint64_t v2 = sub_214CFCC64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A358(uint64_t a1)
{
  unint64_t v2 = sub_214CFCC64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A394(uint64_t a1)
{
  unint64_t v2 = sub_214CFCA18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A3D0(uint64_t a1)
{
  unint64_t v2 = sub_214CFCA18();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A40C(uint64_t a1)
{
  unint64_t v2 = sub_214CFC970();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A448(uint64_t a1)
{
  unint64_t v2 = sub_214CFC970();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A484(uint64_t a1)
{
  unint64_t v2 = sub_214CFCB14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A4C0(uint64_t a1)
{
  unint64_t v2 = sub_214CFCB14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A4FC(uint64_t a1)
{
  unint64_t v2 = sub_214CFCC10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A538(uint64_t a1)
{
  unint64_t v2 = sub_214CFCC10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8A574(uint64_t a1)
{
  unint64_t v2 = sub_214CFCAC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8A5B0(uint64_t a1)
{
  unint64_t v2 = sub_214CFCAC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArmandDeviceDataErrorCode.hashValue.getter()
{
  char v1 = *v0;
  sub_214D1AD08();
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214C8B0D4()
{
  char v1 = *v0;
  sub_214D1AD08();
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t ArmandDeviceDataErrorCode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EAE8);
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  MEMORY[0x270FA5388](v3, v4);
  v77 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EAF0);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x270FA5388](v6, v7);
  v74 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EAF8);
  uint64_t v72 = *(void *)(v9 - 8);
  uint64_t v73 = v9;
  MEMORY[0x270FA5388](v9, v10);
  v71 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB00);
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = v12;
  MEMORY[0x270FA5388](v12, v13);
  v68 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB08);
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v15, v16);
  v65 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB10);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64, v18);
  v62 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB18);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61, v20);
  v59 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB20);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58, v22);
  v56 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB28);
  uint64_t v55 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v25);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB30);
  uint64_t v54 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28, v29);
  v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB38);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v81 = v32;
  uint64_t v82 = v33;
  MEMORY[0x270FA5388](v32, v34);
  v36 = (char *)&v54 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v37 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214CFC91C();
  v80 = v36;
  sub_214D1AD88();
  switch(v37)
  {
    case 209:
      char v83 = 0;
      sub_214CFCC64();
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v28);
      goto LABEL_15;
    case 210:
      char v84 = 1;
      sub_214CFCC10();
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v24);
      goto LABEL_15;
    case 211:
      char v85 = 2;
      sub_214CFCBBC();
      v45 = v56;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      v46 = *(void (**)(char *, uint64_t))(v57 + 8);
      v47 = v45;
      v48 = &v94;
      goto LABEL_7;
    case 212:
      char v86 = 3;
      sub_214CFCB68();
      v49 = v59;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      v46 = *(void (**)(char *, uint64_t))(v60 + 8);
      v47 = v49;
      v48 = &v95;
LABEL_7:
      uint64_t v50 = *(v48 - 32);
      goto LABEL_14;
    case 213:
      char v87 = 4;
      sub_214CFCB14();
      v51 = v62;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v64);
      goto LABEL_15;
    case 214:
      char v88 = 5;
      sub_214CFCAC0();
      v52 = v65;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      uint64_t v53 = v66;
      uint64_t v50 = v67;
      goto LABEL_13;
    case 215:
      char v89 = 6;
      sub_214CFCA6C();
      v52 = v68;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      uint64_t v53 = v69;
      uint64_t v50 = v70;
      goto LABEL_13;
    case 216:
      char v90 = 7;
      sub_214CFCA18();
      v52 = v71;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      uint64_t v53 = v72;
      uint64_t v50 = v73;
      goto LABEL_13;
    case 217:
      char v91 = 8;
      sub_214CFC9C4();
      v52 = v74;
      v39 = v80;
      uint64_t v38 = v81;
      sub_214D1AA98();
      uint64_t v53 = v75;
      uint64_t v50 = v76;
LABEL_13:
      v46 = *(void (**)(char *, uint64_t))(v53 + 8);
      v47 = v52;
LABEL_14:
      v46(v47, v50);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v39, v38);
      break;
    default:
      char v93 = 9;
      sub_214CFC970();
      v40 = v77;
      v42 = v80;
      uint64_t v41 = v81;
      sub_214D1AA98();
      char v92 = v37;
      sub_214C6FC88();
      uint64_t v43 = v79;
      sub_214D1AB38();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v40, v43);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v42, v41);
      break;
  }
  return result;
}

uint64_t ArmandDeviceDataErrorCode.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EB98);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v75 = v3;
  uint64_t v76 = v4;
  MEMORY[0x270FA5388](v3, v5);
  char v85 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBA0);
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v81 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBA8);
  uint64_t v71 = *(void *)(v10 - 8);
  uint64_t v72 = v10;
  MEMORY[0x270FA5388](v10, v11);
  v80 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBB0);
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v79 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBB8);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68, v16);
  char v84 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBC0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66, v18);
  char v83 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBC8);
  uint64_t v64 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v20);
  uint64_t v78 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBD0);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63, v22);
  v77 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBD8);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61, v24);
  uint64_t v26 = (char *)&v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EBE0);
  uint64_t v58 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784EBE8);
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31, v33);
  uint64_t v35 = (char *)&v56 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1[3];
  char v86 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v36);
  sub_214CFC91C();
  uint64_t v37 = v87;
  sub_214D1AD78();
  if (v37) {
    goto LABEL_15;
  }
  uint64_t v57 = v30;
  uint64_t v56 = v27;
  uint64_t v38 = v83;
  v39 = v84;
  v40 = v85;
  uint64_t v87 = v32;
  uint64_t v41 = sub_214D1AA78();
  if (*(void *)(v41 + 16) != 1)
  {
    uint64_t v44 = sub_214D1A7F8();
    swift_allocError();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5C8);
    void *v46 = &type metadata for ArmandDeviceDataErrorCode;
    sub_214D1A9C8();
    sub_214D1A7E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v44 - 8) + 104))(v46, *MEMORY[0x263F8DCB0], v44);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
LABEL_15:
    uint64_t v52 = (uint64_t)v86;
    return __swift_destroy_boxed_opaque_existential_1(v52);
  }
  switch(*(unsigned char *)(v41 + 32))
  {
    case 1:
      char v89 = 1;
      sub_214CFCC10();
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v26, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -46;
      break;
    case 2:
      char v90 = 2;
      sub_214CFCBBC();
      v47 = v77;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -45;
      break;
    case 3:
      char v91 = 3;
      sub_214CFCB68();
      v48 = v78;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -44;
      break;
    case 4:
      char v92 = 4;
      sub_214CFCB14();
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -43;
      break;
    case 5:
      char v93 = 5;
      sub_214CFCAC0();
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -42;
      break;
    case 6:
      char v94 = 6;
      sub_214CFCA6C();
      v49 = v79;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -41;
      break;
    case 7:
      char v95 = 7;
      sub_214CFCA18();
      uint64_t v50 = v80;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -40;
      break;
    case 8:
      char v96 = 8;
      sub_214CFC9C4();
      v51 = v81;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -39;
      break;
    case 9:
      char v98 = 9;
      sub_214CFC970();
      sub_214D1A9B8();
      sub_214C6FBD4();
      uint64_t v54 = v75;
      sub_214D1AA68();
      uint64_t v55 = v87;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v40, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v31);
      char v43 = v97;
      break;
    default:
      char v88 = 0;
      sub_214CFCC64();
      v42 = v57;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v31);
      char v43 = -47;
      break;
  }
  uint64_t v52 = (uint64_t)v86;
  *uint64_t v82 = v43;
  return __swift_destroy_boxed_opaque_existential_1(v52);
}

uint64_t sub_214C8D2E0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return ArmandDeviceDataErrorCode.init(from:)(a1, a2);
}

uint64_t sub_214C8D2F8(void *a1)
{
  return ArmandDeviceDataErrorCode.encode(to:)(a1);
}

uint64_t sub_214C8D310@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_214D19C78();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B93DCC((uint64_t)a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  if (swift_dynamicCast()) {
    goto LABEL_2;
  }
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v9 = v14;
    *a2 = v13;
    a2[1] = v9;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  if (swift_dynamicCast())
  {
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *a2 = v13;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    (*(void (**)(void *, char *, uint64_t))(v5 + 32))(a2, v8, v4);
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(unsigned char *)a2 = (_BYTE)v13;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_214B6A264(0, &qword_26784D210);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

      type metadata accessor for ODIKnownBinding();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      id v13 = 0;
      uint64_t v14 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_getDynamicType();
      sub_214D1ADC8();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      sub_214D1A908();
      uint64_t v10 = (uint64_t)v13;
      LOBYTE(v13) = 107;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(v10, v14, 0, (unsigned __int8 *)&v13, 0, 0, 0xD00000000000005FLL, 0x8000000214D382A0, 0x566E692874696E69, 0xEC000000293A6C61, 97);
      swift_bridgeObjectRelease();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_214C8D714()
{
  uint64_t v1 = sub_214D19C78();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B9163C(v0, (uint64_t)v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_214D1AD18();
      sub_214D1A0D8();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2u:
      sub_214D1AD18();
      goto LABEL_7;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v9, v1);
      sub_214D1AD18();
      sub_214D03FC8(&qword_26784EE40, 255, MEMORY[0x263F07490]);
      sub_214D19FE8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      break;
    case 4u:
      sub_214D1AD18();
      uint64_t result = sub_214D1AD28();
      break;
    case 5u:
LABEL_7:
      uint64_t result = sub_214D1AD18();
      break;
    default:
      sub_214D1AD18();
      uint64_t result = sub_214D1AD38();
      break;
  }
  return result;
}

uint64_t sub_214C8D974(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F460);
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v57 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F468);
  uint64_t v56 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v5);
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F470);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v54 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_214D19C78();
  uint64_t v55 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58, v10);
  uint64_t v52 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F478);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  MEMORY[0x270FA5388](v12, v13);
  v49 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F480);
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48, v15);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F488);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x270FA5388](v22, v23);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F490);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v64 = v26;
  uint64_t v65 = v27;
  MEMORY[0x270FA5388](v26, v28);
  uint64_t v30 = (char *)&v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D08658();
  sub_214D1AD88();
  sub_214B9163C(v66, (uint64_t)v25);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v68 = 1;
      sub_214D087FC();
      uint64_t v32 = v64;
      sub_214D1AA98();
      uint64_t v33 = v48;
      sub_214D1AAF8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v30, v32);
    case 2u:
      char v69 = 2;
      sub_214D087A8();
      uint64_t v35 = v49;
      uint64_t v36 = v64;
      sub_214D1AA98();
      uint64_t v37 = v51;
      sub_214D1AB28();
      uint64_t v38 = v50;
      goto LABEL_8;
    case 3u:
      uint64_t v39 = v55;
      v40 = v52;
      uint64_t v41 = v58;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v25, v58);
      char v70 = 3;
      sub_214D08754();
      v42 = v54;
      uint64_t v31 = v64;
      sub_214D1AA98();
      sub_214D03FC8(&qword_26784DDD8, 255, MEMORY[0x263F07490]);
      uint64_t v43 = v61;
      sub_214D1AB38();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v43);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v30, v31);
    case 4u:
      char v71 = 4;
      sub_214D08700();
      uint64_t v35 = v53;
      uint64_t v36 = v64;
      sub_214D1AA98();
      uint64_t v37 = v59;
      sub_214D1AB08();
      uint64_t v38 = v56;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v30, v36);
    case 5u:
      char v72 = 5;
      sub_214D086AC();
      uint64_t v44 = v57;
      uint64_t v45 = v64;
      sub_214D1AA98();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v30, v45);
    default:
      char v67 = 0;
      sub_214D08850();
      uint64_t v31 = v64;
      sub_214D1AA98();
      sub_214D1AB18();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v30, v31);
  }
}

uint64_t sub_214C8E214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F3F0);
  uint64_t v106 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110, v3);
  v114 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F3F8);
  uint64_t v105 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108, v5);
  v113 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F400);
  uint64_t v107 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109, v7);
  v118 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F408);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v103 = v9;
  uint64_t v104 = v10;
  MEMORY[0x270FA5388](v9, v11);
  v117 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F410);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102, v13);
  v112 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F418);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100, v15);
  v111 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F420);
  uint64_t v115 = *(void *)(v17 - 8);
  uint64_t v116 = v17;
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v20 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for ODIKnownBinding();
  uint64_t v22 = MEMORY[0x270FA5388](v120, v21);
  char v98 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22, v24);
  uint64_t v27 = (char *)&v93 - v26;
  uint64_t v29 = MEMORY[0x270FA5388](v25, v28);
  uint64_t v31 = (char *)&v93 - v30;
  uint64_t v33 = MEMORY[0x270FA5388](v29, v32);
  uint64_t v35 = (uint64_t *)((char *)&v93 - v34);
  uint64_t v37 = MEMORY[0x270FA5388](v33, v36);
  uint64_t v39 = (char *)&v93 - v38;
  MEMORY[0x270FA5388](v37, v40);
  v42 = (char *)&v93 - v41;
  uint64_t v43 = a1[3];
  v121 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v43);
  sub_214D08658();
  uint64_t v44 = (uint64_t)v122;
  sub_214D1AD78();
  if (v44) {
    goto LABEL_11;
  }
  char v94 = v39;
  char v95 = v35;
  char v96 = (uint64_t *)v31;
  char v97 = v27;
  uint64_t v45 = v117;
  uint64_t v46 = v118;
  v122 = v42;
  uint64_t v47 = v119;
  uint64_t v48 = v116;
  uint64_t v49 = sub_214D1AA78();
  if (*(void *)(v49 + 16) != 1)
  {
    uint64_t v58 = v20;
    uint64_t v59 = sub_214D1A7F8();
    swift_allocError();
    uint64_t v61 = v60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5C8);
    *uint64_t v61 = v120;
    sub_214D1A9C8();
    sub_214D1A7E8();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v59 - 8) + 104))(v61, *MEMORY[0x263F8DCB0], v59);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v58, v48);
LABEL_11:
    uint64_t v54 = (uint64_t)v121;
    return __swift_destroy_boxed_opaque_existential_1(v54);
  }
  switch(*(unsigned char *)(v49 + 32))
  {
    case 1:
      char v124 = 1;
      sub_214D087FC();
      uint64_t v62 = v112;
      sub_214D1A9B8();
      uint64_t v75 = v20;
      uint64_t v76 = v62;
      uint64_t v77 = v102;
      uint64_t v84 = sub_214D1AA28();
      char v85 = *(void (**)(char *, uint64_t))(v101 + 8);
      v118 = v86;
      v85(v76, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v75, v48);
      uint64_t v87 = v95;
      char v88 = v118;
      *char v95 = v84;
      v87[1] = (uint64_t)v88;
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = (uint64_t)v87;
      goto LABEL_13;
    case 2:
      char v125 = 2;
      sub_214D087A8();
      sub_214D1A9B8();
      uint64_t v78 = v20;
      uint64_t v79 = v103;
      uint64_t v80 = sub_214D1AA58();
      uint64_t v81 = v115;
      uint64_t v90 = v80;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v45, v79);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v78, v48);
      char v91 = v96;
      *char v96 = v90;
      swift_storeEnumTagMultiPayload();
      uint64_t v92 = (uint64_t)v91;
      uint64_t v57 = (uint64_t)v122;
      sub_214D04358(v92, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      uint64_t v54 = (uint64_t)v121;
      uint64_t v47 = v119;
      break;
    case 3:
      char v126 = 3;
      sub_214D08754();
      sub_214D1A9B8();
      v117 = v20;
      sub_214D19C78();
      sub_214D03FC8(&qword_26784DDC0, 255, MEMORY[0x263F07490]);
      uint64_t v63 = (uint64_t)v97;
      uint64_t v64 = v46;
      uint64_t v65 = v109;
      sub_214D1AA68();
      uint64_t v66 = v115;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v64, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v117, v48);
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = v63;
      goto LABEL_13;
    case 4:
      char v127 = 4;
      sub_214D08700();
      char v67 = v113;
      sub_214D1A9B8();
      char v68 = v20;
      char v69 = v67;
      uint64_t v70 = v108;
      int v71 = sub_214D1AA38();
      uint64_t v72 = v115;
      uint64_t v82 = *(void (**)(char *, uint64_t))(v105 + 8);
      LODWORD(v118) = v71;
      v82(v69, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v68, v48);
      char v83 = v98;
      *char v98 = v118 & 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = (uint64_t)v83;
LABEL_13:
      uint64_t v57 = (uint64_t)v122;
      sub_214D04358(v89, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      goto LABEL_14;
    case 5:
      char v128 = 5;
      sub_214D086AC();
      uint64_t v73 = v114;
      sub_214D1A9B8();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v73, v110);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v20, v48);
      uint64_t v57 = (uint64_t)v122;
      swift_storeEnumTagMultiPayload();
LABEL_14:
      uint64_t v54 = (uint64_t)v121;
      break;
    default:
      char v123 = 0;
      sub_214D08850();
      uint64_t v50 = v111;
      sub_214D1A9B8();
      uint64_t v51 = v100;
      sub_214D1AA48();
      uint64_t v53 = v52;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v50, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v20, v48);
      uint64_t v54 = (uint64_t)v121;
      uint64_t v55 = v94;
      *char v94 = v53;
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v55;
      uint64_t v57 = (uint64_t)v122;
      sub_214D04358(v56, (uint64_t)v122, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      break;
  }
  sub_214D04358(v57, v47, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
  return __swift_destroy_boxed_opaque_existential_1(v54);
}

uint64_t sub_214C8EF60(uint64_t a1)
{
  unint64_t v2 = sub_214D08700();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8EF9C(uint64_t a1)
{
  unint64_t v2 = sub_214D08700();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8EFD8()
{
  uint64_t result = 0x656C62756F44;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69727453;
      break;
    case 2:
      uint64_t result = 7630409;
      break;
    case 3:
      uint64_t result = 1702125892;
      break;
    case 4:
      uint64_t result = 1819242306;
      break;
    case 5:
      uint64_t result = 1819047246;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C8F074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFD2B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C8F09C(uint64_t a1)
{
  unint64_t v2 = sub_214D08658();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F0D8(uint64_t a1)
{
  unint64_t v2 = sub_214D08658();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F114(uint64_t a1)
{
  unint64_t v2 = sub_214D08754();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F150(uint64_t a1)
{
  unint64_t v2 = sub_214D08754();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F18C(uint64_t a1)
{
  unint64_t v2 = sub_214D08850();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F1C8(uint64_t a1)
{
  unint64_t v2 = sub_214D08850();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F204(uint64_t a1)
{
  unint64_t v2 = sub_214D087A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F240(uint64_t a1)
{
  unint64_t v2 = sub_214D087A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F27C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_214C8F2AC(uint64_t a1)
{
  unint64_t v2 = sub_214D086AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F2E8(uint64_t a1)
{
  unint64_t v2 = sub_214D086AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F324(uint64_t a1)
{
  unint64_t v2 = sub_214D087FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F360(uint64_t a1)
{
  unint64_t v2 = sub_214D087FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C8F39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C8E214(a1, a2);
}

uint64_t sub_214C8F3B4(void *a1)
{
  return sub_214C8D974(a1);
}

uint64_t sub_214C8F3CC()
{
  return sub_214D1AD48();
}

uint64_t sub_214C8F410()
{
  return sub_214D1AD48();
}

unint64_t sub_214C8F450(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    goto LABEL_6;
  }
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 15)
  {
    uint64_t v3 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    char v5 = *(unsigned char *)(v1 + 40);
    goto LABEL_9;
  }
  if (v2 == 17)
  {
    uint64_t v3 = *(void *)(v1 + 48);
    uint64_t v4 = *(void *)(v1 + 56);
    char v5 = *(unsigned char *)(v1 + 64);
    goto LABEL_9;
  }
  if (v2 != 16)
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v7 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v7;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)(v1 + 16);
LABEL_9:
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_214C79114(v3, v4, v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_214C8F54C(void *a1)
{
  return sub_214CB4AB8(a1, &qword_26784EE70, (void (*)(void))sub_214D04010);
}

uint64_t sub_214C8F588@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214CB4D5C(a1, &qword_26784EE50, (void (*)(void))sub_214D04010, a2);
}

uint64_t sub_214C8F5C4()
{
  uint64_t v1 = 0x645F64756F6C6369;
  if (*v0 != 1) {
    uint64_t v1 = 0x4449656C707061;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x645F73656E757469;
  }
}

uint64_t sub_214C8F624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFD4EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C8F64C(uint64_t a1)
{
  unint64_t v2 = sub_214D04010();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C8F688(uint64_t a1)
{
  unint64_t v2 = sub_214D04010();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned __int8 *sub_214C8F6C4@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  if (result[16])
  {
    *a2 = -42;
  }
  else
  {
    char v3 = v2[16];
    int v4 = *result;
    if (v4 != 16) {
      char v3 = -42;
    }
    if (v4 == 17) {
      char v3 = v2[64];
    }
    if (v4 == 15) {
      char v3 = v2[40];
    }
    *a2 = v3;
  }
  return result;
}

uint64_t sub_214C8F714()
{
  return sub_214CB2940();
}

uint64_t sub_214C8F730(uint64_t *a1, uint64_t *a2)
{
  return sub_214CF36AC(a1, a2) & 1;
}

unint64_t sub_214C8F74C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
LABEL_2:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v3 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v3;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    switch(*(unsigned char *)(a1 + 16))
    {
      case 0:
        uint64_t v5 = *(void *)v1;
        uint64_t v6 = *(void *)(v1 + 8);
        char v7 = *(unsigned char *)(v1 + 16);
        goto LABEL_7;
      case 2:
        uint64_t v5 = *(void *)(v1 + 24);
        uint64_t v6 = *(void *)(v1 + 32);
        char v7 = *(unsigned char *)(v1 + 40);
        goto LABEL_7;
      case 3:
        uint64_t v5 = *(void *)(v1 + 48);
        uint64_t v6 = *(void *)(v1 + 56);
        char v7 = *(unsigned char *)(v1 + 64);
LABEL_7:
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_214C79114(v5, v6, v7);
        swift_bridgeObjectRelease();
        unint64_t result = v8;
        break;
      case 4:
        unint64_t result = sub_214C7BD8C(*(void *)(v1 + 72), *(unsigned __int8 *)(v1 + 80) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 81) << 8), MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8]);
        break;
      default:
        goto LABEL_2;
    }
  }
  return result;
}

uint64_t sub_214C8F890()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  int v8 = *(unsigned __int8 *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 81);
  if (*(void *)(v0 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (!v8) {
    sub_214D1AD18();
  }
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214C92438(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EEA0);
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  char v9 = *((unsigned char *)v1 + 16);
  uint64_t v10 = v1[3];
  uint64_t v23 = v1[4];
  uint64_t v24 = v10;
  int v30 = *((unsigned __int8 *)v1 + 40);
  uint64_t v11 = v1[6];
  uint64_t v21 = v1[7];
  uint64_t v22 = v11;
  LODWORD(v11) = *((unsigned __int8 *)v1 + 64);
  uint64_t v17 = v1[9];
  int v18 = *((unsigned __int8 *)v1 + 80);
  int v19 = *((unsigned __int8 *)v1 + 81);
  int v20 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04064();
  sub_214D1AD88();
  uint64_t v27 = v8;
  uint64_t v28 = v7;
  char v29 = v9;
  char v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v12 = v26;
  sub_214D1AB38();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v3);
  }
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v25;
  uint64_t v27 = v24;
  uint64_t v28 = v23;
  char v29 = v30;
  char v31 = 1;
  sub_214D1AB38();
  uint64_t v27 = v15;
  uint64_t v28 = v14;
  char v29 = v20;
  char v31 = 2;
  sub_214D1AB38();
  uint64_t v27 = v17;
  LOBYTE(v28) = v18;
  BYTE1(v28) = v19;
  char v31 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
  sub_214B5A118(&qword_26784EEA8, &qword_26784EE90);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v3);
}

uint64_t sub_214C9272C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04064();
  sub_214D1AD78();
  if (!v2)
  {
    uint64_t v24 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    char v29 = 0;
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    uint64_t v11 = v26;
    uint64_t v23 = v25;
    int v28 = v27;
    char v29 = 1;
    sub_214D1AA68();
    uint64_t v21 = v25;
    uint64_t v22 = a2;
    uint64_t v12 = v26;
    int v20 = v27;
    char v29 = 2;
    sub_214D1AA68();
    uint64_t v13 = v26;
    uint64_t v19 = v25;
    HIDWORD(v18) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
    char v29 = 3;
    sub_214B5A118(&qword_26784EE98, &qword_26784EE90);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v5);
    uint64_t v14 = v25;
    char v15 = v26;
    char v16 = BYTE1(v26);
    uint64_t v17 = v22;
    *uint64_t v22 = v23;
    v17[1] = v11;
    *((unsigned char *)v17 + 16) = v28;
    v17[3] = v21;
    v17[4] = v12;
    *((unsigned char *)v17 + 40) = v20;
    v17[6] = v19;
    v17[7] = v13;
    *((unsigned char *)v17 + 64) = BYTE4(v18);
    v17[9] = v14;
    *((unsigned char *)v17 + 80) = v15;
    *((unsigned char *)v17 + 81) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C92AE8()
{
  uint64_t result = 0x726556646C697562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6169726573;
      break;
    case 2:
      uint64_t result = 1684628597;
      break;
    case 3:
      uint64_t result = 1684628325;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C92B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFD670(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C92B98(uint64_t a1)
{
  unint64_t v2 = sub_214D04064();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C92BD4(uint64_t a1)
{
  unint64_t v2 = sub_214D04064();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214C92C10@<X0>(unsigned char *result@<X0>, char *a2@<X8>)
{
  if (result[16])
  {
    *a2 = -42;
  }
  else
  {
    char v3 = -42;
    switch(*result)
    {
      case 0:
        *a2 = v2[16];
        break;
      case 2:
        *a2 = v2[40];
        break;
      case 3:
        *a2 = v2[64];
        break;
      case 4:
        char v3 = v2[81];
        goto LABEL_8;
      default:
LABEL_8:
        *a2 = v3;
        break;
    }
  }
  return result;
}

uint64_t sub_214C92C9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214C9272C(a1, a2);
}

uint64_t sub_214C92CB4(void *a1)
{
  return sub_214C92438(a1);
}

uint64_t sub_214C92CCC()
{
  return sub_214D1AD48();
}

uint64_t sub_214C92D5C()
{
  return sub_214D1AD48();
}

unint64_t sub_214C92DE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v5 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v5;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  int v2 = *(unsigned __int8 *)(a1 + 16);
  switch(v2)
  {
    case 1:
      uint64_t v6 = *(void *)(v1 + 16);
      uint64_t v7 = *(void *)(v1 + 24);
      char v8 = *(unsigned char *)(v1 + 32);
      break;
    case 5:
      uint64_t v6 = *(void *)(v1 + 40);
      uint64_t v7 = *(void *)(v1 + 48);
      char v8 = *(unsigned char *)(v1 + 56);
      break;
    case 4:
      return sub_214C7BD8C(*(void *)v1, *(unsigned __int8 *)(v1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 9) << 8), MEMORY[0x263F8E970], MEMORY[0x263F8E980]);
    default:
      goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_214C79114(v6, v7, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_214C92EFC()
{
  char v1 = *(unsigned char *)(v0 + 9);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_214D1AD28();
  }
  else
  {
    sub_214D1AD28();
    sub_214D1AD38();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C94FC4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EED0);
  uint64_t v24 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  char v8 = *((unsigned char *)v1 + 8);
  char v9 = *((unsigned char *)v1 + 9);
  uint64_t v10 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v10;
  int v28 = *((unsigned __int8 *)v1 + 32);
  uint64_t v11 = v1[5];
  uint64_t v19 = v1[6];
  uint64_t v20 = v11;
  HIDWORD(v18) = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D040B8();
  uint64_t v12 = v3;
  sub_214D1AD88();
  uint64_t v25 = v7;
  LOBYTE(v26) = v8;
  BYTE1(v26) = v9;
  char v29 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EEC0);
  sub_214B5A118(&qword_26784EED8, &qword_26784EEC0);
  uint64_t v13 = v23;
  sub_214D1AB38();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v6, v3);
  }
  uint64_t v16 = v19;
  uint64_t v15 = v20;
  uint64_t v17 = v24;
  uint64_t v25 = v22;
  uint64_t v26 = v21;
  char v27 = v28;
  char v29 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  sub_214D1AB38();
  uint64_t v25 = v15;
  uint64_t v26 = v16;
  char v27 = BYTE4(v18);
  char v29 = 2;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v12);
}

uint64_t sub_214C95268()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 9);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 56);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1 != 1) {
    sub_214D1AD38();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v4 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C97360@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EEB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D040B8();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EEC0);
    char v25 = 0;
    sub_214B5A118(&qword_26784EEC8, &qword_26784EEC0);
    sub_214D1AA68();
    uint64_t v19 = v21;
    int v24 = v22;
    int v10 = BYTE1(v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    char v25 = 1;
    uint64_t v20 = sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    int v18 = v10;
    uint64_t v12 = v22;
    uint64_t v17 = v21;
    HIDWORD(v16) = v23;
    char v25 = 2;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = v21;
    uint64_t v13 = v22;
    unsigned __int8 v15 = v23;
    swift_bridgeObjectRelease();
    *(void *)a2 = v19;
    *(unsigned char *)(a2 + 8) = v24;
    *(unsigned char *)(a2 + 9) = v18;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 32) = BYTE4(v16);
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v13;
    *(unsigned char *)(a2 + 56) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C97654()
{
  uint64_t v1 = 1684628851;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6973726556736FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1684628325;
  }
}

uint64_t sub_214C976A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFD818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C976C8(uint64_t a1)
{
  unint64_t v2 = sub_214D040B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C97704(uint64_t a1)
{
  unint64_t v2 = sub_214D040B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned __int8 *sub_214C97740@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  if (result[16])
  {
    *a2 = -42;
  }
  else
  {
    char v3 = v2[9];
    int v4 = *result;
    if (v4 != 4) {
      char v3 = -42;
    }
    if (v4 == 5) {
      char v3 = v2[56];
    }
    if (v4 == 1) {
      char v3 = v2[32];
    }
    *a2 = v3;
  }
  return result;
}

uint64_t sub_214C9778C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C97360(a1, a2);
}

uint64_t sub_214C977A4(void *a1)
{
  return sub_214C94FC4(a1);
}

uint64_t sub_214C977C4()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 9);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 56);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1 != 1) {
    sub_214D1AD38();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v4 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

unint64_t sub_214C998BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 32) & 1) != 0 || *(unsigned char *)(a1 + 16) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v8 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v8;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    uint64_t v2 = *(void *)v1;
    uint64_t v3 = *(void *)(v1 + 8);
    char v4 = *(unsigned char *)(v1 + 16);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_214C79114(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_214C9998C(void *a1)
{
  return sub_214C9D318(a1, &qword_26784EEF0, (void (*)(void))sub_214D0410C);
}

uint64_t sub_214C999CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C9D4EC(a1, &qword_26784EEE0, (void (*)(void))sub_214D0410C, a2);
}

uint64_t sub_214C99A08()
{
  return 1684628851;
}

uint64_t sub_214C99A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684628851 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214C99AA0(uint64_t a1)
{
  unint64_t v2 = sub_214D0410C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C99ADC(uint64_t a1)
{
  unint64_t v2 = sub_214D0410C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214C99B18@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if ((result[16] & 1) != 0 || *result != 1) {
    *a2 = -42;
  }
  else {
    *a2 = *(unsigned char *)(v2 + 16);
  }
  return result;
}

uint64_t sub_214C99B48()
{
  return sub_214CA26A0();
}

uint64_t sub_214C99B68(uint64_t *a1, uint64_t *a2)
{
  return sub_214CE7468(a1, a2) & 1;
}

unint64_t sub_214C99B84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
LABEL_2:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v3 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v3;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    switch(*(unsigned char *)(a1 + 16))
    {
      case 6:
        uint64_t v5 = *(void *)v1;
        uint64_t v6 = *(void *)(v1 + 8);
        char v7 = *(unsigned char *)(v1 + 16);
        goto LABEL_7;
      case 8:
        uint64_t v5 = *(void *)(v1 + 24);
        uint64_t v6 = *(void *)(v1 + 32);
        char v7 = *(unsigned char *)(v1 + 40);
        goto LABEL_7;
      case 9:
        uint64_t v5 = *(void *)(v1 + 48);
        uint64_t v6 = *(void *)(v1 + 56);
        char v7 = *(unsigned char *)(v1 + 64);
LABEL_7:
        swift_bridgeObjectRetain();
        unint64_t v8 = sub_214C79114(v5, v6, v7);
        swift_bridgeObjectRelease();
        unint64_t result = v8;
        break;
      case 0xE:
        __int16 v9 = *(unsigned __int8 *)(v1 + 65) | (*(unsigned __int8 *)(v1 + 66) << 8);
        unint64_t result = sub_214C7A768(v9);
        break;
      default:
        goto LABEL_2;
    }
  }
  return result;
}

uint64_t sub_214C99CE4()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  int v6 = *(unsigned __int8 *)(v0 + 65);
  char v8 = *(unsigned char *)(v0 + 66);
  if (*(void *)(v0 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  if (v6 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v8 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214C9C888(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF30);
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  char v9 = *((unsigned char *)v1 + 16);
  uint64_t v10 = v1[3];
  uint64_t v23 = v1[4];
  uint64_t v24 = v10;
  int v30 = *((unsigned __int8 *)v1 + 40);
  uint64_t v11 = v1[6];
  uint64_t v21 = v1[7];
  uint64_t v22 = v11;
  LODWORD(v11) = *((unsigned __int8 *)v1 + 64);
  int v18 = *((unsigned __int8 *)v1 + 65);
  int v19 = *((unsigned __int8 *)v1 + 66);
  int v20 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D041B4();
  sub_214D1AD88();
  uint64_t v27 = v8;
  uint64_t v28 = v7;
  char v29 = v9;
  char v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v12 = v26;
  sub_214D1AB38();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v3);
  }
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v25;
  uint64_t v27 = v24;
  uint64_t v28 = v23;
  char v29 = v30;
  char v31 = 1;
  sub_214D1AB38();
  uint64_t v27 = v15;
  uint64_t v28 = v14;
  char v29 = v20;
  char v31 = 2;
  sub_214D1AB38();
  LOBYTE(v27) = v18;
  BYTE1(v27) = v19;
  char v31 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
  sub_214B5A118(&qword_26784EF38, &qword_26784EF20);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v3);
}

uint64_t sub_214C9CB6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D041B4();
  sub_214D1AD78();
  if (!v2)
  {
    uint64_t v22 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    char v27 = 0;
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    uint64_t v11 = v24;
    uint64_t v21 = v23;
    int v26 = v25;
    char v27 = 1;
    sub_214D1AA68();
    uint64_t v19 = v23;
    int v20 = a2;
    uint64_t v12 = v24;
    int v18 = v25;
    char v27 = 2;
    sub_214D1AA68();
    uint64_t v13 = v24;
    uint64_t v17 = v23;
    HIDWORD(v16) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
    char v27 = 3;
    sub_214B5A118(&qword_26784EF28, &qword_26784EF20);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v5);
    __int16 v14 = v23;
    uint64_t v15 = v20;
    *int v20 = v21;
    v15[1] = v11;
    *((unsigned char *)v15 + 16) = v26;
    v15[3] = v19;
    v15[4] = v12;
    *((unsigned char *)v15 + 40) = v18;
    v15[6] = v17;
    v15[7] = v13;
    *((unsigned char *)v15 + 64) = BYTE4(v16);
    *(_WORD *)((char *)v15 + 65) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C9CF18()
{
  uint64_t result = 0x7265626D756ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6469636369;
      break;
    case 2:
      uint64_t result = 1769172329;
      break;
    case 3:
      uint64_t result = 0x6572506D69537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C9CFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFD958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C9CFC8(uint64_t a1)
{
  unint64_t v2 = sub_214D041B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C9D004(uint64_t a1)
{
  unint64_t v2 = sub_214D041B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214C9D040@<X0>(unsigned char *result@<X0>, char *a2@<X8>)
{
  if (result[16])
  {
    *a2 = -42;
  }
  else
  {
    char v3 = -42;
    switch(*result)
    {
      case 6:
        *a2 = v2[16];
        break;
      case 8:
        *a2 = v2[40];
        break;
      case 9:
        *a2 = v2[64];
        break;
      case 0xE:
        char v3 = v2[66];
        goto LABEL_8;
      default:
LABEL_8:
        *a2 = v3;
        break;
    }
  }
  return result;
}

uint64_t sub_214C9D0E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214C9CB6C(a1, a2);
}

uint64_t sub_214C9D0F8(void *a1)
{
  return sub_214C9C888(a1);
}

uint64_t sub_214C9D110()
{
  return sub_214D1AD48();
}

uint64_t sub_214C9D190()
{
  return sub_214D1AD48();
}

unint64_t sub_214C9D20C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 32) & 1) != 0 || *(unsigned char *)(a1 + 16) != 7)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v8 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v8;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    uint64_t v2 = *(void *)v1;
    uint64_t v3 = *(void *)(v1 + 8);
    char v4 = *(unsigned char *)(v1 + 16);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_214C79114(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_214C9D2DC(void *a1)
{
  return sub_214C9D318(a1, &qword_26784EF08, (void (*)(void))sub_214D04160);
}

uint64_t sub_214C9D318(void *a1, uint64_t *a2, void (*a3)(void))
{
  __int16 v14 = a3;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  uint64_t v9 = v3[1];
  HIDWORD(v13) = *((unsigned __int8 *)v3 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14();
  sub_214D1AD88();
  uint64_t v16 = v10;
  uint64_t v17 = v9;
  char v18 = BYTE4(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v11 = v15;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v11);
}

uint64_t sub_214C9D4B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C9D4EC(a1, &qword_26784EEF8, (void (*)(void))sub_214D04160, a2);
}

uint64_t sub_214C9D4EC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v15 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v18 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_214D1AD78();
  if (!v4)
  {
    uint64_t v11 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v7);
    char v12 = v17;
    *(_OWORD *)uint64_t v11 = v16;
    *(unsigned char *)(v11 + 16) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_214C9D69C()
{
  return 0x4C61746144636170;
}

uint64_t sub_214C9D6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4C61746144636170 && a2 == 0xEB00000000747369)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214C9D76C(uint64_t a1)
{
  unint64_t v2 = sub_214D04160();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C9D7A8(uint64_t a1)
{
  unint64_t v2 = sub_214D04160();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214C9D7E4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if ((result[16] & 1) != 0 || *result != 7) {
    *a2 = -42;
  }
  else {
    *a2 = *(unsigned char *)(v2 + 16);
  }
  return result;
}

id sub_214C9D814(void *a1)
{
  objc_msgSend(a1, sel_coordinate);
  *(void *)(v1 + 24) = v3;
  *(_WORD *)(v1 + 32) = -12032;
  objc_msgSend(a1, sel_coordinate);
  *(void *)(v1 + 40) = v4;
  *(_WORD *)(v1 + 48) = -12032;
  objc_msgSend(a1, sel_horizontalAccuracy);
  *(void *)(v1 + 56) = v5;
  *(_WORD *)(v1 + 64) = -12032;
  objc_msgSend(a1, sel_verticalAccuracy);
  *(void *)(v1 + 72) = v6;
  *(_WORD *)(v1 + 80) = -12032;
  id result = objc_msgSend(a1, sel_altitude);
  *(void *)(v1 + 88) = v8;
  *(_WORD *)(v1 + 96) = -12032;
  return result;
}

char sub_214C9D8B0@<W0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  if (*(unsigned char *)(a1 + 16))
  {
    char v5 = v2[33];
    char v6 = v2[49];
    char v7 = v2[65];
    char v8 = v2[81];
    char v9 = v2[97];
    uint64_t v10 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = v4;
    v11._object = v10;
    LOBYTE(a1) = ODILocationBindingsName.init(rawValue:)(v11);
    switch(v14)
    {
      case 1:
        *a2 = v6;
        break;
      case 2:
        *a2 = v7;
        break;
      case 3:
        *a2 = v8;
        break;
      case 4:
        *a2 = v9;
        break;
      case 5:
        goto LABEL_7;
      default:
        *a2 = v5;
        break;
    }
  }
  else
  {
    if (*(void *)a1 == 10)
    {
      char v12 = v2[16];
    }
    else if (*(void *)a1 == 11)
    {
      char v12 = v2[18];
    }
    else
    {
LABEL_7:
      char v12 = -42;
    }
    *a2 = v12;
  }
  return a1;
}

unint64_t sub_214C9D9BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(unsigned char *)(a1 + 32))
  {
    __int16 v24 = *(unsigned __int8 *)(v1 + 33);
    __int16 v25 = *(unsigned __int8 *)(v1 + 32);
    uint64_t v26 = *(void *)(v1 + 40);
    uint64_t v27 = *(void *)(v1 + 24);
    __int16 v21 = *(unsigned __int8 *)(v1 + 49);
    __int16 v22 = *(unsigned __int8 *)(v1 + 48);
    uint64_t v23 = *(void *)(v1 + 56);
    __int16 v3 = *(unsigned __int8 *)(v1 + 64);
    __int16 v4 = *(unsigned __int8 *)(v1 + 65);
    uint64_t v5 = *(void *)(v1 + 72);
    __int16 v6 = *(unsigned __int8 *)(v1 + 80);
    __int16 v7 = *(unsigned __int8 *)(v1 + 81);
    uint64_t v8 = *(void *)(v1 + 88);
    __int16 v9 = *(unsigned __int8 *)(v1 + 96);
    __int16 v10 = *(unsigned __int8 *)(v1 + 97);
    Swift::String v11 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v2;
    v12._object = v11;
    ODILocationBindingsName.init(rawValue:)(v12);
    switch(v28)
    {
      case 1:
        unint64_t result = sub_214C7BD8C(v26, v22 | (unsigned __int16)(v21 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 2:
        unint64_t result = sub_214C7BD8C(v23, v3 | (unsigned __int16)(v4 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 3:
        unint64_t result = sub_214C7BD8C(v5, v6 | (unsigned __int16)(v7 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 4:
        unint64_t result = sub_214C7BD8C(v8, v9 | (unsigned __int16)(v10 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 5:
        goto LABEL_15;
      default:
        unint64_t result = sub_214C7BD8C(v27, v25 | (unsigned __int16)(v24 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
    }
  }
  else if (*(void *)(a1 + 16) == 10)
  {
    uint64_t v15 = *(void *)v1;
    uint64_t v16 = *(void *)(v1 + 8);
    char v17 = *(unsigned char *)(v1 + 16);
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_214C79114(v15, v16, v17);
    swift_bridgeObjectRelease();
    return v18;
  }
  else if (*(void *)(a1 + 16) == 11)
  {
    __int16 v14 = *(unsigned __int8 *)(v1 + 17) | (*(unsigned __int8 *)(v1 + 18) << 8);
    return sub_214C7A768(v14);
  }
  else
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v20 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v20;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return result;
}

uint64_t sub_214C9DC4C(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 16);
  int v4 = *(unsigned __int8 *)(v1 + 17);
  char v5 = *(unsigned char *)(v1 + 18);
  uint64_t v6 = *(void *)(v1 + 24);
  __int16 v10 = *(unsigned __int8 *)(v1 + 33);
  __int16 v11 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  __int16 v12 = *(unsigned __int8 *)(v1 + 49);
  __int16 v13 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  __int16 v14 = *(unsigned __int8 *)(v1 + 65);
  __int16 v15 = *(unsigned __int8 *)(v1 + 64);
  __int16 v16 = *(unsigned __int8 *)(v1 + 81);
  __int16 v17 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v20 = *(void *)(v1 + 72);
  uint64_t v21 = *(void *)(v1 + 88);
  __int16 v18 = *(unsigned __int8 *)(v1 + 97);
  __int16 v19 = *(unsigned __int8 *)(v1 + 96);
  if (*(void *)(v1 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  if (v4 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214C7D5D8(a1, v6, v11 | (v10 << 8));
  sub_214C7D5D8(a1, v7, v13 | (v12 << 8));
  sub_214C7D5D8(a1, v8, v15 | (v14 << 8));
  sub_214C7D5D8(a1, v20, v17 | (v16 << 8));
  return sub_214C7D5D8(a1, v21, v19 | (unsigned __int16)(v18 << 8));
}

unint64_t sub_214C9F318(char a1)
{
  unint64_t result = 0x61636F6C5F737067;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 3:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x6564757469746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C9F41C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF60);
  uint64_t v33 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  char v9 = *((unsigned char *)v1 + 16);
  int v38 = *((unsigned __int8 *)v1 + 17);
  int v32 = *((unsigned __int8 *)v1 + 18);
  uint64_t v31 = v1[3];
  int v10 = *((unsigned __int8 *)v1 + 32);
  int v29 = *((unsigned __int8 *)v1 + 33);
  int v30 = v10;
  uint64_t v26 = v1[5];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 49);
  int v27 = *((unsigned __int8 *)v1 + 48);
  int v28 = v5;
  uint64_t v23 = v1[7];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 65);
  int v24 = *((unsigned __int8 *)v1 + 64);
  int v25 = v5;
  uint64_t v20 = v1[9];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 81);
  int v21 = *((unsigned __int8 *)v1 + 80);
  int v22 = v5;
  uint64_t v17 = v1[11];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 97);
  int v18 = *((unsigned __int8 *)v1 + 96);
  int v19 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04208();
  sub_214D1AD88();
  uint64_t v35 = v7;
  uint64_t v36 = v8;
  char v37 = v9;
  char v39 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v11 = v34;
  sub_214D1AB38();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v6, v3);
  }
  char v13 = v29;
  char v14 = v30;
  uint64_t v15 = v31;
  uint64_t v16 = v33;
  LOBYTE(v35) = v38;
  BYTE1(v35) = v32;
  char v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
  sub_214B5A118(&qword_26784EF38, &qword_26784EF20);
  sub_214D1AB38();
  uint64_t v35 = v15;
  LOBYTE(v36) = v14;
  BYTE1(v36) = v13;
  char v39 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF50);
  sub_214B5A118(&qword_26784EF68, &qword_26784EF50);
  sub_214D1AB38();
  uint64_t v35 = v26;
  LOBYTE(v36) = v27;
  BYTE1(v36) = v28;
  char v39 = 3;
  sub_214D1AB38();
  uint64_t v35 = v23;
  LOBYTE(v36) = v24;
  BYTE1(v36) = v25;
  char v39 = 4;
  sub_214D1AB38();
  uint64_t v35 = v20;
  LOBYTE(v36) = v21;
  BYTE1(v36) = v22;
  char v39 = 5;
  sub_214D1AB38();
  uint64_t v35 = v17;
  LOBYTE(v36) = v18;
  BYTE1(v36) = v19;
  char v39 = 6;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, void))(v16 + 8))(v6, 0);
}

uint64_t sub_214C9F864@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04208();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    char v43 = 0;
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    uint64_t v10 = v40;
    char v37 = a2;
    uint64_t v38 = v39;
    int v11 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
    char v43 = 1;
    sub_214B5A118(&qword_26784EF28, &qword_26784EF20);
    sub_214D1AA68();
    int v42 = v11;
    int v35 = v39;
    int v12 = BYTE1(v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF50);
    char v43 = 2;
    uint64_t v36 = sub_214B5A118(&qword_26784EF58, &qword_26784EF50);
    sub_214D1AA68();
    uint64_t v32 = v39;
    int v33 = v40;
    int v34 = v12;
    int v13 = BYTE1(v40);
    char v43 = 3;
    sub_214D1AA68();
    uint64_t v29 = v39;
    int v30 = v40;
    int v31 = v13;
    int v14 = BYTE1(v40);
    char v43 = 4;
    sub_214D1AA68();
    uint64_t v26 = v39;
    int v27 = v40;
    int v28 = v14;
    int v15 = BYTE1(v40);
    char v43 = 5;
    sub_214D1AA68();
    int v25 = v15;
    uint64_t v17 = v39;
    int v23 = BYTE1(v40);
    int v24 = v40;
    char v43 = 6;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v18 = v39;
    char v19 = v40;
    char v20 = BYTE1(v40);
    int v21 = v37;
    *char v37 = v38;
    v21[1] = v10;
    *((unsigned char *)v21 + 16) = v42;
    *((unsigned char *)v21 + 17) = v35;
    *((unsigned char *)v21 + 18) = v34;
    v21[3] = v32;
    *((unsigned char *)v21 + 32) = v33;
    *((unsigned char *)v21 + 33) = v31;
    v21[5] = v29;
    *((unsigned char *)v21 + 48) = v30;
    *((unsigned char *)v21 + 49) = v28;
    v21[7] = v26;
    *((unsigned char *)v21 + 64) = v27;
    *((unsigned char *)v21 + 65) = v25;
    v21[9] = v17;
    *((unsigned char *)v21 + 80) = v24;
    *((unsigned char *)v21 + 81) = v23;
    v21[11] = v18;
    *((unsigned char *)v21 + 96) = v19;
    *((unsigned char *)v21 + 97) = v20;
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_214C9FD00()
{
  return sub_214C9F318(*v0);
}

uint64_t sub_214C9FD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFDB0C(a1, a2);
  *a3 = result;
  return result;
}

void sub_214C9FD30(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_214C9FD3C(uint64_t a1)
{
  unint64_t v2 = sub_214D04208();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C9FD78(uint64_t a1)
{
  unint64_t v2 = sub_214D04208();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C9FDBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214C9F864(a1, a2);
}

uint64_t sub_214C9FDD4(void *a1)
{
  return sub_214C9F41C(a1);
}

uint64_t sub_214C9FDEC()
{
  __int16 v1 = *((_WORD *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 18);
  uint64_t v3 = *((void *)v0 + 3);
  char v4 = *((unsigned char *)v0 + 32);
  char v5 = *((unsigned char *)v0 + 33);
  uint64_t v6 = *((void *)v0 + 5);
  char v7 = *((unsigned char *)v0 + 48);
  char v8 = *((unsigned char *)v0 + 49);
  uint64_t v9 = *((void *)v0 + 7);
  char v10 = *((unsigned char *)v0 + 64);
  char v11 = *((unsigned char *)v0 + 65);
  uint64_t v12 = *((void *)v0 + 9);
  char v13 = *((unsigned char *)v0 + 80);
  char v14 = *((unsigned char *)v0 + 81);
  uint64_t v15 = *((void *)v0 + 11);
  char v16 = *((unsigned char *)v0 + 96);
  char v17 = *((unsigned char *)v0 + 97);
  long long v20 = *v0;
  __int16 v21 = v1;
  char v22 = v2;
  uint64_t v23 = v3;
  char v24 = v4;
  char v25 = v5;
  uint64_t v26 = v6;
  char v27 = v7;
  char v28 = v8;
  uint64_t v29 = v9;
  char v30 = v10;
  char v31 = v11;
  uint64_t v32 = v12;
  char v33 = v13;
  char v34 = v14;
  uint64_t v35 = v15;
  char v36 = v16;
  char v37 = v17;
  sub_214D1AD08();
  sub_214C9DC4C((uint64_t)v19);
  return sub_214D1AD48();
}

uint64_t sub_214C9FEC4()
{
  __int16 v1 = *((_WORD *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 18);
  uint64_t v3 = *((void *)v0 + 3);
  char v4 = *((unsigned char *)v0 + 32);
  char v5 = *((unsigned char *)v0 + 33);
  uint64_t v6 = *((void *)v0 + 5);
  char v7 = *((unsigned char *)v0 + 48);
  char v8 = *((unsigned char *)v0 + 49);
  uint64_t v9 = *((void *)v0 + 7);
  char v10 = *((unsigned char *)v0 + 64);
  char v11 = *((unsigned char *)v0 + 65);
  uint64_t v12 = *((void *)v0 + 9);
  char v13 = *((unsigned char *)v0 + 80);
  char v14 = *((unsigned char *)v0 + 81);
  uint64_t v15 = *((void *)v0 + 11);
  char v16 = *((unsigned char *)v0 + 96);
  char v17 = *((unsigned char *)v0 + 97);
  long long v20 = *v0;
  __int16 v21 = v1;
  char v22 = v2;
  uint64_t v23 = v3;
  char v24 = v4;
  char v25 = v5;
  uint64_t v26 = v6;
  char v27 = v7;
  char v28 = v8;
  uint64_t v29 = v9;
  char v30 = v10;
  char v31 = v11;
  uint64_t v32 = v12;
  char v33 = v13;
  char v34 = v14;
  uint64_t v35 = v15;
  char v36 = v16;
  char v37 = v17;
  sub_214D1AD08();
  sub_214C9DC4C((uint64_t)v19);
  return sub_214D1AD48();
}

uint64_t sub_214C9FF98(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D0425C();
  sub_214D1AD88();
  __int16 v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
  sub_214B5A118(&qword_26784EF38, &qword_26784EF20);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214CA0110()
{
  int v1 = *v0;
  unsigned __int8 v2 = v0[1];
  sub_214D1AD08();
  if (v1 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214CA0C24@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D0425C();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
    sub_214B5A118(&qword_26784EF28, &qword_26784EF20);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_214CA0DBC()
{
  return 0xD000000000000011;
}

uint64_t sub_214CA0DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFDDE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_214CA0E04(uint64_t a1)
{
  unint64_t v2 = sub_214D0425C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CA0E40(uint64_t a1)
{
  unint64_t v2 = sub_214D0425C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214CA0E7C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if ((result[16] & 1) != 0 || *result != 12) {
    *a2 = -42;
  }
  else {
    *a2 = *(unsigned char *)(v2 + 1);
  }
  return result;
}

unint64_t sub_214CA0EA8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 32) & 1) != 0 || *(unsigned char *)(a1 + 16) != 12)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v5 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v5;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    __int16 v2 = *v1 | (v1[1] << 8);
    return sub_214C7A768(v2);
  }
}

uint64_t sub_214CA0F5C@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_214CA0C24(a1, a2);
}

uint64_t sub_214CA0F74(void *a1)
{
  return sub_214C9FF98(a1);
}

uint64_t sub_214CA0F90()
{
  char v1 = v0[1];
  if (*v0 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214CA1A80()
{
  int v1 = *v0;
  unsigned __int8 v2 = v0[1];
  sub_214D1AD08();
  if (v1 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

unint64_t sub_214CA2594(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 32) & 1) != 0 || *(unsigned char *)(a1 + 16) != 13)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v8 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v8;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  else
  {
    uint64_t v2 = *(void *)v1;
    uint64_t v3 = *(void *)(v1 + 8);
    char v4 = *(unsigned char *)(v1 + 16);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_214C79114(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_214CA2664(void *a1)
{
  return sub_214C9D318(a1, &qword_26784EF98, (void (*)(void))sub_214D042B0);
}

uint64_t sub_214CA26A0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214CA31C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C9D4EC(a1, &qword_26784EF88, (void (*)(void))sub_214D042B0, a2);
}

uint64_t sub_214CA3200()
{
  return 0x656E6F7A656D6974;
}

uint64_t sub_214CA3218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214CA32B0(uint64_t a1)
{
  unint64_t v2 = sub_214D042B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CA32EC(uint64_t a1)
{
  unint64_t v2 = sub_214D042B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unsigned char *sub_214CA3328@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  if ((result[16] & 1) != 0 || *result != 13) {
    *a2 = -42;
  }
  else {
    *a2 = *(unsigned char *)(v2 + 16);
  }
  return result;
}

uint64_t sub_214CA3358()
{
  char v1 = *(unsigned char *)(v0 + 16);
  if (*(void *)(v0 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214CA3E60()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

unint64_t sub_214CA4980(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    uint64_t v1 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_214BEADDC(v2, v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v5 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v5;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return v3;
}

uint64_t sub_214CA4A58@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    uint64_t v10 = *v2;
    if (v10)
    {
      if (*(void *)(v10 + 16))
      {
        uint64_t v11 = *(void *)a1;
        uint64_t v12 = *(void *)(a1 + 8);
        swift_bridgeObjectRetain();
        sub_214B6F6CC(v11, v12, 1);
        uint64_t v13 = sub_214B87FEC(v11, v12);
        if (v14)
        {
          uint64_t v15 = v13;
          uint64_t v16 = *(void *)(v10 + 56);
          uint64_t v17 = type metadata accessor for ODIKnownBinding();
          uint64_t v18 = *(void *)(v17 - 8);
          sub_214B9163C(v16 + *(void *)(v18 + 72) * v15, (uint64_t)v9);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        }
        else
        {
          uint64_t v17 = type metadata accessor for ODIKnownBinding();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
        }
        sub_214B6F6DC(v11, v12, 1);
        type metadata accessor for ODIKnownBinding();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v9, 1, v17) != 1)
        {
          sub_214B59CE0((uint64_t)v9, &qword_26784D878);
          uint64_t result = swift_bridgeObjectRelease();
          char v19 = -47;
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v21 = type metadata accessor for ODIKnownBinding();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v20 = type metadata accessor for ODIKnownBinding();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
    }
    sub_214B59CE0((uint64_t)v9, &qword_26784D878);
    uint64_t result = swift_bridgeObjectRelease();
    char v19 = -46;
  }
  else
  {
    char v19 = -42;
  }
LABEL_13:
  *a2 = v19;
  return result;
}

uint64_t sub_214CA4D24(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04304();
  sub_214D1AD88();
  uint64_t v11 = v8;
  char v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFB0);
  sub_214B5A118(&qword_26784EFC8, &qword_26784EFB0);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214CA4EA8()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_214CDE3A8(v4, v1);
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214CA59C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B7F7FC(MEMORY[0x263F8EE78]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04304();
  sub_214D1AD78();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFB0);
    sub_214B5A118(&qword_26784EFB8, &qword_26784EFB0);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    uint64_t v11 = v13;
    char v12 = v14;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v9 = v11;
    *(unsigned char *)(v9 + 8) = v12;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_214CA5BA8()
{
  return 0xD000000000000010;
}

uint64_t sub_214CA5BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFDE68(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_214CA5BF0(uint64_t a1)
{
  unint64_t v2 = sub_214D04304();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CA5C2C(uint64_t a1)
{
  unint64_t v2 = sub_214D04304();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CA5C70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214CA59C8(a1, a2);
}

uint64_t sub_214CA5C88(void *a1)
{
  return sub_214CA4D24(a1);
}

uint64_t sub_214CA5CA4(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v2;
  char v5 = *(unsigned char *)(v2 + 8);
  if (*(void *)v2)
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214CDE3A8(a1, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214CA67A4()
{
  uint64_t v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_214CDE3A8(v4, v1);
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

unint64_t sub_214CA72C4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    __int16 v17 = *v1;
    __int16 v2 = v1[1];
    __int16 v3 = v1[2];
    __int16 v4 = v1[3];
    uint64_t v18 = *((void *)v1 + 1);
    __int16 v5 = v1[16];
    __int16 v6 = v1[17];
    uint64_t v7 = *((void *)v1 + 3);
    __int16 v8 = v1[32];
    __int16 v9 = v1[33];
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v10 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    ODIDeviceSettingsBindingsName.init(rawValue:)(v12);
    switch(v19)
    {
      case 1:
        __int16 v16 = v3 | (v4 << 8);
        goto LABEL_7;
      case 2:
        return sub_214C7BD8C(v18, v5 | (unsigned __int16)(v6 << 8), MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8]);
      case 3:
        return sub_214C7BD8C(v7, v8 | (unsigned __int16)(v9 << 8), MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8]);
      case 4:
      case 5:
        goto LABEL_3;
      default:
        __int16 v16 = v17 | (v2 << 8);
LABEL_7:
        unint64_t result = sub_214C7A768(v16);
        break;
    }
  }
  else
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v14 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v14;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return result;
}

char sub_214CA748C@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    char v4 = v2[1];
    char v5 = v2[3];
    char v6 = v2[17];
    char v7 = v2[33];
    uint64_t v9 = *(void *)a1;
    __int16 v8 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v9;
    v10._object = v8;
    LOBYTE(a1) = ODIDeviceSettingsBindingsName.init(rawValue:)(v10);
    switch(v12)
    {
      case 1:
        *a2 = v5;
        break;
      case 2:
        *a2 = v6;
        break;
      case 3:
        *a2 = v7;
        break;
      case 4:
      case 5:
        goto LABEL_3;
      default:
        *a2 = v4;
        break;
    }
  }
  else
  {
LABEL_3:
    *a2 = -42;
  }
  return a1;
}

uint64_t sub_214CA7568()
{
  char v1 = v0[1];
  int v2 = v0[2];
  char v3 = v0[3];
  int v4 = v0[16];
  char v5 = v0[17];
  int v6 = v0[32];
  char v7 = v0[33];
  if (*v0 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  if (v2 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v4) {
    sub_214D1AD18();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v6) {
    sub_214D1AD18();
  }
  if ((v7 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214CAA0C8(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F010);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  __int16 v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v9 = *v1;
  int v25 = *((unsigned __int8 *)v1 + 2);
  int v21 = *((unsigned __int8 *)v1 + 3);
  uint64_t v20 = *((void *)v1 + 1);
  int v10 = *((unsigned __int8 *)v1 + 16);
  int v18 = *((unsigned __int8 *)v1 + 17);
  int v19 = v10;
  uint64_t v15 = *((void *)v1 + 3);
  LODWORD(v7) = *((unsigned __int8 *)v1 + 33);
  int v16 = *((unsigned __int8 *)v1 + 32);
  int v17 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04550();
  sub_214D1AD88();
  LOWORD(v22) = v9;
  char v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
  sub_214B5A118(&qword_26784EF38, &qword_26784EF20);
  sub_214D1AB38();
  if (!v2)
  {
    char v11 = v19;
    uint64_t v12 = v20;
    LOBYTE(v22) = v25;
    BYTE1(v22) = v21;
    char v26 = 1;
    sub_214D1AB38();
    uint64_t v22 = v12;
    char v23 = v11;
    char v24 = v18;
    char v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
    sub_214B5A118(&qword_26784EEA8, &qword_26784EE90);
    sub_214D1AB38();
    uint64_t v22 = v15;
    char v23 = v16;
    char v24 = v17;
    char v26 = 3;
    sub_214D1AB38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_214CAA394()
{
  int v1 = *v0;
  unsigned __int8 v2 = v0[1];
  int v3 = v0[2];
  unsigned __int8 v4 = v0[3];
  int v5 = v0[16];
  unsigned __int8 v6 = v0[17];
  int v7 = v0[32];
  unsigned __int8 v8 = v0[33];
  sub_214D1AD08();
  if (v1 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  if (v3 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v4 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v5) {
    sub_214D1AD18();
  }
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v7) {
    sub_214D1AD18();
  }
  if ((v8 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214CACF40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F000);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  __int16 v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04550();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF20);
    char v24 = 0;
    sub_214B5A118(&qword_26784EF28, &qword_26784EF20);
    sub_214D1AA68();
    int v23 = v20;
    int v19 = BYTE1(v20);
    char v24 = 1;
    sub_214D1AA68();
    int v17 = BYTE1(v20);
    int v18 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
    char v24 = 2;
    sub_214B5A118(&qword_26784EE98, &qword_26784EE90);
    sub_214D1AA68();
    uint64_t v16 = v20;
    int v14 = v22;
    int v15 = v21;
    char v24 = 3;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v11 = v20;
    unsigned __int8 v12 = v21;
    unsigned __int8 v13 = v22;
    *(unsigned char *)a2 = v23;
    *(unsigned char *)(a2 + 1) = v19;
    *(unsigned char *)(a2 + 2) = v18;
    *(unsigned char *)(a2 + 3) = v17;
    *(void *)(a2 + 8) = v16;
    *(unsigned char *)(a2 + 16) = v15;
    *(unsigned char *)(a2 + 17) = v14;
    *(void *)(a2 + 24) = v11;
    *(unsigned char *)(a2 + 32) = v12;
    *(unsigned char *)(a2 + 33) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_214CAD254()
{
  unint64_t result = 0x6563697665447369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x614C656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214CAD308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFDEF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214CAD330(uint64_t a1)
{
  unint64_t v2 = sub_214D04550();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CAD36C(uint64_t a1)
{
  unint64_t v2 = sub_214D04550();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CAD3B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214CACF40(a1, a2);
}

uint64_t sub_214CAD3C8(void *a1)
{
  return sub_214CAA0C8(a1);
}

uint64_t sub_214CAD3E8()
{
  int v1 = *v0;
  unsigned __int8 v2 = v0[1];
  int v3 = v0[2];
  unsigned __int8 v4 = v0[3];
  int v5 = v0[16];
  unsigned __int8 v6 = v0[17];
  int v7 = v0[32];
  unsigned __int8 v8 = v0[33];
  sub_214D1AD08();
  if (v1 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  if (v3 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v4 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v5) {
    sub_214D1AD18();
  }
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v7) {
    sub_214D1AD18();
  }
  if ((v8 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

unint64_t sub_214CAFF94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v2 = *(void *)v1;
    __int16 v3 = *(unsigned __int8 *)(v1 + 8);
    __int16 v4 = *(unsigned __int8 *)(v1 + 9);
    uint64_t v6 = *(void *)(a1 + 16);
    int v5 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = v6;
    v7._object = v5;
    ODIDeviceSettingsBindingsName.init(rawValue:)(v7);
    if (v11 == 4) {
      return sub_214C7BD8C(v2, v3 | (unsigned __int16)(v4 << 8), MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8]);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(void *)(inited + 32) = 0x646F43726F727265;
  *(void *)(inited + 40) = 0xE900000000000065;
  uint64_t v10 = MEMORY[0x263F8D6D8];
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 80) = v10;
  *(void *)(inited + 48) = -5;
  return sub_214B7E450(inited);
}

char sub_214CB0098@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1
    && (char v4 = *(unsigned char *)(v2 + 9),
        uint64_t v6 = *(void *)a1,
        int v5 = *(void **)(a1 + 8),
        swift_bridgeObjectRetain(),
        v7._countAndFlagsBits = v6,
        v7._object = v5,
        LOBYTE(a1) = ODIDeviceSettingsBindingsName.init(rawValue:)(v7),
        v9 == 4))
  {
    *a2 = v4;
  }
  else
  {
    *a2 = -42;
  }
  return a1;
}

uint64_t sub_214CB0110(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F058);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  Swift::String v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  int v12 = *((unsigned __int8 *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D0464C();
  sub_214D1AD88();
  uint64_t v13 = v8;
  char v14 = v9;
  char v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
  sub_214B5A118(&qword_26784EEA8, &qword_26784EE90);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214CB02A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 9);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1 != 1) {
    sub_214D1AD18();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

uint64_t sub_214CB0DBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F048);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D0464C();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE90);
    sub_214B5A118(&qword_26784EE98, &qword_26784EE90);
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    char v10 = v14;
    char v11 = v15;
    *(void *)a2 = v13;
    *(unsigned char *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 9) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_214CB0F68()
{
  return 0x7365727574616566;
}

uint64_t sub_214CB0F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214CB1018(uint64_t a1)
{
  unint64_t v2 = sub_214D0464C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CB1054(uint64_t a1)
{
  unint64_t v2 = sub_214D0464C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CB1098@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214CB0DBC(a1, a2);
}

uint64_t sub_214CB10B0(void *a1)
{
  return sub_214CB0110(a1);
}

uint64_t sub_214CB10CC()
{
  char v1 = *(unsigned char *)(v0 + 9);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_214D1AD28();
  }
  else
  {
    sub_214D1AD28();
    sub_214D1AD18();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214CB1BC0()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 9);
  sub_214D1AD08();
  sub_214D1AD28();
  if (v1 != 1) {
    sub_214D1AD18();
  }
  if ((v2 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return sub_214D1AD48();
}

unint64_t sub_214CB26D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t v18 = *(void *)v1;
    char v3 = *(unsigned char *)(v1 + 16);
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    char v6 = *(unsigned char *)(v1 + 40);
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v7 = *(void *)(v1 + 56);
    char v9 = *(unsigned char *)(v1 + 64);
    uint64_t v11 = *(void *)(a1 + 16);
    char v10 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    ODIFormattedPhoneNumberBindings.init(rawValue:)(v12);
    switch(v19)
    {
      case 1:
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_214C79114(v5, v4, v6);
        goto LABEL_8;
      case 2:
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_214C79114(v8, v7, v9);
LABEL_8:
        swift_bridgeObjectRelease();
        unint64_t result = v15;
        break;
      case 3:
        goto LABEL_6;
      default:
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_214C79114(v18, v2, v3);
        swift_bridgeObjectRelease();
        unint64_t result = v13;
        break;
    }
  }
  else
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v17 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v17;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return result;
}

char sub_214CB2880@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    char v4 = v2[16];
    char v5 = v2[40];
    char v6 = v2[64];
    uint64_t v8 = *(void *)a1;
    uint64_t v7 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    LOBYTE(a1) = ODIFormattedPhoneNumberBindings.init(rawValue:)(v9);
    switch(v11)
    {
      case 1:
        *a2 = v5;
        break;
      case 2:
        *a2 = v6;
        break;
      case 3:
        goto LABEL_4;
      default:
        *a2 = v4;
        break;
    }
  }
  else
  {
LABEL_4:
    *a2 = -42;
  }
  return a1;
}

uint64_t sub_214CB2940()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 64);
  if (*(void *)(v0 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD28();
  }
  if ((v1 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return swift_bridgeObjectRelease();
}

unint64_t sub_214CB4A1C(char a1)
{
  unint64_t result = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000018;
    }
    else {
      return 0xD000000000000017;
    }
  }
  return result;
}

uint64_t sub_214CB4A7C(void *a1)
{
  return sub_214CB4AB8(a1, &qword_26784F040, (void (*)(void))sub_214D045F8);
}

uint64_t sub_214CB4AB8(void *a1, uint64_t *a2, void (*a3)(void))
{
  char v27 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v9 = *v3;
  uint64_t v8 = v3[1];
  char v10 = *((unsigned char *)v3 + 16);
  uint64_t v11 = v3[3];
  uint64_t v25 = v3[4];
  uint64_t v26 = v11;
  int v33 = *((unsigned __int8 *)v3 + 40);
  uint64_t v12 = v3[6];
  uint64_t v23 = v3[7];
  uint64_t v24 = v12;
  int v22 = *((unsigned __int8 *)v3 + 64);
  uint64_t v13 = a1[3];
  char v14 = a1;
  unint64_t v15 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v14, v13);
  v27();
  sub_214D1AD88();
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  char v32 = v10;
  char v34 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v16 = v28;
  sub_214D1AB38();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v5);
  }
  uint64_t v19 = v23;
  uint64_t v18 = v24;
  uint64_t v20 = v29;
  uint64_t v30 = v26;
  uint64_t v31 = v25;
  char v32 = v33;
  char v34 = 1;
  sub_214D1AB38();
  uint64_t v30 = v18;
  uint64_t v31 = v19;
  char v32 = v22;
  char v34 = 2;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v5);
}

uint64_t sub_214CB4D20@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214CB4D5C(a1, &qword_26784F030, (void (*)(void))sub_214D045F8, a2);
}

uint64_t sub_214CB4D5C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27, v8);
  char v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_214D1AD78();
  if (!v4)
  {
    uint64_t v25 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    char v32 = 0;
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    uint64_t v11 = v27;
    sub_214D1AA68();
    uint64_t v13 = v29;
    uint64_t v24 = v28;
    int v14 = v30;
    char v32 = 1;
    sub_214D1AA68();
    int v31 = v14;
    uint64_t v23 = v28;
    uint64_t v15 = v11;
    uint64_t v16 = v29;
    int v22 = v30;
    char v32 = 2;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v15);
    uint64_t v18 = v28;
    uint64_t v17 = v29;
    unsigned __int8 v19 = v30;
    swift_bridgeObjectRelease();
    uint64_t v20 = v26;
    *uint64_t v26 = v24;
    v20[1] = v13;
    *((unsigned char *)v20 + 16) = v31;
    v20[3] = v23;
    v20[4] = v16;
    *((unsigned char *)v20 + 40) = v22;
    v20[6] = v18;
    v20[7] = v17;
    *((unsigned char *)v20 + 64) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_214CB5064()
{
  return sub_214CB4A1C(*v0);
}

uint64_t sub_214CB506C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFE0E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214CB5094(uint64_t a1)
{
  unint64_t v2 = sub_214D045F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CB50D0(uint64_t a1)
{
  unint64_t v2 = sub_214D045F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CB5114()
{
  return sub_214D1AD48();
}

uint64_t sub_214CB5188()
{
  return sub_214D1AD48();
}

unint64_t sub_214CB51F8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    __int16 v28 = *(unsigned __int8 *)(v1 + 9);
    __int16 v29 = *(unsigned __int8 *)(v1 + 8);
    uint64_t v30 = *(void *)(v1 + 16);
    uint64_t v31 = *(void *)v1;
    __int16 v25 = *(unsigned __int8 *)(v1 + 25);
    __int16 v26 = *(unsigned __int8 *)(v1 + 24);
    uint64_t v27 = *(void *)(v1 + 32);
    __int16 v22 = *(unsigned __int8 *)(v1 + 41);
    __int16 v23 = *(unsigned __int8 *)(v1 + 40);
    uint64_t v24 = *(void *)(v1 + 48);
    __int16 v19 = *(unsigned __int8 *)(v1 + 57);
    __int16 v20 = *(unsigned __int8 *)(v1 + 56);
    uint64_t v21 = *(void *)(v1 + 64);
    __int16 v16 = *(unsigned __int8 *)(v1 + 73);
    __int16 v17 = *(unsigned __int8 *)(v1 + 72);
    uint64_t v18 = *(void *)(v1 + 80);
    __int16 v2 = *(unsigned __int8 *)(v1 + 88);
    __int16 v3 = *(unsigned __int8 *)(v1 + 89);
    uint64_t v4 = *(void *)(v1 + 96);
    __int16 v5 = *(unsigned __int8 *)(v1 + 104);
    __int16 v6 = *(unsigned __int8 *)(v1 + 105);
    uint64_t v7 = *(void *)(v1 + 112);
    __int16 v8 = *(unsigned __int8 *)(v1 + 120);
    __int16 v9 = *(unsigned __int8 *)(v1 + 121);
    uint64_t v11 = *(void *)(a1 + 16);
    char v10 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    ODIGeocoderBindingsName.init(rawValue:)(v12);
    switch(v32)
    {
      case 1:
        unint64_t result = sub_214C7BD8C(v30, v26 | (unsigned __int16)(v25 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 2:
        unint64_t result = sub_214C7BD8C(v4, v5 | (unsigned __int16)(v6 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 3:
        unint64_t result = sub_214C7BD8C(v7, v8 | (unsigned __int16)(v9 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 4:
        unint64_t result = sub_214C7BD8C(v27, v23 | (unsigned __int16)(v22 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 5:
        unint64_t result = sub_214C7BD8C(v24, v20 | (unsigned __int16)(v19 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 6:
        unint64_t result = sub_214C7BD8C(v21, v17 | (unsigned __int16)(v16 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 7:
        unint64_t result = sub_214C7BD8C(v18, v2 | (unsigned __int16)(v3 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
      case 8:
        goto LABEL_4;
      default:
        unint64_t result = sub_214C7BD8C(v31, v29 | (unsigned __int16)(v28 << 8), MEMORY[0x263F8D538], MEMORY[0x263F8D558]);
        break;
    }
  }
  else
  {
LABEL_4:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v15 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v15;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return result;
}

char sub_214CB54B8@<W0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    char v16 = v2[9];
    char v4 = v2[25];
    char v5 = v2[41];
    char v6 = v2[57];
    char v7 = v2[73];
    char v8 = v2[89];
    char v9 = v2[105];
    char v10 = v2[121];
    uint64_t v12 = *(void *)a1;
    uint64_t v11 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v12;
    v13._object = v11;
    LOBYTE(a1) = ODIGeocoderBindingsName.init(rawValue:)(v13);
    switch(v17)
    {
      case 1:
        *a2 = v4;
        break;
      case 2:
        *a2 = v9;
        break;
      case 3:
        *a2 = v10;
        break;
      case 4:
        *a2 = v5;
        break;
      case 5:
        *a2 = v6;
        break;
      case 6:
        *a2 = v7;
        break;
      case 7:
        *a2 = v8;
        break;
      case 8:
        goto LABEL_4;
      default:
        char v14 = v16;
        goto LABEL_5;
    }
  }
  else
  {
LABEL_4:
    char v14 = -42;
LABEL_5:
    *a2 = v14;
  }
  return a1;
}

unint64_t sub_214CB55DC(char a1)
{
  unint64_t result = 0x6974614C656D6F68;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E6F4C656D6F68;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x4C676E696C6C6962;
      break;
    case 6:
      unint64_t result = 0x746974614C636F64;
      break;
    case 7:
      unint64_t result = 0x69676E6F4C636F64;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214CB5704(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F028);
  uint64_t v38 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  char v8 = *((unsigned char *)v1 + 8);
  char v9 = *((unsigned char *)v1 + 9);
  uint64_t v37 = v1[2];
  int v43 = *((unsigned __int8 *)v1 + 24);
  int v36 = *((unsigned __int8 *)v1 + 25);
  uint64_t v35 = v1[4];
  int v10 = *((unsigned __int8 *)v1 + 40);
  int v33 = *((unsigned __int8 *)v1 + 41);
  int v34 = v10;
  uint64_t v30 = v1[6];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 57);
  int v31 = *((unsigned __int8 *)v1 + 56);
  int v32 = v5;
  uint64_t v27 = v1[8];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 73);
  int v28 = *((unsigned __int8 *)v1 + 72);
  int v29 = v5;
  uint64_t v24 = v1[10];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 89);
  int v25 = *((unsigned __int8 *)v1 + 88);
  int v26 = v5;
  uint64_t v21 = v1[12];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 105);
  int v22 = *((unsigned __int8 *)v1 + 104);
  int v23 = v5;
  uint64_t v18 = v1[14];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 121);
  int v19 = *((unsigned __int8 *)v1 + 120);
  int v20 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D045A4();
  sub_214D1AD88();
  uint64_t v40 = v7;
  uint64_t v11 = v6;
  char v41 = v8;
  char v42 = v9;
  char v44 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF50);
  sub_214B5A118(&qword_26784EF68, &qword_26784EF50);
  uint64_t v12 = v39;
  sub_214D1AB38();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v6, v3);
  }
  char v14 = v33;
  char v15 = v34;
  uint64_t v16 = v35;
  uint64_t v17 = v38;
  uint64_t v40 = v37;
  char v41 = v43;
  char v42 = v36;
  char v44 = 1;
  sub_214D1AB38();
  uint64_t v40 = v16;
  char v41 = v15;
  char v42 = v14;
  char v44 = 2;
  sub_214D1AB38();
  uint64_t v40 = v30;
  char v41 = v31;
  char v42 = v32;
  char v44 = 3;
  sub_214D1AB38();
  uint64_t v40 = v27;
  char v41 = v28;
  char v42 = v29;
  char v44 = 4;
  sub_214D1AB38();
  uint64_t v40 = v24;
  char v41 = v25;
  char v42 = v26;
  char v44 = 5;
  sub_214D1AB38();
  uint64_t v40 = v21;
  char v41 = v22;
  char v42 = v23;
  char v44 = 6;
  sub_214D1AB38();
  uint64_t v40 = v18;
  char v41 = v19;
  char v42 = v20;
  char v44 = 7;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v3);
}

uint64_t sub_214CB5B28()
{
  uint64_t v1 = *(void *)v0;
  __int16 v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  __int16 v4 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v13 = *(void *)(v0 + 32);
  __int16 v12 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  __int16 v15 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 64);
  __int16 v17 = *(unsigned __int8 *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 80);
  __int16 v20 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 96);
  __int16 v22 = *(unsigned __int8 *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 112);
  __int16 v24 = *(unsigned __int8 *)(v0 + 120);
  __int16 v5 = *(unsigned __int8 *)(v0 + 9);
  __int16 v6 = *(unsigned __int8 *)(v0 + 25);
  __int16 v7 = *(unsigned __int8 *)(v0 + 41);
  __int16 v8 = *(unsigned __int8 *)(v0 + 57);
  __int16 v9 = *(unsigned __int8 *)(v0 + 73);
  __int16 v14 = *(unsigned __int8 *)(v0 + 89);
  __int16 v18 = *(unsigned __int8 *)(v0 + 105);
  __int16 v10 = *(unsigned __int8 *)(v0 + 121);
  sub_214D1AD08();
  sub_214C7D5D8((uint64_t)v26, v1, v2 | (v5 << 8));
  sub_214C7D5D8((uint64_t)v26, v3, v4 | (v6 << 8));
  sub_214C7D5D8((uint64_t)v26, v13, v12 | (v7 << 8));
  sub_214C7D5D8((uint64_t)v26, v16, v15 | (v8 << 8));
  sub_214C7D5D8((uint64_t)v26, v19, v17 | (v9 << 8));
  sub_214C7D5D8((uint64_t)v26, v21, v20 | (v14 << 8));
  sub_214C7D5D8((uint64_t)v26, v23, v22 | (v18 << 8));
  sub_214C7D5D8((uint64_t)v26, v25, v24 | (v10 << 8));
  return sub_214D1AD48();
}

uint64_t sub_214CB5CB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F018);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  __int16 v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D045A4();
  sub_214D1AD78();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EF50);
    char v56 = 0;
    sub_214B5A118(&qword_26784EF58, &qword_26784EF50);
    sub_214D1AA68();
    int v43 = a2;
    uint64_t v44 = v52;
    int v42 = v53;
    int v10 = v54;
    char v56 = 1;
    sub_214D1AA68();
    uint64_t v39 = v52;
    int v40 = v53;
    int v41 = v10;
    int v11 = v54;
    char v56 = 2;
    sub_214D1AA68();
    uint64_t v36 = v52;
    int v37 = v53;
    int v38 = v11;
    int v12 = v54;
    char v56 = 3;
    sub_214D1AA68();
    uint64_t v33 = v52;
    int v34 = v53;
    int v35 = v12;
    int v13 = v54;
    char v56 = 4;
    sub_214D1AA68();
    int v32 = v13;
    uint64_t v31 = v52;
    int v30 = v53;
    int v14 = v54;
    char v56 = 5;
    sub_214D1AA68();
    int v29 = v14;
    uint64_t v28 = v52;
    int v27 = v53;
    int v15 = v54;
    char v56 = 6;
    sub_214D1AA68();
    int v26 = v15;
    uint64_t v25 = v52;
    HIDWORD(v24) = v53;
    LOBYTE(v15) = v54;
    char v56 = 7;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v17 = v52;
    unsigned __int8 v18 = v54;
    char v19 = v42;
    char v55 = v42;
    char v20 = v40;
    char v51 = v40;
    char v21 = v37;
    char v50 = v37;
    char v22 = v34;
    char v49 = v34;
    char v48 = v30;
    char v47 = v27;
    char v46 = BYTE4(v24);
    unsigned __int8 v45 = v53;
    uint64_t v23 = v43;
    *int v43 = v44;
    *((unsigned char *)v23 + 8) = v19;
    *((unsigned char *)v23 + 9) = v41;
    v23[2] = v39;
    *((unsigned char *)v23 + 24) = v20;
    *((unsigned char *)v23 + 25) = v38;
    v23[4] = v36;
    *((unsigned char *)v23 + 40) = v21;
    *((unsigned char *)v23 + 41) = v35;
    v23[6] = v33;
    *((unsigned char *)v23 + 56) = v22;
    *((unsigned char *)v23 + 57) = v32;
    v23[8] = v31;
    *((unsigned char *)v23 + 72) = v48;
    *((unsigned char *)v23 + 73) = v29;
    v23[10] = v28;
    *((unsigned char *)v23 + 88) = v47;
    *((unsigned char *)v23 + 89) = v26;
    v23[12] = v25;
    *((unsigned char *)v23 + 104) = v46;
    *((unsigned char *)v23 + 105) = v15;
    v23[14] = v17;
    *((unsigned char *)v23 + 120) = v45;
    *((unsigned char *)v23 + 121) = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_214CB618C()
{
  return sub_214CB55DC(*v0);
}

uint64_t sub_214CB6194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFE22C(a1, a2);
  *a3 = result;
  return result;
}

void sub_214CB61BC(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_214CB61C8(uint64_t a1)
{
  unint64_t v2 = sub_214D045A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CB6204(uint64_t a1)
{
  unint64_t v2 = sub_214D045A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CB6248@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214CB5CB8(a1, a2);
}

uint64_t sub_214CB6260(void *a1)
{
  return sub_214CB5704(a1);
}

uint64_t sub_214CB627C(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 16);
  __int16 v5 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __int16 v7 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v17 = *(void *)(v1 + 48);
  __int16 v16 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v20 = *(void *)(v1 + 64);
  __int16 v18 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 80);
  __int16 v21 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v24 = *(void *)(v1 + 96);
  __int16 v23 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 112);
  __int16 v25 = *(unsigned __int8 *)(v1 + 120);
  __int16 v8 = *(unsigned __int8 *)(v1 + 25);
  __int16 v9 = *(unsigned __int8 *)(v1 + 41);
  __int16 v10 = *(unsigned __int8 *)(v1 + 57);
  __int16 v11 = *(unsigned __int8 *)(v1 + 73);
  __int16 v15 = *(unsigned __int8 *)(v1 + 89);
  __int16 v19 = *(unsigned __int8 *)(v1 + 105);
  __int16 v12 = *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8);
  __int16 v13 = *(unsigned __int8 *)(v1 + 121);
  sub_214C7D5D8(a1, v3, v12);
  sub_214C7D5D8(a1, v4, v5 | (v8 << 8));
  sub_214C7D5D8(a1, v6, v7 | (v9 << 8));
  sub_214C7D5D8(a1, v17, v16 | (v10 << 8));
  sub_214C7D5D8(a1, v20, v18 | (v11 << 8));
  sub_214C7D5D8(a1, v22, v21 | (v15 << 8));
  sub_214C7D5D8(a1, v24, v23 | (v19 << 8));
  return sub_214C7D5D8(a1, v26, v25 | (unsigned __int16)(v13 << 8));
}

uint64_t sub_214CB63F4()
{
  uint64_t v1 = *(void *)v0;
  __int16 v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  __int16 v4 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v13 = *(void *)(v0 + 32);
  __int16 v12 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  __int16 v15 = *(unsigned __int8 *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 64);
  __int16 v17 = *(unsigned __int8 *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 80);
  __int16 v20 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 96);
  __int16 v22 = *(unsigned __int8 *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 112);
  __int16 v24 = *(unsigned __int8 *)(v0 + 120);
  __int16 v5 = *(unsigned __int8 *)(v0 + 9);
  __int16 v6 = *(unsigned __int8 *)(v0 + 25);
  __int16 v7 = *(unsigned __int8 *)(v0 + 41);
  __int16 v8 = *(unsigned __int8 *)(v0 + 57);
  __int16 v9 = *(unsigned __int8 *)(v0 + 73);
  __int16 v14 = *(unsigned __int8 *)(v0 + 89);
  __int16 v18 = *(unsigned __int8 *)(v0 + 105);
  __int16 v10 = *(unsigned __int8 *)(v0 + 121);
  sub_214D1AD08();
  sub_214C7D5D8((uint64_t)v26, v1, v2 | (v5 << 8));
  sub_214C7D5D8((uint64_t)v26, v3, v4 | (v6 << 8));
  sub_214C7D5D8((uint64_t)v26, v13, v12 | (v7 << 8));
  sub_214C7D5D8((uint64_t)v26, v16, v15 | (v8 << 8));
  sub_214C7D5D8((uint64_t)v26, v19, v17 | (v9 << 8));
  sub_214C7D5D8((uint64_t)v26, v21, v20 | (v14 << 8));
  sub_214C7D5D8((uint64_t)v26, v23, v22 | (v18 << 8));
  sub_214C7D5D8((uint64_t)v26, v25, v24 | (v10 << 8));
  return sub_214D1AD48();
}

uint64_t sub_214CB6584(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_214D19958();
  uint64_t v7 = v6;
  if (a2)
  {
    swift_bridgeObjectRelease();
    if (v7) {
      char v30 = -47;
    }
    else {
      char v30 = -45;
    }
    *(void *)(v2 + 144) = v5;
    *(void *)(v2 + 152) = v7;
    *(unsigned char *)(v2 + 160) = v30;
    uint64_t v31 = sub_214D19938();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    if (v33) {
      char v34 = -47;
    }
    else {
      char v34 = -45;
    }
    *(void *)(v2 + 168) = v31;
    *(void *)(v2 + 176) = v33;
    *(unsigned char *)(v2 + 184) = v34;
    uint64_t v35 = sub_214D19928();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if (v37) {
      char v38 = -47;
    }
    else {
      char v38 = -45;
    }
    *(void *)(v2 + 192) = v35;
    *(void *)(v2 + 200) = v37;
    *(unsigned char *)(v2 + 208) = v38;
    uint64_t v39 = sub_214D19948();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    if (v41) {
      char v42 = -47;
    }
    else {
      char v42 = -45;
    }
    *(void *)(v2 + 216) = v39;
    *(void *)(v2 + 224) = v41;
    *(unsigned char *)(v2 + 232) = v42;
    uint64_t v43 = sub_214D19968();
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    if (v45) {
      char v46 = -47;
    }
    else {
      char v46 = -45;
    }
    *(void *)(v2 + 240) = v43;
    *(void *)(v2 + 248) = v45;
    *(unsigned char *)(v2 + 256) = v46;
    uint64_t v47 = sub_214D19988();
    uint64_t v49 = v48;
    uint64_t result = swift_bridgeObjectRelease();
    if (v49) {
      char v50 = -47;
    }
    else {
      char v50 = -45;
    }
    *(void *)(v3 + 264) = v47;
    *(void *)(v3 + 272) = v49;
    *(unsigned char *)(v3 + 280) = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v7) {
      char v8 = -47;
    }
    else {
      char v8 = -45;
    }
    *(void *)uint64_t v2 = v5;
    *(void *)(v2 + 8) = v7;
    *(unsigned char *)(v2 + 16) = v8;
    uint64_t v9 = sub_214D19938();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v11) {
      char v12 = -47;
    }
    else {
      char v12 = -45;
    }
    *(void *)(v2 + 24) = v9;
    *(void *)(v2 + 32) = v11;
    *(unsigned char *)(v2 + 40) = v12;
    uint64_t v13 = sub_214D19928();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    if (v15) {
      char v16 = -47;
    }
    else {
      char v16 = -45;
    }
    *(void *)(v2 + 48) = v13;
    *(void *)(v2 + 56) = v15;
    *(unsigned char *)(v2 + 64) = v16;
    uint64_t v17 = sub_214D19948();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      char v20 = -47;
    }
    else {
      char v20 = -45;
    }
    *(void *)(v2 + 72) = v17;
    *(void *)(v2 + 80) = v19;
    *(unsigned char *)(v2 + 88) = v20;
    uint64_t v21 = sub_214D19968();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    if (v23) {
      char v24 = -47;
    }
    else {
      char v24 = -45;
    }
    *(void *)(v2 + 96) = v21;
    *(void *)(v2 + 104) = v23;
    *(unsigned char *)(v2 + 112) = v24;
    uint64_t v25 = sub_214D19988();
    uint64_t v27 = v26;
    uint64_t result = swift_bridgeObjectRelease();
    if (v27) {
      char v29 = -47;
    }
    else {
      char v29 = -45;
    }
    *(void *)(v3 + 120) = v25;
    *(void *)(v3 + 128) = v27;
    *(unsigned char *)(v3 + 136) = v29;
  }
  return result;
}

unint64_t sub_214CB6778(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    uint64_t v47 = *(void *)v1;
    uint64_t v48 = *(void *)(v1 + 8);
    char v45 = *(unsigned char *)(v1 + 16);
    uint64_t v46 = *(void *)(v1 + 32);
    char v42 = *(unsigned char *)(v1 + 40);
    uint64_t v43 = *(void *)(v1 + 56);
    uint64_t v44 = *(void *)(v1 + 24);
    char v39 = *(unsigned char *)(v1 + 64);
    uint64_t v40 = *(void *)(v1 + 80);
    uint64_t v41 = *(void *)(v1 + 48);
    char v36 = *(unsigned char *)(v1 + 88);
    uint64_t v37 = *(void *)(v1 + 104);
    uint64_t v38 = *(void *)(v1 + 72);
    char v33 = *(unsigned char *)(v1 + 112);
    uint64_t v34 = *(void *)(v1 + 128);
    uint64_t v35 = *(void *)(v1 + 96);
    char v30 = *(unsigned char *)(v1 + 136);
    uint64_t v31 = *(void *)(v1 + 152);
    uint64_t v32 = *(void *)(v1 + 120);
    char v27 = *(unsigned char *)(v1 + 160);
    uint64_t v28 = *(void *)(v1 + 176);
    uint64_t v29 = *(void *)(v1 + 144);
    char v24 = *(unsigned char *)(v1 + 184);
    uint64_t v23 = *(void *)(v1 + 192);
    uint64_t v25 = *(void *)(v1 + 200);
    uint64_t v26 = *(void *)(v1 + 168);
    char v22 = *(unsigned char *)(v1 + 208);
    uint64_t v2 = *(void *)(v1 + 224);
    uint64_t v21 = *(void *)(v1 + 216);
    char v3 = *(unsigned char *)(v1 + 232);
    uint64_t v4 = *(void *)(v1 + 240);
    uint64_t v5 = *(void *)(v1 + 248);
    char v6 = *(unsigned char *)(v1 + 256);
    uint64_t v8 = *(void *)(v1 + 264);
    uint64_t v7 = *(void *)(v1 + 272);
    char v9 = *(unsigned char *)(v1 + 280);
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v10 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    ODIComputableBindingsName.init(rawValue:)(v12);
    switch(v49)
    {
      case 1:
        swift_bridgeObjectRetain();
        uint64_t v13 = v41;
        uint64_t v14 = v43;
        char v15 = v39;
        goto LABEL_14;
      case 2:
        swift_bridgeObjectRetain();
        uint64_t v13 = v38;
        uint64_t v14 = v40;
        char v15 = v36;
        goto LABEL_14;
      case 3:
        swift_bridgeObjectRetain();
        uint64_t v13 = v47;
        uint64_t v14 = v48;
        char v15 = v45;
        goto LABEL_14;
      case 4:
        swift_bridgeObjectRetain();
        uint64_t v13 = v35;
        uint64_t v14 = v37;
        char v15 = v33;
        goto LABEL_14;
      case 5:
        swift_bridgeObjectRetain();
        uint64_t v13 = v32;
        uint64_t v14 = v34;
        char v15 = v30;
        goto LABEL_14;
      case 6:
        swift_bridgeObjectRetain();
        uint64_t v13 = v26;
        uint64_t v14 = v28;
        char v15 = v24;
        goto LABEL_14;
      case 7:
        swift_bridgeObjectRetain();
        uint64_t v13 = v23;
        uint64_t v14 = v25;
        char v15 = v22;
        goto LABEL_14;
      case 8:
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_214C79114(v21, v2, v3);
        goto LABEL_15;
      case 9:
        swift_bridgeObjectRetain();
        uint64_t v13 = v29;
        uint64_t v14 = v31;
        char v15 = v27;
        goto LABEL_14;
      case 10:
        swift_bridgeObjectRetain();
        unint64_t v19 = sub_214C79114(v4, v5, v6);
        goto LABEL_15;
      case 11:
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_214C79114(v8, v7, v9);
        swift_bridgeObjectRelease();
        return v20;
      case 12:
        goto LABEL_4;
      default:
        swift_bridgeObjectRetain();
        uint64_t v13 = v44;
        uint64_t v14 = v46;
        char v15 = v42;
LABEL_14:
        unint64_t v19 = sub_214C79114(v13, v14, v15);
LABEL_15:
        swift_bridgeObjectRelease();
        unint64_t result = v19;
        break;
    }
  }
  else
  {
LABEL_4:
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v17 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v17;
    *(void *)(inited + 48) = -5;
    return sub_214B7E450(inited);
  }
  return result;
}

char sub_214CB6B04@<W0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    char v18 = v2[16];
    char v19 = v2[40];
    char v16 = v2[88];
    char v17 = v2[64];
    char v4 = v2[112];
    char v5 = v2[136];
    char v6 = v2[160];
    char v7 = v2[208];
    char v8 = v2[232];
    char v9 = v2[256];
    char v10 = v2[280];
    uint64_t v12 = *(void *)a1;
    uint64_t v11 = *(void **)(a1 + 8);
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v12;
    v13._object = v11;
    LOBYTE(a1) = ODIComputableBindingsName.init(rawValue:)(v13);
    switch(v20)
    {
      case 1:
        char v14 = v17;
        goto LABEL_5;
      case 2:
        char v14 = v16;
        goto LABEL_5;
      case 3:
        char v14 = v18;
        goto LABEL_5;
      case 4:
        *a2 = v4;
        break;
      case 5:
        *a2 = v5;
        break;
      case 7:
        *a2 = v7;
        break;
      case 8:
        *a2 = v8;
        break;
      case 9:
        *a2 = v6;
        break;
      case 10:
        *a2 = v9;
        break;
      case 11:
        *a2 = v10;
        break;
      case 12:
        goto LABEL_4;
      default:
        char v14 = v19;
        goto LABEL_5;
    }
  }
  else
  {
LABEL_4:
    char v14 = -42;
LABEL_5:
    *a2 = v14;
  }
  return a1;
}

uint64_t sub_214CB6C60()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v24 = *(void *)(v0 + 56);
  char v20 = *(unsigned char *)(v0 + 64);
  uint64_t v27 = *(void *)(v0 + 80);
  char v21 = *(unsigned char *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 104);
  char v4 = *(unsigned char *)(v0 + 112);
  uint64_t v25 = *(void *)(v0 + 128);
  char v11 = *(unsigned char *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 152);
  char v22 = *(unsigned char *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 176);
  char v23 = *(unsigned char *)(v0 + 184);
  char v5 = *(unsigned char *)(v0 + 208);
  uint64_t v16 = *(void *)(v0 + 200);
  uint64_t v17 = *(void *)(v0 + 224);
  char v13 = *(unsigned char *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 248);
  char v18 = *(unsigned char *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 272);
  char v19 = *(unsigned char *)(v0 + 280);
  if (*(void *)(v0 + 8))
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD28();
  }
  uint64_t v15 = v7;
  if ((v1 + 47) >= 9u)
  {
    sub_214D1AD18();
    char v9 = v4;
    char v8 = v5;
  }
  else
  {
    char v8 = v5;
    char v9 = v4;
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v3 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v20 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v27)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v21 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v9 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v25)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v11 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v26)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v22 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v23 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v16)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v8 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v13 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v18 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214D1AD28();
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v19 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214CBEFDC(char a1)
{
  uint64_t result = 0x66657250656D616ELL;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x796C696D6166;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x6D614E6E65766967;
      break;
    case 3:
      uint64_t v3 = 0x656C6464696DLL;
LABEL_5:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x614E000000000000;
      break;
    case 4:
      uint64_t result = 0x66667553656D616ELL;
      break;
    case 5:
      uint64_t result = 0x656D616E6B63696ELL;
      break;
    case 6:
    case 10:
      uint64_t result = 0x656D614E72656570;
      break;
    case 7:
      uint64_t result = 0x696D614672656570;
      break;
    case 8:
      uint64_t result = 0x6576694772656570;
      break;
    case 9:
      uint64_t result = 0x6464694D72656570;
      break;
    case 11:
      uint64_t result = 0x6B63694E72656570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214CBF17C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFF8);
  uint64_t v55 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  char v9 = *((unsigned char *)v1 + 16);
  uint64_t v10 = v1[3];
  uint64_t v52 = v1[4];
  uint64_t v53 = v10;
  int v59 = *((unsigned __int8 *)v1 + 40);
  uint64_t v11 = v1[6];
  uint64_t v50 = v1[7];
  uint64_t v51 = v11;
  int v49 = *((unsigned __int8 *)v1 + 64);
  uint64_t v48 = v1[9];
  uint64_t v46 = v1[10];
  int v47 = *((unsigned __int8 *)v1 + 88);
  uint64_t v12 = v1[13];
  uint64_t v43 = v1[12];
  uint64_t v44 = v12;
  int v45 = *((unsigned __int8 *)v1 + 112);
  uint64_t v13 = v1[16];
  uint64_t v40 = v1[15];
  uint64_t v41 = v13;
  int v42 = *((unsigned __int8 *)v1 + 136);
  uint64_t v37 = v1[18];
  uint64_t v38 = v1[19];
  int v39 = *((unsigned __int8 *)v1 + 160);
  uint64_t v34 = v1[21];
  uint64_t v35 = v1[22];
  int v36 = *((unsigned __int8 *)v1 + 184);
  uint64_t v31 = v1[24];
  uint64_t v32 = v1[25];
  int v33 = *((unsigned __int8 *)v1 + 208);
  uint64_t v28 = v1[27];
  uint64_t v29 = v1[28];
  int v30 = *((unsigned __int8 *)v1 + 232);
  uint64_t v25 = v1[30];
  uint64_t v26 = v1[31];
  int v27 = *((unsigned __int8 *)v1 + 256);
  uint64_t v22 = v1[33];
  uint64_t v23 = v1[34];
  int v24 = *((unsigned __int8 *)v1 + 280);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04420();
  sub_214D1AD88();
  uint64_t v56 = v7;
  uint64_t v57 = v8;
  char v58 = v9;
  uint64_t v14 = v6;
  char v60 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
  sub_214B5A118(&qword_26784EE78, &qword_26784EE60);
  uint64_t v15 = v54;
  sub_214D1AB38();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v6, v3);
  }
  char v17 = v49;
  uint64_t v19 = v50;
  uint64_t v18 = v51;
  uint64_t v20 = v48;
  uint64_t v56 = v53;
  uint64_t v57 = v52;
  char v58 = v59;
  char v60 = 1;
  sub_214D1AB38();
  uint64_t v56 = v18;
  uint64_t v57 = v19;
  char v58 = v17;
  char v60 = 2;
  sub_214D1AB38();
  uint64_t v56 = v20;
  uint64_t v57 = v46;
  char v58 = v47;
  char v60 = 3;
  sub_214D1AB38();
  uint64_t v56 = v43;
  uint64_t v57 = v44;
  char v58 = v45;
  char v60 = 4;
  sub_214D1AB38();
  uint64_t v56 = v40;
  uint64_t v57 = v41;
  char v58 = v42;
  char v60 = 5;
  sub_214D1AB38();
  uint64_t v56 = v37;
  uint64_t v57 = v38;
  char v58 = v39;
  char v60 = 6;
  sub_214D1AB38();
  uint64_t v56 = v34;
  uint64_t v57 = v35;
  char v58 = v36;
  char v60 = 7;
  sub_214D1AB38();
  uint64_t v56 = v31;
  uint64_t v57 = v32;
  char v58 = v33;
  char v60 = 8;
  sub_214D1AB38();
  uint64_t v56 = v28;
  uint64_t v57 = v29;
  char v58 = v30;
  char v60 = 9;
  sub_214D1AB38();
  uint64_t v56 = v25;
  uint64_t v57 = v26;
  char v58 = v27;
  char v60 = 10;
  uint64_t v54 = v3;
  sub_214D1AB38();
  uint64_t v56 = v22;
  uint64_t v57 = v23;
  char v58 = v24;
  char v60 = 11;
  uint64_t v21 = v54;
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v14, v21);
}

uint64_t sub_214CBF79C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFE8);
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D04420();
  sub_214D1AD78();
  uint64_t v34 = a1;
  if (v2)
  {
    uint64_t v122 = v2;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    int v36 = 210;
    int v37 = 210;
    int v42 = 210;
    int v45 = 210;
    int v46 = 210;
    int v51 = 210;
    int v54 = 210;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    unsigned __int8 v66 = -46;
    uint64_t v68 = v35;
    uint64_t v69 = 0;
    *(_DWORD *)char v67 = v121[0];
    *(_DWORD *)&v67[3] = *(_DWORD *)((char *)v121 + 3);
    char v70 = -46;
    *(_DWORD *)int v71 = *(_DWORD *)v120;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v120[3];
    uint64_t v72 = v32;
    uint64_t v73 = v33;
    char v74 = -46;
    *(_DWORD *)&v75[3] = *(_DWORD *)&v119[3];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v119;
    uint64_t v76 = v57;
    uint64_t v77 = v58;
    char v78 = -46;
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v118;
    *(_DWORD *)&v79[3] = *(_DWORD *)&v118[3];
    uint64_t v80 = v55;
    uint64_t v81 = v56;
    char v82 = v54;
    *(_DWORD *)char v83 = *(_DWORD *)v117;
    *(_DWORD *)&v83[3] = *(_DWORD *)&v117[3];
    uint64_t v84 = v52;
    uint64_t v85 = v53;
    char v86 = v51;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v116[3];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v116;
    uint64_t v88 = v49;
    uint64_t v89 = v50;
    char v90 = v46;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)char v91 = *(_DWORD *)v115;
    uint64_t v92 = v47;
    uint64_t v93 = v48;
    char v94 = v45;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)char v95 = *(_DWORD *)v114;
    uint64_t v96 = v43;
    uint64_t v97 = v44;
    char v98 = v42;
    *(_DWORD *)&v99[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)uint64_t v99 = *(_DWORD *)v113;
    uint64_t v100 = v40;
    uint64_t v101 = v41;
    char v102 = v36;
    *(_DWORD *)&v103[3] = *(_DWORD *)&v112[3];
    *(_DWORD *)uint64_t v103 = *(_DWORD *)v112;
    uint64_t v104 = v38;
    uint64_t v105 = v39;
    char v106 = v37;
    *(_DWORD *)uint64_t v107 = *(_DWORD *)v111;
    *(_DWORD *)&v107[3] = *(_DWORD *)&v111[3];
    uint64_t v109 = 0;
    uint64_t v108 = 0;
    char v110 = -46;
  }
  else
  {
    int v30 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784EE60);
    v59[0] = 0;
    sub_214B5A118(&qword_26784EE68, &qword_26784EE60);
    sub_214D1AA68();
    uint64_t v27 = v64;
    uint64_t v29 = v65;
    int v28 = v66;
    v59[0] = 1;
    sub_214D1AA68();
    uint64_t v35 = v64;
    uint64_t v26 = v65;
    int v10 = v66;
    v59[0] = 2;
    sub_214D1AA68();
    int v24 = v10;
    uint64_t v32 = v64;
    uint64_t v11 = v65;
    int v25 = v66;
    v59[0] = 3;
    sub_214D1AA68();
    uint64_t v33 = v11;
    uint64_t v57 = v64;
    uint64_t v58 = v65;
    int v23 = v66;
    v59[0] = 4;
    sub_214D1AA68();
    uint64_t v55 = v64;
    uint64_t v56 = v65;
    int v54 = v66;
    v59[0] = 5;
    sub_214D1AA68();
    uint64_t v52 = v64;
    uint64_t v53 = v65;
    int v51 = v66;
    v59[0] = 6;
    sub_214D1AA68();
    uint64_t v49 = v64;
    uint64_t v50 = v65;
    int v46 = v66;
    v59[0] = 7;
    sub_214D1AA68();
    uint64_t v47 = v64;
    uint64_t v48 = v65;
    int v45 = v66;
    v59[0] = 8;
    sub_214D1AA68();
    uint64_t v122 = 0;
    uint64_t v43 = v64;
    uint64_t v44 = v65;
    int v42 = v66;
    v59[0] = 9;
    sub_214D1AA68();
    uint64_t v122 = 0;
    uint64_t v40 = v64;
    uint64_t v41 = v65;
    int v36 = v66;
    v59[0] = 10;
    sub_214D1AA68();
    uint64_t v122 = 0;
    uint64_t v38 = v64;
    uint64_t v39 = v65;
    int v37 = v66;
    char v60 = 11;
    sub_214D1AA68();
    uint64_t v122 = 0;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v31);
    uint64_t v12 = v61;
    uint64_t v31 = v61;
    uint64_t v22 = v62;
    char v13 = v63;
    swift_bridgeObjectRelease();
    uint64_t v14 = v26;
    uint64_t v15 = v27;
    *(void *)int v59 = v27;
    *(void *)&v59[8] = v29;
    v59[16] = v28;
    uint64_t v16 = v35;
    *(void *)&v59[24] = v35;
    *(void *)&v59[32] = v26;
    char v17 = v24;
    v59[40] = v24;
    uint64_t v19 = v32;
    uint64_t v18 = v33;
    *(void *)&v59[48] = v32;
    *(void *)&v59[56] = v33;
    v59[64] = v25;
    *(void *)&v59[72] = v57;
    *(void *)&v59[80] = v58;
    v59[88] = v23;
    *(void *)&v59[96] = v55;
    *(void *)&v59[104] = v56;
    v59[112] = v54;
    *(void *)&v59[120] = v52;
    *(void *)&v59[128] = v53;
    v59[136] = v51;
    *(void *)&v59[144] = v49;
    *(void *)&v59[152] = v50;
    v59[160] = v46;
    *(void *)&v59[168] = v47;
    *(void *)&v59[176] = v48;
    v59[184] = v45;
    *(void *)&v59[192] = v43;
    *(void *)&v59[200] = v44;
    v59[208] = v42;
    *(void *)&v59[216] = v40;
    *(void *)&v59[224] = v41;
    v59[232] = v36;
    *(void *)&v59[240] = v38;
    *(void *)&v59[248] = v39;
    v59[256] = v37;
    *(void *)&v59[264] = v12;
    uint64_t v20 = v22;
    *(void *)&v59[272] = v22;
    v59[280] = v13;
    memcpy(v30, v59, 0x119uLL);
    sub_214BB7724((uint64_t)v59);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v64 = v15;
    uint64_t v65 = v29;
    unsigned __int8 v66 = v28;
    uint64_t v68 = v16;
    uint64_t v69 = v14;
    char v70 = v17;
    uint64_t v72 = v19;
    uint64_t v73 = v18;
    *(_DWORD *)char v67 = v121[0];
    *(_DWORD *)&v67[3] = *(_DWORD *)((char *)v121 + 3);
    *(_DWORD *)int v71 = *(_DWORD *)v120;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v120[3];
    char v74 = v25;
    *(_DWORD *)&v75[3] = *(_DWORD *)&v119[3];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v119;
    uint64_t v76 = v57;
    uint64_t v77 = v58;
    char v78 = v23;
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v118;
    *(_DWORD *)&v79[3] = *(_DWORD *)&v118[3];
    uint64_t v80 = v55;
    uint64_t v81 = v56;
    char v82 = v54;
    *(_DWORD *)char v83 = *(_DWORD *)v117;
    *(_DWORD *)&v83[3] = *(_DWORD *)&v117[3];
    uint64_t v84 = v52;
    uint64_t v85 = v53;
    char v86 = v51;
    *(_DWORD *)&v87[3] = *(_DWORD *)&v116[3];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v116;
    uint64_t v88 = v49;
    uint64_t v89 = v50;
    char v90 = v46;
    *(_DWORD *)&v91[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)char v91 = *(_DWORD *)v115;
    uint64_t v92 = v47;
    uint64_t v93 = v48;
    char v94 = v45;
    *(_DWORD *)&v95[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)char v95 = *(_DWORD *)v114;
    uint64_t v96 = v43;
    uint64_t v97 = v44;
    char v98 = v42;
    *(_DWORD *)&v99[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)uint64_t v99 = *(_DWORD *)v113;
    uint64_t v100 = v40;
    uint64_t v101 = v41;
    char v102 = v36;
    *(_DWORD *)&v103[3] = *(_DWORD *)&v112[3];
    *(_DWORD *)uint64_t v103 = *(_DWORD *)v112;
    uint64_t v104 = v38;
    uint64_t v105 = v39;
    char v106 = v37;
    *(_DWORD *)uint64_t v107 = *(_DWORD *)v111;
    *(_DWORD *)&v107[3] = *(_DWORD *)&v111[3];
    uint64_t v108 = v31;
    uint64_t v109 = v20;
    char v110 = v13;
  }
  return sub_214D04474((uint64_t)&v64);
}

uint64_t sub_214CC04A0()
{
  return sub_214CBEFDC(*v0);
}

uint64_t sub_214CC04A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214CFE5E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214CC04D0(uint64_t a1)
{
  unint64_t v2 = sub_214D04420();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214CC050C(uint64_t a1)
{
  unint64_t v2 = sub_214D04420();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214CC0550@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_214CBF79C(a1, a2);
}

uint64_t sub_214CC0568(void *a1)
{
  return sub_214CBF17C(a1);
}

uint64_t sub_214CC0580()
{
  return sub_214D1AD48();
}

uint64_t sub_214CC05C4()
{
  return sub_214D1AD48();
}

uint64_t ArmandDeviceData.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArmandDeviceData.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v1 = a1;
  return result;
}

uint64_t (*ArmandDeviceData.fields.modify())()
{
  return nullsub_1;
}

uint64_t sub_214CC0658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v107 = *(void *)(v2 + 16);
  char v104 = *(unsigned char *)(v2 + 24);
  uint64_t v105 = *(void *)(v2 + 8);
  uint64_t v106 = *(void *)(v2 + 40);
  char v100 = *(unsigned char *)(v2 + 48);
  uint64_t v101 = *(void *)(v2 + 64);
  char v97 = *(unsigned char *)(v2 + 72);
  uint64_t v102 = *(void *)(v2 + 88);
  uint64_t v103 = *(void *)(v2 + 32);
  char v94 = *(unsigned char *)(v2 + 96);
  uint64_t v93 = *(void *)(v2 + 104);
  uint64_t v98 = *(void *)(v2 + 112);
  uint64_t v99 = *(void *)(v2 + 56);
  char v92 = *(unsigned char *)(v2 + 120);
  uint64_t v91 = *(void *)(v2 + 128);
  uint64_t v95 = *(void *)(v2 + 136);
  uint64_t v96 = *(void *)(v2 + 80);
  char v90 = *(unsigned char *)(v2 + 144);
  uint64_t v89 = *(void *)(v2 + 152);
  char v88 = *(unsigned char *)(v2 + 160);
  char v87 = *(unsigned char *)(v2 + 161);
  uint64_t v78 = *(void *)(v2 + 176);
  char v84 = *(unsigned char *)(v2 + 200);
  char v83 = *(unsigned char *)(v2 + 201);
  uint64_t v82 = *(void *)(v2 + 208);
  uint64_t v85 = *(void *)(v2 + 192);
  uint64_t v86 = *(void *)(v2 + 216);
  char v79 = *(unsigned char *)(v2 + 224);
  uint64_t v76 = *(void *)(v2 + 168);
  uint64_t v77 = *(void *)(v2 + 232);
  char v73 = *(unsigned char *)(v2 + 184);
  char v74 = *(unsigned char *)(v2 + 248);
  uint64_t v72 = *(void *)(v2 + 256);
  uint64_t v80 = *(void *)(v2 + 264);
  uint64_t v81 = *(void *)(v2 + 240);
  char v71 = *(unsigned char *)(v2 + 272);
  uint64_t v75 = *(void *)(v2 + 288);
  char v68 = *(unsigned char *)(v2 + 296);
  uint64_t v67 = *(void *)(v2 + 304);
  uint64_t v69 = *(void *)(v2 + 280);
  uint64_t v70 = *(void *)(v2 + 312);
  char v65 = *(unsigned char *)(v2 + 321);
  char v66 = *(unsigned char *)(v2 + 320);
  char v64 = *(unsigned char *)(v2 + 322);
  uint64_t v61 = *(void *)(v2 + 328);
  uint64_t v62 = *(void *)(v2 + 336);
  char v60 = *(unsigned char *)(v2 + 344);
  uint64_t v50 = *(void *)(v2 + 352);
  char v47 = *(unsigned char *)(v2 + 368);
  uint64_t v59 = *(void *)(v2 + 376);
  uint64_t v63 = *(void *)(v2 + 384);
  char v57 = *(unsigned char *)(v2 + 345);
  char v58 = *(unsigned char *)(v2 + 392);
  char v55 = *(unsigned char *)(v2 + 346);
  char v56 = *(unsigned char *)(v2 + 393);
  char v54 = *(unsigned char *)(v2 + 394);
  uint64_t v52 = *(void *)(v2 + 360);
  uint64_t v53 = *(void *)(v2 + 400);
  char v51 = *(unsigned char *)(v2 + 408);
  char v49 = *(unsigned char *)(v2 + 409);
  uint64_t v48 = *(void *)(v2 + 416);
  char v45 = *(unsigned char *)(v2 + 425);
  char v46 = *(unsigned char *)(v2 + 424);
  uint64_t v44 = *(void *)(v2 + 432);
  char v42 = *(unsigned char *)(v2 + 441);
  char v43 = *(unsigned char *)(v2 + 440);
  uint64_t v41 = *(void *)(v2 + 448);
  char v3 = *(unsigned char *)(v2 + 456);
  char v4 = *(unsigned char *)(v2 + 457);
  uint64_t v5 = *(void *)(v2 + 464);
  char v6 = *(unsigned char *)(v2 + 472);
  char v7 = *(unsigned char *)(v2 + 473);
  uint64_t v8 = *(void *)(v2 + 480);
  char v9 = *(unsigned char *)(v2 + 488);
  uint64_t result = (uint64_t)memcpy(__dst, (const void *)(v2 + 496), 0x119uLL);
  switch(v108)
  {
    case 1:
      *(void *)(a2 + 24) = &type metadata for MobileGestaltSource;
      *(void *)(a2 + 32) = &off_26C5AC070;
      uint64_t v12 = swift_allocObject();
      *(void *)a2 = v12;
      *(void *)(v12 + 16) = v96;
      *(void *)(v12 + 24) = v102;
      *(unsigned char *)(v12 + 32) = v94;
      *(void *)(v12 + 40) = v93;
      *(void *)(v12 + 48) = v98;
      *(unsigned char *)(v12 + 56) = v92;
      *(void *)(v12 + 64) = v91;
      *(void *)(v12 + 72) = v95;
      *(unsigned char *)(v12 + 80) = v90;
      *(void *)(v12 + 88) = v89;
      *(unsigned char *)(v12 + 96) = v88;
      *(unsigned char *)(v12 + 97) = v87;
      goto LABEL_8;
    case 2:
      *(void *)(a2 + 24) = &type metadata for BaaSource;
      *(void *)(a2 + 32) = &off_26C5AD810;
      uint64_t v13 = swift_allocObject();
      *(void *)a2 = v13;
      *(void *)(v13 + 16) = v85;
      *(unsigned char *)(v13 + 24) = v84;
      *(unsigned char *)(v13 + 25) = v83;
      *(void *)(v13 + 32) = v82;
      *(void *)(v13 + 40) = v86;
      *(unsigned char *)(v13 + 48) = v79;
      *(void *)(v13 + 56) = v77;
      *(void *)(v13 + 64) = v81;
      *(unsigned char *)(v13 + 72) = v74;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 3:
      uint64_t v14 = a2;
      *(void *)(a2 + 24) = &type metadata for NearFieldSource;
      *(void *)(a2 + 32) = &off_26C5AADF8;
      *(void *)a2 = v76;
      *(void *)(a2 + 8) = v78;
      char v15 = v73;
      goto LABEL_12;
    case 4:
      uint64_t v14 = a2;
      *(void *)(a2 + 24) = &type metadata for IDSSource;
      *(void *)(a2 + 32) = &off_26C5AD948;
      *(void *)a2 = v61;
      *(void *)(a2 + 8) = v62;
      char v15 = v60;
      goto LABEL_12;
    case 5:
      *(void *)(a2 + 24) = &type metadata for CoreTelephonySource;
      *(void *)(a2 + 32) = &off_26C5A87A8;
      uint64_t v16 = swift_allocObject();
      *(void *)a2 = v16;
      *(void *)(v16 + 16) = v72;
      *(void *)(v16 + 24) = v80;
      *(unsigned char *)(v16 + 32) = v71;
      *(void *)(v16 + 40) = v69;
      *(void *)(v16 + 48) = v75;
      *(unsigned char *)(v16 + 56) = v68;
      *(void *)(v16 + 64) = v67;
      *(void *)(v16 + 72) = v70;
      *(unsigned char *)(v16 + 80) = v66;
      *(unsigned char *)(v16 + 81) = v65;
      *(unsigned char *)(v16 + 82) = v64;
      goto LABEL_8;
    case 6:
      *(void *)(a2 + 24) = &type metadata for LocationSource;
      *(void *)(a2 + 32) = &off_26C5AA768;
      uint64_t v17 = swift_allocObject();
      *(void *)a2 = v17;
      *(void *)(v17 + 16) = v59;
      *(void *)(v17 + 24) = v63;
      *(unsigned char *)(v17 + 32) = v58;
      *(unsigned char *)(v17 + 33) = v56;
      *(unsigned char *)(v17 + 34) = v54;
      *(void *)(v17 + 40) = v53;
      *(unsigned char *)(v17 + 48) = v51;
      *(unsigned char *)(v17 + 49) = v49;
      *(void *)(v17 + 56) = v48;
      *(unsigned char *)(v17 + 64) = v46;
      *(unsigned char *)(v17 + 65) = v45;
      *(void *)(v17 + 72) = v44;
      *(unsigned char *)(v17 + 80) = v43;
      *(unsigned char *)(v17 + 81) = v42;
      *(void *)(v17 + 88) = v41;
      *(unsigned char *)(v17 + 96) = v3;
      *(unsigned char *)(v17 + 97) = v4;
      *(void *)(v17 + 104) = v5;
      *(unsigned char *)(v17 + 112) = v6;
      *(unsigned char *)(v17 + 113) = v7;
      goto LABEL_17;
    case 7:
      *(void *)(a2 + 24) = &type metadata for TelephonyUtilitiesSource;
      *(void *)(a2 + 32) = &off_26C5ACFA8;
      *(unsigned char *)a2 = v57;
      *(unsigned char *)(a2 + 1) = v55;
      return result;
    case 8:
      uint64_t v14 = a2;
      *(void *)(a2 + 24) = &type metadata for TimeZoneSource;
      *(void *)(a2 + 32) = &off_26C5AAA18;
      *(void *)a2 = v50;
      *(void *)(a2 + 8) = v52;
      char v15 = v47;
LABEL_12:
      *(unsigned char *)(v14 + 16) = v15;
      goto LABEL_17;
    case 9:
      *(void *)(a2 + 24) = &type metadata for CallerClientSource;
      *(void *)(a2 + 32) = &off_26C5A5A98;
      *(void *)a2 = v8;
      *(unsigned char *)(a2 + 8) = v9;
      goto LABEL_17;
    case 10:
      *(void *)(a2 + 24) = &type metadata for NameParserSource;
      *(void *)(a2 + 32) = &off_26C5A5770;
      uint64_t v18 = swift_allocObject();
      *(void *)a2 = v18;
      memcpy((void *)(v18 + 16), (const void *)(v2 + 496), 0x119uLL);
      return sub_214BB7724((uint64_t)__dst);
    case 11:
      *(void *)(a2 + 24) = &type metadata for GeocoderSource;
      *(void *)(a2 + 32) = &off_26C5A4AE8;
      uint64_t result = swift_allocObject();
      *(void *)a2 = result;
      long long v19 = *(_OWORD *)(v2 + 904);
      *(_OWORD *)(result + 80) = *(_OWORD *)(v2 + 888);
      *(_OWORD *)(result + 96) = v19;
      *(_OWORD *)(result + 112) = *(_OWORD *)(v2 + 920);
      *(_OWORD *)(result + 122) = *(_OWORD *)(v2 + 930);
      long long v20 = *(_OWORD *)(v2 + 840);
      *(_OWORD *)(result + 16) = *(_OWORD *)(v2 + 824);
      *(_OWORD *)(result + 32) = v20;
      long long v21 = *(_OWORD *)(v2 + 872);
      *(_OWORD *)(result + 48) = *(_OWORD *)(v2 + 856);
      *(_OWORD *)(result + 64) = v21;
      return result;
    case 12:
      char v22 = *(unsigned char *)(v2 + 1016);
      uint64_t v23 = *(void *)(v2 + 1008);
      uint64_t v24 = *(void *)(v2 + 1000);
      char v25 = *(unsigned char *)(v2 + 992);
      uint64_t v26 = *(void *)(v2 + 984);
      uint64_t v27 = *(void *)(v2 + 976);
      char v28 = *(unsigned char *)(v2 + 968);
      uint64_t v29 = *(void *)(v2 + 960);
      uint64_t v30 = *(void *)(v2 + 952);
      *(void *)(a2 + 24) = &type metadata for PhoneFormatterSource;
      *(void *)(a2 + 32) = &off_26C5A6290;
      uint64_t v31 = swift_allocObject();
      *(void *)a2 = v31;
      *(void *)(v31 + 16) = v30;
      *(void *)(v31 + 24) = v29;
      *(unsigned char *)(v31 + 32) = v28;
      *(void *)(v31 + 40) = v27;
      *(void *)(v31 + 48) = v26;
      *(unsigned char *)(v31 + 56) = v25;
      *(void *)(v31 + 64) = v24;
      *(void *)(v31 + 72) = v23;
      *(unsigned char *)(v31 + 80) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 13:
      char v32 = *(unsigned char *)(v2 + 817);
      char v33 = *(unsigned char *)(v2 + 816);
      uint64_t v34 = *(void *)(v2 + 808);
      char v35 = *(unsigned char *)(v2 + 801);
      char v36 = *(unsigned char *)(v2 + 800);
      uint64_t v37 = *(void *)(v2 + 792);
      *(void *)(a2 + 24) = &type metadata for DeviceSettingsSource;
      *(void *)(a2 + 32) = &off_26C5A6048;
      uint64_t result = swift_allocObject();
      *(void *)a2 = result;
      *(_DWORD *)(result + 16) = *(_DWORD *)(v2 + 784);
      *(void *)(result + 24) = v37;
      *(unsigned char *)(result + 32) = v36;
      *(unsigned char *)(result + 33) = v35;
      *(void *)(result + 40) = v34;
      *(unsigned char *)(result + 48) = v33;
      *(unsigned char *)(result + 49) = v32;
      return result;
    case 14:
      char v38 = *(unsigned char *)(v2 + 1033);
      char v39 = *(unsigned char *)(v2 + 1032);
      uint64_t v40 = *(void *)(v2 + 1024);
      *(void *)(a2 + 24) = &type metadata for ConfigurationSource;
      *(void *)(a2 + 32) = &off_26C5AF978;
      *(void *)a2 = v40;
      *(unsigned char *)(a2 + 8) = v39;
      *(unsigned char *)(a2 + 9) = v38;
      return result;
    default:
      *(void *)(a2 + 24) = &type metadata for AccountsSource;
      *(void *)(a2 + 32) = &off_26C5AA3F8;
      uint64_t v11 = swift_allocObject();
      *(void *)a2 = v11;
      *(void *)(v11 + 16) = v105;
      *(void *)(v11 + 24) = v107;
      *(unsigned char *)(v11 + 32) = v104;
      *(void *)(v11 + 40) = v103;
      *(void *)(v11 + 48) = v106;
      *(unsigned char *)(v11 + 56) = v100;
      *(void *)(v11 + 64) = v99;
      *(void *)(v11 + 72) = v101;
      *(unsigned char *)(v11 + 80) = v97;
LABEL_8:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_17:
      return swift_bridgeObjectRetain();
  }
}

uint64_t ArmandDeviceData.valueDict()()
{
  char v1 = v0 + 1;
  uint64_t v2 = *v0;
  memcpy(v70, v1, sizeof(v70));
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    char v39 = (char *)&v60 + 8;
    uint64_t v40 = v2;
    swift_bridgeObjectRetain();
    v38[1] = v3;
    uint64_t v5 = (unsigned __int8 *)(v3 + 89);
    uint64_t v6 = MEMORY[0x263F8EE80];
    do
    {
      uint64_t v48 = v6;
      uint64_t v41 = v5;
      uint64_t v42 = v4;
      uint64_t v17 = *(void *)(v5 - 57);
      uint64_t v18 = *(void *)(v5 - 49);
      uint64_t v19 = *(void *)(v5 - 41);
      uint64_t v20 = *(void *)(v5 - 33);
      int v21 = *(v5 - 25);
      unsigned __int8 v22 = *(v5 - 24);
      LODWORD(v49) = v22;
      uint64_t v23 = *(void *)(v5 - 17);
      uint64_t v46 = *(void *)(v5 - 9);
      uint64_t v24 = v46;
      uint64_t v47 = v23;
      int v43 = *(v5 - 1);
      int v25 = *v5;
      LODWORD(v45) = v25;
      *(void *)&long long v60 = v40;
      memcpy(v39, v70, 0x402uLL);
      *(void *)&long long v51 = v17;
      *((void *)&v51 + 1) = v18;
      uint64_t v52 = v19;
      uint64_t v53 = v20;
      char v54 = v21;
      unsigned __int8 v55 = v22;
      uint64_t v56 = v23;
      uint64_t v57 = v24;
      char v26 = v43;
      char v58 = v43;
      char v59 = v25;
      sub_214CC0658((uint64_t)&v51, (uint64_t)&v67);
      uint64_t v27 = *((void *)&v68 + 1);
      uint64_t v28 = v69;
      __swift_project_boxed_opaque_existential_1(&v67, *((uint64_t *)&v68 + 1));
      uint64_t v44 = v17;
      *(void *)&long long v60 = v17;
      *((void *)&v60 + 1) = v18;
      *(void *)&long long v61 = v19;
      *((void *)&v61 + 1) = v20;
      LOBYTE(v62) = v21;
      BYTE1(v62) = v49;
      uint64_t v63 = v47;
      uint64_t v64 = v46;
      char v65 = v26;
      char v66 = v45;
      uint64_t v29 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v28 + 24);
      uint64_t v49 = v18;
      swift_bridgeObjectRetain();
      uint64_t v47 = v19;
      uint64_t v45 = v20;
      LODWORD(v46) = v21;
      sub_214B6F6CC(v19, v20, v21);
      uint64_t v30 = v29(&v60, v27, v28);
      if (*(void *)(v30 + 16) && (uint64_t v31 = sub_214B87FEC(0x65756C6176, 0xE500000000000000), (v32 & 1) != 0))
      {
        sub_214B93DCC(*(void *)(v30 + 56) + 40 * v31, (uint64_t)&v60);
      }
      else
      {
        uint64_t v62 = 0;
        long long v60 = 0u;
        long long v61 = 0u;
      }
      uint64_t v6 = v48;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
      sub_214B95764((uint64_t)&v60, (uint64_t)&v51, &qword_26784D148);
      if (v53)
      {
        sub_214B59EC0(&v51, (uint64_t)&v67);
        uint64_t v7 = v49;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v50 = v6;
        uint64_t v9 = *((void *)&v68 + 1);
        uint64_t v10 = v69;
        uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v67, *((uint64_t *)&v68 + 1));
        MEMORY[0x270FA5388](v11, v11);
        uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v14 + 16))(v13);
        sub_214CDF74C((uint64_t)v13, v44, v7, isUniquelyReferenced_nonNull_native, &v50, v9, v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
        uint64_t v6 = v50;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_214B6F6DC(v47, v45, v46);
        uint64_t v16 = v41;
        uint64_t v15 = v42;
      }
      else
      {
        uint64_t v33 = v49;
        swift_bridgeObjectRetain();
        sub_214B59CE0((uint64_t)&v51, &qword_26784D148);
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_214B87FEC(v44, v33);
        LOBYTE(v33) = v35;
        swift_bridgeObjectRelease();
        if (v33)
        {
          char v36 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v50 = v6;
          uint64_t v16 = v41;
          uint64_t v15 = v42;
          if ((v36 & 1) == 0)
          {
            sub_214B90ABC();
            uint64_t v6 = v50;
          }
          swift_bridgeObjectRelease();
          sub_214B59EC0((long long *)(*(void *)(v6 + 56) + 40 * v34), (uint64_t)&v67);
          sub_214CDBD7C(v34, v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v69 = 0;
          long long v67 = 0u;
          long long v68 = 0u;
          uint64_t v16 = v41;
          uint64_t v15 = v42;
        }
        swift_bridgeObjectRelease();
        sub_214B59CE0((uint64_t)&v67, &qword_26784D148);
        swift_bridgeObjectRelease();
        sub_214B6F6DC(v47, v45, v46);
      }
      uint64_t v5 = v16 + 64;
      sub_214B59CE0((uint64_t)&v60, &qword_26784D148);
      uint64_t v4 = v15 - 1;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return v6;
}

void *ArmandDeviceData.missingP1ValuesList()()
{
  uint64_t v2 = *v0;
  uint64_t v140 = v0[1];
  uint64_t v139 = v0[2];
  char v138 = *((unsigned char *)v0 + 24);
  uint64_t v137 = v0[4];
  uint64_t v136 = v0[5];
  char v135 = *((unsigned char *)v0 + 48);
  uint64_t v134 = v0[7];
  uint64_t v133 = v0[8];
  char v132 = *((unsigned char *)v0 + 72);
  uint64_t v131 = v0[10];
  uint64_t v130 = v0[11];
  char v129 = *((unsigned char *)v0 + 96);
  uint64_t v128 = v0[13];
  uint64_t v127 = v0[14];
  char v126 = *((unsigned char *)v0 + 120);
  uint64_t v125 = v0[16];
  uint64_t v124 = v0[17];
  char v123 = *((unsigned char *)v0 + 144);
  uint64_t v122 = v0[19];
  char v121 = *((unsigned char *)v0 + 160);
  char v120 = *((unsigned char *)v0 + 161);
  uint64_t v118 = v0[22];
  uint64_t v119 = v0[21];
  char v117 = *((unsigned char *)v0 + 184);
  char v116 = *((unsigned char *)v0 + 424);
  char v115 = *((unsigned char *)v0 + 440);
  char v114 = *((unsigned char *)v0 + 456);
  char v113 = *((unsigned char *)v0 + 472);
  uint64_t v112 = v0[24];
  char v111 = *((unsigned char *)v0 + 200);
  char v110 = *((unsigned char *)v0 + 201);
  uint64_t v108 = v0[27];
  uint64_t v109 = v0[26];
  char v107 = *((unsigned char *)v0 + 224);
  uint64_t v105 = v0[30];
  uint64_t v106 = v0[29];
  char v104 = *((unsigned char *)v0 + 248);
  uint64_t v102 = v0[33];
  uint64_t v103 = v0[32];
  char v101 = *((unsigned char *)v0 + 272);
  uint64_t v99 = v0[36];
  uint64_t v100 = v0[35];
  char v98 = *((unsigned char *)v0 + 296);
  uint64_t v96 = v0[39];
  uint64_t v97 = v0[38];
  char v95 = *((unsigned char *)v0 + 320);
  char v94 = *((unsigned char *)v0 + 321);
  char v93 = *((unsigned char *)v0 + 322);
  uint64_t v91 = v0[42];
  uint64_t v92 = v0[41];
  char v90 = *((unsigned char *)v0 + 344);
  char v89 = *((unsigned char *)v0 + 345);
  char v88 = *((unsigned char *)v0 + 346);
  uint64_t v86 = v0[45];
  uint64_t v87 = v0[44];
  char v85 = *((unsigned char *)v0 + 368);
  uint64_t v83 = v0[48];
  uint64_t v84 = v0[47];
  char v82 = *((unsigned char *)v0 + 392);
  char v80 = *((unsigned char *)v0 + 394);
  char v81 = *((unsigned char *)v0 + 393);
  uint64_t v79 = v0[50];
  char v77 = *((unsigned char *)v0 + 409);
  char v78 = *((unsigned char *)v0 + 408);
  uint64_t v76 = v0[52];
  char v75 = *((unsigned char *)v0 + 425);
  uint64_t v74 = v0[54];
  char v73 = *((unsigned char *)v0 + 441);
  uint64_t v72 = v0[56];
  char v71 = *((unsigned char *)v0 + 457);
  uint64_t v70 = v0[58];
  char v69 = *((unsigned char *)v0 + 473);
  uint64_t v68 = v0[60];
  char v67 = *((unsigned char *)v0 + 488);
  memcpy(__dst, v0 + 62, 0x119uLL);
  v1.i32[0] = *((_DWORD *)v0 + 196);
  uint64_t v66 = v0[99];
  char v64 = *((unsigned char *)v0 + 801);
  char v65 = *((unsigned char *)v0 + 800);
  uint64_t v63 = v0[101];
  char v61 = *((unsigned char *)v0 + 817);
  char v62 = *((unsigned char *)v0 + 816);
  long long v3 = *(_OWORD *)(v0 + 113);
  long long v163 = *(_OWORD *)(v0 + 111);
  long long v164 = v3;
  v165[0] = *(_OWORD *)(v0 + 115);
  *(_OWORD *)((char *)v165 + 10) = *(_OWORD *)((char *)v0 + 930);
  long long v4 = *(_OWORD *)(v0 + 105);
  long long v159 = *(_OWORD *)(v0 + 103);
  long long v160 = v4;
  long long v5 = *(_OWORD *)(v0 + 109);
  long long v161 = *(_OWORD *)(v0 + 107);
  long long v162 = v5;
  uint64_t v59 = v0[120];
  uint64_t v60 = v0[119];
  char v58 = *((unsigned char *)v0 + 968);
  uint64_t v56 = v0[123];
  uint64_t v57 = v0[122];
  char v55 = *((unsigned char *)v0 + 992);
  uint64_t v53 = v0[126];
  uint64_t v54 = v0[125];
  char v52 = *((unsigned char *)v0 + 1016);
  uint64_t v51 = v0[128];
  char v49 = *((unsigned char *)v0 + 1033);
  char v50 = *((unsigned char *)v0 + 1032);
  if (v2 && (uint64_t v6 = *(void *)(v2 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (char *)(v2 + 89);
    uint64_t v8 = MEMORY[0x263F8EE78];
    do
    {
      if (*(void *)(v7 - 17) == 1)
      {
        uint64_t v142 = *(void *)(v7 - 57);
        uint64_t v12 = *(void *)(v7 - 49);
        uint64_t v13 = *(void *)(v7 - 41);
        uint64_t v14 = *(void *)(v7 - 33);
        char v15 = *(v7 - 25);
        char v16 = *(v7 - 24);
        uint64_t v148 = *(void *)(v7 - 9);
        char v146 = *(v7 - 1);
        char v144 = *v7;
        swift_bridgeObjectRetain();
        sub_214B6F6CC(v13, v14, v15);
        uint64_t v153 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_214B67F48(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v153;
        }
        unint64_t v10 = *(void *)(v8 + 16);
        unint64_t v9 = *(void *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_214B67F48(v9 > 1, v10 + 1, 1);
          uint64_t v8 = v153;
        }
        *(void *)(v8 + 16) = v10 + 1;
        unint64_t v11 = v8 + (v10 << 6);
        *(void *)(v11 + 32) = v142;
        *(void *)(v11 + 40) = v12;
        *(void *)(v11 + 48) = v13;
        *(void *)(v11 + 56) = v14;
        *(unsigned char *)(v11 + 64) = v15;
        *(unsigned char *)(v11 + 65) = v16;
        *(void *)(v11 + 72) = 1;
        *(void *)(v11 + 80) = v148;
        *(unsigned char *)(v11 + 88) = v146;
        *(unsigned char *)(v11 + 89) = v144;
      }
      v7 += 64;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v8 + 16);
    if (!v17) {
      goto LABEL_42;
    }
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v17 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v17)
    {
LABEL_42:
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  uint64_t v19 = (unsigned char *)(v8 + 65);
  unsigned __int32 v48 = vmovn_s16((int16x8_t)vmovl_u8(v1)).u32[0];
  while (2)
  {
    uint64_t v143 = v17;
    uint64_t v141 = *(void *)(v19 - 33);
    uint64_t v22 = *(void *)(v19 - 17);
    uint64_t v23 = *(void *)(v19 - 9);
    char v24 = *(v19 - 1);
    uint64_t v149 = *(void *)(v19 - 25);
    v147 = v18;
    switch(*v19)
    {
      case 1:
        int v25 = &type metadata for MobileGestaltSource;
        v156 = &type metadata for MobileGestaltSource;
        char v26 = &off_26C5AC070;
        v157 = &off_26C5AC070;
        uint64_t v29 = swift_allocObject();
        uint64_t v153 = v29;
        *(void *)(v29 + 16) = v131;
        *(void *)(v29 + 24) = v130;
        *(unsigned char *)(v29 + 32) = v129;
        *(void *)(v29 + 40) = v128;
        *(void *)(v29 + 48) = v127;
        *(unsigned char *)(v29 + 56) = v126;
        *(void *)(v29 + 64) = v125;
        *(void *)(v29 + 72) = v124;
        *(unsigned char *)(v29 + 80) = v123;
        *(void *)(v29 + 88) = v122;
        *(unsigned char *)(v29 + 96) = v121;
        *(unsigned char *)(v29 + 97) = v120;
        goto LABEL_31;
      case 2:
        int v25 = &type metadata for BaaSource;
        v156 = &type metadata for BaaSource;
        uint64_t v30 = &off_26C5AD810;
        v157 = &off_26C5AD810;
        uint64_t v31 = swift_allocObject();
        uint64_t v153 = v31;
        *(void *)(v31 + 16) = v112;
        *(unsigned char *)(v31 + 24) = v111;
        *(unsigned char *)(v31 + 25) = v110;
        *(void *)(v31 + 32) = v109;
        *(void *)(v31 + 40) = v108;
        *(unsigned char *)(v31 + 48) = v107;
        *(void *)(v31 + 56) = v106;
        *(void *)(v31 + 64) = v105;
        *(unsigned char *)(v31 + 72) = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 3:
        int v25 = &type metadata for NearFieldSource;
        v156 = &type metadata for NearFieldSource;
        uint64_t v30 = &off_26C5AADF8;
        v157 = &off_26C5AADF8;
        uint64_t v153 = v119;
        uint64_t v154 = v118;
        char v32 = v117;
        goto LABEL_25;
      case 4:
        int v25 = &type metadata for IDSSource;
        v156 = &type metadata for IDSSource;
        uint64_t v30 = &off_26C5AD948;
        v157 = &off_26C5AD948;
        uint64_t v153 = v92;
        uint64_t v154 = v91;
        char v32 = v90;
        goto LABEL_25;
      case 5:
        int v25 = &type metadata for CoreTelephonySource;
        v156 = &type metadata for CoreTelephonySource;
        char v26 = &off_26C5A87A8;
        v157 = &off_26C5A87A8;
        uint64_t v33 = swift_allocObject();
        uint64_t v153 = v33;
        *(void *)(v33 + 16) = v103;
        *(void *)(v33 + 24) = v102;
        *(unsigned char *)(v33 + 32) = v101;
        *(void *)(v33 + 40) = v100;
        *(void *)(v33 + 48) = v99;
        *(unsigned char *)(v33 + 56) = v98;
        *(void *)(v33 + 64) = v97;
        *(void *)(v33 + 72) = v96;
        *(unsigned char *)(v33 + 80) = v95;
        *(unsigned char *)(v33 + 81) = v94;
        *(unsigned char *)(v33 + 82) = v93;
        goto LABEL_31;
      case 6:
        int v25 = &type metadata for LocationSource;
        v156 = &type metadata for LocationSource;
        uint64_t v30 = &off_26C5AA768;
        v157 = &off_26C5AA768;
        uint64_t v34 = swift_allocObject();
        uint64_t v153 = v34;
        *(void *)(v34 + 16) = v84;
        *(void *)(v34 + 24) = v83;
        *(unsigned char *)(v34 + 32) = v82;
        *(unsigned char *)(v34 + 33) = v81;
        *(unsigned char *)(v34 + 34) = v80;
        *(void *)(v34 + 40) = v79;
        *(unsigned char *)(v34 + 48) = v78;
        *(unsigned char *)(v34 + 49) = v77;
        *(void *)(v34 + 56) = v76;
        *(unsigned char *)(v34 + 64) = v116;
        *(unsigned char *)(v34 + 65) = v75;
        *(void *)(v34 + 72) = v74;
        *(unsigned char *)(v34 + 80) = v115;
        *(unsigned char *)(v34 + 81) = v73;
        *(void *)(v34 + 88) = v72;
        *(unsigned char *)(v34 + 96) = v114;
        *(unsigned char *)(v34 + 97) = v71;
        *(void *)(v34 + 104) = v70;
        *(unsigned char *)(v34 + 112) = v113;
        *(unsigned char *)(v34 + 113) = v69;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 7:
        int v25 = &type metadata for TelephonyUtilitiesSource;
        v156 = &type metadata for TelephonyUtilitiesSource;
        uint64_t v30 = &off_26C5ACFA8;
        v157 = &off_26C5ACFA8;
        LOBYTE(v153) = v89;
        BYTE1(v153) = v88;
        goto LABEL_32;
      case 8:
        int v25 = &type metadata for TimeZoneSource;
        v156 = &type metadata for TimeZoneSource;
        uint64_t v30 = &off_26C5AAA18;
        v157 = &off_26C5AAA18;
        uint64_t v153 = v87;
        uint64_t v154 = v86;
        char v32 = v85;
LABEL_25:
        char v155 = v32;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 9:
        int v25 = &type metadata for CallerClientSource;
        v156 = &type metadata for CallerClientSource;
        uint64_t v30 = &off_26C5A5A98;
        v157 = &off_26C5A5A98;
        uint64_t v153 = v68;
        LOBYTE(v154) = v67;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 0xA:
        v156 = &type metadata for NameParserSource;
        v157 = &off_26C5A5770;
        uint64_t v153 = swift_allocObject();
        memcpy((void *)(v153 + 16), __dst, 0x119uLL);
        sub_214BB7724((uint64_t)__dst);
        int v25 = v156;
        uint64_t v30 = v157;
        goto LABEL_32;
      case 0xB:
        int v25 = &type metadata for GeocoderSource;
        v156 = &type metadata for GeocoderSource;
        uint64_t v30 = &off_26C5A4AE8;
        v157 = &off_26C5A4AE8;
        char v35 = (_OWORD *)swift_allocObject();
        uint64_t v153 = (uint64_t)v35;
        long long v36 = v164;
        v35[5] = v163;
        v35[6] = v36;
        v35[7] = v165[0];
        *(_OWORD *)((char *)v35 + 122) = *(_OWORD *)((char *)v165 + 10);
        long long v37 = v160;
        v35[1] = v159;
        v35[2] = v37;
        long long v38 = v162;
        v35[3] = v161;
        v35[4] = v38;
        goto LABEL_32;
      case 0xC:
        int v25 = &type metadata for PhoneFormatterSource;
        v156 = &type metadata for PhoneFormatterSource;
        char v26 = &off_26C5A6290;
        v157 = &off_26C5A6290;
        uint64_t v27 = swift_allocObject();
        uint64_t v153 = v27;
        *(void *)(v27 + 16) = v60;
        *(void *)(v27 + 24) = v59;
        *(unsigned char *)(v27 + 32) = v58;
        *(void *)(v27 + 40) = v57;
        *(void *)(v27 + 48) = v56;
        *(unsigned char *)(v27 + 56) = v55;
        *(void *)(v27 + 64) = v54;
        *(void *)(v27 + 72) = v53;
        char v28 = v52;
        goto LABEL_30;
      case 0xD:
        int v25 = &type metadata for DeviceSettingsSource;
        v156 = &type metadata for DeviceSettingsSource;
        uint64_t v30 = &off_26C5A6048;
        v157 = &off_26C5A6048;
        uint64_t v46 = swift_allocObject();
        uint64_t v153 = v46;
        *(_DWORD *)(v46 + 16) = v48;
        *(void *)(v46 + 24) = v66;
        *(unsigned char *)(v46 + 32) = v65;
        *(unsigned char *)(v46 + 33) = v64;
        *(void *)(v46 + 40) = v63;
        *(unsigned char *)(v46 + 48) = v62;
        *(unsigned char *)(v46 + 49) = v61;
        goto LABEL_32;
      case 0xE:
        int v25 = &type metadata for ConfigurationSource;
        v156 = &type metadata for ConfigurationSource;
        uint64_t v30 = &off_26C5AF978;
        v157 = &off_26C5AF978;
        uint64_t v153 = v51;
        LOBYTE(v154) = v50;
        BYTE1(v154) = v49;
        goto LABEL_32;
      default:
        int v25 = &type metadata for AccountsSource;
        v156 = &type metadata for AccountsSource;
        char v26 = &off_26C5AA3F8;
        v157 = &off_26C5AA3F8;
        uint64_t v27 = swift_allocObject();
        uint64_t v153 = v27;
        *(void *)(v27 + 16) = v140;
        *(void *)(v27 + 24) = v139;
        *(unsigned char *)(v27 + 32) = v138;
        *(void *)(v27 + 40) = v137;
        *(void *)(v27 + 48) = v136;
        *(unsigned char *)(v27 + 56) = v135;
        *(void *)(v27 + 64) = v134;
        *(void *)(v27 + 72) = v133;
        char v28 = v132;
LABEL_30:
        *(unsigned char *)(v27 + 80) = v28;
LABEL_31:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = v26;
LABEL_32:
        __swift_project_boxed_opaque_existential_1(&v153, (uint64_t)v25);
        v150[0] = v22;
        v150[1] = v23;
        char v151 = v24;
        char v39 = (void (*)(unsigned __int8 *@<X0>, char *@<X8>))v30[1];
        swift_bridgeObjectRetain();
        uint64_t v145 = v22;
        uint64_t v40 = v22;
        char v41 = v24;
        sub_214B6F6CC(v40, v23, v24);
        v39((unsigned __int8 *)v150, (char *)&v152);
        int v42 = v152;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v153);
        if (v42 == 209)
        {
          uint64_t v18 = v147;
          uint64_t v20 = v145;
          uint64_t v21 = v143;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = v147;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_214B874BC(0, v147[2] + 1, 1, v147);
          }
          unint64_t v44 = v18[2];
          unint64_t v43 = v18[3];
          uint64_t v21 = v143;
          if (v44 >= v43 >> 1) {
            uint64_t v18 = sub_214B874BC((void *)(v43 > 1), v44 + 1, 1, v18);
          }
          v18[2] = v44 + 1;
          uint64_t v45 = &v18[2 * v44];
          v45[4] = v141;
          v45[5] = v149;
          uint64_t v20 = v145;
        }
        swift_bridgeObjectRelease();
        sub_214B6F6DC(v20, v23, v41);
        v19 += 64;
        uint64_t v17 = v21 - 1;
        if (v17) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
    }
    return v18;
  }
}

uint64_t ArmandDeviceData.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v40 = *(void *)(v1 + 176);
  char v12 = *(unsigned char *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 336);
  char v5 = *(unsigned char *)(v1 + 344);
  int v13 = *(unsigned __int8 *)(v1 + 345);
  char v6 = *(unsigned char *)(v1 + 346);
  uint64_t v7 = *(void *)(v1 + 360);
  char v8 = *(unsigned char *)(v1 + 368);
  uint64_t v14 = *(void *)(v1 + 480);
  char v9 = *(unsigned char *)(v1 + 488);
  memcpy(__dst, (const void *)(v1 + 496), sizeof(__dst));
  uint64_t v17 = *(void *)(v1 + 824);
  __int16 v16 = *(unsigned __int8 *)(v1 + 832);
  __int16 v15 = *(unsigned __int8 *)(v1 + 833);
  uint64_t v20 = *(void *)(v1 + 840);
  __int16 v19 = *(unsigned __int8 *)(v1 + 848);
  __int16 v18 = *(unsigned __int8 *)(v1 + 849);
  uint64_t v23 = *(void *)(v1 + 856);
  __int16 v22 = *(unsigned __int8 *)(v1 + 864);
  __int16 v21 = *(unsigned __int8 *)(v1 + 865);
  uint64_t v26 = *(void *)(v1 + 872);
  __int16 v25 = *(unsigned __int8 *)(v1 + 880);
  __int16 v24 = *(unsigned __int8 *)(v1 + 881);
  uint64_t v29 = *(void *)(v1 + 888);
  __int16 v28 = *(unsigned __int8 *)(v1 + 896);
  __int16 v27 = *(unsigned __int8 *)(v1 + 897);
  uint64_t v33 = *(void *)(v1 + 904);
  __int16 v31 = *(unsigned __int8 *)(v1 + 912);
  __int16 v30 = *(unsigned __int8 *)(v1 + 913);
  uint64_t v37 = *(void *)(v1 + 920);
  __int16 v34 = *(unsigned __int8 *)(v1 + 928);
  __int16 v32 = *(unsigned __int8 *)(v1 + 929);
  uint64_t v38 = *(void *)(v1 + 936);
  __int16 v36 = *(unsigned __int8 *)(v1 + 944);
  __int16 v35 = *(unsigned __int8 *)(v1 + 945);
  int v39 = *(unsigned __int8 *)(v1 + 1032);
  char v10 = *(unsigned char *)(v1 + 1033);
  sub_214D1AD28();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_214CDEC7C((uint64_t)a1, v3);
    swift_bridgeObjectRelease();
  }
  sub_214CB2940();
  sub_214C8F890();
  sub_214D1AD28();
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v12 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214C92EFC();
  sub_214C99CE4();
  sub_214D1AD28();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v5 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  if (v13 != 2) {
    sub_214D1AD28();
  }
  sub_214D1AD28();
  if ((v6 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  sub_214D1AD28();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
  }
  if ((v8 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214C9DC4C((uint64_t)a1);
  sub_214D1AD28();
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_214CDE3A8(a1, v14);
  }
  if ((v9 + 47) >= 9u) {
    sub_214D1AD18();
  }
  sub_214D1AD18();
  swift_bridgeObjectRelease();
  sub_214CB6C60();
  sub_214CA7568();
  sub_214C7D5D8((uint64_t)a1, v17, v16 | (v15 << 8));
  sub_214C7D5D8((uint64_t)a1, v20, v19 | (v18 << 8));
  sub_214C7D5D8((uint64_t)a1, v23, v22 | (v21 << 8));
  sub_214C7D5D8((uint64_t)a1, v26, v25 | (v24 << 8));
  sub_214C7D5D8((uint64_t)a1, v29, v28 | (v27 << 8));
  sub_214C7D5D8((uint64_t)a1, v33, v31 | (v30 << 8));
  sub_214C7D5D8((uint64_t)a1, v37, v34 | (v32 << 8));
  sub_214C7D5D8((uint64_t)a1, v38, v36 | (v35 << 8));
  sub_214CB2940();
  sub_214D1AD28();
  if (!v39) {
    sub_214D1AD18();
  }
  if ((v10 + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t ArmandDeviceData.hashValue.getter()
{
  sub_214D1AD08();
  ArmandDeviceData.hash(into:)(v1);
  return sub_214D1AD48();
}

uint64_t sub_214CC67D8()
{
  sub_214D1AD08();
  ArmandDeviceData.hash(into:)(v1);
  return sub_214D1AD48();
}

uint64_t sub_214CC681C()
{
  sub_214D1AD08();
  ArmandDeviceData.hash(into:)(v1);
  return sub_214D1AD48();
}

uint64_t sub_214CC6860(void *__src, void *a2)
{
  memcpy(__dst, __src, 0x40AuLL);
  uint64_t v3 = (void *)(*a2 + 112);
  swift_beginAccess();
  memcpy(v6, v3, 0x40AuLL);
  memcpy(v3, __dst, 0x40AuLL);
  sub_214BB6CB4((uint64_t)__dst);
  return sub_214B952CC((uint64_t)v6);
}

uint64_t sub_214CC68E4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x40AuLL);
  memcpy(a1, v3, 0x40AuLL);
  return sub_214BB6CB4((uint64_t)__dst);
}

uint64_t sub_214CC6954(const void *a1)
{
  uint64_t v3 = (void *)(v1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x40AuLL);
  memcpy(v3, a1, 0x40AuLL);
  return sub_214B952CC((uint64_t)__dst);
}

uint64_t (*sub_214CC69C4())()
{
  return j__swift_endAccess;
}

uint64_t sub_214CC6A18()
{
  if (*(unsigned char *)(v0 + 1147) == 1) {
    return *(unsigned __int8 *)(v0 + 1146);
  }
  else {
    return 0;
  }
}

uint64_t ArmandDataFiller.__allocating_init(sessionIdentifier:workflowID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_214CFEBAC(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t ArmandDataFiller.init(sessionIdentifier:workflowID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = sub_214CFEBAC(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_214CC6AE0(uint64_t *a1)
{
  uint64_t v2 = v1;
  char v14 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001FLL, 0x8000000214D383F0, &v14);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[2];
  int v5 = *((unsigned __int8 *)a1 + 24);
  swift_beginAccess();
  if (v5) {
    char v6 = -45;
  }
  else {
    char v6 = -47;
  }
  *(void *)(v2 + 304) = v4;
  *(unsigned char *)(v2 + 312) = v5;
  *(unsigned char *)(v2 + 313) = v6;
  uint64_t v8 = a1[10];
  uint64_t v7 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v7) {
    char v9 = -47;
  }
  else {
    char v9 = -45;
  }
  *(void *)(v2 + 344) = v8;
  *(void *)(v2 + 352) = v7;
  *(unsigned char *)(v2 + 360) = v9;
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v10) {
    char v12 = -47;
  }
  else {
    char v12 = -45;
  }
  *(void *)(v2 + 320) = v11;
  *(void *)(v2 + 328) = v10;
  *(unsigned char *)(v2 + 336) = v12;
  swift_endAccess();
  char v14 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000029, 0x8000000214D38410, &v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_214CC6C44(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return MEMORY[0x270FA2498](sub_214CC6C68, v2, 0);
}

uint64_t sub_214CC6C68()
{
  uint64_t v35 = v0;
  if (*(void *)(v0 + 120) >> 60 != 15)
  {
    sub_214B6A3A0(*(void *)(v0 + 112), *(void *)(v0 + 120));
    CFDataRef v1 = (const __CFData *)sub_214D19B38();
    SecCertificateRef v2 = SecCertificateCreateWithData(0, v1);

    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v8 = sub_214BE14AC(v3);
      uint64_t v28 = v9;
      uint64_t v29 = *(void *)(v0 + 128);
      unint64_t v31 = *(void *)(v0 + 120);
      uint64_t v30 = *(void *)(v0 + 112);
      uint64_t v27 = v10;
      uint64_t v26 = sub_214BE1CB0(1684628851, 0xE400000000000000, (uint64_t)v8);
      uint64_t v12 = v11;
      uint64_t v25 = sub_214BE1F04(1145652037, 0xE400000000000000, (uint64_t)v8);
      char v24 = v13;
      uint64_t v14 = sub_214BE1CB0(1835954803, 0xE400000000000000, (uint64_t)v8);
      uint64_t v16 = v15;
      uint64_t v17 = sub_214BE1CB0(1684628597, 0xE400000000000000, (uint64_t)v8);
      uint64_t v19 = v18;
      uint64_t v20 = sub_214BE1CB0(1768254825, 0xE400000000000000, (uint64_t)v8);
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = v26;
      *(void *)(v0 + 24) = v12;
      *(void *)(v0 + 32) = v25;
      *(unsigned char *)(v0 + 40) = v24 & 1;
      *(void *)(v0 + 48) = v14;
      *(void *)(v0 + 56) = v16;
      *(void *)(v0 + 64) = v17;
      *(void *)(v0 + 72) = v19;
      *(void *)(v0 + 80) = v20;
      *(void *)(v0 + 88) = v22;
      *(void *)(v0 + 96) = v28;
      *(void *)(v0 + 104) = v27;
      uint64_t v23 = *(void *)(v29 + 1224);
      v32[0] = *(void *)(v29 + 1216);
      v32[1] = v23;
      uint64_t v33 = 5;
      unint64_t v34 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_214D1A7A8();
      sub_214D1A108();
      sub_214D19AC8();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214CC6AE0((uint64_t *)(v0 + 16));

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_214B59EAC(v30, v31);
      goto LABEL_6;
    }
    sub_214B59EAC(*(void *)(v0 + 112), *(void *)(v0 + 120));
  }
  uint64_t v4 = *(void *)(v0 + 128);
  unint64_t v5 = *(void *)(v4 + 1224);
  uint64_t v33 = *(void *)(v4 + 1216);
  unint64_t v34 = v5;
  LOBYTE(v32[0]) = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000036, 0x8000000214D38370, v32);
  swift_bridgeObjectRelease();
LABEL_6:
  char v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214CC6F98()
{
  *(void *)(v1 + 536) = v0;
  return MEMORY[0x270FA2498](sub_214CC6FB8, v0, 0);
}

uint64_t sub_214CC6FB8()
{
  unint64_t v5 = v0;
  uint64_t v1 = v0[67];
  v0[68] = *(void *)(v1 + 1216);
  v0[69] = *(void *)(v1 + 1224);
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002ALL, 0x8000000214D38300, &v4);
  swift_bridgeObjectRelease();
  if (qword_26ACE3C10 != -1) {
    swift_once();
  }
  SecCertificateRef v2 = (void *)swift_task_alloc();
  v0[70] = v2;
  *SecCertificateRef v2 = v0;
  v2[1] = sub_214CC70E4;
  return sub_214C11404((uint64_t)(v0 + 33));
}

uint64_t sub_214CC70E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 536);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CC71F4, v1, 0);
}

uint64_t sub_214CC71F4()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 536);
  *(unsigned char *)(v0 + 256) = *(unsigned char *)(v0 + 504);
  long long v2 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 224) = v2;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 488);
  long long v3 = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 392);
  *(_OWORD *)(v0 + 160) = v3;
  long long v4 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 192) = v4;
  long long v5 = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 96) = v5;
  long long v6 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 128) = v6;
  long long v7 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 32) = v7;
  long long v8 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 64) = v8;
  uint64_t v9 = *(void *)(v1 + 1232);
  uint64_t v10 = *(void *)(v1 + 1240);
  unint64_t v11 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v11 = sub_214B7F0DC(MEMORY[0x263F8EE78]);
    uint64_t v1 = *(void *)(v0 + 536);
  }
  sub_214B99814((void *)(v0 + 16));
  uint64_t v12 = sub_214C2C6D4(v9, v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 1136) = v12;
  *(_WORD *)(v1 + 1144) = -12032;
  char v15 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000034, 0x8000000214D38330, &v15);
  swift_bridgeObjectRelease();
  char v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_214CC7398(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v3[24] = *(void *)(type metadata accessor for ODIKnownBinding() - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CC7468, v2, 0);
}

uint64_t sub_214CC7468()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[21];
  uint64_t v3 = *(void *)(v1 + 1216);
  v0[27] = v3;
  uint64_t v4 = *(void *)(v1 + 1224);
  v0[28] = v4;
  v19[0] = v3;
  v19[1] = v4;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v20 = 0xD000000000000005;
  unint64_t v21 = 0x8000000214D38220;
  MEMORY[0x2166AFD40](v2, MEMORY[0x263F8D310]);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x8000000214D38220, &v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + 16);
  v0[29] = v5;
  if (v5)
  {
    long long v6 = (void *)v0[22];
    uint64_t v7 = v0[21];
    v0[30] = 0;
    v0[31] = 0;
    uint64_t v8 = *(void *)(v7 + 32);
    v0[32] = v8;
    uint64_t v9 = *(void *)(v7 + 40);
    v0[33] = v9;
    uint64_t v10 = v6[3];
    uint64_t v11 = v6[4];
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v6, v10);
    uint64_t v12 = swift_allocObject();
    v0[34] = v12;
    swift_weakInit();
    char v13 = (void *)swift_allocObject();
    v0[35] = v13;
    id v13[2] = v12;
    v13[3] = v8;
    v13[4] = v9;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t))(*(void *)(v11 + 32)
                                                                                       + **(int **)(v11 + 32));
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    v0[36] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_214CC7774;
    return v18(v8, v9, &unk_26784F070, v13, v10, v11);
  }
  else
  {
    unint64_t v16 = v0[28];
    unint64_t v20 = v0[27];
    unint64_t v21 = v16;
    LOBYTE(v19[0]) = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x8000000214D38250, v19);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_214CC7774()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_release();
  swift_release();
  return MEMORY[0x270FA2498](sub_214CC78C4, v1, 0);
}

uint64_t sub_214CC78C4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214CC79E0;
  uint64_t v5 = v0[32];
  uint64_t v6 = v0[33];
  return v8(v0 + 7, v5, v6, v2, v3);
}

uint64_t sub_214CC79E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CC7AF0, v1, 0);
}

uint64_t sub_214CC7AF0()
{
  uint64_t v44 = v0;
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 240);
    uint64_t v2 = *(void **)(v0 + 208);
    sub_214B59EC0((long long *)(v0 + 56), v0 + 16);
    sub_214B93DCC(v0 + 16, v0 + 96);
    sub_214C8D310((void *)(v0 + 96), v2);
    if (v1)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_23:
      return v3();
    }
    uint64_t v5 = *(void *)(v0 + 184);
    swift_beginAccess();
    *(unsigned char *)(v5 + 600) = -47;
    if (!*(void *)(v5 + 592))
    {
      uint64_t v6 = *(void *)(v0 + 184);
      *(void *)(v6 + 592) = sub_214B7F7FC(MEMORY[0x263F8EE78]);
    }
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 184);
    sub_214B9163C(*(void *)(v0 + 208), *(void *)(v0 + 200));
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void *)(v9 + 592);
    *(void *)(v0 + 160) = v11;
    *(void *)(v9 + 592) = 0x8000000000000000;
    unint64_t v13 = sub_214B87FEC(v8, v7);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    uint64_t result = v14 + v15;
    if (__OFADD__(v14, v15))
    {
      __break(1u);
    }
    else
    {
      char v17 = v12;
      if (*(void *)(v11 + 24) >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_214B90850();
        }
      }
      else
      {
        uint64_t v19 = *(void *)(v0 + 256);
        uint64_t v18 = *(void *)(v0 + 264);
        sub_214B8C8D0(result, isUniquelyReferenced_nonNull_native);
        uint64_t v20 = sub_214B87FEC(v19, v18);
        if ((v17 & 1) != (v21 & 1))
        {
          return sub_214D1AC58();
        }
        unint64_t v13 = v20;
      }
      uint64_t v22 = *(void **)(v0 + 160);
      if (v17)
      {
        sub_214B916A0(*(void *)(v0 + 200), v22[7] + *(void *)(*(void *)(v0 + 192) + 72) * v13);
LABEL_20:
        uint64_t v31 = *(void *)(v0 + 208);
        *(void *)(*(void *)(v0 + 184) + 592) = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_214D043C0(v31, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        __swift_destroy_boxed_opaque_existential_1(v0 + 16);
        uint64_t v4 = 0;
        goto LABEL_21;
      }
      uint64_t v24 = *(void *)(v0 + 256);
      uint64_t v23 = *(void *)(v0 + 264);
      uint64_t v26 = *(void *)(v0 + 192);
      uint64_t v25 = *(void *)(v0 + 200);
      v22[(v13 >> 6) + 8] |= 1 << v13;
      uint64_t v27 = (void *)(v22[6] + 16 * v13);
      void *v27 = v24;
      v27[1] = v23;
      uint64_t result = sub_214D04358(v25, v22[7] + *(void *)(v26 + 72) * v13, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      uint64_t v28 = v22[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (!v29)
      {
        v22[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_20;
      }
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  sub_214B59CE0(v0 + 56, &qword_26784D148);
  uint64_t v4 = *(void *)(v0 + 240);
LABEL_21:
  uint64_t v32 = *(void *)(v0 + 248) + 1;
  if (v32 == *(void *)(v0 + 232))
  {
    swift_bridgeObjectRelease();
    v43[0] = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x8000000214D38250, v43);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_23;
  }
  *(void *)(v0 + 240) = v4;
  *(void *)(v0 + 248) = v32;
  uint64_t v33 = *(void **)(v0 + 176);
  uint64_t v34 = *(void *)(v0 + 168) + 16 * v32;
  uint64_t v35 = *(void *)(v34 + 32);
  *(void *)(v0 + 256) = v35;
  uint64_t v36 = *(void *)(v34 + 40);
  *(void *)(v0 + 264) = v36;
  uint64_t v37 = v33[3];
  uint64_t v38 = v33[4];
  __swift_project_boxed_opaque_existential_1(v33, v37);
  uint64_t v39 = swift_allocObject();
  *(void *)(v0 + 272) = v39;
  swift_weakInit();
  uint64_t v40 = (void *)swift_allocObject();
  *(void *)(v0 + 280) = v40;
  v40[2] = v39;
  v40[3] = v35;
  v40[4] = v36;
  int v42 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t))(*(void *)(v38 + 32)
                                                                                     + **(int **)(v38 + 32));
  swift_bridgeObjectRetain_n();
  swift_retain();
  char v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v41;
  *char v41 = v0;
  v41[1] = sub_214CC7774;
  return v42(v35, v36, &unk_26784F070, v40, v37, v38);
}

uint64_t sub_214CC8020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ODIKnownBinding();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CC8114, 0, 0);
}

uint64_t sub_214CC8114()
{
  uint64_t v1 = (void *)v0[20];
  sub_214B93DCC(v0[13], (uint64_t)(v0 + 2));
  sub_214C8D310(v0 + 2, v1);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[21] = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_214CC8260, Strong, 0);
  }
  else
  {
    sub_214D043C0(v0[20], (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_214CC8260()
{
  uint64_t v1 = v0[21];
  swift_beginAccess();
  *(unsigned char *)(v1 + 600) = -47;
  if (!*(void *)(v1 + 592)) {
    *(void *)(v1 + 592) = sub_214B7F7FC(MEMORY[0x263F8EE78]);
  }
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  sub_214B9163C(v0[20], v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  swift_bridgeObjectRetain();
  sub_214C0B4AC(v4, v6, v5);
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_214CC8378, 0, 0);
}

uint64_t sub_214CC8378()
{
  sub_214D043C0(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CC8408(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return MEMORY[0x270FA2498](sub_214CC842C, v2, 0);
}

uint64_t sub_214CC842C()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = v1[2];
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = *(void *)(v0 + 72);
      uint64_t v32 = (uint64_t *)(v5 + 1064);
      uint64_t v7 = v1[4];
      uint64_t v6 = v1[5];
      uint64_t v8 = (unsigned __int8 *)(v3 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v25 = (void *)(v5 + 1120);
      uint64_t v26 = (uint64_t *)(v5 + 1112);
      uint64_t v24 = (unsigned char *)(v5 + 1128);
      uint64_t v28 = (void *)(v5 + 1096);
      BOOL v29 = (uint64_t *)(v5 + 1088);
      uint64_t v27 = (unsigned char *)(v5 + 1104);
      uint64_t v30 = (unsigned char *)(v5 + 1080);
      uint64_t v31 = (void *)(v5 + 1072);
      uint64_t v9 = v1 + 7;
      uint64_t v10 = v2 - 1;
      while (1)
      {
        int v12 = *v8++;
        int v11 = v12;
        if (v6
          && (swift_bridgeObjectRetain(),
              uint64_t v13 = _s17CoreODIEssentials15BindingsHelpersV17formatPhoneNumber05phoneG016usingCountryCodeSSSgSS_So8NSStringCSgtFZ_0(v7, v6, 0), v15 = v14, swift_bridgeObjectRelease(), v15))
        {
          uint64_t v33 = v13;
          uint64_t v34 = v8;
          unint64_t v16 = v31;
          char v17 = v32;
          uint64_t v18 = v30;
          if (v11)
          {
            unint64_t v16 = v28;
            char v17 = v29;
            uint64_t v18 = v27;
            if (v11 != 1)
            {
              unint64_t v16 = v25;
              char v17 = v26;
              uint64_t v18 = v24;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *char v17 = v33;
          *unint64_t v16 = v15;
          *uint64_t v18 = -47;
          swift_bridgeObjectRelease();
          uint64_t v8 = v34;
          if (!v10)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          }
        }
        else
        {
          uint64_t v35 = 0;
          unint64_t v36 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_214D1A7A8();
          unint64_t v19 = v36;
          *(void *)(v0 + 40) = v35;
          *(void *)(v0 + 48) = v19;
          sub_214D1A108();
          *(unsigned char *)(v0 + 80) = v11;
          sub_214D1A908();
          sub_214D1A108();
          uint64_t v20 = *(void *)(v0 + 40);
          unint64_t v21 = *(void *)(v0 + 48);
          LOBYTE(v35) = 5;
          CoreODILogger.warning(_:category:)(v20, v21, &v35);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            if (v11 == 1)
            {
              swift_bridgeObjectRelease();
              *(_OWORD *)BOOL v29 = xmmword_214D27790;
              unsigned char *v27 = -47;
              if (!v10) {
                goto LABEL_19;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              *(_OWORD *)uint64_t v26 = xmmword_214D27790;
              *uint64_t v24 = -47;
              if (!v10) {
                goto LABEL_19;
              }
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            *(_OWORD *)uint64_t v32 = xmmword_214D27790;
            *uint64_t v30 = -47;
            if (!v10) {
              goto LABEL_19;
            }
          }
        }
        uint64_t v7 = *(v9 - 1);
        uint64_t v6 = *v9;
        v9 += 2;
        --v10;
        if (!--v4) {
          goto LABEL_19;
        }
      }
    }
  }
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_214CC8768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 64) = a4;
  *(void *)(v6 + 72) = v5;
  *(unsigned char *)(v6 + 120) = a5;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 56) = a3;
  *(void *)(v6 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3590);
  *(void *)(v6 + 80) = swift_task_alloc();
  uint64_t v7 = sub_214D19998();
  *(void *)(v6 + 88) = v7;
  *(void *)(v6 + 96) = *(void *)(v7 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  *(void *)(v6 + 112) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CC8874, v5, 0);
}

uint64_t sub_214CC8874()
{
  uint64_t v15 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A78]), sel_init, v15, v16);
  uint64_t v2 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_personNameComponentsFromString_, v2);

  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v6 = *(void *)(v0 + 88);
    sub_214D19978();

    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v8(v7, v4, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) != 1)
    {
      uint64_t v9 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 88);
      uint64_t v11 = *(void *)(v0 + 96);
      char v12 = *(unsigned char *)(v0 + 120) & 1;
      v8(v9, *(void *)(v0 + 80), v10);
      swift_beginAccess();
      sub_214CB6584(v9, v12);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 96) + 56))(*(void *)(v0 + 80), 1, 1, *(void *)(v0 + 88));
  }
  sub_214B59CE0(*(void *)(v0 + 80), &qword_26ACE3590);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

void *sub_214CC8AD8(uint64_t a1)
{
  id v3 = (unsigned char *)(v1 + 944);
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  swift_beginAccess();
  int64_t v8 = 0;
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = (void *)(v1 + 936);
  uint64_t v46 = (unsigned char *)(v1 + 1040);
  uint64_t v47 = (void *)(v1 + 1032);
  uint64_t v44 = (void *)(v1 + 1048);
  uint64_t v45 = (unsigned char *)(v1 + 1041);
  int v42 = (unsigned char *)(v1 + 1057);
  unint64_t v43 = (unsigned char *)(v1 + 1056);
  uint64_t v40 = (unsigned char *)(v1 + 1008);
  char v41 = (void *)(v1 + 1000);
  uint64_t v39 = (unsigned char *)(v1 + 1009);
  uint64_t v11 = (void *)(v1 + 1016);
  char v12 = (unsigned char *)(v1 + 1024);
  uint64_t v13 = (unsigned char *)(v1 + 1025);
  uint64_t v14 = (void *)(v1 + 968);
  uint64_t v15 = (unsigned char *)(v1 + 976);
  uint64_t v16 = (unsigned char *)(v1 + 977);
  uint64_t v17 = (void *)(v1 + 984);
  uint64_t v18 = (unsigned char *)(v1 + 992);
  unint64_t v19 = (unsigned char *)(v1 + 993);
  uint64_t v20 = (unsigned char *)(v1 + 945);
  uint64_t result = (void *)(v1 + 952);
  uint64_t v22 = (unsigned char *)(v1 + 960);
  uint64_t v23 = (unsigned char *)(v1 + 961);
  while (1)
  {
    if (v7)
    {
      unint64_t v30 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v31 = v30 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v32 >= v9) {
      return result;
    }
    unint64_t v33 = *(void *)(v4 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v9) {
        return result;
      }
      unint64_t v33 = *(void *)(v4 + 8 * v8);
      if (!v33)
      {
        int64_t v8 = v32 + 2;
        if (v32 + 2 >= v9) {
          return result;
        }
        unint64_t v33 = *(void *)(v4 + 8 * v8);
        if (!v33) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_22:
    uint64_t v35 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v31);
    unint64_t v36 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v31);
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v24 = v10;
    uint64_t v25 = v3;
    uint64_t v26 = v20;
    uint64_t v27 = result;
    uint64_t v28 = v22;
    BOOL v29 = v23;
    switch(v35)
    {
      case 1:
        uint64_t v24 = v14;
        uint64_t v25 = v15;
        uint64_t v26 = v16;
        uint64_t v27 = v17;
        uint64_t v28 = v18;
        BOOL v29 = v19;
        break;
      case 2:
        uint64_t v25 = v40;
        uint64_t v24 = v41;
        uint64_t v26 = v39;
        uint64_t v27 = v11;
        uint64_t v28 = v12;
        BOOL v29 = v13;
        break;
      case 3:
        uint64_t v25 = v46;
        uint64_t v24 = v47;
        uint64_t v27 = v44;
        uint64_t v26 = v45;
        BOOL v29 = v42;
        uint64_t v28 = v43;
        break;
      default:
        break;
    }
    *uint64_t v24 = v38;
    *uint64_t v25 = 0;
    *uint64_t v26 = -47;
    void *v27 = v37;
    *uint64_t v28 = 0;
    *BOOL v29 = -47;
  }
  int64_t v34 = v32 + 3;
  if (v32 + 3 < v9)
  {
    unint64_t v33 = *(void *)(v4 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        int64_t v8 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          break;
        }
        if (v8 >= v9) {
          return result;
        }
        unint64_t v33 = *(void *)(v4 + 8 * v8);
        ++v34;
        if (v33) {
          goto LABEL_21;
        }
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x214CC8D38);
    }
    int64_t v8 = v32 + 3;
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_214CC8D48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_214D19D98();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B20);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v40 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ODISignpost();
  uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
  char v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v37 - v14;
  if (qword_26784C980 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_2678639A0;
  uint64_t v17 = *(void *)algn_2678639A8;
  char v18 = byte_2678639B0;
  unint64_t v19 = (void *)qword_2678639B8;
  int v20 = byte_2678639C0;
  *((void *)v12 + 4) = "enableTelemetry=YES";
  *((void *)v12 + 5) = 19;
  v12[48] = 2;
  *(void *)char v12 = v16;
  *((void *)v12 + 1) = v17;
  v12[16] = v18;
  *((void *)v12 + 3) = v19;
  uint64_t v41 = v8;
  id v21 = v19;
  sub_214D19EA8();
  sub_214D1A588();
  if (v20 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }

  sub_214D04358((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  BOOL v22 = MKBGetDeviceLockState() - 1 < 2;
  swift_beginAccess();
  *(unsigned char *)(v1 + 896) = v22;
  *(unsigned char *)(v1 + 897) = -47;
  id v23 = objc_msgSend(self, sel_sharedConnection);
  uint64_t v24 = (uint64_t)v40;
  if (v23)
  {
    uint64_t v25 = v23;
    unsigned int v26 = objc_msgSend(v23, sel_effectiveBoolValueForSetting_, *MEMORY[0x263F53878]);

    BOOL v27 = v26 == 1;
  }
  else
  {
    BOOL v27 = 0;
  }
  *(unsigned char *)(v1 + 898) = v27;
  *(unsigned char *)(v1 + 899) = -47;
  uint64_t v28 = v37;
  sub_214D19D58();
  sub_214D19D48();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
  uint64_t v29 = sub_214D19D38();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v24, 1, v29) == 1)
  {
    sub_214B59CE0(v24, &qword_26ACE3B20);
  }
  else
  {
    sub_214D19CE8();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v24, v29);
  }
  uint64_t v31 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 904) = v31;
  *(unsigned char *)(v1 + 912) = 0;
  *(unsigned char *)(v1 + 913) = -47;
  uint64_t v32 = _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0();
  if (v33)
  {
    unint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
  }
  uint64_t v35 = _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(v32, v34);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 920) = v35;
  *(unsigned char *)(v1 + 928) = 0;
  *(unsigned char *)(v1 + 929) = -47;
  sub_214D1A578();
  sub_214D19E98();
  return sub_214D043C0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ODISignpost);
}

uint64_t sub_214CC91F8(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return MEMORY[0x270FA2498](sub_214CC9218, v1, 0);
}

uint64_t sub_214CC9218()
{
  uint64_t v9 = v0;
  uint64_t v2 = (void *)v0[11];
  uint64_t v1 = v0[12];
  v0[13] = *(void *)(v1 + 1216);
  v0[14] = *(void *)(v1 + 1224);
  char v8 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x8000000214D38130, &v8);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_214CC9374;
  return v7(v3, v4);
}

uint64_t sub_214CC9374(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 128) = a1;
  *(void *)(v4 + 136) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 96);
  if (v1) {
    uint64_t v6 = sub_214CC9630;
  }
  else {
    uint64_t v6 = sub_214CC94A8;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214CC94A8()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v0[12];
  if (!v1)
  {
    swift_beginAccess();
    *(void *)(v2 + 488) = 0;
    *(void *)(v2 + 496) = 0;
    *(unsigned char *)(v2 + 504) = -45;
    goto LABEL_5;
  }
  swift_beginAccess();
  sub_214C9D814(v1);
  swift_endAccess();
  *(void *)(v2 + 488) = sub_214D046B4(v1);
  *(void *)(v2 + 496) = v3;
  *(unsigned char *)(v2 + 504) = -47;
  swift_bridgeObjectRelease();
  if (sub_214D1A398())
  {
    char v6 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.warning(_:category:)(0xD000000000000050, 0x8000000214D381C0, &v6);

LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }

LABEL_7:
  char v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x8000000214D38180, &v6);
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CC9630()
{
  uint64_t v11 = v0;
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[14];
  v8[0] = v0[13];
  v8[1] = v2;
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  v0[8] = 0;
  v0[9] = 0xE000000000000000;
  sub_214D1A108();
  v0[10] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v3 = v0[8];
  unint64_t v4 = v0[9];
  LOBYTE(v9) = 14;
  CoreODILogger.debug(_:category:)(v3, v4, &v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v5 = v0[14];
  uint64_t v9 = v0[13];
  unint64_t v10 = v5;
  LOBYTE(v8[0]) = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x8000000214D38180, v8);
  swift_bridgeObjectRelease();
  char v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CC97A0(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_214CC97C0, v1, 0);
}

uint64_t sub_214CC97C0()
{
  unint64_t v5 = v0;
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  v2[144] = v1;
  swift_retain();
  swift_release();
  v0[7] = v2[152];
  v0[8] = v2[153];
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000026, 0x8000000214D380D0, &v4);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214CC9894, v1, 0);
}

uint64_t sub_214CC9894()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_214D03FC8(&qword_26784F060, 255, (void (*)(uint64_t))type metadata accessor for DeviceStatus);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = swift_task_alloc();
  v0[9] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  unint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_214CC99E0;
  uint64_t v6 = MEMORY[0x263F8D4F8];
  return MEMORY[0x270FA2318](v0 + 11, v1, v2, 0x6E69726168537369, 0xEF6E656572635367, sub_214D046AC, v4, v6);
}

uint64_t sub_214CC99E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CC9B0C, v1, 0);
}

uint64_t sub_214CC9B0C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(unsigned char *)(v0 + 89) = *(unsigned char *)(v0 + 88);
  return MEMORY[0x270FA2498](sub_214CC9B30, v1, 0);
}

uint64_t sub_214CC9B30()
{
  uint64_t v6 = v0;
  char v1 = *(unsigned char *)(v0 + 89);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_beginAccess();
  *(unsigned char *)(v2 + 457) = v1;
  *(unsigned char *)(v2 + 458) = -47;
  char v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002BLL, 0x8000000214D38100, &v5);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214CC9C04(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_214CC9C24, v1, 0);
}

uint64_t sub_214CC9C24()
{
  uint64_t v6 = v0;
  uint64_t v1 = (void *)v0[8];
  v1[145] = v0[7];
  swift_retain();
  swift_release();
  v0[9] = v1[152];
  v0[10] = v1[153];
  char v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000025, 0x8000000214D38010, &v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_task_alloc();
  v0[11] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_214CC9D40;
  long long v3 = *(_OWORD *)(v0 + 7);
  *(_OWORD *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_214CCAAEC, v3, 0);
}

uint64_t sub_214CC9D40()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v1 + 96) = v2;
  *(void *)uint64_t v2 = v5;
  *(void *)(v2 + 8) = sub_214CC9E88;
  long long v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_214CCAE64, v3, 0);
}

uint64_t sub_214CC9E88()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v1 + 104) = v2;
  *(void *)uint64_t v2 = v5;
  *(void *)(v2 + 8) = sub_214CC9FD0;
  long long v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_214CCB1DC, v3, 0);
}

uint64_t sub_214CC9FD0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCA0E0, v1, 0);
}

uint64_t sub_214CCA0E0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_214D03FC8((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  uint64_t v3 = swift_task_alloc();
  v0[14] = v3;
  *(void *)(v3 + 16) = v1;
  strcpy((char *)(v3 + 24), "UniqueChipID");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39C8);
  *uint64_t v4 = v0;
  v4[1] = sub_214CCA254;
  return MEMORY[0x270FA2318](v0 + 5, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214D046A0, v3, v5);
}

uint64_t sub_214CCA254()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)(v1 + 128) = *(void *)(v1 + 40);
  *(unsigned char *)(v1 + 49) = *(unsigned char *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_214CCA3B0, v2, 0);
}

uint64_t sub_214CCA3B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 49);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_beginAccess();
  if (v1) {
    char v5 = -45;
  }
  else {
    char v5 = -47;
  }
  *(void *)(v4 + 264) = v2;
  *(unsigned char *)(v4 + 272) = v1;
  *(unsigned char *)(v4 + 273) = v5;
  return MEMORY[0x270FA2498](sub_214CCA454, v3, 0);
}

uint64_t sub_214CCA454()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 50) = sub_214BE6D6C() & 1;
  return MEMORY[0x270FA2498](sub_214CCA4C4, v1, 0);
}

uint64_t sub_214CCA4C4()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v1 + 433) = *(unsigned char *)(v0 + 50);
  *(unsigned char *)(v1 + 434) = -47;
  char v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x8000000214D38040, &v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_214CCA5D0;
  long long v3 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_214CCB558, v3, 0);
}

uint64_t sub_214CCA5D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCA6E0, v1, 0);
}

uint64_t sub_214CCA6E0()
{
  uint64_t v4 = v0;
  char v3 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x8000000214D38070, &v3);
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214CCA7C0;
  return sub_214CCB6A4();
}

uint64_t sub_214CCA7C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 152) = v3;
  *char v3 = v2;
  v3[1] = sub_214CCA918;
  return sub_214CCB930();
}

uint64_t sub_214CCA918()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCAA28, v1, 0);
}

uint64_t sub_214CCAA28()
{
  uint64_t v4 = v0;
  char v3 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000032, 0x8000000214D38090, &v3);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CCAACC(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_214CCAAEC, a1, 0);
}

uint64_t sub_214CCAAEC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_214D03FC8((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  strcpy((char *)(v3 + 24), "BuildVersion");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  *uint64_t v4 = v0;
  v4[1] = sub_214CCAC60;
  return MEMORY[0x270FA2318](v0 + 5, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214CCAC60()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_214CCAD9C, v2, 0);
}

uint64_t sub_214CCAD9C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1) {
    char v4 = -47;
  }
  else {
    char v4 = -45;
  }
  *(void *)(v3 + 192) = v2;
  *(void *)(v3 + 200) = v1;
  *(unsigned char *)(v3 + 208) = v4;
  swift_endAccess();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CCAE44(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_214CCAE64, a1, 0);
}

uint64_t sub_214CCAE64()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_214D03FC8((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  strcpy((char *)(v3 + 24), "SerialNumber");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  char v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  *char v4 = v0;
  v4[1] = sub_214CCAFD8;
  return MEMORY[0x270FA2318](v0 + 5, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214CCAFD8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_214CCB114, v2, 0);
}

uint64_t sub_214CCB114()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1) {
    char v4 = -47;
  }
  else {
    char v4 = -45;
  }
  *(void *)(v3 + 216) = v2;
  *(void *)(v3 + 224) = v1;
  *(unsigned char *)(v3 + 232) = v4;
  swift_endAccess();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CCB1BC(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_214CCB1DC, a1, 0);
}

uint64_t sub_214CCB1DC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_214D03FC8((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  uint64_t v3 = swift_task_alloc();
  v0[9] = v3;
  *(void *)(v3 + 16) = v1;
  strcpy((char *)(v3 + 24), "UniqueDeviceID");
  *(unsigned char *)(v3 + 39) = -18;
  char v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  *char v4 = v0;
  v4[1] = sub_214CCB354;
  return MEMORY[0x270FA2318](v0 + 5, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BC4F98, v3, v5);
}

uint64_t sub_214CCB354()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_214CCB490, v2, 0);
}

uint64_t sub_214CCB490()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1) {
    char v4 = -47;
  }
  else {
    char v4 = -45;
  }
  *(void *)(v3 + 240) = v2;
  *(void *)(v3 + 248) = v1;
  *(unsigned char *)(v3 + 256) = v4;
  swift_endAccess();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CCB538(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_214CCB558, a1, 0);
}

uint64_t sub_214CCB558()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v0 + 56) = sub_214BE3824(0);
  return MEMORY[0x270FA2498](sub_214CCB5C8, v1, 0);
}

uint64_t sub_214CCB5C8()
{
  uint64_t v1 = (void *)v0[7];
  if (v1)
  {
    if (v1[2])
    {
      uint64_t v3 = v1[4];
      uint64_t v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
  uint64_t v2 = 0;
LABEL_6:
  uint64_t v4 = v0[6];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2) {
    char v5 = -47;
  }
  else {
    char v5 = -45;
  }
  *(void *)(v4 + 368) = v3;
  *(void *)(v4 + 376) = v2;
  *(unsigned char *)(v4 + 384) = v5;
  swift_endAccess();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CCB6A4()
{
  *(void *)(v1 + 40) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214CCB73C;
  return sub_214BE490C();
}

uint64_t sub_214CCB73C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCB854, v2, 0);
}

uint64_t sub_214CCB854()
{
  uint64_t v1 = (void *)v0[7];
  if (v1)
  {
    if (v1[2])
    {
      uint64_t v3 = v1[4];
      uint64_t v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
  uint64_t v2 = 0;
LABEL_6:
  uint64_t v4 = v0[5];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2) {
    char v5 = -47;
  }
  else {
    char v5 = -45;
  }
  *(void *)(v4 + 392) = v3;
  *(void *)(v4 + 400) = v2;
  *(unsigned char *)(v4 + 408) = v5;
  swift_endAccess();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CCB930()
{
  *(void *)(v1 + 40) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214CCB9C8;
  return sub_214BE5604();
}

uint64_t sub_214CCB9C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCBAE0, v2, 0);
}

uint64_t sub_214CCBAE0()
{
  uint64_t v1 = (void *)v0[7];
  if (v1)
  {
    if (v1[2])
    {
      uint64_t v3 = v1[4];
      uint64_t v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
  uint64_t v2 = 0;
LABEL_6:
  uint64_t v4 = v0[5];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2) {
    char v5 = -47;
  }
  else {
    char v5 = -45;
  }
  *(void *)(v4 + 416) = v3;
  *(void *)(v4 + 424) = v2;
  *(unsigned char *)(v4 + 432) = v5;
  swift_endAccess();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CCBBBC(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_214CCBBDC, v1, 0);
}

uint64_t sub_214CCBBDC()
{
  char v5 = v0;
  uint64_t v1 = (void *)v0[6];
  v1[146] = v0[5];
  swift_retain();
  swift_release();
  v0[7] = v1[152];
  v0[8] = v1[153];
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001CLL, 0x8000000214D37FC0, &v4);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_214CCBCDC;
  return sub_214C02340();
}

uint64_t sub_214CCBCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v6[6];
    v6[10] = a2;
    v6[11] = a1;
    return MEMORY[0x270FA2498](sub_214CCBE38, v10, 0);
  }
}

uint64_t sub_214CCBE38()
{
  uint64_t v8 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[6];
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2) {
    char v4 = -47;
  }
  else {
    char v4 = -45;
  }
  *(void *)(v3 + 280) = v1;
  *(void *)(v3 + 288) = v2;
  *(unsigned char *)(v3 + 296) = v4;
  swift_endAccess();
  char v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x8000000214D37FE0, &v7);
  swift_bridgeObjectRelease();
  char v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CCBF38()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_214CCBF58, v0, 0);
}

uint64_t sub_214CCBF58()
{
  char v5 = v0;
  uint64_t v1 = v0[5];
  v0[6] = *(void *)(v1 + 1216);
  v0[7] = *(void *)(v1 + 1224);
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000020, 0x8000000214D37F60, &v4);
  swift_bridgeObjectRelease();
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  v0[8] = qword_26ACE3700;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_214CCC088;
  return sub_214C73B98();
}

uint64_t sub_214CCC088(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[10] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[5];
  if (v2)
  {
    uint64_t v8 = sub_214CCC2B8;
  }
  else
  {
    v6[11] = a2;
    v6[12] = a1;
    uint64_t v8 = sub_214CCC1C8;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_214CCC1C8()
{
  uint64_t v7 = v0;
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[5];
  swift_release();
  swift_beginAccess();
  *(void *)(v3 + 168) = v1;
  *(void *)(v3 + 176) = v2;
  *(unsigned char *)(v3 + 184) = -47;
  swift_bridgeObjectRelease();
  char v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002ALL, 0x8000000214D37F90, &v6);
  swift_bridgeObjectRelease();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CCC2B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CCC31C()
{
  *(void *)(v1 + 120) = v0;
  return MEMORY[0x270FA2498](sub_214CCC33C, v0, 0);
}

uint64_t sub_214CCC33C()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[15];
  v0[16] = *(void *)(v1 + 1216);
  v0[17] = *(void *)(v1 + 1224);
  char v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000020, 0x8000000214D37F00, &v7);
  swift_bridgeObjectRelease();
  sub_214B93DCC(v1 + 1176, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  char v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  char v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *char v4 = v0;
  v4[1] = sub_214CCC4A8;
  return v6(v2, v3);
}

uint64_t sub_214CCC4A8(uint64_t a1)
{
  char v4 = (void *)*v2;
  v4[19] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[15];
  if (v1)
  {
    char v6 = sub_214CCC740;
  }
  else
  {
    v4[20] = a1;
    char v6 = sub_214CCC5E4;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214CCC5E4()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[15];
  v0[14] = v0[20];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  sub_214B5A118((unint64_t *)&qword_26ACE3990, &qword_26ACE42E0);
  uint64_t v2 = sub_214D1A008();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_beginAccess();
  *(void *)(v1 + 440) = v2;
  *(void *)(v1 + 448) = v4;
  *(unsigned char *)(v1 + 456) = -47;
  swift_bridgeObjectRelease();
  char v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x8000000214D37F30, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CCC740()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void **)(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {

    char v3 = byte_214D2A9AE[*(char *)(v0 + 168)];
    uint64_t v4 = *(void *)(v0 + 120);
    swift_beginAccess();
    *(unsigned char *)(v4 + 456) = v3;
    *(void *)(v4 + 440) = 0;
    *(void *)(v4 + 448) = 0;
    swift_bridgeObjectRelease();

    char v7 = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x8000000214D37F30, &v7);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214CCC894()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_214CCC8B4, v0, 0);
}

uint64_t sub_214CCC8B4()
{
  uint64_t v5 = v0;
  uint64_t v1 = v0[5];
  v0[6] = *(void *)(v1 + 1216);
  v0[7] = *(void *)(v1 + 1224);
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x8000000214D37EA0, &v4);
  swift_bridgeObjectRelease();
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  v0[8] = qword_26ACE3700;
  swift_retain();
  id v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *id v2 = v0;
  v2[1] = sub_214CCC9E4;
  return sub_214C73F84();
}

uint64_t sub_214CCC9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[10] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[5];
  if (v2)
  {
    uint64_t v8 = sub_214D091AC;
  }
  else
  {
    v6[11] = a2;
    v6[12] = a1;
    uint64_t v8 = sub_214CCCB24;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_214CCCB24()
{
  uint64_t v7 = v0;
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[5];
  swift_release();
  swift_beginAccess();
  *(void *)(v3 + 144) = v1;
  *(void *)(v3 + 152) = v2;
  *(unsigned char *)(v3 + 160) = -47;
  swift_bridgeObjectRelease();
  char v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x8000000214D37ED0, &v6);
  swift_bridgeObjectRelease();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CCCC14()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x270FA2498](sub_214CCCC34, v0, 0);
}

uint64_t sub_214CCCC34()
{
  uint64_t v5 = v0;
  uint64_t v1 = v0[5];
  v0[6] = *(void *)(v1 + 1216);
  v0[7] = *(void *)(v1 + 1224);
  char v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x8000000214D37E40, &v4);
  swift_bridgeObjectRelease();
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26ACE3700;
  v0[8] = qword_26ACE3700;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214CCCD38, v2, 0);
}

uint64_t sub_214CCCD38()
{
  uint64_t v1 = sub_214C74360();
  uint64_t v3 = v2;
  v0[9] = 0;
  uint64_t v4 = v0[5];
  v0[10] = v3;
  v0[11] = v1;
  return MEMORY[0x270FA2498](sub_214CCCDCC, v4, 0);
}

uint64_t sub_214CCCDCC()
{
  uint64_t v7 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[5];
  swift_release();
  swift_beginAccess();
  *(void *)(v3 + 120) = v1;
  *(void *)(v3 + 128) = v2;
  *(unsigned char *)(v3 + 136) = -47;
  swift_bridgeObjectRelease();
  char v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x8000000214D37E70, &v6);
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CCCEBC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CCCF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[199] = v4;
  v5[198] = a4;
  v5[197] = a3;
  v5[196] = a2;
  v5[195] = a1;
  v5[200] = *v4;
  v5[201] = type metadata accessor for ODISignpost();
  v5[202] = swift_task_alloc();
  v5[203] = swift_task_alloc();
  v5[204] = swift_task_alloc();
  v5[205] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CCD014, v4, 0);
}

uint64_t sub_214CCD014()
{
  void (*v25)(uint64_t *__return_ptr, void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  unint64_t v50;
  int v51;
  unint64_t v52;
  void *v53;
  unint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t (*v69)(_OWORD *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  unsigned char *v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t *v89;
  unsigned char *v90;
  unsigned char *v91;
  _OWORD *v92;
  unint64_t *v93;
  void *v94;
  void **v95;
  void **v96;
  unint64_t *v97;
  void **v98;
  uint64_t *v99;
  uint64_t *v100;
  unsigned char *v101;
  void *v102;
  void *v103;
  uint64_t *v104;
  uint64_t (*v105)(void);
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *__src;
  uint64_t v111;
  int v112;
  int v113;
  unint64_t v114;
  uint64_t v115;
  unsigned char *v116;
  unint64_t v117;
  void __dst[130];
  uint64_t v119;
  uint64_t (*v120)(void);
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(void);

  char v129 = v0;
  uint64_t v92 = (_OWORD *)(v0 + 1200);
  char v89 = (uint64_t *)(v0 + 1408);
  uint64_t v99 = (uint64_t *)(v0 + 1440);
  uint64_t v100 = (uint64_t *)(v0 + 1424);
  char v93 = (unint64_t *)(v0 + 1488);
  char v94 = (void *)(v0 + 1472);
  char v104 = (uint64_t *)(v0 + 1456);
  uint64_t v97 = (unint64_t *)(v0 + 1520);
  char v98 = (void **)(v0 + 1504);
  char v88 = (uint64_t *)(v0 + 1536);
  uint64_t v96 = (void **)(v0 + 1512);
  char v95 = (void **)(v0 + 1552);
  uint64_t v1 = *(void **)(v0 + 1592);
  uint64_t v2 = *(void *)(v0 + 1560);
  uint64_t v3 = v1[152];
  *(void *)(v0 + 1648) = v3;
  uint64_t v4 = (uint64_t (*)(void))v1[153];
  *(void *)(v0 + 1656) = v4;
  uint64_t v5 = v1 + 14;
  swift_beginAccess();
  memcpy((void *)(v0 + 16), v5, 0x40AuLL);
  uint64_t v105 = v4;
  uint64_t v106 = v3;
  uint64_t v119 = v3;
  char v120 = v4;
  __src = (void *)(v0 + 16);
  sub_214BB6CB4(v0 + 16);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  __dst[0] = 0xD00000000000000ELL;
  __dst[1] = 0x8000000214D37CE0;
  MEMORY[0x2166AFD40](v2, &type metadata for DeviceDataField);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000015, 0x8000000214D37CE0, __dst);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1440) = 0;
  *(unsigned char *)(v0 + 1448) = 1;
  *(void *)(v0 + 1456) = 0;
  *(unsigned char *)(v0 + 1464) = 1;
  *(void *)(v0 + 1424) = 0;
  *(unsigned char *)(v0 + 1432) = 1;
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  *(void *)(v0 + 1504) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v0 + 1488) = 0u;
  *(void *)(v0 + 1472) = 0;
  *(unsigned char *)(v0 + 1480) = 1;
  *(void *)(v0 + 1512) = v7;
  *(void *)(v0 + 1552) = v7;
  *(_OWORD *)(v0 + 1520) = 0u;
  *(void *)(v0 + 1408) = 0;
  *(unsigned char *)(v0 + 1416) = 1;
  *(_OWORD *)(v0 + 1536) = 0u;
  unint64_t v8 = *(void *)(v2 + 16);
  if (v8)
  {
    uint64_t v108 = (void *)(v0 + 1120);
    char v101 = (unsigned char *)(v0 + 1464);
    char v90 = (unsigned char *)(v0 + 1432);
    uint64_t v91 = (unsigned char *)(v0 + 1448);
    uint64_t v84 = (unsigned char *)(v0 + 1416);
    uint64_t v87 = 0;
    unint64_t v9 = 0;
    char v107 = -(uint64_t)v8;
    uint64_t v10 = swift_bridgeObjectRetain() + 89;
    uint64_t v102 = (void *)MEMORY[0x263F8EE78];
    uint64_t v103 = (void *)MEMORY[0x263F8EE78];
    char v85 = v10;
    uint64_t v86 = v8;
LABEL_3:
    if (v9 <= v8) {
      unint64_t v11 = v8;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v12 = (unsigned char *)(v10 + (v9 << 6));
    unint64_t v13 = v9 + 1;
    uint64_t v109 = -(uint64_t)v11;
    do
    {
      if (v109 + v13 == 1)
      {
        __break(1u);
        JUMPOUT(0x214CCDD9CLL);
      }
      char v117 = v13;
      uint64_t v14 = *(void *)(v12 - 57);
      char v132 = *(uint64_t (**)(void))(v12 - 49);
      uint64_t v15 = *(void *)(v12 - 41);
      uint64_t v16 = *(void *)(v12 - 33);
      int v17 = *(v12 - 25);
      int v18 = *(v12 - 24);
      uint64_t v19 = *(void *)(v12 - 17);
      unint64_t v20 = *(void *)(v12 - 9);
      int v21 = *(v12 - 1);
      char v116 = v12;
      char v22 = *v12;
      memcpy(__dst, __src, 0x40AuLL);
      char v111 = v14;
      uint64_t v119 = v14;
      char v120 = v132;
      char v121 = v15;
      uint64_t v122 = v16;
      char v123 = v17;
      uint64_t v112 = v18;
      uint64_t v124 = v18;
      char v114 = v20;
      char v115 = v19;
      uint64_t v125 = v19;
      char v126 = v20;
      char v113 = v21;
      uint64_t v127 = v21;
      uint64_t v128 = v22;
      sub_214CC0658((uint64_t)&v119, (uint64_t)v108);
      uint64_t v23 = *(void *)(v0 + 1144);
      uint64_t v24 = *(void *)(v0 + 1152);
      __swift_project_boxed_opaque_existential_1(v108, v23);
      __dst[0] = v15;
      __dst[1] = v16;
      LOBYTE(__dst[2]) = v17;
      uint64_t v25 = *(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t))(v24 + 8);
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v15, v16, v17);
      v25(&v119, __dst, v23, v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      if (v119 == 210)
      {
        uint64_t v119 = v106;
        char v120 = v105;
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        sub_214D1A7A8();
        unsigned int v26 = __dst[1];
        *(void *)(v0 + 1344) = __dst[0];
        *(void *)(v0 + 1352) = v26;
        sub_214D1A108();
        *(void *)(v0 + 1056) = v111;
        *(void *)(v0 + 1064) = v132;
        *(void *)(v0 + 1072) = v15;
        *(void *)(v0 + 1080) = v16;
        *(unsigned char *)(v0 + 1088) = v17;
        *(unsigned char *)(v0 + 1089) = v112;
        *(void *)(v0 + 1096) = v115;
        *(void *)(v0 + 1104) = v20;
        *(unsigned char *)(v0 + 1112) = v21;
        *(unsigned char *)(v0 + 1113) = v22;
        sub_214D1A908();
        BOOL v27 = *(void *)(v0 + 1344);
        uint64_t v28 = *(void *)(v0 + 1352);
        LOBYTE(__dst[0]) = 14;
        CoreODILogger.debug(_:category:)(v27, v28, __dst);
        swift_bridgeObjectRelease();
        unint64_t v9 = v117;
        switch(v112)
        {
          case 1:
          case 5:
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, v17);
            uint64_t v29 = *v104;
            if (v115 < *v104) {
              uint64_t v29 = v115;
            }
            if (*v101) {
              uint64_t v30 = v115;
            }
            else {
              uint64_t v30 = v29;
            }
            *char v104 = v30;
            *char v101 = 0;
            uint64_t v31 = (unint64_t *)(v0 + 1496);
            goto LABEL_55;
          case 2:
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, v17);
            uint64_t v32 = *v99;
            if (v115 < *v99) {
              uint64_t v32 = v115;
            }
            if (*v91) {
              unint64_t v33 = v115;
            }
            else {
              unint64_t v33 = v32;
            }
            *uint64_t v99 = v33;
            *uint64_t v91 = 0;
            uint64_t v31 = (unint64_t *)(v0 + 1544);
            goto LABEL_55;
          case 6:
            swift_bridgeObjectRelease();
            if (v17)
            {
              sub_214B6F6DC(v15, v16, 1);
              char v61 = v115;
            }
            else
            {
              sub_214B6F6DC(v15, v16, 0);
              char v61 = v115;
              if (v15 == 11) {
                goto LABEL_109;
              }
            }
            char v62 = *v89;
            if (*v89 >= v61) {
              char v62 = v61;
            }
            if (*v84) {
              uint64_t v63 = v61;
            }
            else {
              uint64_t v63 = v62;
            }
            *char v89 = v63;
            *uint64_t v84 = 0;
            if (v20 > 0x10C6F7A0B5EDLL) {
              char v64 = 1;
            }
            else {
              char v64 = v113;
            }
            char v65 = 1000000 * v20;
            if (*v88 > 1000000 * v20) {
              char v65 = *v88;
            }
            if (v64) {
              uint64_t v66 = -1;
            }
            else {
              uint64_t v66 = v65;
            }
            *char v88 = v66;
LABEL_109:
            uint64_t v87 = 1;
            uint64_t v10 = v85;
            unint64_t v8 = v86;
            if (v107 + v117) {
              goto LABEL_3;
            }
            swift_bridgeObjectRelease();
            uint64_t v7 = v102;
            char v67 = v103;
            break;
          case 9:
            if (!v17) {
              goto LABEL_89;
            }
            unint64_t v34 = *v97;
            if (v20 > 0x10C6F7A0B5EDLL) {
              uint64_t v35 = 1;
            }
            else {
              uint64_t v35 = v113;
            }
            if (1000000 * v20 > v34) {
              unint64_t v34 = 1000000 * v20;
            }
            if (v35) {
              unint64_t v34 = -1;
            }
            *uint64_t v97 = v34;
            unint64_t v36 = *v100;
            if (v115 < *v100) {
              unint64_t v36 = v115;
            }
            if (*v90) {
              uint64_t v37 = v115;
            }
            else {
              uint64_t v37 = v36;
            }
            *uint64_t v100 = v37;
            *char v90 = 0;
            uint64_t v38 = *v98;
            sub_214B6F6CC(v15, v16, 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v38 = sub_214B874BC(0, v38[2] + 1, 1, v38);
            }
            uint64_t v40 = v38[2];
            uint64_t v39 = v38[3];
            if (v40 >= v39 >> 1) {
              uint64_t v38 = sub_214B874BC((void *)(v39 > 1), v40 + 1, 1, v38);
            }
            void v38[2] = v40 + 1;
            uint64_t v41 = &v38[2 * v40];
            v41[4] = v15;
            v41[5] = v16;
            sub_214B6F6DC(v15, v16, 1);
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, 1);
            int v42 = (void *)(v0 + 1504);
            goto LABEL_88;
          case 10:
            if (!v17) {
              goto LABEL_89;
            }
            sub_214B6F6CC(v15, v16, 1);
            swift_bridgeObjectRetain();
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v43 = v103;
            }
            else {
              unint64_t v43 = sub_214B874BC(0, v103[2] + 1, 1, v103);
            }
            uint64_t v45 = v43[2];
            uint64_t v44 = v43[3];
            if (v45 >= v44 >> 1) {
              unint64_t v43 = sub_214B874BC((void *)(v44 > 1), v45 + 1, 1, v43);
            }
            v43[2] = v45 + 1;
            uint64_t v103 = v43;
            goto LABEL_69;
          case 11:
            if (!v17) {
              goto LABEL_89;
            }
            uint64_t v46 = *v95;
            sub_214B6F6CC(v15, v16, 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v46 = sub_214B874BC(0, v46[2] + 1, 1, v46);
            }
            unsigned __int32 v48 = v46[2];
            uint64_t v47 = v46[3];
            if (v48 >= v47 >> 1) {
              uint64_t v46 = sub_214B874BC((void *)(v47 > 1), v48 + 1, 1, v46);
            }
            v46[2] = v48 + 1;
            char v49 = &v46[2 * v48];
            v49[4] = v15;
            v49[5] = v16;
            sub_214B6F6DC(v15, v16, 1);
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, 1);
            *char v95 = v46;
            uint64_t v31 = (unint64_t *)(v0 + 1528);
LABEL_55:
            char v50 = *v31;
            if (v114 > 0x10C6F7A0B5EDLL) {
              uint64_t v51 = 1;
            }
            else {
              uint64_t v51 = v113;
            }
            if (1000000 * v114 > v50) {
              char v50 = 1000000 * v114;
            }
            if (v51) {
              char v50 = -1;
            }
            void *v31 = v50;
            goto LABEL_8;
          case 12:
            if (!v17) {
              goto LABEL_89;
            }
            sub_214B6F6CC(v15, v16, 1);
            swift_bridgeObjectRetain();
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v43 = v102;
            }
            else {
              unint64_t v43 = sub_214B874BC(0, v102[2] + 1, 1, v102);
            }
            uint64_t v45 = v43[2];
            char v52 = v43[3];
            if (v45 >= v52 >> 1) {
              unint64_t v43 = sub_214B874BC((void *)(v52 > 1), v45 + 1, 1, v43);
            }
            v43[2] = v45 + 1;
            uint64_t v102 = v43;
LABEL_69:
            uint64_t v53 = &v43[2 * v45];
            v53[4] = v15;
            v53[5] = v16;
            sub_214B6F6DC(v15, v16, 1);
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, 1);
            goto LABEL_8;
          case 14:
            if (v17)
            {
              uint64_t v54 = *v97;
              if (v20 > 0x10C6F7A0B5EDLL) {
                char v55 = 1;
              }
              else {
                char v55 = v113;
              }
              if (1000000 * v20 > v54) {
                uint64_t v54 = 1000000 * v20;
              }
              if (v55) {
                uint64_t v54 = -1;
              }
              *char v93 = v54;
              uint64_t v56 = *v100;
              if (v115 < *v100) {
                uint64_t v56 = v115;
              }
              if (*v90) {
                uint64_t v57 = v115;
              }
              else {
                uint64_t v57 = v56;
              }
              *char v94 = v57;
              *(unsigned char *)(v0 + 1480) = 0;
              uint64_t v38 = *v96;
              sub_214B6F6CC(v15, v16, 1);
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v38 = sub_214B874BC(0, v38[2] + 1, 1, v38);
              }
              uint64_t v59 = v38[2];
              char v58 = v38[3];
              if (v59 >= v58 >> 1) {
                uint64_t v38 = sub_214B874BC((void *)(v58 > 1), v59 + 1, 1, v38);
              }
              void v38[2] = v59 + 1;
              uint64_t v60 = &v38[2 * v59];
              v60[4] = v15;
              v60[5] = v16;
              sub_214B6F6DC(v15, v16, 1);
              swift_bridgeObjectRelease();
              sub_214B6F6DC(v15, v16, 1);
              int v42 = (void *)(v0 + 1512);
LABEL_88:
              unsigned char *v42 = v38;
            }
            else
            {
LABEL_89:
              swift_bridgeObjectRelease();
              sub_214B6F6DC(v15, v16, 0);
            }
            goto LABEL_8;
          default:
            swift_bridgeObjectRelease();
            sub_214B6F6DC(v15, v16, v17);
            goto LABEL_8;
        }
        goto LABEL_112;
      }
      swift_bridgeObjectRelease();
      sub_214B6F6DC(v15, v16, v17);
      unint64_t v9 = v117;
LABEL_8:
      unint64_t v13 = v9 + 1;
      uint64_t v12 = v116 + 64;
    }
    while (v107 + v13 != 1);
    swift_bridgeObjectRelease();
    uint64_t v7 = v102;
    char v67 = v103;
    if ((v87 & 1) == 0) {
      goto LABEL_116;
    }
LABEL_112:
    *(void *)(v0 + 1672) = v67;
    *(void *)(v0 + 1664) = v7;
    char v132 = (uint64_t (*)(void))(*(void *)(v0 + 1568) + **(int **)(v0 + 1568));
    uint64_t v68 = (void *)swift_task_alloc();
    *(void *)(v0 + 1680) = v68;
    char *v68 = v0;
    v68[1] = sub_214CCDDD4;
    char v69 = (uint64_t (*)(_OWORD *))v132;
    return v69(v92);
  }
  else
  {
    char v67 = v7;
LABEL_116:
    char v132 = (uint64_t (*)(void))(v0 + 1050);
    *(void *)(v0 + 1232) = 0;
    *uint64_t v92 = 0u;
    *(_OWORD *)(v0 + 1216) = 0u;
    *(void *)(v0 + 1696) = v67;
    *(void *)(v0 + 1688) = v7;
    char v71 = *(void *)(v0 + 1656);
    uint64_t v72 = *(void *)(v0 + 1648);
    char v73 = *(void *)(v0 + 1600);
    uint64_t v74 = *(void *)(v0 + 1592);
    char v75 = *(void *)(v0 + 1584);
    uint64_t v76 = *(void *)(v0 + 1560);
    char v77 = sub_214D03FC8(&qword_26784EBF8, v6, (void (*)(uint64_t))type metadata accessor for ArmandDataFiller);
    char v78 = (void *)swift_task_alloc();
    *(void *)(v0 + 1704) = v78;
    v78[2] = v72;
    v78[3] = v71;
    v78[4] = v95;
    v78[5] = v0 + 1528;
    v78[6] = v75;
    v78[7] = v74;
    v78[8] = v89;
    v78[9] = v92;
    v78[10] = v88;
    v78[11] = v76;
    v78[12] = __src;
    v78[13] = v99;
    v78[14] = v0 + 1544;
    v78[15] = v104;
    v78[16] = v0 + 1496;
    v78[17] = v96;
    v78[18] = v94;
    v78[19] = v93;
    v78[20] = v100;
    v78[21] = v97;
    v78[22] = v98;
    v78[23] = v73;
    uint64_t v79 = (void *)swift_task_alloc();
    *(void *)(v0 + 1712) = v79;
    *uint64_t v79 = v0;
    v79[1] = sub_214CCE120;
    char v80 = MEMORY[0x263F8D4F8];
    uint64_t v131 = MEMORY[0x263F8D4F8];
    char v81 = MEMORY[0x263F8EE60] + 8;
    char v82 = v132;
    uint64_t v83 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA22B8](v82, v81, v80, v74, v77, &unk_26784EC08, v78, v83);
  }
}

uint64_t sub_214CCDDD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1592);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCDEE4, v1, 0);
}

uint64_t sub_214CCDEE4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(v2 + 1688) = *(_OWORD *)(v2 + 1664);
  uint64_t v3 = *(void *)(v2 + 1656);
  uint64_t v4 = *(void *)(v2 + 1648);
  uint64_t v14 = *(void *)(v2 + 1600);
  uint64_t v5 = *(void *)(v2 + 1592);
  uint64_t v6 = *(void *)(v2 + 1584);
  uint64_t v7 = *(void *)(v2 + 1560);
  uint64_t v15 = sub_214D03FC8(&qword_26784EBF8, a2, (void (*)(uint64_t))type metadata accessor for ArmandDataFiller);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 1704) = v8;
  void v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2 + 1552;
  v8[5] = v2 + 1528;
  v8[6] = v6;
  v8[7] = v5;
  v8[8] = v2 + 1408;
  v8[9] = v2 + 1200;
  v8[10] = v2 + 1536;
  v8[11] = v7;
  v8[12] = v2 + 16;
  v8[13] = v2 + 1440;
  v8[14] = v2 + 1544;
  v8[15] = v2 + 1456;
  v8[16] = v2 + 1496;
  v8[17] = v2 + 1512;
  v8[18] = v2 + 1472;
  v8[19] = v2 + 1488;
  v8[20] = v2 + 1424;
  v8[21] = v2 + 1520;
  v8[22] = v2 + 1504;
  v8[23] = v14;
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 1712) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_214CCE120;
  uint64_t v10 = MEMORY[0x263F8D4F8];
  uint64_t v11 = MEMORY[0x263F8EE60] + 8;
  uint64_t v12 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v2 + 1050, v11, v10, v5, v15, &unk_26784EC08, v8, v12);
}

uint64_t sub_214CCE120()
{
  uint64_t v1 = *(void *)v0 + 16;
  uint64_t v2 = *(void *)(*(void *)v0 + 1592);
  swift_task_dealloc();
  sub_214B952CC(v1);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCE260, v2, 0);
}

uint64_t sub_214CCE260()
{
  uint64_t v1 = *(void **)(v0 + 1584);
  *(unsigned char *)(v0 + 1051) = *(unsigned char *)(v0 + 1050);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1720) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214CCE368;
  return v6(v2, v3);
}

uint64_t sub_214CCE368(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1592);
  *(void *)(*(void *)v1 + 1728) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CCE480, v2, 0);
}

uint64_t sub_214CCE480()
{
  uint64_t v87 = v0;
  uint64_t v1 = *(void *)(v0 + 1688);
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(*(void *)(v0 + 1696) + 16);
    swift_bridgeObjectRelease();
    if (v9)
    {
      if (qword_26784C960 != -1) {
        swift_once();
      }
      uint64_t v10 = *(void *)(v0 + 1616);
      uint64_t v12 = qword_267863900;
      uint64_t v11 = *(void *)algn_267863908;
      char v13 = byte_267863910;
      uint64_t v14 = (void *)qword_267863918;
      int v15 = byte_267863920;
      *(void *)(v10 + 32) = "enableTelemetry=YES";
      *(void *)(v10 + 40) = 19;
      *(unsigned char *)(v10 + 48) = 2;
      *(void *)uint64_t v10 = v12;
      *(void *)(v10 + 8) = v11;
      *(unsigned char *)(v10 + 16) = v13;
      *(void *)(v10 + 24) = v14;
      id v16 = v14;
      sub_214D19EA8();
      sub_214D1A588();
      if (v15 == 1) {
        sub_214D19E88();
      }
      else {
        sub_214D19E98();
      }
      uint64_t v52 = *(void *)(v0 + 1728);
      uint64_t v53 = *(void *)(v0 + 1624);
      uint64_t v54 = *(void *)(v0 + 1616);

      sub_214D04358(v54, v53, (uint64_t (*)(void))type metadata accessor for ODISignpost);
      LOBYTE(v85) = 0;
      uint64_t v55 = sub_214CDB3C8(&v85, v52);
      *(void *)(v0 + 1760) = v56;
      if (v56)
      {
        uint64_t v57 = v55;
        uint64_t v58 = v56;
        uint64_t v59 = *(void *)(v0 + 1728);
        LOBYTE(v85) = 1;
        uint64_t v60 = sub_214CDB3C8(&v85, v59);
        *(void *)(v0 + 1768) = v61;
        if (v61)
        {
          uint64_t v62 = v60;
          uint64_t v63 = v61;
          char v64 = (void *)swift_task_alloc();
          *(void *)(v0 + 1776) = v64;
          *char v64 = v0;
          v64[1] = sub_214CCF51C;
          uint64_t v65 = v57;
          uint64_t v66 = v58;
          uint64_t v67 = v62;
          uint64_t v68 = v63;
          char v69 = 0;
LABEL_74:
          return sub_214CC8768(v65, v66, v67, v68, v69);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = *(void *)(v0 + 1728);
      LOBYTE(v85) = 16;
      uint64_t v71 = sub_214CDB3C8(&v85, v70);
      *(void *)(v0 + 1784) = v72;
      uint64_t v73 = *(void *)(v0 + 1728);
      if (v72)
      {
        uint64_t v74 = v71;
        uint64_t v75 = v72;
        LOBYTE(v85) = 17;
        uint64_t v76 = sub_214CDB3C8(&v85, v73);
        uint64_t v78 = v77;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1792) = v78;
        if (v78)
        {
          uint64_t v79 = (void *)swift_task_alloc();
          *(void *)(v0 + 1800) = v79;
          *uint64_t v79 = v0;
          v79[1] = sub_214CCF880;
          uint64_t v65 = v74;
          uint64_t v66 = v75;
          uint64_t v67 = v76;
          uint64_t v68 = v78;
          char v69 = 1;
          goto LABEL_74;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v80 = *(void *)(v0 + 1624);
      sub_214D1A578();
      sub_214D19E98();
      sub_214D043C0(v80, (uint64_t (*)(void))type metadata accessor for ODISignpost);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v81 = *(void *)(v0 + 1592);
    sub_214CC8D48();
    *(unsigned char *)(v81 + 1146) = 1;
    sub_214B59CE0(v0 + 1200, &qword_26784EC18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v82 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v83 = *(unsigned __int8 *)(v0 + 1051);
    return v82(v83);
  }
  if (qword_26784C968 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = qword_267863928;
  uint64_t v4 = unk_267863930;
  char v5 = byte_267863938;
  uint64_t v6 = (void *)qword_267863940;
  int v7 = byte_267863948;
  *(void *)(v2 + 32) = "enableTelemetry=YES";
  *(void *)(v2 + 40) = 19;
  *(unsigned char *)(v2 + 48) = 2;
  *(void *)uint64_t v2 = v3;
  *(void *)(v2 + 8) = v4;
  *(unsigned char *)(v2 + 16) = v5;
  *(void *)(v2 + 24) = v6;
  id v8 = v6;
  sub_214D19EA8();
  sub_214D1A588();
  if (v7 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v17 = *(void *)(v0 + 1640);
  uint64_t v18 = *(void *)(v0 + 1632);

  sub_214D04358(v18, v17, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  uint64_t v19 = *(void *)(v1 + 16);
  if (v19)
  {
    uint64_t v20 = *(void *)(v0 + 1688) + 40;
    int v21 = (char *)MEMORY[0x263F8EE78];
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_214D1A998();
      if (v23 == 2)
      {
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v21 = sub_214B87EDC(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v27 = *((void *)v21 + 2);
        unint64_t v26 = *((void *)v21 + 3);
        if (v27 >= v26 >> 1) {
          int v21 = sub_214B87EDC((char *)(v26 > 1), v27 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v27 + 1;
        v21[v27 + 32] = 2;
      }
      else if (v23 == 1)
      {
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v21 = sub_214B87EDC(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v29 = *((void *)v21 + 2);
        unint64_t v28 = *((void *)v21 + 3);
        if (v29 >= v28 >> 1) {
          int v21 = sub_214B87EDC((char *)(v28 > 1), v29 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v29 + 1;
        v21[v29 + 32] = 1;
      }
      else if (v23)
      {
        unint64_t v85 = 0;
        unint64_t v86 = 0xE000000000000000;
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        unint64_t v85 = 0xD000000000000025;
        unint64_t v86 = 0x8000000214D37D00;
        sub_214D1A108();
        swift_bridgeObjectRelease();
        uint64_t v22 = v85;
        LOBYTE(v85) = 14;
        CoreODILogger.info(_:category:)(v22, v86, &v85);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v21 = sub_214B87EDC(0, *((void *)v21 + 2) + 1, 1, v21);
        }
        unint64_t v25 = *((void *)v21 + 2);
        unint64_t v24 = *((void *)v21 + 3);
        if (v25 >= v24 >> 1) {
          int v21 = sub_214B87EDC((char *)(v24 > 1), v25 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v25 + 1;
        v21[v25 + 32] = 0;
      }
      v20 += 16;
      --v19;
    }
    while (v19);
  }
  else
  {
    int v21 = (char *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_214CFCCB8((uint64_t)v21);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_214CDC814(v30, &qword_26784CFC0);
  *(void *)(v0 + 1736) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    uint64_t v33 = *(void *)(v0 + 1728);
    swift_retain();
    uint64_t v34 = 0;
    uint64_t v35 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (*(unsigned char *)(v31 + v34 + 32))
      {
        if (*(unsigned char *)(v31 + v34 + 32) == 1)
        {
          if (*(void *)(v33 + 16))
          {
            uint64_t v36 = sub_214B87FEC(0x6E6F685072656570, 0xEF7265626D754E65);
            if (v37)
            {
              sub_214B93DCC(*(void *)(v33 + 56) + 40 * v36, v0 + 1240);
              __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
              int v38 = swift_dynamicCast();
              uint64_t v39 = *(void *)(v0 + 1360);
              uint64_t v40 = *(void *)(v0 + 1368);
LABEL_48:
              if (v38) {
                uint64_t v45 = v39;
              }
              else {
                uint64_t v45 = 0;
              }
              if (v38) {
                uint64_t v46 = v40;
              }
              else {
                uint64_t v46 = 0;
              }
              goto LABEL_55;
            }
          }
        }
        else if (*(void *)(v33 + 16))
        {
          uint64_t v43 = sub_214B87FEC(0xD000000000000014, 0x8000000214D2DCF0);
          if (v44)
          {
            sub_214B93DCC(*(void *)(v33 + 56) + 40 * v43, v0 + 1280);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
            int v38 = swift_dynamicCast();
            uint64_t v39 = *(void *)(v0 + 1392);
            uint64_t v40 = *(void *)(v0 + 1400);
            goto LABEL_48;
          }
        }
      }
      else if (*(void *)(v33 + 16))
      {
        uint64_t v41 = sub_214B87FEC(0x6D754E656E6F6870, 0xEB00000000726562);
        if (v42)
        {
          sub_214B93DCC(*(void *)(v33 + 56) + 40 * v41, v0 + 1160);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
          int v38 = swift_dynamicCast();
          uint64_t v39 = *(void *)(v0 + 1376);
          uint64_t v40 = *(void *)(v0 + 1384);
          goto LABEL_48;
        }
      }
      uint64_t v45 = 0;
      uint64_t v46 = 0;
LABEL_55:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_214B87DCC(0, v35[2] + 1, 1, v35);
      }
      unint64_t v48 = v35[2];
      unint64_t v47 = v35[3];
      if (v48 >= v47 >> 1) {
        uint64_t v35 = sub_214B87DCC((void *)(v47 > 1), v48 + 1, 1, v35);
      }
      v35[2] = v48 + 1;
      char v49 = &v35[2 * v48];
      v49[4] = v45;
      v49[5] = v46;
      if (v32 == ++v34)
      {
        swift_release();
        goto LABEL_62;
      }
    }
  }
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
LABEL_62:
  *(void *)(v0 + 1744) = v35;
  char v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 1752) = v50;
  *char v50 = v0;
  v50[1] = sub_214CCEF74;
  uint64_t v51 = *(void *)(v0 + 1592);
  v50[8] = v31;
  v50[9] = v51;
  v50[7] = v35;
  return MEMORY[0x270FA2498](sub_214CC842C, v51, 0);
}

uint64_t sub_214CCEF74()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1592);
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214CCF0C4, v1, 0);
}

uint64_t sub_214CCF0C4()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 1640);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  uint64_t v2 = *(void *)(*(void *)(v0 + 1696) + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
    if (qword_26784C960 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 1616);
    uint64_t v5 = qword_267863900;
    uint64_t v4 = *(void *)algn_267863908;
    char v6 = byte_267863910;
    int v7 = (void *)qword_267863918;
    int v8 = byte_267863920;
    *(void *)(v3 + 32) = "enableTelemetry=YES";
    *(void *)(v3 + 40) = 19;
    *(unsigned char *)(v3 + 48) = 2;
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = v4;
    *(unsigned char *)(v3 + 16) = v6;
    *(void *)(v3 + 24) = v7;
    id v9 = v7;
    sub_214D19EA8();
    sub_214D1A588();
    if (v8 == 1) {
      sub_214D19E88();
    }
    else {
      sub_214D19E98();
    }
    uint64_t v10 = *(void *)(v0 + 1728);
    uint64_t v11 = *(void *)(v0 + 1624);
    uint64_t v12 = *(void *)(v0 + 1616);

    sub_214D04358(v12, v11, (uint64_t (*)(void))type metadata accessor for ODISignpost);
    char v43 = 0;
    uint64_t v13 = sub_214CDB3C8(&v43, v10);
    *(void *)(v0 + 1760) = v14;
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      uint64_t v17 = *(void *)(v0 + 1728);
      char v46 = 1;
      uint64_t v18 = sub_214CDB3C8(&v46, v17);
      *(void *)(v0 + 1768) = v19;
      if (v19)
      {
        uint64_t v20 = v18;
        uint64_t v21 = v19;
        uint64_t v22 = (void *)swift_task_alloc();
        *(void *)(v0 + 1776) = v22;
        *uint64_t v22 = v0;
        v22[1] = sub_214CCF51C;
        uint64_t v23 = v15;
        uint64_t v24 = v16;
        uint64_t v25 = v20;
        uint64_t v26 = v21;
        char v27 = 0;
LABEL_15:
        return sub_214CC8768(v23, v24, v25, v26, v27);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = *(void *)(v0 + 1728);
    char v44 = 16;
    uint64_t v29 = sub_214CDB3C8(&v44, v28);
    *(void *)(v0 + 1784) = v30;
    uint64_t v31 = *(void *)(v0 + 1728);
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      char v45 = 17;
      uint64_t v34 = sub_214CDB3C8(&v45, v31);
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1792) = v36;
      if (v36)
      {
        char v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 1800) = v37;
        *char v37 = v0;
        v37[1] = sub_214CCF880;
        uint64_t v23 = v32;
        uint64_t v24 = v33;
        uint64_t v25 = v34;
        uint64_t v26 = v36;
        char v27 = 1;
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)(v0 + 1624);
    sub_214D1A578();
    sub_214D19E98();
    sub_214D043C0(v39, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = *(void *)(v0 + 1592);
  sub_214CC8D48();
  *(unsigned char *)(v40 + 1146) = 1;
  sub_214B59CE0(v0 + 1200, &qword_26784EC18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v42 = *(unsigned __int8 *)(v0 + 1051);
  return v41(v42);
}

uint64_t sub_214CCF51C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1592);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214CCF66C, v1, 0);
}

uint64_t sub_214CCF66C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 1728);
  char v16 = 16;
  uint64_t v2 = sub_214CDB3C8(&v16, v1);
  *(void *)(v0 + 1784) = v3;
  uint64_t v4 = *(void *)(v0 + 1728);
  if (v3
    && (uint64_t v5 = v2,
        uint64_t v6 = v3,
        char v17 = 17,
        uint64_t v7 = sub_214CDB3C8(&v17, v4),
        uint64_t v9 = v8,
        swift_bridgeObjectRelease(),
        (*(void *)(v0 + 1792) = v9) != 0))
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1800) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_214CCF880;
    return sub_214CC8768(v5, v6, v7, v9, 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v0 + 1624);
    sub_214D1A578();
    sub_214D19E98();
    sub_214D043C0(v12, (uint64_t (*)(void))type metadata accessor for ODISignpost);
    uint64_t v13 = *(void *)(v0 + 1592);
    sub_214CC8D48();
    *(unsigned char *)(v13 + 1146) = 1;
    sub_214B59CE0(v0 + 1200, &qword_26784EC18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v15 = *(unsigned __int8 *)(v0 + 1051);
    return v14(v15);
  }
}

uint64_t sub_214CCF880()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1592);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214CCF9D0, v1, 0);
}

uint64_t sub_214CCF9D0()
{
  uint64_t v1 = *(void *)(v0 + 1624);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  uint64_t v2 = *(void *)(v0 + 1592);
  sub_214CC8D48();
  *(unsigned char *)(v2 + 1146) = 1;
  sub_214B59CE0(v0 + 1200, &qword_26784EC18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 1051);
  return v3(v4);
}

uint64_t sub_214CCFAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a1)
  {
    case 3:
      return sub_214D1A328();
    case 2:
      return MEMORY[0x270FA1F00](21);
    case 1:
      return sub_214D1A338();
    default:
      v4[2] = a2;
      v4[3] = a3;
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      v4[0] = 0xD00000000000000ELL;
      v4[1] = 0x8000000214D38860;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0xD000000000000030, 0x8000000214D38860, v4);
      swift_bridgeObjectRelease();
      return sub_214D1A328();
  }
}

uint64_t sub_214CCFC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1272) = v20;
  *(void *)(v8 + 1264) = v19;
  *(_OWORD *)(v8 + 1248) = v18;
  *(_OWORD *)(v8 + 1232) = v17;
  *(_OWORD *)(v8 + 1216) = v16;
  *(_OWORD *)(v8 + 1200) = v15;
  *(_OWORD *)(v8 + 1184) = v14;
  *(_OWORD *)(v8 + 1168) = v13;
  *(_OWORD *)(v8 + 1152) = v12;
  *(void *)(v8 + 1144) = a8;
  *(void *)(v8 + 1136) = a7;
  *(void *)(v8 + 1128) = a6;
  *(void *)(v8 + 1120) = a5;
  *(void *)(v8 + 1112) = a4;
  *(void *)(v8 + 1104) = a3;
  *(void *)(v8 + 1096) = a2;
  *(void *)(v8 + 1088) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  *(void *)(v8 + 1280) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CCFD40, a8, 0);
}

uint64_t sub_214CCFD40()
{
  uint64_t v198 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = *(uint64_t **)(v0 + 1120);
  uint64_t v3 = *(void *)(v0 + 1112);
  __dst[0] = *(void *)(v0 + 1104);
  __dst[1] = v3;
  LOBYTE(v195[0]) = 14;
  CoreODILogger.info(_:category:)(0xD00000000000001BLL, 0x8000000214D38460, v195);
  uint64_t v4 = *v2;
  uint64_t v192 = v0;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v5 = *(void *)(v0 + 1280);
    uint64_t v6 = *(void *)(v0 + 1272);
    uint64_t v7 = *(void *)(v0 + 1144);
    uint64_t v8 = *(void *)(v0 + 1136);
    uint64_t v9 = *(uint64_t **)(v0 + 1128);
    uint64_t v10 = *(void *)(v0 + 1112);
    uint64_t v11 = *(void *)(v0 + 1104);
    uint64_t v12 = sub_214D1A368();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
    uint64_t v13 = *v9;
    sub_214B93DCC(v8, v0 + 552);
    long long v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v13;
    sub_214B59EC0((long long *)(v0 + 552), (uint64_t)(v14 + 5));
    v14[10] = v4;
    v14[11] = v11;
    uint64_t v1 = v0;
    v14[12] = v10;
    v14[13] = v7;
    v14[14] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_214C78F34(v5, (uint64_t)&unk_26784F0A8, (uint64_t)v14);
    sub_214B59CE0(v5, (uint64_t *)&unk_26ACE4338);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 1112);
    __dst[0] = *(void *)(v0 + 1104);
    __dst[1] = v15;
    LOBYTE(v195[0]) = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001CLL, 0x8000000214D385E0, v195);
  }
  uint64_t v16 = *(void *)(v1 + 1152);
  if ((*(unsigned char *)(v16 + 8) & 1) == 0)
  {
    long long v17 = (long long *)(v1 + 592);
    uint64_t v18 = v1;
    uint64_t v19 = *(void *)v16;
    sub_214B95764(*(void *)(v18 + 1160), (uint64_t)v17, &qword_26784EC18);
    if (*(void *)(v18 + 616))
    {
      uint64_t v20 = *(void *)(v18 + 1280);
      uint64_t v21 = *(uint64_t **)(v18 + 1168);
      uint64_t v22 = *(void *)(v18 + 1144);
      uint64_t v23 = *(void *)(v18 + 1112);
      uint64_t v24 = *(void *)(v18 + 1104);
      sub_214B59EC0(v17, v18 + 312);
      sub_214CCFAF0(v19, v24, v23);
      uint64_t v25 = sub_214D1A368();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 0, 1, v25);
      uint64_t v26 = *v21;
      sub_214B93DCC(v18 + 312, v18 + 272);
      char v27 = (void *)swift_allocObject();
      v27[2] = 0;
      v27[3] = 0;
      v27[4] = v26;
      v27[5] = v22;
      sub_214B59EC0((long long *)(v18 + 272), (uint64_t)(v27 + 6));
      v27[11] = v24;
      v27[12] = v23;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_214C78F34(v20, (uint64_t)&unk_26784F180, (uint64_t)v27);
      sub_214B59CE0(v20, (uint64_t *)&unk_26ACE4338);
      __swift_destroy_boxed_opaque_existential_1(v18 + 312);
    }
    else
    {
      sub_214B59CE0((uint64_t)v17, &qword_26784EC18);
    }
    uint64_t v1 = v192;
  }
  uint64_t v28 = *(void *)(v1 + 1176);
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v162 = v1 + 392;
    long long v160 = (long long *)(v1 + 472);
    v189 = (void *)(v1 + 352);
    uint64_t v190 = v1 + 632;
    uint64_t v173 = v1 + 704;
    uint64_t v174 = v1 + 680;
    uint64_t v171 = v1 + 848;
    uint64_t v172 = v1 + 800;
    uint64_t v180 = v1 + 896;
    uint64_t v169 = v1 + 920;
    uint64_t v170 = v1 + 872;
    uint64_t v188 = v1 + 776;
    uint64_t v168 = v1 + 1048;
    v184 = (_OWORD *)(v1 + 80);
    v185 = (_OWORD *)(v1 + 16);
    uint64_t v30 = (_OWORD *)(v1 + 208);
    v179 = (unsigned char *)(v1 + 728);
    v178 = (unsigned char *)(v1 + 752);
    v176 = (unsigned __int8 *)(v1 + 824);
    v177 = (unsigned char *)(v1 + 944);
    uint64_t v182 = *(void *)(v1 + 1192);
    v183 = (unsigned char *)(v1 + 656);
    uint64_t v31 = (long long *)(v28 + 32);
    v186 = (_OWORD *)(v1 + 144);
    uint64_t v187 = v1 + 224;
    v165 = (unsigned char *)(v1 + 1040);
    uint64_t v166 = v1 + 256;
    v181 = (unsigned char *)(v1 + 672);
    long long v163 = (unsigned __int8 *)(v1 + 936);
    long long v164 = (unsigned char *)(v1 + 960);
    swift_bridgeObjectRetain();
    long long v161 = (long long *)(v1 + 432);
    v167 = (void *)(v1 + 1032);
    do
    {
      uint64_t v191 = v29;
      char v37 = *(const void **)(v1 + 1184);
      uint64_t v38 = *(void *)(v1 + 1112);
      uint64_t v39 = *(void *)(v192 + 1104);
      long long v41 = v31[1];
      long long v40 = v31[2];
      long long v42 = *v31;
      *(_OWORD *)((char *)v30 + 42) = *(long long *)((char *)v31 + 42);
      v30[1] = v41;
      v30[2] = v40;
      *uint64_t v30 = v42;
      sub_214D04B30(v187, v190);
      *(void *)&v195[0] = v39;
      *((void *)&v195[0] + 1) = v38;
      __dst[0] = 0;
      __dst[1] = 0xE000000000000000;
      sub_214D04B8C((uint64_t)v30);
      sub_214D1A7A8();
      uint64_t v43 = __dst[1];
      *(void *)(v192 + 1016) = __dst[0];
      *(void *)(v192 + 1024) = v43;
      sub_214D1A108();
      long long v44 = v30[1];
      _OWORD *v186 = *v30;
      v186[1] = v44;
      v186[2] = v30[2];
      *(_OWORD *)((char *)v186 + 42) = *(_OWORD *)((char *)v30 + 42);
      sub_214D1A908();
      uint64_t v45 = *(void *)(v192 + 1016);
      unint64_t v46 = *(void *)(v192 + 1024);
      LOBYTE(__dst[0]) = 5;
      CoreODILogger.debug(_:category:)(v45, v46, __dst);
      swift_bridgeObjectRelease();
      memcpy(__dst, v37, 0x40AuLL);
      long long v47 = v30[1];
      v195[0] = *v30;
      v195[1] = v47;
      *(_OWORD *)v196 = v30[2];
      *(_OWORD *)&v196[10] = *(_OWORD *)((char *)v30 + 42);
      sub_214CC0658((uint64_t)v195, (uint64_t)v189);
      uint64_t v48 = *(void *)(v192 + 376);
      uint64_t v49 = *(void *)(v192 + 384);
      __swift_project_boxed_opaque_existential_1(v189, v48);
      sub_214D04B30(v190, v188);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v49 + 8))(__dst, v188, v48, v49);
      uint64_t v1 = v192;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
      uint64_t v50 = *(void *)(v192 + 1112);
      if (LOBYTE(__dst[0]) == 210)
      {
        uint64_t v51 = *(void *)(v192 + 248);
        uint64_t v52 = *(unsigned __int8 *)(v192 + 241);
        *(void *)&v195[0] = *(void *)(v192 + 1104);
        *((void *)&v195[0] + 1) = v50;
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        sub_214D1A7A8();
        uint64_t v53 = __dst[1];
        *(void *)(v192 + 968) = __dst[0];
        *(void *)(v192 + 976) = v53;
        sub_214D1A108();
        long long v54 = v30[1];
        _OWORD *v185 = *v30;
        v185[1] = v54;
        v185[2] = v30[2];
        *(_OWORD *)((char *)v185 + 42) = *(_OWORD *)((char *)v30 + 42);
        sub_214D1A908();
        uint64_t v55 = *(void *)(v192 + 968);
        unint64_t v56 = *(void *)(v192 + 976);
        LOBYTE(__dst[0]) = 14;
        CoreODILogger.debug(_:category:)(v55, v56, __dst);
        swift_bridgeObjectRelease();
        switch(v52)
        {
          case 1:
          case 5:
            goto LABEL_15;
          case 2:
            uint64_t v66 = *(uint64_t **)(v192 + 1192);
            if ((*(unsigned char *)(v182 + 8) & 1) == 0 && v51 >= *v66) {
              uint64_t v51 = *v66;
            }
            uint64_t v67 = *(unint64_t **)(v192 + 1200);
            sub_214B6AC38(v166, v168, &qword_26ACE39C8);
            *uint64_t v66 = v51;
            *(unsigned char *)(v182 + 8) = 0;
            unint64_t v68 = *v67;
            sub_214D04BD8((uint64_t)v30);
            sub_214B6AC38(v168, (uint64_t)v167, &qword_26ACE39C8);
            if ((*v165 & 1) != 0 || *v167 > 0x10C6F7A0B5EDuLL)
            {
              unint64_t v69 = -1;
            }
            else
            {
              unint64_t v69 = 1000000 * *v167;
              if (v69 <= v68) {
                unint64_t v69 = v68;
              }
            }
            uint64_t v36 = v191;
            uint64_t v1 = v192;
            **(void **)(v192 + 1200) = v69;
            break;
          case 3:
            sub_214D04B30(v190, (uint64_t)v178);
            uint64_t v1 = v192;
            if ((v181[96] & 1) != 0 || *v178 != 1) {
              goto LABEL_53;
            }
            uint64_t v58 = *(void *)(v192 + 1280);
            uint64_t v70 = *(void *)(v192 + 1144);
            uint64_t v71 = *(void *)(v192 + 1112);
            uint64_t v72 = *(void *)(v192 + 1104);
            sub_214CCFAF0(v51, v72, v71);
            uint64_t v73 = sub_214D1A368();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v58, 0, 1, v73);
            uint64_t v63 = swift_allocObject();
            *(void *)(v63 + 16) = 0;
            *(void *)(v63 + 24) = 0;
            long long v74 = v30[1];
            *(_OWORD *)(v63 + 32) = *v30;
            *(_OWORD *)(v63 + 48) = v74;
            *(_OWORD *)(v63 + 64) = v30[2];
            *(_OWORD *)(v63 + 74) = *(_OWORD *)((char *)v30 + 42);
            *(void *)(v63 + 96) = v70;
            *(void *)(v63 + 104) = v72;
            *(void *)(v63 + 112) = v71;
            uint64_t v1 = v192;
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v65 = &unk_26784F160;
            goto LABEL_30;
          case 4:
            uint64_t v58 = *(void *)(v192 + 1280);
            uint64_t v75 = *(void *)(v192 + 1144);
            uint64_t v76 = *(void *)(v192 + 1112);
            uint64_t v77 = *(void *)(v192 + 1104);
            sub_214D0503C(v190);
            sub_214CCFAF0(v51, v77, v76);
            uint64_t v78 = sub_214D1A368();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v58, 0, 1, v78);
            uint64_t v79 = swift_allocObject();
            *(void *)(v79 + 16) = 0;
            *(void *)(v79 + 24) = 0;
            long long v80 = v30[1];
            *(_OWORD *)(v79 + 32) = *v30;
            *(_OWORD *)(v79 + 48) = v80;
            *(_OWORD *)(v79 + 64) = v30[2];
            *(_OWORD *)(v79 + 74) = *(_OWORD *)((char *)v30 + 42);
            *(void *)(v79 + 96) = v75;
            *(void *)(v79 + 104) = v77;
            *(void *)(v79 + 112) = v76;
            uint64_t v1 = v192;
            swift_bridgeObjectRetain();
            swift_retain();
            sub_214D04B8C((uint64_t)v30);
            sub_214C78F34(v58, (uint64_t)&unk_26784F150, v79);
            sub_214D05070(v190);
            goto LABEL_43;
          case 6:
            sub_214D04B30(v190, (uint64_t)v183);
            if ((*v181 & 1) != 0 || *v183 != 11)
            {
LABEL_15:
              sub_214D04BD8((uint64_t)v30);
              uint64_t v36 = v191;
              uint64_t v1 = v192;
              break;
            }
            uint64_t v1 = v192;
            sub_214B95764(*(void *)(v192 + 1160), (uint64_t)v161, &qword_26784EC18);
            if (*(void *)(v192 + 456))
            {
              uint64_t v81 = *(void *)(v192 + 1280);
              uint64_t v159 = *(void *)(v192 + 1144);
              uint64_t v82 = *(void *)(v192 + 1112);
              uint64_t v83 = *(void *)(v192 + 1104);
              sub_214B59EC0(v161, v162);
              sub_214CCFAF0(v51, v83, v82);
              uint64_t v84 = sub_214D1A368();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v81, 0, 1, v84);
              sub_214B93DCC(v162, (uint64_t)v160);
              uint64_t v85 = swift_allocObject();
              *(void *)(v85 + 16) = 0;
              *(void *)(v85 + 24) = 0;
              long long v86 = v30[1];
              *(_OWORD *)(v85 + 32) = *v30;
              *(_OWORD *)(v85 + 48) = v86;
              *(_OWORD *)(v85 + 64) = v30[2];
              *(_OWORD *)(v85 + 74) = *(_OWORD *)((char *)v30 + 42);
              *(void *)(v85 + 96) = v159;
              sub_214B59EC0(v160, v85 + 104);
              *(void *)(v85 + 144) = v83;
              *(void *)(v85 + 152) = v82;
              swift_bridgeObjectRetain();
              swift_retain();
              uint64_t v87 = v85;
              uint64_t v1 = v192;
              sub_214C78F34(v81, (uint64_t)&unk_26784F140, v87);
              sub_214B59CE0(v81, (uint64_t *)&unk_26ACE4338);
              __swift_destroy_boxed_opaque_existential_1(v162);
            }
            else
            {
              uint64_t v175 = *(void *)(v192 + 1112);
              uint64_t v106 = *(void *)(v192 + 1104);
              sub_214B59CE0((uint64_t)v161, &qword_26784EC18);
              __dst[0] = v106;
              __dst[1] = v175;
              LOBYTE(v195[0]) = 5;
              CoreODILogger.error(_:category:)(0xD00000000000003ELL, 0x8000000214D385A0, v195);
LABEL_52:
              sub_214D04BD8((uint64_t)v30);
            }
            goto LABEL_54;
          case 7:
            sub_214D04B30(v190, (uint64_t)v179);
            uint64_t v1 = v192;
            if ((v181[72] & 1) != 0 || *v179 != 12) {
              goto LABEL_53;
            }
            uint64_t v58 = *(void *)(v192 + 1280);
            uint64_t v88 = *(void *)(v192 + 1144);
            sub_214CCFAF0(v51, *(void *)(v192 + 1104), *(void *)(v192 + 1112));
            uint64_t v89 = sub_214D1A368();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v58, 0, 1, v89);
            char v90 = (void *)swift_allocObject();
            v90[2] = 0;
            v90[3] = 0;
            v90[4] = v88;
            uint64_t v1 = v192;
            swift_retain();
            uint64_t v91 = &unk_26784F130;
            goto LABEL_42;
          case 8:
            sub_214D04B30(v190, (uint64_t)v177);
            uint64_t v1 = v192;
            if ((*v164 & 1) != 0 || *v177 != 13) {
              goto LABEL_53;
            }
            uint64_t v58 = *(void *)(v192 + 1280);
            uint64_t v92 = *(void *)(v192 + 1144);
            sub_214CCFAF0(v51, *(void *)(v192 + 1104), *(void *)(v192 + 1112));
            uint64_t v93 = sub_214D1A368();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v58, 0, 1, v93);
            char v90 = (void *)swift_allocObject();
            v90[2] = 0;
            v90[3] = 0;
            v90[4] = v92;
            uint64_t v1 = v192;
            swift_retain();
            uint64_t v91 = &unk_26784F170;
            goto LABEL_42;
          case 9:
            sub_214D04B30(v190, v174);
            int v94 = v181[24];
            goto LABEL_51;
          case 10:
            sub_214D04B30(v190, v173);
            int v94 = v181[48];
            goto LABEL_51;
          case 11:
            sub_214D04B30(v190, v171);
            int v94 = v181[192];
            goto LABEL_51;
          case 12:
            sub_214D04B30(v190, v170);
            int v94 = v181[216];
            goto LABEL_51;
          case 13:
            sub_214D04B30(v190, v172);
            int v94 = v181[144];
            goto LABEL_51;
          case 14:
            sub_214D04B30(v190, v169);
            int v94 = *v163;
LABEL_51:
            uint64_t v1 = v192;
            if (v94 == 1) {
              goto LABEL_52;
            }
            goto LABEL_53;
          default:
            sub_214D04B30(v190, (uint64_t)v176);
            uint64_t v1 = v192;
            if (v181[168]) {
              goto LABEL_53;
            }
            int v57 = *v176;
            switch(v57)
            {
              case 17:
                uint64_t v58 = *(void *)(v192 + 1280);
                uint64_t v97 = *(void *)(v192 + 1144);
                uint64_t v98 = *(void *)(v192 + 1112);
                uint64_t v99 = *(void *)(v192 + 1104);
                sub_214CCFAF0(v51, v99, v98);
                uint64_t v100 = sub_214D1A368();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v58, 0, 1, v100);
                char v90 = (void *)swift_allocObject();
                v90[2] = 0;
                v90[3] = 0;
                v90[4] = v97;
                v90[5] = v99;
                v90[6] = v98;
                uint64_t v1 = v192;
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v91 = &unk_26784F100;
LABEL_42:
                sub_214C78F34(v58, (uint64_t)v91, (uint64_t)v90);
LABEL_43:
                sub_214D04BD8((uint64_t)v30);
                goto LABEL_44;
              case 16:
                uint64_t v58 = *(void *)(v192 + 1280);
                uint64_t v101 = *(void *)(v192 + 1144);
                uint64_t v102 = *(void *)(v192 + 1112);
                uint64_t v103 = *(void *)(v192 + 1104);
                sub_214CCFAF0(v51, v103, v102);
                uint64_t v104 = sub_214D1A368();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v58, 0, 1, v104);
                uint64_t v63 = swift_allocObject();
                *(void *)(v63 + 16) = 0;
                *(void *)(v63 + 24) = 0;
                long long v105 = v30[1];
                *(_OWORD *)(v63 + 32) = *v30;
                *(_OWORD *)(v63 + 48) = v105;
                *(_OWORD *)(v63 + 64) = v30[2];
                *(_OWORD *)(v63 + 74) = *(_OWORD *)((char *)v30 + 42);
                *(void *)(v63 + 96) = v101;
                *(void *)(v63 + 104) = v103;
                *(void *)(v63 + 112) = v102;
                uint64_t v1 = v192;
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v65 = &unk_26784F110;
                goto LABEL_30;
              case 15:
                uint64_t v58 = *(void *)(v192 + 1280);
                uint64_t v59 = *(void *)(v192 + 1144);
                uint64_t v60 = *(void *)(v192 + 1112);
                uint64_t v61 = *(void *)(v192 + 1104);
                sub_214CCFAF0(v51, v61, v60);
                uint64_t v62 = sub_214D1A368();
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v58, 0, 1, v62);
                uint64_t v63 = swift_allocObject();
                *(void *)(v63 + 16) = 0;
                *(void *)(v63 + 24) = 0;
                long long v64 = v30[1];
                *(_OWORD *)(v63 + 32) = *v30;
                *(_OWORD *)(v63 + 48) = v64;
                *(_OWORD *)(v63 + 64) = v30[2];
                *(_OWORD *)(v63 + 74) = *(_OWORD *)((char *)v30 + 42);
                *(void *)(v63 + 96) = v59;
                *(void *)(v63 + 104) = v61;
                *(void *)(v63 + 112) = v60;
                uint64_t v1 = v192;
                swift_bridgeObjectRetain();
                swift_retain();
                uint64_t v65 = &unk_26784F120;
LABEL_30:
                sub_214C78F34(v58, (uint64_t)v65, v63);
LABEL_44:
                sub_214B59CE0(v58, (uint64_t *)&unk_26ACE4338);
                goto LABEL_54;
            }
LABEL_53:
            uint64_t v95 = *(void *)(v1 + 1112);
            *(void *)&v195[0] = *(void *)(v1 + 1104);
            *((void *)&v195[0] + 1) = v95;
            __dst[0] = 0;
            __dst[1] = 0xE000000000000000;
            sub_214D1A7A8();
            swift_bridgeObjectRelease();
            __dst[0] = 0xD000000000000022;
            __dst[1] = 0x8000000214D38570;
            char v197 = v52;
            ArmandDataSource.rawValue.getter();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            sub_214D1A108();
            sub_214D04B30(v190, v180);
            sub_214D0503C(v190);
            AssessmentConfigFieldName.description.getter();
            sub_214D1A108();
            swift_bridgeObjectRelease();
            sub_214D05070(v190);
            uint64_t v96 = __dst[0];
            LOBYTE(__dst[0]) = 14;
            CoreODILogger.warning(_:category:)(v96, __dst[1], __dst);
            swift_bridgeObjectRelease();
            sub_214D04BD8((uint64_t)v30);
LABEL_54:
            uint64_t v36 = v191;
            break;
        }
      }
      else
      {
        *(void *)&v195[0] = *(void *)(v192 + 1104);
        *((void *)&v195[0] + 1) = v50;
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        sub_214D1A7A8();
        uint64_t v32 = __dst[1];
        *(void *)(v192 + 984) = __dst[0];
        *(void *)(v192 + 992) = v32;
        sub_214D1A108();
        long long v33 = v30[1];
        _OWORD *v184 = *v30;
        v184[1] = v33;
        v184[2] = v30[2];
        *(_OWORD *)((char *)v184 + 42) = *(_OWORD *)((char *)v30 + 42);
        sub_214D1A908();
        sub_214D04BD8((uint64_t)v30);
        uint64_t v34 = *(void *)(v192 + 984);
        unint64_t v35 = *(void *)(v192 + 992);
        LOBYTE(__dst[0]) = 5;
        CoreODILogger.debug(_:category:)(v34, v35, __dst);
        swift_bridgeObjectRelease();
        uint64_t v36 = v191;
      }
      v31 += 4;
      uint64_t v29 = v36 - 1;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  uint64_t v107 = *(void *)(v1 + 1192);
  if ((*(unsigned char *)(v107 + 8) & 1) == 0)
  {
    uint64_t v108 = *(void *)(v1 + 1280);
    uint64_t v109 = *(uint64_t **)(v1 + 1200);
    uint64_t v110 = *(void *)(v1 + 1144);
    uint64_t v111 = *(void *)(v1 + 1112);
    uint64_t v112 = *(void *)(v1 + 1104);
    sub_214CCFAF0(*(void *)v107, v112, v111);
    uint64_t v113 = sub_214D1A368();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v108, 0, 1, v113);
    uint64_t v114 = *v109;
    char v115 = (void *)swift_allocObject();
    v115[2] = 0;
    v115[3] = 0;
    v115[4] = v114;
    v115[5] = v110;
    v115[6] = v112;
    unsigned char v115[7] = v111;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_214C78F34(v108, (uint64_t)&unk_26784F0F0, (uint64_t)v115);
    sub_214B59CE0(v108, (uint64_t *)&unk_26ACE4338);
  }
  uint64_t v116 = *(void *)(v1 + 1208);
  if ((*(unsigned char *)(v116 + 8) & 1) == 0)
  {
    uint64_t v117 = *(void *)(v1 + 1280);
    uint64_t v118 = *(uint64_t **)(v192 + 1216);
    uint64_t v119 = *(void *)(v192 + 1144);
    uint64_t v120 = *(void *)(v192 + 1112);
    uint64_t v121 = *(void *)(v192 + 1104);
    sub_214CCFAF0(*(void *)v116, v121, v120);
    uint64_t v122 = sub_214D1A368();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v117, 0, 1, v122);
    uint64_t v123 = *v118;
    uint64_t v124 = (void *)swift_allocObject();
    v124[2] = 0;
    v124[3] = 0;
    v124[4] = v123;
    v124[5] = v119;
    v124[6] = v121;
    v124[7] = v120;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v125 = (uint64_t)v124;
    uint64_t v1 = v192;
    sub_214C78F34(v117, (uint64_t)&unk_26784F0E0, v125);
    sub_214B59CE0(v117, (uint64_t *)&unk_26ACE4338);
  }
  if (*(void *)(**(void **)(v1 + 1224) + 16))
  {
    uint64_t v126 = *(void *)(v1 + 1232);
    if ((*(unsigned char *)(v126 + 8) & 1) == 0)
    {
      uint64_t v127 = *(void *)(v1 + 1280);
      uint64_t v128 = *(uint64_t **)(v192 + 1240);
      uint64_t v129 = *(void *)(v192 + 1144);
      uint64_t v130 = *(void *)(v192 + 1112);
      uint64_t v131 = *(void *)(v192 + 1104);
      sub_214CCFAF0(*(void *)v126, v131, v130);
      uint64_t v132 = sub_214D1A368();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v127, 0, 1, v132);
      uint64_t v133 = *v128;
      uint64_t v134 = (void *)swift_allocObject();
      v134[2] = 0;
      v134[3] = 0;
      v134[4] = v133;
      v134[5] = v129;
      v134[6] = v131;
      v134[7] = v130;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v135 = (uint64_t)v134;
      uint64_t v1 = v192;
      sub_214C78F34(v127, (uint64_t)&unk_26784F0D0, v135);
      sub_214B59CE0(v127, (uint64_t *)&unk_26ACE4338);
    }
  }
  uint64_t v136 = *(void **)(v1 + 1256);
  uint64_t v137 = *(void *)(v1 + 1248);
  uint64_t v138 = *(void *)(v1 + 1112);
  *(void *)&v195[0] = *(void *)(v1 + 1104);
  *((void *)&v195[0] + 1) = v138;
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  uint64_t v139 = *(void *)v137;
  if (*(unsigned char *)(v137 + 8)) {
    uint64_t v139 = -1;
  }
  *(void *)(v1 + 1064) = v139;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  *(void *)(v1 + 1072) = *v136;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v140 = swift_bridgeObjectRetain();
  MEMORY[0x2166AFD40](v140, MEMORY[0x263F8D310]);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v141 = __dst[0];
  LOBYTE(__dst[0]) = 14;
  CoreODILogger.info(_:category:)(v141, __dst[1], __dst);
  swift_bridgeObjectRelease();
  if ((*(unsigned char *)(v137 + 8) & 1) == 0)
  {
    uint64_t v143 = (long long *)(v1 + 512);
    uint64_t v144 = *(void *)(v1 + 1280);
    uint64_t v145 = *(uint64_t **)(v192 + 1264);
    char v146 = *(uint64_t **)(v192 + 1256);
    uint64_t v147 = *(void *)(v192 + 1144);
    uint64_t v148 = *(void *)(v192 + 1136);
    uint64_t v149 = *(void *)(v192 + 1112);
    uint64_t v150 = *(void *)(v192 + 1104);
    sub_214CCFAF0(**(void **)(v192 + 1248), v150, v149);
    uint64_t v151 = sub_214D1A368();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v144, 0, 1, v151);
    uint64_t v152 = *v146;
    uint64_t v153 = *v145;
    sub_214B93DCC(v148, (uint64_t)v143);
    uint64_t v154 = (void *)swift_allocObject();
    v154[2] = 0;
    v154[3] = 0;
    v154[4] = v150;
    v154[5] = v149;
    v154[6] = v153;
    v154[7] = v152;
    v154[8] = v147;
    sub_214B59EC0(v143, (uint64_t)(v154 + 9));
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v1 = v192;
    swift_bridgeObjectRetain();
    sub_214C78F34(v144, (uint64_t)&unk_26784F0C0, (uint64_t)v154);
    sub_214B59CE0(v144, (uint64_t *)&unk_26ACE4338);
  }
  uint64_t v155 = *(void *)(v1 + 1144);
  uint64_t v156 = sub_214D03FC8(&qword_26784EBF8, v142, (void (*)(uint64_t))type metadata accessor for ArmandDataFiller);
  v193 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26784F0B0 + dword_26784F0B0);
  v157 = (void *)swift_task_alloc();
  *(void *)(v1 + 1288) = v157;
  void *v157 = v1;
  v157[1] = sub_214CD1648;
  return v193(v155, v156);
}

uint64_t sub_214CD1648()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_214CD1918;
  }
  else {
    uint64_t v4 = sub_214CD1774;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214CD1774()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 1296);
  sub_214D1A3A8();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 1144);
    unint64_t v4 = *(void *)(v2 + 1224);
    v10[0] = *(void *)(v2 + 1216);
    uint64_t v3 = v10[0];
    v10[1] = v4;
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    *(void *)(v0 + 1000) = 0;
    *(void *)(v0 + 1008) = 0xE000000000000000;
    sub_214D1A108();
    *(void *)(v0 + 1080) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    sub_214D1A908();
    uint64_t v5 = *(void *)(v0 + 1000);
    unint64_t v6 = *(void *)(v0 + 1008);
    LOBYTE(v11) = 14;
    CoreODILogger.error(_:category:)(v5, v6, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v3;
    unint64_t v12 = v4;
    LOBYTE(v10[0]) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000005ALL, 0x8000000214D38510, v10);

    swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v7 = 1;
  }
  **(unsigned char **)(v0 + 1088) = v7;
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_214CD1918()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void **)(v0 + 1296);
  uint64_t v2 = *(void *)(v0 + 1144);
  unint64_t v4 = *(void *)(v2 + 1224);
  v9[0] = *(void *)(v2 + 1216);
  uint64_t v3 = v9[0];
  v9[1] = v4;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  *(void *)(v0 + 1000) = 0;
  *(void *)(v0 + 1008) = 0xE000000000000000;
  sub_214D1A108();
  *(void *)(v0 + 1080) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v5 = *(void *)(v0 + 1000);
  unint64_t v6 = *(void *)(v0 + 1008);
  LOBYTE(v10) = 14;
  CoreODILogger.error(_:category:)(v5, v6, &v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v3;
  unint64_t v11 = v4;
  LOBYTE(v9[0]) = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000005ALL, 0x8000000214D38510, v9);

  swift_bridgeObjectRelease();
  **(unsigned char **)(v0 + 1088) = 0;
  swift_task_dealloc();
  char v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_214CD1AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = v10;
  v8[19] = v11;
  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a1;
  v8[13] = a4;
  return MEMORY[0x270FA2498](sub_214CD1ADC, 0, 0);
}

uint64_t sub_214CD1ADC()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104);
  long long v18 = *(_OWORD *)(v0 + 144);
  sub_214B93DCC(*(void *)(v0 + 112), v0 + 16);
  sub_214B93DCC(v0 + 16, v0 + 56);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 160) = v5;
  sub_214B59EC0((long long *)(v0 + 16), v5 + 16);
  *(void *)(v5 + 56) = v3;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v1;
  *(_OWORD *)(v5 + 80) = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if (v4 == -1)
  {
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_214CD1EB0;
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 96);
    return sub_214CD21A4(v16, v0 + 56, v15, v13, v14, v12);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    char v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v7;
    v7[2] = v6;
    v7[3] = &unk_26784F248;
    v7[4] = v5;
    v7[5] = &unk_26784F198;
    v7[6] = 0;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_214CD1D30;
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v10 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2360](v9, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v7, v10);
  }
}

uint64_t sub_214CD1D30()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214CD1FC4, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_214CD1EB0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CD2104;
  }
  else {
    uint64_t v2 = sub_214CD206C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD1FC4()
{
  swift_task_dealloc();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CD206C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CD2104()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214CD21A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[4] = a2;
  v6[9] = type metadata accessor for ODISignpost();
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD2250, 0, 0);
}

uint64_t sub_214CD2250()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214CD2350;
  return v6(v2, v3);
}

uint64_t sub_214CD2350(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD2450, 0, 0);
}

uint64_t sub_214CD2450()
{
  unint64_t v35 = v0;
  if (qword_26784C970 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v3 = qword_267863950;
  uint64_t v2 = *(void *)algn_267863958;
  char v4 = byte_267863960;
  uint64_t v5 = (void *)qword_267863968;
  int v6 = byte_267863970;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[5];

  sub_214D04358(v8, v9, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (void **)(swift_bridgeObjectRetain() + 40);
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v16 = (uint64_t)*(v12 - 1);
      uint64_t v15 = *v12;
      swift_bridgeObjectRetain_n();
      v17._countAndFlagsBits = v16;
      v17._object = v15;
      ODIGeocoderBindingsName.init(rawValue:)(v17);
      if (v32 == 8)
      {
        unint64_t v33 = 0;
        unint64_t v34 = 0xE000000000000000;
        sub_214D1A7A8();
        swift_bridgeObjectRelease();
        unint64_t v33 = 0xD00000000000001CLL;
        unint64_t v34 = 0x8000000214D388A0;
        sub_214D1A108();
        swift_bridgeObjectRelease();
        uint64_t v14 = v33;
        LOBYTE(v33) = 14;
        CoreODILogger.info(_:category:)(v14, v34, &v33);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        switch(v32)
        {
          case 2:
          case 3:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_214B87FE0(0, *((void *)v13 + 2) + 1, 1, v13);
            }
            unint64_t v21 = *((void *)v13 + 2);
            unint64_t v20 = *((void *)v13 + 3);
            if (v21 >= v20 >> 1) {
              uint64_t v13 = sub_214B87FE0((char *)(v20 > 1), v21 + 1, 1, v13);
            }
            *((void *)v13 + 2) = v21 + 1;
            v13[v21 + 32] = 3;
            break;
          case 4:
          case 5:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_214B87FE0(0, *((void *)v13 + 2) + 1, 1, v13);
            }
            unint64_t v23 = *((void *)v13 + 2);
            unint64_t v22 = *((void *)v13 + 3);
            if (v23 >= v22 >> 1) {
              uint64_t v13 = sub_214B87FE0((char *)(v22 > 1), v23 + 1, 1, v13);
            }
            *((void *)v13 + 2) = v23 + 1;
            v13[v23 + 32] = 1;
            break;
          case 6:
          case 7:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_214B87FE0(0, *((void *)v13 + 2) + 1, 1, v13);
            }
            unint64_t v25 = *((void *)v13 + 2);
            unint64_t v24 = *((void *)v13 + 3);
            if (v25 >= v24 >> 1) {
              uint64_t v13 = sub_214B87FE0((char *)(v24 > 1), v25 + 1, 1, v13);
            }
            *((void *)v13 + 2) = v25 + 1;
            v13[v25 + 32] = 2;
            break;
          default:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v13 = sub_214B87FE0(0, *((void *)v13 + 2) + 1, 1, v13);
            }
            unint64_t v19 = *((void *)v13 + 2);
            unint64_t v18 = *((void *)v13 + 3);
            if (v19 >= v18 >> 1) {
              uint64_t v13 = sub_214B87FE0((char *)(v18 > 1), v19 + 1, 1, v13);
            }
            *((void *)v13 + 2) = v19 + 1;
            v13[v19 + 32] = 0;
            break;
        }
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v26 = (void *)v0[4];
  v0[13] = sub_214D0625C((uint64_t)v13, v0[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = v26[3];
  uint64_t v28 = v26[4];
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v28 + 16) + **(int **)(v28 + 16));
  uint64_t v29 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v29;
  *uint64_t v29 = v0;
  v29[1] = sub_214CD29A8;
  return v31(v27, v28);
}

uint64_t sub_214CD29A8(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[15] = a1;
  swift_task_dealloc();
  char v4 = (void *)swift_task_alloc();
  v2[16] = v4;
  *char v4 = v3;
  v4[1] = sub_214CD2AF4;
  uint64_t v5 = v2[13];
  return sub_214C45CAC(v5);
}

uint64_t sub_214CD2AF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA2498](sub_214CD2C4C, v2, 0);
}

uint64_t sub_214CD2C4C()
{
  sub_214CC8AD8(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214CD2CC4, 0, 0);
}

uint64_t sub_214CD2CC4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214CD2D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[15] = a4;
  v8[20] = type metadata accessor for ODISignpost();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD2E2C, 0, 0);
}

uint64_t sub_214CD2E2C()
{
  if (qword_26784C948 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = qword_267863888;
  uint64_t v3 = unk_267863890;
  char v4 = byte_267863898;
  uint64_t v5 = (void *)qword_2678638A0;
  int v6 = byte_2678638A8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 120);

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  sub_214B93DCC(v10, v0 + 16);
  sub_214B93DCC(v0 + 16, v0 + 56);
  uint64_t v13 = swift_allocObject();
  *(void *)(v0 + 184) = v13;
  *(void *)(v13 + 16) = v11;
  sub_214B59EC0((long long *)(v0 + 16), v13 + 24);
  swift_retain_n();
  if (v12 == -1)
  {
    unint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_214CD32C4;
    uint64_t v19 = *(void *)(v0 + 128);
    v18[11] = v0 + 56;
    v18[12] = v19;
    return MEMORY[0x270FA2498](sub_214CC9218, v19, 0);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v15;
    v15[2] = v14;
    v15[3] = &unk_26784F190;
    v15[4] = v13;
    v15[5] = &unk_26784F198;
    v15[6] = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = MEMORY[0x263F8EE60];
    v16[1] = sub_214CD3180;
    return MEMORY[0x270FA2360](v16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v15, v17 + 8);
  }
}

uint64_t sub_214CD3180()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214CD34FC;
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
    uint64_t v3 = sub_214CD3440;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214CD32C4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD33C0, 0, 0);
}

uint64_t sub_214CD33C0()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return MEMORY[0x270FA2498](sub_214CD3440, 0, 0);
}

uint64_t sub_214CD3440()
{
  uint64_t v1 = *(void *)(v0 + 176);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214CD34FC()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[26];
  swift_task_dealloc();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[12] = 0;
  v0[13] = 0xE000000000000000;
  sub_214D1A108();
  v0[14] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[12];
  unint64_t v3 = v0[13];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[22];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD36A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *int v6 = v3;
  v6[1] = sub_214BF8108;
  v6[11] = a3;
  v6[12] = a2;
  return MEMORY[0x270FA2498](sub_214CC9218, a2, 0);
}

uint64_t sub_214CD3750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v6 = sub_214D19E38();
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD3814, a4, 0);
}

uint64_t sub_214CD3814()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  sub_214D19E28();
  uint64_t v5 = sub_214D19DF8();
  uint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  *(void *)(v4 + 464) = v5;
  *(void *)(v4 + 472) = v7;
  *(unsigned char *)(v4 + 480) = -47;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_214CD38F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD3998, 0, 0);
}

uint64_t sub_214CD3998()
{
  if (qword_26784C940 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_267863860;
  uint64_t v3 = *(void *)algn_267863868;
  char v4 = byte_267863870;
  uint64_t v5 = (void *)qword_267863878;
  int v6 = byte_267863880;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 72);

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  sub_214B6AC38(v10 + 48, v0 + 48, &qword_26ACE39C8);
  sub_214B6AC38(v0 + 48, v0 + 32, &qword_26ACE39C8);
  char v11 = *(unsigned char *)(v0 + 40);
  unint64_t v12 = *(void *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    if (qword_26ACE5448 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_26ACE5430;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_214CD3E54;
    uint64_t v20 = *(void *)(v0 + 80);
    v19[5] = v18;
    v19[6] = v20;
    return MEMORY[0x270FA2498](sub_214CCBBDC, v20, 0);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = 1000000 * v12;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_26784F1A8;
    v15[4] = v13;
    v15[5] = &unk_26784F198;
    v15[6] = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = MEMORY[0x263F8EE60];
    v16[1] = sub_214CD3D28;
    return MEMORY[0x270FA2360](v16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v15, v17 + 8);
  }
}

uint64_t sub_214CD3D28()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD414C;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214CD42CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD3E54()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CD3FD4;
  }
  else {
    uint64_t v2 = sub_214CD3F68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD3F68()
{
  swift_release_n();
  return MEMORY[0x270FA2498](sub_214CD42CC, 0, 0);
}

uint64_t sub_214CD3FD4()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[20];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD414C()
{
  uint64_t v8 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[18];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD42CC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214CD4388(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x270FA2498](sub_214CD43A8, 0, 0);
}

uint64_t sub_214CD43A8()
{
  if (qword_26ACE5448 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE5430;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_214CD4488;
  uint64_t v3 = *(void *)(v0 + 16);
  v2[5] = v1;
  v2[6] = v3;
  return MEMORY[0x270FA2498](sub_214CCBBDC, v3, 0);
}

uint64_t sub_214CD4488()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214CD457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD4624, 0, 0);
}

uint64_t sub_214CD4624()
{
  if (qword_26784C928 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_2678637E8;
  uint64_t v3 = unk_2678637F0;
  char v4 = byte_2678637F8;
  uint64_t v5 = (void *)qword_267863800;
  int v6 = byte_267863808;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 72);

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  sub_214B6AC38(v10 + 48, v0 + 48, &qword_26ACE39C8);
  sub_214B6AC38(v0 + 48, v0 + 32, &qword_26ACE39C8);
  char v11 = *(unsigned char *)(v0 + 40);
  unint64_t v12 = *(void *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_214CD4AA8;
    uint64_t v19 = *(void *)(v0 + 80);
    v18[15] = v19;
    return MEMORY[0x270FA2498](sub_214CCC33C, v19, 0);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = 1000000 * v12;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_26784F1B8;
    v15[4] = v13;
    v15[5] = &unk_26784F198;
    v15[6] = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = MEMORY[0x263F8EE60];
    v16[1] = sub_214CD497C;
    return MEMORY[0x270FA2360](v16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v15, v17 + 8);
  }
}

uint64_t sub_214CD497C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD4DA0;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214D091B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD4AA8()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CD4C28;
  }
  else {
    uint64_t v2 = sub_214CD4BBC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD4BBC()
{
  swift_release_n();
  return MEMORY[0x270FA2498](sub_214D091B0, 0, 0);
}

uint64_t sub_214CD4C28()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[20];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD4DA0()
{
  uint64_t v8 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[18];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD4F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  v4[15] = a2;
  return MEMORY[0x270FA2498](sub_214CCC33C, a2, 0);
}

uint64_t sub_214CD4FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = a7;
  v8[26] = a8;
  v8[23] = a5;
  v8[24] = a6;
  v8[22] = a4;
  return MEMORY[0x270FA2498](sub_214CD4FF4, 0, 0);
}

uint64_t sub_214CD4FF4()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  sub_214B6AC38(*(void *)(v0 + 176) + 48, v0 + 152, &qword_26ACE39C8);
  sub_214B6AC38(v0 + 152, v0 + 136, &qword_26ACE39C8);
  char v3 = *(unsigned char *)(v0 + 144);
  unint64_t v4 = *(void *)(v0 + 136);
  sub_214B93DCC(v1, v0 + 56);
  sub_214B93DCC(v0 + 56, v0 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 216) = v5;
  *(void *)(v5 + 16) = v2;
  sub_214B59EC0((long long *)(v0 + 56), v5 + 24);
  swift_retain_n();
  if ((v3 & 1) != 0 || v4 > 0x10C6F7A0B5EDLL)
  {
    uint64_t v9 = *(void *)(v0 + 184);
    return MEMORY[0x270FA2498](sub_214CD5360, v9, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v6;
    v6[2] = 1000000 * v4;
    v6[3] = &unk_26784F1C8;
    v6[4] = v5;
    v6[5] = &unk_26784F198;
    v6[6] = 0;
    id v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v7;
    void *v7 = v0;
    uint64_t v8 = MEMORY[0x263F8EE60];
    v7[1] = sub_214CD521C;
    return MEMORY[0x270FA2360](v7, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v6, v8 + 8);
  }
}

uint64_t sub_214CD521C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v3 = sub_214CD56D8;
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    char v3 = sub_214BC14B0;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214CD5360()
{
  id v7 = v0;
  char v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x8000000214D38690, &v6);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
  char v3 = (void *)swift_task_alloc();
  v0[31] = v3;
  *char v3 = v0;
  v3[1] = sub_214CD54B8;
  return v5(v1, v2);
}

uint64_t sub_214CD54B8(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 184);
  *(unsigned char *)(*(void *)v1 + 145) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD55D0, v2, 0);
}

uint64_t sub_214CD55D0()
{
  char v1 = *(unsigned char *)(v0 + 145);
  uint64_t v2 = *(void *)(v0 + 184);
  swift_beginAccess();
  *(unsigned char *)(v2 + 505) = v1;
  *(unsigned char *)(v2 + 506) = -47;
  return MEMORY[0x270FA2498](sub_214CD5658, 0, 0);
}

uint64_t sub_214CD5658()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA2498](sub_214BC14B0, 0, 0);
}

uint64_t sub_214CD56D8()
{
  id v7 = v0;
  char v1 = (void *)v0[30];
  swift_task_dealloc();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[15] = 0;
  v0[16] = 0xE000000000000000;
  sub_214D1A108();
  v0[21] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[15];
  unint64_t v3 = v0[16];
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CD5824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = a3;
  return MEMORY[0x270FA2498](sub_214CD5840, a2, 0);
}

uint64_t sub_214CD5840()
{
  uint64_t v8 = v0;
  char v1 = *(void **)(v0 + 48);
  char v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x8000000214D38690, &v7);
  swift_bridgeObjectRelease();
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  char v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214CD5994;
  return v6(v2, v3);
}

uint64_t sub_214CD5994(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(unsigned char *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD5AAC, v2, 0);
}

uint64_t sub_214CD5AAC()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_beginAccess();
  *(unsigned char *)(v2 + 505) = v1;
  *(unsigned char *)(v2 + 506) = -47;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214CD5B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for ODISignpost();
  void v4[4] = swift_task_alloc();
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD5BD4, 0, 0);
}

uint64_t sub_214CD5BD4()
{
  if (qword_26784C938 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = qword_267863838;
  uint64_t v2 = unk_267863840;
  char v4 = byte_267863848;
  uint64_t v5 = (void *)qword_267863850;
  int v6 = byte_267863858;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[5];

  sub_214D04358(v8, v9, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  if (qword_26784C860 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_2678635D0;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[6] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_214CD5DF4;
  uint64_t v12 = v0[2];
  v11[5] = v10;
  v11[6] = v12;
  return MEMORY[0x270FA2498](sub_214CC97C0, v12, 0);
}

uint64_t sub_214CD5DF4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD5EF0, 0, 0);
}

uint64_t sub_214CD5EF0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214CD5FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD6054, 0, 0);
}

uint64_t sub_214CD6054()
{
  if (qword_26784C950 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_2678638B0;
  uint64_t v3 = *(void *)algn_2678638B8;
  char v4 = byte_2678638C0;
  uint64_t v5 = (void *)qword_2678638C8;
  int v6 = byte_2678638D0;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 72);

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  sub_214B6AC38(v10 + 48, v0 + 48, &qword_26ACE39C8);
  sub_214B6AC38(v0 + 48, v0 + 32, &qword_26ACE39C8);
  char v11 = *(unsigned char *)(v0 + 40);
  unint64_t v12 = *(void *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_214CD64D8;
    uint64_t v19 = *(void *)(v0 + 80);
    v18[5] = v19;
    return MEMORY[0x270FA2498](sub_214CCC8B4, v19, 0);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = 1000000 * v12;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_26784F1D8;
    v15[4] = v13;
    v15[5] = &unk_26784F198;
    v15[6] = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = MEMORY[0x263F8EE60];
    v16[1] = sub_214CD63AC;
    return MEMORY[0x270FA2360](v16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v15, v17 + 8);
  }
}

uint64_t sub_214CD63AC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD6764;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214D091B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD64D8()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CD65EC;
  }
  else {
    uint64_t v2 = sub_214CD4BBC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD65EC()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[20];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD6764()
{
  uint64_t v8 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[18];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD68E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  v4[5] = a2;
  return MEMORY[0x270FA2498](sub_214CCC8B4, a2, 0);
}

uint64_t sub_214CD6990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD6A38, 0, 0);
}

uint64_t sub_214CD6A38()
{
  if (qword_26784C950 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = qword_2678638B0;
  uint64_t v3 = *(void *)algn_2678638B8;
  char v4 = byte_2678638C0;
  uint64_t v5 = (void *)qword_2678638C8;
  int v6 = byte_2678638D0;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 72);

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  sub_214B6AC38(v10 + 48, v0 + 48, &qword_26ACE39C8);
  sub_214B6AC38(v0 + 48, v0 + 32, &qword_26ACE39C8);
  char v11 = *(unsigned char *)(v0 + 40);
  unint64_t v12 = *(void *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_214CD6EBC;
    uint64_t v19 = *(void *)(v0 + 80);
    v18[5] = v19;
    return MEMORY[0x270FA2498](sub_214CCCC34, v19, 0);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = 1000000 * v12;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_26784F1E8;
    v15[4] = v13;
    v15[5] = &unk_26784F198;
    v15[6] = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = MEMORY[0x263F8EE60];
    v16[1] = sub_214CD6D90;
    return MEMORY[0x270FA2360](v16, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v15, v17 + 8);
  }
}

uint64_t sub_214CD6D90()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD7148;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214D091B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD6EBC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CD6FD0;
  }
  else {
    uint64_t v2 = sub_214CD4BBC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD6FD0()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[20];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD7148()
{
  uint64_t v8 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[18];
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[15];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD72C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  v4[5] = a2;
  return MEMORY[0x270FA2498](sub_214CCCC34, a2, 0);
}

uint64_t sub_214CD7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[7] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_214CD7424;
  v8[5] = a4;
  return MEMORY[0x270FA2498](sub_214CCBF58, a4, 0);
}

uint64_t sub_214CD7424()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_214CD7558, 0, 0);
  }
  else
  {
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_214CD7558()
{
  id v7 = v0;
  uint64_t v1 = (void *)v0[8];
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214CD766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = type metadata accessor for ODISignpost();
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD7714, 0, 0);
}

uint64_t sub_214CD7714()
{
  if (qword_26784C920 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v3 = qword_2678637C0;
  uint64_t v2 = *(void *)algn_2678637C8;
  char v4 = byte_2678637D0;
  uint64_t v5 = (void *)qword_2678637D8;
  int v6 = byte_2678637E0;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[7];

  sub_214D04358(v8, v9, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_retain();
  if (v10 == -1)
  {
    if (qword_26784C858 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)swift_task_alloc();
    v0[17] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_214CD7B54;
    return sub_214B61008();
  }
  else
  {
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    uint64_t v13 = (void *)swift_task_alloc();
    v0[14] = v13;
    id v13[2] = v12;
    v13[3] = &unk_26784F200;
    v13[4] = 0;
    v13[5] = &unk_26784F1F8;
    v13[6] = v11;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[15] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_214CD7A2C;
    uint64_t v15 = MEMORY[0x263F06F78];
    return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05EC8, v13, v15);
  }
}

uint64_t sub_214CD7A2C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD7E70;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_214CD7FEC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD7B54(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 144) = v2;
  swift_task_dealloc();
  if (v2)
  {
    id v7 = sub_214CD7CFC;
  }
  else
  {
    *(void *)(v6 + 152) = a2;
    *(void *)(v6 + 160) = a1;
    id v7 = sub_214CD7C88;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214CD7C88()
{
  *(int8x16_t *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  swift_release();
  return MEMORY[0x270FA2498](sub_214CD7FEC, 0, 0);
}

uint64_t sub_214CD7CFC()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[18];
  swift_release();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  sub_214D1A108();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[4];
  unint64_t v3 = v0[5];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[13];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD7E70()
{
  uint64_t v8 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[16];
  swift_release();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  sub_214D1A108();
  v0[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[4];
  unint64_t v3 = v0[5];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[13];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD7FEC()
{
  uint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  v0[21] = v2;
  v0[22] = v1;
  sub_214B6A3A0(v2, v1);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_214CD80AC;
  uint64_t v4 = v0[8];
  v3[15] = v1;
  v3[16] = v4;
  v3[14] = v2;
  return MEMORY[0x270FA2498](sub_214CC6C68, v4, 0);
}

uint64_t sub_214CD80AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_214CD828C;
  }
  else
  {
    sub_214B58A4C(*(void *)(v2 + 168), *(void *)(v2 + 176));
    unint64_t v3 = sub_214CD81C8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214CD81C8()
{
  sub_214B58A4C(v0[21], v0[22]);
  uint64_t v1 = v0[13];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_214CD828C()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[21];
  unint64_t v2 = v0[22];
  sub_214B58A4C(v1, v2);
  sub_214B58A4C(v1, v2);
  unint64_t v3 = (void *)v0[24];
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  sub_214D1A108();
  v0[6] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v4 = v0[4];
  unint64_t v5 = v0[5];
  LOBYTE(v9[0]) = 14;
  CoreODILogger.error(_:category:)(v4, v5, v9);
  swift_bridgeObjectRelease();

  uint64_t v6 = v0[13];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v6, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_214CD8414(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_214CD84D0;
  v6[15] = v5;
  v6[16] = a2;
  v6[14] = v4;
  return MEMORY[0x270FA2498](sub_214CC6C68, a2, 0);
}

uint64_t sub_214CD84D0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0) {

  }
  unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t sub_214CD85D0(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x270FA2498](sub_214CD85F0, 0, 0);
}

uint64_t sub_214CD85F0()
{
  if (qword_26784C858 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26784CC78;
  *(void *)(v0 + 40) = qword_26784CC78;
  return MEMORY[0x270FA2498](sub_214CD8688, v1, 0);
}

uint64_t sub_214CD8688()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + 184);
  v0[6] = v2;
  unint64_t v3 = *(void *)(v1 + 192);
  v0[7] = v3;
  if (v3 >> 60 == 15)
  {
    uint64_t v4 = sub_214D03FC8((unint64_t *)&qword_26784CC90, 255, (void (*)(uint64_t))type metadata accessor for DIPODNHelper);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_214CD880C;
    uint64_t v6 = v0[5];
    uint64_t v7 = MEMORY[0x263F06F78];
    return MEMORY[0x270FA2360](v0 + 2, v1, v4, 0xD000000000000013, 0x8000000214D2F240, sub_214B6AA4C, v6, v7);
  }
  else
  {
    v0[10] = v2;
    v0[11] = v3;
    sub_214B6A3F8(v2, v3);
    return MEMORY[0x270FA2498](sub_214CD8938, 0, 0);
  }
}

uint64_t sub_214CD880C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v4 = sub_214CD89F8;
  }
  else {
    uint64_t v4 = sub_214CD895C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214CD8938()
{
  *(_OWORD *)*(void *)(v0 + 32) = *(_OWORD *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214CD895C()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  unint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(v1 + 184);
  unint64_t v5 = *(void *)(v1 + 192);
  *(void *)(v1 + 184) = v3;
  *(void *)(v1 + 192) = v2;
  sub_214B6A3A0(v3, v2);
  sub_214B59EAC(v4, v5);
  v0[10] = v3;
  v0[11] = v2;
  sub_214B6A3F8(v0[6], v0[7]);
  return MEMORY[0x270FA2498](sub_214CD8938, 0, 0);
}

uint64_t sub_214CD89F8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214CD8A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for ODISignpost();
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD8AB8, 0, 0);
}

uint64_t sub_214CD8AB8()
{
  if (qword_26784C930 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v3 = qword_267863810;
  uint64_t v2 = *(void *)algn_267863818;
  char v4 = byte_267863820;
  unint64_t v5 = (void *)qword_267863828;
  int v6 = byte_267863830;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[5];

  sub_214D04358(v8, v9, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_retain_n();
  if (v10 == -1)
  {
    if (qword_26ACE4038 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_26ACE4030;
    v0[15] = qword_26ACE4030;
    swift_retain();
    return MEMORY[0x270FA2498](sub_214CD8EDC, v16, 0);
  }
  else
  {
    uint64_t v12 = v0[5];
    uint64_t v11 = v0[6];
    uint64_t v13 = (void *)swift_task_alloc();
    v0[12] = v13;
    id v13[2] = v12;
    v13[3] = &unk_26784F210;
    v13[4] = v11;
    v13[5] = &unk_26784F198;
    v13[6] = 0;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[13] = v14;
    *uint64_t v14 = v0;
    uint64_t v15 = MEMORY[0x263F8EE60];
    v14[1] = sub_214CD8DB0;
    return MEMORY[0x270FA2360](v14, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v13, v15 + 8);
  }
}

uint64_t sub_214CD8DB0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD92EC;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214CD2CC4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD8EDC()
{
  if (*(unsigned char *)(v0[15] + 168))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[17] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_214CD9168;
    uint64_t v2 = v0[6];
    v1[7] = v0[15];
    v1[8] = v2;
    return MEMORY[0x270FA2498](sub_214CC9C24, v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[16] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_214CD8FFC;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214CD8FFC()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[17] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_214CD9168;
  uint64_t v4 = v1[6];
  v3[7] = v1[15];
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_214CC9C24, v4, 0);
}

uint64_t sub_214CD9168()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_214CD9280, 0, 0);
}

uint64_t sub_214CD9280()
{
  swift_release_n();
  return MEMORY[0x270FA2498](sub_214CD2CC4, 0, 0);
}

uint64_t sub_214CD92EC()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[14];
  swift_task_dealloc();
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[11];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CD9478(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return MEMORY[0x270FA2498](sub_214CD9498, 0, 0);
}

uint64_t sub_214CD9498()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 24) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214CD9540, v1, 0);
}

uint64_t sub_214CD9540()
{
  if (*(unsigned char *)(v0[1].i64[1] + 168))
  {
    uint64_t v1 = swift_task_alloc();
    v0[2].i64[1] = v1;
    *(void *)uint64_t v1 = v0;
    *(void *)(v1 + 8) = sub_214CD97B0;
    int8x16_t v2 = v0[1];
    *(int8x16_t *)(v1 + 56) = vextq_s8(v2, v2, 8uLL);
    return MEMORY[0x270FA2498](sub_214CC9C24, v2.i64[0], 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[2].i64[0] = (uint64_t)v3;
    *uint64_t v3 = v0;
    v3[1] = sub_214CD9664;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214CD9664()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v2 = swift_task_alloc();
  v1[2].i64[1] = v2;
  *(void *)uint64_t v2 = v5;
  *(void *)(v2 + 8) = sub_214CD97B0;
  int8x16_t v3 = v1[1];
  *(int8x16_t *)(v2 + 56) = vextq_s8(v3, v3, 8uLL);
  return MEMORY[0x270FA2498](sub_214CC9C24, v3.i64[0], 0);
}

uint64_t sub_214CD97B0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214CD98C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for ODISignpost();
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CD996C, 0, 0);
}

uint64_t sub_214CD996C()
{
  if (qword_26784C978 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v3 = qword_267863978;
  uint64_t v2 = unk_267863980;
  char v4 = byte_267863988;
  uint64_t v5 = (void *)qword_267863990;
  int v6 = byte_267863998;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[5];

  sub_214D04358(v8, v9, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_retain_n();
  if (v10 == -1)
  {
    uint64_t v16 = (void *)swift_task_alloc();
    v0[15] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_214CD9D90;
    uint64_t v17 = v0[6];
    v16[67] = v17;
    return MEMORY[0x270FA2498](sub_214CC6FB8, v17, 0);
  }
  else
  {
    uint64_t v12 = v0[5];
    uint64_t v11 = v0[6];
    uint64_t v13 = (void *)swift_task_alloc();
    v0[12] = v13;
    id v13[2] = v12;
    v13[3] = &unk_26784F220;
    v13[4] = v11;
    v13[5] = &unk_26784F198;
    v13[6] = 0;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[13] = v14;
    *uint64_t v14 = v0;
    uint64_t v15 = MEMORY[0x263F8EE60];
    v14[1] = sub_214CD9C64;
    return MEMORY[0x270FA2360](v14, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v13, v15 + 8);
  }
}

uint64_t sub_214CD9C64()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214CD9EF8;
  }
  else
  {
    swift_release_n();
    swift_task_dealloc();
    uint64_t v2 = sub_214D091B4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CD9D90()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214CD9E8C, 0, 0);
}

uint64_t sub_214CD9E8C()
{
  swift_release_n();
  return MEMORY[0x270FA2498](sub_214D091B4, 0, 0);
}

uint64_t sub_214CD9EF8()
{
  uint64_t v8 = v0;
  uint64_t v1 = (void *)v0[14];
  swift_task_dealloc();
  swift_release_n();
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_214D1A108();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v7);
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[11];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v4, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214CDA084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214BFAE4C;
  v4[67] = a2;
  return MEMORY[0x270FA2498](sub_214CC6FB8, a2, 0);
}

uint64_t sub_214CDA130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v11;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[22] = type metadata accessor for ODISignpost();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214CDA1E4, 0, 0);
}

uint64_t sub_214CDA1E4()
{
  uint64_t v26 = v0;
  unint64_t v23 = (long long *)(v0 + 2);
  if (qword_26784C958 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = qword_2678638D8;
  uint64_t v3 = unk_2678638E0;
  char v4 = byte_2678638E8;
  uint64_t v5 = (void *)qword_2678638F0;
  int v6 = byte_2678638F8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = v0[23];
  uint64_t v8 = v0[24];
  uint64_t v10 = v0[20];
  uint64_t v11 = v0[21];
  uint64_t v13 = v0[18];
  uint64_t v12 = v0[19];

  sub_214D04358(v9, v8, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  MEMORY[0x2166AFD40](v13, MEMORY[0x263F8D310]);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  v0[14] = v12;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v14 = v24;
  LOBYTE(v24) = 14;
  CoreODILogger.info(_:category:)(v14, v25, &v24);
  swift_bridgeObjectRelease();
  sub_214B93DCC(v11, (uint64_t)v23);
  sub_214B93DCC((uint64_t)v23, (uint64_t)(v0 + 7));
  uint64_t v15 = swift_allocObject();
  v0[25] = v15;
  *(void *)(v15 + 16) = v10;
  *(void *)(v15 + 24) = v13;
  sub_214B59EC0(v23, v15 + 32);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  if (v12 == -1)
  {
    uint64_t v20 = (void *)swift_task_alloc();
    v0[29] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_214CDA784;
    uint64_t v21 = v0[18];
    return sub_214CC7398(v21, (uint64_t)(v0 + 7));
  }
  else
  {
    uint64_t v16 = v0[19];
    uint64_t v17 = (void *)swift_task_alloc();
    v0[26] = v17;
    v17[2] = v16;
    v17[3] = &unk_26784F230;
    v17[4] = v15;
    v17[5] = &unk_26784F198;
    v17[6] = 0;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[27] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_214CDA634;
    uint64_t v19 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA2360](v18, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214D05AAC, v17, v19);
  }
}

uint64_t sub_214CDA634()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214CDAB0C;
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
    uint64_t v3 = sub_214CDACF4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214CDA784()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214CDA92C;
  }
  else {
    uint64_t v2 = sub_214CDA898;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214CDA898()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return MEMORY[0x270FA2498](sub_214CDACF4, 0, 0);
}

uint64_t sub_214CDA92C()
{
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = v0[18];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[12] = 0;
  v0[13] = 0xE000000000000000;
  sub_214D1A108();
  MEMORY[0x2166AFD40](v2, MEMORY[0x263F8D310]);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  v0[15] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v3 = v0[12];
  unint64_t v4 = v0[13];
  LOBYTE(v8[0]) = 14;
  CoreODILogger.error(_:category:)(v3, v4, v8);
  swift_bridgeObjectRelease();

  uint64_t v5 = v0[24];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v5, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CDAB0C()
{
  uint64_t v9 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[18];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_214D1A7A8();
  v0[12] = 0;
  v0[13] = 0xE000000000000000;
  sub_214D1A108();
  MEMORY[0x2166AFD40](v2, MEMORY[0x263F8D310]);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  v0[15] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  sub_214D1A908();
  uint64_t v3 = v0[12];
  unint64_t v4 = v0[13];
  LOBYTE(v8[0]) = 14;
  CoreODILogger.error(_:category:)(v3, v4, v8);
  swift_bridgeObjectRelease();

  uint64_t v5 = v0[24];
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v5, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214CDACF4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_214D1A578();
  sub_214D19E98();
  sub_214D043C0(v1, (uint64_t (*)(void))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214CDADB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  void *v7 = v4;
  v7[1] = sub_214B6A55C;
  return sub_214CC7398(a3, a4);
}

uint64_t sub_214CDAE5C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  if (a1)
  {
    swift_getObjectType();
    uint64_t v4 = sub_214D1A2D8();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v3[5] = v4;
  v3[6] = v6;
  return MEMORY[0x270FA2498](sub_214CDAEFC, v4, v6);
}

uint64_t sub_214CDAEFC()
{
  v0[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (sub_214D1A3E8())
  {
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    v0[8] = 0;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F238);
    *uint64_t v3 = v0;
    v3[1] = sub_214CDB030;
    uint64_t v5 = v0[3];
    uint64_t v6 = v0[2];
    return MEMORY[0x270FA2048](v0 + 11, v6, v5, v4);
  }
}

uint64_t sub_214CDB030()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_214CDB27C;
  }
  else
  {
    *(unsigned char *)(v2 + 89) = *(unsigned char *)(v2 + 88);
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_214CDB14C;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_214CDB14C()
{
  if (*(unsigned char *)(v0 + 89))
  {
    uint64_t v1 = *(void *)(v0 + 64);
    if (sub_214D1A3E8())
    {
      if (v1) {
        swift_willThrow();
      }
      uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
    *(void *)(v0 + 64) = v1;
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F238);
  *uint64_t v4 = v0;
  v4[1] = sub_214CDB030;
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2048](v0 + 88, v7, v6, v5);
}

uint64_t sub_214CDB27C()
{
  uint64_t v1 = (void *)v0[10];
  if (v0[8])
  {

    uint64_t v1 = (void *)v0[8];
  }
  if (sub_214D1A3E8())
  {
    if (v1) {
      swift_willThrow();
    }
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[8] = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[9] = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F238);
    *uint64_t v4 = v0;
    v4[1] = sub_214CDB030;
    uint64_t v6 = v0[3];
    uint64_t v7 = v0[2];
    return MEMORY[0x270FA2048](v0 + 11, v7, v6, v5);
  }
}

void sub_214CDB3BC()
{
  *(unsigned char *)(v0 + 1147) = 1;
}

uint64_t sub_214CDB3C8(unsigned char *a1, uint64_t a2)
{
  LOBYTE(v9) = *a1;
  unint64_t v3 = BindingsKeys.rawValue.getter();
  if (!*(void *)(a2 + 16) || (uint64_t v5 = sub_214B87FEC(v3, v4), (v6 & 1) == 0))
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_214B93DCC(*(void *)(a2 + 56) + 40 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_9:
    sub_214B59CE0((uint64_t)&v9, &qword_26784D148);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  if (swift_dynamicCast()) {
    return v8;
  }
  else {
    return 0;
  }
}

uint64_t ArmandDataFiller.deinit()
{
  memcpy(v2, (const void *)(v0 + 112), 0x40AuLL);
  sub_214B952CC((uint64_t)v2);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ArmandDataFiller.__deallocating_deinit()
{
  ArmandDataFiller.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ArmandDataFiller.unownedExecutor.getter()
{
  return v0;
}

unint64_t sub_214CDB560(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_214D1AD08();
        swift_bridgeObjectRetain();
        sub_214D1A0D8();
        uint64_t v9 = sub_214D1AD48();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDB738(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_214D1AD08();
        swift_bridgeObjectRetain();
        sub_214D1A0D8();
        uint64_t v9 = sub_214D1AD48();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 288 * v3;
          uint64_t v15 = (const void *)(v14 + 288 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 288))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x120uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDB91C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 1048 * v6;
        unint64_t v10 = (const void *)(*(void *)(a2 + 48) + 1048 * v6);
        memcpy(__dst, v10, 0x415uLL);
        memcpy(v30, v10, sizeof(v30));
        sub_214D1AD08();
        sub_214B93E30((uint64_t)__dst);
        sub_214BA79EC((uint64_t)&v29, v11);
        uint64_t v12 = sub_214D1AD48();
        uint64_t result = sub_214B94EE8((uint64_t)__dst);
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v13 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v14 = *(void *)(a2 + 48);
        uint64_t v15 = (char *)(v14 + 1048 * v3);
        uint64_t v16 = (char *)(v14 + v9);
        if (1048 * v3 < v9 || v15 >= v16 + 1048 || v3 != v6) {
          memmove(v15, v16, 0x418uLL);
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784D000) - 8) + 72);
        int64_t v19 = v18 * v3;
        uint64_t result = v17 + v18 * v3;
        int64_t v20 = v18 * v6;
        unint64_t v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v19 == v20) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_22;
        }
      }
      if (v13 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v13) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_22:
    unint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *unint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDBB6C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_214D1AD08();
        swift_bridgeObjectRetain();
        sub_214D1A0D8();
        uint64_t v9 = sub_214D1AD48();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ODIKnownBinding() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDBD7C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_214D1AD08();
        swift_bridgeObjectRetain();
        sub_214D1A0D8();
        uint64_t v11 = sub_214D1AD48();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *uint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          unint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *int64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDBF68(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_214D1AD08();
        sub_214D1AD18();
        uint64_t result = sub_214D1AD48();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDC124(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_214D1ACF8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_214CDC2BC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_214D1AD08();
        sub_214D1AD18();
        uint64_t result = sub_214D1AD48();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          unint64_t v11 = (unsigned char *)(v10 + v3);
          unint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *unint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t result = v13 + 112 * v3;
          uint64_t v14 = (const void *)(v13 + 112 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v14 + 112))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v14, 0x70uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v16 = *v15;
    uint64_t v17 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v17 = *v15;
    uint64_t v16 = (-1 << result) - 1;
  }
  *uint64_t v15 = v17 & v16;
  uint64_t v18 = *(void *)(a2 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_214CDC484(unint64_t a1)
{
  return sub_214CDC610(a1, (void (*)(void *, uint64_t, unint64_t))sub_214CDDAAC);
}

uint64_t sub_214CDC49C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    if (v5 <= 0)
    {
      unint64_t v8 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        uint64_t v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4480);
      unint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

void *sub_214CDC5F8(unint64_t a1)
{
  return sub_214CDC610(a1, (void (*)(void *, uint64_t, unint64_t))sub_214CDDCE0);
}

void *sub_214CDC610(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      int64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE5480);
      int64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

uint64_t sub_214CDC718(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_214D1A6B8();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    int64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE5480);
    int64_t v3 = (void *)swift_allocObject();
    int64_t v4 = _swift_stdlib_malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  int64_t v6 = sub_214CDF2AC(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_214BB7994();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_214CDC814(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v4 = swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size((const void *)v4);
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = 2 * v5 - 64;
  int64_t v6 = sub_214CDF5B8(&v8, (unsigned char *)(v4 + 32), v2, a1);
  swift_bridgeObjectRetain();
  sub_214BB7994();
  if (v6 != (void *)v2)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v4;
}

uint64_t sub_214CDC8E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_214D1AD08();
  swift_bridgeObjectRetain();
  sub_214D1A0D8();
  uint64_t v8 = sub_214D1AD48();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_214D1ABC8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_214D1ABC8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *int64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_214CDCE88(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_214CDCA98(void *a1, void *a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_214D1A6C8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_214B6A264(0, &qword_26784CD00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_214D1A6B8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_214C4E080(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_214C4E558();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_214C4EAB8((uint64_t)v8, v22);
    *int64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_214D1A598();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_214B6A264(0, &qword_26784CD00);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_214D1A5A8();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        BOOL v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_214D1A5A8();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_214CDD024((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_214CDCD38(unsigned char *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v13 = *v6;
  sub_214D1AD08();
  sub_214D1AD18();
  uint64_t v14 = sub_214D1AD48();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v16 = v14 & ~v15;
  if (((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_214CDD1AC(a2, v16, isUniquelyReferenced_nonNull_native, a3, a4, a5, a6);
    *uint64_t v6 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v13 + 48);
  if (*(unsigned __int8 *)(v17 + v16) != a2)
  {
    uint64_t v18 = ~v15;
    do
    {
      unint64_t v16 = (v16 + 1) & v18;
      if (((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v17 + v16) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v6 + 48) + v16);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_214CDCE88(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  size_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_214C4E278();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_214C4EB3C();
      goto LABEL_22;
    }
    sub_214CDD308();
  }
  uint64_t v11 = *v4;
  sub_214D1AD08();
  sub_214D1A0D8();
  uint64_t result = sub_214D1AD48();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_214D1ABC8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_214D1AC48();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_214D1ABC8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_214CDD024(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_214C4E558();
  }
  else
  {
    if (v7 > v6)
    {
      sub_214C4ECF0();
      goto LABEL_14;
    }
    sub_214CDD5B8();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_214D1A598();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_214B6A264(0, &qword_26784CD00);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_214D1A5A8();

    if (v12)
    {
LABEL_13:
      sub_214D1AC48();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_214D1A5A8();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_214CDD1AC(uint64_t result, unint64_t a2, char a3, void (*a4)(uint64_t), uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  int v9 = result;
  unint64_t v10 = *(void *)(*v7 + 16);
  unint64_t v11 = *(void *)(*v7 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    a4(v12);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = a7(v12);
      goto LABEL_14;
    }
    sub_214CDD834(v12, a6);
  }
  uint64_t v13 = *v7;
  sub_214D1AD08();
  sub_214D1AD18();
  uint64_t result = sub_214D1AD48();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a2 = result & ~v14;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v15 = *(void *)(v13 + 48);
    if (*(unsigned __int8 *)(v15 + a2) == v9)
    {
LABEL_13:
      uint64_t result = sub_214D1AC48();
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v15 + a2) == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v9;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

uint64_t sub_214CDD308()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E418);
  uint64_t v3 = sub_214D1A748();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_214D1AD08();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    uint64_t result = sub_214D1AD48();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_214CDD5B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E410);
  uint64_t v3 = sub_214D1A748();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_214D1A598();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_214CDD834(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_214D1A748();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_214D1AD08();
    sub_214D1AD18();
    uint64_t result = sub_214D1AD48();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_214CDDAAC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_214B5A118(&qword_26784F080, &qword_26784F078);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26784F078);
          int64_t v12 = sub_214BE9A00(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_214B6A264(0, &qword_26ACE4390);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214CDDCE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_214D1A948();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_214B5A118(&qword_26784F090, &qword_26784F088);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26784F088);
          int64_t v12 = sub_214BE9A6C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ODNRequestTask();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214CDDF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIKnownBinding();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  unint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD0);
  uint64_t v14 = MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v16 = (int64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v14, v17);
  char v20 = (int64_t *)((char *)&v44 - v19);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v47 = a1;
  int64_t v48 = 0;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v45 = a1 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v46 = (unint64_t)(v22 + 63) >> 6;
  int64_t v44 = v46 - 1;
  while (1)
  {
    if (v24)
    {
      unint64_t v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v26 = v25 | (v48 << 6);
LABEL_8:
      uint64_t v27 = *(void *)(v47 + 56);
      uint64_t v28 = (void *)(*(void *)(v47 + 48) + 16 * v26);
      uint64_t v29 = v28[1];
      *unint64_t v16 = *v28;
      v16[1] = v29;
      uint64_t v30 = v27 + *(void *)(v49 + 72) * v26;
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
      sub_214B9163C(v30, (uint64_t)v16 + *(int *)(v31 + 48));
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v16, 0, 1, v31);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v32 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v32 < v46)
    {
      unint64_t v33 = *(void *)(v45 + 8 * v32);
      if (v33) {
        goto LABEL_12;
      }
      int64_t v34 = v48 + 2;
      ++v48;
      if (v32 + 1 < v46)
      {
        unint64_t v33 = *(void *)(v45 + 8 * v34);
        if (v33) {
          goto LABEL_15;
        }
        int64_t v48 = v32 + 1;
        if (v32 + 2 < v46)
        {
          unint64_t v33 = *(void *)(v45 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          int64_t v34 = v32 + 3;
          int64_t v48 = v32 + 2;
          if (v32 + 3 < v46) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v16, 1, 1, v35);
    unint64_t v24 = 0;
LABEL_27:
    sub_214B6AC38((uint64_t)v16, (uint64_t)v20, &qword_26784EFD0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
    int v37 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v20, 1, v36);
    BOOL v38 = v37 == 1;
    if (v37 == 1) {
      return v38;
    }
    uint64_t v40 = *v20;
    uint64_t v39 = v20[1];
    sub_214D04358((uint64_t)v20 + *(int *)(v36 + 48), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    uint64_t v41 = sub_214B87FEC(v40, v39);
    LOBYTE(v40) = v42;
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      sub_214D043C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      return 0;
    }
    sub_214B9163C(*(void *)(a2 + 56) + *(void *)(v49 + 72) * v41, (uint64_t)v8);
    char v43 = sub_214CE4364((uint64_t)v8, (uint64_t)v11);
    sub_214D043C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    uint64_t result = sub_214D043C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    if ((v43 & 1) == 0) {
      return v38;
    }
  }
  unint64_t v33 = *(void *)(v45 + 8 * v34);
  if (v33)
  {
LABEL_15:
    int64_t v32 = v34;
LABEL_12:
    unint64_t v24 = (v33 - 1) & v33;
    unint64_t v26 = __clz(__rbit64(v33)) + (v32 << 6);
    int64_t v48 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v46)
    {
      int64_t v48 = v44;
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v45 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_214CDE3A8(long long *a1, uint64_t a2)
{
  uint64_t v51 = sub_214D19C78();
  uint64_t v4 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v5);
  uint64_t v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ODIKnownBinding();
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v57, v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD0);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8, v15);
  unint64_t v18 = (int64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16, v19);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v52 = a2 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v48 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v49 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  int64_t v53 = (unint64_t)(v23 + 63) >> 6;
  int64_t v47 = v53 - 1;
  uint64_t v56 = a2;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  int64_t v58 = 0;
  long long v54 = v10;
  while (1)
  {
    if (v25)
    {
      uint64_t v27 = v26;
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v58 << 6);
LABEL_8:
      uint64_t v30 = (uint64_t *)(*(void *)(v56 + 48) + 16 * v29);
      uint64_t v32 = *v30;
      uint64_t v31 = v30[1];
      uint64_t v33 = *(void *)(v56 + 56) + *(void *)(v55 + 72) * v29;
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
      sub_214B9163C(v33, (uint64_t)v18 + *(int *)(v34 + 48));
      *unint64_t v18 = v32;
      v18[1] = v31;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v18, 0, 1, v34);
      swift_bridgeObjectRetain();
      uint64_t v26 = v27;
      uint64_t v10 = v54;
      goto LABEL_25;
    }
    int64_t v35 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      JUMPOUT(0x214CDEA04);
    }
    if (v35 < v53)
    {
      unint64_t v36 = *(void *)(v52 + 8 * v35);
      if (v36) {
        goto LABEL_12;
      }
      int64_t v37 = v58 + 2;
      ++v58;
      if (v35 + 1 < v53)
      {
        unint64_t v36 = *(void *)(v52 + 8 * v37);
        if (v36)
        {
          ++v35;
LABEL_12:
          uint64_t v27 = v26;
          unint64_t v25 = (v36 - 1) & v36;
          unint64_t v29 = __clz(__rbit64(v36)) + (v35 << 6);
          int64_t v58 = v35;
          goto LABEL_8;
        }
        int64_t v38 = v35 + 2;
        int64_t v58 = v35 + 1;
        if (v35 + 2 < v53)
        {
          unint64_t v36 = *(void *)(v52 + 8 * v38);
          if (v36)
          {
            v35 += 2;
            goto LABEL_12;
          }
          while (1)
          {
            int64_t v35 = v38 + 1;
            if (__OFADD__(v38, 1)) {
              goto LABEL_34;
            }
            if (v35 >= v53) {
              break;
            }
            unint64_t v36 = *(void *)(v52 + 8 * v35);
            ++v38;
            if (v36) {
              goto LABEL_12;
            }
          }
          int64_t v58 = v47;
        }
      }
    }
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v18, 1, 1, v39);
    unint64_t v25 = 0;
LABEL_25:
    sub_214B6AC38((uint64_t)v18, (uint64_t)v21, &qword_26784EFD0);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v21, 1, v40) == 1) {
      break;
    }
    sub_214D04358((uint64_t)&v21[*(int *)(v40 + 48)], (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    uint64_t v41 = *((void *)a1 + 8);
    long long v42 = a1[1];
    long long v59 = *a1;
    long long v60 = v42;
    long long v43 = a1[3];
    long long v61 = a1[2];
    long long v62 = v43;
    uint64_t v63 = v41;
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    sub_214B9163C((uint64_t)v13, (uint64_t)v10);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_214D1AD18();
        sub_214D1A0D8();
        swift_bridgeObjectRelease();
        break;
      case 2u:
        sub_214D1AD18();
        goto LABEL_4;
      case 3u:
        int64_t v44 = v50;
        uint64_t v45 = v51;
        (*v49)(v50, v10, v51);
        sub_214D1AD18();
        sub_214D03FC8(&qword_26784EE40, 255, MEMORY[0x263F07490]);
        sub_214D19FE8();
        (*v48)(v44, v45);
        break;
      case 4u:
        sub_214D1AD18();
        sub_214D1AD28();
        break;
      case 5u:
LABEL_4:
        sub_214D1AD18();
        break;
      default:
        sub_214D1AD18();
        sub_214D1AD38();
        break;
    }
    sub_214D043C0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    v26 ^= sub_214D1AD48();
  }
  swift_release();
  return sub_214D1AD18();
}

uint64_t sub_214CDEA1C(long long *a1, uint64_t a2)
{
  uint64_t v22 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
LABEL_5:
  uint64_t v12 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v11);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  sub_214B9157C(*(void *)(a2 + 56) + 40 * v11, (uint64_t)&v25);
  *(void *)&long long v24 = v14;
  *((void *)&v24 + 1) = v13;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_214B6AC38((uint64_t)&v24, (uint64_t)v31, &qword_26784EE48);
    if (!v31[1])
    {
      swift_release();
      return sub_214D1AD18();
    }
    v29[0] = v32;
    v29[1] = v33;
    uint64_t v30 = v34;
    uint64_t v19 = *((void *)a1 + 8);
    long long v20 = a1[1];
    long long v24 = *a1;
    long long v25 = v20;
    long long v21 = a1[3];
    long long v26 = a1[2];
    long long v27 = v21;
    uint64_t v28 = v19;
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    sub_214D1A718();
    sub_214B6ABE4((uint64_t)v29);
    uint64_t result = sub_214D1AD48();
    v8 ^= result;
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 < v23)
    {
      unint64_t v16 = *(void *)(v22 + 8 * v15);
      if (v16) {
        goto LABEL_9;
      }
      int64_t v17 = v9 + 2;
      ++v9;
      if (v15 + 1 < v23)
      {
        unint64_t v16 = *(void *)(v22 + 8 * v17);
        if (v16)
        {
          ++v15;
LABEL_9:
          unint64_t v6 = (v16 - 1) & v16;
          unint64_t v11 = __clz(__rbit64(v16)) + (v15 << 6);
          int64_t v9 = v15;
          goto LABEL_5;
        }
        int64_t v18 = v15 + 2;
        int64_t v9 = v15 + 1;
        if (v15 + 2 < v23) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = 0;
    *(void *)&long long v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v24 = 0u;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v18);
  if (v16)
  {
    v15 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v15 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v15 >= v23)
    {
      int64_t v9 = v23 - 1;
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v18;
    if (v16) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_214CDEC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_214D1AD18();
  if (v3)
  {
    uint64_t v5 = a2 + 89;
    do
    {
      uint64_t v6 = *(void *)(v5 - 41);
      uint64_t v7 = *(void *)(v5 - 33);
      char v8 = *(unsigned char *)(v5 - 25);
      int v9 = *(unsigned __int8 *)(v5 - 1);
      swift_bridgeObjectRetain_n();
      sub_214B6F6CC(v6, v7, v8);
      sub_214D1A0D8();
      swift_bridgeObjectRelease();
      sub_214D1AD18();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_214D1A0D8();
        sub_214B6F6DC(v6, v7, 1);
      }
      else
      {
        sub_214D1A0D8();
        swift_bridgeObjectRelease();
      }
      v5 += 64;
      sub_214D1A0D8();
      swift_bridgeObjectRelease();
      sub_214D1AD18();
      sub_214D1AD28();
      if (!v9) {
        sub_214D1AD18();
      }
      sub_214D1AD28();
      swift_bridgeObjectRelease();
      uint64_t result = sub_214B6F6DC(v6, v7, v8);
      --v3;
    }
    while (v3);
  }
  return result;
}

void *sub_214CDF2AC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  long long v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_214D1A6A8();
    sub_214B6A264(0, &qword_26784CD00);
    sub_214D03F78(&qword_26784E3E0, &qword_26784CD00);
    uint64_t result = (void *)sub_214D1A448();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    uint64_t v22 = v24;
LABEL_41:
    *uint64_t v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_214D1A6D8()) {
        goto LABEL_40;
      }
      sub_214B6A264(0, &qword_26784CD00);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      uint64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_214CDF5B8(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_214CDF74C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a1, a6);
  int64_t v15 = (void *)*a5;
  unint64_t v17 = sub_214B87FEC(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = (void *)*a5;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1(v24);
      return sub_214B59EC0(&v33, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_214B90ABC();
    goto LABEL_7;
  }
  sub_214B8CC74(v20, a4 & 1);
  uint64_t v26 = sub_214B87FEC(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*a5;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v34);
  MEMORY[0x270FA5388](v28, v28);
  int64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_214CDF980(v17, a2, a3, (uint64_t)v30, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_214CDF980(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v14 = (void *)(a5[6] + 16 * a1);
  *unint64_t v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_214B59EC0(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

uint64_t sub_214CDFA58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  int v6 = *((unsigned __int8 *)a1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v9 = *((unsigned __int8 *)a1 + 40);
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  char v12 = *((unsigned char *)a1 + 64);
  __int16 v13 = *((unsigned __int8 *)a1 + 65);
  __int16 v14 = *((unsigned __int8 *)a1 + 66);
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v17 = *((unsigned __int8 *)a2 + 16);
  uint64_t v19 = a2[3];
  uint64_t v18 = a2[4];
  uint64_t v20 = *((unsigned __int8 *)a2 + 40);
  uint64_t v21 = a2[6];
  uint64_t v22 = a2[7];
  unsigned __int8 v23 = *((unsigned char *)a2 + 64);
  __int16 v24 = *((unsigned __int8 *)a2 + 65);
  int v25 = v6 - 209;
  __int16 v26 = *((unsigned __int8 *)a2 + 66);
  uint64_t v27 = (v6 - 209);
  switch(v25)
  {
    case 0:
      if (v17 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v17 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v17 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v17 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v17 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v17 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v17 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v17 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v17 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v17 + 47) < 9u) {
        return 0;
      }
      uint64_t v28 = -1;
      uint64_t v29 = v9;
      uint64_t v30 = *((unsigned __int8 *)a2 + 40);
      uint64_t v31 = a2[3];
      uint64_t v32 = a2[4];
      switch(v27)
      {
        case 1:
          uint64_t v28 = -2;
          break;
        case 2:
          uint64_t v28 = -3;
          break;
        case 3:
          uint64_t v28 = -4;
          break;
        case 4:
          uint64_t v28 = -5;
          break;
        case 5:
          uint64_t v28 = -6;
          break;
        case 6:
          uint64_t v28 = -7;
          break;
        case 7:
          uint64_t v28 = -8;
          break;
        case 8:
          uint64_t v28 = -9;
          break;
        case 9:
          uint64_t v28 = -10;
          break;
        case 10:
          uint64_t v28 = -11;
          break;
        case 11:
          uint64_t v28 = -12;
          break;
        case 12:
          uint64_t v28 = -13;
          break;
        case 13:
          uint64_t v28 = -14;
          break;
        case 14:
          uint64_t v28 = -15;
          break;
        case 15:
          uint64_t v28 = -16;
          break;
        case 16:
          uint64_t v28 = -17;
          break;
        case 17:
          uint64_t v28 = -18;
          break;
        case 18:
          uint64_t v28 = -19;
          break;
        case 19:
          uint64_t v28 = -20;
          break;
        case 20:
          uint64_t v28 = -21;
          break;
        case 21:
          uint64_t v28 = -22;
          break;
        case 22:
          uint64_t v28 = -28;
          break;
        case 23:
          uint64_t v28 = -29;
          break;
        case 24:
          uint64_t v28 = 200;
          break;
        case 25:
          uint64_t v28 = 20000;
          break;
        case 26:
          uint64_t v28 = 20001;
          break;
        case 27:
          uint64_t v28 = 20100;
          break;
        case 28:
          uint64_t v28 = 40000;
          break;
        case 29:
          uint64_t v28 = 40010;
          break;
        case 30:
          uint64_t v28 = 40011;
          break;
        case 31:
          uint64_t v28 = 40012;
          break;
        case 32:
          uint64_t v28 = 40013;
          break;
        case 33:
          uint64_t v28 = 40014;
          break;
        case 34:
          uint64_t v28 = 40015;
          break;
        case 35:
          uint64_t v28 = 40020;
          break;
        case 36:
          uint64_t v28 = 40021;
          break;
        case 37:
          uint64_t v28 = 40022;
          break;
        case 38:
          uint64_t v28 = 40023;
          break;
        case 39:
          uint64_t v28 = 40024;
          break;
        case 40:
          uint64_t v28 = 40025;
          break;
        case 41:
          uint64_t v28 = 40026;
          break;
        case 42:
          uint64_t v28 = 40027;
          break;
        case 43:
          uint64_t v28 = 40028;
          break;
        case 44:
          uint64_t v28 = 40029;
          break;
        case 45:
          uint64_t v28 = 40030;
          break;
        case 46:
          uint64_t v28 = 40101;
          break;
        case 47:
          uint64_t v28 = 40102;
          break;
        case 48:
          uint64_t v28 = 40200;
          break;
        case 49:
          uint64_t v28 = 40201;
          break;
        case 50:
          uint64_t v28 = 40205;
          break;
        case 51:
          uint64_t v28 = 40401;
          break;
        case 52:
          uint64_t v28 = 40402;
          break;
        case 53:
          uint64_t v28 = 40403;
          break;
        case 54:
          uint64_t v28 = 40404;
          break;
        case 55:
          uint64_t v28 = 40500;
          break;
        case 56:
          uint64_t v28 = 40600;
          break;
        case 57:
          uint64_t v28 = 40601;
          break;
        case 58:
          uint64_t v28 = 50000;
          break;
        case 59:
          uint64_t v28 = 50001;
          break;
        case 60:
          uint64_t v28 = 50002;
          break;
        case 61:
          uint64_t v28 = 99991;
          break;
        case 62:
          uint64_t v28 = 99992;
          break;
        case 63:
          uint64_t v28 = 99993;
          break;
        case 64:
          uint64_t v28 = -1101;
          break;
        case 65:
          uint64_t v28 = -1102;
          break;
        case 66:
          uint64_t v28 = -1103;
          break;
        case 67:
          uint64_t v28 = -1104;
          break;
        case 68:
          uint64_t v28 = -1110;
          break;
        case 69:
          uint64_t v28 = -1111;
          break;
        case 70:
          uint64_t v28 = -1112;
          break;
        case 71:
          uint64_t v28 = -1113;
          break;
        case 72:
          uint64_t v28 = -1114;
          break;
        case 73:
          uint64_t v28 = -1115;
          break;
        case 74:
          uint64_t v28 = -1116;
          break;
        case 75:
          uint64_t v28 = -1117;
          break;
        case 76:
          uint64_t v28 = -1118;
          break;
        case 77:
          uint64_t v28 = -1119;
          break;
        case 78:
          uint64_t v28 = -1201;
          break;
        case 79:
          uint64_t v28 = -1202;
          break;
        case 80:
          uint64_t v28 = -1203;
          break;
        case 81:
          uint64_t v28 = -1204;
          break;
        case 82:
          uint64_t v28 = -1402;
          break;
        case 83:
          uint64_t v28 = -1403;
          break;
        case 84:
          uint64_t v28 = -1404;
          break;
        case 85:
          uint64_t v28 = -1301;
          break;
        case 86:
          uint64_t v28 = -1302;
          break;
        case 87:
          uint64_t v28 = -1303;
          break;
        case 88:
          uint64_t v28 = -1304;
          break;
        case 89:
          uint64_t v28 = -1305;
          break;
        case 90:
          uint64_t v28 = -1306;
          break;
        case 91:
          uint64_t v28 = -1307;
          break;
        case 92:
          uint64_t v28 = -1308;
          break;
        case 93:
          uint64_t v28 = -1309;
          break;
        case 94:
          uint64_t v28 = -1310;
          break;
        case 95:
          uint64_t v28 = -1315;
          break;
        case 96:
          uint64_t v28 = -1316;
          break;
        case 97:
          uint64_t v28 = -1317;
          break;
        case 98:
          uint64_t v28 = -131600;
          break;
        case 99:
          uint64_t v28 = -2103;
          break;
        case 100:
          uint64_t v28 = -2104;
          break;
        case 101:
          uint64_t v28 = -2107;
          break;
        case 102:
          uint64_t v28 = -2110;
          break;
        case 103:
          uint64_t v28 = -2111;
          break;
        case 104:
          uint64_t v28 = -2112;
          break;
        case 105:
          uint64_t v28 = -2123;
          break;
        case 106:
          uint64_t v28 = -2124;
          break;
        case 107:
          uint64_t v28 = -2125;
          break;
        case 108:
          uint64_t v28 = -2126;
          break;
        case 109:
          uint64_t v28 = -2127;
          break;
        case 110:
          uint64_t v28 = -3101;
          break;
        case 111:
          uint64_t v28 = -3102;
          break;
        case 112:
          uint64_t v28 = -3103;
          break;
        case 113:
          uint64_t v28 = -3104;
          break;
        case 114:
          uint64_t v28 = -3105;
          break;
        case 115:
          uint64_t v28 = -3106;
          break;
        case 116:
          uint64_t v28 = -3107;
          break;
        case 117:
          uint64_t v28 = -3108;
          break;
        case 118:
          uint64_t v28 = -3109;
          break;
        case 119:
          uint64_t v28 = -3110;
          break;
        case 120:
          uint64_t v28 = -3111;
          break;
        case 121:
          uint64_t v28 = -3112;
          break;
        case 122:
          uint64_t v28 = -3113;
          break;
        case 123:
          uint64_t v28 = -3151;
          break;
        case 124:
          uint64_t v28 = -3152;
          break;
        case 125:
          uint64_t v28 = -3153;
          break;
        case 126:
          uint64_t v28 = -3154;
          break;
        case 127:
          uint64_t v28 = -3155;
          break;
        case 128:
          uint64_t v28 = -3156;
          break;
        case 129:
          uint64_t v28 = -3157;
          break;
        case 130:
          uint64_t v28 = -3158;
          break;
        case 131:
          uint64_t v28 = -3159;
          break;
        case 132:
          uint64_t v28 = -3161;
          break;
        case 133:
          uint64_t v28 = -3162;
          break;
        case 134:
          uint64_t v28 = -3163;
          break;
        case 135:
          uint64_t v28 = -3164;
          break;
        case 136:
          uint64_t v28 = -3165;
          break;
        case 137:
          uint64_t v28 = -3166;
          break;
        case 138:
          uint64_t v28 = -3167;
          break;
        case 139:
          uint64_t v28 = -3168;
          break;
        case 140:
          uint64_t v28 = -3169;
          break;
        case 141:
          uint64_t v28 = -3170;
          break;
        case 142:
          uint64_t v28 = -3171;
          break;
        case 143:
          uint64_t v28 = -3172;
          break;
        case 144:
          uint64_t v28 = -3173;
          break;
        case 145:
          uint64_t v28 = -3174;
          break;
        case 146:
          uint64_t v28 = -3175;
          break;
        case 147:
          uint64_t v28 = -3176;
          break;
        case 148:
          uint64_t v28 = -3177;
          break;
        case 149:
          uint64_t v28 = -3178;
          break;
        case 150:
          uint64_t v28 = -3179;
          break;
        case 151:
          uint64_t v28 = -3180;
          break;
        case 152:
          uint64_t v28 = -3181;
          break;
        case 153:
          uint64_t v28 = -3182;
          break;
        case 154:
          uint64_t v28 = -3183;
          break;
        case 155:
          uint64_t v28 = -3184;
          break;
        case 156:
          uint64_t v28 = -3185;
          break;
        case 157:
          uint64_t v28 = -3186;
          break;
        case 158:
          uint64_t v28 = -3187;
          break;
        case 159:
          uint64_t v28 = -3188;
          break;
        case 160:
          uint64_t v28 = -3189;
          break;
        case 161:
          uint64_t v28 = -3300;
          break;
        case 162:
          uint64_t v28 = -5108;
          break;
        case 163:
          uint64_t v28 = -6009;
          break;
        case 164:
          uint64_t v28 = -6010;
          break;
        case 165:
          uint64_t v28 = -6102;
          break;
        case 166:
          uint64_t v28 = -6103;
          break;
        case 167:
          uint64_t v28 = -6104;
          break;
        case 168:
          uint64_t v28 = -6105;
          break;
        case 169:
          uint64_t v28 = -8001;
          break;
        case 170:
          uint64_t v28 = -8301;
          break;
        case 171:
          uint64_t v28 = -8304;
          break;
        case 172:
          uint64_t v28 = -8400;
          break;
        case 173:
          uint64_t v28 = -8401;
          break;
        case 174:
          uint64_t v28 = -8403;
          break;
        case 175:
          uint64_t v28 = -8404;
          break;
        case 176:
          uint64_t v28 = -8428;
          break;
        case 177:
          uint64_t v28 = -8429;
          break;
        case 178:
          uint64_t v28 = -8433;
          break;
        case 179:
          uint64_t v28 = -8434;
          break;
        case 180:
          uint64_t v28 = -8500;
          break;
        case 181:
          uint64_t v28 = -8501;
          break;
        case 182:
          uint64_t v28 = -8502;
          break;
        case 183:
          uint64_t v28 = -8503;
          break;
        case 184:
          uint64_t v28 = -8504;
          break;
        case 185:
          uint64_t v28 = -22200;
          break;
        case 186:
          uint64_t v28 = -22201;
          break;
        case 187:
          uint64_t v28 = -22202;
          break;
        case 188:
          uint64_t v28 = -22203;
          break;
        case 189:
          uint64_t v28 = -22204;
          break;
        case 190:
          uint64_t v28 = -22205;
          break;
        case 191:
          uint64_t v28 = -22206;
          break;
        case 192:
          uint64_t v28 = -22207;
          break;
        case 193:
          uint64_t v28 = -22208;
          break;
        case 194:
          uint64_t v28 = -72200;
          break;
        case 195:
          uint64_t v28 = -72201;
          break;
        case 196:
          uint64_t v28 = -72202;
          break;
        case 197:
          uint64_t v28 = -72203;
          break;
        case 198:
          uint64_t v28 = -72204;
          break;
        case 199:
          uint64_t v28 = -72205;
          break;
        case 200:
          uint64_t v28 = -72206;
          break;
        case 201:
          uint64_t v28 = -72207;
          break;
        case 202:
          uint64_t v28 = -72208;
          break;
        case 203:
          uint64_t v28 = -72209;
          break;
        case 204:
          uint64_t v28 = -72210;
          break;
        case 205:
          uint64_t v28 = -72211;
          break;
        case 206:
          uint64_t v28 = -72780;
          break;
        case 207:
          uint64_t v28 = -72781;
          break;
        case 208:
          uint64_t v28 = -72782;
          break;
        default:
          break;
      }
      uint64_t v33 = -1;
      switch(v17)
      {
        case 1:
          uint64_t v33 = -2;
          break;
        case 2:
          uint64_t v33 = -3;
          break;
        case 3:
          uint64_t v33 = -4;
          break;
        case 4:
          uint64_t v33 = -5;
          break;
        case 5:
          uint64_t v33 = -6;
          break;
        case 6:
          uint64_t v33 = -7;
          break;
        case 7:
          uint64_t v33 = -8;
          break;
        case 8:
          uint64_t v33 = -9;
          break;
        case 9:
          uint64_t v33 = -10;
          break;
        case 10:
          uint64_t v33 = -11;
          break;
        case 11:
          uint64_t v33 = -12;
          break;
        case 12:
          uint64_t v33 = -13;
          break;
        case 13:
          uint64_t v33 = -14;
          break;
        case 14:
          uint64_t v33 = -15;
          break;
        case 15:
          uint64_t v33 = -16;
          break;
        case 16:
          uint64_t v33 = -17;
          break;
        case 17:
          uint64_t v33 = -18;
          break;
        case 18:
          uint64_t v33 = -19;
          break;
        case 19:
          uint64_t v33 = -20;
          break;
        case 20:
          uint64_t v33 = -21;
          break;
        case 21:
          uint64_t v33 = -22;
          break;
        case 22:
          uint64_t v33 = -28;
          break;
        case 23:
          uint64_t v33 = -29;
          break;
        case 24:
          uint64_t v33 = 200;
          break;
        case 25:
          uint64_t v33 = 20000;
          break;
        case 26:
          uint64_t v33 = 20001;
          break;
        case 27:
          uint64_t v33 = 20100;
          break;
        case 28:
          uint64_t v33 = 40000;
          break;
        case 29:
          uint64_t v33 = 40010;
          break;
        case 30:
          uint64_t v33 = 40011;
          break;
        case 31:
          uint64_t v33 = 40012;
          break;
        case 32:
          uint64_t v33 = 40013;
          break;
        case 33:
          uint64_t v33 = 40014;
          break;
        case 34:
          uint64_t v33 = 40015;
          break;
        case 35:
          uint64_t v33 = 40020;
          break;
        case 36:
          uint64_t v33 = 40021;
          break;
        case 37:
          uint64_t v33 = 40022;
          break;
        case 38:
          uint64_t v33 = 40023;
          break;
        case 39:
          uint64_t v33 = 40024;
          break;
        case 40:
          uint64_t v33 = 40025;
          break;
        case 41:
          uint64_t v33 = 40026;
          break;
        case 42:
          uint64_t v33 = 40027;
          break;
        case 43:
          uint64_t v33 = 40028;
          break;
        case 44:
          uint64_t v33 = 40029;
          break;
        case 45:
          uint64_t v33 = 40030;
          break;
        case 46:
          uint64_t v33 = 40101;
          break;
        case 47:
          uint64_t v33 = 40102;
          break;
        case 48:
          uint64_t v33 = 40200;
          break;
        case 49:
          uint64_t v33 = 40201;
          break;
        case 50:
          uint64_t v33 = 40205;
          break;
        case 51:
          uint64_t v33 = 40401;
          break;
        case 52:
          uint64_t v33 = 40402;
          break;
        case 53:
          uint64_t v33 = 40403;
          break;
        case 54:
          uint64_t v33 = 40404;
          break;
        case 55:
          uint64_t v33 = 40500;
          break;
        case 56:
          uint64_t v33 = 40600;
          break;
        case 57:
          uint64_t v33 = 40601;
          break;
        case 58:
          uint64_t v33 = 50000;
          break;
        case 59:
          uint64_t v33 = 50001;
          break;
        case 60:
          uint64_t v33 = 50002;
          break;
        case 61:
          uint64_t v33 = 99991;
          break;
        case 62:
          uint64_t v33 = 99992;
          break;
        case 63:
          uint64_t v33 = 99993;
          break;
        case 64:
          uint64_t v33 = -1101;
          break;
        case 65:
          uint64_t v33 = -1102;
          break;
        case 66:
          uint64_t v33 = -1103;
          break;
        case 67:
          uint64_t v33 = -1104;
          break;
        case 68:
          uint64_t v33 = -1110;
          break;
        case 69:
          uint64_t v33 = -1111;
          break;
        case 70:
          uint64_t v33 = -1112;
          break;
        case 71:
          uint64_t v33 = -1113;
          break;
        case 72:
          uint64_t v33 = -1114;
          break;
        case 73:
          uint64_t v33 = -1115;
          break;
        case 74:
          uint64_t v33 = -1116;
          break;
        case 75:
          uint64_t v33 = -1117;
          break;
        case 76:
          uint64_t v33 = -1118;
          break;
        case 77:
          uint64_t v33 = -1119;
          break;
        case 78:
          uint64_t v33 = -1201;
          break;
        case 79:
          uint64_t v33 = -1202;
          break;
        case 80:
          uint64_t v33 = -1203;
          break;
        case 81:
          uint64_t v33 = -1204;
          break;
        case 82:
          uint64_t v33 = -1402;
          break;
        case 83:
          uint64_t v33 = -1403;
          break;
        case 84:
          uint64_t v33 = -1404;
          break;
        case 85:
          uint64_t v33 = -1301;
          break;
        case 86:
          uint64_t v33 = -1302;
          break;
        case 87:
          uint64_t v33 = -1303;
          break;
        case 88:
          uint64_t v33 = -1304;
          break;
        case 89:
          uint64_t v33 = -1305;
          break;
        case 90:
          uint64_t v33 = -1306;
          break;
        case 91:
          uint64_t v33 = -1307;
          break;
        case 92:
          uint64_t v33 = -1308;
          break;
        case 93:
          uint64_t v33 = -1309;
          break;
        case 94:
          uint64_t v33 = -1310;
          break;
        case 95:
          uint64_t v33 = -1315;
          break;
        case 96:
          uint64_t v33 = -1316;
          break;
        case 97:
          uint64_t v33 = -1317;
          break;
        case 98:
          uint64_t v33 = -131600;
          break;
        case 99:
          uint64_t v33 = -2103;
          break;
        case 100:
          uint64_t v33 = -2104;
          break;
        case 101:
          uint64_t v33 = -2107;
          break;
        case 102:
          uint64_t v33 = -2110;
          break;
        case 103:
          uint64_t v33 = -2111;
          break;
        case 104:
          uint64_t v33 = -2112;
          break;
        case 105:
          uint64_t v33 = -2123;
          break;
        case 106:
          uint64_t v33 = -2124;
          break;
        case 107:
          uint64_t v33 = -2125;
          break;
        case 108:
          uint64_t v33 = -2126;
          break;
        case 109:
          uint64_t v33 = -2127;
          break;
        case 110:
          uint64_t v33 = -3101;
          break;
        case 111:
          uint64_t v33 = -3102;
          break;
        case 112:
          uint64_t v33 = -3103;
          break;
        case 113:
          uint64_t v33 = -3104;
          break;
        case 114:
          uint64_t v33 = -3105;
          break;
        case 115:
          uint64_t v33 = -3106;
          break;
        case 116:
          uint64_t v33 = -3107;
          break;
        case 117:
          uint64_t v33 = -3108;
          break;
        case 118:
          uint64_t v33 = -3109;
          break;
        case 119:
          uint64_t v33 = -3110;
          break;
        case 120:
          uint64_t v33 = -3111;
          break;
        case 121:
          uint64_t v33 = -3112;
          break;
        case 122:
          uint64_t v33 = -3113;
          break;
        case 123:
          uint64_t v33 = -3151;
          break;
        case 124:
          uint64_t v33 = -3152;
          break;
        case 125:
          uint64_t v33 = -3153;
          break;
        case 126:
          uint64_t v33 = -3154;
          break;
        case 127:
          uint64_t v33 = -3155;
          break;
        case 128:
          uint64_t v33 = -3156;
          break;
        case 129:
          uint64_t v33 = -3157;
          break;
        case 130:
          uint64_t v33 = -3158;
          break;
        case 131:
          uint64_t v33 = -3159;
          break;
        case 132:
          uint64_t v33 = -3161;
          break;
        case 133:
          uint64_t v33 = -3162;
          break;
        case 134:
          uint64_t v33 = -3163;
          break;
        case 135:
          uint64_t v33 = -3164;
          break;
        case 136:
          uint64_t v33 = -3165;
          break;
        case 137:
          uint64_t v33 = -3166;
          break;
        case 138:
          uint64_t v33 = -3167;
          break;
        case 139:
          uint64_t v33 = -3168;
          break;
        case 140:
          uint64_t v33 = -3169;
          break;
        case 141:
          uint64_t v33 = -3170;
          break;
        case 142:
          uint64_t v33 = -3171;
          break;
        case 143:
          uint64_t v33 = -3172;
          break;
        case 144:
          uint64_t v33 = -3173;
          break;
        case 145:
          uint64_t v33 = -3174;
          break;
        case 146:
          uint64_t v33 = -3175;
          break;
        case 147:
          uint64_t v33 = -3176;
          break;
        case 148:
          uint64_t v33 = -3177;
          break;
        case 149:
          uint64_t v33 = -3178;
          break;
        case 150:
          uint64_t v33 = -3179;
          break;
        case 151:
          uint64_t v33 = -3180;
          break;
        case 152:
          uint64_t v33 = -3181;
          break;
        case 153:
          uint64_t v33 = -3182;
          break;
        case 154:
          uint64_t v33 = -3183;
          break;
        case 155:
          uint64_t v33 = -3184;
          break;
        case 156:
          uint64_t v33 = -3185;
          break;
        case 157:
          uint64_t v33 = -3186;
          break;
        case 158:
          uint64_t v33 = -3187;
          break;
        case 159:
          uint64_t v33 = -3188;
          break;
        case 160:
          uint64_t v33 = -3189;
          break;
        case 161:
          uint64_t v33 = -3300;
          break;
        case 162:
          uint64_t v33 = -5108;
          break;
        case 163:
          uint64_t v33 = -6009;
          break;
        case 164:
          uint64_t v33 = -6010;
          break;
        case 165:
          uint64_t v33 = -6102;
          break;
        case 166:
          uint64_t v33 = -6103;
          break;
        case 167:
          uint64_t v33 = -6104;
          break;
        case 168:
          uint64_t v33 = -6105;
          break;
        case 169:
          uint64_t v33 = -8001;
          break;
        case 170:
          uint64_t v33 = -8301;
          break;
        case 171:
          uint64_t v33 = -8304;
          break;
        case 172:
          uint64_t v33 = -8400;
          break;
        case 173:
          uint64_t v33 = -8401;
          break;
        case 174:
          uint64_t v33 = -8403;
          break;
        case 175:
          uint64_t v33 = -8404;
          break;
        case 176:
          uint64_t v33 = -8428;
          break;
        case 177:
          uint64_t v33 = -8429;
          break;
        case 178:
          uint64_t v33 = -8433;
          break;
        case 179:
          uint64_t v33 = -8434;
          break;
        case 180:
          uint64_t v33 = -8500;
          break;
        case 181:
          uint64_t v33 = -8501;
          break;
        case 182:
          uint64_t v33 = -8502;
          break;
        case 183:
          uint64_t v33 = -8503;
          break;
        case 184:
          uint64_t v33 = -8504;
          break;
        case 185:
          uint64_t v33 = -22200;
          break;
        case 186:
          uint64_t v33 = -22201;
          break;
        case 187:
          uint64_t v33 = -22202;
          break;
        case 188:
          uint64_t v33 = -22203;
          break;
        case 189:
          uint64_t v33 = -22204;
          break;
        case 190:
          uint64_t v33 = -22205;
          break;
        case 191:
          uint64_t v33 = -22206;
          break;
        case 192:
          uint64_t v33 = -22207;
          break;
        case 193:
          uint64_t v33 = -22208;
          break;
        case 194:
          uint64_t v33 = -72200;
          break;
        case 195:
          uint64_t v33 = -72201;
          break;
        case 196:
          uint64_t v33 = -72202;
          break;
        case 197:
          uint64_t v33 = -72203;
          break;
        case 198:
          uint64_t v33 = -72204;
          break;
        case 199:
          uint64_t v33 = -72205;
          break;
        case 200:
          uint64_t v33 = -72206;
          break;
        case 201:
          uint64_t v33 = -72207;
          break;
        case 202:
          uint64_t v33 = -72208;
          break;
        case 203:
          uint64_t v33 = -72209;
          break;
        case 204:
          uint64_t v33 = -72210;
          break;
        case 205:
          uint64_t v33 = -72211;
          break;
        case 206:
          uint64_t v33 = -72780;
          break;
        case 207:
          uint64_t v33 = -72781;
          break;
        case 208:
          uint64_t v33 = -72782;
          break;
        default:
          break;
      }
      uint64_t v18 = v32;
      uint64_t v19 = v31;
      uint64_t v20 = v30;
      uint64_t v9 = v29;
      if (v28 != v33) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if (!v16) {
          return 0;
        }
        if (v4 != v15 || v5 != v16)
        {
          uint64_t v53 = v20;
          uint64_t v56 = v21;
          uint64_t v57 = v22;
          __int16 v54 = v24;
          __int16 v55 = v26;
          char v52 = v12;
          uint64_t v34 = v11;
          uint64_t v35 = v10;
          __int16 v36 = v14;
          __int16 v37 = v13;
          unsigned __int8 v38 = v23;
          uint64_t v39 = v7;
          uint64_t v40 = v8;
          uint64_t v41 = v18;
          uint64_t v42 = v19;
          uint64_t v43 = v9;
          char v44 = sub_214D1ABC8();
          uint64_t v9 = v43;
          uint64_t v20 = v53;
          uint64_t v19 = v42;
          uint64_t v18 = v41;
          uint64_t v8 = v40;
          uint64_t v7 = v39;
          unsigned __int8 v23 = v38;
          __int16 v13 = v37;
          __int16 v14 = v36;
          uint64_t v10 = v35;
          uint64_t v11 = v34;
          char v12 = v52;
          __int16 v24 = v54;
          __int16 v26 = v55;
          uint64_t v21 = v56;
          uint64_t v22 = v57;
          if ((v44 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v16)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v20 != 209) {
            return 0;
          }
          break;
        case 210:
          if (v20 != 210) {
            return 0;
          }
          break;
        case 211:
          if (v20 != 211) {
            return 0;
          }
          break;
        case 212:
          if (v20 != 212) {
            return 0;
          }
          break;
        case 213:
          if (v20 != 213) {
            return 0;
          }
          break;
        case 214:
          if (v20 != 214) {
            return 0;
          }
          break;
        case 215:
          if (v20 != 215) {
            return 0;
          }
          break;
        case 216:
          if (v20 != 216) {
            return 0;
          }
          break;
        case 217:
          if (v20 != 217) {
            return 0;
          }
          break;
        default:
          if ((v20 + 47) < 9u) {
            return 0;
          }
          uint64_t v46 = -1;
          switch(v9)
          {
            case 1:
              uint64_t v46 = -2;
              break;
            case 2:
              uint64_t v46 = -3;
              break;
            case 3:
              uint64_t v46 = -4;
              break;
            case 4:
              uint64_t v46 = -5;
              break;
            case 5:
              uint64_t v46 = -6;
              break;
            case 6:
              uint64_t v46 = -7;
              break;
            case 7:
              uint64_t v46 = -8;
              break;
            case 8:
              uint64_t v46 = -9;
              break;
            case 9:
              uint64_t v46 = -10;
              break;
            case 10:
              uint64_t v46 = -11;
              break;
            case 11:
              uint64_t v46 = -12;
              break;
            case 12:
              uint64_t v46 = -13;
              break;
            case 13:
              uint64_t v46 = -14;
              break;
            case 14:
              uint64_t v46 = -15;
              break;
            case 15:
              uint64_t v46 = -16;
              break;
            case 16:
              uint64_t v46 = -17;
              break;
            case 17:
              uint64_t v46 = -18;
              break;
            case 18:
              uint64_t v46 = -19;
              break;
            case 19:
              uint64_t v46 = -20;
              break;
            case 20:
              uint64_t v46 = -21;
              break;
            case 21:
              uint64_t v46 = -22;
              break;
            case 22:
              uint64_t v46 = -28;
              break;
            case 23:
              uint64_t v46 = -29;
              break;
            case 24:
              uint64_t v46 = 200;
              break;
            case 25:
              uint64_t v46 = 20000;
              break;
            case 26:
              uint64_t v46 = 20001;
              break;
            case 27:
              uint64_t v46 = 20100;
              break;
            case 28:
              uint64_t v46 = 40000;
              break;
            case 29:
              uint64_t v46 = 40010;
              break;
            case 30:
              uint64_t v46 = 40011;
              break;
            case 31:
              uint64_t v46 = 40012;
              break;
            case 32:
              uint64_t v46 = 40013;
              break;
            case 33:
              uint64_t v46 = 40014;
              break;
            case 34:
              uint64_t v46 = 40015;
              break;
            case 35:
              uint64_t v46 = 40020;
              break;
            case 36:
              uint64_t v46 = 40021;
              break;
            case 37:
              uint64_t v46 = 40022;
              break;
            case 38:
              uint64_t v46 = 40023;
              break;
            case 39:
              uint64_t v46 = 40024;
              break;
            case 40:
              uint64_t v46 = 40025;
              break;
            case 41:
              uint64_t v46 = 40026;
              break;
            case 42:
              uint64_t v46 = 40027;
              break;
            case 43:
              uint64_t v46 = 40028;
              break;
            case 44:
              uint64_t v46 = 40029;
              break;
            case 45:
              uint64_t v46 = 40030;
              break;
            case 46:
              uint64_t v46 = 40101;
              break;
            case 47:
              uint64_t v46 = 40102;
              break;
            case 48:
              uint64_t v46 = 40200;
              break;
            case 49:
              uint64_t v46 = 40201;
              break;
            case 50:
              uint64_t v46 = 40205;
              break;
            case 51:
              uint64_t v46 = 40401;
              break;
            case 52:
              uint64_t v46 = 40402;
              break;
            case 53:
              uint64_t v46 = 40403;
              break;
            case 54:
              uint64_t v46 = 40404;
              break;
            case 55:
              uint64_t v46 = 40500;
              break;
            case 56:
              uint64_t v46 = 40600;
              break;
            case 57:
              uint64_t v46 = 40601;
              break;
            case 58:
              uint64_t v46 = 50000;
              break;
            case 59:
              uint64_t v46 = 50001;
              break;
            case 60:
              uint64_t v46 = 50002;
              break;
            case 61:
              uint64_t v46 = 99991;
              break;
            case 62:
              uint64_t v46 = 99992;
              break;
            case 63:
              uint64_t v46 = 99993;
              break;
            case 64:
              uint64_t v46 = -1101;
              break;
            case 65:
              uint64_t v46 = -1102;
              break;
            case 66:
              uint64_t v46 = -1103;
              break;
            case 67:
              uint64_t v46 = -1104;
              break;
            case 68:
              uint64_t v46 = -1110;
              break;
            case 69:
              uint64_t v46 = -1111;
              break;
            case 70:
              uint64_t v46 = -1112;
              break;
            case 71:
              uint64_t v46 = -1113;
              break;
            case 72:
              uint64_t v46 = -1114;
              break;
            case 73:
              uint64_t v46 = -1115;
              break;
            case 74:
              uint64_t v46 = -1116;
              break;
            case 75:
              uint64_t v46 = -1117;
              break;
            case 76:
              uint64_t v46 = -1118;
              break;
            case 77:
              uint64_t v46 = -1119;
              break;
            case 78:
              uint64_t v46 = -1201;
              break;
            case 79:
              uint64_t v46 = -1202;
              break;
            case 80:
              uint64_t v46 = -1203;
              break;
            case 81:
              uint64_t v46 = -1204;
              break;
            case 82:
              uint64_t v46 = -1402;
              break;
            case 83:
              uint64_t v46 = -1403;
              break;
            case 84:
              uint64_t v46 = -1404;
              break;
            case 85:
              uint64_t v46 = -1301;
              break;
            case 86:
              uint64_t v46 = -1302;
              break;
            case 87:
              uint64_t v46 = -1303;
              break;
            case 88:
              uint64_t v46 = -1304;
              break;
            case 89:
              uint64_t v46 = -1305;
              break;
            case 90:
              uint64_t v46 = -1306;
              break;
            case 91:
              uint64_t v46 = -1307;
              break;
            case 92:
              uint64_t v46 = -1308;
              break;
            case 93:
              uint64_t v46 = -1309;
              break;
            case 94:
              uint64_t v46 = -1310;
              break;
            case 95:
              uint64_t v46 = -1315;
              break;
            case 96:
              uint64_t v46 = -1316;
              break;
            case 97:
              uint64_t v46 = -1317;
              break;
            case 98:
              uint64_t v46 = -131600;
              break;
            case 99:
              uint64_t v46 = -2103;
              break;
            case 100:
              uint64_t v46 = -2104;
              break;
            case 101:
              uint64_t v46 = -2107;
              break;
            case 102:
              uint64_t v46 = -2110;
              break;
            case 103:
              uint64_t v46 = -2111;
              break;
            case 104:
              uint64_t v46 = -2112;
              break;
            case 105:
              uint64_t v46 = -2123;
              break;
            case 106:
              uint64_t v46 = -2124;
              break;
            case 107:
              uint64_t v46 = -2125;
              break;
            case 108:
              uint64_t v46 = -2126;
              break;
            case 109:
              uint64_t v46 = -2127;
              break;
            case 110:
              uint64_t v46 = -3101;
              break;
            case 111:
              uint64_t v46 = -3102;
              break;
            case 112:
              uint64_t v46 = -3103;
              break;
            case 113:
              uint64_t v46 = -3104;
              break;
            case 114:
              uint64_t v46 = -3105;
              break;
            case 115:
              uint64_t v46 = -3106;
              break;
            case 116:
              uint64_t v46 = -3107;
              break;
            case 117:
              uint64_t v46 = -3108;
              break;
            case 118:
              uint64_t v46 = -3109;
              break;
            case 119:
              uint64_t v46 = -3110;
              break;
            case 120:
              uint64_t v46 = -3111;
              break;
            case 121:
              uint64_t v46 = -3112;
              break;
            case 122:
              uint64_t v46 = -3113;
              break;
            case 123:
              uint64_t v46 = -3151;
              break;
            case 124:
              uint64_t v46 = -3152;
              break;
            case 125:
              uint64_t v46 = -3153;
              break;
            case 126:
              uint64_t v46 = -3154;
              break;
            case 127:
              uint64_t v46 = -3155;
              break;
            case 128:
              uint64_t v46 = -3156;
              break;
            case 129:
              uint64_t v46 = -3157;
              break;
            case 130:
              uint64_t v46 = -3158;
              break;
            case 131:
              uint64_t v46 = -3159;
              break;
            case 132:
              uint64_t v46 = -3161;
              break;
            case 133:
              uint64_t v46 = -3162;
              break;
            case 134:
              uint64_t v46 = -3163;
              break;
            case 135:
              uint64_t v46 = -3164;
              break;
            case 136:
              uint64_t v46 = -3165;
              break;
            case 137:
              uint64_t v46 = -3166;
              break;
            case 138:
              uint64_t v46 = -3167;
              break;
            case 139:
              uint64_t v46 = -3168;
              break;
            case 140:
              uint64_t v46 = -3169;
              break;
            case 141:
              uint64_t v46 = -3170;
              break;
            case 142:
              uint64_t v46 = -3171;
              break;
            case 143:
              uint64_t v46 = -3172;
              break;
            case 144:
              uint64_t v46 = -3173;
              break;
            case 145:
              uint64_t v46 = -3174;
              break;
            case 146:
              uint64_t v46 = -3175;
              break;
            case 147:
              uint64_t v46 = -3176;
              break;
            case 148:
              uint64_t v46 = -3177;
              break;
            case 149:
              uint64_t v46 = -3178;
              break;
            case 150:
              uint64_t v46 = -3179;
              break;
            case 151:
              uint64_t v46 = -3180;
              break;
            case 152:
              uint64_t v46 = -3181;
              break;
            case 153:
              uint64_t v46 = -3182;
              break;
            case 154:
              uint64_t v46 = -3183;
              break;
            case 155:
              uint64_t v46 = -3184;
              break;
            case 156:
              uint64_t v46 = -3185;
              break;
            case 157:
              uint64_t v46 = -3186;
              break;
            case 158:
              uint64_t v46 = -3187;
              break;
            case 159:
              uint64_t v46 = -3188;
              break;
            case 160:
              uint64_t v46 = -3189;
              break;
            case 161:
              uint64_t v46 = -3300;
              break;
            case 162:
              uint64_t v46 = -5108;
              break;
            case 163:
              uint64_t v46 = -6009;
              break;
            case 164:
              uint64_t v46 = -6010;
              break;
            case 165:
              uint64_t v46 = -6102;
              break;
            case 166:
              uint64_t v46 = -6103;
              break;
            case 167:
              uint64_t v46 = -6104;
              break;
            case 168:
              uint64_t v46 = -6105;
              break;
            case 169:
              uint64_t v46 = -8001;
              break;
            case 170:
              uint64_t v46 = -8301;
              break;
            case 171:
              uint64_t v46 = -8304;
              break;
            case 172:
              uint64_t v46 = -8400;
              break;
            case 173:
              uint64_t v46 = -8401;
              break;
            case 174:
              uint64_t v46 = -8403;
              break;
            case 175:
              uint64_t v46 = -8404;
              break;
            case 176:
              uint64_t v46 = -8428;
              break;
            case 177:
              uint64_t v46 = -8429;
              break;
            case 178:
              uint64_t v46 = -8433;
              break;
            case 179:
              uint64_t v46 = -8434;
              break;
            case 180:
              uint64_t v46 = -8500;
              break;
            case 181:
              uint64_t v46 = -8501;
              break;
            case 182:
              uint64_t v46 = -8502;
              break;
            case 183:
              uint64_t v46 = -8503;
              break;
            case 184:
              uint64_t v46 = -8504;
              break;
            case 185:
              uint64_t v46 = -22200;
              break;
            case 186:
              uint64_t v46 = -22201;
              break;
            case 187:
              uint64_t v46 = -22202;
              break;
            case 188:
              uint64_t v46 = -22203;
              break;
            case 189:
              uint64_t v46 = -22204;
              break;
            case 190:
              uint64_t v46 = -22205;
              break;
            case 191:
              uint64_t v46 = -22206;
              break;
            case 192:
              uint64_t v46 = -22207;
              break;
            case 193:
              uint64_t v46 = -22208;
              break;
            case 194:
              uint64_t v46 = -72200;
              break;
            case 195:
              uint64_t v46 = -72201;
              break;
            case 196:
              uint64_t v46 = -72202;
              break;
            case 197:
              uint64_t v46 = -72203;
              break;
            case 198:
              uint64_t v46 = -72204;
              break;
            case 199:
              uint64_t v46 = -72205;
              break;
            case 200:
              uint64_t v46 = -72206;
              break;
            case 201:
              uint64_t v46 = -72207;
              break;
            case 202:
              uint64_t v46 = -72208;
              break;
            case 203:
              uint64_t v46 = -72209;
              break;
            case 204:
              uint64_t v46 = -72210;
              break;
            case 205:
              uint64_t v46 = -72211;
              break;
            case 206:
              uint64_t v46 = -72780;
              break;
            case 207:
              uint64_t v46 = -72781;
              break;
            case 208:
              uint64_t v46 = -72782;
              break;
            default:
              break;
          }
          uint64_t v47 = -1;
          switch(v20)
          {
            case 1:
              uint64_t v47 = -2;
              break;
            case 2:
              uint64_t v47 = -3;
              break;
            case 3:
              uint64_t v47 = -4;
              break;
            case 4:
              uint64_t v47 = -5;
              break;
            case 5:
              uint64_t v47 = -6;
              break;
            case 6:
              uint64_t v47 = -7;
              break;
            case 7:
              uint64_t v47 = -8;
              break;
            case 8:
              uint64_t v47 = -9;
              break;
            case 9:
              uint64_t v47 = -10;
              break;
            case 10:
              uint64_t v47 = -11;
              break;
            case 11:
              uint64_t v47 = -12;
              break;
            case 12:
              uint64_t v47 = -13;
              break;
            case 13:
              uint64_t v47 = -14;
              break;
            case 14:
              uint64_t v47 = -15;
              break;
            case 15:
              uint64_t v47 = -16;
              break;
            case 16:
              uint64_t v47 = -17;
              break;
            case 17:
              uint64_t v47 = -18;
              break;
            case 18:
              uint64_t v47 = -19;
              break;
            case 19:
              uint64_t v47 = -20;
              break;
            case 20:
              uint64_t v47 = -21;
              break;
            case 21:
              uint64_t v47 = -22;
              break;
            case 22:
              uint64_t v47 = -28;
              break;
            case 23:
              uint64_t v47 = -29;
              break;
            case 24:
              uint64_t v47 = 200;
              break;
            case 25:
              uint64_t v47 = 20000;
              break;
            case 26:
              uint64_t v47 = 20001;
              break;
            case 27:
              uint64_t v47 = 20100;
              break;
            case 28:
              uint64_t v47 = 40000;
              break;
            case 29:
              uint64_t v47 = 40010;
              break;
            case 30:
              uint64_t v47 = 40011;
              break;
            case 31:
              uint64_t v47 = 40012;
              break;
            case 32:
              uint64_t v47 = 40013;
              break;
            case 33:
              uint64_t v47 = 40014;
              break;
            case 34:
              uint64_t v47 = 40015;
              break;
            case 35:
              uint64_t v47 = 40020;
              break;
            case 36:
              uint64_t v47 = 40021;
              break;
            case 37:
              uint64_t v47 = 40022;
              break;
            case 38:
              uint64_t v47 = 40023;
              break;
            case 39:
              uint64_t v47 = 40024;
              break;
            case 40:
              uint64_t v47 = 40025;
              break;
            case 41:
              uint64_t v47 = 40026;
              break;
            case 42:
              uint64_t v47 = 40027;
              break;
            case 43:
              uint64_t v47 = 40028;
              break;
            case 44:
              uint64_t v47 = 40029;
              break;
            case 45:
              uint64_t v47 = 40030;
              break;
            case 46:
              uint64_t v47 = 40101;
              break;
            case 47:
              uint64_t v47 = 40102;
              break;
            case 48:
              uint64_t v47 = 40200;
              break;
            case 49:
              uint64_t v47 = 40201;
              break;
            case 50:
              uint64_t v47 = 40205;
              break;
            case 51:
              uint64_t v47 = 40401;
              break;
            case 52:
              uint64_t v47 = 40402;
              break;
            case 53:
              uint64_t v47 = 40403;
              break;
            case 54:
              uint64_t v47 = 40404;
              break;
            case 55:
              uint64_t v47 = 40500;
              break;
            case 56:
              uint64_t v47 = 40600;
              break;
            case 57:
              uint64_t v47 = 40601;
              break;
            case 58:
              uint64_t v47 = 50000;
              break;
            case 59:
              uint64_t v47 = 50001;
              break;
            case 60:
              uint64_t v47 = 50002;
              break;
            case 61:
              uint64_t v47 = 99991;
              break;
            case 62:
              uint64_t v47 = 99992;
              break;
            case 63:
              uint64_t v47 = 99993;
              break;
            case 64:
              uint64_t v47 = -1101;
              break;
            case 65:
              uint64_t v47 = -1102;
              break;
            case 66:
              uint64_t v47 = -1103;
              break;
            case 67:
              uint64_t v47 = -1104;
              break;
            case 68:
              uint64_t v47 = -1110;
              break;
            case 69:
              uint64_t v47 = -1111;
              break;
            case 70:
              uint64_t v47 = -1112;
              break;
            case 71:
              uint64_t v47 = -1113;
              break;
            case 72:
              uint64_t v47 = -1114;
              break;
            case 73:
              uint64_t v47 = -1115;
              break;
            case 74:
              uint64_t v47 = -1116;
              break;
            case 75:
              uint64_t v47 = -1117;
              break;
            case 76:
              uint64_t v47 = -1118;
              break;
            case 77:
              uint64_t v47 = -1119;
              break;
            case 78:
              uint64_t v47 = -1201;
              break;
            case 79:
              uint64_t v47 = -1202;
              break;
            case 80:
              uint64_t v47 = -1203;
              break;
            case 81:
              uint64_t v47 = -1204;
              break;
            case 82:
              uint64_t v47 = -1402;
              break;
            case 83:
              uint64_t v47 = -1403;
              break;
            case 84:
              uint64_t v47 = -1404;
              break;
            case 85:
              uint64_t v47 = -1301;
              break;
            case 86:
              uint64_t v47 = -1302;
              break;
            case 87:
              uint64_t v47 = -1303;
              break;
            case 88:
              uint64_t v47 = -1304;
              break;
            case 89:
              uint64_t v47 = -1305;
              break;
            case 90:
              uint64_t v47 = -1306;
              break;
            case 91:
              uint64_t v47 = -1307;
              break;
            case 92:
              uint64_t v47 = -1308;
              break;
            case 93:
              uint64_t v47 = -1309;
              break;
            case 94:
              uint64_t v47 = -1310;
              break;
            case 95:
              uint64_t v47 = -1315;
              break;
            case 96:
              uint64_t v47 = -1316;
              break;
            case 97:
              uint64_t v47 = -1317;
              break;
            case 98:
              uint64_t v47 = -131600;
              break;
            case 99:
              uint64_t v47 = -2103;
              break;
            case 100:
              uint64_t v47 = -2104;
              break;
            case 101:
              uint64_t v47 = -2107;
              break;
            case 102:
              uint64_t v47 = -2110;
              break;
            case 103:
              uint64_t v47 = -2111;
              break;
            case 104:
              uint64_t v47 = -2112;
              break;
            case 105:
              uint64_t v47 = -2123;
              break;
            case 106:
              uint64_t v47 = -2124;
              break;
            case 107:
              uint64_t v47 = -2125;
              break;
            case 108:
              uint64_t v47 = -2126;
              break;
            case 109:
              uint64_t v47 = -2127;
              break;
            case 110:
              uint64_t v47 = -3101;
              break;
            case 111:
              uint64_t v47 = -3102;
              break;
            case 112:
              uint64_t v47 = -3103;
              break;
            case 113:
              uint64_t v47 = -3104;
              break;
            case 114:
              uint64_t v47 = -3105;
              break;
            case 115:
              uint64_t v47 = -3106;
              break;
            case 116:
              uint64_t v47 = -3107;
              break;
            case 117:
              uint64_t v47 = -3108;
              break;
            case 118:
              uint64_t v47 = -3109;
              break;
            case 119:
              uint64_t v47 = -3110;
              break;
            case 120:
              uint64_t v47 = -3111;
              break;
            case 121:
              uint64_t v47 = -3112;
              break;
            case 122:
              uint64_t v47 = -3113;
              break;
            case 123:
              uint64_t v47 = -3151;
              break;
            case 124:
              uint64_t v47 = -3152;
              break;
            case 125:
              uint64_t v47 = -3153;
              break;
            case 126:
              uint64_t v47 = -3154;
              break;
            case 127:
              uint64_t v47 = -3155;
              break;
            case 128:
              uint64_t v47 = -3156;
              break;
            case 129:
              uint64_t v47 = -3157;
              break;
            case 130:
              uint64_t v47 = -3158;
              break;
            case 131:
              uint64_t v47 = -3159;
              break;
            case 132:
              uint64_t v47 = -3161;
              break;
            case 133:
              uint64_t v47 = -3162;
              break;
            case 134:
              uint64_t v47 = -3163;
              break;
            case 135:
              uint64_t v47 = -3164;
              break;
            case 136:
              uint64_t v47 = -3165;
              break;
            case 137:
              uint64_t v47 = -3166;
              break;
            case 138:
              uint64_t v47 = -3167;
              break;
            case 139:
              uint64_t v47 = -3168;
              break;
            case 140:
              uint64_t v47 = -3169;
              break;
            case 141:
              uint64_t v47 = -3170;
              break;
            case 142:
              uint64_t v47 = -3171;
              break;
            case 143:
              uint64_t v47 = -3172;
              break;
            case 144:
              uint64_t v47 = -3173;
              break;
            case 145:
              uint64_t v47 = -3174;
              break;
            case 146:
              uint64_t v47 = -3175;
              break;
            case 147:
              uint64_t v47 = -3176;
              break;
            case 148:
              uint64_t v47 = -3177;
              break;
            case 149:
              uint64_t v47 = -3178;
              break;
            case 150:
              uint64_t v47 = -3179;
              break;
            case 151:
              uint64_t v47 = -3180;
              break;
            case 152:
              uint64_t v47 = -3181;
              break;
            case 153:
              uint64_t v47 = -3182;
              break;
            case 154:
              uint64_t v47 = -3183;
              break;
            case 155:
              uint64_t v47 = -3184;
              break;
            case 156:
              uint64_t v47 = -3185;
              break;
            case 157:
              uint64_t v47 = -3186;
              break;
            case 158:
              uint64_t v47 = -3187;
              break;
            case 159:
              uint64_t v47 = -3188;
              break;
            case 160:
              uint64_t v47 = -3189;
              break;
            case 161:
              uint64_t v47 = -3300;
              break;
            case 162:
              uint64_t v47 = -5108;
              break;
            case 163:
              uint64_t v47 = -6009;
              break;
            case 164:
              uint64_t v47 = -6010;
              break;
            case 165:
              uint64_t v47 = -6102;
              break;
            case 166:
              uint64_t v47 = -6103;
              break;
            case 167:
              uint64_t v47 = -6104;
              break;
            case 168:
              uint64_t v47 = -6105;
              break;
            case 169:
              uint64_t v47 = -8001;
              break;
            case 170:
              uint64_t v47 = -8301;
              break;
            case 171:
              uint64_t v47 = -8304;
              break;
            case 172:
              uint64_t v47 = -8400;
              break;
            case 173:
              uint64_t v47 = -8401;
              break;
            case 174:
              uint64_t v47 = -8403;
              break;
            case 175:
              uint64_t v47 = -8404;
              break;
            case 176:
              uint64_t v47 = -8428;
              break;
            case 177:
              uint64_t v47 = -8429;
              break;
            case 178:
              uint64_t v47 = -8433;
              break;
            case 179:
              uint64_t v47 = -8434;
              break;
            case 180:
              uint64_t v47 = -8500;
              break;
            case 181:
              uint64_t v47 = -8501;
              break;
            case 182:
              uint64_t v47 = -8502;
              break;
            case 183:
              uint64_t v47 = -8503;
              break;
            case 184:
              uint64_t v47 = -8504;
              break;
            case 185:
              uint64_t v47 = -22200;
              break;
            case 186:
              uint64_t v47 = -22201;
              break;
            case 187:
              uint64_t v47 = -22202;
              break;
            case 188:
              uint64_t v47 = -22203;
              break;
            case 189:
              uint64_t v47 = -22204;
              break;
            case 190:
              uint64_t v47 = -22205;
              break;
            case 191:
              uint64_t v47 = -22206;
              break;
            case 192:
              uint64_t v47 = -22207;
              break;
            case 193:
              uint64_t v47 = -22208;
              break;
            case 194:
              uint64_t v47 = -72200;
              break;
            case 195:
              uint64_t v47 = -72201;
              break;
            case 196:
              uint64_t v47 = -72202;
              break;
            case 197:
              uint64_t v47 = -72203;
              break;
            case 198:
              uint64_t v47 = -72204;
              break;
            case 199:
              uint64_t v47 = -72205;
              break;
            case 200:
              uint64_t v47 = -72206;
              break;
            case 201:
              uint64_t v47 = -72207;
              break;
            case 202:
              uint64_t v47 = -72208;
              break;
            case 203:
              uint64_t v47 = -72209;
              break;
            case 204:
              uint64_t v47 = -72210;
              break;
            case 205:
              uint64_t v47 = -72211;
              break;
            case 206:
              uint64_t v47 = -72780;
              break;
            case 207:
              uint64_t v47 = -72781;
              break;
            case 208:
              uint64_t v47 = -72782;
              break;
            default:
              break;
          }
          if (v46 != v47) {
            return 0;
          }
          break;
      }
      if (!v7)
      {
        if (!v18) {
          goto LABEL_894;
        }
        return 0;
      }
      if (!v18) {
        return 0;
      }
      if (v8 != v19 || v7 != v18)
      {
        __int16 v48 = v13;
        unsigned __int8 v49 = v23;
        char v50 = sub_214D1ABC8();
        unsigned __int8 v23 = v49;
        __int16 v13 = v48;
        if ((v50 & 1) == 0) {
          return 0;
        }
      }
LABEL_894:
      __int16 v51 = v13;
      if ((sub_214C7E0C8(v10, v11, v12, v21, v22, v23) & 1) == 0) {
        return 0;
      }
      return sub_214C7F6F0(v51 | (unsigned __int16)(v14 << 8), v24 | (unsigned __int16)(v26 << 8));
  }
}

BOOL sub_214CE2830(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __int16 v3 = *(unsigned __int8 *)(a1 + 24);
  __int16 v4 = *(unsigned __int8 *)(a1 + 25);
  uint64_t v44 = *(void *)(a1 + 32);
  __int16 v42 = *(unsigned __int8 *)(a1 + 41);
  __int16 v43 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v40 = *(void *)(a1 + 48);
  __int16 v38 = *(unsigned __int8 *)(a1 + 57);
  __int16 v39 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v36 = *(void *)(a1 + 64);
  __int16 v34 = *(unsigned __int8 *)(a1 + 73);
  __int16 v35 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v30 = *(void *)(a1 + 80);
  __int16 v28 = *(unsigned __int8 *)(a1 + 89);
  __int16 v29 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v24 = *(void *)(a1 + 96);
  __int16 v22 = *(unsigned __int8 *)(a1 + 105);
  __int16 v23 = *(unsigned __int8 *)(a1 + 104);
  uint64_t v18 = *(void *)(a1 + 112);
  __int16 v16 = *(unsigned __int8 *)(a1 + 121);
  __int16 v17 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v5 = *(void *)(a2 + 16);
  __int16 v6 = *(unsigned __int8 *)(a2 + 24);
  __int16 v7 = *(unsigned __int8 *)(a2 + 25);
  uint64_t v41 = *(void *)(a2 + 32);
  __int16 v8 = *(unsigned __int8 *)(a2 + 40);
  __int16 v9 = *(unsigned __int8 *)(a2 + 41);
  uint64_t v37 = *(void *)(a2 + 48);
  __int16 v10 = *(unsigned __int8 *)(a2 + 56);
  __int16 v11 = *(unsigned __int8 *)(a2 + 57);
  uint64_t v33 = *(void *)(a2 + 64);
  __int16 v31 = *(unsigned __int8 *)(a2 + 73);
  __int16 v32 = *(unsigned __int8 *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  __int16 v25 = *(unsigned __int8 *)(a2 + 89);
  __int16 v26 = *(unsigned __int8 *)(a2 + 88);
  uint64_t v21 = *(void *)(a2 + 96);
  __int16 v19 = *(unsigned __int8 *)(a2 + 105);
  __int16 v20 = *(unsigned __int8 *)(a2 + 104);
  uint64_t v15 = *(void *)(a2 + 112);
  __int16 v13 = *(unsigned __int8 *)(a2 + 121);
  __int16 v14 = *(unsigned __int8 *)(a2 + 120);
  if (!sub_214C82314(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8) | (*(unsigned __int8 *)(a2 + 9) << 8))|| !sub_214C82314(v2, v3 | (v4 << 8), v5, v6 | (v7 << 8))|| !sub_214C82314(v44, v43 | (v42 << 8), v41, v8 | (v9 << 8))|| !sub_214C82314(v40, v39 | (v38 << 8), v37, v10 | (v11 << 8))|| !sub_214C82314(v36, v35 | (v34 << 8), v33, v32 | (v31 << 8))|| !sub_214C82314(v30, v29 | (v28 << 8), v27, v26 | (v25 << 8))|| !sub_214C82314(v24, v23 | (v22 << 8), v21, v20 | (v19 << 8)))
  {
    return 0;
  }
  return sub_214C82314(v18, v17 | (v16 << 8), v15, v14 | (v13 << 8));
}

BOOL sub_214CE2AA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  int v6 = *((unsigned __int8 *)a1 + 16);
  __int16 v7 = *((unsigned __int8 *)a1 + 17);
  __int16 v8 = *((unsigned __int8 *)a1 + 18);
  uint64_t v9 = a1[3];
  __int16 v10 = *((unsigned __int8 *)a1 + 32);
  __int16 v11 = *((unsigned __int8 *)a1 + 33);
  uint64_t v12 = a1[5];
  __int16 v13 = *((unsigned __int8 *)a1 + 48);
  __int16 v14 = *((unsigned __int8 *)a1 + 49);
  uint64_t v15 = a1[7];
  __int16 v78 = *((unsigned __int8 *)a1 + 64);
  __int16 v79 = *((unsigned __int8 *)a1 + 65);
  uint64_t v77 = a1[9];
  __int16 v76 = *((unsigned __int8 *)a1 + 80);
  __int16 v75 = *((unsigned __int8 *)a1 + 81);
  uint64_t v71 = a1[11];
  __int16 v69 = *((unsigned __int8 *)a1 + 97);
  __int16 v70 = *((unsigned __int8 *)a1 + 96);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = *((unsigned __int8 *)a2 + 16);
  __int16 v19 = *((unsigned __int8 *)a2 + 17);
  __int16 v20 = *((unsigned __int8 *)a2 + 18);
  uint64_t v21 = a2[3];
  __int16 v22 = *((unsigned __int8 *)a2 + 32);
  __int16 v23 = *((unsigned __int8 *)a2 + 33);
  uint64_t v24 = a2[5];
  __int16 v25 = *((unsigned __int8 *)a2 + 48);
  __int16 v26 = *((unsigned __int8 *)a2 + 49);
  uint64_t v27 = a2[7];
  __int16 v28 = *((unsigned __int8 *)a2 + 64);
  __int16 v29 = *((unsigned __int8 *)a2 + 65);
  uint64_t v72 = a2[9];
  __int16 v73 = *((unsigned __int8 *)a2 + 80);
  __int16 v74 = *((unsigned __int8 *)a2 + 81);
  uint64_t v68 = a2[11];
  __int16 v66 = *((unsigned __int8 *)a2 + 97);
  __int16 v67 = *((unsigned __int8 *)a2 + 96);
  LODWORD(a2) = v6 - 209;
  uint64_t v30 = (v6 - 209);
  switch((int)a2)
  {
    case 0:
      if (v18 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v18 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v18 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v18 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v18 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v18 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v18 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v18 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v18 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v18 + 47) < 9u) {
        return 0;
      }
      uint64_t v31 = -1;
      switch(v30)
      {
        case 1:
          uint64_t v31 = -2;
          break;
        case 2:
          uint64_t v31 = -3;
          break;
        case 3:
          uint64_t v31 = -4;
          break;
        case 4:
          uint64_t v31 = -5;
          break;
        case 5:
          uint64_t v31 = -6;
          break;
        case 6:
          uint64_t v31 = -7;
          break;
        case 7:
          uint64_t v31 = -8;
          break;
        case 8:
          uint64_t v31 = -9;
          break;
        case 9:
          uint64_t v31 = -10;
          break;
        case 10:
          uint64_t v31 = -11;
          break;
        case 11:
          uint64_t v31 = -12;
          break;
        case 12:
          uint64_t v31 = -13;
          break;
        case 13:
          uint64_t v31 = -14;
          break;
        case 14:
          uint64_t v31 = -15;
          break;
        case 15:
          uint64_t v31 = -16;
          break;
        case 16:
          uint64_t v31 = -17;
          break;
        case 17:
          uint64_t v31 = -18;
          break;
        case 18:
          uint64_t v31 = -19;
          break;
        case 19:
          uint64_t v31 = -20;
          break;
        case 20:
          uint64_t v31 = -21;
          break;
        case 21:
          uint64_t v31 = -22;
          break;
        case 22:
          uint64_t v31 = -28;
          break;
        case 23:
          uint64_t v31 = -29;
          break;
        case 24:
          uint64_t v31 = 200;
          break;
        case 25:
          uint64_t v31 = 20000;
          break;
        case 26:
          uint64_t v31 = 20001;
          break;
        case 27:
          uint64_t v31 = 20100;
          break;
        case 28:
          uint64_t v31 = 40000;
          break;
        case 29:
          uint64_t v31 = 40010;
          break;
        case 30:
          uint64_t v31 = 40011;
          break;
        case 31:
          uint64_t v31 = 40012;
          break;
        case 32:
          uint64_t v31 = 40013;
          break;
        case 33:
          uint64_t v31 = 40014;
          break;
        case 34:
          uint64_t v31 = 40015;
          break;
        case 35:
          uint64_t v31 = 40020;
          break;
        case 36:
          uint64_t v31 = 40021;
          break;
        case 37:
          uint64_t v31 = 40022;
          break;
        case 38:
          uint64_t v31 = 40023;
          break;
        case 39:
          uint64_t v31 = 40024;
          break;
        case 40:
          uint64_t v31 = 40025;
          break;
        case 41:
          uint64_t v31 = 40026;
          break;
        case 42:
          uint64_t v31 = 40027;
          break;
        case 43:
          uint64_t v31 = 40028;
          break;
        case 44:
          uint64_t v31 = 40029;
          break;
        case 45:
          uint64_t v31 = 40030;
          break;
        case 46:
          uint64_t v31 = 40101;
          break;
        case 47:
          uint64_t v31 = 40102;
          break;
        case 48:
          uint64_t v31 = 40200;
          break;
        case 49:
          uint64_t v31 = 40201;
          break;
        case 50:
          uint64_t v31 = 40205;
          break;
        case 51:
          uint64_t v31 = 40401;
          break;
        case 52:
          uint64_t v31 = 40402;
          break;
        case 53:
          uint64_t v31 = 40403;
          break;
        case 54:
          uint64_t v31 = 40404;
          break;
        case 55:
          uint64_t v31 = 40500;
          break;
        case 56:
          uint64_t v31 = 40600;
          break;
        case 57:
          uint64_t v31 = 40601;
          break;
        case 58:
          uint64_t v31 = 50000;
          break;
        case 59:
          uint64_t v31 = 50001;
          break;
        case 60:
          uint64_t v31 = 50002;
          break;
        case 61:
          uint64_t v31 = 99991;
          break;
        case 62:
          uint64_t v31 = 99992;
          break;
        case 63:
          uint64_t v31 = 99993;
          break;
        case 64:
          uint64_t v31 = -1101;
          break;
        case 65:
          uint64_t v31 = -1102;
          break;
        case 66:
          uint64_t v31 = -1103;
          break;
        case 67:
          uint64_t v31 = -1104;
          break;
        case 68:
          uint64_t v31 = -1110;
          break;
        case 69:
          uint64_t v31 = -1111;
          break;
        case 70:
          uint64_t v31 = -1112;
          break;
        case 71:
          uint64_t v31 = -1113;
          break;
        case 72:
          uint64_t v31 = -1114;
          break;
        case 73:
          uint64_t v31 = -1115;
          break;
        case 74:
          uint64_t v31 = -1116;
          break;
        case 75:
          uint64_t v31 = -1117;
          break;
        case 76:
          uint64_t v31 = -1118;
          break;
        case 77:
          uint64_t v31 = -1119;
          break;
        case 78:
          uint64_t v31 = -1201;
          break;
        case 79:
          uint64_t v31 = -1202;
          break;
        case 80:
          uint64_t v31 = -1203;
          break;
        case 81:
          uint64_t v31 = -1204;
          break;
        case 82:
          uint64_t v31 = -1402;
          break;
        case 83:
          uint64_t v31 = -1403;
          break;
        case 84:
          uint64_t v31 = -1404;
          break;
        case 85:
          uint64_t v31 = -1301;
          break;
        case 86:
          uint64_t v31 = -1302;
          break;
        case 87:
          uint64_t v31 = -1303;
          break;
        case 88:
          uint64_t v31 = -1304;
          break;
        case 89:
          uint64_t v31 = -1305;
          break;
        case 90:
          uint64_t v31 = -1306;
          break;
        case 91:
          uint64_t v31 = -1307;
          break;
        case 92:
          uint64_t v31 = -1308;
          break;
        case 93:
          uint64_t v31 = -1309;
          break;
        case 94:
          uint64_t v31 = -1310;
          break;
        case 95:
          uint64_t v31 = -1315;
          break;
        case 96:
          uint64_t v31 = -1316;
          break;
        case 97:
          uint64_t v31 = -1317;
          break;
        case 98:
          uint64_t v31 = -131600;
          break;
        case 99:
          uint64_t v31 = -2103;
          break;
        case 100:
          uint64_t v31 = -2104;
          break;
        case 101:
          uint64_t v31 = -2107;
          break;
        case 102:
          uint64_t v31 = -2110;
          break;
        case 103:
          uint64_t v31 = -2111;
          break;
        case 104:
          uint64_t v31 = -2112;
          break;
        case 105:
          uint64_t v31 = -2123;
          break;
        case 106:
          uint64_t v31 = -2124;
          break;
        case 107:
          uint64_t v31 = -2125;
          break;
        case 108:
          uint64_t v31 = -2126;
          break;
        case 109:
          uint64_t v31 = -2127;
          break;
        case 110:
          uint64_t v31 = -3101;
          break;
        case 111:
          uint64_t v31 = -3102;
          break;
        case 112:
          uint64_t v31 = -3103;
          break;
        case 113:
          uint64_t v31 = -3104;
          break;
        case 114:
          uint64_t v31 = -3105;
          break;
        case 115:
          uint64_t v31 = -3106;
          break;
        case 116:
          uint64_t v31 = -3107;
          break;
        case 117:
          uint64_t v31 = -3108;
          break;
        case 118:
          uint64_t v31 = -3109;
          break;
        case 119:
          uint64_t v31 = -3110;
          break;
        case 120:
          uint64_t v31 = -3111;
          break;
        case 121:
          uint64_t v31 = -3112;
          break;
        case 122:
          uint64_t v31 = -3113;
          break;
        case 123:
          uint64_t v31 = -3151;
          break;
        case 124:
          uint64_t v31 = -3152;
          break;
        case 125:
          uint64_t v31 = -3153;
          break;
        case 126:
          uint64_t v31 = -3154;
          break;
        case 127:
          uint64_t v31 = -3155;
          break;
        case 128:
          uint64_t v31 = -3156;
          break;
        case 129:
          uint64_t v31 = -3157;
          break;
        case 130:
          uint64_t v31 = -3158;
          break;
        case 131:
          uint64_t v31 = -3159;
          break;
        case 132:
          uint64_t v31 = -3161;
          break;
        case 133:
          uint64_t v31 = -3162;
          break;
        case 134:
          uint64_t v31 = -3163;
          break;
        case 135:
          uint64_t v31 = -3164;
          break;
        case 136:
          uint64_t v31 = -3165;
          break;
        case 137:
          uint64_t v31 = -3166;
          break;
        case 138:
          uint64_t v31 = -3167;
          break;
        case 139:
          uint64_t v31 = -3168;
          break;
        case 140:
          uint64_t v31 = -3169;
          break;
        case 141:
          uint64_t v31 = -3170;
          break;
        case 142:
          uint64_t v31 = -3171;
          break;
        case 143:
          uint64_t v31 = -3172;
          break;
        case 144:
          uint64_t v31 = -3173;
          break;
        case 145:
          uint64_t v31 = -3174;
          break;
        case 146:
          uint64_t v31 = -3175;
          break;
        case 147:
          uint64_t v31 = -3176;
          break;
        case 148:
          uint64_t v31 = -3177;
          break;
        case 149:
          uint64_t v31 = -3178;
          break;
        case 150:
          uint64_t v31 = -3179;
          break;
        case 151:
          uint64_t v31 = -3180;
          break;
        case 152:
          uint64_t v31 = -3181;
          break;
        case 153:
          uint64_t v31 = -3182;
          break;
        case 154:
          uint64_t v31 = -3183;
          break;
        case 155:
          uint64_t v31 = -3184;
          break;
        case 156:
          uint64_t v31 = -3185;
          break;
        case 157:
          uint64_t v31 = -3186;
          break;
        case 158:
          uint64_t v31 = -3187;
          break;
        case 159:
          uint64_t v31 = -3188;
          break;
        case 160:
          uint64_t v31 = -3189;
          break;
        case 161:
          uint64_t v31 = -3300;
          break;
        case 162:
          uint64_t v31 = -5108;
          break;
        case 163:
          uint64_t v31 = -6009;
          break;
        case 164:
          uint64_t v31 = -6010;
          break;
        case 165:
          uint64_t v31 = -6102;
          break;
        case 166:
          uint64_t v31 = -6103;
          break;
        case 167:
          uint64_t v31 = -6104;
          break;
        case 168:
          uint64_t v31 = -6105;
          break;
        case 169:
          uint64_t v31 = -8001;
          break;
        case 170:
          uint64_t v31 = -8301;
          break;
        case 171:
          uint64_t v31 = -8304;
          break;
        case 172:
          uint64_t v31 = -8400;
          break;
        case 173:
          uint64_t v31 = -8401;
          break;
        case 174:
          uint64_t v31 = -8403;
          break;
        case 175:
          uint64_t v31 = -8404;
          break;
        case 176:
          uint64_t v31 = -8428;
          break;
        case 177:
          uint64_t v31 = -8429;
          break;
        case 178:
          uint64_t v31 = -8433;
          break;
        case 179:
          uint64_t v31 = -8434;
          break;
        case 180:
          uint64_t v31 = -8500;
          break;
        case 181:
          uint64_t v31 = -8501;
          break;
        case 182:
          uint64_t v31 = -8502;
          break;
        case 183:
          uint64_t v31 = -8503;
          break;
        case 184:
          uint64_t v31 = -8504;
          break;
        case 185:
          uint64_t v31 = -22200;
          break;
        case 186:
          uint64_t v31 = -22201;
          break;
        case 187:
          uint64_t v31 = -22202;
          break;
        case 188:
          uint64_t v31 = -22203;
          break;
        case 189:
          uint64_t v31 = -22204;
          break;
        case 190:
          uint64_t v31 = -22205;
          break;
        case 191:
          uint64_t v31 = -22206;
          break;
        case 192:
          uint64_t v31 = -22207;
          break;
        case 193:
          uint64_t v31 = -22208;
          break;
        case 194:
          uint64_t v31 = -72200;
          break;
        case 195:
          uint64_t v31 = -72201;
          break;
        case 196:
          uint64_t v31 = -72202;
          break;
        case 197:
          uint64_t v31 = -72203;
          break;
        case 198:
          uint64_t v31 = -72204;
          break;
        case 199:
          uint64_t v31 = -72205;
          break;
        case 200:
          uint64_t v31 = -72206;
          break;
        case 201:
          uint64_t v31 = -72207;
          break;
        case 202:
          uint64_t v31 = -72208;
          break;
        case 203:
          uint64_t v31 = -72209;
          break;
        case 204:
          uint64_t v31 = -72210;
          break;
        case 205:
          uint64_t v31 = -72211;
          break;
        case 206:
          uint64_t v31 = -72780;
          break;
        case 207:
          uint64_t v31 = -72781;
          break;
        case 208:
          uint64_t v31 = -72782;
          break;
        default:
          break;
      }
      uint64_t v32 = -1;
      switch(v18)
      {
        case 1:
          uint64_t v32 = -2;
          break;
        case 2:
          uint64_t v32 = -3;
          break;
        case 3:
          uint64_t v32 = -4;
          break;
        case 4:
          uint64_t v32 = -5;
          break;
        case 5:
          uint64_t v32 = -6;
          break;
        case 6:
          uint64_t v32 = -7;
          break;
        case 7:
          uint64_t v32 = -8;
          break;
        case 8:
          uint64_t v32 = -9;
          break;
        case 9:
          uint64_t v32 = -10;
          break;
        case 10:
          uint64_t v32 = -11;
          break;
        case 11:
          uint64_t v32 = -12;
          break;
        case 12:
          uint64_t v32 = -13;
          break;
        case 13:
          uint64_t v32 = -14;
          break;
        case 14:
          uint64_t v32 = -15;
          break;
        case 15:
          uint64_t v32 = -16;
          break;
        case 16:
          uint64_t v32 = -17;
          break;
        case 17:
          uint64_t v32 = -18;
          break;
        case 18:
          uint64_t v32 = -19;
          break;
        case 19:
          uint64_t v32 = -20;
          break;
        case 20:
          uint64_t v32 = -21;
          break;
        case 21:
          uint64_t v32 = -22;
          break;
        case 22:
          uint64_t v32 = -28;
          break;
        case 23:
          uint64_t v32 = -29;
          break;
        case 24:
          uint64_t v32 = 200;
          break;
        case 25:
          uint64_t v32 = 20000;
          break;
        case 26:
          uint64_t v32 = 20001;
          break;
        case 27:
          uint64_t v32 = 20100;
          break;
        case 28:
          uint64_t v32 = 40000;
          break;
        case 29:
          uint64_t v32 = 40010;
          break;
        case 30:
          uint64_t v32 = 40011;
          break;
        case 31:
          uint64_t v32 = 40012;
          break;
        case 32:
          uint64_t v32 = 40013;
          break;
        case 33:
          uint64_t v32 = 40014;
          break;
        case 34:
          uint64_t v32 = 40015;
          break;
        case 35:
          uint64_t v32 = 40020;
          break;
        case 36:
          uint64_t v32 = 40021;
          break;
        case 37:
          uint64_t v32 = 40022;
          break;
        case 38:
          uint64_t v32 = 40023;
          break;
        case 39:
          uint64_t v32 = 40024;
          break;
        case 40:
          uint64_t v32 = 40025;
          break;
        case 41:
          uint64_t v32 = 40026;
          break;
        case 42:
          uint64_t v32 = 40027;
          break;
        case 43:
          uint64_t v32 = 40028;
          break;
        case 44:
          uint64_t v32 = 40029;
          break;
        case 45:
          uint64_t v32 = 40030;
          break;
        case 46:
          uint64_t v32 = 40101;
          break;
        case 47:
          uint64_t v32 = 40102;
          break;
        case 48:
          uint64_t v32 = 40200;
          break;
        case 49:
          uint64_t v32 = 40201;
          break;
        case 50:
          uint64_t v32 = 40205;
          break;
        case 51:
          uint64_t v32 = 40401;
          break;
        case 52:
          uint64_t v32 = 40402;
          break;
        case 53:
          uint64_t v32 = 40403;
          break;
        case 54:
          uint64_t v32 = 40404;
          break;
        case 55:
          uint64_t v32 = 40500;
          break;
        case 56:
          uint64_t v32 = 40600;
          break;
        case 57:
          uint64_t v32 = 40601;
          break;
        case 58:
          uint64_t v32 = 50000;
          break;
        case 59:
          uint64_t v32 = 50001;
          break;
        case 60:
          uint64_t v32 = 50002;
          break;
        case 61:
          uint64_t v32 = 99991;
          break;
        case 62:
          uint64_t v32 = 99992;
          break;
        case 63:
          uint64_t v32 = 99993;
          break;
        case 64:
          uint64_t v32 = -1101;
          break;
        case 65:
          uint64_t v32 = -1102;
          break;
        case 66:
          uint64_t v32 = -1103;
          break;
        case 67:
          uint64_t v32 = -1104;
          break;
        case 68:
          uint64_t v32 = -1110;
          break;
        case 69:
          uint64_t v32 = -1111;
          break;
        case 70:
          uint64_t v32 = -1112;
          break;
        case 71:
          uint64_t v32 = -1113;
          break;
        case 72:
          uint64_t v32 = -1114;
          break;
        case 73:
          uint64_t v32 = -1115;
          break;
        case 74:
          uint64_t v32 = -1116;
          break;
        case 75:
          uint64_t v32 = -1117;
          break;
        case 76:
          uint64_t v32 = -1118;
          break;
        case 77:
          uint64_t v32 = -1119;
          break;
        case 78:
          uint64_t v32 = -1201;
          break;
        case 79:
          uint64_t v32 = -1202;
          break;
        case 80:
          uint64_t v32 = -1203;
          break;
        case 81:
          uint64_t v32 = -1204;
          break;
        case 82:
          uint64_t v32 = -1402;
          break;
        case 83:
          uint64_t v32 = -1403;
          break;
        case 84:
          uint64_t v32 = -1404;
          break;
        case 85:
          uint64_t v32 = -1301;
          break;
        case 86:
          uint64_t v32 = -1302;
          break;
        case 87:
          uint64_t v32 = -1303;
          break;
        case 88:
          uint64_t v32 = -1304;
          break;
        case 89:
          uint64_t v32 = -1305;
          break;
        case 90:
          uint64_t v32 = -1306;
          break;
        case 91:
          uint64_t v32 = -1307;
          break;
        case 92:
          uint64_t v32 = -1308;
          break;
        case 93:
          uint64_t v32 = -1309;
          break;
        case 94:
          uint64_t v32 = -1310;
          break;
        case 95:
          uint64_t v32 = -1315;
          break;
        case 96:
          uint64_t v32 = -1316;
          break;
        case 97:
          uint64_t v32 = -1317;
          break;
        case 98:
          uint64_t v32 = -131600;
          break;
        case 99:
          uint64_t v32 = -2103;
          break;
        case 100:
          uint64_t v32 = -2104;
          break;
        case 101:
          uint64_t v32 = -2107;
          break;
        case 102:
          uint64_t v32 = -2110;
          break;
        case 103:
          uint64_t v32 = -2111;
          break;
        case 104:
          uint64_t v32 = -2112;
          break;
        case 105:
          uint64_t v32 = -2123;
          break;
        case 106:
          uint64_t v32 = -2124;
          break;
        case 107:
          uint64_t v32 = -2125;
          break;
        case 108:
          uint64_t v32 = -2126;
          break;
        case 109:
          uint64_t v32 = -2127;
          break;
        case 110:
          uint64_t v32 = -3101;
          break;
        case 111:
          uint64_t v32 = -3102;
          break;
        case 112:
          uint64_t v32 = -3103;
          break;
        case 113:
          uint64_t v32 = -3104;
          break;
        case 114:
          uint64_t v32 = -3105;
          break;
        case 115:
          uint64_t v32 = -3106;
          break;
        case 116:
          uint64_t v32 = -3107;
          break;
        case 117:
          uint64_t v32 = -3108;
          break;
        case 118:
          uint64_t v32 = -3109;
          break;
        case 119:
          uint64_t v32 = -3110;
          break;
        case 120:
          uint64_t v32 = -3111;
          break;
        case 121:
          uint64_t v32 = -3112;
          break;
        case 122:
          uint64_t v32 = -3113;
          break;
        case 123:
          uint64_t v32 = -3151;
          break;
        case 124:
          uint64_t v32 = -3152;
          break;
        case 125:
          uint64_t v32 = -3153;
          break;
        case 126:
          uint64_t v32 = -3154;
          break;
        case 127:
          uint64_t v32 = -3155;
          break;
        case 128:
          uint64_t v32 = -3156;
          break;
        case 129:
          uint64_t v32 = -3157;
          break;
        case 130:
          uint64_t v32 = -3158;
          break;
        case 131:
          uint64_t v32 = -3159;
          break;
        case 132:
          uint64_t v32 = -3161;
          break;
        case 133:
          uint64_t v32 = -3162;
          break;
        case 134:
          uint64_t v32 = -3163;
          break;
        case 135:
          uint64_t v32 = -3164;
          break;
        case 136:
          uint64_t v32 = -3165;
          break;
        case 137:
          uint64_t v32 = -3166;
          break;
        case 138:
          uint64_t v32 = -3167;
          break;
        case 139:
          uint64_t v32 = -3168;
          break;
        case 140:
          uint64_t v32 = -3169;
          break;
        case 141:
          uint64_t v32 = -3170;
          break;
        case 142:
          uint64_t v32 = -3171;
          break;
        case 143:
          uint64_t v32 = -3172;
          break;
        case 144:
          uint64_t v32 = -3173;
          break;
        case 145:
          uint64_t v32 = -3174;
          break;
        case 146:
          uint64_t v32 = -3175;
          break;
        case 147:
          uint64_t v32 = -3176;
          break;
        case 148:
          uint64_t v32 = -3177;
          break;
        case 149:
          uint64_t v32 = -3178;
          break;
        case 150:
          uint64_t v32 = -3179;
          break;
        case 151:
          uint64_t v32 = -3180;
          break;
        case 152:
          uint64_t v32 = -3181;
          break;
        case 153:
          uint64_t v32 = -3182;
          break;
        case 154:
          uint64_t v32 = -3183;
          break;
        case 155:
          uint64_t v32 = -3184;
          break;
        case 156:
          uint64_t v32 = -3185;
          break;
        case 157:
          uint64_t v32 = -3186;
          break;
        case 158:
          uint64_t v32 = -3187;
          break;
        case 159:
          uint64_t v32 = -3188;
          break;
        case 160:
          uint64_t v32 = -3189;
          break;
        case 161:
          uint64_t v32 = -3300;
          break;
        case 162:
          uint64_t v32 = -5108;
          break;
        case 163:
          uint64_t v32 = -6009;
          break;
        case 164:
          uint64_t v32 = -6010;
          break;
        case 165:
          uint64_t v32 = -6102;
          break;
        case 166:
          uint64_t v32 = -6103;
          break;
        case 167:
          uint64_t v32 = -6104;
          break;
        case 168:
          uint64_t v32 = -6105;
          break;
        case 169:
          uint64_t v32 = -8001;
          break;
        case 170:
          uint64_t v32 = -8301;
          break;
        case 171:
          uint64_t v32 = -8304;
          break;
        case 172:
          uint64_t v32 = -8400;
          break;
        case 173:
          uint64_t v32 = -8401;
          break;
        case 174:
          uint64_t v32 = -8403;
          break;
        case 175:
          uint64_t v32 = -8404;
          break;
        case 176:
          uint64_t v32 = -8428;
          break;
        case 177:
          uint64_t v32 = -8429;
          break;
        case 178:
          uint64_t v32 = -8433;
          break;
        case 179:
          uint64_t v32 = -8434;
          break;
        case 180:
          uint64_t v32 = -8500;
          break;
        case 181:
          uint64_t v32 = -8501;
          break;
        case 182:
          uint64_t v32 = -8502;
          break;
        case 183:
          uint64_t v32 = -8503;
          break;
        case 184:
          uint64_t v32 = -8504;
          break;
        case 185:
          uint64_t v32 = -22200;
          break;
        case 186:
          uint64_t v32 = -22201;
          break;
        case 187:
          uint64_t v32 = -22202;
          break;
        case 188:
          uint64_t v32 = -22203;
          break;
        case 189:
          uint64_t v32 = -22204;
          break;
        case 190:
          uint64_t v32 = -22205;
          break;
        case 191:
          uint64_t v32 = -22206;
          break;
        case 192:
          uint64_t v32 = -22207;
          break;
        case 193:
          uint64_t v32 = -22208;
          break;
        case 194:
          uint64_t v32 = -72200;
          break;
        case 195:
          uint64_t v32 = -72201;
          break;
        case 196:
          uint64_t v32 = -72202;
          break;
        case 197:
          uint64_t v32 = -72203;
          break;
        case 198:
          uint64_t v32 = -72204;
          break;
        case 199:
          uint64_t v32 = -72205;
          break;
        case 200:
          uint64_t v32 = -72206;
          break;
        case 201:
          uint64_t v32 = -72207;
          break;
        case 202:
          uint64_t v32 = -72208;
          break;
        case 203:
          uint64_t v32 = -72209;
          break;
        case 204:
          uint64_t v32 = -72210;
          break;
        case 205:
          uint64_t v32 = -72211;
          break;
        case 206:
          uint64_t v32 = -72780;
          break;
        case 207:
          uint64_t v32 = -72781;
          break;
        case 208:
          uint64_t v32 = -72782;
          break;
        default:
          break;
      }
      if (v31 != v32) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if (!v17) {
          return 0;
        }
        if (v4 != v16 || v5 != v17)
        {
          __int16 v63 = v7;
          uint64_t v58 = v12;
          __int16 v56 = v26;
          uint64_t v33 = v15;
          __int16 v51 = v20;
          __int16 v52 = v19;
          __int16 v34 = v13;
          __int16 v54 = v22;
          __int16 v55 = v8;
          __int16 v35 = v14;
          uint64_t v57 = v24;
          __int16 v36 = v28;
          uint64_t v37 = v9;
          __int16 v38 = v29;
          __int16 v53 = v23;
          uint64_t v39 = v21;
          __int16 v40 = v10;
          char v41 = sub_214D1ABC8();
          __int16 v7 = v63;
          __int16 v10 = v40;
          uint64_t v21 = v39;
          __int16 v29 = v38;
          __int16 v19 = v52;
          __int16 v23 = v53;
          uint64_t v9 = v37;
          __int16 v28 = v36;
          uint64_t v24 = v57;
          __int16 v14 = v35;
          __int16 v22 = v54;
          __int16 v8 = v55;
          __int16 v13 = v34;
          __int16 v20 = v51;
          uint64_t v15 = v33;
          __int16 v26 = v56;
          uint64_t v12 = v58;
          if ((v41 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v17)
      {
        return 0;
      }
      __int16 v64 = v13;
      __int16 v65 = v14;
      __int16 v59 = v29;
      uint64_t v60 = v27;
      __int16 v61 = v28;
      uint64_t v62 = v15;
      __int16 v42 = v7 | (v8 << 8);
      __int16 v43 = v19 | (v20 << 8);
      __int16 v44 = v22;
      uint64_t v45 = v21;
      __int16 v46 = v25;
      uint64_t v47 = v24;
      uint64_t v48 = v9;
      __int16 v49 = v10;
      if ((sub_214C7F6F0(v42, v43) & 1) == 0
        || !sub_214C82314(v48, v49 | (v11 << 8), v45, v44 | (v23 << 8))
        || !sub_214C82314(v12, v64 | (v65 << 8), v47, v46 | (v26 << 8))
        || !sub_214C82314(v62, v78 | (v79 << 8), v60, v61 | (v59 << 8))
        || !sub_214C82314(v77, v76 | (v75 << 8), v72, v73 | (v74 << 8)))
      {
        return 0;
      }
      return sub_214C82314(v71, v70 | (v69 << 8), v68, v67 | (v66 << 8));
  }
}

uint64_t sub_214CE4364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_214D19C78();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v4, v5);
  __int16 v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ODIKnownBinding();
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  __int16 v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  __int16 v19 = (uint64_t *)((char *)&v45 - v18);
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  __int16 v23 = (uint64_t *)((char *)&v45 - v22);
  MEMORY[0x270FA5388](v21, v24);
  __int16 v26 = (double *)((char *)&v45 - v25);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFE0);
  uint64_t v29 = MEMORY[0x270FA5388](v27 - 8, v28);
  uint64_t v31 = (char *)&v45 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = &v31[*(int *)(v29 + 56)];
  sub_214B9163C(a1, (uint64_t)v31);
  sub_214B9163C(a2, (uint64_t)v32);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_214B9163C((uint64_t)v31, (uint64_t)v23);
      uint64_t v41 = *v23;
      uint64_t v40 = v23[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if (v41 == *(void *)v32 && v40 == *((void *)v32 + 1))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_28;
      }
      char v43 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_28;
      }
      sub_214D043C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      goto LABEL_26;
    case 2u:
      sub_214B9163C((uint64_t)v31, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_25;
      }
      BOOL v33 = *v19 == *(void *)v32;
      goto LABEL_6;
    case 3u:
      sub_214B9163C((uint64_t)v31, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        __int16 v36 = v46;
        uint64_t v35 = v47;
        uint64_t v37 = v48;
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v46, v32, v48);
        char v34 = sub_214D19C38();
        __int16 v38 = *(void (**)(char *, uint64_t))(v35 + 8);
        v38(v36, v37);
        v38(v15, v37);
LABEL_11:
        sub_214D043C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
LABEL_25:
        sub_214B59CE0((uint64_t)v31, &qword_26784EFE0);
LABEL_26:
        char v34 = 0;
      }
      return v34 & 1;
    case 4u:
      sub_214B9163C((uint64_t)v31, (uint64_t)v11);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_25;
      }
      char v39 = *v11 ^ *v32;
      sub_214D043C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      char v34 = v39 ^ 1;
      return v34 & 1;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_25;
      }
LABEL_28:
      sub_214D043C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      char v34 = 1;
      return v34 & 1;
    default:
      sub_214B9163C((uint64_t)v31, (uint64_t)v26);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_25;
      }
      BOOL v33 = *v26 == *(double *)v32;
LABEL_6:
      char v34 = v33;
      goto LABEL_11;
  }
}

uint64_t sub_214CE47FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  char v5 = *((unsigned char *)a1 + 8);
  int v6 = *((unsigned __int8 *)a1 + 9);
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = *((unsigned __int8 *)a1 + 32);
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  char v12 = *((unsigned char *)a1 + 56);
  uint64_t v13 = *a2;
  char v14 = *((unsigned char *)a2 + 8);
  uint64_t v15 = *((unsigned __int8 *)a2 + 9);
  uint64_t v16 = a2[2];
  uint64_t v17 = a2[3];
  uint64_t v18 = *((unsigned __int8 *)a2 + 32);
  uint64_t v19 = a2[5];
  uint64_t v20 = a2[6];
  int v21 = v6 - 209;
  unsigned __int8 v22 = *((unsigned char *)a2 + 56);
  uint64_t v23 = (v6 - 209);
  switch(v21)
  {
    case 0:
      if (v15 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v15 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v15 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v15 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v15 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v15 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v15 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v15 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v15 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v15 + 47) < 9u) {
        return 0;
      }
      uint64_t v24 = -1;
      switch(v23)
      {
        case 1:
          uint64_t v24 = -2;
          break;
        case 2:
          uint64_t v24 = -3;
          break;
        case 3:
          uint64_t v24 = -4;
          break;
        case 4:
          uint64_t v24 = -5;
          break;
        case 5:
          uint64_t v24 = -6;
          break;
        case 6:
          uint64_t v24 = -7;
          break;
        case 7:
          uint64_t v24 = -8;
          break;
        case 8:
          uint64_t v24 = -9;
          break;
        case 9:
          uint64_t v24 = -10;
          break;
        case 10:
          uint64_t v24 = -11;
          break;
        case 11:
          uint64_t v24 = -12;
          break;
        case 12:
          uint64_t v24 = -13;
          break;
        case 13:
          uint64_t v24 = -14;
          break;
        case 14:
          uint64_t v24 = -15;
          break;
        case 15:
          uint64_t v24 = -16;
          break;
        case 16:
          uint64_t v24 = -17;
          break;
        case 17:
          uint64_t v24 = -18;
          break;
        case 18:
          uint64_t v24 = -19;
          break;
        case 19:
          uint64_t v24 = -20;
          break;
        case 20:
          uint64_t v24 = -21;
          break;
        case 21:
          uint64_t v24 = -22;
          break;
        case 22:
          uint64_t v24 = -28;
          break;
        case 23:
          uint64_t v24 = -29;
          break;
        case 24:
          uint64_t v24 = 200;
          break;
        case 25:
          uint64_t v24 = 20000;
          break;
        case 26:
          uint64_t v24 = 20001;
          break;
        case 27:
          uint64_t v24 = 20100;
          break;
        case 28:
          uint64_t v24 = 40000;
          break;
        case 29:
          uint64_t v24 = 40010;
          break;
        case 30:
          uint64_t v24 = 40011;
          break;
        case 31:
          uint64_t v24 = 40012;
          break;
        case 32:
          uint64_t v24 = 40013;
          break;
        case 33:
          uint64_t v24 = 40014;
          break;
        case 34:
          uint64_t v24 = 40015;
          break;
        case 35:
          uint64_t v24 = 40020;
          break;
        case 36:
          uint64_t v24 = 40021;
          break;
        case 37:
          uint64_t v24 = 40022;
          break;
        case 38:
          uint64_t v24 = 40023;
          break;
        case 39:
          uint64_t v24 = 40024;
          break;
        case 40:
          uint64_t v24 = 40025;
          break;
        case 41:
          uint64_t v24 = 40026;
          break;
        case 42:
          uint64_t v24 = 40027;
          break;
        case 43:
          uint64_t v24 = 40028;
          break;
        case 44:
          uint64_t v24 = 40029;
          break;
        case 45:
          uint64_t v24 = 40030;
          break;
        case 46:
          uint64_t v24 = 40101;
          break;
        case 47:
          uint64_t v24 = 40102;
          break;
        case 48:
          uint64_t v24 = 40200;
          break;
        case 49:
          uint64_t v24 = 40201;
          break;
        case 50:
          uint64_t v24 = 40205;
          break;
        case 51:
          uint64_t v24 = 40401;
          break;
        case 52:
          uint64_t v24 = 40402;
          break;
        case 53:
          uint64_t v24 = 40403;
          break;
        case 54:
          uint64_t v24 = 40404;
          break;
        case 55:
          uint64_t v24 = 40500;
          break;
        case 56:
          uint64_t v24 = 40600;
          break;
        case 57:
          uint64_t v24 = 40601;
          break;
        case 58:
          uint64_t v24 = 50000;
          break;
        case 59:
          uint64_t v24 = 50001;
          break;
        case 60:
          uint64_t v24 = 50002;
          break;
        case 61:
          uint64_t v24 = 99991;
          break;
        case 62:
          uint64_t v24 = 99992;
          break;
        case 63:
          uint64_t v24 = 99993;
          break;
        case 64:
          uint64_t v24 = -1101;
          break;
        case 65:
          uint64_t v24 = -1102;
          break;
        case 66:
          uint64_t v24 = -1103;
          break;
        case 67:
          uint64_t v24 = -1104;
          break;
        case 68:
          uint64_t v24 = -1110;
          break;
        case 69:
          uint64_t v24 = -1111;
          break;
        case 70:
          uint64_t v24 = -1112;
          break;
        case 71:
          uint64_t v24 = -1113;
          break;
        case 72:
          uint64_t v24 = -1114;
          break;
        case 73:
          uint64_t v24 = -1115;
          break;
        case 74:
          uint64_t v24 = -1116;
          break;
        case 75:
          uint64_t v24 = -1117;
          break;
        case 76:
          uint64_t v24 = -1118;
          break;
        case 77:
          uint64_t v24 = -1119;
          break;
        case 78:
          uint64_t v24 = -1201;
          break;
        case 79:
          uint64_t v24 = -1202;
          break;
        case 80:
          uint64_t v24 = -1203;
          break;
        case 81:
          uint64_t v24 = -1204;
          break;
        case 82:
          uint64_t v24 = -1402;
          break;
        case 83:
          uint64_t v24 = -1403;
          break;
        case 84:
          uint64_t v24 = -1404;
          break;
        case 85:
          uint64_t v24 = -1301;
          break;
        case 86:
          uint64_t v24 = -1302;
          break;
        case 87:
          uint64_t v24 = -1303;
          break;
        case 88:
          uint64_t v24 = -1304;
          break;
        case 89:
          uint64_t v24 = -1305;
          break;
        case 90:
          uint64_t v24 = -1306;
          break;
        case 91:
          uint64_t v24 = -1307;
          break;
        case 92:
          uint64_t v24 = -1308;
          break;
        case 93:
          uint64_t v24 = -1309;
          break;
        case 94:
          uint64_t v24 = -1310;
          break;
        case 95:
          uint64_t v24 = -1315;
          break;
        case 96:
          uint64_t v24 = -1316;
          break;
        case 97:
          uint64_t v24 = -1317;
          break;
        case 98:
          uint64_t v24 = -131600;
          break;
        case 99:
          uint64_t v24 = -2103;
          break;
        case 100:
          uint64_t v24 = -2104;
          break;
        case 101:
          uint64_t v24 = -2107;
          break;
        case 102:
          uint64_t v24 = -2110;
          break;
        case 103:
          uint64_t v24 = -2111;
          break;
        case 104:
          uint64_t v24 = -2112;
          break;
        case 105:
          uint64_t v24 = -2123;
          break;
        case 106:
          uint64_t v24 = -2124;
          break;
        case 107:
          uint64_t v24 = -2125;
          break;
        case 108:
          uint64_t v24 = -2126;
          break;
        case 109:
          uint64_t v24 = -2127;
          break;
        case 110:
          uint64_t v24 = -3101;
          break;
        case 111:
          uint64_t v24 = -3102;
          break;
        case 112:
          uint64_t v24 = -3103;
          break;
        case 113:
          uint64_t v24 = -3104;
          break;
        case 114:
          uint64_t v24 = -3105;
          break;
        case 115:
          uint64_t v24 = -3106;
          break;
        case 116:
          uint64_t v24 = -3107;
          break;
        case 117:
          uint64_t v24 = -3108;
          break;
        case 118:
          uint64_t v24 = -3109;
          break;
        case 119:
          uint64_t v24 = -3110;
          break;
        case 120:
          uint64_t v24 = -3111;
          break;
        case 121:
          uint64_t v24 = -3112;
          break;
        case 122:
          uint64_t v24 = -3113;
          break;
        case 123:
          uint64_t v24 = -3151;
          break;
        case 124:
          uint64_t v24 = -3152;
          break;
        case 125:
          uint64_t v24 = -3153;
          break;
        case 126:
          uint64_t v24 = -3154;
          break;
        case 127:
          uint64_t v24 = -3155;
          break;
        case 128:
          uint64_t v24 = -3156;
          break;
        case 129:
          uint64_t v24 = -3157;
          break;
        case 130:
          uint64_t v24 = -3158;
          break;
        case 131:
          uint64_t v24 = -3159;
          break;
        case 132:
          uint64_t v24 = -3161;
          break;
        case 133:
          uint64_t v24 = -3162;
          break;
        case 134:
          uint64_t v24 = -3163;
          break;
        case 135:
          uint64_t v24 = -3164;
          break;
        case 136:
          uint64_t v24 = -3165;
          break;
        case 137:
          uint64_t v24 = -3166;
          break;
        case 138:
          uint64_t v24 = -3167;
          break;
        case 139:
          uint64_t v24 = -3168;
          break;
        case 140:
          uint64_t v24 = -3169;
          break;
        case 141:
          uint64_t v24 = -3170;
          break;
        case 142:
          uint64_t v24 = -3171;
          break;
        case 143:
          uint64_t v24 = -3172;
          break;
        case 144:
          uint64_t v24 = -3173;
          break;
        case 145:
          uint64_t v24 = -3174;
          break;
        case 146:
          uint64_t v24 = -3175;
          break;
        case 147:
          uint64_t v24 = -3176;
          break;
        case 148:
          uint64_t v24 = -3177;
          break;
        case 149:
          uint64_t v24 = -3178;
          break;
        case 150:
          uint64_t v24 = -3179;
          break;
        case 151:
          uint64_t v24 = -3180;
          break;
        case 152:
          uint64_t v24 = -3181;
          break;
        case 153:
          uint64_t v24 = -3182;
          break;
        case 154:
          uint64_t v24 = -3183;
          break;
        case 155:
          uint64_t v24 = -3184;
          break;
        case 156:
          uint64_t v24 = -3185;
          break;
        case 157:
          uint64_t v24 = -3186;
          break;
        case 158:
          uint64_t v24 = -3187;
          break;
        case 159:
          uint64_t v24 = -3188;
          break;
        case 160:
          uint64_t v24 = -3189;
          break;
        case 161:
          uint64_t v24 = -3300;
          break;
        case 162:
          uint64_t v24 = -5108;
          break;
        case 163:
          uint64_t v24 = -6009;
          break;
        case 164:
          uint64_t v24 = -6010;
          break;
        case 165:
          uint64_t v24 = -6102;
          break;
        case 166:
          uint64_t v24 = -6103;
          break;
        case 167:
          uint64_t v24 = -6104;
          break;
        case 168:
          uint64_t v24 = -6105;
          break;
        case 169:
          uint64_t v24 = -8001;
          break;
        case 170:
          uint64_t v24 = -8301;
          break;
        case 171:
          uint64_t v24 = -8304;
          break;
        case 172:
          uint64_t v24 = -8400;
          break;
        case 173:
          uint64_t v24 = -8401;
          break;
        case 174:
          uint64_t v24 = -8403;
          break;
        case 175:
          uint64_t v24 = -8404;
          break;
        case 176:
          uint64_t v24 = -8428;
          break;
        case 177:
          uint64_t v24 = -8429;
          break;
        case 178:
          uint64_t v24 = -8433;
          break;
        case 179:
          uint64_t v24 = -8434;
          break;
        case 180:
          uint64_t v24 = -8500;
          break;
        case 181:
          uint64_t v24 = -8501;
          break;
        case 182:
          uint64_t v24 = -8502;
          break;
        case 183:
          uint64_t v24 = -8503;
          break;
        case 184:
          uint64_t v24 = -8504;
          break;
        case 185:
          uint64_t v24 = -22200;
          break;
        case 186:
          uint64_t v24 = -22201;
          break;
        case 187:
          uint64_t v24 = -22202;
          break;
        case 188:
          uint64_t v24 = -22203;
          break;
        case 189:
          uint64_t v24 = -22204;
          break;
        case 190:
          uint64_t v24 = -22205;
          break;
        case 191:
          uint64_t v24 = -22206;
          break;
        case 192:
          uint64_t v24 = -22207;
          break;
        case 193:
          uint64_t v24 = -22208;
          break;
        case 194:
          uint64_t v24 = -72200;
          break;
        case 195:
          uint64_t v24 = -72201;
          break;
        case 196:
          uint64_t v24 = -72202;
          break;
        case 197:
          uint64_t v24 = -72203;
          break;
        case 198:
          uint64_t v24 = -72204;
          break;
        case 199:
          uint64_t v24 = -72205;
          break;
        case 200:
          uint64_t v24 = -72206;
          break;
        case 201:
          uint64_t v24 = -72207;
          break;
        case 202:
          uint64_t v24 = -72208;
          break;
        case 203:
          uint64_t v24 = -72209;
          break;
        case 204:
          uint64_t v24 = -72210;
          break;
        case 205:
          uint64_t v24 = -72211;
          break;
        case 206:
          uint64_t v24 = -72780;
          break;
        case 207:
          uint64_t v24 = -72781;
          break;
        case 208:
          uint64_t v24 = -72782;
          break;
        default:
          break;
      }
      uint64_t v25 = -1;
      switch(v15)
      {
        case 1:
          uint64_t v25 = -2;
          break;
        case 2:
          uint64_t v25 = -3;
          break;
        case 3:
          uint64_t v25 = -4;
          break;
        case 4:
          uint64_t v25 = -5;
          break;
        case 5:
          uint64_t v25 = -6;
          break;
        case 6:
          uint64_t v25 = -7;
          break;
        case 7:
          uint64_t v25 = -8;
          break;
        case 8:
          uint64_t v25 = -9;
          break;
        case 9:
          uint64_t v25 = -10;
          break;
        case 10:
          uint64_t v25 = -11;
          break;
        case 11:
          uint64_t v25 = -12;
          break;
        case 12:
          uint64_t v25 = -13;
          break;
        case 13:
          uint64_t v25 = -14;
          break;
        case 14:
          uint64_t v25 = -15;
          break;
        case 15:
          uint64_t v25 = -16;
          break;
        case 16:
          uint64_t v25 = -17;
          break;
        case 17:
          uint64_t v25 = -18;
          break;
        case 18:
          uint64_t v25 = -19;
          break;
        case 19:
          uint64_t v25 = -20;
          break;
        case 20:
          uint64_t v25 = -21;
          break;
        case 21:
          uint64_t v25 = -22;
          break;
        case 22:
          uint64_t v25 = -28;
          break;
        case 23:
          uint64_t v25 = -29;
          break;
        case 24:
          uint64_t v25 = 200;
          break;
        case 25:
          uint64_t v25 = 20000;
          break;
        case 26:
          uint64_t v25 = 20001;
          break;
        case 27:
          uint64_t v25 = 20100;
          break;
        case 28:
          uint64_t v25 = 40000;
          break;
        case 29:
          uint64_t v25 = 40010;
          break;
        case 30:
          uint64_t v25 = 40011;
          break;
        case 31:
          uint64_t v25 = 40012;
          break;
        case 32:
          uint64_t v25 = 40013;
          break;
        case 33:
          uint64_t v25 = 40014;
          break;
        case 34:
          uint64_t v25 = 40015;
          break;
        case 35:
          uint64_t v25 = 40020;
          break;
        case 36:
          uint64_t v25 = 40021;
          break;
        case 37:
          uint64_t v25 = 40022;
          break;
        case 38:
          uint64_t v25 = 40023;
          break;
        case 39:
          uint64_t v25 = 40024;
          break;
        case 40:
          uint64_t v25 = 40025;
          break;
        case 41:
          uint64_t v25 = 40026;
          break;
        case 42:
          uint64_t v25 = 40027;
          break;
        case 43:
          uint64_t v25 = 40028;
          break;
        case 44:
          uint64_t v25 = 40029;
          break;
        case 45:
          uint64_t v25 = 40030;
          break;
        case 46:
          uint64_t v25 = 40101;
          break;
        case 47:
          uint64_t v25 = 40102;
          break;
        case 48:
          uint64_t v25 = 40200;
          break;
        case 49:
          uint64_t v25 = 40201;
          break;
        case 50:
          uint64_t v25 = 40205;
          break;
        case 51:
          uint64_t v25 = 40401;
          break;
        case 52:
          uint64_t v25 = 40402;
          break;
        case 53:
          uint64_t v25 = 40403;
          break;
        case 54:
          uint64_t v25 = 40404;
          break;
        case 55:
          uint64_t v25 = 40500;
          break;
        case 56:
          uint64_t v25 = 40600;
          break;
        case 57:
          uint64_t v25 = 40601;
          break;
        case 58:
          uint64_t v25 = 50000;
          break;
        case 59:
          uint64_t v25 = 50001;
          break;
        case 60:
          uint64_t v25 = 50002;
          break;
        case 61:
          uint64_t v25 = 99991;
          break;
        case 62:
          uint64_t v25 = 99992;
          break;
        case 63:
          uint64_t v25 = 99993;
          break;
        case 64:
          uint64_t v25 = -1101;
          break;
        case 65:
          uint64_t v25 = -1102;
          break;
        case 66:
          uint64_t v25 = -1103;
          break;
        case 67:
          uint64_t v25 = -1104;
          break;
        case 68:
          uint64_t v25 = -1110;
          break;
        case 69:
          uint64_t v25 = -1111;
          break;
        case 70:
          uint64_t v25 = -1112;
          break;
        case 71:
          uint64_t v25 = -1113;
          break;
        case 72:
          uint64_t v25 = -1114;
          break;
        case 73:
          uint64_t v25 = -1115;
          break;
        case 74:
          uint64_t v25 = -1116;
          break;
        case 75:
          uint64_t v25 = -1117;
          break;
        case 76:
          uint64_t v25 = -1118;
          break;
        case 77:
          uint64_t v25 = -1119;
          break;
        case 78:
          uint64_t v25 = -1201;
          break;
        case 79:
          uint64_t v25 = -1202;
          break;
        case 80:
          uint64_t v25 = -1203;
          break;
        case 81:
          uint64_t v25 = -1204;
          break;
        case 82:
          uint64_t v25 = -1402;
          break;
        case 83:
          uint64_t v25 = -1403;
          break;
        case 84:
          uint64_t v25 = -1404;
          break;
        case 85:
          uint64_t v25 = -1301;
          break;
        case 86:
          uint64_t v25 = -1302;
          break;
        case 87:
          uint64_t v25 = -1303;
          break;
        case 88:
          uint64_t v25 = -1304;
          break;
        case 89:
          uint64_t v25 = -1305;
          break;
        case 90:
          uint64_t v25 = -1306;
          break;
        case 91:
          uint64_t v25 = -1307;
          break;
        case 92:
          uint64_t v25 = -1308;
          break;
        case 93:
          uint64_t v25 = -1309;
          break;
        case 94:
          uint64_t v25 = -1310;
          break;
        case 95:
          uint64_t v25 = -1315;
          break;
        case 96:
          uint64_t v25 = -1316;
          break;
        case 97:
          uint64_t v25 = -1317;
          break;
        case 98:
          uint64_t v25 = -131600;
          break;
        case 99:
          uint64_t v25 = -2103;
          break;
        case 100:
          uint64_t v25 = -2104;
          break;
        case 101:
          uint64_t v25 = -2107;
          break;
        case 102:
          uint64_t v25 = -2110;
          break;
        case 103:
          uint64_t v25 = -2111;
          break;
        case 104:
          uint64_t v25 = -2112;
          break;
        case 105:
          uint64_t v25 = -2123;
          break;
        case 106:
          uint64_t v25 = -2124;
          break;
        case 107:
          uint64_t v25 = -2125;
          break;
        case 108:
          uint64_t v25 = -2126;
          break;
        case 109:
          uint64_t v25 = -2127;
          break;
        case 110:
          uint64_t v25 = -3101;
          break;
        case 111:
          uint64_t v25 = -3102;
          break;
        case 112:
          uint64_t v25 = -3103;
          break;
        case 113:
          uint64_t v25 = -3104;
          break;
        case 114:
          uint64_t v25 = -3105;
          break;
        case 115:
          uint64_t v25 = -3106;
          break;
        case 116:
          uint64_t v25 = -3107;
          break;
        case 117:
          uint64_t v25 = -3108;
          break;
        case 118:
          uint64_t v25 = -3109;
          break;
        case 119:
          uint64_t v25 = -3110;
          break;
        case 120:
          uint64_t v25 = -3111;
          break;
        case 121:
          uint64_t v25 = -3112;
          break;
        case 122:
          uint64_t v25 = -3113;
          break;
        case 123:
          uint64_t v25 = -3151;
          break;
        case 124:
          uint64_t v25 = -3152;
          break;
        case 125:
          uint64_t v25 = -3153;
          break;
        case 126:
          uint64_t v25 = -3154;
          break;
        case 127:
          uint64_t v25 = -3155;
          break;
        case 128:
          uint64_t v25 = -3156;
          break;
        case 129:
          uint64_t v25 = -3157;
          break;
        case 130:
          uint64_t v25 = -3158;
          break;
        case 131:
          uint64_t v25 = -3159;
          break;
        case 132:
          uint64_t v25 = -3161;
          break;
        case 133:
          uint64_t v25 = -3162;
          break;
        case 134:
          uint64_t v25 = -3163;
          break;
        case 135:
          uint64_t v25 = -3164;
          break;
        case 136:
          uint64_t v25 = -3165;
          break;
        case 137:
          uint64_t v25 = -3166;
          break;
        case 138:
          uint64_t v25 = -3167;
          break;
        case 139:
          uint64_t v25 = -3168;
          break;
        case 140:
          uint64_t v25 = -3169;
          break;
        case 141:
          uint64_t v25 = -3170;
          break;
        case 142:
          uint64_t v25 = -3171;
          break;
        case 143:
          uint64_t v25 = -3172;
          break;
        case 144:
          uint64_t v25 = -3173;
          break;
        case 145:
          uint64_t v25 = -3174;
          break;
        case 146:
          uint64_t v25 = -3175;
          break;
        case 147:
          uint64_t v25 = -3176;
          break;
        case 148:
          uint64_t v25 = -3177;
          break;
        case 149:
          uint64_t v25 = -3178;
          break;
        case 150:
          uint64_t v25 = -3179;
          break;
        case 151:
          uint64_t v25 = -3180;
          break;
        case 152:
          uint64_t v25 = -3181;
          break;
        case 153:
          uint64_t v25 = -3182;
          break;
        case 154:
          uint64_t v25 = -3183;
          break;
        case 155:
          uint64_t v25 = -3184;
          break;
        case 156:
          uint64_t v25 = -3185;
          break;
        case 157:
          uint64_t v25 = -3186;
          break;
        case 158:
          uint64_t v25 = -3187;
          break;
        case 159:
          uint64_t v25 = -3188;
          break;
        case 160:
          uint64_t v25 = -3189;
          break;
        case 161:
          uint64_t v25 = -3300;
          break;
        case 162:
          uint64_t v25 = -5108;
          break;
        case 163:
          uint64_t v25 = -6009;
          break;
        case 164:
          uint64_t v25 = -6010;
          break;
        case 165:
          uint64_t v25 = -6102;
          break;
        case 166:
          uint64_t v25 = -6103;
          break;
        case 167:
          uint64_t v25 = -6104;
          break;
        case 168:
          uint64_t v25 = -6105;
          break;
        case 169:
          uint64_t v25 = -8001;
          break;
        case 170:
          uint64_t v25 = -8301;
          break;
        case 171:
          uint64_t v25 = -8304;
          break;
        case 172:
          uint64_t v25 = -8400;
          break;
        case 173:
          uint64_t v25 = -8401;
          break;
        case 174:
          uint64_t v25 = -8403;
          break;
        case 175:
          uint64_t v25 = -8404;
          break;
        case 176:
          uint64_t v25 = -8428;
          break;
        case 177:
          uint64_t v25 = -8429;
          break;
        case 178:
          uint64_t v25 = -8433;
          break;
        case 179:
          uint64_t v25 = -8434;
          break;
        case 180:
          uint64_t v25 = -8500;
          break;
        case 181:
          uint64_t v25 = -8501;
          break;
        case 182:
          uint64_t v25 = -8502;
          break;
        case 183:
          uint64_t v25 = -8503;
          break;
        case 184:
          uint64_t v25 = -8504;
          break;
        case 185:
          uint64_t v25 = -22200;
          break;
        case 186:
          uint64_t v25 = -22201;
          break;
        case 187:
          uint64_t v25 = -22202;
          break;
        case 188:
          uint64_t v25 = -22203;
          break;
        case 189:
          uint64_t v25 = -22204;
          break;
        case 190:
          uint64_t v25 = -22205;
          break;
        case 191:
          uint64_t v25 = -22206;
          break;
        case 192:
          uint64_t v25 = -22207;
          break;
        case 193:
          uint64_t v25 = -22208;
          break;
        case 194:
          uint64_t v25 = -72200;
          break;
        case 195:
          uint64_t v25 = -72201;
          break;
        case 196:
          uint64_t v25 = -72202;
          break;
        case 197:
          uint64_t v25 = -72203;
          break;
        case 198:
          uint64_t v25 = -72204;
          break;
        case 199:
          uint64_t v25 = -72205;
          break;
        case 200:
          uint64_t v25 = -72206;
          break;
        case 201:
          uint64_t v25 = -72207;
          break;
        case 202:
          uint64_t v25 = -72208;
          break;
        case 203:
          uint64_t v25 = -72209;
          break;
        case 204:
          uint64_t v25 = -72210;
          break;
        case 205:
          uint64_t v25 = -72211;
          break;
        case 206:
          uint64_t v25 = -72780;
          break;
        case 207:
          uint64_t v25 = -72781;
          break;
        case 208:
          uint64_t v25 = -72782;
          break;
        default:
          break;
      }
      if (v24 != v25) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v4 == v13) {
          char v26 = v14;
        }
        else {
          char v26 = 1;
        }
        if (v26) {
          return 0;
        }
      }
      switch((int)v9)
      {
        case 209:
          if (v18 != 209) {
            return 0;
          }
          break;
        case 210:
          if (v18 != 210) {
            return 0;
          }
          break;
        case 211:
          if (v18 != 211) {
            return 0;
          }
          break;
        case 212:
          if (v18 != 212) {
            return 0;
          }
          break;
        case 213:
          if (v18 != 213) {
            return 0;
          }
          break;
        case 214:
          if (v18 != 214) {
            return 0;
          }
          break;
        case 215:
          if (v18 != 215) {
            return 0;
          }
          break;
        case 216:
          if (v18 != 216) {
            return 0;
          }
          break;
        case 217:
          if (v18 != 217) {
            return 0;
          }
          break;
        default:
          if ((v18 + 47) < 9u) {
            return 0;
          }
          uint64_t v28 = -1;
          switch(v9)
          {
            case 1:
              uint64_t v28 = -2;
              break;
            case 2:
              uint64_t v28 = -3;
              break;
            case 3:
              uint64_t v28 = -4;
              break;
            case 4:
              uint64_t v28 = -5;
              break;
            case 5:
              uint64_t v28 = -6;
              break;
            case 6:
              uint64_t v28 = -7;
              break;
            case 7:
              uint64_t v28 = -8;
              break;
            case 8:
              uint64_t v28 = -9;
              break;
            case 9:
              uint64_t v28 = -10;
              break;
            case 10:
              uint64_t v28 = -11;
              break;
            case 11:
              uint64_t v28 = -12;
              break;
            case 12:
              uint64_t v28 = -13;
              break;
            case 13:
              uint64_t v28 = -14;
              break;
            case 14:
              uint64_t v28 = -15;
              break;
            case 15:
              uint64_t v28 = -16;
              break;
            case 16:
              uint64_t v28 = -17;
              break;
            case 17:
              uint64_t v28 = -18;
              break;
            case 18:
              uint64_t v28 = -19;
              break;
            case 19:
              uint64_t v28 = -20;
              break;
            case 20:
              uint64_t v28 = -21;
              break;
            case 21:
              uint64_t v28 = -22;
              break;
            case 22:
              uint64_t v28 = -28;
              break;
            case 23:
              uint64_t v28 = -29;
              break;
            case 24:
              uint64_t v28 = 200;
              break;
            case 25:
              uint64_t v28 = 20000;
              break;
            case 26:
              uint64_t v28 = 20001;
              break;
            case 27:
              uint64_t v28 = 20100;
              break;
            case 28:
              uint64_t v28 = 40000;
              break;
            case 29:
              uint64_t v28 = 40010;
              break;
            case 30:
              uint64_t v28 = 40011;
              break;
            case 31:
              uint64_t v28 = 40012;
              break;
            case 32:
              uint64_t v28 = 40013;
              break;
            case 33:
              uint64_t v28 = 40014;
              break;
            case 34:
              uint64_t v28 = 40015;
              break;
            case 35:
              uint64_t v28 = 40020;
              break;
            case 36:
              uint64_t v28 = 40021;
              break;
            case 37:
              uint64_t v28 = 40022;
              break;
            case 38:
              uint64_t v28 = 40023;
              break;
            case 39:
              uint64_t v28 = 40024;
              break;
            case 40:
              uint64_t v28 = 40025;
              break;
            case 41:
              uint64_t v28 = 40026;
              break;
            case 42:
              uint64_t v28 = 40027;
              break;
            case 43:
              uint64_t v28 = 40028;
              break;
            case 44:
              uint64_t v28 = 40029;
              break;
            case 45:
              uint64_t v28 = 40030;
              break;
            case 46:
              uint64_t v28 = 40101;
              break;
            case 47:
              uint64_t v28 = 40102;
              break;
            case 48:
              uint64_t v28 = 40200;
              break;
            case 49:
              uint64_t v28 = 40201;
              break;
            case 50:
              uint64_t v28 = 40205;
              break;
            case 51:
              uint64_t v28 = 40401;
              break;
            case 52:
              uint64_t v28 = 40402;
              break;
            case 53:
              uint64_t v28 = 40403;
              break;
            case 54:
              uint64_t v28 = 40404;
              break;
            case 55:
              uint64_t v28 = 40500;
              break;
            case 56:
              uint64_t v28 = 40600;
              break;
            case 57:
              uint64_t v28 = 40601;
              break;
            case 58:
              uint64_t v28 = 50000;
              break;
            case 59:
              uint64_t v28 = 50001;
              break;
            case 60:
              uint64_t v28 = 50002;
              break;
            case 61:
              uint64_t v28 = 99991;
              break;
            case 62:
              uint64_t v28 = 99992;
              break;
            case 63:
              uint64_t v28 = 99993;
              break;
            case 64:
              uint64_t v28 = -1101;
              break;
            case 65:
              uint64_t v28 = -1102;
              break;
            case 66:
              uint64_t v28 = -1103;
              break;
            case 67:
              uint64_t v28 = -1104;
              break;
            case 68:
              uint64_t v28 = -1110;
              break;
            case 69:
              uint64_t v28 = -1111;
              break;
            case 70:
              uint64_t v28 = -1112;
              break;
            case 71:
              uint64_t v28 = -1113;
              break;
            case 72:
              uint64_t v28 = -1114;
              break;
            case 73:
              uint64_t v28 = -1115;
              break;
            case 74:
              uint64_t v28 = -1116;
              break;
            case 75:
              uint64_t v28 = -1117;
              break;
            case 76:
              uint64_t v28 = -1118;
              break;
            case 77:
              uint64_t v28 = -1119;
              break;
            case 78:
              uint64_t v28 = -1201;
              break;
            case 79:
              uint64_t v28 = -1202;
              break;
            case 80:
              uint64_t v28 = -1203;
              break;
            case 81:
              uint64_t v28 = -1204;
              break;
            case 82:
              uint64_t v28 = -1402;
              break;
            case 83:
              uint64_t v28 = -1403;
              break;
            case 84:
              uint64_t v28 = -1404;
              break;
            case 85:
              uint64_t v28 = -1301;
              break;
            case 86:
              uint64_t v28 = -1302;
              break;
            case 87:
              uint64_t v28 = -1303;
              break;
            case 88:
              uint64_t v28 = -1304;
              break;
            case 89:
              uint64_t v28 = -1305;
              break;
            case 90:
              uint64_t v28 = -1306;
              break;
            case 91:
              uint64_t v28 = -1307;
              break;
            case 92:
              uint64_t v28 = -1308;
              break;
            case 93:
              uint64_t v28 = -1309;
              break;
            case 94:
              uint64_t v28 = -1310;
              break;
            case 95:
              uint64_t v28 = -1315;
              break;
            case 96:
              uint64_t v28 = -1316;
              break;
            case 97:
              uint64_t v28 = -1317;
              break;
            case 98:
              uint64_t v28 = -131600;
              break;
            case 99:
              uint64_t v28 = -2103;
              break;
            case 100:
              uint64_t v28 = -2104;
              break;
            case 101:
              uint64_t v28 = -2107;
              break;
            case 102:
              uint64_t v28 = -2110;
              break;
            case 103:
              uint64_t v28 = -2111;
              break;
            case 104:
              uint64_t v28 = -2112;
              break;
            case 105:
              uint64_t v28 = -2123;
              break;
            case 106:
              uint64_t v28 = -2124;
              break;
            case 107:
              uint64_t v28 = -2125;
              break;
            case 108:
              uint64_t v28 = -2126;
              break;
            case 109:
              uint64_t v28 = -2127;
              break;
            case 110:
              uint64_t v28 = -3101;
              break;
            case 111:
              uint64_t v28 = -3102;
              break;
            case 112:
              uint64_t v28 = -3103;
              break;
            case 113:
              uint64_t v28 = -3104;
              break;
            case 114:
              uint64_t v28 = -3105;
              break;
            case 115:
              uint64_t v28 = -3106;
              break;
            case 116:
              uint64_t v28 = -3107;
              break;
            case 117:
              uint64_t v28 = -3108;
              break;
            case 118:
              uint64_t v28 = -3109;
              break;
            case 119:
              uint64_t v28 = -3110;
              break;
            case 120:
              uint64_t v28 = -3111;
              break;
            case 121:
              uint64_t v28 = -3112;
              break;
            case 122:
              uint64_t v28 = -3113;
              break;
            case 123:
              uint64_t v28 = -3151;
              break;
            case 124:
              uint64_t v28 = -3152;
              break;
            case 125:
              uint64_t v28 = -3153;
              break;
            case 126:
              uint64_t v28 = -3154;
              break;
            case 127:
              uint64_t v28 = -3155;
              break;
            case 128:
              uint64_t v28 = -3156;
              break;
            case 129:
              uint64_t v28 = -3157;
              break;
            case 130:
              uint64_t v28 = -3158;
              break;
            case 131:
              uint64_t v28 = -3159;
              break;
            case 132:
              uint64_t v28 = -3161;
              break;
            case 133:
              uint64_t v28 = -3162;
              break;
            case 134:
              uint64_t v28 = -3163;
              break;
            case 135:
              uint64_t v28 = -3164;
              break;
            case 136:
              uint64_t v28 = -3165;
              break;
            case 137:
              uint64_t v28 = -3166;
              break;
            case 138:
              uint64_t v28 = -3167;
              break;
            case 139:
              uint64_t v28 = -3168;
              break;
            case 140:
              uint64_t v28 = -3169;
              break;
            case 141:
              uint64_t v28 = -3170;
              break;
            case 142:
              uint64_t v28 = -3171;
              break;
            case 143:
              uint64_t v28 = -3172;
              break;
            case 144:
              uint64_t v28 = -3173;
              break;
            case 145:
              uint64_t v28 = -3174;
              break;
            case 146:
              uint64_t v28 = -3175;
              break;
            case 147:
              uint64_t v28 = -3176;
              break;
            case 148:
              uint64_t v28 = -3177;
              break;
            case 149:
              uint64_t v28 = -3178;
              break;
            case 150:
              uint64_t v28 = -3179;
              break;
            case 151:
              uint64_t v28 = -3180;
              break;
            case 152:
              uint64_t v28 = -3181;
              break;
            case 153:
              uint64_t v28 = -3182;
              break;
            case 154:
              uint64_t v28 = -3183;
              break;
            case 155:
              uint64_t v28 = -3184;
              break;
            case 156:
              uint64_t v28 = -3185;
              break;
            case 157:
              uint64_t v28 = -3186;
              break;
            case 158:
              uint64_t v28 = -3187;
              break;
            case 159:
              uint64_t v28 = -3188;
              break;
            case 160:
              uint64_t v28 = -3189;
              break;
            case 161:
              uint64_t v28 = -3300;
              break;
            case 162:
              uint64_t v28 = -5108;
              break;
            case 163:
              uint64_t v28 = -6009;
              break;
            case 164:
              uint64_t v28 = -6010;
              break;
            case 165:
              uint64_t v28 = -6102;
              break;
            case 166:
              uint64_t v28 = -6103;
              break;
            case 167:
              uint64_t v28 = -6104;
              break;
            case 168:
              uint64_t v28 = -6105;
              break;
            case 169:
              uint64_t v28 = -8001;
              break;
            case 170:
              uint64_t v28 = -8301;
              break;
            case 171:
              uint64_t v28 = -8304;
              break;
            case 172:
              uint64_t v28 = -8400;
              break;
            case 173:
              uint64_t v28 = -8401;
              break;
            case 174:
              uint64_t v28 = -8403;
              break;
            case 175:
              uint64_t v28 = -8404;
              break;
            case 176:
              uint64_t v28 = -8428;
              break;
            case 177:
              uint64_t v28 = -8429;
              break;
            case 178:
              uint64_t v28 = -8433;
              break;
            case 179:
              uint64_t v28 = -8434;
              break;
            case 180:
              uint64_t v28 = -8500;
              break;
            case 181:
              uint64_t v28 = -8501;
              break;
            case 182:
              uint64_t v28 = -8502;
              break;
            case 183:
              uint64_t v28 = -8503;
              break;
            case 184:
              uint64_t v28 = -8504;
              break;
            case 185:
              uint64_t v28 = -22200;
              break;
            case 186:
              uint64_t v28 = -22201;
              break;
            case 187:
              uint64_t v28 = -22202;
              break;
            case 188:
              uint64_t v28 = -22203;
              break;
            case 189:
              uint64_t v28 = -22204;
              break;
            case 190:
              uint64_t v28 = -22205;
              break;
            case 191:
              uint64_t v28 = -22206;
              break;
            case 192:
              uint64_t v28 = -22207;
              break;
            case 193:
              uint64_t v28 = -22208;
              break;
            case 194:
              uint64_t v28 = -72200;
              break;
            case 195:
              uint64_t v28 = -72201;
              break;
            case 196:
              uint64_t v28 = -72202;
              break;
            case 197:
              uint64_t v28 = -72203;
              break;
            case 198:
              uint64_t v28 = -72204;
              break;
            case 199:
              uint64_t v28 = -72205;
              break;
            case 200:
              uint64_t v28 = -72206;
              break;
            case 201:
              uint64_t v28 = -72207;
              break;
            case 202:
              uint64_t v28 = -72208;
              break;
            case 203:
              uint64_t v28 = -72209;
              break;
            case 204:
              uint64_t v28 = -72210;
              break;
            case 205:
              uint64_t v28 = -72211;
              break;
            case 206:
              uint64_t v28 = -72780;
              break;
            case 207:
              uint64_t v28 = -72781;
              break;
            case 208:
              uint64_t v28 = -72782;
              break;
            default:
              break;
          }
          uint64_t v29 = -1;
          switch(v18)
          {
            case 1:
              uint64_t v29 = -2;
              break;
            case 2:
              uint64_t v29 = -3;
              break;
            case 3:
              uint64_t v29 = -4;
              break;
            case 4:
              uint64_t v29 = -5;
              break;
            case 5:
              uint64_t v29 = -6;
              break;
            case 6:
              uint64_t v29 = -7;
              break;
            case 7:
              uint64_t v29 = -8;
              break;
            case 8:
              uint64_t v29 = -9;
              break;
            case 9:
              uint64_t v29 = -10;
              break;
            case 10:
              uint64_t v29 = -11;
              break;
            case 11:
              uint64_t v29 = -12;
              break;
            case 12:
              uint64_t v29 = -13;
              break;
            case 13:
              uint64_t v29 = -14;
              break;
            case 14:
              uint64_t v29 = -15;
              break;
            case 15:
              uint64_t v29 = -16;
              break;
            case 16:
              uint64_t v29 = -17;
              break;
            case 17:
              uint64_t v29 = -18;
              break;
            case 18:
              uint64_t v29 = -19;
              break;
            case 19:
              uint64_t v29 = -20;
              break;
            case 20:
              uint64_t v29 = -21;
              break;
            case 21:
              uint64_t v29 = -22;
              break;
            case 22:
              uint64_t v29 = -28;
              break;
            case 23:
              uint64_t v29 = -29;
              break;
            case 24:
              uint64_t v29 = 200;
              break;
            case 25:
              uint64_t v29 = 20000;
              break;
            case 26:
              uint64_t v29 = 20001;
              break;
            case 27:
              uint64_t v29 = 20100;
              break;
            case 28:
              uint64_t v29 = 40000;
              break;
            case 29:
              uint64_t v29 = 40010;
              break;
            case 30:
              uint64_t v29 = 40011;
              break;
            case 31:
              uint64_t v29 = 40012;
              break;
            case 32:
              uint64_t v29 = 40013;
              break;
            case 33:
              uint64_t v29 = 40014;
              break;
            case 34:
              uint64_t v29 = 40015;
              break;
            case 35:
              uint64_t v29 = 40020;
              break;
            case 36:
              uint64_t v29 = 40021;
              break;
            case 37:
              uint64_t v29 = 40022;
              break;
            case 38:
              uint64_t v29 = 40023;
              break;
            case 39:
              uint64_t v29 = 40024;
              break;
            case 40:
              uint64_t v29 = 40025;
              break;
            case 41:
              uint64_t v29 = 40026;
              break;
            case 42:
              uint64_t v29 = 40027;
              break;
            case 43:
              uint64_t v29 = 40028;
              break;
            case 44:
              uint64_t v29 = 40029;
              break;
            case 45:
              uint64_t v29 = 40030;
              break;
            case 46:
              uint64_t v29 = 40101;
              break;
            case 47:
              uint64_t v29 = 40102;
              break;
            case 48:
              uint64_t v29 = 40200;
              break;
            case 49:
              uint64_t v29 = 40201;
              break;
            case 50:
              uint64_t v29 = 40205;
              break;
            case 51:
              uint64_t v29 = 40401;
              break;
            case 52:
              uint64_t v29 = 40402;
              break;
            case 53:
              uint64_t v29 = 40403;
              break;
            case 54:
              uint64_t v29 = 40404;
              break;
            case 55:
              uint64_t v29 = 40500;
              break;
            case 56:
              uint64_t v29 = 40600;
              break;
            case 57:
              uint64_t v29 = 40601;
              break;
            case 58:
              uint64_t v29 = 50000;
              break;
            case 59:
              uint64_t v29 = 50001;
              break;
            case 60:
              uint64_t v29 = 50002;
              break;
            case 61:
              uint64_t v29 = 99991;
              break;
            case 62:
              uint64_t v29 = 99992;
              break;
            case 63:
              uint64_t v29 = 99993;
              break;
            case 64:
              uint64_t v29 = -1101;
              break;
            case 65:
              uint64_t v29 = -1102;
              break;
            case 66:
              uint64_t v29 = -1103;
              break;
            case 67:
              uint64_t v29 = -1104;
              break;
            case 68:
              uint64_t v29 = -1110;
              break;
            case 69:
              uint64_t v29 = -1111;
              break;
            case 70:
              uint64_t v29 = -1112;
              break;
            case 71:
              uint64_t v29 = -1113;
              break;
            case 72:
              uint64_t v29 = -1114;
              break;
            case 73:
              uint64_t v29 = -1115;
              break;
            case 74:
              uint64_t v29 = -1116;
              break;
            case 75:
              uint64_t v29 = -1117;
              break;
            case 76:
              uint64_t v29 = -1118;
              break;
            case 77:
              uint64_t v29 = -1119;
              break;
            case 78:
              uint64_t v29 = -1201;
              break;
            case 79:
              uint64_t v29 = -1202;
              break;
            case 80:
              uint64_t v29 = -1203;
              break;
            case 81:
              uint64_t v29 = -1204;
              break;
            case 82:
              uint64_t v29 = -1402;
              break;
            case 83:
              uint64_t v29 = -1403;
              break;
            case 84:
              uint64_t v29 = -1404;
              break;
            case 85:
              uint64_t v29 = -1301;
              break;
            case 86:
              uint64_t v29 = -1302;
              break;
            case 87:
              uint64_t v29 = -1303;
              break;
            case 88:
              uint64_t v29 = -1304;
              break;
            case 89:
              uint64_t v29 = -1305;
              break;
            case 90:
              uint64_t v29 = -1306;
              break;
            case 91:
              uint64_t v29 = -1307;
              break;
            case 92:
              uint64_t v29 = -1308;
              break;
            case 93:
              uint64_t v29 = -1309;
              break;
            case 94:
              uint64_t v29 = -1310;
              break;
            case 95:
              uint64_t v29 = -1315;
              break;
            case 96:
              uint64_t v29 = -1316;
              break;
            case 97:
              uint64_t v29 = -1317;
              break;
            case 98:
              uint64_t v29 = -131600;
              break;
            case 99:
              uint64_t v29 = -2103;
              break;
            case 100:
              uint64_t v29 = -2104;
              break;
            case 101:
              uint64_t v29 = -2107;
              break;
            case 102:
              uint64_t v29 = -2110;
              break;
            case 103:
              uint64_t v29 = -2111;
              break;
            case 104:
              uint64_t v29 = -2112;
              break;
            case 105:
              uint64_t v29 = -2123;
              break;
            case 106:
              uint64_t v29 = -2124;
              break;
            case 107:
              uint64_t v29 = -2125;
              break;
            case 108:
              uint64_t v29 = -2126;
              break;
            case 109:
              uint64_t v29 = -2127;
              break;
            case 110:
              uint64_t v29 = -3101;
              break;
            case 111:
              uint64_t v29 = -3102;
              break;
            case 112:
              uint64_t v29 = -3103;
              break;
            case 113:
              uint64_t v29 = -3104;
              break;
            case 114:
              uint64_t v29 = -3105;
              break;
            case 115:
              uint64_t v29 = -3106;
              break;
            case 116:
              uint64_t v29 = -3107;
              break;
            case 117:
              uint64_t v29 = -3108;
              break;
            case 118:
              uint64_t v29 = -3109;
              break;
            case 119:
              uint64_t v29 = -3110;
              break;
            case 120:
              uint64_t v29 = -3111;
              break;
            case 121:
              uint64_t v29 = -3112;
              break;
            case 122:
              uint64_t v29 = -3113;
              break;
            case 123:
              uint64_t v29 = -3151;
              break;
            case 124:
              uint64_t v29 = -3152;
              break;
            case 125:
              uint64_t v29 = -3153;
              break;
            case 126:
              uint64_t v29 = -3154;
              break;
            case 127:
              uint64_t v29 = -3155;
              break;
            case 128:
              uint64_t v29 = -3156;
              break;
            case 129:
              uint64_t v29 = -3157;
              break;
            case 130:
              uint64_t v29 = -3158;
              break;
            case 131:
              uint64_t v29 = -3159;
              break;
            case 132:
              uint64_t v29 = -3161;
              break;
            case 133:
              uint64_t v29 = -3162;
              break;
            case 134:
              uint64_t v29 = -3163;
              break;
            case 135:
              uint64_t v29 = -3164;
              break;
            case 136:
              uint64_t v29 = -3165;
              break;
            case 137:
              uint64_t v29 = -3166;
              break;
            case 138:
              uint64_t v29 = -3167;
              break;
            case 139:
              uint64_t v29 = -3168;
              break;
            case 140:
              uint64_t v29 = -3169;
              break;
            case 141:
              uint64_t v29 = -3170;
              break;
            case 142:
              uint64_t v29 = -3171;
              break;
            case 143:
              uint64_t v29 = -3172;
              break;
            case 144:
              uint64_t v29 = -3173;
              break;
            case 145:
              uint64_t v29 = -3174;
              break;
            case 146:
              uint64_t v29 = -3175;
              break;
            case 147:
              uint64_t v29 = -3176;
              break;
            case 148:
              uint64_t v29 = -3177;
              break;
            case 149:
              uint64_t v29 = -3178;
              break;
            case 150:
              uint64_t v29 = -3179;
              break;
            case 151:
              uint64_t v29 = -3180;
              break;
            case 152:
              uint64_t v29 = -3181;
              break;
            case 153:
              uint64_t v29 = -3182;
              break;
            case 154:
              uint64_t v29 = -3183;
              break;
            case 155:
              uint64_t v29 = -3184;
              break;
            case 156:
              uint64_t v29 = -3185;
              break;
            case 157:
              uint64_t v29 = -3186;
              break;
            case 158:
              uint64_t v29 = -3187;
              break;
            case 159:
              uint64_t v29 = -3188;
              break;
            case 160:
              uint64_t v29 = -3189;
              break;
            case 161:
              uint64_t v29 = -3300;
              break;
            case 162:
              uint64_t v29 = -5108;
              break;
            case 163:
              uint64_t v29 = -6009;
              break;
            case 164:
              uint64_t v29 = -6010;
              break;
            case 165:
              uint64_t v29 = -6102;
              break;
            case 166:
              uint64_t v29 = -6103;
              break;
            case 167:
              uint64_t v29 = -6104;
              break;
            case 168:
              uint64_t v29 = -6105;
              break;
            case 169:
              uint64_t v29 = -8001;
              break;
            case 170:
              uint64_t v29 = -8301;
              break;
            case 171:
              uint64_t v29 = -8304;
              break;
            case 172:
              uint64_t v29 = -8400;
              break;
            case 173:
              uint64_t v29 = -8401;
              break;
            case 174:
              uint64_t v29 = -8403;
              break;
            case 175:
              uint64_t v29 = -8404;
              break;
            case 176:
              uint64_t v29 = -8428;
              break;
            case 177:
              uint64_t v29 = -8429;
              break;
            case 178:
              uint64_t v29 = -8433;
              break;
            case 179:
              uint64_t v29 = -8434;
              break;
            case 180:
              uint64_t v29 = -8500;
              break;
            case 181:
              uint64_t v29 = -8501;
              break;
            case 182:
              uint64_t v29 = -8502;
              break;
            case 183:
              uint64_t v29 = -8503;
              break;
            case 184:
              uint64_t v29 = -8504;
              break;
            case 185:
              uint64_t v29 = -22200;
              break;
            case 186:
              uint64_t v29 = -22201;
              break;
            case 187:
              uint64_t v29 = -22202;
              break;
            case 188:
              uint64_t v29 = -22203;
              break;
            case 189:
              uint64_t v29 = -22204;
              break;
            case 190:
              uint64_t v29 = -22205;
              break;
            case 191:
              uint64_t v29 = -22206;
              break;
            case 192:
              uint64_t v29 = -22207;
              break;
            case 193:
              uint64_t v29 = -22208;
              break;
            case 194:
              uint64_t v29 = -72200;
              break;
            case 195:
              uint64_t v29 = -72201;
              break;
            case 196:
              uint64_t v29 = -72202;
              break;
            case 197:
              uint64_t v29 = -72203;
              break;
            case 198:
              uint64_t v29 = -72204;
              break;
            case 199:
              uint64_t v29 = -72205;
              break;
            case 200:
              uint64_t v29 = -72206;
              break;
            case 201:
              uint64_t v29 = -72207;
              break;
            case 202:
              uint64_t v29 = -72208;
              break;
            case 203:
              uint64_t v29 = -72209;
              break;
            case 204:
              uint64_t v29 = -72210;
              break;
            case 205:
              uint64_t v29 = -72211;
              break;
            case 206:
              uint64_t v29 = -72780;
              break;
            case 207:
              uint64_t v29 = -72781;
              break;
            case 208:
              uint64_t v29 = -72782;
              break;
            default:
              break;
          }
          if (v28 != v29) {
            return 0;
          }
          break;
      }
      if (v8)
      {
        if (v17 && (v7 == v16 && v8 == v17 || (sub_214D1ABC8() & 1) != 0)) {
          goto LABEL_894;
        }
        return 0;
      }
      if (v17) {
        return 0;
      }
LABEL_894:
      return sub_214C7E0C8(v10, v11, v12, v19, v20, v22);
  }
}

uint64_t sub_214CE7468(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = *((unsigned __int8 *)a2 + 16);
  uint64_t v9 = *((unsigned __int8 *)a1 + 16) - 209;
  switch(*((unsigned char *)a1 + 16))
  {
    case 0xD1:
      if (v8 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 0xD2:
      if (v8 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 0xD3:
      if (v8 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 0xD4:
      if (v8 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 0xD5:
      if (v8 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 0xD6:
      if (v8 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 0xD7:
      if (v8 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 0xD8:
      if (v8 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 0xD9:
      if (v8 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v8 + 47) < 9u) {
        return 0;
      }
      uint64_t v10 = -1;
      switch(v9)
      {
        case 1:
          uint64_t v10 = -2;
          break;
        case 2:
          uint64_t v10 = -3;
          break;
        case 3:
          uint64_t v10 = -4;
          break;
        case 4:
          uint64_t v10 = -5;
          break;
        case 5:
          uint64_t v10 = -6;
          break;
        case 6:
          uint64_t v10 = -7;
          break;
        case 7:
          uint64_t v10 = -8;
          break;
        case 8:
          uint64_t v10 = -9;
          break;
        case 9:
          uint64_t v10 = -10;
          break;
        case 10:
          uint64_t v10 = -11;
          break;
        case 11:
          uint64_t v10 = -12;
          break;
        case 12:
          uint64_t v10 = -13;
          break;
        case 13:
          uint64_t v10 = -14;
          break;
        case 14:
          uint64_t v10 = -15;
          break;
        case 15:
          uint64_t v10 = -16;
          break;
        case 16:
          uint64_t v10 = -17;
          break;
        case 17:
          uint64_t v10 = -18;
          break;
        case 18:
          uint64_t v10 = -19;
          break;
        case 19:
          uint64_t v10 = -20;
          break;
        case 20:
          uint64_t v10 = -21;
          break;
        case 21:
          uint64_t v10 = -22;
          break;
        case 22:
          uint64_t v10 = -28;
          break;
        case 23:
          uint64_t v10 = -29;
          break;
        case 24:
          uint64_t v10 = 200;
          break;
        case 25:
          uint64_t v10 = 20000;
          break;
        case 26:
          uint64_t v10 = 20001;
          break;
        case 27:
          uint64_t v10 = 20100;
          break;
        case 28:
          uint64_t v10 = 40000;
          break;
        case 29:
          uint64_t v10 = 40010;
          break;
        case 30:
          uint64_t v10 = 40011;
          break;
        case 31:
          uint64_t v10 = 40012;
          break;
        case 32:
          uint64_t v10 = 40013;
          break;
        case 33:
          uint64_t v10 = 40014;
          break;
        case 34:
          uint64_t v10 = 40015;
          break;
        case 35:
          uint64_t v10 = 40020;
          break;
        case 36:
          uint64_t v10 = 40021;
          break;
        case 37:
          uint64_t v10 = 40022;
          break;
        case 38:
          uint64_t v10 = 40023;
          break;
        case 39:
          uint64_t v10 = 40024;
          break;
        case 40:
          uint64_t v10 = 40025;
          break;
        case 41:
          uint64_t v10 = 40026;
          break;
        case 42:
          uint64_t v10 = 40027;
          break;
        case 43:
          uint64_t v10 = 40028;
          break;
        case 44:
          uint64_t v10 = 40029;
          break;
        case 45:
          uint64_t v10 = 40030;
          break;
        case 46:
          uint64_t v10 = 40101;
          break;
        case 47:
          uint64_t v10 = 40102;
          break;
        case 48:
          uint64_t v10 = 40200;
          break;
        case 49:
          uint64_t v10 = 40201;
          break;
        case 50:
          uint64_t v10 = 40205;
          break;
        case 51:
          uint64_t v10 = 40401;
          break;
        case 52:
          uint64_t v10 = 40402;
          break;
        case 53:
          uint64_t v10 = 40403;
          break;
        case 54:
          uint64_t v10 = 40404;
          break;
        case 55:
          uint64_t v10 = 40500;
          break;
        case 56:
          uint64_t v10 = 40600;
          break;
        case 57:
          uint64_t v10 = 40601;
          break;
        case 58:
          uint64_t v10 = 50000;
          break;
        case 59:
          uint64_t v10 = 50001;
          break;
        case 60:
          uint64_t v10 = 50002;
          break;
        case 61:
          uint64_t v10 = 99991;
          break;
        case 62:
          uint64_t v10 = 99992;
          break;
        case 63:
          uint64_t v10 = 99993;
          break;
        case 64:
          uint64_t v10 = -1101;
          break;
        case 65:
          uint64_t v10 = -1102;
          break;
        case 66:
          uint64_t v10 = -1103;
          break;
        case 67:
          uint64_t v10 = -1104;
          break;
        case 68:
          uint64_t v10 = -1110;
          break;
        case 69:
          uint64_t v10 = -1111;
          break;
        case 70:
          uint64_t v10 = -1112;
          break;
        case 71:
          uint64_t v10 = -1113;
          break;
        case 72:
          uint64_t v10 = -1114;
          break;
        case 73:
          uint64_t v10 = -1115;
          break;
        case 74:
          uint64_t v10 = -1116;
          break;
        case 75:
          uint64_t v10 = -1117;
          break;
        case 76:
          uint64_t v10 = -1118;
          break;
        case 77:
          uint64_t v10 = -1119;
          break;
        case 78:
          uint64_t v10 = -1201;
          break;
        case 79:
          uint64_t v10 = -1202;
          break;
        case 80:
          uint64_t v10 = -1203;
          break;
        case 81:
          uint64_t v10 = -1204;
          break;
        case 82:
          uint64_t v10 = -1402;
          break;
        case 83:
          uint64_t v10 = -1403;
          break;
        case 84:
          uint64_t v10 = -1404;
          break;
        case 85:
          uint64_t v10 = -1301;
          break;
        case 86:
          uint64_t v10 = -1302;
          break;
        case 87:
          uint64_t v10 = -1303;
          break;
        case 88:
          uint64_t v10 = -1304;
          break;
        case 89:
          uint64_t v10 = -1305;
          break;
        case 90:
          uint64_t v10 = -1306;
          break;
        case 91:
          uint64_t v10 = -1307;
          break;
        case 92:
          uint64_t v10 = -1308;
          break;
        case 93:
          uint64_t v10 = -1309;
          break;
        case 94:
          uint64_t v10 = -1310;
          break;
        case 95:
          uint64_t v10 = -1315;
          break;
        case 96:
          uint64_t v10 = -1316;
          break;
        case 97:
          uint64_t v10 = -1317;
          break;
        case 98:
          uint64_t v10 = -131600;
          break;
        case 99:
          uint64_t v10 = -2103;
          break;
        case 100:
          uint64_t v10 = -2104;
          break;
        case 101:
          uint64_t v10 = -2107;
          break;
        case 102:
          uint64_t v10 = -2110;
          break;
        case 103:
          uint64_t v10 = -2111;
          break;
        case 104:
          uint64_t v10 = -2112;
          break;
        case 105:
          uint64_t v10 = -2123;
          break;
        case 106:
          uint64_t v10 = -2124;
          break;
        case 107:
          uint64_t v10 = -2125;
          break;
        case 108:
          uint64_t v10 = -2126;
          break;
        case 109:
          uint64_t v10 = -2127;
          break;
        case 110:
          uint64_t v10 = -3101;
          break;
        case 111:
          uint64_t v10 = -3102;
          break;
        case 112:
          uint64_t v10 = -3103;
          break;
        case 113:
          uint64_t v10 = -3104;
          break;
        case 114:
          uint64_t v10 = -3105;
          break;
        case 115:
          uint64_t v10 = -3106;
          break;
        case 116:
          uint64_t v10 = -3107;
          break;
        case 117:
          uint64_t v10 = -3108;
          break;
        case 118:
          uint64_t v10 = -3109;
          break;
        case 119:
          uint64_t v10 = -3110;
          break;
        case 120:
          uint64_t v10 = -3111;
          break;
        case 121:
          uint64_t v10 = -3112;
          break;
        case 122:
          uint64_t v10 = -3113;
          break;
        case 123:
          uint64_t v10 = -3151;
          break;
        case 124:
          uint64_t v10 = -3152;
          break;
        case 125:
          uint64_t v10 = -3153;
          break;
        case 126:
          uint64_t v10 = -3154;
          break;
        case 127:
          uint64_t v10 = -3155;
          break;
        case 128:
          uint64_t v10 = -3156;
          break;
        case 129:
          uint64_t v10 = -3157;
          break;
        case 130:
          uint64_t v10 = -3158;
          break;
        case 131:
          uint64_t v10 = -3159;
          break;
        case 132:
          uint64_t v10 = -3161;
          break;
        case 133:
          uint64_t v10 = -3162;
          break;
        case 134:
          uint64_t v10 = -3163;
          break;
        case 135:
          uint64_t v10 = -3164;
          break;
        case 136:
          uint64_t v10 = -3165;
          break;
        case 137:
          uint64_t v10 = -3166;
          break;
        case 138:
          uint64_t v10 = -3167;
          break;
        case 139:
          uint64_t v10 = -3168;
          break;
        case 140:
          uint64_t v10 = -3169;
          break;
        case 141:
          uint64_t v10 = -3170;
          break;
        case 142:
          uint64_t v10 = -3171;
          break;
        case 143:
          uint64_t v10 = -3172;
          break;
        case 144:
          uint64_t v10 = -3173;
          break;
        case 145:
          uint64_t v10 = -3174;
          break;
        case 146:
          uint64_t v10 = -3175;
          break;
        case 147:
          uint64_t v10 = -3176;
          break;
        case 148:
          uint64_t v10 = -3177;
          break;
        case 149:
          uint64_t v10 = -3178;
          break;
        case 150:
          uint64_t v10 = -3179;
          break;
        case 151:
          uint64_t v10 = -3180;
          break;
        case 152:
          uint64_t v10 = -3181;
          break;
        case 153:
          uint64_t v10 = -3182;
          break;
        case 154:
          uint64_t v10 = -3183;
          break;
        case 155:
          uint64_t v10 = -3184;
          break;
        case 156:
          uint64_t v10 = -3185;
          break;
        case 157:
          uint64_t v10 = -3186;
          break;
        case 158:
          uint64_t v10 = -3187;
          break;
        case 159:
          uint64_t v10 = -3188;
          break;
        case 160:
          uint64_t v10 = -3189;
          break;
        case 161:
          uint64_t v10 = -3300;
          break;
        case 162:
          uint64_t v10 = -5108;
          break;
        case 163:
          uint64_t v10 = -6009;
          break;
        case 164:
          uint64_t v10 = -6010;
          break;
        case 165:
          uint64_t v10 = -6102;
          break;
        case 166:
          uint64_t v10 = -6103;
          break;
        case 167:
          uint64_t v10 = -6104;
          break;
        case 168:
          uint64_t v10 = -6105;
          break;
        case 169:
          uint64_t v10 = -8001;
          break;
        case 170:
          uint64_t v10 = -8301;
          break;
        case 171:
          uint64_t v10 = -8304;
          break;
        case 172:
          uint64_t v10 = -8400;
          break;
        case 173:
          uint64_t v10 = -8401;
          break;
        case 174:
          uint64_t v10 = -8403;
          break;
        case 175:
          uint64_t v10 = -8404;
          break;
        case 176:
          uint64_t v10 = -8428;
          break;
        case 177:
          uint64_t v10 = -8429;
          break;
        case 178:
          uint64_t v10 = -8433;
          break;
        case 179:
          uint64_t v10 = -8434;
          break;
        case 180:
          uint64_t v10 = -8500;
          break;
        case 181:
          uint64_t v10 = -8501;
          break;
        case 182:
          uint64_t v10 = -8502;
          break;
        case 183:
          uint64_t v10 = -8503;
          break;
        case 184:
          uint64_t v10 = -8504;
          break;
        case 185:
          uint64_t v10 = -22200;
          break;
        case 186:
          uint64_t v10 = -22201;
          break;
        case 187:
          uint64_t v10 = -22202;
          break;
        case 188:
          uint64_t v10 = -22203;
          break;
        case 189:
          uint64_t v10 = -22204;
          break;
        case 190:
          uint64_t v10 = -22205;
          break;
        case 191:
          uint64_t v10 = -22206;
          break;
        case 192:
          uint64_t v10 = -22207;
          break;
        case 193:
          uint64_t v10 = -22208;
          break;
        case 194:
          uint64_t v10 = -72200;
          break;
        case 195:
          uint64_t v10 = -72201;
          break;
        case 196:
          uint64_t v10 = -72202;
          break;
        case 197:
          uint64_t v10 = -72203;
          break;
        case 198:
          uint64_t v10 = -72204;
          break;
        case 199:
          uint64_t v10 = -72205;
          break;
        case 200:
          uint64_t v10 = -72206;
          break;
        case 201:
          uint64_t v10 = -72207;
          break;
        case 202:
          uint64_t v10 = -72208;
          break;
        case 203:
          uint64_t v10 = -72209;
          break;
        case 204:
          uint64_t v10 = -72210;
          break;
        case 205:
          uint64_t v10 = -72211;
          break;
        case 206:
          uint64_t v10 = -72780;
          break;
        case 207:
          uint64_t v10 = -72781;
          break;
        case 208:
          uint64_t v10 = -72782;
          break;
        default:
          break;
      }
      uint64_t v11 = -1;
      switch(v8)
      {
        case 1:
          uint64_t v11 = -2;
          break;
        case 2:
          uint64_t v11 = -3;
          break;
        case 3:
          uint64_t v11 = -4;
          break;
        case 4:
          uint64_t v11 = -5;
          break;
        case 5:
          uint64_t v11 = -6;
          break;
        case 6:
          uint64_t v11 = -7;
          break;
        case 7:
          uint64_t v11 = -8;
          break;
        case 8:
          uint64_t v11 = -9;
          break;
        case 9:
          uint64_t v11 = -10;
          break;
        case 10:
          uint64_t v11 = -11;
          break;
        case 11:
          uint64_t v11 = -12;
          break;
        case 12:
          uint64_t v11 = -13;
          break;
        case 13:
          uint64_t v11 = -14;
          break;
        case 14:
          uint64_t v11 = -15;
          break;
        case 15:
          uint64_t v11 = -16;
          break;
        case 16:
          uint64_t v11 = -17;
          break;
        case 17:
          uint64_t v11 = -18;
          break;
        case 18:
          uint64_t v11 = -19;
          break;
        case 19:
          uint64_t v11 = -20;
          break;
        case 20:
          uint64_t v11 = -21;
          break;
        case 21:
          uint64_t v11 = -22;
          break;
        case 22:
          uint64_t v11 = -28;
          break;
        case 23:
          uint64_t v11 = -29;
          break;
        case 24:
          uint64_t v11 = 200;
          break;
        case 25:
          uint64_t v11 = 20000;
          break;
        case 26:
          uint64_t v11 = 20001;
          break;
        case 27:
          uint64_t v11 = 20100;
          break;
        case 28:
          uint64_t v11 = 40000;
          break;
        case 29:
          uint64_t v11 = 40010;
          break;
        case 30:
          uint64_t v11 = 40011;
          break;
        case 31:
          uint64_t v11 = 40012;
          break;
        case 32:
          uint64_t v11 = 40013;
          break;
        case 33:
          uint64_t v11 = 40014;
          break;
        case 34:
          uint64_t v11 = 40015;
          break;
        case 35:
          uint64_t v11 = 40020;
          break;
        case 36:
          uint64_t v11 = 40021;
          break;
        case 37:
          uint64_t v11 = 40022;
          break;
        case 38:
          uint64_t v11 = 40023;
          break;
        case 39:
          uint64_t v11 = 40024;
          break;
        case 40:
          uint64_t v11 = 40025;
          break;
        case 41:
          uint64_t v11 = 40026;
          break;
        case 42:
          uint64_t v11 = 40027;
          break;
        case 43:
          uint64_t v11 = 40028;
          break;
        case 44:
          uint64_t v11 = 40029;
          break;
        case 45:
          uint64_t v11 = 40030;
          break;
        case 46:
          uint64_t v11 = 40101;
          break;
        case 47:
          uint64_t v11 = 40102;
          break;
        case 48:
          uint64_t v11 = 40200;
          break;
        case 49:
          uint64_t v11 = 40201;
          break;
        case 50:
          uint64_t v11 = 40205;
          break;
        case 51:
          uint64_t v11 = 40401;
          break;
        case 52:
          uint64_t v11 = 40402;
          break;
        case 53:
          uint64_t v11 = 40403;
          break;
        case 54:
          uint64_t v11 = 40404;
          break;
        case 55:
          uint64_t v11 = 40500;
          break;
        case 56:
          uint64_t v11 = 40600;
          break;
        case 57:
          uint64_t v11 = 40601;
          break;
        case 58:
          uint64_t v11 = 50000;
          break;
        case 59:
          uint64_t v11 = 50001;
          break;
        case 60:
          uint64_t v11 = 50002;
          break;
        case 61:
          uint64_t v11 = 99991;
          break;
        case 62:
          uint64_t v11 = 99992;
          break;
        case 63:
          uint64_t v11 = 99993;
          break;
        case 64:
          uint64_t v11 = -1101;
          break;
        case 65:
          uint64_t v11 = -1102;
          break;
        case 66:
          uint64_t v11 = -1103;
          break;
        case 67:
          uint64_t v11 = -1104;
          break;
        case 68:
          uint64_t v11 = -1110;
          break;
        case 69:
          uint64_t v11 = -1111;
          break;
        case 70:
          uint64_t v11 = -1112;
          break;
        case 71:
          uint64_t v11 = -1113;
          break;
        case 72:
          uint64_t v11 = -1114;
          break;
        case 73:
          uint64_t v11 = -1115;
          break;
        case 74:
          uint64_t v11 = -1116;
          break;
        case 75:
          uint64_t v11 = -1117;
          break;
        case 76:
          uint64_t v11 = -1118;
          break;
        case 77:
          uint64_t v11 = -1119;
          break;
        case 78:
          uint64_t v11 = -1201;
          break;
        case 79:
          uint64_t v11 = -1202;
          break;
        case 80:
          uint64_t v11 = -1203;
          break;
        case 81:
          uint64_t v11 = -1204;
          break;
        case 82:
          uint64_t v11 = -1402;
          break;
        case 83:
          uint64_t v11 = -1403;
          break;
        case 84:
          uint64_t v11 = -1404;
          break;
        case 85:
          uint64_t v11 = -1301;
          break;
        case 86:
          uint64_t v11 = -1302;
          break;
        case 87:
          uint64_t v11 = -1303;
          break;
        case 88:
          uint64_t v11 = -1304;
          break;
        case 89:
          uint64_t v11 = -1305;
          break;
        case 90:
          uint64_t v11 = -1306;
          break;
        case 91:
          uint64_t v11 = -1307;
          break;
        case 92:
          uint64_t v11 = -1308;
          break;
        case 93:
          uint64_t v11 = -1309;
          break;
        case 94:
          uint64_t v11 = -1310;
          break;
        case 95:
          uint64_t v11 = -1315;
          break;
        case 96:
          uint64_t v11 = -1316;
          break;
        case 97:
          uint64_t v11 = -1317;
          break;
        case 98:
          uint64_t v11 = -131600;
          break;
        case 99:
          uint64_t v11 = -2103;
          break;
        case 100:
          uint64_t v11 = -2104;
          break;
        case 101:
          uint64_t v11 = -2107;
          break;
        case 102:
          uint64_t v11 = -2110;
          break;
        case 103:
          uint64_t v11 = -2111;
          break;
        case 104:
          uint64_t v11 = -2112;
          break;
        case 105:
          uint64_t v11 = -2123;
          break;
        case 106:
          uint64_t v11 = -2124;
          break;
        case 107:
          uint64_t v11 = -2125;
          break;
        case 108:
          uint64_t v11 = -2126;
          break;
        case 109:
          uint64_t v11 = -2127;
          break;
        case 110:
          uint64_t v11 = -3101;
          break;
        case 111:
          uint64_t v11 = -3102;
          break;
        case 112:
          uint64_t v11 = -3103;
          break;
        case 113:
          uint64_t v11 = -3104;
          break;
        case 114:
          uint64_t v11 = -3105;
          break;
        case 115:
          uint64_t v11 = -3106;
          break;
        case 116:
          uint64_t v11 = -3107;
          break;
        case 117:
          uint64_t v11 = -3108;
          break;
        case 118:
          uint64_t v11 = -3109;
          break;
        case 119:
          uint64_t v11 = -3110;
          break;
        case 120:
          uint64_t v11 = -3111;
          break;
        case 121:
          uint64_t v11 = -3112;
          break;
        case 122:
          uint64_t v11 = -3113;
          break;
        case 123:
          uint64_t v11 = -3151;
          break;
        case 124:
          uint64_t v11 = -3152;
          break;
        case 125:
          uint64_t v11 = -3153;
          break;
        case 126:
          uint64_t v11 = -3154;
          break;
        case 127:
          uint64_t v11 = -3155;
          break;
        case 128:
          uint64_t v11 = -3156;
          break;
        case 129:
          uint64_t v11 = -3157;
          break;
        case 130:
          uint64_t v11 = -3158;
          break;
        case 131:
          uint64_t v11 = -3159;
          break;
        case 132:
          uint64_t v11 = -3161;
          break;
        case 133:
          uint64_t v11 = -3162;
          break;
        case 134:
          uint64_t v11 = -3163;
          break;
        case 135:
          uint64_t v11 = -3164;
          break;
        case 136:
          uint64_t v11 = -3165;
          break;
        case 137:
          uint64_t v11 = -3166;
          break;
        case 138:
          uint64_t v11 = -3167;
          break;
        case 139:
          uint64_t v11 = -3168;
          break;
        case 140:
          uint64_t v11 = -3169;
          break;
        case 141:
          uint64_t v11 = -3170;
          break;
        case 142:
          uint64_t v11 = -3171;
          break;
        case 143:
          uint64_t v11 = -3172;
          break;
        case 144:
          uint64_t v11 = -3173;
          break;
        case 145:
          uint64_t v11 = -3174;
          break;
        case 146:
          uint64_t v11 = -3175;
          break;
        case 147:
          uint64_t v11 = -3176;
          break;
        case 148:
          uint64_t v11 = -3177;
          break;
        case 149:
          uint64_t v11 = -3178;
          break;
        case 150:
          uint64_t v11 = -3179;
          break;
        case 151:
          uint64_t v11 = -3180;
          break;
        case 152:
          uint64_t v11 = -3181;
          break;
        case 153:
          uint64_t v11 = -3182;
          break;
        case 154:
          uint64_t v11 = -3183;
          break;
        case 155:
          uint64_t v11 = -3184;
          break;
        case 156:
          uint64_t v11 = -3185;
          break;
        case 157:
          uint64_t v11 = -3186;
          break;
        case 158:
          uint64_t v11 = -3187;
          break;
        case 159:
          uint64_t v11 = -3188;
          break;
        case 160:
          uint64_t v11 = -3189;
          break;
        case 161:
          uint64_t v11 = -3300;
          break;
        case 162:
          uint64_t v11 = -5108;
          break;
        case 163:
          uint64_t v11 = -6009;
          break;
        case 164:
          uint64_t v11 = -6010;
          break;
        case 165:
          uint64_t v11 = -6102;
          break;
        case 166:
          uint64_t v11 = -6103;
          break;
        case 167:
          uint64_t v11 = -6104;
          break;
        case 168:
          uint64_t v11 = -6105;
          break;
        case 169:
          uint64_t v11 = -8001;
          break;
        case 170:
          uint64_t v11 = -8301;
          break;
        case 171:
          uint64_t v11 = -8304;
          break;
        case 172:
          uint64_t v11 = -8400;
          break;
        case 173:
          uint64_t v11 = -8401;
          break;
        case 174:
          uint64_t v11 = -8403;
          break;
        case 175:
          uint64_t v11 = -8404;
          break;
        case 176:
          uint64_t v11 = -8428;
          break;
        case 177:
          uint64_t v11 = -8429;
          break;
        case 178:
          uint64_t v11 = -8433;
          break;
        case 179:
          uint64_t v11 = -8434;
          break;
        case 180:
          uint64_t v11 = -8500;
          break;
        case 181:
          uint64_t v11 = -8501;
          break;
        case 182:
          uint64_t v11 = -8502;
          break;
        case 183:
          uint64_t v11 = -8503;
          break;
        case 184:
          uint64_t v11 = -8504;
          break;
        case 185:
          uint64_t v11 = -22200;
          break;
        case 186:
          uint64_t v11 = -22201;
          break;
        case 187:
          uint64_t v11 = -22202;
          break;
        case 188:
          uint64_t v11 = -22203;
          break;
        case 189:
          uint64_t v11 = -22204;
          break;
        case 190:
          uint64_t v11 = -22205;
          break;
        case 191:
          uint64_t v11 = -22206;
          break;
        case 192:
          uint64_t v11 = -22207;
          break;
        case 193:
          uint64_t v11 = -22208;
          break;
        case 194:
          uint64_t v11 = -72200;
          break;
        case 195:
          uint64_t v11 = -72201;
          break;
        case 196:
          uint64_t v11 = -72202;
          break;
        case 197:
          uint64_t v11 = -72203;
          break;
        case 198:
          uint64_t v11 = -72204;
          break;
        case 199:
          uint64_t v11 = -72205;
          break;
        case 200:
          uint64_t v11 = -72206;
          break;
        case 201:
          uint64_t v11 = -72207;
          break;
        case 202:
          uint64_t v11 = -72208;
          break;
        case 203:
          uint64_t v11 = -72209;
          break;
        case 204:
          uint64_t v11 = -72210;
          break;
        case 205:
          uint64_t v11 = -72211;
          break;
        case 206:
          uint64_t v11 = -72780;
          break;
        case 207:
          uint64_t v11 = -72781;
          break;
        case 208:
          uint64_t v11 = -72782;
          break;
        default:
          break;
      }
      if (v10 != v11) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if (v7 && (v4 == v6 && v5 == v7 || (sub_214D1ABC8() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
      return 0;
  }
}

uint64_t sub_214CE8A8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  int v4 = a2[1];
  switch(a1[1])
  {
    case 0xD1u:
      if (v4 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 0xD2u:
      if (v4 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 0xD3u:
      if (v4 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 0xD4u:
      if (v4 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 0xD5u:
      if (v4 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 0xD6u:
      if (v4 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 0xD7u:
      if (v4 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 0xD8u:
      if (v4 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 0xD9u:
      if (v4 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v4 + 47) < 9u) {
        return 0;
      }
      uint64_t v5 = -1;
      switch(a1[1])
      {
        case 0xD2u:
          uint64_t v5 = -2;
          break;
        case 0xD3u:
          uint64_t v5 = -3;
          break;
        case 0xD4u:
          uint64_t v5 = -4;
          break;
        case 0xD5u:
          uint64_t v5 = -5;
          break;
        case 0xD6u:
          uint64_t v5 = -6;
          break;
        case 0xD7u:
          uint64_t v5 = -7;
          break;
        case 0xD8u:
          uint64_t v5 = -8;
          break;
        case 0xD9u:
          uint64_t v5 = -9;
          break;
        case 0xDAu:
          uint64_t v5 = -10;
          break;
        case 0xDBu:
          uint64_t v5 = -11;
          break;
        case 0xDCu:
          uint64_t v5 = -12;
          break;
        case 0xDDu:
          uint64_t v5 = -13;
          break;
        case 0xDEu:
          uint64_t v5 = -14;
          break;
        case 0xDFu:
          uint64_t v5 = -15;
          break;
        case 0xE0u:
          uint64_t v5 = -16;
          break;
        case 0xE1u:
          uint64_t v5 = -17;
          break;
        case 0xE2u:
          uint64_t v5 = -18;
          break;
        case 0xE3u:
          uint64_t v5 = -19;
          break;
        case 0xE4u:
          uint64_t v5 = -20;
          break;
        case 0xE5u:
          uint64_t v5 = -21;
          break;
        case 0xE6u:
          uint64_t v5 = -22;
          break;
        case 0xE7u:
          uint64_t v5 = -28;
          break;
        case 0xE8u:
          uint64_t v5 = -29;
          break;
        case 0xE9u:
          uint64_t v5 = 200;
          break;
        case 0xEAu:
          uint64_t v5 = 20000;
          break;
        case 0xEBu:
          uint64_t v5 = 20001;
          break;
        case 0xECu:
          uint64_t v5 = 20100;
          break;
        case 0xEDu:
          uint64_t v5 = 40000;
          break;
        case 0xEEu:
          uint64_t v5 = 40010;
          break;
        case 0xEFu:
          uint64_t v5 = 40011;
          break;
        case 0xF0u:
          uint64_t v5 = 40012;
          break;
        case 0xF1u:
          uint64_t v5 = 40013;
          break;
        case 0xF2u:
          uint64_t v5 = 40014;
          break;
        case 0xF3u:
          uint64_t v5 = 40015;
          break;
        case 0xF4u:
          uint64_t v5 = 40020;
          break;
        case 0xF5u:
          uint64_t v5 = 40021;
          break;
        case 0xF6u:
          uint64_t v5 = 40022;
          break;
        case 0xF7u:
          uint64_t v5 = 40023;
          break;
        case 0xF8u:
          uint64_t v5 = 40024;
          break;
        case 0xF9u:
          uint64_t v5 = 40025;
          break;
        case 0xFAu:
          uint64_t v5 = 40026;
          break;
        case 0xFBu:
          uint64_t v5 = 40027;
          break;
        case 0xFCu:
          uint64_t v5 = 40028;
          break;
        case 0xFDu:
          uint64_t v5 = 40029;
          break;
        case 0xFEu:
          uint64_t v5 = 40030;
          break;
        case 0xFFu:
          uint64_t v5 = 40101;
          break;
        case 0u:
          uint64_t v5 = 40102;
          break;
        case 1u:
          uint64_t v5 = 40200;
          break;
        case 2u:
          uint64_t v5 = 40201;
          break;
        case 3u:
          uint64_t v5 = 40205;
          break;
        case 4u:
          uint64_t v5 = 40401;
          break;
        case 5u:
          uint64_t v5 = 40402;
          break;
        case 6u:
          uint64_t v5 = 40403;
          break;
        case 7u:
          uint64_t v5 = 40404;
          break;
        case 8u:
          uint64_t v5 = 40500;
          break;
        case 9u:
          uint64_t v5 = 40600;
          break;
        case 0xAu:
          uint64_t v5 = 40601;
          break;
        case 0xBu:
          uint64_t v5 = 50000;
          break;
        case 0xCu:
          uint64_t v5 = 50001;
          break;
        case 0xDu:
          uint64_t v5 = 50002;
          break;
        case 0xEu:
          uint64_t v5 = 99991;
          break;
        case 0xFu:
          uint64_t v5 = 99992;
          break;
        case 0x10u:
          uint64_t v5 = 99993;
          break;
        case 0x11u:
          uint64_t v5 = -1101;
          break;
        case 0x12u:
          uint64_t v5 = -1102;
          break;
        case 0x13u:
          uint64_t v5 = -1103;
          break;
        case 0x14u:
          uint64_t v5 = -1104;
          break;
        case 0x15u:
          uint64_t v5 = -1110;
          break;
        case 0x16u:
          uint64_t v5 = -1111;
          break;
        case 0x17u:
          uint64_t v5 = -1112;
          break;
        case 0x18u:
          uint64_t v5 = -1113;
          break;
        case 0x19u:
          uint64_t v5 = -1114;
          break;
        case 0x1Au:
          uint64_t v5 = -1115;
          break;
        case 0x1Bu:
          uint64_t v5 = -1116;
          break;
        case 0x1Cu:
          uint64_t v5 = -1117;
          break;
        case 0x1Du:
          uint64_t v5 = -1118;
          break;
        case 0x1Eu:
          uint64_t v5 = -1119;
          break;
        case 0x1Fu:
          uint64_t v5 = -1201;
          break;
        case 0x20u:
          uint64_t v5 = -1202;
          break;
        case 0x21u:
          uint64_t v5 = -1203;
          break;
        case 0x22u:
          uint64_t v5 = -1204;
          break;
        case 0x23u:
          uint64_t v5 = -1402;
          break;
        case 0x24u:
          uint64_t v5 = -1403;
          break;
        case 0x25u:
          uint64_t v5 = -1404;
          break;
        case 0x26u:
          uint64_t v5 = -1301;
          break;
        case 0x27u:
          uint64_t v5 = -1302;
          break;
        case 0x28u:
          uint64_t v5 = -1303;
          break;
        case 0x29u:
          uint64_t v5 = -1304;
          break;
        case 0x2Au:
          uint64_t v5 = -1305;
          break;
        case 0x2Bu:
          uint64_t v5 = -1306;
          break;
        case 0x2Cu:
          uint64_t v5 = -1307;
          break;
        case 0x2Du:
          uint64_t v5 = -1308;
          break;
        case 0x2Eu:
          uint64_t v5 = -1309;
          break;
        case 0x2Fu:
          uint64_t v5 = -1310;
          break;
        case 0x30u:
          uint64_t v5 = -1315;
          break;
        case 0x31u:
          uint64_t v5 = -1316;
          break;
        case 0x32u:
          uint64_t v5 = -1317;
          break;
        case 0x33u:
          uint64_t v5 = -131600;
          break;
        case 0x34u:
          uint64_t v5 = -2103;
          break;
        case 0x35u:
          uint64_t v5 = -2104;
          break;
        case 0x36u:
          uint64_t v5 = -2107;
          break;
        case 0x37u:
          uint64_t v5 = -2110;
          break;
        case 0x38u:
          uint64_t v5 = -2111;
          break;
        case 0x39u:
          uint64_t v5 = -2112;
          break;
        case 0x3Au:
          uint64_t v5 = -2123;
          break;
        case 0x3Bu:
          uint64_t v5 = -2124;
          break;
        case 0x3Cu:
          uint64_t v5 = -2125;
          break;
        case 0x3Du:
          uint64_t v5 = -2126;
          break;
        case 0x3Eu:
          uint64_t v5 = -2127;
          break;
        case 0x3Fu:
          uint64_t v5 = -3101;
          break;
        case 0x40u:
          uint64_t v5 = -3102;
          break;
        case 0x41u:
          uint64_t v5 = -3103;
          break;
        case 0x42u:
          uint64_t v5 = -3104;
          break;
        case 0x43u:
          uint64_t v5 = -3105;
          break;
        case 0x44u:
          uint64_t v5 = -3106;
          break;
        case 0x45u:
          uint64_t v5 = -3107;
          break;
        case 0x46u:
          uint64_t v5 = -3108;
          break;
        case 0x47u:
          uint64_t v5 = -3109;
          break;
        case 0x48u:
          uint64_t v5 = -3110;
          break;
        case 0x49u:
          uint64_t v5 = -3111;
          break;
        case 0x4Au:
          uint64_t v5 = -3112;
          break;
        case 0x4Bu:
          uint64_t v5 = -3113;
          break;
        case 0x4Cu:
          uint64_t v5 = -3151;
          break;
        case 0x4Du:
          uint64_t v5 = -3152;
          break;
        case 0x4Eu:
          uint64_t v5 = -3153;
          break;
        case 0x4Fu:
          uint64_t v5 = -3154;
          break;
        case 0x50u:
          uint64_t v5 = -3155;
          break;
        case 0x51u:
          uint64_t v5 = -3156;
          break;
        case 0x52u:
          uint64_t v5 = -3157;
          break;
        case 0x53u:
          uint64_t v5 = -3158;
          break;
        case 0x54u:
          uint64_t v5 = -3159;
          break;
        case 0x55u:
          uint64_t v5 = -3161;
          break;
        case 0x56u:
          uint64_t v5 = -3162;
          break;
        case 0x57u:
          uint64_t v5 = -3163;
          break;
        case 0x58u:
          uint64_t v5 = -3164;
          break;
        case 0x59u:
          uint64_t v5 = -3165;
          break;
        case 0x5Au:
          uint64_t v5 = -3166;
          break;
        case 0x5Bu:
          uint64_t v5 = -3167;
          break;
        case 0x5Cu:
          uint64_t v5 = -3168;
          break;
        case 0x5Du:
          uint64_t v5 = -3169;
          break;
        case 0x5Eu:
          uint64_t v5 = -3170;
          break;
        case 0x5Fu:
          uint64_t v5 = -3171;
          break;
        case 0x60u:
          uint64_t v5 = -3172;
          break;
        case 0x61u:
          uint64_t v5 = -3173;
          break;
        case 0x62u:
          uint64_t v5 = -3174;
          break;
        case 0x63u:
          uint64_t v5 = -3175;
          break;
        case 0x64u:
          uint64_t v5 = -3176;
          break;
        case 0x65u:
          uint64_t v5 = -3177;
          break;
        case 0x66u:
          uint64_t v5 = -3178;
          break;
        case 0x67u:
          uint64_t v5 = -3179;
          break;
        case 0x68u:
          uint64_t v5 = -3180;
          break;
        case 0x69u:
          uint64_t v5 = -3181;
          break;
        case 0x6Au:
          uint64_t v5 = -3182;
          break;
        case 0x6Bu:
          uint64_t v5 = -3183;
          break;
        case 0x6Cu:
          uint64_t v5 = -3184;
          break;
        case 0x6Du:
          uint64_t v5 = -3185;
          break;
        case 0x6Eu:
          uint64_t v5 = -3186;
          break;
        case 0x6Fu:
          uint64_t v5 = -3187;
          break;
        case 0x70u:
          uint64_t v5 = -3188;
          break;
        case 0x71u:
          uint64_t v5 = -3189;
          break;
        case 0x72u:
          uint64_t v5 = -3300;
          break;
        case 0x73u:
          uint64_t v5 = -5108;
          break;
        case 0x74u:
          uint64_t v5 = -6009;
          break;
        case 0x75u:
          uint64_t v5 = -6010;
          break;
        case 0x76u:
          uint64_t v5 = -6102;
          break;
        case 0x77u:
          uint64_t v5 = -6103;
          break;
        case 0x78u:
          uint64_t v5 = -6104;
          break;
        case 0x79u:
          uint64_t v5 = -6105;
          break;
        case 0x7Au:
          uint64_t v5 = -8001;
          break;
        case 0x7Bu:
          uint64_t v5 = -8301;
          break;
        case 0x7Cu:
          uint64_t v5 = -8304;
          break;
        case 0x7Du:
          uint64_t v5 = -8400;
          break;
        case 0x7Eu:
          uint64_t v5 = -8401;
          break;
        case 0x7Fu:
          uint64_t v5 = -8403;
          break;
        case 0x80u:
          uint64_t v5 = -8404;
          break;
        case 0x81u:
          uint64_t v5 = -8428;
          break;
        case 0x82u:
          uint64_t v5 = -8429;
          break;
        case 0x83u:
          uint64_t v5 = -8433;
          break;
        case 0x84u:
          uint64_t v5 = -8434;
          break;
        case 0x85u:
          uint64_t v5 = -8500;
          break;
        case 0x86u:
          uint64_t v5 = -8501;
          break;
        case 0x87u:
          uint64_t v5 = -8502;
          break;
        case 0x88u:
          uint64_t v5 = -8503;
          break;
        case 0x89u:
          uint64_t v5 = -8504;
          break;
        case 0x8Au:
          uint64_t v5 = -22200;
          break;
        case 0x8Bu:
          uint64_t v5 = -22201;
          break;
        case 0x8Cu:
          uint64_t v5 = -22202;
          break;
        case 0x8Du:
          uint64_t v5 = -22203;
          break;
        case 0x8Eu:
          uint64_t v5 = -22204;
          break;
        case 0x8Fu:
          uint64_t v5 = -22205;
          break;
        case 0x90u:
          uint64_t v5 = -22206;
          break;
        case 0x91u:
          uint64_t v5 = -22207;
          break;
        case 0x92u:
          uint64_t v5 = -22208;
          break;
        case 0x93u:
          uint64_t v5 = -72200;
          break;
        case 0x94u:
          uint64_t v5 = -72201;
          break;
        case 0x95u:
          uint64_t v5 = -72202;
          break;
        case 0x96u:
          uint64_t v5 = -72203;
          break;
        case 0x97u:
          uint64_t v5 = -72204;
          break;
        case 0x98u:
          uint64_t v5 = -72205;
          break;
        case 0x99u:
          uint64_t v5 = -72206;
          break;
        case 0x9Au:
          uint64_t v5 = -72207;
          break;
        case 0x9Bu:
          uint64_t v5 = -72208;
          break;
        case 0x9Cu:
          uint64_t v5 = -72209;
          break;
        case 0x9Du:
          uint64_t v5 = -72210;
          break;
        case 0x9Eu:
          uint64_t v5 = -72211;
          break;
        case 0x9Fu:
          uint64_t v5 = -72780;
          break;
        case 0xA0u:
          uint64_t v5 = -72781;
          break;
        case 0xA1u:
          uint64_t v5 = -72782;
          break;
        default:
          break;
      }
      uint64_t v6 = -1;
      switch(a2[1])
      {
        case 1u:
          uint64_t v6 = -2;
          break;
        case 2u:
          uint64_t v6 = -3;
          break;
        case 3u:
          uint64_t v6 = -4;
          break;
        case 4u:
          uint64_t v6 = -5;
          break;
        case 5u:
          uint64_t v6 = -6;
          break;
        case 6u:
          uint64_t v6 = -7;
          break;
        case 7u:
          uint64_t v6 = -8;
          break;
        case 8u:
          uint64_t v6 = -9;
          break;
        case 9u:
          uint64_t v6 = -10;
          break;
        case 0xAu:
          uint64_t v6 = -11;
          break;
        case 0xBu:
          uint64_t v6 = -12;
          break;
        case 0xCu:
          uint64_t v6 = -13;
          break;
        case 0xDu:
          uint64_t v6 = -14;
          break;
        case 0xEu:
          uint64_t v6 = -15;
          break;
        case 0xFu:
          uint64_t v6 = -16;
          break;
        case 0x10u:
          uint64_t v6 = -17;
          break;
        case 0x11u:
          uint64_t v6 = -18;
          break;
        case 0x12u:
          uint64_t v6 = -19;
          break;
        case 0x13u:
          uint64_t v6 = -20;
          break;
        case 0x14u:
          uint64_t v6 = -21;
          break;
        case 0x15u:
          uint64_t v6 = -22;
          break;
        case 0x16u:
          uint64_t v6 = -28;
          break;
        case 0x17u:
          uint64_t v6 = -29;
          break;
        case 0x18u:
          uint64_t v6 = 200;
          break;
        case 0x19u:
          uint64_t v6 = 20000;
          break;
        case 0x1Au:
          uint64_t v6 = 20001;
          break;
        case 0x1Bu:
          uint64_t v6 = 20100;
          break;
        case 0x1Cu:
          uint64_t v6 = 40000;
          break;
        case 0x1Du:
          uint64_t v6 = 40010;
          break;
        case 0x1Eu:
          uint64_t v6 = 40011;
          break;
        case 0x1Fu:
          uint64_t v6 = 40012;
          break;
        case 0x20u:
          uint64_t v6 = 40013;
          break;
        case 0x21u:
          uint64_t v6 = 40014;
          break;
        case 0x22u:
          uint64_t v6 = 40015;
          break;
        case 0x23u:
          uint64_t v6 = 40020;
          break;
        case 0x24u:
          uint64_t v6 = 40021;
          break;
        case 0x25u:
          uint64_t v6 = 40022;
          break;
        case 0x26u:
          uint64_t v6 = 40023;
          break;
        case 0x27u:
          uint64_t v6 = 40024;
          break;
        case 0x28u:
          uint64_t v6 = 40025;
          break;
        case 0x29u:
          uint64_t v6 = 40026;
          break;
        case 0x2Au:
          uint64_t v6 = 40027;
          break;
        case 0x2Bu:
          uint64_t v6 = 40028;
          break;
        case 0x2Cu:
          uint64_t v6 = 40029;
          break;
        case 0x2Du:
          uint64_t v6 = 40030;
          break;
        case 0x2Eu:
          uint64_t v6 = 40101;
          break;
        case 0x2Fu:
          uint64_t v6 = 40102;
          break;
        case 0x30u:
          uint64_t v6 = 40200;
          break;
        case 0x31u:
          uint64_t v6 = 40201;
          break;
        case 0x32u:
          uint64_t v6 = 40205;
          break;
        case 0x33u:
          uint64_t v6 = 40401;
          break;
        case 0x34u:
          uint64_t v6 = 40402;
          break;
        case 0x35u:
          uint64_t v6 = 40403;
          break;
        case 0x36u:
          uint64_t v6 = 40404;
          break;
        case 0x37u:
          uint64_t v6 = 40500;
          break;
        case 0x38u:
          uint64_t v6 = 40600;
          break;
        case 0x39u:
          uint64_t v6 = 40601;
          break;
        case 0x3Au:
          uint64_t v6 = 50000;
          break;
        case 0x3Bu:
          uint64_t v6 = 50001;
          break;
        case 0x3Cu:
          uint64_t v6 = 50002;
          break;
        case 0x3Du:
          uint64_t v6 = 99991;
          break;
        case 0x3Eu:
          uint64_t v6 = 99992;
          break;
        case 0x3Fu:
          uint64_t v6 = 99993;
          break;
        case 0x40u:
          uint64_t v6 = -1101;
          break;
        case 0x41u:
          uint64_t v6 = -1102;
          break;
        case 0x42u:
          uint64_t v6 = -1103;
          break;
        case 0x43u:
          uint64_t v6 = -1104;
          break;
        case 0x44u:
          uint64_t v6 = -1110;
          break;
        case 0x45u:
          uint64_t v6 = -1111;
          break;
        case 0x46u:
          uint64_t v6 = -1112;
          break;
        case 0x47u:
          uint64_t v6 = -1113;
          break;
        case 0x48u:
          uint64_t v6 = -1114;
          break;
        case 0x49u:
          uint64_t v6 = -1115;
          break;
        case 0x4Au:
          uint64_t v6 = -1116;
          break;
        case 0x4Bu:
          uint64_t v6 = -1117;
          break;
        case 0x4Cu:
          uint64_t v6 = -1118;
          break;
        case 0x4Du:
          uint64_t v6 = -1119;
          break;
        case 0x4Eu:
          uint64_t v6 = -1201;
          break;
        case 0x4Fu:
          uint64_t v6 = -1202;
          break;
        case 0x50u:
          uint64_t v6 = -1203;
          break;
        case 0x51u:
          uint64_t v6 = -1204;
          break;
        case 0x52u:
          uint64_t v6 = -1402;
          break;
        case 0x53u:
          uint64_t v6 = -1403;
          break;
        case 0x54u:
          uint64_t v6 = -1404;
          break;
        case 0x55u:
          uint64_t v6 = -1301;
          break;
        case 0x56u:
          uint64_t v6 = -1302;
          break;
        case 0x57u:
          uint64_t v6 = -1303;
          break;
        case 0x58u:
          uint64_t v6 = -1304;
          break;
        case 0x59u:
          uint64_t v6 = -1305;
          break;
        case 0x5Au:
          uint64_t v6 = -1306;
          break;
        case 0x5Bu:
          uint64_t v6 = -1307;
          break;
        case 0x5Cu:
          uint64_t v6 = -1308;
          break;
        case 0x5Du:
          uint64_t v6 = -1309;
          break;
        case 0x5Eu:
          uint64_t v6 = -1310;
          break;
        case 0x5Fu:
          uint64_t v6 = -1315;
          break;
        case 0x60u:
          uint64_t v6 = -1316;
          break;
        case 0x61u:
          uint64_t v6 = -1317;
          break;
        case 0x62u:
          uint64_t v6 = -131600;
          break;
        case 0x63u:
          uint64_t v6 = -2103;
          break;
        case 0x64u:
          uint64_t v6 = -2104;
          break;
        case 0x65u:
          uint64_t v6 = -2107;
          break;
        case 0x66u:
          uint64_t v6 = -2110;
          break;
        case 0x67u:
          uint64_t v6 = -2111;
          break;
        case 0x68u:
          uint64_t v6 = -2112;
          break;
        case 0x69u:
          uint64_t v6 = -2123;
          break;
        case 0x6Au:
          uint64_t v6 = -2124;
          break;
        case 0x6Bu:
          uint64_t v6 = -2125;
          break;
        case 0x6Cu:
          uint64_t v6 = -2126;
          break;
        case 0x6Du:
          uint64_t v6 = -2127;
          break;
        case 0x6Eu:
          uint64_t v6 = -3101;
          break;
        case 0x6Fu:
          uint64_t v6 = -3102;
          break;
        case 0x70u:
          uint64_t v6 = -3103;
          break;
        case 0x71u:
          uint64_t v6 = -3104;
          break;
        case 0x72u:
          uint64_t v6 = -3105;
          break;
        case 0x73u:
          uint64_t v6 = -3106;
          break;
        case 0x74u:
          uint64_t v6 = -3107;
          break;
        case 0x75u:
          uint64_t v6 = -3108;
          break;
        case 0x76u:
          uint64_t v6 = -3109;
          break;
        case 0x77u:
          uint64_t v6 = -3110;
          break;
        case 0x78u:
          uint64_t v6 = -3111;
          break;
        case 0x79u:
          uint64_t v6 = -3112;
          break;
        case 0x7Au:
          uint64_t v6 = -3113;
          break;
        case 0x7Bu:
          uint64_t v6 = -3151;
          break;
        case 0x7Cu:
          uint64_t v6 = -3152;
          break;
        case 0x7Du:
          uint64_t v6 = -3153;
          break;
        case 0x7Eu:
          uint64_t v6 = -3154;
          break;
        case 0x7Fu:
          uint64_t v6 = -3155;
          break;
        case 0x80u:
          uint64_t v6 = -3156;
          break;
        case 0x81u:
          uint64_t v6 = -3157;
          break;
        case 0x82u:
          uint64_t v6 = -3158;
          break;
        case 0x83u:
          uint64_t v6 = -3159;
          break;
        case 0x84u:
          uint64_t v6 = -3161;
          break;
        case 0x85u:
          uint64_t v6 = -3162;
          break;
        case 0x86u:
          uint64_t v6 = -3163;
          break;
        case 0x87u:
          uint64_t v6 = -3164;
          break;
        case 0x88u:
          uint64_t v6 = -3165;
          break;
        case 0x89u:
          uint64_t v6 = -3166;
          break;
        case 0x8Au:
          uint64_t v6 = -3167;
          break;
        case 0x8Bu:
          uint64_t v6 = -3168;
          break;
        case 0x8Cu:
          uint64_t v6 = -3169;
          break;
        case 0x8Du:
          uint64_t v6 = -3170;
          break;
        case 0x8Eu:
          uint64_t v6 = -3171;
          break;
        case 0x8Fu:
          uint64_t v6 = -3172;
          break;
        case 0x90u:
          uint64_t v6 = -3173;
          break;
        case 0x91u:
          uint64_t v6 = -3174;
          break;
        case 0x92u:
          uint64_t v6 = -3175;
          break;
        case 0x93u:
          uint64_t v6 = -3176;
          break;
        case 0x94u:
          uint64_t v6 = -3177;
          break;
        case 0x95u:
          uint64_t v6 = -3178;
          break;
        case 0x96u:
          uint64_t v6 = -3179;
          break;
        case 0x97u:
          uint64_t v6 = -3180;
          break;
        case 0x98u:
          uint64_t v6 = -3181;
          break;
        case 0x99u:
          uint64_t v6 = -3182;
          break;
        case 0x9Au:
          uint64_t v6 = -3183;
          break;
        case 0x9Bu:
          uint64_t v6 = -3184;
          break;
        case 0x9Cu:
          uint64_t v6 = -3185;
          break;
        case 0x9Du:
          uint64_t v6 = -3186;
          break;
        case 0x9Eu:
          uint64_t v6 = -3187;
          break;
        case 0x9Fu:
          uint64_t v6 = -3188;
          break;
        case 0xA0u:
          uint64_t v6 = -3189;
          break;
        case 0xA1u:
          uint64_t v6 = -3300;
          break;
        case 0xA2u:
          uint64_t v6 = -5108;
          break;
        case 0xA3u:
          uint64_t v6 = -6009;
          break;
        case 0xA4u:
          uint64_t v6 = -6010;
          break;
        case 0xA5u:
          uint64_t v6 = -6102;
          break;
        case 0xA6u:
          uint64_t v6 = -6103;
          break;
        case 0xA7u:
          uint64_t v6 = -6104;
          break;
        case 0xA8u:
          uint64_t v6 = -6105;
          break;
        case 0xA9u:
          uint64_t v6 = -8001;
          break;
        case 0xAAu:
          uint64_t v6 = -8301;
          break;
        case 0xABu:
          uint64_t v6 = -8304;
          break;
        case 0xACu:
          uint64_t v6 = -8400;
          break;
        case 0xADu:
          uint64_t v6 = -8401;
          break;
        case 0xAEu:
          uint64_t v6 = -8403;
          break;
        case 0xAFu:
          uint64_t v6 = -8404;
          break;
        case 0xB0u:
          uint64_t v6 = -8428;
          break;
        case 0xB1u:
          uint64_t v6 = -8429;
          break;
        case 0xB2u:
          uint64_t v6 = -8433;
          break;
        case 0xB3u:
          uint64_t v6 = -8434;
          break;
        case 0xB4u:
          uint64_t v6 = -8500;
          break;
        case 0xB5u:
          uint64_t v6 = -8501;
          break;
        case 0xB6u:
          uint64_t v6 = -8502;
          break;
        case 0xB7u:
          uint64_t v6 = -8503;
          break;
        case 0xB8u:
          uint64_t v6 = -8504;
          break;
        case 0xB9u:
          uint64_t v6 = -22200;
          break;
        case 0xBAu:
          uint64_t v6 = -22201;
          break;
        case 0xBBu:
          uint64_t v6 = -22202;
          break;
        case 0xBCu:
          uint64_t v6 = -22203;
          break;
        case 0xBDu:
          uint64_t v6 = -22204;
          break;
        case 0xBEu:
          uint64_t v6 = -22205;
          break;
        case 0xBFu:
          uint64_t v6 = -22206;
          break;
        case 0xC0u:
          uint64_t v6 = -22207;
          break;
        case 0xC1u:
          uint64_t v6 = -22208;
          break;
        case 0xC2u:
          uint64_t v6 = -72200;
          break;
        case 0xC3u:
          uint64_t v6 = -72201;
          break;
        case 0xC4u:
          uint64_t v6 = -72202;
          break;
        case 0xC5u:
          uint64_t v6 = -72203;
          break;
        case 0xC6u:
          uint64_t v6 = -72204;
          break;
        case 0xC7u:
          uint64_t v6 = -72205;
          break;
        case 0xC8u:
          uint64_t v6 = -72206;
          break;
        case 0xC9u:
          uint64_t v6 = -72207;
          break;
        case 0xCAu:
          uint64_t v6 = -72208;
          break;
        case 0xCBu:
          uint64_t v6 = -72209;
          break;
        case 0xCCu:
          uint64_t v6 = -72210;
          break;
        case 0xCDu:
          uint64_t v6 = -72211;
          break;
        case 0xCEu:
          uint64_t v6 = -72780;
          break;
        case 0xCFu:
          uint64_t v6 = -72781;
          break;
        case 0xD0u:
          uint64_t v6 = -72782;
          break;
        default:
          break;
      }
      if (v5 != v6) {
        return 0;
      }
LABEL_440:
      if (v2 == 2)
      {
        if (v3 == 2) {
          return 1;
        }
      }
      else if (v3 != 2 && ((((v3 & 1) == 0) ^ v2) & 1) != 0)
      {
        return 1;
      }
      return 0;
  }
}

uint64_t sub_214CEA098(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  int v4 = *(unsigned __int8 *)(a2 + 8);
  switch(*(unsigned char *)(a1 + 8))
  {
    case 0xD1:
      if (v4 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 0xD2:
      if (v4 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 0xD3:
      if (v4 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 0xD4:
      if (v4 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 0xD5:
      if (v4 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 0xD6:
      if (v4 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 0xD7:
      if (v4 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 0xD8:
      if (v4 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 0xD9:
      if (v4 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v4 + 47) < 9u) {
        return 0;
      }
      uint64_t v5 = -1;
      switch(*(unsigned __int8 *)(a1 + 8))
      {
        case 0xD2u:
          uint64_t v5 = -2;
          break;
        case 0xD3u:
          uint64_t v5 = -3;
          break;
        case 0xD4u:
          uint64_t v5 = -4;
          break;
        case 0xD5u:
          uint64_t v5 = -5;
          break;
        case 0xD6u:
          uint64_t v5 = -6;
          break;
        case 0xD7u:
          uint64_t v5 = -7;
          break;
        case 0xD8u:
          uint64_t v5 = -8;
          break;
        case 0xD9u:
          uint64_t v5 = -9;
          break;
        case 0xDAu:
          uint64_t v5 = -10;
          break;
        case 0xDBu:
          uint64_t v5 = -11;
          break;
        case 0xDCu:
          uint64_t v5 = -12;
          break;
        case 0xDDu:
          uint64_t v5 = -13;
          break;
        case 0xDEu:
          uint64_t v5 = -14;
          break;
        case 0xDFu:
          uint64_t v5 = -15;
          break;
        case 0xE0u:
          uint64_t v5 = -16;
          break;
        case 0xE1u:
          uint64_t v5 = -17;
          break;
        case 0xE2u:
          uint64_t v5 = -18;
          break;
        case 0xE3u:
          uint64_t v5 = -19;
          break;
        case 0xE4u:
          uint64_t v5 = -20;
          break;
        case 0xE5u:
          uint64_t v5 = -21;
          break;
        case 0xE6u:
          uint64_t v5 = -22;
          break;
        case 0xE7u:
          uint64_t v5 = -28;
          break;
        case 0xE8u:
          uint64_t v5 = -29;
          break;
        case 0xE9u:
          uint64_t v5 = 200;
          break;
        case 0xEAu:
          uint64_t v5 = 20000;
          break;
        case 0xEBu:
          uint64_t v5 = 20001;
          break;
        case 0xECu:
          uint64_t v5 = 20100;
          break;
        case 0xEDu:
          uint64_t v5 = 40000;
          break;
        case 0xEEu:
          uint64_t v5 = 40010;
          break;
        case 0xEFu:
          uint64_t v5 = 40011;
          break;
        case 0xF0u:
          uint64_t v5 = 40012;
          break;
        case 0xF1u:
          uint64_t v5 = 40013;
          break;
        case 0xF2u:
          uint64_t v5 = 40014;
          break;
        case 0xF3u:
          uint64_t v5 = 40015;
          break;
        case 0xF4u:
          uint64_t v5 = 40020;
          break;
        case 0xF5u:
          uint64_t v5 = 40021;
          break;
        case 0xF6u:
          uint64_t v5 = 40022;
          break;
        case 0xF7u:
          uint64_t v5 = 40023;
          break;
        case 0xF8u:
          uint64_t v5 = 40024;
          break;
        case 0xF9u:
          uint64_t v5 = 40025;
          break;
        case 0xFAu:
          uint64_t v5 = 40026;
          break;
        case 0xFBu:
          uint64_t v5 = 40027;
          break;
        case 0xFCu:
          uint64_t v5 = 40028;
          break;
        case 0xFDu:
          uint64_t v5 = 40029;
          break;
        case 0xFEu:
          uint64_t v5 = 40030;
          break;
        case 0xFFu:
          uint64_t v5 = 40101;
          break;
        case 0u:
          uint64_t v5 = 40102;
          break;
        case 1u:
          uint64_t v5 = 40200;
          break;
        case 2u:
          uint64_t v5 = 40201;
          break;
        case 3u:
          uint64_t v5 = 40205;
          break;
        case 4u:
          uint64_t v5 = 40401;
          break;
        case 5u:
          uint64_t v5 = 40402;
          break;
        case 6u:
          uint64_t v5 = 40403;
          break;
        case 7u:
          uint64_t v5 = 40404;
          break;
        case 8u:
          uint64_t v5 = 40500;
          break;
        case 9u:
          uint64_t v5 = 40600;
          break;
        case 0xAu:
          uint64_t v5 = 40601;
          break;
        case 0xBu:
          uint64_t v5 = 50000;
          break;
        case 0xCu:
          uint64_t v5 = 50001;
          break;
        case 0xDu:
          uint64_t v5 = 50002;
          break;
        case 0xEu:
          uint64_t v5 = 99991;
          break;
        case 0xFu:
          uint64_t v5 = 99992;
          break;
        case 0x10u:
          uint64_t v5 = 99993;
          break;
        case 0x11u:
          uint64_t v5 = -1101;
          break;
        case 0x12u:
          uint64_t v5 = -1102;
          break;
        case 0x13u:
          uint64_t v5 = -1103;
          break;
        case 0x14u:
          uint64_t v5 = -1104;
          break;
        case 0x15u:
          uint64_t v5 = -1110;
          break;
        case 0x16u:
          uint64_t v5 = -1111;
          break;
        case 0x17u:
          uint64_t v5 = -1112;
          break;
        case 0x18u:
          uint64_t v5 = -1113;
          break;
        case 0x19u:
          uint64_t v5 = -1114;
          break;
        case 0x1Au:
          uint64_t v5 = -1115;
          break;
        case 0x1Bu:
          uint64_t v5 = -1116;
          break;
        case 0x1Cu:
          uint64_t v5 = -1117;
          break;
        case 0x1Du:
          uint64_t v5 = -1118;
          break;
        case 0x1Eu:
          uint64_t v5 = -1119;
          break;
        case 0x1Fu:
          uint64_t v5 = -1201;
          break;
        case 0x20u:
          uint64_t v5 = -1202;
          break;
        case 0x21u:
          uint64_t v5 = -1203;
          break;
        case 0x22u:
          uint64_t v5 = -1204;
          break;
        case 0x23u:
          uint64_t v5 = -1402;
          break;
        case 0x24u:
          uint64_t v5 = -1403;
          break;
        case 0x25u:
          uint64_t v5 = -1404;
          break;
        case 0x26u:
          uint64_t v5 = -1301;
          break;
        case 0x27u:
          uint64_t v5 = -1302;
          break;
        case 0x28u:
          uint64_t v5 = -1303;
          break;
        case 0x29u:
          uint64_t v5 = -1304;
          break;
        case 0x2Au:
          uint64_t v5 = -1305;
          break;
        case 0x2Bu:
          uint64_t v5 = -1306;
          break;
        case 0x2Cu:
          uint64_t v5 = -1307;
          break;
        case 0x2Du:
          uint64_t v5 = -1308;
          break;
        case 0x2Eu:
          uint64_t v5 = -1309;
          break;
        case 0x2Fu:
          uint64_t v5 = -1310;
          break;
        case 0x30u:
          uint64_t v5 = -1315;
          break;
        case 0x31u:
          uint64_t v5 = -1316;
          break;
        case 0x32u:
          uint64_t v5 = -1317;
          break;
        case 0x33u:
          uint64_t v5 = -131600;
          break;
        case 0x34u:
          uint64_t v5 = -2103;
          break;
        case 0x35u:
          uint64_t v5 = -2104;
          break;
        case 0x36u:
          uint64_t v5 = -2107;
          break;
        case 0x37u:
          uint64_t v5 = -2110;
          break;
        case 0x38u:
          uint64_t v5 = -2111;
          break;
        case 0x39u:
          uint64_t v5 = -2112;
          break;
        case 0x3Au:
          uint64_t v5 = -2123;
          break;
        case 0x3Bu:
          uint64_t v5 = -2124;
          break;
        case 0x3Cu:
          uint64_t v5 = -2125;
          break;
        case 0x3Du:
          uint64_t v5 = -2126;
          break;
        case 0x3Eu:
          uint64_t v5 = -2127;
          break;
        case 0x3Fu:
          uint64_t v5 = -3101;
          break;
        case 0x40u:
          uint64_t v5 = -3102;
          break;
        case 0x41u:
          uint64_t v5 = -3103;
          break;
        case 0x42u:
          uint64_t v5 = -3104;
          break;
        case 0x43u:
          uint64_t v5 = -3105;
          break;
        case 0x44u:
          uint64_t v5 = -3106;
          break;
        case 0x45u:
          uint64_t v5 = -3107;
          break;
        case 0x46u:
          uint64_t v5 = -3108;
          break;
        case 0x47u:
          uint64_t v5 = -3109;
          break;
        case 0x48u:
          uint64_t v5 = -3110;
          break;
        case 0x49u:
          uint64_t v5 = -3111;
          break;
        case 0x4Au:
          uint64_t v5 = -3112;
          break;
        case 0x4Bu:
          uint64_t v5 = -3113;
          break;
        case 0x4Cu:
          uint64_t v5 = -3151;
          break;
        case 0x4Du:
          uint64_t v5 = -3152;
          break;
        case 0x4Eu:
          uint64_t v5 = -3153;
          break;
        case 0x4Fu:
          uint64_t v5 = -3154;
          break;
        case 0x50u:
          uint64_t v5 = -3155;
          break;
        case 0x51u:
          uint64_t v5 = -3156;
          break;
        case 0x52u:
          uint64_t v5 = -3157;
          break;
        case 0x53u:
          uint64_t v5 = -3158;
          break;
        case 0x54u:
          uint64_t v5 = -3159;
          break;
        case 0x55u:
          uint64_t v5 = -3161;
          break;
        case 0x56u:
          uint64_t v5 = -3162;
          break;
        case 0x57u:
          uint64_t v5 = -3163;
          break;
        case 0x58u:
          uint64_t v5 = -3164;
          break;
        case 0x59u:
          uint64_t v5 = -3165;
          break;
        case 0x5Au:
          uint64_t v5 = -3166;
          break;
        case 0x5Bu:
          uint64_t v5 = -3167;
          break;
        case 0x5Cu:
          uint64_t v5 = -3168;
          break;
        case 0x5Du:
          uint64_t v5 = -3169;
          break;
        case 0x5Eu:
          uint64_t v5 = -3170;
          break;
        case 0x5Fu:
          uint64_t v5 = -3171;
          break;
        case 0x60u:
          uint64_t v5 = -3172;
          break;
        case 0x61u:
          uint64_t v5 = -3173;
          break;
        case 0x62u:
          uint64_t v5 = -3174;
          break;
        case 0x63u:
          uint64_t v5 = -3175;
          break;
        case 0x64u:
          uint64_t v5 = -3176;
          break;
        case 0x65u:
          uint64_t v5 = -3177;
          break;
        case 0x66u:
          uint64_t v5 = -3178;
          break;
        case 0x67u:
          uint64_t v5 = -3179;
          break;
        case 0x68u:
          uint64_t v5 = -3180;
          break;
        case 0x69u:
          uint64_t v5 = -3181;
          break;
        case 0x6Au:
          uint64_t v5 = -3182;
          break;
        case 0x6Bu:
          uint64_t v5 = -3183;
          break;
        case 0x6Cu:
          uint64_t v5 = -3184;
          break;
        case 0x6Du:
          uint64_t v5 = -3185;
          break;
        case 0x6Eu:
          uint64_t v5 = -3186;
          break;
        case 0x6Fu:
          uint64_t v5 = -3187;
          break;
        case 0x70u:
          uint64_t v5 = -3188;
          break;
        case 0x71u:
          uint64_t v5 = -3189;
          break;
        case 0x72u:
          uint64_t v5 = -3300;
          break;
        case 0x73u:
          uint64_t v5 = -5108;
          break;
        case 0x74u:
          uint64_t v5 = -6009;
          break;
        case 0x75u:
          uint64_t v5 = -6010;
          break;
        case 0x76u:
          uint64_t v5 = -6102;
          break;
        case 0x77u:
          uint64_t v5 = -6103;
          break;
        case 0x78u:
          uint64_t v5 = -6104;
          break;
        case 0x79u:
          uint64_t v5 = -6105;
          break;
        case 0x7Au:
          uint64_t v5 = -8001;
          break;
        case 0x7Bu:
          uint64_t v5 = -8301;
          break;
        case 0x7Cu:
          uint64_t v5 = -8304;
          break;
        case 0x7Du:
          uint64_t v5 = -8400;
          break;
        case 0x7Eu:
          uint64_t v5 = -8401;
          break;
        case 0x7Fu:
          uint64_t v5 = -8403;
          break;
        case 0x80u:
          uint64_t v5 = -8404;
          break;
        case 0x81u:
          uint64_t v5 = -8428;
          break;
        case 0x82u:
          uint64_t v5 = -8429;
          break;
        case 0x83u:
          uint64_t v5 = -8433;
          break;
        case 0x84u:
          uint64_t v5 = -8434;
          break;
        case 0x85u:
          uint64_t v5 = -8500;
          break;
        case 0x86u:
          uint64_t v5 = -8501;
          break;
        case 0x87u:
          uint64_t v5 = -8502;
          break;
        case 0x88u:
          uint64_t v5 = -8503;
          break;
        case 0x89u:
          uint64_t v5 = -8504;
          break;
        case 0x8Au:
          uint64_t v5 = -22200;
          break;
        case 0x8Bu:
          uint64_t v5 = -22201;
          break;
        case 0x8Cu:
          uint64_t v5 = -22202;
          break;
        case 0x8Du:
          uint64_t v5 = -22203;
          break;
        case 0x8Eu:
          uint64_t v5 = -22204;
          break;
        case 0x8Fu:
          uint64_t v5 = -22205;
          break;
        case 0x90u:
          uint64_t v5 = -22206;
          break;
        case 0x91u:
          uint64_t v5 = -22207;
          break;
        case 0x92u:
          uint64_t v5 = -22208;
          break;
        case 0x93u:
          uint64_t v5 = -72200;
          break;
        case 0x94u:
          uint64_t v5 = -72201;
          break;
        case 0x95u:
          uint64_t v5 = -72202;
          break;
        case 0x96u:
          uint64_t v5 = -72203;
          break;
        case 0x97u:
          uint64_t v5 = -72204;
          break;
        case 0x98u:
          uint64_t v5 = -72205;
          break;
        case 0x99u:
          uint64_t v5 = -72206;
          break;
        case 0x9Au:
          uint64_t v5 = -72207;
          break;
        case 0x9Bu:
          uint64_t v5 = -72208;
          break;
        case 0x9Cu:
          uint64_t v5 = -72209;
          break;
        case 0x9Du:
          uint64_t v5 = -72210;
          break;
        case 0x9Eu:
          uint64_t v5 = -72211;
          break;
        case 0x9Fu:
          uint64_t v5 = -72780;
          break;
        case 0xA0u:
          uint64_t v5 = -72781;
          break;
        case 0xA1u:
          uint64_t v5 = -72782;
          break;
        default:
          break;
      }
      uint64_t v6 = -1;
      switch(*(unsigned char *)(a2 + 8))
      {
        case 1:
          uint64_t v6 = -2;
          break;
        case 2:
          uint64_t v6 = -3;
          break;
        case 3:
          uint64_t v6 = -4;
          break;
        case 4:
          uint64_t v6 = -5;
          break;
        case 5:
          uint64_t v6 = -6;
          break;
        case 6:
          uint64_t v6 = -7;
          break;
        case 7:
          uint64_t v6 = -8;
          break;
        case 8:
          uint64_t v6 = -9;
          break;
        case 9:
          uint64_t v6 = -10;
          break;
        case 0xA:
          uint64_t v6 = -11;
          break;
        case 0xB:
          uint64_t v6 = -12;
          break;
        case 0xC:
          uint64_t v6 = -13;
          break;
        case 0xD:
          uint64_t v6 = -14;
          break;
        case 0xE:
          uint64_t v6 = -15;
          break;
        case 0xF:
          uint64_t v6 = -16;
          break;
        case 0x10:
          uint64_t v6 = -17;
          break;
        case 0x11:
          uint64_t v6 = -18;
          break;
        case 0x12:
          uint64_t v6 = -19;
          break;
        case 0x13:
          uint64_t v6 = -20;
          break;
        case 0x14:
          uint64_t v6 = -21;
          break;
        case 0x15:
          uint64_t v6 = -22;
          break;
        case 0x16:
          uint64_t v6 = -28;
          break;
        case 0x17:
          uint64_t v6 = -29;
          break;
        case 0x18:
          uint64_t v6 = 200;
          break;
        case 0x19:
          uint64_t v6 = 20000;
          break;
        case 0x1A:
          uint64_t v6 = 20001;
          break;
        case 0x1B:
          uint64_t v6 = 20100;
          break;
        case 0x1C:
          uint64_t v6 = 40000;
          break;
        case 0x1D:
          uint64_t v6 = 40010;
          break;
        case 0x1E:
          uint64_t v6 = 40011;
          break;
        case 0x1F:
          uint64_t v6 = 40012;
          break;
        case 0x20:
          uint64_t v6 = 40013;
          break;
        case 0x21:
          uint64_t v6 = 40014;
          break;
        case 0x22:
          uint64_t v6 = 40015;
          break;
        case 0x23:
          uint64_t v6 = 40020;
          break;
        case 0x24:
          uint64_t v6 = 40021;
          break;
        case 0x25:
          uint64_t v6 = 40022;
          break;
        case 0x26:
          uint64_t v6 = 40023;
          break;
        case 0x27:
          uint64_t v6 = 40024;
          break;
        case 0x28:
          uint64_t v6 = 40025;
          break;
        case 0x29:
          uint64_t v6 = 40026;
          break;
        case 0x2A:
          uint64_t v6 = 40027;
          break;
        case 0x2B:
          uint64_t v6 = 40028;
          break;
        case 0x2C:
          uint64_t v6 = 40029;
          break;
        case 0x2D:
          uint64_t v6 = 40030;
          break;
        case 0x2E:
          uint64_t v6 = 40101;
          break;
        case 0x2F:
          uint64_t v6 = 40102;
          break;
        case 0x30:
          uint64_t v6 = 40200;
          break;
        case 0x31:
          uint64_t v6 = 40201;
          break;
        case 0x32:
          uint64_t v6 = 40205;
          break;
        case 0x33:
          uint64_t v6 = 40401;
          break;
        case 0x34:
          uint64_t v6 = 40402;
          break;
        case 0x35:
          uint64_t v6 = 40403;
          break;
        case 0x36:
          uint64_t v6 = 40404;
          break;
        case 0x37:
          uint64_t v6 = 40500;
          break;
        case 0x38:
          uint64_t v6 = 40600;
          break;
        case 0x39:
          uint64_t v6 = 40601;
          break;
        case 0x3A:
          uint64_t v6 = 50000;
          break;
        case 0x3B:
          uint64_t v6 = 50001;
          break;
        case 0x3C:
          uint64_t v6 = 50002;
          break;
        case 0x3D:
          uint64_t v6 = 99991;
          break;
        case 0x3E:
          uint64_t v6 = 99992;
          break;
        case 0x3F:
          uint64_t v6 = 99993;
          break;
        case 0x40:
          uint64_t v6 = -1101;
          break;
        case 0x41:
          uint64_t v6 = -1102;
          break;
        case 0x42:
          uint64_t v6 = -1103;
          break;
        case 0x43:
          uint64_t v6 = -1104;
          break;
        case 0x44:
          uint64_t v6 = -1110;
          break;
        case 0x45:
          uint64_t v6 = -1111;
          break;
        case 0x46:
          uint64_t v6 = -1112;
          break;
        case 0x47:
          uint64_t v6 = -1113;
          break;
        case 0x48:
          uint64_t v6 = -1114;
          break;
        case 0x49:
          uint64_t v6 = -1115;
          break;
        case 0x4A:
          uint64_t v6 = -1116;
          break;
        case 0x4B:
          uint64_t v6 = -1117;
          break;
        case 0x4C:
          uint64_t v6 = -1118;
          break;
        case 0x4D:
          uint64_t v6 = -1119;
          break;
        case 0x4E:
          uint64_t v6 = -1201;
          break;
        case 0x4F:
          uint64_t v6 = -1202;
          break;
        case 0x50:
          uint64_t v6 = -1203;
          break;
        case 0x51:
          uint64_t v6 = -1204;
          break;
        case 0x52:
          uint64_t v6 = -1402;
          break;
        case 0x53:
          uint64_t v6 = -1403;
          break;
        case 0x54:
          uint64_t v6 = -1404;
          break;
        case 0x55:
          uint64_t v6 = -1301;
          break;
        case 0x56:
          uint64_t v6 = -1302;
          break;
        case 0x57:
          uint64_t v6 = -1303;
          break;
        case 0x58:
          uint64_t v6 = -1304;
          break;
        case 0x59:
          uint64_t v6 = -1305;
          break;
        case 0x5A:
          uint64_t v6 = -1306;
          break;
        case 0x5B:
          uint64_t v6 = -1307;
          break;
        case 0x5C:
          uint64_t v6 = -1308;
          break;
        case 0x5D:
          uint64_t v6 = -1309;
          break;
        case 0x5E:
          uint64_t v6 = -1310;
          break;
        case 0x5F:
          uint64_t v6 = -1315;
          break;
        case 0x60:
          uint64_t v6 = -1316;
          break;
        case 0x61:
          uint64_t v6 = -1317;
          break;
        case 0x62:
          uint64_t v6 = -131600;
          break;
        case 0x63:
          uint64_t v6 = -2103;
          break;
        case 0x64:
          uint64_t v6 = -2104;
          break;
        case 0x65:
          uint64_t v6 = -2107;
          break;
        case 0x66:
          uint64_t v6 = -2110;
          break;
        case 0x67:
          uint64_t v6 = -2111;
          break;
        case 0x68:
          uint64_t v6 = -2112;
          break;
        case 0x69:
          uint64_t v6 = -2123;
          break;
        case 0x6A:
          uint64_t v6 = -2124;
          break;
        case 0x6B:
          uint64_t v6 = -2125;
          break;
        case 0x6C:
          uint64_t v6 = -2126;
          break;
        case 0x6D:
          uint64_t v6 = -2127;
          break;
        case 0x6E:
          uint64_t v6 = -3101;
          break;
        case 0x6F:
          uint64_t v6 = -3102;
          break;
        case 0x70:
          uint64_t v6 = -3103;
          break;
        case 0x71:
          uint64_t v6 = -3104;
          break;
        case 0x72:
          uint64_t v6 = -3105;
          break;
        case 0x73:
          uint64_t v6 = -3106;
          break;
        case 0x74:
          uint64_t v6 = -3107;
          break;
        case 0x75:
          uint64_t v6 = -3108;
          break;
        case 0x76:
          uint64_t v6 = -3109;
          break;
        case 0x77:
          uint64_t v6 = -3110;
          break;
        case 0x78:
          uint64_t v6 = -3111;
          break;
        case 0x79:
          uint64_t v6 = -3112;
          break;
        case 0x7A:
          uint64_t v6 = -3113;
          break;
        case 0x7B:
          uint64_t v6 = -3151;
          break;
        case 0x7C:
          uint64_t v6 = -3152;
          break;
        case 0x7D:
          uint64_t v6 = -3153;
          break;
        case 0x7E:
          uint64_t v6 = -3154;
          break;
        case 0x7F:
          uint64_t v6 = -3155;
          break;
        case 0x80:
          uint64_t v6 = -3156;
          break;
        case 0x81:
          uint64_t v6 = -3157;
          break;
        case 0x82:
          uint64_t v6 = -3158;
          break;
        case 0x83:
          uint64_t v6 = -3159;
          break;
        case 0x84:
          uint64_t v6 = -3161;
          break;
        case 0x85:
          uint64_t v6 = -3162;
          break;
        case 0x86:
          uint64_t v6 = -3163;
          break;
        case 0x87:
          uint64_t v6 = -3164;
          break;
        case 0x88:
          uint64_t v6 = -3165;
          break;
        case 0x89:
          uint64_t v6 = -3166;
          break;
        case 0x8A:
          uint64_t v6 = -3167;
          break;
        case 0x8B:
          uint64_t v6 = -3168;
          break;
        case 0x8C:
          uint64_t v6 = -3169;
          break;
        case 0x8D:
          uint64_t v6 = -3170;
          break;
        case 0x8E:
          uint64_t v6 = -3171;
          break;
        case 0x8F:
          uint64_t v6 = -3172;
          break;
        case 0x90:
          uint64_t v6 = -3173;
          break;
        case 0x91:
          uint64_t v6 = -3174;
          break;
        case 0x92:
          uint64_t v6 = -3175;
          break;
        case 0x93:
          uint64_t v6 = -3176;
          break;
        case 0x94:
          uint64_t v6 = -3177;
          break;
        case 0x95:
          uint64_t v6 = -3178;
          break;
        case 0x96:
          uint64_t v6 = -3179;
          break;
        case 0x97:
          uint64_t v6 = -3180;
          break;
        case 0x98:
          uint64_t v6 = -3181;
          break;
        case 0x99:
          uint64_t v6 = -3182;
          break;
        case 0x9A:
          uint64_t v6 = -3183;
          break;
        case 0x9B:
          uint64_t v6 = -3184;
          break;
        case 0x9C:
          uint64_t v6 = -3185;
          break;
        case 0x9D:
          uint64_t v6 = -3186;
          break;
        case 0x9E:
          uint64_t v6 = -3187;
          break;
        case 0x9F:
          uint64_t v6 = -3188;
          break;
        case 0xA0:
          uint64_t v6 = -3189;
          break;
        case 0xA1:
          uint64_t v6 = -3300;
          break;
        case 0xA2:
          uint64_t v6 = -5108;
          break;
        case 0xA3:
          uint64_t v6 = -6009;
          break;
        case 0xA4:
          uint64_t v6 = -6010;
          break;
        case 0xA5:
          uint64_t v6 = -6102;
          break;
        case 0xA6:
          uint64_t v6 = -6103;
          break;
        case 0xA7:
          uint64_t v6 = -6104;
          break;
        case 0xA8:
          uint64_t v6 = -6105;
          break;
        case 0xA9:
          uint64_t v6 = -8001;
          break;
        case 0xAA:
          uint64_t v6 = -8301;
          break;
        case 0xAB:
          uint64_t v6 = -8304;
          break;
        case 0xAC:
          uint64_t v6 = -8400;
          break;
        case 0xAD:
          uint64_t v6 = -8401;
          break;
        case 0xAE:
          uint64_t v6 = -8403;
          break;
        case 0xAF:
          uint64_t v6 = -8404;
          break;
        case 0xB0:
          uint64_t v6 = -8428;
          break;
        case 0xB1:
          uint64_t v6 = -8429;
          break;
        case 0xB2:
          uint64_t v6 = -8433;
          break;
        case 0xB3:
          uint64_t v6 = -8434;
          break;
        case 0xB4:
          uint64_t v6 = -8500;
          break;
        case 0xB5:
          uint64_t v6 = -8501;
          break;
        case 0xB6:
          uint64_t v6 = -8502;
          break;
        case 0xB7:
          uint64_t v6 = -8503;
          break;
        case 0xB8:
          uint64_t v6 = -8504;
          break;
        case 0xB9:
          uint64_t v6 = -22200;
          break;
        case 0xBA:
          uint64_t v6 = -22201;
          break;
        case 0xBB:
          uint64_t v6 = -22202;
          break;
        case 0xBC:
          uint64_t v6 = -22203;
          break;
        case 0xBD:
          uint64_t v6 = -22204;
          break;
        case 0xBE:
          uint64_t v6 = -22205;
          break;
        case 0xBF:
          uint64_t v6 = -22206;
          break;
        case 0xC0:
          uint64_t v6 = -22207;
          break;
        case 0xC1:
          uint64_t v6 = -22208;
          break;
        case 0xC2:
          uint64_t v6 = -72200;
          break;
        case 0xC3:
          uint64_t v6 = -72201;
          break;
        case 0xC4:
          uint64_t v6 = -72202;
          break;
        case 0xC5:
          uint64_t v6 = -72203;
          break;
        case 0xC6:
          uint64_t v6 = -72204;
          break;
        case 0xC7:
          uint64_t v6 = -72205;
          break;
        case 0xC8:
          uint64_t v6 = -72206;
          break;
        case 0xC9:
          uint64_t v6 = -72207;
          break;
        case 0xCA:
          uint64_t v6 = -72208;
          break;
        case 0xCB:
          uint64_t v6 = -72209;
          break;
        case 0xCC:
          uint64_t v6 = -72210;
          break;
        case 0xCD:
          uint64_t v6 = -72211;
          break;
        case 0xCE:
          uint64_t v6 = -72780;
          break;
        case 0xCF:
          uint64_t v6 = -72781;
          break;
        case 0xD0:
          uint64_t v6 = -72782;
          break;
        default:
          break;
      }
      if (v5 != v6) {
        return 0;
      }
LABEL_440:
      if (v2)
      {
        if (v3)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v7 = sub_214CDDF04(v2, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v7) {
            return 1;
          }
        }
      }
      else if (!v3)
      {
        return 1;
      }
      return 0;
  }
}

uint64_t sub_214CEB6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v2 = *(void *)(a2 + 32);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 40);
  uint64_t v67 = *(void *)(a2 + 56);
  uint64_t v68 = *(void *)(a2 + 48);
  unsigned __int8 v66 = *(unsigned char *)(a2 + 64);
  uint64_t v64 = *(void *)(a2 + 80);
  uint64_t v65 = *(void *)(a2 + 72);
  unsigned __int8 v63 = *(unsigned char *)(a2 + 88);
  uint64_t v59 = *(void *)(a2 + 104);
  uint64_t v60 = *(void *)(a2 + 96);
  unsigned __int8 v58 = *(unsigned char *)(a2 + 112);
  uint64_t v53 = *(void *)(a2 + 128);
  uint64_t v54 = *(void *)(a2 + 120);
  unsigned __int8 v52 = *(unsigned char *)(a2 + 136);
  uint64_t v47 = *(void *)(a2 + 152);
  uint64_t v48 = *(void *)(a2 + 144);
  unsigned __int8 v46 = *(unsigned char *)(a2 + 160);
  uint64_t v41 = *(void *)(a2 + 176);
  uint64_t v42 = *(void *)(a2 + 168);
  unsigned __int8 v40 = *(unsigned char *)(a2 + 184);
  uint64_t v35 = *(void *)(a2 + 200);
  uint64_t v36 = *(void *)(a2 + 192);
  unsigned __int8 v34 = *(unsigned char *)(a2 + 208);
  uint64_t v29 = *(void *)(a2 + 224);
  uint64_t v30 = *(void *)(a2 + 216);
  unsigned __int8 v28 = *(unsigned char *)(a2 + 232);
  uint64_t v23 = *(void *)(a2 + 248);
  uint64_t v24 = *(void *)(a2 + 240);
  unsigned __int8 v22 = *(unsigned char *)(a2 + 256);
  uint64_t v17 = *(void *)(a2 + 272);
  uint64_t v18 = *(void *)(a2 + 264);
  unsigned __int8 v16 = *(unsigned char *)(a2 + 280);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  char v10 = *(unsigned char *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v61 = *(void *)(a1 + 80);
  char v62 = *(unsigned char *)(a1 + 88);
  uint64_t v55 = *(void *)(a1 + 96);
  uint64_t v56 = *(void *)(a1 + 104);
  char v57 = *(unsigned char *)(a1 + 112);
  uint64_t v49 = *(void *)(a1 + 120);
  uint64_t v50 = *(void *)(a1 + 128);
  char v51 = *(unsigned char *)(a1 + 136);
  uint64_t v43 = *(void *)(a1 + 144);
  uint64_t v44 = *(void *)(a1 + 152);
  char v45 = *(unsigned char *)(a1 + 160);
  uint64_t v37 = *(void *)(a1 + 168);
  uint64_t v38 = *(void *)(a1 + 176);
  char v39 = *(unsigned char *)(a1 + 184);
  uint64_t v31 = *(void *)(a1 + 192);
  uint64_t v32 = *(void *)(a1 + 200);
  char v33 = *(unsigned char *)(a1 + 208);
  uint64_t v25 = *(void *)(a1 + 216);
  uint64_t v26 = *(void *)(a1 + 224);
  char v27 = *(unsigned char *)(a1 + 232);
  uint64_t v19 = *(void *)(a1 + 240);
  uint64_t v20 = *(void *)(a1 + 248);
  char v21 = *(unsigned char *)(a1 + 256);
  uint64_t v13 = *(void *)(a1 + 264);
  uint64_t v14 = *(void *)(a1 + 272);
  char v15 = *(unsigned char *)(a1 + 280);
  if ((sub_214C7E0C8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1) == 0|| (sub_214C7E0C8(v5, v6, v7, v3, v2, v4) & 1) == 0|| (sub_214C7E0C8(v9, v8, v10, v68, v67, v66) & 1) == 0|| (sub_214C7E0C8(v11, v61, v62, v65, v64, v63) & 1) == 0|| (sub_214C7E0C8(v55, v56, v57, v60, v59, v58) & 1) == 0|| (sub_214C7E0C8(v49, v50, v51, v54, v53, v52) & 1) == 0|| (sub_214C7E0C8(v43, v44, v45, v48, v47, v46) & 1) == 0|| (sub_214C7E0C8(v37, v38, v39, v42, v41, v40) & 1) == 0|| (sub_214C7E0C8(v31, v32, v33, v36, v35, v34) & 1) == 0|| (sub_214C7E0C8(v25, v26, v27, v30, v29, v28) & 1) == 0|| (sub_214C7E0C8(v19, v20, v21, v24, v23, v22) & 1) == 0)
  {
    return 0;
  }
  return sub_214C7E0C8(v13, v14, v15, v18, v17, v16);
}

uint64_t sub_214CEB9E4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 9);
  switch(*(unsigned char *)(a1 + 9))
  {
    case 0xD1:
      if (v2 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 0xD2:
      if (v2 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 0xD3:
      if (v2 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 0xD4:
      if (v2 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 0xD5:
      if (v2 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 0xD6:
      if (v2 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 0xD7:
      if (v2 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 0xD8:
      if (v2 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 0xD9:
      if (v2 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v2 + 47) < 9u) {
        return 0;
      }
      uint64_t v3 = -1;
      switch(*(unsigned __int8 *)(a1 + 9))
      {
        case 0xD2u:
          uint64_t v3 = -2;
          break;
        case 0xD3u:
          uint64_t v3 = -3;
          break;
        case 0xD4u:
          uint64_t v3 = -4;
          break;
        case 0xD5u:
          uint64_t v3 = -5;
          break;
        case 0xD6u:
          uint64_t v3 = -6;
          break;
        case 0xD7u:
          uint64_t v3 = -7;
          break;
        case 0xD8u:
          uint64_t v3 = -8;
          break;
        case 0xD9u:
          uint64_t v3 = -9;
          break;
        case 0xDAu:
          uint64_t v3 = -10;
          break;
        case 0xDBu:
          uint64_t v3 = -11;
          break;
        case 0xDCu:
          uint64_t v3 = -12;
          break;
        case 0xDDu:
          uint64_t v3 = -13;
          break;
        case 0xDEu:
          uint64_t v3 = -14;
          break;
        case 0xDFu:
          uint64_t v3 = -15;
          break;
        case 0xE0u:
          uint64_t v3 = -16;
          break;
        case 0xE1u:
          uint64_t v3 = -17;
          break;
        case 0xE2u:
          uint64_t v3 = -18;
          break;
        case 0xE3u:
          uint64_t v3 = -19;
          break;
        case 0xE4u:
          uint64_t v3 = -20;
          break;
        case 0xE5u:
          uint64_t v3 = -21;
          break;
        case 0xE6u:
          uint64_t v3 = -22;
          break;
        case 0xE7u:
          uint64_t v3 = -28;
          break;
        case 0xE8u:
          uint64_t v3 = -29;
          break;
        case 0xE9u:
          uint64_t v3 = 200;
          break;
        case 0xEAu:
          uint64_t v3 = 20000;
          break;
        case 0xEBu:
          uint64_t v3 = 20001;
          break;
        case 0xECu:
          uint64_t v3 = 20100;
          break;
        case 0xEDu:
          uint64_t v3 = 40000;
          break;
        case 0xEEu:
          uint64_t v3 = 40010;
          break;
        case 0xEFu:
          uint64_t v3 = 40011;
          break;
        case 0xF0u:
          uint64_t v3 = 40012;
          break;
        case 0xF1u:
          uint64_t v3 = 40013;
          break;
        case 0xF2u:
          uint64_t v3 = 40014;
          break;
        case 0xF3u:
          uint64_t v3 = 40015;
          break;
        case 0xF4u:
          uint64_t v3 = 40020;
          break;
        case 0xF5u:
          uint64_t v3 = 40021;
          break;
        case 0xF6u:
          uint64_t v3 = 40022;
          break;
        case 0xF7u:
          uint64_t v3 = 40023;
          break;
        case 0xF8u:
          uint64_t v3 = 40024;
          break;
        case 0xF9u:
          uint64_t v3 = 40025;
          break;
        case 0xFAu:
          uint64_t v3 = 40026;
          break;
        case 0xFBu:
          uint64_t v3 = 40027;
          break;
        case 0xFCu:
          uint64_t v3 = 40028;
          break;
        case 0xFDu:
          uint64_t v3 = 40029;
          break;
        case 0xFEu:
          uint64_t v3 = 40030;
          break;
        case 0xFFu:
          uint64_t v3 = 40101;
          break;
        case 0u:
          uint64_t v3 = 40102;
          break;
        case 1u:
          uint64_t v3 = 40200;
          break;
        case 2u:
          uint64_t v3 = 40201;
          break;
        case 3u:
          uint64_t v3 = 40205;
          break;
        case 4u:
          uint64_t v3 = 40401;
          break;
        case 5u:
          uint64_t v3 = 40402;
          break;
        case 6u:
          uint64_t v3 = 40403;
          break;
        case 7u:
          uint64_t v3 = 40404;
          break;
        case 8u:
          uint64_t v3 = 40500;
          break;
        case 9u:
          uint64_t v3 = 40600;
          break;
        case 0xAu:
          uint64_t v3 = 40601;
          break;
        case 0xBu:
          uint64_t v3 = 50000;
          break;
        case 0xCu:
          uint64_t v3 = 50001;
          break;
        case 0xDu:
          uint64_t v3 = 50002;
          break;
        case 0xEu:
          uint64_t v3 = 99991;
          break;
        case 0xFu:
          uint64_t v3 = 99992;
          break;
        case 0x10u:
          uint64_t v3 = 99993;
          break;
        case 0x11u:
          uint64_t v3 = -1101;
          break;
        case 0x12u:
          uint64_t v3 = -1102;
          break;
        case 0x13u:
          uint64_t v3 = -1103;
          break;
        case 0x14u:
          uint64_t v3 = -1104;
          break;
        case 0x15u:
          uint64_t v3 = -1110;
          break;
        case 0x16u:
          uint64_t v3 = -1111;
          break;
        case 0x17u:
          uint64_t v3 = -1112;
          break;
        case 0x18u:
          uint64_t v3 = -1113;
          break;
        case 0x19u:
          uint64_t v3 = -1114;
          break;
        case 0x1Au:
          uint64_t v3 = -1115;
          break;
        case 0x1Bu:
          uint64_t v3 = -1116;
          break;
        case 0x1Cu:
          uint64_t v3 = -1117;
          break;
        case 0x1Du:
          uint64_t v3 = -1118;
          break;
        case 0x1Eu:
          uint64_t v3 = -1119;
          break;
        case 0x1Fu:
          uint64_t v3 = -1201;
          break;
        case 0x20u:
          uint64_t v3 = -1202;
          break;
        case 0x21u:
          uint64_t v3 = -1203;
          break;
        case 0x22u:
          uint64_t v3 = -1204;
          break;
        case 0x23u:
          uint64_t v3 = -1402;
          break;
        case 0x24u:
          uint64_t v3 = -1403;
          break;
        case 0x25u:
          uint64_t v3 = -1404;
          break;
        case 0x26u:
          uint64_t v3 = -1301;
          break;
        case 0x27u:
          uint64_t v3 = -1302;
          break;
        case 0x28u:
          uint64_t v3 = -1303;
          break;
        case 0x29u:
          uint64_t v3 = -1304;
          break;
        case 0x2Au:
          uint64_t v3 = -1305;
          break;
        case 0x2Bu:
          uint64_t v3 = -1306;
          break;
        case 0x2Cu:
          uint64_t v3 = -1307;
          break;
        case 0x2Du:
          uint64_t v3 = -1308;
          break;
        case 0x2Eu:
          uint64_t v3 = -1309;
          break;
        case 0x2Fu:
          uint64_t v3 = -1310;
          break;
        case 0x30u:
          uint64_t v3 = -1315;
          break;
        case 0x31u:
          uint64_t v3 = -1316;
          break;
        case 0x32u:
          uint64_t v3 = -1317;
          break;
        case 0x33u:
          uint64_t v3 = -131600;
          break;
        case 0x34u:
          uint64_t v3 = -2103;
          break;
        case 0x35u:
          uint64_t v3 = -2104;
          break;
        case 0x36u:
          uint64_t v3 = -2107;
          break;
        case 0x37u:
          uint64_t v3 = -2110;
          break;
        case 0x38u:
          uint64_t v3 = -2111;
          break;
        case 0x39u:
          uint64_t v3 = -2112;
          break;
        case 0x3Au:
          uint64_t v3 = -2123;
          break;
        case 0x3Bu:
          uint64_t v3 = -2124;
          break;
        case 0x3Cu:
          uint64_t v3 = -2125;
          break;
        case 0x3Du:
          uint64_t v3 = -2126;
          break;
        case 0x3Eu:
          uint64_t v3 = -2127;
          break;
        case 0x3Fu:
          uint64_t v3 = -3101;
          break;
        case 0x40u:
          uint64_t v3 = -3102;
          break;
        case 0x41u:
          uint64_t v3 = -3103;
          break;
        case 0x42u:
          uint64_t v3 = -3104;
          break;
        case 0x43u:
          uint64_t v3 = -3105;
          break;
        case 0x44u:
          uint64_t v3 = -3106;
          break;
        case 0x45u:
          uint64_t v3 = -3107;
          break;
        case 0x46u:
          uint64_t v3 = -3108;
          break;
        case 0x47u:
          uint64_t v3 = -3109;
          break;
        case 0x48u:
          uint64_t v3 = -3110;
          break;
        case 0x49u:
          uint64_t v3 = -3111;
          break;
        case 0x4Au:
          uint64_t v3 = -3112;
          break;
        case 0x4Bu:
          uint64_t v3 = -3113;
          break;
        case 0x4Cu:
          uint64_t v3 = -3151;
          break;
        case 0x4Du:
          uint64_t v3 = -3152;
          break;
        case 0x4Eu:
          uint64_t v3 = -3153;
          break;
        case 0x4Fu:
          uint64_t v3 = -3154;
          break;
        case 0x50u:
          uint64_t v3 = -3155;
          break;
        case 0x51u:
          uint64_t v3 = -3156;
          break;
        case 0x52u:
          uint64_t v3 = -3157;
          break;
        case 0x53u:
          uint64_t v3 = -3158;
          break;
        case 0x54u:
          uint64_t v3 = -3159;
          break;
        case 0x55u:
          uint64_t v3 = -3161;
          break;
        case 0x56u:
          uint64_t v3 = -3162;
          break;
        case 0x57u:
          uint64_t v3 = -3163;
          break;
        case 0x58u:
          uint64_t v3 = -3164;
          break;
        case 0x59u:
          uint64_t v3 = -3165;
          break;
        case 0x5Au:
          uint64_t v3 = -3166;
          break;
        case 0x5Bu:
          uint64_t v3 = -3167;
          break;
        case 0x5Cu:
          uint64_t v3 = -3168;
          break;
        case 0x5Du:
          uint64_t v3 = -3169;
          break;
        case 0x5Eu:
          uint64_t v3 = -3170;
          break;
        case 0x5Fu:
          uint64_t v3 = -3171;
          break;
        case 0x60u:
          uint64_t v3 = -3172;
          break;
        case 0x61u:
          uint64_t v3 = -3173;
          break;
        case 0x62u:
          uint64_t v3 = -3174;
          break;
        case 0x63u:
          uint64_t v3 = -3175;
          break;
        case 0x64u:
          uint64_t v3 = -3176;
          break;
        case 0x65u:
          uint64_t v3 = -3177;
          break;
        case 0x66u:
          uint64_t v3 = -3178;
          break;
        case 0x67u:
          uint64_t v3 = -3179;
          break;
        case 0x68u:
          uint64_t v3 = -3180;
          break;
        case 0x69u:
          uint64_t v3 = -3181;
          break;
        case 0x6Au:
          uint64_t v3 = -3182;
          break;
        case 0x6Bu:
          uint64_t v3 = -3183;
          break;
        case 0x6Cu:
          uint64_t v3 = -3184;
          break;
        case 0x6Du:
          uint64_t v3 = -3185;
          break;
        case 0x6Eu:
          uint64_t v3 = -3186;
          break;
        case 0x6Fu:
          uint64_t v3 = -3187;
          break;
        case 0x70u:
          uint64_t v3 = -3188;
          break;
        case 0x71u:
          uint64_t v3 = -3189;
          break;
        case 0x72u:
          uint64_t v3 = -3300;
          break;
        case 0x73u:
          uint64_t v3 = -5108;
          break;
        case 0x74u:
          uint64_t v3 = -6009;
          break;
        case 0x75u:
          uint64_t v3 = -6010;
          break;
        case 0x76u:
          uint64_t v3 = -6102;
          break;
        case 0x77u:
          uint64_t v3 = -6103;
          break;
        case 0x78u:
          uint64_t v3 = -6104;
          break;
        case 0x79u:
          uint64_t v3 = -6105;
          break;
        case 0x7Au:
          uint64_t v3 = -8001;
          break;
        case 0x7Bu:
          uint64_t v3 = -8301;
          break;
        case 0x7Cu:
          uint64_t v3 = -8304;
          break;
        case 0x7Du:
          uint64_t v3 = -8400;
          break;
        case 0x7Eu:
          uint64_t v3 = -8401;
          break;
        case 0x7Fu:
          uint64_t v3 = -8403;
          break;
        case 0x80u:
          uint64_t v3 = -8404;
          break;
        case 0x81u:
          uint64_t v3 = -8428;
          break;
        case 0x82u:
          uint64_t v3 = -8429;
          break;
        case 0x83u:
          uint64_t v3 = -8433;
          break;
        case 0x84u:
          uint64_t v3 = -8434;
          break;
        case 0x85u:
          uint64_t v3 = -8500;
          break;
        case 0x86u:
          uint64_t v3 = -8501;
          break;
        case 0x87u:
          uint64_t v3 = -8502;
          break;
        case 0x88u:
          uint64_t v3 = -8503;
          break;
        case 0x89u:
          uint64_t v3 = -8504;
          break;
        case 0x8Au:
          uint64_t v3 = -22200;
          break;
        case 0x8Bu:
          uint64_t v3 = -22201;
          break;
        case 0x8Cu:
          uint64_t v3 = -22202;
          break;
        case 0x8Du:
          uint64_t v3 = -22203;
          break;
        case 0x8Eu:
          uint64_t v3 = -22204;
          break;
        case 0x8Fu:
          uint64_t v3 = -22205;
          break;
        case 0x90u:
          uint64_t v3 = -22206;
          break;
        case 0x91u:
          uint64_t v3 = -22207;
          break;
        case 0x92u:
          uint64_t v3 = -22208;
          break;
        case 0x93u:
          uint64_t v3 = -72200;
          break;
        case 0x94u:
          uint64_t v3 = -72201;
          break;
        case 0x95u:
          uint64_t v3 = -72202;
          break;
        case 0x96u:
          uint64_t v3 = -72203;
          break;
        case 0x97u:
          uint64_t v3 = -72204;
          break;
        case 0x98u:
          uint64_t v3 = -72205;
          break;
        case 0x99u:
          uint64_t v3 = -72206;
          break;
        case 0x9Au:
          uint64_t v3 = -72207;
          break;
        case 0x9Bu:
          uint64_t v3 = -72208;
          break;
        case 0x9Cu:
          uint64_t v3 = -72209;
          break;
        case 0x9Du:
          uint64_t v3 = -72210;
          break;
        case 0x9Eu:
          uint64_t v3 = -72211;
          break;
        case 0x9Fu:
          uint64_t v3 = -72780;
          break;
        case 0xA0u:
          uint64_t v3 = -72781;
          break;
        case 0xA1u:
          uint64_t v3 = -72782;
          break;
        default:
          break;
      }
      uint64_t v4 = -1;
      switch(*(unsigned char *)(a2 + 9))
      {
        case 1:
          uint64_t v4 = -2;
          break;
        case 2:
          uint64_t v4 = -3;
          break;
        case 3:
          uint64_t v4 = -4;
          break;
        case 4:
          uint64_t v4 = -5;
          break;
        case 5:
          uint64_t v4 = -6;
          break;
        case 6:
          uint64_t v4 = -7;
          break;
        case 7:
          uint64_t v4 = -8;
          break;
        case 8:
          uint64_t v4 = -9;
          break;
        case 9:
          uint64_t v4 = -10;
          break;
        case 0xA:
          uint64_t v4 = -11;
          break;
        case 0xB:
          uint64_t v4 = -12;
          break;
        case 0xC:
          uint64_t v4 = -13;
          break;
        case 0xD:
          uint64_t v4 = -14;
          break;
        case 0xE:
          uint64_t v4 = -15;
          break;
        case 0xF:
          uint64_t v4 = -16;
          break;
        case 0x10:
          uint64_t v4 = -17;
          break;
        case 0x11:
          uint64_t v4 = -18;
          break;
        case 0x12:
          uint64_t v4 = -19;
          break;
        case 0x13:
          uint64_t v4 = -20;
          break;
        case 0x14:
          uint64_t v4 = -21;
          break;
        case 0x15:
          uint64_t v4 = -22;
          break;
        case 0x16:
          uint64_t v4 = -28;
          break;
        case 0x17:
          uint64_t v4 = -29;
          break;
        case 0x18:
          uint64_t v4 = 200;
          break;
        case 0x19:
          uint64_t v4 = 20000;
          break;
        case 0x1A:
          uint64_t v4 = 20001;
          break;
        case 0x1B:
          uint64_t v4 = 20100;
          break;
        case 0x1C:
          uint64_t v4 = 40000;
          break;
        case 0x1D:
          uint64_t v4 = 40010;
          break;
        case 0x1E:
          uint64_t v4 = 40011;
          break;
        case 0x1F:
          uint64_t v4 = 40012;
          break;
        case 0x20:
          uint64_t v4 = 40013;
          break;
        case 0x21:
          uint64_t v4 = 40014;
          break;
        case 0x22:
          uint64_t v4 = 40015;
          break;
        case 0x23:
          uint64_t v4 = 40020;
          break;
        case 0x24:
          uint64_t v4 = 40021;
          break;
        case 0x25:
          uint64_t v4 = 40022;
          break;
        case 0x26:
          uint64_t v4 = 40023;
          break;
        case 0x27:
          uint64_t v4 = 40024;
          break;
        case 0x28:
          uint64_t v4 = 40025;
          break;
        case 0x29:
          uint64_t v4 = 40026;
          break;
        case 0x2A:
          uint64_t v4 = 40027;
          break;
        case 0x2B:
          uint64_t v4 = 40028;
          break;
        case 0x2C:
          uint64_t v4 = 40029;
          break;
        case 0x2D:
          uint64_t v4 = 40030;
          break;
        case 0x2E:
          uint64_t v4 = 40101;
          break;
        case 0x2F:
          uint64_t v4 = 40102;
          break;
        case 0x30:
          uint64_t v4 = 40200;
          break;
        case 0x31:
          uint64_t v4 = 40201;
          break;
        case 0x32:
          uint64_t v4 = 40205;
          break;
        case 0x33:
          uint64_t v4 = 40401;
          break;
        case 0x34:
          uint64_t v4 = 40402;
          break;
        case 0x35:
          uint64_t v4 = 40403;
          break;
        case 0x36:
          uint64_t v4 = 40404;
          break;
        case 0x37:
          uint64_t v4 = 40500;
          break;
        case 0x38:
          uint64_t v4 = 40600;
          break;
        case 0x39:
          uint64_t v4 = 40601;
          break;
        case 0x3A:
          uint64_t v4 = 50000;
          break;
        case 0x3B:
          uint64_t v4 = 50001;
          break;
        case 0x3C:
          uint64_t v4 = 50002;
          break;
        case 0x3D:
          uint64_t v4 = 99991;
          break;
        case 0x3E:
          uint64_t v4 = 99992;
          break;
        case 0x3F:
          uint64_t v4 = 99993;
          break;
        case 0x40:
          uint64_t v4 = -1101;
          break;
        case 0x41:
          uint64_t v4 = -1102;
          break;
        case 0x42:
          uint64_t v4 = -1103;
          break;
        case 0x43:
          uint64_t v4 = -1104;
          break;
        case 0x44:
          uint64_t v4 = -1110;
          break;
        case 0x45:
          uint64_t v4 = -1111;
          break;
        case 0x46:
          uint64_t v4 = -1112;
          break;
        case 0x47:
          uint64_t v4 = -1113;
          break;
        case 0x48:
          uint64_t v4 = -1114;
          break;
        case 0x49:
          uint64_t v4 = -1115;
          break;
        case 0x4A:
          uint64_t v4 = -1116;
          break;
        case 0x4B:
          uint64_t v4 = -1117;
          break;
        case 0x4C:
          uint64_t v4 = -1118;
          break;
        case 0x4D:
          uint64_t v4 = -1119;
          break;
        case 0x4E:
          uint64_t v4 = -1201;
          break;
        case 0x4F:
          uint64_t v4 = -1202;
          break;
        case 0x50:
          uint64_t v4 = -1203;
          break;
        case 0x51:
          uint64_t v4 = -1204;
          break;
        case 0x52:
          uint64_t v4 = -1402;
          break;
        case 0x53:
          uint64_t v4 = -1403;
          break;
        case 0x54:
          uint64_t v4 = -1404;
          break;
        case 0x55:
          uint64_t v4 = -1301;
          break;
        case 0x56:
          uint64_t v4 = -1302;
          break;
        case 0x57:
          uint64_t v4 = -1303;
          break;
        case 0x58:
          uint64_t v4 = -1304;
          break;
        case 0x59:
          uint64_t v4 = -1305;
          break;
        case 0x5A:
          uint64_t v4 = -1306;
          break;
        case 0x5B:
          uint64_t v4 = -1307;
          break;
        case 0x5C:
          uint64_t v4 = -1308;
          break;
        case 0x5D:
          uint64_t v4 = -1309;
          break;
        case 0x5E:
          uint64_t v4 = -1310;
          break;
        case 0x5F:
          uint64_t v4 = -1315;
          break;
        case 0x60:
          uint64_t v4 = -1316;
          break;
        case 0x61:
          uint64_t v4 = -1317;
          break;
        case 0x62:
          uint64_t v4 = -131600;
          break;
        case 0x63:
          uint64_t v4 = -2103;
          break;
        case 0x64:
          uint64_t v4 = -2104;
          break;
        case 0x65:
          uint64_t v4 = -2107;
          break;
        case 0x66:
          uint64_t v4 = -2110;
          break;
        case 0x67:
          uint64_t v4 = -2111;
          break;
        case 0x68:
          uint64_t v4 = -2112;
          break;
        case 0x69:
          uint64_t v4 = -2123;
          break;
        case 0x6A:
          uint64_t v4 = -2124;
          break;
        case 0x6B:
          uint64_t v4 = -2125;
          break;
        case 0x6C:
          uint64_t v4 = -2126;
          break;
        case 0x6D:
          uint64_t v4 = -2127;
          break;
        case 0x6E:
          uint64_t v4 = -3101;
          break;
        case 0x6F:
          uint64_t v4 = -3102;
          break;
        case 0x70:
          uint64_t v4 = -3103;
          break;
        case 0x71:
          uint64_t v4 = -3104;
          break;
        case 0x72:
          uint64_t v4 = -3105;
          break;
        case 0x73:
          uint64_t v4 = -3106;
          break;
        case 0x74:
          uint64_t v4 = -3107;
          break;
        case 0x75:
          uint64_t v4 = -3108;
          break;
        case 0x76:
          uint64_t v4 = -3109;
          break;
        case 0x77:
          uint64_t v4 = -3110;
          break;
        case 0x78:
          uint64_t v4 = -3111;
          break;
        case 0x79:
          uint64_t v4 = -3112;
          break;
        case 0x7A:
          uint64_t v4 = -3113;
          break;
        case 0x7B:
          uint64_t v4 = -3151;
          break;
        case 0x7C:
          uint64_t v4 = -3152;
          break;
        case 0x7D:
          uint64_t v4 = -3153;
          break;
        case 0x7E:
          uint64_t v4 = -3154;
          break;
        case 0x7F:
          uint64_t v4 = -3155;
          break;
        case 0x80:
          uint64_t v4 = -3156;
          break;
        case 0x81:
          uint64_t v4 = -3157;
          break;
        case 0x82:
          uint64_t v4 = -3158;
          break;
        case 0x83:
          uint64_t v4 = -3159;
          break;
        case 0x84:
          uint64_t v4 = -3161;
          break;
        case 0x85:
          uint64_t v4 = -3162;
          break;
        case 0x86:
          uint64_t v4 = -3163;
          break;
        case 0x87:
          uint64_t v4 = -3164;
          break;
        case 0x88:
          uint64_t v4 = -3165;
          break;
        case 0x89:
          uint64_t v4 = -3166;
          break;
        case 0x8A:
          uint64_t v4 = -3167;
          break;
        case 0x8B:
          uint64_t v4 = -3168;
          break;
        case 0x8C:
          uint64_t v4 = -3169;
          break;
        case 0x8D:
          uint64_t v4 = -3170;
          break;
        case 0x8E:
          uint64_t v4 = -3171;
          break;
        case 0x8F:
          uint64_t v4 = -3172;
          break;
        case 0x90:
          uint64_t v4 = -3173;
          break;
        case 0x91:
          uint64_t v4 = -3174;
          break;
        case 0x92:
          uint64_t v4 = -3175;
          break;
        case 0x93:
          uint64_t v4 = -3176;
          break;
        case 0x94:
          uint64_t v4 = -3177;
          break;
        case 0x95:
          uint64_t v4 = -3178;
          break;
        case 0x96:
          uint64_t v4 = -3179;
          break;
        case 0x97:
          uint64_t v4 = -3180;
          break;
        case 0x98:
          uint64_t v4 = -3181;
          break;
        case 0x99:
          uint64_t v4 = -3182;
          break;
        case 0x9A:
          uint64_t v4 = -3183;
          break;
        case 0x9B:
          uint64_t v4 = -3184;
          break;
        case 0x9C:
          uint64_t v4 = -3185;
          break;
        case 0x9D:
          uint64_t v4 = -3186;
          break;
        case 0x9E:
          uint64_t v4 = -3187;
          break;
        case 0x9F:
          uint64_t v4 = -3188;
          break;
        case 0xA0:
          uint64_t v4 = -3189;
          break;
        case 0xA1:
          uint64_t v4 = -3300;
          break;
        case 0xA2:
          uint64_t v4 = -5108;
          break;
        case 0xA3:
          uint64_t v4 = -6009;
          break;
        case 0xA4:
          uint64_t v4 = -6010;
          break;
        case 0xA5:
          uint64_t v4 = -6102;
          break;
        case 0xA6:
          uint64_t v4 = -6103;
          break;
        case 0xA7:
          uint64_t v4 = -6104;
          break;
        case 0xA8:
          uint64_t v4 = -6105;
          break;
        case 0xA9:
          uint64_t v4 = -8001;
          break;
        case 0xAA:
          uint64_t v4 = -8301;
          break;
        case 0xAB:
          uint64_t v4 = -8304;
          break;
        case 0xAC:
          uint64_t v4 = -8400;
          break;
        case 0xAD:
          uint64_t v4 = -8401;
          break;
        case 0xAE:
          uint64_t v4 = -8403;
          break;
        case 0xAF:
          uint64_t v4 = -8404;
          break;
        case 0xB0:
          uint64_t v4 = -8428;
          break;
        case 0xB1:
          uint64_t v4 = -8429;
          break;
        case 0xB2:
          uint64_t v4 = -8433;
          break;
        case 0xB3:
          uint64_t v4 = -8434;
          break;
        case 0xB4:
          uint64_t v4 = -8500;
          break;
        case 0xB5:
          uint64_t v4 = -8501;
          break;
        case 0xB6:
          uint64_t v4 = -8502;
          break;
        case 0xB7:
          uint64_t v4 = -8503;
          break;
        case 0xB8:
          uint64_t v4 = -8504;
          break;
        case 0xB9:
          uint64_t v4 = -22200;
          break;
        case 0xBA:
          uint64_t v4 = -22201;
          break;
        case 0xBB:
          uint64_t v4 = -22202;
          break;
        case 0xBC:
          uint64_t v4 = -22203;
          break;
        case 0xBD:
          uint64_t v4 = -22204;
          break;
        case 0xBE:
          uint64_t v4 = -22205;
          break;
        case 0xBF:
          uint64_t v4 = -22206;
          break;
        case 0xC0:
          uint64_t v4 = -22207;
          break;
        case 0xC1:
          uint64_t v4 = -22208;
          break;
        case 0xC2:
          uint64_t v4 = -72200;
          break;
        case 0xC3:
          uint64_t v4 = -72201;
          break;
        case 0xC4:
          uint64_t v4 = -72202;
          break;
        case 0xC5:
          uint64_t v4 = -72203;
          break;
        case 0xC6:
          uint64_t v4 = -72204;
          break;
        case 0xC7:
          uint64_t v4 = -72205;
          break;
        case 0xC8:
          uint64_t v4 = -72206;
          break;
        case 0xC9:
          uint64_t v4 = -72207;
          break;
        case 0xCA:
          uint64_t v4 = -72208;
          break;
        case 0xCB:
          uint64_t v4 = -72209;
          break;
        case 0xCC:
          uint64_t v4 = -72210;
          break;
        case 0xCD:
          uint64_t v4 = -72211;
          break;
        case 0xCE:
          uint64_t v4 = -72780;
          break;
        case 0xCF:
          uint64_t v4 = -72781;
          break;
        case 0xD0:
          uint64_t v4 = -72782;
          break;
        default:
          break;
      }
      if (v3 != v4) {
        return 0;
      }
LABEL_440:
      if (*(unsigned char *)(a1 + 8))
      {
        if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*(void *)a1 == *(void *)a2) {
          char v6 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v6 = 1;
        }
        if (v6) {
          return 0;
        }
      }
      return 1;
  }
}

uint64_t _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  long long v195 = *(_OWORD *)(a1 + 1);
  uint64_t v5 = (long long *)(a2 + 280);
  char v192 = *((unsigned char *)a1 + 24);
  long long v194 = *((_OWORD *)a1 + 2);
  char v191 = *((unsigned char *)a1 + 48);
  long long v193 = *(_OWORD *)(a1 + 7);
  char v190 = *((unsigned char *)a1 + 72);
  uint64_t v186 = a1[10];
  uint64_t v185 = a1[11];
  char v184 = *((unsigned char *)a1 + 96);
  uint64_t v183 = a1[13];
  uint64_t v182 = a1[14];
  char v181 = *((unsigned char *)a1 + 120);
  uint64_t v178 = a1[16];
  uint64_t v177 = a1[17];
  char v176 = *((unsigned char *)a1 + 144);
  uint64_t v172 = a1[19];
  __int16 v171 = *((unsigned __int8 *)a1 + 160);
  __int16 v170 = *((unsigned __int8 *)a1 + 161);
  uint64_t v166 = a1[21];
  uint64_t v165 = a1[22];
  char v164 = *((unsigned char *)a1 + 184);
  uint64_t v158 = a1[24];
  char v157 = *((unsigned char *)a1 + 200);
  long long v159 = *(_OWORD *)(a1 + 29);
  long long v160 = *((_OWORD *)a1 + 13);
  long long v145 = *(_OWORD *)(a1 + 35);
  long long v146 = *((_OWORD *)a1 + 16);
  long long v144 = *((_OWORD *)a1 + 19);
  long long v130 = *(_OWORD *)(a1 + 41);
  long long v116 = *(_OWORD *)(a1 + 47);
  char v111 = *((unsigned char *)a1 + 408);
  char v115 = *((unsigned char *)a1 + 424);
  char v114 = *((unsigned char *)a1 + 440);
  char v113 = *((unsigned char *)a1 + 456);
  char v112 = *((unsigned char *)a1 + 472);
  char v154 = *((unsigned char *)a1 + 201);
  char v155 = *((unsigned char *)a1 + 224);
  char v156 = *((unsigned char *)a1 + 248);
  char v139 = *((unsigned char *)a1 + 272);
  char v140 = *((unsigned char *)a1 + 296);
  char v141 = *((unsigned char *)a1 + 320);
  char v142 = *((unsigned char *)a1 + 321);
  char v143 = *((unsigned char *)a1 + 322);
  char v129 = *((unsigned char *)a1 + 344);
  char v125 = *((unsigned char *)a1 + 345);
  char v126 = *((unsigned char *)a1 + 346);
  uint64_t v120 = a1[44];
  uint64_t v121 = a1[45];
  char v122 = *((unsigned char *)a1 + 368);
  char v101 = *((unsigned char *)a1 + 392);
  char v100 = *((unsigned char *)a1 + 393);
  char v99 = *((unsigned char *)a1 + 394);
  uint64_t v98 = a1[50];
  char v102 = *((unsigned char *)a1 + 409);
  uint64_t v103 = a1[52];
  char v104 = *((unsigned char *)a1 + 425);
  uint64_t v105 = a1[54];
  char v106 = *((unsigned char *)a1 + 441);
  uint64_t v107 = a1[56];
  char v108 = *((unsigned char *)a1 + 457);
  uint64_t v109 = a1[58];
  char v110 = *((unsigned char *)a1 + 473);
  uint64_t v78 = a1[60];
  char v77 = *((unsigned char *)a1 + 488);
  memcpy(__dst, a1 + 62, sizeof(__dst));
  __int16 v74 = *((unsigned __int8 *)a1 + 784);
  __int16 v73 = *((unsigned __int8 *)a1 + 785);
  __int16 v69 = *((unsigned __int8 *)a1 + 787);
  __int16 v70 = *((unsigned __int8 *)a1 + 786);
  uint64_t v67 = a1[99];
  __int16 v65 = *((unsigned __int8 *)a1 + 801);
  __int16 v66 = *((unsigned __int8 *)a1 + 800);
  uint64_t v64 = a1[101];
  __int16 v62 = *((unsigned __int8 *)a1 + 817);
  __int16 v63 = *((unsigned __int8 *)a1 + 816);
  long long v6 = *(_OWORD *)(a1 + 113);
  long long v203 = *(_OWORD *)(a1 + 111);
  long long v204 = v6;
  v205[0] = *(_OWORD *)(a1 + 115);
  *(_OWORD *)((char *)v205 + 10) = *(_OWORD *)((char *)a1 + 930);
  long long v7 = *(_OWORD *)(a1 + 105);
  long long v199 = *(_OWORD *)(a1 + 103);
  long long v200 = v7;
  long long v8 = *(_OWORD *)(a1 + 109);
  long long v201 = *(_OWORD *)(a1 + 107);
  long long v202 = v8;
  uint64_t v60 = a1[120];
  uint64_t v61 = a1[119];
  char v59 = *((unsigned char *)a1 + 968);
  uint64_t v57 = a1[123];
  uint64_t v58 = a1[122];
  char v56 = *((unsigned char *)a1 + 992);
  uint64_t v51 = a1[126];
  uint64_t v52 = a1[125];
  char v50 = *((unsigned char *)a1 + 1016);
  uint64_t v55 = a1[128];
  char v53 = *((unsigned char *)a1 + 1033);
  char v54 = *((unsigned char *)a1 + 1032);
  uint64_t v9 = *(void *)a2;
  long long v189 = *(_OWORD *)(a2 + 8);
  char v10 = *(unsigned char *)(a2 + 24);
  long long v188 = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a2 + 48);
  long long v187 = *(_OWORD *)(a2 + 56);
  char v12 = *(unsigned char *)(a2 + 72);
  long long v152 = *(_OWORD *)(a2 + 232);
  long long v153 = *(_OWORD *)(a2 + 208);
  long long v137 = *v5;
  long long v138 = *(_OWORD *)(a2 + 256);
  long long v136 = *(_OWORD *)(a2 + 304);
  long long v128 = v5[3];
  long long v97 = v5[6];
  char v96 = *((unsigned char *)v5 + 128);
  char v95 = *((unsigned char *)v5 + 144);
  char v94 = *((unsigned char *)v5 + 160);
  char v93 = *((unsigned char *)v5 + 176);
  char v92 = *((unsigned char *)v5 + 192);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  unsigned __int8 v15 = *(unsigned char *)(a2 + 96);
  uint64_t v16 = *(void *)(a2 + 104);
  uint64_t v179 = *(void *)(a2 + 112);
  unsigned __int8 v180 = *(unsigned char *)(a2 + 120);
  uint64_t v173 = *(void *)(a2 + 128);
  uint64_t v174 = *(void *)(a2 + 136);
  unsigned __int8 v175 = *(unsigned char *)(a2 + 144);
  uint64_t v169 = *(void *)(a2 + 152);
  int v168 = *(unsigned __int8 *)(a2 + 160);
  int v167 = *(unsigned __int8 *)(a2 + 161);
  uint64_t v161 = *(void *)(a2 + 168);
  uint64_t v162 = *(void *)(a2 + 176);
  unsigned __int8 v163 = *(unsigned char *)(a2 + 184);
  uint64_t v147 = *(void *)(a2 + 192);
  char v148 = *(unsigned char *)(a2 + 200);
  char v149 = *(unsigned char *)(a2 + 201);
  char v150 = *(unsigned char *)(a2 + 224);
  char v151 = *(unsigned char *)(a2 + 248);
  char v131 = *(unsigned char *)(a2 + 272);
  char v132 = *(unsigned char *)(a2 + 296);
  char v133 = *(unsigned char *)(a2 + 320);
  char v134 = *(unsigned char *)(a2 + 321);
  char v135 = *(unsigned char *)(a2 + 322);
  char v127 = *(unsigned char *)(a2 + 344);
  char v123 = *(unsigned char *)(a2 + 345);
  char v124 = *(unsigned char *)(a2 + 346);
  uint64_t v117 = *(void *)(a2 + 352);
  uint64_t v118 = *(void *)(a2 + 360);
  unsigned __int8 v119 = *(unsigned char *)(a2 + 368);
  char v79 = *(unsigned char *)(a2 + 392);
  char v80 = *(unsigned char *)(a2 + 393);
  char v81 = *(unsigned char *)(a2 + 394);
  uint64_t v82 = *(void *)(a2 + 400);
  char v83 = *(unsigned char *)(a2 + 409);
  uint64_t v84 = *(void *)(a2 + 416);
  char v85 = *(unsigned char *)(a2 + 425);
  uint64_t v86 = *(void *)(a2 + 432);
  char v87 = *(unsigned char *)(a2 + 441);
  uint64_t v88 = *(void *)(a2 + 448);
  char v89 = *(unsigned char *)(a2 + 457);
  uint64_t v90 = *(void *)(a2 + 464);
  char v91 = *(unsigned char *)(a2 + 473);
  uint64_t v76 = *(void *)(a2 + 480);
  char v75 = *(unsigned char *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  __int16 v72 = *(unsigned __int8 *)(a2 + 784);
  __int16 v71 = *(unsigned __int8 *)(a2 + 785);
  __int16 v17 = *(unsigned __int8 *)(a2 + 786);
  __int16 v68 = *(unsigned __int8 *)(a2 + 787);
  uint64_t v18 = *(void *)(a2 + 792);
  int v19 = *(unsigned __int8 *)(a2 + 800);
  int v20 = *(unsigned __int8 *)(a2 + 801);
  uint64_t v21 = *(void *)(a2 + 808);
  int v22 = *(unsigned __int8 *)(a2 + 816);
  int v23 = *(unsigned __int8 *)(a2 + 817);
  long long v24 = *(_OWORD *)(a2 + 904);
  long long v211 = *(_OWORD *)(a2 + 888);
  long long v212 = v24;
  v213[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v213 + 10) = *(_OWORD *)(a2 + 930);
  long long v25 = *(_OWORD *)(a2 + 840);
  long long v207 = *(_OWORD *)(a2 + 824);
  long long v208 = v25;
  long long v26 = *(_OWORD *)(a2 + 872);
  long long v209 = *(_OWORD *)(a2 + 856);
  long long v210 = v26;
  if (v4)
  {
    if (!v9) {
      goto LABEL_29;
    }
    __int16 v49 = v17;
    int v46 = v20;
    int v47 = v19;
    uint64_t v48 = v18;
    int v43 = v23;
    int v44 = v22;
    uint64_t v45 = v21;
    uint64_t v40 = *(void *)(a2 + 952);
    uint64_t v41 = *(void *)(a2 + 960);
    unsigned __int8 v42 = *(unsigned char *)(a2 + 968);
    uint64_t v37 = *(void *)(a2 + 976);
    uint64_t v38 = *(void *)(a2 + 984);
    unsigned __int8 v39 = *(unsigned char *)(a2 + 992);
    uint64_t v34 = *(void *)(a2 + 1000);
    uint64_t v35 = *(void *)(a2 + 1008);
    unsigned __int8 v36 = *(unsigned char *)(a2 + 1016);
    char v31 = *(unsigned char *)(a2 + 1033);
    char v32 = *(unsigned char *)(a2 + 1032);
    uint64_t v33 = *(void *)(a2 + 1024);
    swift_bridgeObjectRetain();
    uint64_t v27 = swift_bridgeObjectRetain();
    char v28 = sub_214B6D0B0(v27, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    __int16 v49 = v17;
    int v46 = v20;
    int v47 = v19;
    uint64_t v48 = v18;
    int v43 = v23;
    int v44 = v22;
    uint64_t v45 = v21;
    uint64_t v40 = *(void *)(a2 + 952);
    uint64_t v41 = *(void *)(a2 + 960);
    unsigned __int8 v42 = *(unsigned char *)(a2 + 968);
    uint64_t v37 = *(void *)(a2 + 976);
    uint64_t v38 = *(void *)(a2 + 984);
    unsigned __int8 v39 = *(unsigned char *)(a2 + 992);
    uint64_t v34 = *(void *)(a2 + 1000);
    uint64_t v35 = *(void *)(a2 + 1008);
    unsigned __int8 v36 = *(unsigned char *)(a2 + 1016);
    char v31 = *(unsigned char *)(a2 + 1033);
    char v32 = *(unsigned char *)(a2 + 1032);
    uint64_t v33 = *(void *)(a2 + 1024);
    if (v9)
    {
LABEL_29:
      char v29 = 0;
      return v29 & 1;
    }
  }
  v197[0] = v195;
  LOBYTE(v197[1]) = v192;
  *(_OWORD *)((char *)&v197[1] + 8) = v194;
  BYTE8(v197[2]) = v191;
  v197[3] = v193;
  LOBYTE(v197[4]) = v190;
  v196[0] = v189;
  LOBYTE(v196[1]) = v10;
  *(_OWORD *)((char *)&v196[1] + 8) = v188;
  BYTE8(v196[2]) = v11;
  v196[3] = v187;
  LOBYTE(v196[4]) = v12;
  if ((sub_214CF36AC((uint64_t *)v197, (uint64_t *)v196) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7E0C8(v186, v185, v184, v14, v13, v15) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7E0C8(v183, v182, v181, v16, v179, v180) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7E0C8(v178, v177, v176, v173, v174, v175) & 1) == 0) {
    goto LABEL_29;
  }
  if (!sub_214C80D1C(v172, v171 | (v170 << 8), v169, v168 | (v167 << 8))) {
    goto LABEL_29;
  }
  if ((sub_214C7E0C8(v166, v165, v164, v161, v162, v163) & 1) == 0) {
    goto LABEL_29;
  }
  *(void *)&v197[0] = v158;
  BYTE8(v197[0]) = v157;
  BYTE9(v197[0]) = v154;
  v197[1] = v160;
  LOBYTE(v197[2]) = v155;
  *(_OWORD *)((char *)&v197[2] + 8) = v159;
  BYTE8(v197[3]) = v156;
  *(void *)&v196[0] = v147;
  BYTE8(v196[0]) = v148;
  BYTE9(v196[0]) = v149;
  v196[1] = v153;
  LOBYTE(v196[2]) = v150;
  *(_OWORD *)((char *)&v196[2] + 8) = v152;
  BYTE8(v196[3]) = v151;
  if ((sub_214CE47FC((uint64_t *)v197, (uint64_t *)v196) & 1) == 0) {
    goto LABEL_29;
  }
  v197[0] = v146;
  LOBYTE(v197[1]) = v139;
  *(_OWORD *)((char *)&v197[1] + 8) = v145;
  BYTE8(v197[2]) = v140;
  v197[3] = v144;
  LOBYTE(v197[4]) = v141;
  BYTE1(v197[4]) = v142;
  BYTE2(v197[4]) = v143;
  v196[0] = v138;
  LOBYTE(v196[1]) = v131;
  *(_OWORD *)((char *)&v196[1] + 8) = v137;
  BYTE8(v196[2]) = v132;
  v196[3] = v136;
  LOBYTE(v196[4]) = v133;
  BYTE1(v196[4]) = v134;
  BYTE2(v196[4]) = v135;
  if ((sub_214CDFA58((uint64_t *)v197, (uint64_t *)v196) & 1) == 0) {
    goto LABEL_29;
  }
  v197[0] = v130;
  LOBYTE(v197[1]) = v129;
  v196[0] = v128;
  LOBYTE(v196[1]) = v127;
  if ((sub_214CE7468((uint64_t *)v197, (uint64_t *)v196) & 1) == 0) {
    goto LABEL_29;
  }
  LOBYTE(v197[0]) = v125;
  BYTE1(v197[0]) = v126;
  LOBYTE(v196[0]) = v123;
  BYTE1(v196[0]) = v124;
  if ((sub_214CE8A8C((unsigned __int8 *)v197, (unsigned __int8 *)v196) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7E0C8(v120, v121, v122, v117, v118, v119) & 1) == 0) {
    goto LABEL_29;
  }
  LOBYTE(v197[1]) = v101;
  BYTE1(v197[1]) = v100;
  BYTE2(v197[1]) = v99;
  *((void *)&v197[1] + 1) = v98;
  LOBYTE(v197[2]) = v111;
  v197[0] = v116;
  BYTE1(v197[2]) = v102;
  *((void *)&v197[2] + 1) = v103;
  LOBYTE(v197[3]) = v115;
  BYTE1(v197[3]) = v104;
  *((void *)&v197[3] + 1) = v105;
  LOBYTE(v197[4]) = v114;
  BYTE1(v197[4]) = v106;
  *((void *)&v197[4] + 1) = v107;
  LOBYTE(v197[5]) = v113;
  BYTE1(v197[5]) = v108;
  *((void *)&v197[5] + 1) = v109;
  LOBYTE(v197[6]) = v112;
  BYTE1(v197[6]) = v110;
  v196[0] = v97;
  LOBYTE(v196[1]) = v79;
  BYTE1(v196[1]) = v80;
  BYTE2(v196[1]) = v81;
  *((void *)&v196[1] + 1) = v82;
  LOBYTE(v196[2]) = v96;
  BYTE1(v196[2]) = v83;
  *((void *)&v196[2] + 1) = v84;
  LOBYTE(v196[3]) = v95;
  BYTE1(v196[3]) = v85;
  *((void *)&v196[3] + 1) = v86;
  LOBYTE(v196[4]) = v94;
  BYTE1(v196[4]) = v87;
  *((void *)&v196[4] + 1) = v88;
  LOBYTE(v196[5]) = v93;
  BYTE1(v196[5]) = v89;
  *((void *)&v196[5] + 1) = v90;
  LOBYTE(v196[6]) = v92;
  BYTE1(v196[6]) = v91;
  if (!sub_214CE2AA0((uint64_t *)v197, (uint64_t *)v196)) {
    goto LABEL_29;
  }
  *(void *)&v197[0] = v78;
  BYTE8(v197[0]) = v77;
  *(void *)&v196[0] = v76;
  BYTE8(v196[0]) = v75;
  if ((sub_214CEA098((uint64_t)v197, (uint64_t)v196) & 1) == 0) {
    goto LABEL_29;
  }
  memcpy(v197, __dst, 0x119uLL);
  memcpy(v196, __src, 0x119uLL);
  if ((sub_214CEB6D4((uint64_t)v197, (uint64_t)v196) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7F6F0(v74 | (unsigned __int16)(v73 << 8), v72 | (unsigned __int16)(v71 << 8)) & 1) == 0) {
    goto LABEL_29;
  }
  if ((sub_214C7F6F0(v70 | (unsigned __int16)(v69 << 8), v49 | (unsigned __int16)(v68 << 8)) & 1) == 0) {
    goto LABEL_29;
  }
  if (!sub_214C80D1C(v67, v66 | (v65 << 8), v48, v47 | (v46 << 8))) {
    goto LABEL_29;
  }
  if (!sub_214C80D1C(v64, v63 | (v62 << 8), v45, v44 | (v43 << 8))) {
    goto LABEL_29;
  }
  v197[4] = v203;
  v197[5] = v204;
  v197[6] = v205[0];
  *(_OWORD *)((char *)&v197[6] + 10) = *(_OWORD *)((char *)v205 + 10);
  v197[0] = v199;
  v197[1] = v200;
  v197[2] = v201;
  v197[3] = v202;
  v196[4] = v211;
  v196[5] = v212;
  v196[6] = v213[0];
  *(_OWORD *)((char *)&v196[6] + 10) = *(_OWORD *)((char *)v213 + 10);
  v196[0] = v207;
  v196[1] = v208;
  v196[2] = v209;
  v196[3] = v210;
  if (!sub_214CE2830((uint64_t)v197, (uint64_t)v196)
    || (sub_214C7E0C8(v61, v60, v59, v40, v41, v42) & 1) == 0
    || (sub_214C7E0C8(v58, v57, v56, v37, v38, v39) & 1) == 0
    || (sub_214C7E0C8(v52, v51, v50, v34, v35, v36) & 1) == 0)
  {
    goto LABEL_29;
  }
  *(void *)&v197[0] = v55;
  BYTE8(v197[0]) = v54;
  BYTE9(v197[0]) = v53;
  *(void *)&v196[0] = v33;
  BYTE8(v196[0]) = v32;
  BYTE9(v196[0]) = v31;
  char v29 = sub_214CEB9E4((uint64_t)v197, (uint64_t)v196);
  return v29 & 1;
}

BOOL sub_214CEDC18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  int v6 = *((unsigned __int8 *)a1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v9 = *((unsigned __int8 *)a1 + 40);
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  char v12 = *((unsigned char *)a1 + 64);
  uint64_t v13 = a1[9];
  __int16 v14 = *((unsigned __int8 *)a1 + 80);
  __int16 v15 = *((unsigned __int8 *)a1 + 81);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = *((unsigned __int8 *)a2 + 16);
  uint64_t v20 = a2[3];
  uint64_t v19 = a2[4];
  uint64_t v21 = *((unsigned __int8 *)a2 + 40);
  uint64_t v23 = a2[6];
  uint64_t v22 = a2[7];
  unsigned __int8 v24 = *((unsigned char *)a2 + 64);
  uint64_t v25 = a2[9];
  int v26 = *((unsigned __int8 *)a2 + 80);
  int v27 = v6 - 209;
  int v28 = *((unsigned __int8 *)a2 + 81);
  uint64_t v29 = (v6 - 209);
  switch(v27)
  {
    case 0:
      if (v18 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v18 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v18 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v18 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v18 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v18 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v18 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v18 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v18 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v18 + 47) < 9u) {
        return 0;
      }
      uint64_t v30 = -1;
      uint64_t v31 = a2[3];
      uint64_t v32 = a2[4];
      unsigned __int8 v33 = *((unsigned char *)a2 + 64);
      uint64_t v34 = a2[7];
      uint64_t v35 = a2[6];
      switch(v29)
      {
        case 1:
          uint64_t v30 = -2;
          break;
        case 2:
          uint64_t v30 = -3;
          break;
        case 3:
          uint64_t v30 = -4;
          break;
        case 4:
          uint64_t v30 = -5;
          break;
        case 5:
          uint64_t v30 = -6;
          break;
        case 6:
          uint64_t v30 = -7;
          break;
        case 7:
          uint64_t v30 = -8;
          break;
        case 8:
          uint64_t v30 = -9;
          break;
        case 9:
          uint64_t v30 = -10;
          break;
        case 10:
          uint64_t v30 = -11;
          break;
        case 11:
          uint64_t v30 = -12;
          break;
        case 12:
          uint64_t v30 = -13;
          break;
        case 13:
          uint64_t v30 = -14;
          break;
        case 14:
          uint64_t v30 = -15;
          break;
        case 15:
          uint64_t v30 = -16;
          break;
        case 16:
          uint64_t v30 = -17;
          break;
        case 17:
          uint64_t v30 = -18;
          break;
        case 18:
          uint64_t v30 = -19;
          break;
        case 19:
          uint64_t v30 = -20;
          break;
        case 20:
          uint64_t v30 = -21;
          break;
        case 21:
          uint64_t v30 = -22;
          break;
        case 22:
          uint64_t v30 = -28;
          break;
        case 23:
          uint64_t v30 = -29;
          break;
        case 24:
          uint64_t v30 = 200;
          break;
        case 25:
          uint64_t v30 = 20000;
          break;
        case 26:
          uint64_t v30 = 20001;
          break;
        case 27:
          uint64_t v30 = 20100;
          break;
        case 28:
          uint64_t v30 = 40000;
          break;
        case 29:
          uint64_t v30 = 40010;
          break;
        case 30:
          uint64_t v30 = 40011;
          break;
        case 31:
          uint64_t v30 = 40012;
          break;
        case 32:
          uint64_t v30 = 40013;
          break;
        case 33:
          uint64_t v30 = 40014;
          break;
        case 34:
          uint64_t v30 = 40015;
          break;
        case 35:
          uint64_t v30 = 40020;
          break;
        case 36:
          uint64_t v30 = 40021;
          break;
        case 37:
          uint64_t v30 = 40022;
          break;
        case 38:
          uint64_t v30 = 40023;
          break;
        case 39:
          uint64_t v30 = 40024;
          break;
        case 40:
          uint64_t v30 = 40025;
          break;
        case 41:
          uint64_t v30 = 40026;
          break;
        case 42:
          uint64_t v30 = 40027;
          break;
        case 43:
          uint64_t v30 = 40028;
          break;
        case 44:
          uint64_t v30 = 40029;
          break;
        case 45:
          uint64_t v30 = 40030;
          break;
        case 46:
          uint64_t v30 = 40101;
          break;
        case 47:
          uint64_t v30 = 40102;
          break;
        case 48:
          uint64_t v30 = 40200;
          break;
        case 49:
          uint64_t v30 = 40201;
          break;
        case 50:
          uint64_t v30 = 40205;
          break;
        case 51:
          uint64_t v30 = 40401;
          break;
        case 52:
          uint64_t v30 = 40402;
          break;
        case 53:
          uint64_t v30 = 40403;
          break;
        case 54:
          uint64_t v30 = 40404;
          break;
        case 55:
          uint64_t v30 = 40500;
          break;
        case 56:
          uint64_t v30 = 40600;
          break;
        case 57:
          uint64_t v30 = 40601;
          break;
        case 58:
          uint64_t v30 = 50000;
          break;
        case 59:
          uint64_t v30 = 50001;
          break;
        case 60:
          uint64_t v30 = 50002;
          break;
        case 61:
          uint64_t v30 = 99991;
          break;
        case 62:
          uint64_t v30 = 99992;
          break;
        case 63:
          uint64_t v30 = 99993;
          break;
        case 64:
          uint64_t v30 = -1101;
          break;
        case 65:
          uint64_t v30 = -1102;
          break;
        case 66:
          uint64_t v30 = -1103;
          break;
        case 67:
          uint64_t v30 = -1104;
          break;
        case 68:
          uint64_t v30 = -1110;
          break;
        case 69:
          uint64_t v30 = -1111;
          break;
        case 70:
          uint64_t v30 = -1112;
          break;
        case 71:
          uint64_t v30 = -1113;
          break;
        case 72:
          uint64_t v30 = -1114;
          break;
        case 73:
          uint64_t v30 = -1115;
          break;
        case 74:
          uint64_t v30 = -1116;
          break;
        case 75:
          uint64_t v30 = -1117;
          break;
        case 76:
          uint64_t v30 = -1118;
          break;
        case 77:
          uint64_t v30 = -1119;
          break;
        case 78:
          uint64_t v30 = -1201;
          break;
        case 79:
          uint64_t v30 = -1202;
          break;
        case 80:
          uint64_t v30 = -1203;
          break;
        case 81:
          uint64_t v30 = -1204;
          break;
        case 82:
          uint64_t v30 = -1402;
          break;
        case 83:
          uint64_t v30 = -1403;
          break;
        case 84:
          uint64_t v30 = -1404;
          break;
        case 85:
          uint64_t v30 = -1301;
          break;
        case 86:
          uint64_t v30 = -1302;
          break;
        case 87:
          uint64_t v30 = -1303;
          break;
        case 88:
          uint64_t v30 = -1304;
          break;
        case 89:
          uint64_t v30 = -1305;
          break;
        case 90:
          uint64_t v30 = -1306;
          break;
        case 91:
          uint64_t v30 = -1307;
          break;
        case 92:
          uint64_t v30 = -1308;
          break;
        case 93:
          uint64_t v30 = -1309;
          break;
        case 94:
          uint64_t v30 = -1310;
          break;
        case 95:
          uint64_t v30 = -1315;
          break;
        case 96:
          uint64_t v30 = -1316;
          break;
        case 97:
          uint64_t v30 = -1317;
          break;
        case 98:
          uint64_t v30 = -131600;
          break;
        case 99:
          uint64_t v30 = -2103;
          break;
        case 100:
          uint64_t v30 = -2104;
          break;
        case 101:
          uint64_t v30 = -2107;
          break;
        case 102:
          uint64_t v30 = -2110;
          break;
        case 103:
          uint64_t v30 = -2111;
          break;
        case 104:
          uint64_t v30 = -2112;
          break;
        case 105:
          uint64_t v30 = -2123;
          break;
        case 106:
          uint64_t v30 = -2124;
          break;
        case 107:
          uint64_t v30 = -2125;
          break;
        case 108:
          uint64_t v30 = -2126;
          break;
        case 109:
          uint64_t v30 = -2127;
          break;
        case 110:
          uint64_t v30 = -3101;
          break;
        case 111:
          uint64_t v30 = -3102;
          break;
        case 112:
          uint64_t v30 = -3103;
          break;
        case 113:
          uint64_t v30 = -3104;
          break;
        case 114:
          uint64_t v30 = -3105;
          break;
        case 115:
          uint64_t v30 = -3106;
          break;
        case 116:
          uint64_t v30 = -3107;
          break;
        case 117:
          uint64_t v30 = -3108;
          break;
        case 118:
          uint64_t v30 = -3109;
          break;
        case 119:
          uint64_t v30 = -3110;
          break;
        case 120:
          uint64_t v30 = -3111;
          break;
        case 121:
          uint64_t v30 = -3112;
          break;
        case 122:
          uint64_t v30 = -3113;
          break;
        case 123:
          uint64_t v30 = -3151;
          break;
        case 124:
          uint64_t v30 = -3152;
          break;
        case 125:
          uint64_t v30 = -3153;
          break;
        case 126:
          uint64_t v30 = -3154;
          break;
        case 127:
          uint64_t v30 = -3155;
          break;
        case 128:
          uint64_t v30 = -3156;
          break;
        case 129:
          uint64_t v30 = -3157;
          break;
        case 130:
          uint64_t v30 = -3158;
          break;
        case 131:
          uint64_t v30 = -3159;
          break;
        case 132:
          uint64_t v30 = -3161;
          break;
        case 133:
          uint64_t v30 = -3162;
          break;
        case 134:
          uint64_t v30 = -3163;
          break;
        case 135:
          uint64_t v30 = -3164;
          break;
        case 136:
          uint64_t v30 = -3165;
          break;
        case 137:
          uint64_t v30 = -3166;
          break;
        case 138:
          uint64_t v30 = -3167;
          break;
        case 139:
          uint64_t v30 = -3168;
          break;
        case 140:
          uint64_t v30 = -3169;
          break;
        case 141:
          uint64_t v30 = -3170;
          break;
        case 142:
          uint64_t v30 = -3171;
          break;
        case 143:
          uint64_t v30 = -3172;
          break;
        case 144:
          uint64_t v30 = -3173;
          break;
        case 145:
          uint64_t v30 = -3174;
          break;
        case 146:
          uint64_t v30 = -3175;
          break;
        case 147:
          uint64_t v30 = -3176;
          break;
        case 148:
          uint64_t v30 = -3177;
          break;
        case 149:
          uint64_t v30 = -3178;
          break;
        case 150:
          uint64_t v30 = -3179;
          break;
        case 151:
          uint64_t v30 = -3180;
          break;
        case 152:
          uint64_t v30 = -3181;
          break;
        case 153:
          uint64_t v30 = -3182;
          break;
        case 154:
          uint64_t v30 = -3183;
          break;
        case 155:
          uint64_t v30 = -3184;
          break;
        case 156:
          uint64_t v30 = -3185;
          break;
        case 157:
          uint64_t v30 = -3186;
          break;
        case 158:
          uint64_t v30 = -3187;
          break;
        case 159:
          uint64_t v30 = -3188;
          break;
        case 160:
          uint64_t v30 = -3189;
          break;
        case 161:
          uint64_t v30 = -3300;
          break;
        case 162:
          uint64_t v30 = -5108;
          break;
        case 163:
          uint64_t v30 = -6009;
          break;
        case 164:
          uint64_t v30 = -6010;
          break;
        case 165:
          uint64_t v30 = -6102;
          break;
        case 166:
          uint64_t v30 = -6103;
          break;
        case 167:
          uint64_t v30 = -6104;
          break;
        case 168:
          uint64_t v30 = -6105;
          break;
        case 169:
          uint64_t v30 = -8001;
          break;
        case 170:
          uint64_t v30 = -8301;
          break;
        case 171:
          uint64_t v30 = -8304;
          break;
        case 172:
          uint64_t v30 = -8400;
          break;
        case 173:
          uint64_t v30 = -8401;
          break;
        case 174:
          uint64_t v30 = -8403;
          break;
        case 175:
          uint64_t v30 = -8404;
          break;
        case 176:
          uint64_t v30 = -8428;
          break;
        case 177:
          uint64_t v30 = -8429;
          break;
        case 178:
          uint64_t v30 = -8433;
          break;
        case 179:
          uint64_t v30 = -8434;
          break;
        case 180:
          uint64_t v30 = -8500;
          break;
        case 181:
          uint64_t v30 = -8501;
          break;
        case 182:
          uint64_t v30 = -8502;
          break;
        case 183:
          uint64_t v30 = -8503;
          break;
        case 184:
          uint64_t v30 = -8504;
          break;
        case 185:
          uint64_t v30 = -22200;
          break;
        case 186:
          uint64_t v30 = -22201;
          break;
        case 187:
          uint64_t v30 = -22202;
          break;
        case 188:
          uint64_t v30 = -22203;
          break;
        case 189:
          uint64_t v30 = -22204;
          break;
        case 190:
          uint64_t v30 = -22205;
          break;
        case 191:
          uint64_t v30 = -22206;
          break;
        case 192:
          uint64_t v30 = -22207;
          break;
        case 193:
          uint64_t v30 = -22208;
          break;
        case 194:
          uint64_t v30 = -72200;
          break;
        case 195:
          uint64_t v30 = -72201;
          break;
        case 196:
          uint64_t v30 = -72202;
          break;
        case 197:
          uint64_t v30 = -72203;
          break;
        case 198:
          uint64_t v30 = -72204;
          break;
        case 199:
          uint64_t v30 = -72205;
          break;
        case 200:
          uint64_t v30 = -72206;
          break;
        case 201:
          uint64_t v30 = -72207;
          break;
        case 202:
          uint64_t v30 = -72208;
          break;
        case 203:
          uint64_t v30 = -72209;
          break;
        case 204:
          uint64_t v30 = -72210;
          break;
        case 205:
          uint64_t v30 = -72211;
          break;
        case 206:
          uint64_t v30 = -72780;
          break;
        case 207:
          uint64_t v30 = -72781;
          break;
        case 208:
          uint64_t v30 = -72782;
          break;
        default:
          break;
      }
      uint64_t v36 = -1;
      switch(v18)
      {
        case 1:
          uint64_t v36 = -2;
          break;
        case 2:
          uint64_t v36 = -3;
          break;
        case 3:
          uint64_t v36 = -4;
          break;
        case 4:
          uint64_t v36 = -5;
          break;
        case 5:
          uint64_t v36 = -6;
          break;
        case 6:
          uint64_t v36 = -7;
          break;
        case 7:
          uint64_t v36 = -8;
          break;
        case 8:
          uint64_t v36 = -9;
          break;
        case 9:
          uint64_t v36 = -10;
          break;
        case 10:
          uint64_t v36 = -11;
          break;
        case 11:
          uint64_t v36 = -12;
          break;
        case 12:
          uint64_t v36 = -13;
          break;
        case 13:
          uint64_t v36 = -14;
          break;
        case 14:
          uint64_t v36 = -15;
          break;
        case 15:
          uint64_t v36 = -16;
          break;
        case 16:
          uint64_t v36 = -17;
          break;
        case 17:
          uint64_t v36 = -18;
          break;
        case 18:
          uint64_t v36 = -19;
          break;
        case 19:
          uint64_t v36 = -20;
          break;
        case 20:
          uint64_t v36 = -21;
          break;
        case 21:
          uint64_t v36 = -22;
          break;
        case 22:
          uint64_t v36 = -28;
          break;
        case 23:
          uint64_t v36 = -29;
          break;
        case 24:
          uint64_t v36 = 200;
          break;
        case 25:
          uint64_t v36 = 20000;
          break;
        case 26:
          uint64_t v36 = 20001;
          break;
        case 27:
          uint64_t v36 = 20100;
          break;
        case 28:
          uint64_t v36 = 40000;
          break;
        case 29:
          uint64_t v36 = 40010;
          break;
        case 30:
          uint64_t v36 = 40011;
          break;
        case 31:
          uint64_t v36 = 40012;
          break;
        case 32:
          uint64_t v36 = 40013;
          break;
        case 33:
          uint64_t v36 = 40014;
          break;
        case 34:
          uint64_t v36 = 40015;
          break;
        case 35:
          uint64_t v36 = 40020;
          break;
        case 36:
          uint64_t v36 = 40021;
          break;
        case 37:
          uint64_t v36 = 40022;
          break;
        case 38:
          uint64_t v36 = 40023;
          break;
        case 39:
          uint64_t v36 = 40024;
          break;
        case 40:
          uint64_t v36 = 40025;
          break;
        case 41:
          uint64_t v36 = 40026;
          break;
        case 42:
          uint64_t v36 = 40027;
          break;
        case 43:
          uint64_t v36 = 40028;
          break;
        case 44:
          uint64_t v36 = 40029;
          break;
        case 45:
          uint64_t v36 = 40030;
          break;
        case 46:
          uint64_t v36 = 40101;
          break;
        case 47:
          uint64_t v36 = 40102;
          break;
        case 48:
          uint64_t v36 = 40200;
          break;
        case 49:
          uint64_t v36 = 40201;
          break;
        case 50:
          uint64_t v36 = 40205;
          break;
        case 51:
          uint64_t v36 = 40401;
          break;
        case 52:
          uint64_t v36 = 40402;
          break;
        case 53:
          uint64_t v36 = 40403;
          break;
        case 54:
          uint64_t v36 = 40404;
          break;
        case 55:
          uint64_t v36 = 40500;
          break;
        case 56:
          uint64_t v36 = 40600;
          break;
        case 57:
          uint64_t v36 = 40601;
          break;
        case 58:
          uint64_t v36 = 50000;
          break;
        case 59:
          uint64_t v36 = 50001;
          break;
        case 60:
          uint64_t v36 = 50002;
          break;
        case 61:
          uint64_t v36 = 99991;
          break;
        case 62:
          uint64_t v36 = 99992;
          break;
        case 63:
          uint64_t v36 = 99993;
          break;
        case 64:
          uint64_t v36 = -1101;
          break;
        case 65:
          uint64_t v36 = -1102;
          break;
        case 66:
          uint64_t v36 = -1103;
          break;
        case 67:
          uint64_t v36 = -1104;
          break;
        case 68:
          uint64_t v36 = -1110;
          break;
        case 69:
          uint64_t v36 = -1111;
          break;
        case 70:
          uint64_t v36 = -1112;
          break;
        case 71:
          uint64_t v36 = -1113;
          break;
        case 72:
          uint64_t v36 = -1114;
          break;
        case 73:
          uint64_t v36 = -1115;
          break;
        case 74:
          uint64_t v36 = -1116;
          break;
        case 75:
          uint64_t v36 = -1117;
          break;
        case 76:
          uint64_t v36 = -1118;
          break;
        case 77:
          uint64_t v36 = -1119;
          break;
        case 78:
          uint64_t v36 = -1201;
          break;
        case 79:
          uint64_t v36 = -1202;
          break;
        case 80:
          uint64_t v36 = -1203;
          break;
        case 81:
          uint64_t v36 = -1204;
          break;
        case 82:
          uint64_t v36 = -1402;
          break;
        case 83:
          uint64_t v36 = -1403;
          break;
        case 84:
          uint64_t v36 = -1404;
          break;
        case 85:
          uint64_t v36 = -1301;
          break;
        case 86:
          uint64_t v36 = -1302;
          break;
        case 87:
          uint64_t v36 = -1303;
          break;
        case 88:
          uint64_t v36 = -1304;
          break;
        case 89:
          uint64_t v36 = -1305;
          break;
        case 90:
          uint64_t v36 = -1306;
          break;
        case 91:
          uint64_t v36 = -1307;
          break;
        case 92:
          uint64_t v36 = -1308;
          break;
        case 93:
          uint64_t v36 = -1309;
          break;
        case 94:
          uint64_t v36 = -1310;
          break;
        case 95:
          uint64_t v36 = -1315;
          break;
        case 96:
          uint64_t v36 = -1316;
          break;
        case 97:
          uint64_t v36 = -1317;
          break;
        case 98:
          uint64_t v36 = -131600;
          break;
        case 99:
          uint64_t v36 = -2103;
          break;
        case 100:
          uint64_t v36 = -2104;
          break;
        case 101:
          uint64_t v36 = -2107;
          break;
        case 102:
          uint64_t v36 = -2110;
          break;
        case 103:
          uint64_t v36 = -2111;
          break;
        case 104:
          uint64_t v36 = -2112;
          break;
        case 105:
          uint64_t v36 = -2123;
          break;
        case 106:
          uint64_t v36 = -2124;
          break;
        case 107:
          uint64_t v36 = -2125;
          break;
        case 108:
          uint64_t v36 = -2126;
          break;
        case 109:
          uint64_t v36 = -2127;
          break;
        case 110:
          uint64_t v36 = -3101;
          break;
        case 111:
          uint64_t v36 = -3102;
          break;
        case 112:
          uint64_t v36 = -3103;
          break;
        case 113:
          uint64_t v36 = -3104;
          break;
        case 114:
          uint64_t v36 = -3105;
          break;
        case 115:
          uint64_t v36 = -3106;
          break;
        case 116:
          uint64_t v36 = -3107;
          break;
        case 117:
          uint64_t v36 = -3108;
          break;
        case 118:
          uint64_t v36 = -3109;
          break;
        case 119:
          uint64_t v36 = -3110;
          break;
        case 120:
          uint64_t v36 = -3111;
          break;
        case 121:
          uint64_t v36 = -3112;
          break;
        case 122:
          uint64_t v36 = -3113;
          break;
        case 123:
          uint64_t v36 = -3151;
          break;
        case 124:
          uint64_t v36 = -3152;
          break;
        case 125:
          uint64_t v36 = -3153;
          break;
        case 126:
          uint64_t v36 = -3154;
          break;
        case 127:
          uint64_t v36 = -3155;
          break;
        case 128:
          uint64_t v36 = -3156;
          break;
        case 129:
          uint64_t v36 = -3157;
          break;
        case 130:
          uint64_t v36 = -3158;
          break;
        case 131:
          uint64_t v36 = -3159;
          break;
        case 132:
          uint64_t v36 = -3161;
          break;
        case 133:
          uint64_t v36 = -3162;
          break;
        case 134:
          uint64_t v36 = -3163;
          break;
        case 135:
          uint64_t v36 = -3164;
          break;
        case 136:
          uint64_t v36 = -3165;
          break;
        case 137:
          uint64_t v36 = -3166;
          break;
        case 138:
          uint64_t v36 = -3167;
          break;
        case 139:
          uint64_t v36 = -3168;
          break;
        case 140:
          uint64_t v36 = -3169;
          break;
        case 141:
          uint64_t v36 = -3170;
          break;
        case 142:
          uint64_t v36 = -3171;
          break;
        case 143:
          uint64_t v36 = -3172;
          break;
        case 144:
          uint64_t v36 = -3173;
          break;
        case 145:
          uint64_t v36 = -3174;
          break;
        case 146:
          uint64_t v36 = -3175;
          break;
        case 147:
          uint64_t v36 = -3176;
          break;
        case 148:
          uint64_t v36 = -3177;
          break;
        case 149:
          uint64_t v36 = -3178;
          break;
        case 150:
          uint64_t v36 = -3179;
          break;
        case 151:
          uint64_t v36 = -3180;
          break;
        case 152:
          uint64_t v36 = -3181;
          break;
        case 153:
          uint64_t v36 = -3182;
          break;
        case 154:
          uint64_t v36 = -3183;
          break;
        case 155:
          uint64_t v36 = -3184;
          break;
        case 156:
          uint64_t v36 = -3185;
          break;
        case 157:
          uint64_t v36 = -3186;
          break;
        case 158:
          uint64_t v36 = -3187;
          break;
        case 159:
          uint64_t v36 = -3188;
          break;
        case 160:
          uint64_t v36 = -3189;
          break;
        case 161:
          uint64_t v36 = -3300;
          break;
        case 162:
          uint64_t v36 = -5108;
          break;
        case 163:
          uint64_t v36 = -6009;
          break;
        case 164:
          uint64_t v36 = -6010;
          break;
        case 165:
          uint64_t v36 = -6102;
          break;
        case 166:
          uint64_t v36 = -6103;
          break;
        case 167:
          uint64_t v36 = -6104;
          break;
        case 168:
          uint64_t v36 = -6105;
          break;
        case 169:
          uint64_t v36 = -8001;
          break;
        case 170:
          uint64_t v36 = -8301;
          break;
        case 171:
          uint64_t v36 = -8304;
          break;
        case 172:
          uint64_t v36 = -8400;
          break;
        case 173:
          uint64_t v36 = -8401;
          break;
        case 174:
          uint64_t v36 = -8403;
          break;
        case 175:
          uint64_t v36 = -8404;
          break;
        case 176:
          uint64_t v36 = -8428;
          break;
        case 177:
          uint64_t v36 = -8429;
          break;
        case 178:
          uint64_t v36 = -8433;
          break;
        case 179:
          uint64_t v36 = -8434;
          break;
        case 180:
          uint64_t v36 = -8500;
          break;
        case 181:
          uint64_t v36 = -8501;
          break;
        case 182:
          uint64_t v36 = -8502;
          break;
        case 183:
          uint64_t v36 = -8503;
          break;
        case 184:
          uint64_t v36 = -8504;
          break;
        case 185:
          uint64_t v36 = -22200;
          break;
        case 186:
          uint64_t v36 = -22201;
          break;
        case 187:
          uint64_t v36 = -22202;
          break;
        case 188:
          uint64_t v36 = -22203;
          break;
        case 189:
          uint64_t v36 = -22204;
          break;
        case 190:
          uint64_t v36 = -22205;
          break;
        case 191:
          uint64_t v36 = -22206;
          break;
        case 192:
          uint64_t v36 = -22207;
          break;
        case 193:
          uint64_t v36 = -22208;
          break;
        case 194:
          uint64_t v36 = -72200;
          break;
        case 195:
          uint64_t v36 = -72201;
          break;
        case 196:
          uint64_t v36 = -72202;
          break;
        case 197:
          uint64_t v36 = -72203;
          break;
        case 198:
          uint64_t v36 = -72204;
          break;
        case 199:
          uint64_t v36 = -72205;
          break;
        case 200:
          uint64_t v36 = -72206;
          break;
        case 201:
          uint64_t v36 = -72207;
          break;
        case 202:
          uint64_t v36 = -72208;
          break;
        case 203:
          uint64_t v36 = -72209;
          break;
        case 204:
          uint64_t v36 = -72210;
          break;
        case 205:
          uint64_t v36 = -72211;
          break;
        case 206:
          uint64_t v36 = -72780;
          break;
        case 207:
          uint64_t v36 = -72781;
          break;
        case 208:
          uint64_t v36 = -72782;
          break;
        default:
          break;
      }
      uint64_t v23 = v35;
      uint64_t v22 = v34;
      unsigned __int8 v24 = v33;
      uint64_t v19 = v32;
      uint64_t v20 = v31;
      if (v30 != v36) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if (!v17) {
          return 0;
        }
        if (v4 != v16 || v5 != v17)
        {
          uint64_t v65 = v22;
          char v62 = v12;
          int v63 = v26;
          uint64_t v60 = v10;
          uint64_t v61 = v11;
          uint64_t v59 = v25;
          __int16 v37 = v15;
          __int16 v38 = v14;
          uint64_t v39 = v13;
          int v40 = v28;
          uint64_t v41 = v23;
          unsigned __int8 v42 = v24;
          uint64_t v58 = v9;
          uint64_t v43 = v7;
          uint64_t v44 = v8;
          uint64_t v45 = v19;
          uint64_t v46 = v20;
          char v47 = sub_214D1ABC8();
          uint64_t v20 = v46;
          uint64_t v19 = v45;
          uint64_t v8 = v44;
          uint64_t v7 = v43;
          uint64_t v9 = v58;
          unsigned __int8 v24 = v42;
          uint64_t v22 = v65;
          uint64_t v23 = v41;
          int v28 = v40;
          uint64_t v13 = v39;
          __int16 v14 = v38;
          __int16 v15 = v37;
          uint64_t v25 = v59;
          uint64_t v10 = v60;
          uint64_t v11 = v61;
          char v12 = v62;
          int v26 = v63;
          if ((v47 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v17)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v21 != 209) {
            return 0;
          }
          break;
        case 210:
          if (v21 != 210) {
            return 0;
          }
          break;
        case 211:
          if (v21 != 211) {
            return 0;
          }
          break;
        case 212:
          if (v21 != 212) {
            return 0;
          }
          break;
        case 213:
          if (v21 != 213) {
            return 0;
          }
          break;
        case 214:
          if (v21 != 214) {
            return 0;
          }
          break;
        case 215:
          if (v21 != 215) {
            return 0;
          }
          break;
        case 216:
          if (v21 != 216) {
            return 0;
          }
          break;
        case 217:
          if (v21 != 217) {
            return 0;
          }
          break;
        default:
          if ((v21 + 47) < 9u) {
            return 0;
          }
          uint64_t v49 = -1;
          switch(v9)
          {
            case 1:
              uint64_t v49 = -2;
              break;
            case 2:
              uint64_t v49 = -3;
              break;
            case 3:
              uint64_t v49 = -4;
              break;
            case 4:
              uint64_t v49 = -5;
              break;
            case 5:
              uint64_t v49 = -6;
              break;
            case 6:
              uint64_t v49 = -7;
              break;
            case 7:
              uint64_t v49 = -8;
              break;
            case 8:
              uint64_t v49 = -9;
              break;
            case 9:
              uint64_t v49 = -10;
              break;
            case 10:
              uint64_t v49 = -11;
              break;
            case 11:
              uint64_t v49 = -12;
              break;
            case 12:
              uint64_t v49 = -13;
              break;
            case 13:
              uint64_t v49 = -14;
              break;
            case 14:
              uint64_t v49 = -15;
              break;
            case 15:
              uint64_t v49 = -16;
              break;
            case 16:
              uint64_t v49 = -17;
              break;
            case 17:
              uint64_t v49 = -18;
              break;
            case 18:
              uint64_t v49 = -19;
              break;
            case 19:
              uint64_t v49 = -20;
              break;
            case 20:
              uint64_t v49 = -21;
              break;
            case 21:
              uint64_t v49 = -22;
              break;
            case 22:
              uint64_t v49 = -28;
              break;
            case 23:
              uint64_t v49 = -29;
              break;
            case 24:
              uint64_t v49 = 200;
              break;
            case 25:
              uint64_t v49 = 20000;
              break;
            case 26:
              uint64_t v49 = 20001;
              break;
            case 27:
              uint64_t v49 = 20100;
              break;
            case 28:
              uint64_t v49 = 40000;
              break;
            case 29:
              uint64_t v49 = 40010;
              break;
            case 30:
              uint64_t v49 = 40011;
              break;
            case 31:
              uint64_t v49 = 40012;
              break;
            case 32:
              uint64_t v49 = 40013;
              break;
            case 33:
              uint64_t v49 = 40014;
              break;
            case 34:
              uint64_t v49 = 40015;
              break;
            case 35:
              uint64_t v49 = 40020;
              break;
            case 36:
              uint64_t v49 = 40021;
              break;
            case 37:
              uint64_t v49 = 40022;
              break;
            case 38:
              uint64_t v49 = 40023;
              break;
            case 39:
              uint64_t v49 = 40024;
              break;
            case 40:
              uint64_t v49 = 40025;
              break;
            case 41:
              uint64_t v49 = 40026;
              break;
            case 42:
              uint64_t v49 = 40027;
              break;
            case 43:
              uint64_t v49 = 40028;
              break;
            case 44:
              uint64_t v49 = 40029;
              break;
            case 45:
              uint64_t v49 = 40030;
              break;
            case 46:
              uint64_t v49 = 40101;
              break;
            case 47:
              uint64_t v49 = 40102;
              break;
            case 48:
              uint64_t v49 = 40200;
              break;
            case 49:
              uint64_t v49 = 40201;
              break;
            case 50:
              uint64_t v49 = 40205;
              break;
            case 51:
              uint64_t v49 = 40401;
              break;
            case 52:
              uint64_t v49 = 40402;
              break;
            case 53:
              uint64_t v49 = 40403;
              break;
            case 54:
              uint64_t v49 = 40404;
              break;
            case 55:
              uint64_t v49 = 40500;
              break;
            case 56:
              uint64_t v49 = 40600;
              break;
            case 57:
              uint64_t v49 = 40601;
              break;
            case 58:
              uint64_t v49 = 50000;
              break;
            case 59:
              uint64_t v49 = 50001;
              break;
            case 60:
              uint64_t v49 = 50002;
              break;
            case 61:
              uint64_t v49 = 99991;
              break;
            case 62:
              uint64_t v49 = 99992;
              break;
            case 63:
              uint64_t v49 = 99993;
              break;
            case 64:
              uint64_t v49 = -1101;
              break;
            case 65:
              uint64_t v49 = -1102;
              break;
            case 66:
              uint64_t v49 = -1103;
              break;
            case 67:
              uint64_t v49 = -1104;
              break;
            case 68:
              uint64_t v49 = -1110;
              break;
            case 69:
              uint64_t v49 = -1111;
              break;
            case 70:
              uint64_t v49 = -1112;
              break;
            case 71:
              uint64_t v49 = -1113;
              break;
            case 72:
              uint64_t v49 = -1114;
              break;
            case 73:
              uint64_t v49 = -1115;
              break;
            case 74:
              uint64_t v49 = -1116;
              break;
            case 75:
              uint64_t v49 = -1117;
              break;
            case 76:
              uint64_t v49 = -1118;
              break;
            case 77:
              uint64_t v49 = -1119;
              break;
            case 78:
              uint64_t v49 = -1201;
              break;
            case 79:
              uint64_t v49 = -1202;
              break;
            case 80:
              uint64_t v49 = -1203;
              break;
            case 81:
              uint64_t v49 = -1204;
              break;
            case 82:
              uint64_t v49 = -1402;
              break;
            case 83:
              uint64_t v49 = -1403;
              break;
            case 84:
              uint64_t v49 = -1404;
              break;
            case 85:
              uint64_t v49 = -1301;
              break;
            case 86:
              uint64_t v49 = -1302;
              break;
            case 87:
              uint64_t v49 = -1303;
              break;
            case 88:
              uint64_t v49 = -1304;
              break;
            case 89:
              uint64_t v49 = -1305;
              break;
            case 90:
              uint64_t v49 = -1306;
              break;
            case 91:
              uint64_t v49 = -1307;
              break;
            case 92:
              uint64_t v49 = -1308;
              break;
            case 93:
              uint64_t v49 = -1309;
              break;
            case 94:
              uint64_t v49 = -1310;
              break;
            case 95:
              uint64_t v49 = -1315;
              break;
            case 96:
              uint64_t v49 = -1316;
              break;
            case 97:
              uint64_t v49 = -1317;
              break;
            case 98:
              uint64_t v49 = -131600;
              break;
            case 99:
              uint64_t v49 = -2103;
              break;
            case 100:
              uint64_t v49 = -2104;
              break;
            case 101:
              uint64_t v49 = -2107;
              break;
            case 102:
              uint64_t v49 = -2110;
              break;
            case 103:
              uint64_t v49 = -2111;
              break;
            case 104:
              uint64_t v49 = -2112;
              break;
            case 105:
              uint64_t v49 = -2123;
              break;
            case 106:
              uint64_t v49 = -2124;
              break;
            case 107:
              uint64_t v49 = -2125;
              break;
            case 108:
              uint64_t v49 = -2126;
              break;
            case 109:
              uint64_t v49 = -2127;
              break;
            case 110:
              uint64_t v49 = -3101;
              break;
            case 111:
              uint64_t v49 = -3102;
              break;
            case 112:
              uint64_t v49 = -3103;
              break;
            case 113:
              uint64_t v49 = -3104;
              break;
            case 114:
              uint64_t v49 = -3105;
              break;
            case 115:
              uint64_t v49 = -3106;
              break;
            case 116:
              uint64_t v49 = -3107;
              break;
            case 117:
              uint64_t v49 = -3108;
              break;
            case 118:
              uint64_t v49 = -3109;
              break;
            case 119:
              uint64_t v49 = -3110;
              break;
            case 120:
              uint64_t v49 = -3111;
              break;
            case 121:
              uint64_t v49 = -3112;
              break;
            case 122:
              uint64_t v49 = -3113;
              break;
            case 123:
              uint64_t v49 = -3151;
              break;
            case 124:
              uint64_t v49 = -3152;
              break;
            case 125:
              uint64_t v49 = -3153;
              break;
            case 126:
              uint64_t v49 = -3154;
              break;
            case 127:
              uint64_t v49 = -3155;
              break;
            case 128:
              uint64_t v49 = -3156;
              break;
            case 129:
              uint64_t v49 = -3157;
              break;
            case 130:
              uint64_t v49 = -3158;
              break;
            case 131:
              uint64_t v49 = -3159;
              break;
            case 132:
              uint64_t v49 = -3161;
              break;
            case 133:
              uint64_t v49 = -3162;
              break;
            case 134:
              uint64_t v49 = -3163;
              break;
            case 135:
              uint64_t v49 = -3164;
              break;
            case 136:
              uint64_t v49 = -3165;
              break;
            case 137:
              uint64_t v49 = -3166;
              break;
            case 138:
              uint64_t v49 = -3167;
              break;
            case 139:
              uint64_t v49 = -3168;
              break;
            case 140:
              uint64_t v49 = -3169;
              break;
            case 141:
              uint64_t v49 = -3170;
              break;
            case 142:
              uint64_t v49 = -3171;
              break;
            case 143:
              uint64_t v49 = -3172;
              break;
            case 144:
              uint64_t v49 = -3173;
              break;
            case 145:
              uint64_t v49 = -3174;
              break;
            case 146:
              uint64_t v49 = -3175;
              break;
            case 147:
              uint64_t v49 = -3176;
              break;
            case 148:
              uint64_t v49 = -3177;
              break;
            case 149:
              uint64_t v49 = -3178;
              break;
            case 150:
              uint64_t v49 = -3179;
              break;
            case 151:
              uint64_t v49 = -3180;
              break;
            case 152:
              uint64_t v49 = -3181;
              break;
            case 153:
              uint64_t v49 = -3182;
              break;
            case 154:
              uint64_t v49 = -3183;
              break;
            case 155:
              uint64_t v49 = -3184;
              break;
            case 156:
              uint64_t v49 = -3185;
              break;
            case 157:
              uint64_t v49 = -3186;
              break;
            case 158:
              uint64_t v49 = -3187;
              break;
            case 159:
              uint64_t v49 = -3188;
              break;
            case 160:
              uint64_t v49 = -3189;
              break;
            case 161:
              uint64_t v49 = -3300;
              break;
            case 162:
              uint64_t v49 = -5108;
              break;
            case 163:
              uint64_t v49 = -6009;
              break;
            case 164:
              uint64_t v49 = -6010;
              break;
            case 165:
              uint64_t v49 = -6102;
              break;
            case 166:
              uint64_t v49 = -6103;
              break;
            case 167:
              uint64_t v49 = -6104;
              break;
            case 168:
              uint64_t v49 = -6105;
              break;
            case 169:
              uint64_t v49 = -8001;
              break;
            case 170:
              uint64_t v49 = -8301;
              break;
            case 171:
              uint64_t v49 = -8304;
              break;
            case 172:
              uint64_t v49 = -8400;
              break;
            case 173:
              uint64_t v49 = -8401;
              break;
            case 174:
              uint64_t v49 = -8403;
              break;
            case 175:
              uint64_t v49 = -8404;
              break;
            case 176:
              uint64_t v49 = -8428;
              break;
            case 177:
              uint64_t v49 = -8429;
              break;
            case 178:
              uint64_t v49 = -8433;
              break;
            case 179:
              uint64_t v49 = -8434;
              break;
            case 180:
              uint64_t v49 = -8500;
              break;
            case 181:
              uint64_t v49 = -8501;
              break;
            case 182:
              uint64_t v49 = -8502;
              break;
            case 183:
              uint64_t v49 = -8503;
              break;
            case 184:
              uint64_t v49 = -8504;
              break;
            case 185:
              uint64_t v49 = -22200;
              break;
            case 186:
              uint64_t v49 = -22201;
              break;
            case 187:
              uint64_t v49 = -22202;
              break;
            case 188:
              uint64_t v49 = -22203;
              break;
            case 189:
              uint64_t v49 = -22204;
              break;
            case 190:
              uint64_t v49 = -22205;
              break;
            case 191:
              uint64_t v49 = -22206;
              break;
            case 192:
              uint64_t v49 = -22207;
              break;
            case 193:
              uint64_t v49 = -22208;
              break;
            case 194:
              uint64_t v49 = -72200;
              break;
            case 195:
              uint64_t v49 = -72201;
              break;
            case 196:
              uint64_t v49 = -72202;
              break;
            case 197:
              uint64_t v49 = -72203;
              break;
            case 198:
              uint64_t v49 = -72204;
              break;
            case 199:
              uint64_t v49 = -72205;
              break;
            case 200:
              uint64_t v49 = -72206;
              break;
            case 201:
              uint64_t v49 = -72207;
              break;
            case 202:
              uint64_t v49 = -72208;
              break;
            case 203:
              uint64_t v49 = -72209;
              break;
            case 204:
              uint64_t v49 = -72210;
              break;
            case 205:
              uint64_t v49 = -72211;
              break;
            case 206:
              uint64_t v49 = -72780;
              break;
            case 207:
              uint64_t v49 = -72781;
              break;
            case 208:
              uint64_t v49 = -72782;
              break;
            default:
              break;
          }
          uint64_t v50 = -1;
          switch(v21)
          {
            case 1:
              uint64_t v50 = -2;
              break;
            case 2:
              uint64_t v50 = -3;
              break;
            case 3:
              uint64_t v50 = -4;
              break;
            case 4:
              uint64_t v50 = -5;
              break;
            case 5:
              uint64_t v50 = -6;
              break;
            case 6:
              uint64_t v50 = -7;
              break;
            case 7:
              uint64_t v50 = -8;
              break;
            case 8:
              uint64_t v50 = -9;
              break;
            case 9:
              uint64_t v50 = -10;
              break;
            case 10:
              uint64_t v50 = -11;
              break;
            case 11:
              uint64_t v50 = -12;
              break;
            case 12:
              uint64_t v50 = -13;
              break;
            case 13:
              uint64_t v50 = -14;
              break;
            case 14:
              uint64_t v50 = -15;
              break;
            case 15:
              uint64_t v50 = -16;
              break;
            case 16:
              uint64_t v50 = -17;
              break;
            case 17:
              uint64_t v50 = -18;
              break;
            case 18:
              uint64_t v50 = -19;
              break;
            case 19:
              uint64_t v50 = -20;
              break;
            case 20:
              uint64_t v50 = -21;
              break;
            case 21:
              uint64_t v50 = -22;
              break;
            case 22:
              uint64_t v50 = -28;
              break;
            case 23:
              uint64_t v50 = -29;
              break;
            case 24:
              uint64_t v50 = 200;
              break;
            case 25:
              uint64_t v50 = 20000;
              break;
            case 26:
              uint64_t v50 = 20001;
              break;
            case 27:
              uint64_t v50 = 20100;
              break;
            case 28:
              uint64_t v50 = 40000;
              break;
            case 29:
              uint64_t v50 = 40010;
              break;
            case 30:
              uint64_t v50 = 40011;
              break;
            case 31:
              uint64_t v50 = 40012;
              break;
            case 32:
              uint64_t v50 = 40013;
              break;
            case 33:
              uint64_t v50 = 40014;
              break;
            case 34:
              uint64_t v50 = 40015;
              break;
            case 35:
              uint64_t v50 = 40020;
              break;
            case 36:
              uint64_t v50 = 40021;
              break;
            case 37:
              uint64_t v50 = 40022;
              break;
            case 38:
              uint64_t v50 = 40023;
              break;
            case 39:
              uint64_t v50 = 40024;
              break;
            case 40:
              uint64_t v50 = 40025;
              break;
            case 41:
              uint64_t v50 = 40026;
              break;
            case 42:
              uint64_t v50 = 40027;
              break;
            case 43:
              uint64_t v50 = 40028;
              break;
            case 44:
              uint64_t v50 = 40029;
              break;
            case 45:
              uint64_t v50 = 40030;
              break;
            case 46:
              uint64_t v50 = 40101;
              break;
            case 47:
              uint64_t v50 = 40102;
              break;
            case 48:
              uint64_t v50 = 40200;
              break;
            case 49:
              uint64_t v50 = 40201;
              break;
            case 50:
              uint64_t v50 = 40205;
              break;
            case 51:
              uint64_t v50 = 40401;
              break;
            case 52:
              uint64_t v50 = 40402;
              break;
            case 53:
              uint64_t v50 = 40403;
              break;
            case 54:
              uint64_t v50 = 40404;
              break;
            case 55:
              uint64_t v50 = 40500;
              break;
            case 56:
              uint64_t v50 = 40600;
              break;
            case 57:
              uint64_t v50 = 40601;
              break;
            case 58:
              uint64_t v50 = 50000;
              break;
            case 59:
              uint64_t v50 = 50001;
              break;
            case 60:
              uint64_t v50 = 50002;
              break;
            case 61:
              uint64_t v50 = 99991;
              break;
            case 62:
              uint64_t v50 = 99992;
              break;
            case 63:
              uint64_t v50 = 99993;
              break;
            case 64:
              uint64_t v50 = -1101;
              break;
            case 65:
              uint64_t v50 = -1102;
              break;
            case 66:
              uint64_t v50 = -1103;
              break;
            case 67:
              uint64_t v50 = -1104;
              break;
            case 68:
              uint64_t v50 = -1110;
              break;
            case 69:
              uint64_t v50 = -1111;
              break;
            case 70:
              uint64_t v50 = -1112;
              break;
            case 71:
              uint64_t v50 = -1113;
              break;
            case 72:
              uint64_t v50 = -1114;
              break;
            case 73:
              uint64_t v50 = -1115;
              break;
            case 74:
              uint64_t v50 = -1116;
              break;
            case 75:
              uint64_t v50 = -1117;
              break;
            case 76:
              uint64_t v50 = -1118;
              break;
            case 77:
              uint64_t v50 = -1119;
              break;
            case 78:
              uint64_t v50 = -1201;
              break;
            case 79:
              uint64_t v50 = -1202;
              break;
            case 80:
              uint64_t v50 = -1203;
              break;
            case 81:
              uint64_t v50 = -1204;
              break;
            case 82:
              uint64_t v50 = -1402;
              break;
            case 83:
              uint64_t v50 = -1403;
              break;
            case 84:
              uint64_t v50 = -1404;
              break;
            case 85:
              uint64_t v50 = -1301;
              break;
            case 86:
              uint64_t v50 = -1302;
              break;
            case 87:
              uint64_t v50 = -1303;
              break;
            case 88:
              uint64_t v50 = -1304;
              break;
            case 89:
              uint64_t v50 = -1305;
              break;
            case 90:
              uint64_t v50 = -1306;
              break;
            case 91:
              uint64_t v50 = -1307;
              break;
            case 92:
              uint64_t v50 = -1308;
              break;
            case 93:
              uint64_t v50 = -1309;
              break;
            case 94:
              uint64_t v50 = -1310;
              break;
            case 95:
              uint64_t v50 = -1315;
              break;
            case 96:
              uint64_t v50 = -1316;
              break;
            case 97:
              uint64_t v50 = -1317;
              break;
            case 98:
              uint64_t v50 = -131600;
              break;
            case 99:
              uint64_t v50 = -2103;
              break;
            case 100:
              uint64_t v50 = -2104;
              break;
            case 101:
              uint64_t v50 = -2107;
              break;
            case 102:
              uint64_t v50 = -2110;
              break;
            case 103:
              uint64_t v50 = -2111;
              break;
            case 104:
              uint64_t v50 = -2112;
              break;
            case 105:
              uint64_t v50 = -2123;
              break;
            case 106:
              uint64_t v50 = -2124;
              break;
            case 107:
              uint64_t v50 = -2125;
              break;
            case 108:
              uint64_t v50 = -2126;
              break;
            case 109:
              uint64_t v50 = -2127;
              break;
            case 110:
              uint64_t v50 = -3101;
              break;
            case 111:
              uint64_t v50 = -3102;
              break;
            case 112:
              uint64_t v50 = -3103;
              break;
            case 113:
              uint64_t v50 = -3104;
              break;
            case 114:
              uint64_t v50 = -3105;
              break;
            case 115:
              uint64_t v50 = -3106;
              break;
            case 116:
              uint64_t v50 = -3107;
              break;
            case 117:
              uint64_t v50 = -3108;
              break;
            case 118:
              uint64_t v50 = -3109;
              break;
            case 119:
              uint64_t v50 = -3110;
              break;
            case 120:
              uint64_t v50 = -3111;
              break;
            case 121:
              uint64_t v50 = -3112;
              break;
            case 122:
              uint64_t v50 = -3113;
              break;
            case 123:
              uint64_t v50 = -3151;
              break;
            case 124:
              uint64_t v50 = -3152;
              break;
            case 125:
              uint64_t v50 = -3153;
              break;
            case 126:
              uint64_t v50 = -3154;
              break;
            case 127:
              uint64_t v50 = -3155;
              break;
            case 128:
              uint64_t v50 = -3156;
              break;
            case 129:
              uint64_t v50 = -3157;
              break;
            case 130:
              uint64_t v50 = -3158;
              break;
            case 131:
              uint64_t v50 = -3159;
              break;
            case 132:
              uint64_t v50 = -3161;
              break;
            case 133:
              uint64_t v50 = -3162;
              break;
            case 134:
              uint64_t v50 = -3163;
              break;
            case 135:
              uint64_t v50 = -3164;
              break;
            case 136:
              uint64_t v50 = -3165;
              break;
            case 137:
              uint64_t v50 = -3166;
              break;
            case 138:
              uint64_t v50 = -3167;
              break;
            case 139:
              uint64_t v50 = -3168;
              break;
            case 140:
              uint64_t v50 = -3169;
              break;
            case 141:
              uint64_t v50 = -3170;
              break;
            case 142:
              uint64_t v50 = -3171;
              break;
            case 143:
              uint64_t v50 = -3172;
              break;
            case 144:
              uint64_t v50 = -3173;
              break;
            case 145:
              uint64_t v50 = -3174;
              break;
            case 146:
              uint64_t v50 = -3175;
              break;
            case 147:
              uint64_t v50 = -3176;
              break;
            case 148:
              uint64_t v50 = -3177;
              break;
            case 149:
              uint64_t v50 = -3178;
              break;
            case 150:
              uint64_t v50 = -3179;
              break;
            case 151:
              uint64_t v50 = -3180;
              break;
            case 152:
              uint64_t v50 = -3181;
              break;
            case 153:
              uint64_t v50 = -3182;
              break;
            case 154:
              uint64_t v50 = -3183;
              break;
            case 155:
              uint64_t v50 = -3184;
              break;
            case 156:
              uint64_t v50 = -3185;
              break;
            case 157:
              uint64_t v50 = -3186;
              break;
            case 158:
              uint64_t v50 = -3187;
              break;
            case 159:
              uint64_t v50 = -3188;
              break;
            case 160:
              uint64_t v50 = -3189;
              break;
            case 161:
              uint64_t v50 = -3300;
              break;
            case 162:
              uint64_t v50 = -5108;
              break;
            case 163:
              uint64_t v50 = -6009;
              break;
            case 164:
              uint64_t v50 = -6010;
              break;
            case 165:
              uint64_t v50 = -6102;
              break;
            case 166:
              uint64_t v50 = -6103;
              break;
            case 167:
              uint64_t v50 = -6104;
              break;
            case 168:
              uint64_t v50 = -6105;
              break;
            case 169:
              uint64_t v50 = -8001;
              break;
            case 170:
              uint64_t v50 = -8301;
              break;
            case 171:
              uint64_t v50 = -8304;
              break;
            case 172:
              uint64_t v50 = -8400;
              break;
            case 173:
              uint64_t v50 = -8401;
              break;
            case 174:
              uint64_t v50 = -8403;
              break;
            case 175:
              uint64_t v50 = -8404;
              break;
            case 176:
              uint64_t v50 = -8428;
              break;
            case 177:
              uint64_t v50 = -8429;
              break;
            case 178:
              uint64_t v50 = -8433;
              break;
            case 179:
              uint64_t v50 = -8434;
              break;
            case 180:
              uint64_t v50 = -8500;
              break;
            case 181:
              uint64_t v50 = -8501;
              break;
            case 182:
              uint64_t v50 = -8502;
              break;
            case 183:
              uint64_t v50 = -8503;
              break;
            case 184:
              uint64_t v50 = -8504;
              break;
            case 185:
              uint64_t v50 = -22200;
              break;
            case 186:
              uint64_t v50 = -22201;
              break;
            case 187:
              uint64_t v50 = -22202;
              break;
            case 188:
              uint64_t v50 = -22203;
              break;
            case 189:
              uint64_t v50 = -22204;
              break;
            case 190:
              uint64_t v50 = -22205;
              break;
            case 191:
              uint64_t v50 = -22206;
              break;
            case 192:
              uint64_t v50 = -22207;
              break;
            case 193:
              uint64_t v50 = -22208;
              break;
            case 194:
              uint64_t v50 = -72200;
              break;
            case 195:
              uint64_t v50 = -72201;
              break;
            case 196:
              uint64_t v50 = -72202;
              break;
            case 197:
              uint64_t v50 = -72203;
              break;
            case 198:
              uint64_t v50 = -72204;
              break;
            case 199:
              uint64_t v50 = -72205;
              break;
            case 200:
              uint64_t v50 = -72206;
              break;
            case 201:
              uint64_t v50 = -72207;
              break;
            case 202:
              uint64_t v50 = -72208;
              break;
            case 203:
              uint64_t v50 = -72209;
              break;
            case 204:
              uint64_t v50 = -72210;
              break;
            case 205:
              uint64_t v50 = -72211;
              break;
            case 206:
              uint64_t v50 = -72780;
              break;
            case 207:
              uint64_t v50 = -72781;
              break;
            case 208:
              uint64_t v50 = -72782;
              break;
            default:
              break;
          }
          if (v49 != v50) {
            return 0;
          }
          break;
      }
      if (!v7)
      {
        if (!v19) {
          goto LABEL_894;
        }
        return 0;
      }
      if (!v19) {
        return 0;
      }
      if (v8 != v20 || v7 != v19)
      {
        uint64_t v64 = v13;
        uint64_t v66 = v22;
        int v51 = v28;
        uint64_t v52 = v23;
        unsigned __int8 v53 = v24;
        char v54 = sub_214D1ABC8();
        unsigned __int8 v24 = v53;
        uint64_t v13 = v64;
        uint64_t v22 = v66;
        uint64_t v23 = v52;
        int v28 = v51;
        if ((v54 & 1) == 0) {
          return 0;
        }
      }
LABEL_894:
      char v55 = v12;
      uint64_t v56 = v13;
      int v57 = v28;
      if ((sub_214C7E0C8(v10, v11, v55, v23, v22, v24) & 1) == 0) {
        return 0;
      }
      return sub_214C80D1C(v56, v14 | (v15 << 8), v25, v26 | (v57 << 8));
  }
}

BOOL sub_214CF0A08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3 = *a1;
  int v4 = a1[1];
  int v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 1);
  __int16 v8 = a1[16];
  __int16 v9 = a1[17];
  uint64_t v10 = *((void *)a1 + 3);
  __int16 v11 = a1[32];
  __int16 v12 = a1[33];
  int v13 = *a2;
  uint64_t v14 = a2[1];
  int v15 = a2[2];
  uint64_t v16 = a2[3];
  uint64_t v17 = *((void *)a2 + 1);
  int v18 = a2[16];
  int v19 = a2[17];
  uint64_t v20 = *((void *)a2 + 3);
  int v21 = a2[32];
  int v22 = v4 - 209;
  int v23 = a2[33];
  uint64_t v24 = (v4 - 209);
  switch(v22)
  {
    case 0:
      if (v14 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v14 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v14 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v14 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v14 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v14 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v14 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v14 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v14 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v14 + 47) < 9u) {
        return 0;
      }
      uint64_t v25 = -1;
      switch(v24)
      {
        case 1:
          uint64_t v25 = -2;
          break;
        case 2:
          uint64_t v25 = -3;
          break;
        case 3:
          uint64_t v25 = -4;
          break;
        case 4:
          uint64_t v25 = -5;
          break;
        case 5:
          uint64_t v25 = -6;
          break;
        case 6:
          uint64_t v25 = -7;
          break;
        case 7:
          uint64_t v25 = -8;
          break;
        case 8:
          uint64_t v25 = -9;
          break;
        case 9:
          uint64_t v25 = -10;
          break;
        case 10:
          uint64_t v25 = -11;
          break;
        case 11:
          uint64_t v25 = -12;
          break;
        case 12:
          uint64_t v25 = -13;
          break;
        case 13:
          uint64_t v25 = -14;
          break;
        case 14:
          uint64_t v25 = -15;
          break;
        case 15:
          uint64_t v25 = -16;
          break;
        case 16:
          uint64_t v25 = -17;
          break;
        case 17:
          uint64_t v25 = -18;
          break;
        case 18:
          uint64_t v25 = -19;
          break;
        case 19:
          uint64_t v25 = -20;
          break;
        case 20:
          uint64_t v25 = -21;
          break;
        case 21:
          uint64_t v25 = -22;
          break;
        case 22:
          uint64_t v25 = -28;
          break;
        case 23:
          uint64_t v25 = -29;
          break;
        case 24:
          uint64_t v25 = 200;
          break;
        case 25:
          uint64_t v25 = 20000;
          break;
        case 26:
          uint64_t v25 = 20001;
          break;
        case 27:
          uint64_t v25 = 20100;
          break;
        case 28:
          uint64_t v25 = 40000;
          break;
        case 29:
          uint64_t v25 = 40010;
          break;
        case 30:
          uint64_t v25 = 40011;
          break;
        case 31:
          uint64_t v25 = 40012;
          break;
        case 32:
          uint64_t v25 = 40013;
          break;
        case 33:
          uint64_t v25 = 40014;
          break;
        case 34:
          uint64_t v25 = 40015;
          break;
        case 35:
          uint64_t v25 = 40020;
          break;
        case 36:
          uint64_t v25 = 40021;
          break;
        case 37:
          uint64_t v25 = 40022;
          break;
        case 38:
          uint64_t v25 = 40023;
          break;
        case 39:
          uint64_t v25 = 40024;
          break;
        case 40:
          uint64_t v25 = 40025;
          break;
        case 41:
          uint64_t v25 = 40026;
          break;
        case 42:
          uint64_t v25 = 40027;
          break;
        case 43:
          uint64_t v25 = 40028;
          break;
        case 44:
          uint64_t v25 = 40029;
          break;
        case 45:
          uint64_t v25 = 40030;
          break;
        case 46:
          uint64_t v25 = 40101;
          break;
        case 47:
          uint64_t v25 = 40102;
          break;
        case 48:
          uint64_t v25 = 40200;
          break;
        case 49:
          uint64_t v25 = 40201;
          break;
        case 50:
          uint64_t v25 = 40205;
          break;
        case 51:
          uint64_t v25 = 40401;
          break;
        case 52:
          uint64_t v25 = 40402;
          break;
        case 53:
          uint64_t v25 = 40403;
          break;
        case 54:
          uint64_t v25 = 40404;
          break;
        case 55:
          uint64_t v25 = 40500;
          break;
        case 56:
          uint64_t v25 = 40600;
          break;
        case 57:
          uint64_t v25 = 40601;
          break;
        case 58:
          uint64_t v25 = 50000;
          break;
        case 59:
          uint64_t v25 = 50001;
          break;
        case 60:
          uint64_t v25 = 50002;
          break;
        case 61:
          uint64_t v25 = 99991;
          break;
        case 62:
          uint64_t v25 = 99992;
          break;
        case 63:
          uint64_t v25 = 99993;
          break;
        case 64:
          uint64_t v25 = -1101;
          break;
        case 65:
          uint64_t v25 = -1102;
          break;
        case 66:
          uint64_t v25 = -1103;
          break;
        case 67:
          uint64_t v25 = -1104;
          break;
        case 68:
          uint64_t v25 = -1110;
          break;
        case 69:
          uint64_t v25 = -1111;
          break;
        case 70:
          uint64_t v25 = -1112;
          break;
        case 71:
          uint64_t v25 = -1113;
          break;
        case 72:
          uint64_t v25 = -1114;
          break;
        case 73:
          uint64_t v25 = -1115;
          break;
        case 74:
          uint64_t v25 = -1116;
          break;
        case 75:
          uint64_t v25 = -1117;
          break;
        case 76:
          uint64_t v25 = -1118;
          break;
        case 77:
          uint64_t v25 = -1119;
          break;
        case 78:
          uint64_t v25 = -1201;
          break;
        case 79:
          uint64_t v25 = -1202;
          break;
        case 80:
          uint64_t v25 = -1203;
          break;
        case 81:
          uint64_t v25 = -1204;
          break;
        case 82:
          uint64_t v25 = -1402;
          break;
        case 83:
          uint64_t v25 = -1403;
          break;
        case 84:
          uint64_t v25 = -1404;
          break;
        case 85:
          uint64_t v25 = -1301;
          break;
        case 86:
          uint64_t v25 = -1302;
          break;
        case 87:
          uint64_t v25 = -1303;
          break;
        case 88:
          uint64_t v25 = -1304;
          break;
        case 89:
          uint64_t v25 = -1305;
          break;
        case 90:
          uint64_t v25 = -1306;
          break;
        case 91:
          uint64_t v25 = -1307;
          break;
        case 92:
          uint64_t v25 = -1308;
          break;
        case 93:
          uint64_t v25 = -1309;
          break;
        case 94:
          uint64_t v25 = -1310;
          break;
        case 95:
          uint64_t v25 = -1315;
          break;
        case 96:
          uint64_t v25 = -1316;
          break;
        case 97:
          uint64_t v25 = -1317;
          break;
        case 98:
          uint64_t v25 = -131600;
          break;
        case 99:
          uint64_t v25 = -2103;
          break;
        case 100:
          uint64_t v25 = -2104;
          break;
        case 101:
          uint64_t v25 = -2107;
          break;
        case 102:
          uint64_t v25 = -2110;
          break;
        case 103:
          uint64_t v25 = -2111;
          break;
        case 104:
          uint64_t v25 = -2112;
          break;
        case 105:
          uint64_t v25 = -2123;
          break;
        case 106:
          uint64_t v25 = -2124;
          break;
        case 107:
          uint64_t v25 = -2125;
          break;
        case 108:
          uint64_t v25 = -2126;
          break;
        case 109:
          uint64_t v25 = -2127;
          break;
        case 110:
          uint64_t v25 = -3101;
          break;
        case 111:
          uint64_t v25 = -3102;
          break;
        case 112:
          uint64_t v25 = -3103;
          break;
        case 113:
          uint64_t v25 = -3104;
          break;
        case 114:
          uint64_t v25 = -3105;
          break;
        case 115:
          uint64_t v25 = -3106;
          break;
        case 116:
          uint64_t v25 = -3107;
          break;
        case 117:
          uint64_t v25 = -3108;
          break;
        case 118:
          uint64_t v25 = -3109;
          break;
        case 119:
          uint64_t v25 = -3110;
          break;
        case 120:
          uint64_t v25 = -3111;
          break;
        case 121:
          uint64_t v25 = -3112;
          break;
        case 122:
          uint64_t v25 = -3113;
          break;
        case 123:
          uint64_t v25 = -3151;
          break;
        case 124:
          uint64_t v25 = -3152;
          break;
        case 125:
          uint64_t v25 = -3153;
          break;
        case 126:
          uint64_t v25 = -3154;
          break;
        case 127:
          uint64_t v25 = -3155;
          break;
        case 128:
          uint64_t v25 = -3156;
          break;
        case 129:
          uint64_t v25 = -3157;
          break;
        case 130:
          uint64_t v25 = -3158;
          break;
        case 131:
          uint64_t v25 = -3159;
          break;
        case 132:
          uint64_t v25 = -3161;
          break;
        case 133:
          uint64_t v25 = -3162;
          break;
        case 134:
          uint64_t v25 = -3163;
          break;
        case 135:
          uint64_t v25 = -3164;
          break;
        case 136:
          uint64_t v25 = -3165;
          break;
        case 137:
          uint64_t v25 = -3166;
          break;
        case 138:
          uint64_t v25 = -3167;
          break;
        case 139:
          uint64_t v25 = -3168;
          break;
        case 140:
          uint64_t v25 = -3169;
          break;
        case 141:
          uint64_t v25 = -3170;
          break;
        case 142:
          uint64_t v25 = -3171;
          break;
        case 143:
          uint64_t v25 = -3172;
          break;
        case 144:
          uint64_t v25 = -3173;
          break;
        case 145:
          uint64_t v25 = -3174;
          break;
        case 146:
          uint64_t v25 = -3175;
          break;
        case 147:
          uint64_t v25 = -3176;
          break;
        case 148:
          uint64_t v25 = -3177;
          break;
        case 149:
          uint64_t v25 = -3178;
          break;
        case 150:
          uint64_t v25 = -3179;
          break;
        case 151:
          uint64_t v25 = -3180;
          break;
        case 152:
          uint64_t v25 = -3181;
          break;
        case 153:
          uint64_t v25 = -3182;
          break;
        case 154:
          uint64_t v25 = -3183;
          break;
        case 155:
          uint64_t v25 = -3184;
          break;
        case 156:
          uint64_t v25 = -3185;
          break;
        case 157:
          uint64_t v25 = -3186;
          break;
        case 158:
          uint64_t v25 = -3187;
          break;
        case 159:
          uint64_t v25 = -3188;
          break;
        case 160:
          uint64_t v25 = -3189;
          break;
        case 161:
          uint64_t v25 = -3300;
          break;
        case 162:
          uint64_t v25 = -5108;
          break;
        case 163:
          uint64_t v25 = -6009;
          break;
        case 164:
          uint64_t v25 = -6010;
          break;
        case 165:
          uint64_t v25 = -6102;
          break;
        case 166:
          uint64_t v25 = -6103;
          break;
        case 167:
          uint64_t v25 = -6104;
          break;
        case 168:
          uint64_t v25 = -6105;
          break;
        case 169:
          uint64_t v25 = -8001;
          break;
        case 170:
          uint64_t v25 = -8301;
          break;
        case 171:
          uint64_t v25 = -8304;
          break;
        case 172:
          uint64_t v25 = -8400;
          break;
        case 173:
          uint64_t v25 = -8401;
          break;
        case 174:
          uint64_t v25 = -8403;
          break;
        case 175:
          uint64_t v25 = -8404;
          break;
        case 176:
          uint64_t v25 = -8428;
          break;
        case 177:
          uint64_t v25 = -8429;
          break;
        case 178:
          uint64_t v25 = -8433;
          break;
        case 179:
          uint64_t v25 = -8434;
          break;
        case 180:
          uint64_t v25 = -8500;
          break;
        case 181:
          uint64_t v25 = -8501;
          break;
        case 182:
          uint64_t v25 = -8502;
          break;
        case 183:
          uint64_t v25 = -8503;
          break;
        case 184:
          uint64_t v25 = -8504;
          break;
        case 185:
          uint64_t v25 = -22200;
          break;
        case 186:
          uint64_t v25 = -22201;
          break;
        case 187:
          uint64_t v25 = -22202;
          break;
        case 188:
          uint64_t v25 = -22203;
          break;
        case 189:
          uint64_t v25 = -22204;
          break;
        case 190:
          uint64_t v25 = -22205;
          break;
        case 191:
          uint64_t v25 = -22206;
          break;
        case 192:
          uint64_t v25 = -22207;
          break;
        case 193:
          uint64_t v25 = -22208;
          break;
        case 194:
          uint64_t v25 = -72200;
          break;
        case 195:
          uint64_t v25 = -72201;
          break;
        case 196:
          uint64_t v25 = -72202;
          break;
        case 197:
          uint64_t v25 = -72203;
          break;
        case 198:
          uint64_t v25 = -72204;
          break;
        case 199:
          uint64_t v25 = -72205;
          break;
        case 200:
          uint64_t v25 = -72206;
          break;
        case 201:
          uint64_t v25 = -72207;
          break;
        case 202:
          uint64_t v25 = -72208;
          break;
        case 203:
          uint64_t v25 = -72209;
          break;
        case 204:
          uint64_t v25 = -72210;
          break;
        case 205:
          uint64_t v25 = -72211;
          break;
        case 206:
          uint64_t v25 = -72780;
          break;
        case 207:
          uint64_t v25 = -72781;
          break;
        case 208:
          uint64_t v25 = -72782;
          break;
        default:
          break;
      }
      uint64_t v26 = -1;
      switch(v14)
      {
        case 1:
          uint64_t v26 = -2;
          break;
        case 2:
          uint64_t v26 = -3;
          break;
        case 3:
          uint64_t v26 = -4;
          break;
        case 4:
          uint64_t v26 = -5;
          break;
        case 5:
          uint64_t v26 = -6;
          break;
        case 6:
          uint64_t v26 = -7;
          break;
        case 7:
          uint64_t v26 = -8;
          break;
        case 8:
          uint64_t v26 = -9;
          break;
        case 9:
          uint64_t v26 = -10;
          break;
        case 10:
          uint64_t v26 = -11;
          break;
        case 11:
          uint64_t v26 = -12;
          break;
        case 12:
          uint64_t v26 = -13;
          break;
        case 13:
          uint64_t v26 = -14;
          break;
        case 14:
          uint64_t v26 = -15;
          break;
        case 15:
          uint64_t v26 = -16;
          break;
        case 16:
          uint64_t v26 = -17;
          break;
        case 17:
          uint64_t v26 = -18;
          break;
        case 18:
          uint64_t v26 = -19;
          break;
        case 19:
          uint64_t v26 = -20;
          break;
        case 20:
          uint64_t v26 = -21;
          break;
        case 21:
          uint64_t v26 = -22;
          break;
        case 22:
          uint64_t v26 = -28;
          break;
        case 23:
          uint64_t v26 = -29;
          break;
        case 24:
          uint64_t v26 = 200;
          break;
        case 25:
          uint64_t v26 = 20000;
          break;
        case 26:
          uint64_t v26 = 20001;
          break;
        case 27:
          uint64_t v26 = 20100;
          break;
        case 28:
          uint64_t v26 = 40000;
          break;
        case 29:
          uint64_t v26 = 40010;
          break;
        case 30:
          uint64_t v26 = 40011;
          break;
        case 31:
          uint64_t v26 = 40012;
          break;
        case 32:
          uint64_t v26 = 40013;
          break;
        case 33:
          uint64_t v26 = 40014;
          break;
        case 34:
          uint64_t v26 = 40015;
          break;
        case 35:
          uint64_t v26 = 40020;
          break;
        case 36:
          uint64_t v26 = 40021;
          break;
        case 37:
          uint64_t v26 = 40022;
          break;
        case 38:
          uint64_t v26 = 40023;
          break;
        case 39:
          uint64_t v26 = 40024;
          break;
        case 40:
          uint64_t v26 = 40025;
          break;
        case 41:
          uint64_t v26 = 40026;
          break;
        case 42:
          uint64_t v26 = 40027;
          break;
        case 43:
          uint64_t v26 = 40028;
          break;
        case 44:
          uint64_t v26 = 40029;
          break;
        case 45:
          uint64_t v26 = 40030;
          break;
        case 46:
          uint64_t v26 = 40101;
          break;
        case 47:
          uint64_t v26 = 40102;
          break;
        case 48:
          uint64_t v26 = 40200;
          break;
        case 49:
          uint64_t v26 = 40201;
          break;
        case 50:
          uint64_t v26 = 40205;
          break;
        case 51:
          uint64_t v26 = 40401;
          break;
        case 52:
          uint64_t v26 = 40402;
          break;
        case 53:
          uint64_t v26 = 40403;
          break;
        case 54:
          uint64_t v26 = 40404;
          break;
        case 55:
          uint64_t v26 = 40500;
          break;
        case 56:
          uint64_t v26 = 40600;
          break;
        case 57:
          uint64_t v26 = 40601;
          break;
        case 58:
          uint64_t v26 = 50000;
          break;
        case 59:
          uint64_t v26 = 50001;
          break;
        case 60:
          uint64_t v26 = 50002;
          break;
        case 61:
          uint64_t v26 = 99991;
          break;
        case 62:
          uint64_t v26 = 99992;
          break;
        case 63:
          uint64_t v26 = 99993;
          break;
        case 64:
          uint64_t v26 = -1101;
          break;
        case 65:
          uint64_t v26 = -1102;
          break;
        case 66:
          uint64_t v26 = -1103;
          break;
        case 67:
          uint64_t v26 = -1104;
          break;
        case 68:
          uint64_t v26 = -1110;
          break;
        case 69:
          uint64_t v26 = -1111;
          break;
        case 70:
          uint64_t v26 = -1112;
          break;
        case 71:
          uint64_t v26 = -1113;
          break;
        case 72:
          uint64_t v26 = -1114;
          break;
        case 73:
          uint64_t v26 = -1115;
          break;
        case 74:
          uint64_t v26 = -1116;
          break;
        case 75:
          uint64_t v26 = -1117;
          break;
        case 76:
          uint64_t v26 = -1118;
          break;
        case 77:
          uint64_t v26 = -1119;
          break;
        case 78:
          uint64_t v26 = -1201;
          break;
        case 79:
          uint64_t v26 = -1202;
          break;
        case 80:
          uint64_t v26 = -1203;
          break;
        case 81:
          uint64_t v26 = -1204;
          break;
        case 82:
          uint64_t v26 = -1402;
          break;
        case 83:
          uint64_t v26 = -1403;
          break;
        case 84:
          uint64_t v26 = -1404;
          break;
        case 85:
          uint64_t v26 = -1301;
          break;
        case 86:
          uint64_t v26 = -1302;
          break;
        case 87:
          uint64_t v26 = -1303;
          break;
        case 88:
          uint64_t v26 = -1304;
          break;
        case 89:
          uint64_t v26 = -1305;
          break;
        case 90:
          uint64_t v26 = -1306;
          break;
        case 91:
          uint64_t v26 = -1307;
          break;
        case 92:
          uint64_t v26 = -1308;
          break;
        case 93:
          uint64_t v26 = -1309;
          break;
        case 94:
          uint64_t v26 = -1310;
          break;
        case 95:
          uint64_t v26 = -1315;
          break;
        case 96:
          uint64_t v26 = -1316;
          break;
        case 97:
          uint64_t v26 = -1317;
          break;
        case 98:
          uint64_t v26 = -131600;
          break;
        case 99:
          uint64_t v26 = -2103;
          break;
        case 100:
          uint64_t v26 = -2104;
          break;
        case 101:
          uint64_t v26 = -2107;
          break;
        case 102:
          uint64_t v26 = -2110;
          break;
        case 103:
          uint64_t v26 = -2111;
          break;
        case 104:
          uint64_t v26 = -2112;
          break;
        case 105:
          uint64_t v26 = -2123;
          break;
        case 106:
          uint64_t v26 = -2124;
          break;
        case 107:
          uint64_t v26 = -2125;
          break;
        case 108:
          uint64_t v26 = -2126;
          break;
        case 109:
          uint64_t v26 = -2127;
          break;
        case 110:
          uint64_t v26 = -3101;
          break;
        case 111:
          uint64_t v26 = -3102;
          break;
        case 112:
          uint64_t v26 = -3103;
          break;
        case 113:
          uint64_t v26 = -3104;
          break;
        case 114:
          uint64_t v26 = -3105;
          break;
        case 115:
          uint64_t v26 = -3106;
          break;
        case 116:
          uint64_t v26 = -3107;
          break;
        case 117:
          uint64_t v26 = -3108;
          break;
        case 118:
          uint64_t v26 = -3109;
          break;
        case 119:
          uint64_t v26 = -3110;
          break;
        case 120:
          uint64_t v26 = -3111;
          break;
        case 121:
          uint64_t v26 = -3112;
          break;
        case 122:
          uint64_t v26 = -3113;
          break;
        case 123:
          uint64_t v26 = -3151;
          break;
        case 124:
          uint64_t v26 = -3152;
          break;
        case 125:
          uint64_t v26 = -3153;
          break;
        case 126:
          uint64_t v26 = -3154;
          break;
        case 127:
          uint64_t v26 = -3155;
          break;
        case 128:
          uint64_t v26 = -3156;
          break;
        case 129:
          uint64_t v26 = -3157;
          break;
        case 130:
          uint64_t v26 = -3158;
          break;
        case 131:
          uint64_t v26 = -3159;
          break;
        case 132:
          uint64_t v26 = -3161;
          break;
        case 133:
          uint64_t v26 = -3162;
          break;
        case 134:
          uint64_t v26 = -3163;
          break;
        case 135:
          uint64_t v26 = -3164;
          break;
        case 136:
          uint64_t v26 = -3165;
          break;
        case 137:
          uint64_t v26 = -3166;
          break;
        case 138:
          uint64_t v26 = -3167;
          break;
        case 139:
          uint64_t v26 = -3168;
          break;
        case 140:
          uint64_t v26 = -3169;
          break;
        case 141:
          uint64_t v26 = -3170;
          break;
        case 142:
          uint64_t v26 = -3171;
          break;
        case 143:
          uint64_t v26 = -3172;
          break;
        case 144:
          uint64_t v26 = -3173;
          break;
        case 145:
          uint64_t v26 = -3174;
          break;
        case 146:
          uint64_t v26 = -3175;
          break;
        case 147:
          uint64_t v26 = -3176;
          break;
        case 148:
          uint64_t v26 = -3177;
          break;
        case 149:
          uint64_t v26 = -3178;
          break;
        case 150:
          uint64_t v26 = -3179;
          break;
        case 151:
          uint64_t v26 = -3180;
          break;
        case 152:
          uint64_t v26 = -3181;
          break;
        case 153:
          uint64_t v26 = -3182;
          break;
        case 154:
          uint64_t v26 = -3183;
          break;
        case 155:
          uint64_t v26 = -3184;
          break;
        case 156:
          uint64_t v26 = -3185;
          break;
        case 157:
          uint64_t v26 = -3186;
          break;
        case 158:
          uint64_t v26 = -3187;
          break;
        case 159:
          uint64_t v26 = -3188;
          break;
        case 160:
          uint64_t v26 = -3189;
          break;
        case 161:
          uint64_t v26 = -3300;
          break;
        case 162:
          uint64_t v26 = -5108;
          break;
        case 163:
          uint64_t v26 = -6009;
          break;
        case 164:
          uint64_t v26 = -6010;
          break;
        case 165:
          uint64_t v26 = -6102;
          break;
        case 166:
          uint64_t v26 = -6103;
          break;
        case 167:
          uint64_t v26 = -6104;
          break;
        case 168:
          uint64_t v26 = -6105;
          break;
        case 169:
          uint64_t v26 = -8001;
          break;
        case 170:
          uint64_t v26 = -8301;
          break;
        case 171:
          uint64_t v26 = -8304;
          break;
        case 172:
          uint64_t v26 = -8400;
          break;
        case 173:
          uint64_t v26 = -8401;
          break;
        case 174:
          uint64_t v26 = -8403;
          break;
        case 175:
          uint64_t v26 = -8404;
          break;
        case 176:
          uint64_t v26 = -8428;
          break;
        case 177:
          uint64_t v26 = -8429;
          break;
        case 178:
          uint64_t v26 = -8433;
          break;
        case 179:
          uint64_t v26 = -8434;
          break;
        case 180:
          uint64_t v26 = -8500;
          break;
        case 181:
          uint64_t v26 = -8501;
          break;
        case 182:
          uint64_t v26 = -8502;
          break;
        case 183:
          uint64_t v26 = -8503;
          break;
        case 184:
          uint64_t v26 = -8504;
          break;
        case 185:
          uint64_t v26 = -22200;
          break;
        case 186:
          uint64_t v26 = -22201;
          break;
        case 187:
          uint64_t v26 = -22202;
          break;
        case 188:
          uint64_t v26 = -22203;
          break;
        case 189:
          uint64_t v26 = -22204;
          break;
        case 190:
          uint64_t v26 = -22205;
          break;
        case 191:
          uint64_t v26 = -22206;
          break;
        case 192:
          uint64_t v26 = -22207;
          break;
        case 193:
          uint64_t v26 = -22208;
          break;
        case 194:
          uint64_t v26 = -72200;
          break;
        case 195:
          uint64_t v26 = -72201;
          break;
        case 196:
          uint64_t v26 = -72202;
          break;
        case 197:
          uint64_t v26 = -72203;
          break;
        case 198:
          uint64_t v26 = -72204;
          break;
        case 199:
          uint64_t v26 = -72205;
          break;
        case 200:
          uint64_t v26 = -72206;
          break;
        case 201:
          uint64_t v26 = -72207;
          break;
        case 202:
          uint64_t v26 = -72208;
          break;
        case 203:
          uint64_t v26 = -72209;
          break;
        case 204:
          uint64_t v26 = -72210;
          break;
        case 205:
          uint64_t v26 = -72211;
          break;
        case 206:
          uint64_t v26 = -72780;
          break;
        case 207:
          uint64_t v26 = -72781;
          break;
        case 208:
          uint64_t v26 = -72782;
          break;
        default:
          break;
      }
      if (v25 != v26) {
        return 0;
      }
LABEL_440:
      if (v3 == 2)
      {
        if (v13 != 2) {
          return 0;
        }
      }
      else if (v13 == 2 || ((((v13 & 1) == 0) ^ v3) & 1) == 0)
      {
        return 0;
      }
      switch((int)v6)
      {
        case 209:
          if (v16 != 209) {
            return 0;
          }
          break;
        case 210:
          if (v16 != 210) {
            return 0;
          }
          break;
        case 211:
          if (v16 != 211) {
            return 0;
          }
          break;
        case 212:
          if (v16 != 212) {
            return 0;
          }
          break;
        case 213:
          if (v16 != 213) {
            return 0;
          }
          break;
        case 214:
          if (v16 != 214) {
            return 0;
          }
          break;
        case 215:
          if (v16 != 215) {
            return 0;
          }
          break;
        case 216:
          if (v16 != 216) {
            return 0;
          }
          break;
        case 217:
          if (v16 != 217) {
            return 0;
          }
          break;
        default:
          if ((v16 + 47) < 9u) {
            return 0;
          }
          uint64_t v27 = -1;
          switch(v6)
          {
            case 1:
              uint64_t v27 = -2;
              break;
            case 2:
              uint64_t v27 = -3;
              break;
            case 3:
              uint64_t v27 = -4;
              break;
            case 4:
              uint64_t v27 = -5;
              break;
            case 5:
              uint64_t v27 = -6;
              break;
            case 6:
              uint64_t v27 = -7;
              break;
            case 7:
              uint64_t v27 = -8;
              break;
            case 8:
              uint64_t v27 = -9;
              break;
            case 9:
              uint64_t v27 = -10;
              break;
            case 10:
              uint64_t v27 = -11;
              break;
            case 11:
              uint64_t v27 = -12;
              break;
            case 12:
              uint64_t v27 = -13;
              break;
            case 13:
              uint64_t v27 = -14;
              break;
            case 14:
              uint64_t v27 = -15;
              break;
            case 15:
              uint64_t v27 = -16;
              break;
            case 16:
              uint64_t v27 = -17;
              break;
            case 17:
              uint64_t v27 = -18;
              break;
            case 18:
              uint64_t v27 = -19;
              break;
            case 19:
              uint64_t v27 = -20;
              break;
            case 20:
              uint64_t v27 = -21;
              break;
            case 21:
              uint64_t v27 = -22;
              break;
            case 22:
              uint64_t v27 = -28;
              break;
            case 23:
              uint64_t v27 = -29;
              break;
            case 24:
              uint64_t v27 = 200;
              break;
            case 25:
              uint64_t v27 = 20000;
              break;
            case 26:
              uint64_t v27 = 20001;
              break;
            case 27:
              uint64_t v27 = 20100;
              break;
            case 28:
              uint64_t v27 = 40000;
              break;
            case 29:
              uint64_t v27 = 40010;
              break;
            case 30:
              uint64_t v27 = 40011;
              break;
            case 31:
              uint64_t v27 = 40012;
              break;
            case 32:
              uint64_t v27 = 40013;
              break;
            case 33:
              uint64_t v27 = 40014;
              break;
            case 34:
              uint64_t v27 = 40015;
              break;
            case 35:
              uint64_t v27 = 40020;
              break;
            case 36:
              uint64_t v27 = 40021;
              break;
            case 37:
              uint64_t v27 = 40022;
              break;
            case 38:
              uint64_t v27 = 40023;
              break;
            case 39:
              uint64_t v27 = 40024;
              break;
            case 40:
              uint64_t v27 = 40025;
              break;
            case 41:
              uint64_t v27 = 40026;
              break;
            case 42:
              uint64_t v27 = 40027;
              break;
            case 43:
              uint64_t v27 = 40028;
              break;
            case 44:
              uint64_t v27 = 40029;
              break;
            case 45:
              uint64_t v27 = 40030;
              break;
            case 46:
              uint64_t v27 = 40101;
              break;
            case 47:
              uint64_t v27 = 40102;
              break;
            case 48:
              uint64_t v27 = 40200;
              break;
            case 49:
              uint64_t v27 = 40201;
              break;
            case 50:
              uint64_t v27 = 40205;
              break;
            case 51:
              uint64_t v27 = 40401;
              break;
            case 52:
              uint64_t v27 = 40402;
              break;
            case 53:
              uint64_t v27 = 40403;
              break;
            case 54:
              uint64_t v27 = 40404;
              break;
            case 55:
              uint64_t v27 = 40500;
              break;
            case 56:
              uint64_t v27 = 40600;
              break;
            case 57:
              uint64_t v27 = 40601;
              break;
            case 58:
              uint64_t v27 = 50000;
              break;
            case 59:
              uint64_t v27 = 50001;
              break;
            case 60:
              uint64_t v27 = 50002;
              break;
            case 61:
              uint64_t v27 = 99991;
              break;
            case 62:
              uint64_t v27 = 99992;
              break;
            case 63:
              uint64_t v27 = 99993;
              break;
            case 64:
              uint64_t v27 = -1101;
              break;
            case 65:
              uint64_t v27 = -1102;
              break;
            case 66:
              uint64_t v27 = -1103;
              break;
            case 67:
              uint64_t v27 = -1104;
              break;
            case 68:
              uint64_t v27 = -1110;
              break;
            case 69:
              uint64_t v27 = -1111;
              break;
            case 70:
              uint64_t v27 = -1112;
              break;
            case 71:
              uint64_t v27 = -1113;
              break;
            case 72:
              uint64_t v27 = -1114;
              break;
            case 73:
              uint64_t v27 = -1115;
              break;
            case 74:
              uint64_t v27 = -1116;
              break;
            case 75:
              uint64_t v27 = -1117;
              break;
            case 76:
              uint64_t v27 = -1118;
              break;
            case 77:
              uint64_t v27 = -1119;
              break;
            case 78:
              uint64_t v27 = -1201;
              break;
            case 79:
              uint64_t v27 = -1202;
              break;
            case 80:
              uint64_t v27 = -1203;
              break;
            case 81:
              uint64_t v27 = -1204;
              break;
            case 82:
              uint64_t v27 = -1402;
              break;
            case 83:
              uint64_t v27 = -1403;
              break;
            case 84:
              uint64_t v27 = -1404;
              break;
            case 85:
              uint64_t v27 = -1301;
              break;
            case 86:
              uint64_t v27 = -1302;
              break;
            case 87:
              uint64_t v27 = -1303;
              break;
            case 88:
              uint64_t v27 = -1304;
              break;
            case 89:
              uint64_t v27 = -1305;
              break;
            case 90:
              uint64_t v27 = -1306;
              break;
            case 91:
              uint64_t v27 = -1307;
              break;
            case 92:
              uint64_t v27 = -1308;
              break;
            case 93:
              uint64_t v27 = -1309;
              break;
            case 94:
              uint64_t v27 = -1310;
              break;
            case 95:
              uint64_t v27 = -1315;
              break;
            case 96:
              uint64_t v27 = -1316;
              break;
            case 97:
              uint64_t v27 = -1317;
              break;
            case 98:
              uint64_t v27 = -131600;
              break;
            case 99:
              uint64_t v27 = -2103;
              break;
            case 100:
              uint64_t v27 = -2104;
              break;
            case 101:
              uint64_t v27 = -2107;
              break;
            case 102:
              uint64_t v27 = -2110;
              break;
            case 103:
              uint64_t v27 = -2111;
              break;
            case 104:
              uint64_t v27 = -2112;
              break;
            case 105:
              uint64_t v27 = -2123;
              break;
            case 106:
              uint64_t v27 = -2124;
              break;
            case 107:
              uint64_t v27 = -2125;
              break;
            case 108:
              uint64_t v27 = -2126;
              break;
            case 109:
              uint64_t v27 = -2127;
              break;
            case 110:
              uint64_t v27 = -3101;
              break;
            case 111:
              uint64_t v27 = -3102;
              break;
            case 112:
              uint64_t v27 = -3103;
              break;
            case 113:
              uint64_t v27 = -3104;
              break;
            case 114:
              uint64_t v27 = -3105;
              break;
            case 115:
              uint64_t v27 = -3106;
              break;
            case 116:
              uint64_t v27 = -3107;
              break;
            case 117:
              uint64_t v27 = -3108;
              break;
            case 118:
              uint64_t v27 = -3109;
              break;
            case 119:
              uint64_t v27 = -3110;
              break;
            case 120:
              uint64_t v27 = -3111;
              break;
            case 121:
              uint64_t v27 = -3112;
              break;
            case 122:
              uint64_t v27 = -3113;
              break;
            case 123:
              uint64_t v27 = -3151;
              break;
            case 124:
              uint64_t v27 = -3152;
              break;
            case 125:
              uint64_t v27 = -3153;
              break;
            case 126:
              uint64_t v27 = -3154;
              break;
            case 127:
              uint64_t v27 = -3155;
              break;
            case 128:
              uint64_t v27 = -3156;
              break;
            case 129:
              uint64_t v27 = -3157;
              break;
            case 130:
              uint64_t v27 = -3158;
              break;
            case 131:
              uint64_t v27 = -3159;
              break;
            case 132:
              uint64_t v27 = -3161;
              break;
            case 133:
              uint64_t v27 = -3162;
              break;
            case 134:
              uint64_t v27 = -3163;
              break;
            case 135:
              uint64_t v27 = -3164;
              break;
            case 136:
              uint64_t v27 = -3165;
              break;
            case 137:
              uint64_t v27 = -3166;
              break;
            case 138:
              uint64_t v27 = -3167;
              break;
            case 139:
              uint64_t v27 = -3168;
              break;
            case 140:
              uint64_t v27 = -3169;
              break;
            case 141:
              uint64_t v27 = -3170;
              break;
            case 142:
              uint64_t v27 = -3171;
              break;
            case 143:
              uint64_t v27 = -3172;
              break;
            case 144:
              uint64_t v27 = -3173;
              break;
            case 145:
              uint64_t v27 = -3174;
              break;
            case 146:
              uint64_t v27 = -3175;
              break;
            case 147:
              uint64_t v27 = -3176;
              break;
            case 148:
              uint64_t v27 = -3177;
              break;
            case 149:
              uint64_t v27 = -3178;
              break;
            case 150:
              uint64_t v27 = -3179;
              break;
            case 151:
              uint64_t v27 = -3180;
              break;
            case 152:
              uint64_t v27 = -3181;
              break;
            case 153:
              uint64_t v27 = -3182;
              break;
            case 154:
              uint64_t v27 = -3183;
              break;
            case 155:
              uint64_t v27 = -3184;
              break;
            case 156:
              uint64_t v27 = -3185;
              break;
            case 157:
              uint64_t v27 = -3186;
              break;
            case 158:
              uint64_t v27 = -3187;
              break;
            case 159:
              uint64_t v27 = -3188;
              break;
            case 160:
              uint64_t v27 = -3189;
              break;
            case 161:
              uint64_t v27 = -3300;
              break;
            case 162:
              uint64_t v27 = -5108;
              break;
            case 163:
              uint64_t v27 = -6009;
              break;
            case 164:
              uint64_t v27 = -6010;
              break;
            case 165:
              uint64_t v27 = -6102;
              break;
            case 166:
              uint64_t v27 = -6103;
              break;
            case 167:
              uint64_t v27 = -6104;
              break;
            case 168:
              uint64_t v27 = -6105;
              break;
            case 169:
              uint64_t v27 = -8001;
              break;
            case 170:
              uint64_t v27 = -8301;
              break;
            case 171:
              uint64_t v27 = -8304;
              break;
            case 172:
              uint64_t v27 = -8400;
              break;
            case 173:
              uint64_t v27 = -8401;
              break;
            case 174:
              uint64_t v27 = -8403;
              break;
            case 175:
              uint64_t v27 = -8404;
              break;
            case 176:
              uint64_t v27 = -8428;
              break;
            case 177:
              uint64_t v27 = -8429;
              break;
            case 178:
              uint64_t v27 = -8433;
              break;
            case 179:
              uint64_t v27 = -8434;
              break;
            case 180:
              uint64_t v27 = -8500;
              break;
            case 181:
              uint64_t v27 = -8501;
              break;
            case 182:
              uint64_t v27 = -8502;
              break;
            case 183:
              uint64_t v27 = -8503;
              break;
            case 184:
              uint64_t v27 = -8504;
              break;
            case 185:
              uint64_t v27 = -22200;
              break;
            case 186:
              uint64_t v27 = -22201;
              break;
            case 187:
              uint64_t v27 = -22202;
              break;
            case 188:
              uint64_t v27 = -22203;
              break;
            case 189:
              uint64_t v27 = -22204;
              break;
            case 190:
              uint64_t v27 = -22205;
              break;
            case 191:
              uint64_t v27 = -22206;
              break;
            case 192:
              uint64_t v27 = -22207;
              break;
            case 193:
              uint64_t v27 = -22208;
              break;
            case 194:
              uint64_t v27 = -72200;
              break;
            case 195:
              uint64_t v27 = -72201;
              break;
            case 196:
              uint64_t v27 = -72202;
              break;
            case 197:
              uint64_t v27 = -72203;
              break;
            case 198:
              uint64_t v27 = -72204;
              break;
            case 199:
              uint64_t v27 = -72205;
              break;
            case 200:
              uint64_t v27 = -72206;
              break;
            case 201:
              uint64_t v27 = -72207;
              break;
            case 202:
              uint64_t v27 = -72208;
              break;
            case 203:
              uint64_t v27 = -72209;
              break;
            case 204:
              uint64_t v27 = -72210;
              break;
            case 205:
              uint64_t v27 = -72211;
              break;
            case 206:
              uint64_t v27 = -72780;
              break;
            case 207:
              uint64_t v27 = -72781;
              break;
            case 208:
              uint64_t v27 = -72782;
              break;
            default:
              break;
          }
          uint64_t v28 = -1;
          switch(v16)
          {
            case 1:
              uint64_t v28 = -2;
              break;
            case 2:
              uint64_t v28 = -3;
              break;
            case 3:
              uint64_t v28 = -4;
              break;
            case 4:
              uint64_t v28 = -5;
              break;
            case 5:
              uint64_t v28 = -6;
              break;
            case 6:
              uint64_t v28 = -7;
              break;
            case 7:
              uint64_t v28 = -8;
              break;
            case 8:
              uint64_t v28 = -9;
              break;
            case 9:
              uint64_t v28 = -10;
              break;
            case 10:
              uint64_t v28 = -11;
              break;
            case 11:
              uint64_t v28 = -12;
              break;
            case 12:
              uint64_t v28 = -13;
              break;
            case 13:
              uint64_t v28 = -14;
              break;
            case 14:
              uint64_t v28 = -15;
              break;
            case 15:
              uint64_t v28 = -16;
              break;
            case 16:
              uint64_t v28 = -17;
              break;
            case 17:
              uint64_t v28 = -18;
              break;
            case 18:
              uint64_t v28 = -19;
              break;
            case 19:
              uint64_t v28 = -20;
              break;
            case 20:
              uint64_t v28 = -21;
              break;
            case 21:
              uint64_t v28 = -22;
              break;
            case 22:
              uint64_t v28 = -28;
              break;
            case 23:
              uint64_t v28 = -29;
              break;
            case 24:
              uint64_t v28 = 200;
              break;
            case 25:
              uint64_t v28 = 20000;
              break;
            case 26:
              uint64_t v28 = 20001;
              break;
            case 27:
              uint64_t v28 = 20100;
              break;
            case 28:
              uint64_t v28 = 40000;
              break;
            case 29:
              uint64_t v28 = 40010;
              break;
            case 30:
              uint64_t v28 = 40011;
              break;
            case 31:
              uint64_t v28 = 40012;
              break;
            case 32:
              uint64_t v28 = 40013;
              break;
            case 33:
              uint64_t v28 = 40014;
              break;
            case 34:
              uint64_t v28 = 40015;
              break;
            case 35:
              uint64_t v28 = 40020;
              break;
            case 36:
              uint64_t v28 = 40021;
              break;
            case 37:
              uint64_t v28 = 40022;
              break;
            case 38:
              uint64_t v28 = 40023;
              break;
            case 39:
              uint64_t v28 = 40024;
              break;
            case 40:
              uint64_t v28 = 40025;
              break;
            case 41:
              uint64_t v28 = 40026;
              break;
            case 42:
              uint64_t v28 = 40027;
              break;
            case 43:
              uint64_t v28 = 40028;
              break;
            case 44:
              uint64_t v28 = 40029;
              break;
            case 45:
              uint64_t v28 = 40030;
              break;
            case 46:
              uint64_t v28 = 40101;
              break;
            case 47:
              uint64_t v28 = 40102;
              break;
            case 48:
              uint64_t v28 = 40200;
              break;
            case 49:
              uint64_t v28 = 40201;
              break;
            case 50:
              uint64_t v28 = 40205;
              break;
            case 51:
              uint64_t v28 = 40401;
              break;
            case 52:
              uint64_t v28 = 40402;
              break;
            case 53:
              uint64_t v28 = 40403;
              break;
            case 54:
              uint64_t v28 = 40404;
              break;
            case 55:
              uint64_t v28 = 40500;
              break;
            case 56:
              uint64_t v28 = 40600;
              break;
            case 57:
              uint64_t v28 = 40601;
              break;
            case 58:
              uint64_t v28 = 50000;
              break;
            case 59:
              uint64_t v28 = 50001;
              break;
            case 60:
              uint64_t v28 = 50002;
              break;
            case 61:
              uint64_t v28 = 99991;
              break;
            case 62:
              uint64_t v28 = 99992;
              break;
            case 63:
              uint64_t v28 = 99993;
              break;
            case 64:
              uint64_t v28 = -1101;
              break;
            case 65:
              uint64_t v28 = -1102;
              break;
            case 66:
              uint64_t v28 = -1103;
              break;
            case 67:
              uint64_t v28 = -1104;
              break;
            case 68:
              uint64_t v28 = -1110;
              break;
            case 69:
              uint64_t v28 = -1111;
              break;
            case 70:
              uint64_t v28 = -1112;
              break;
            case 71:
              uint64_t v28 = -1113;
              break;
            case 72:
              uint64_t v28 = -1114;
              break;
            case 73:
              uint64_t v28 = -1115;
              break;
            case 74:
              uint64_t v28 = -1116;
              break;
            case 75:
              uint64_t v28 = -1117;
              break;
            case 76:
              uint64_t v28 = -1118;
              break;
            case 77:
              uint64_t v28 = -1119;
              break;
            case 78:
              uint64_t v28 = -1201;
              break;
            case 79:
              uint64_t v28 = -1202;
              break;
            case 80:
              uint64_t v28 = -1203;
              break;
            case 81:
              uint64_t v28 = -1204;
              break;
            case 82:
              uint64_t v28 = -1402;
              break;
            case 83:
              uint64_t v28 = -1403;
              break;
            case 84:
              uint64_t v28 = -1404;
              break;
            case 85:
              uint64_t v28 = -1301;
              break;
            case 86:
              uint64_t v28 = -1302;
              break;
            case 87:
              uint64_t v28 = -1303;
              break;
            case 88:
              uint64_t v28 = -1304;
              break;
            case 89:
              uint64_t v28 = -1305;
              break;
            case 90:
              uint64_t v28 = -1306;
              break;
            case 91:
              uint64_t v28 = -1307;
              break;
            case 92:
              uint64_t v28 = -1308;
              break;
            case 93:
              uint64_t v28 = -1309;
              break;
            case 94:
              uint64_t v28 = -1310;
              break;
            case 95:
              uint64_t v28 = -1315;
              break;
            case 96:
              uint64_t v28 = -1316;
              break;
            case 97:
              uint64_t v28 = -1317;
              break;
            case 98:
              uint64_t v28 = -131600;
              break;
            case 99:
              uint64_t v28 = -2103;
              break;
            case 100:
              uint64_t v28 = -2104;
              break;
            case 101:
              uint64_t v28 = -2107;
              break;
            case 102:
              uint64_t v28 = -2110;
              break;
            case 103:
              uint64_t v28 = -2111;
              break;
            case 104:
              uint64_t v28 = -2112;
              break;
            case 105:
              uint64_t v28 = -2123;
              break;
            case 106:
              uint64_t v28 = -2124;
              break;
            case 107:
              uint64_t v28 = -2125;
              break;
            case 108:
              uint64_t v28 = -2126;
              break;
            case 109:
              uint64_t v28 = -2127;
              break;
            case 110:
              uint64_t v28 = -3101;
              break;
            case 111:
              uint64_t v28 = -3102;
              break;
            case 112:
              uint64_t v28 = -3103;
              break;
            case 113:
              uint64_t v28 = -3104;
              break;
            case 114:
              uint64_t v28 = -3105;
              break;
            case 115:
              uint64_t v28 = -3106;
              break;
            case 116:
              uint64_t v28 = -3107;
              break;
            case 117:
              uint64_t v28 = -3108;
              break;
            case 118:
              uint64_t v28 = -3109;
              break;
            case 119:
              uint64_t v28 = -3110;
              break;
            case 120:
              uint64_t v28 = -3111;
              break;
            case 121:
              uint64_t v28 = -3112;
              break;
            case 122:
              uint64_t v28 = -3113;
              break;
            case 123:
              uint64_t v28 = -3151;
              break;
            case 124:
              uint64_t v28 = -3152;
              break;
            case 125:
              uint64_t v28 = -3153;
              break;
            case 126:
              uint64_t v28 = -3154;
              break;
            case 127:
              uint64_t v28 = -3155;
              break;
            case 128:
              uint64_t v28 = -3156;
              break;
            case 129:
              uint64_t v28 = -3157;
              break;
            case 130:
              uint64_t v28 = -3158;
              break;
            case 131:
              uint64_t v28 = -3159;
              break;
            case 132:
              uint64_t v28 = -3161;
              break;
            case 133:
              uint64_t v28 = -3162;
              break;
            case 134:
              uint64_t v28 = -3163;
              break;
            case 135:
              uint64_t v28 = -3164;
              break;
            case 136:
              uint64_t v28 = -3165;
              break;
            case 137:
              uint64_t v28 = -3166;
              break;
            case 138:
              uint64_t v28 = -3167;
              break;
            case 139:
              uint64_t v28 = -3168;
              break;
            case 140:
              uint64_t v28 = -3169;
              break;
            case 141:
              uint64_t v28 = -3170;
              break;
            case 142:
              uint64_t v28 = -3171;
              break;
            case 143:
              uint64_t v28 = -3172;
              break;
            case 144:
              uint64_t v28 = -3173;
              break;
            case 145:
              uint64_t v28 = -3174;
              break;
            case 146:
              uint64_t v28 = -3175;
              break;
            case 147:
              uint64_t v28 = -3176;
              break;
            case 148:
              uint64_t v28 = -3177;
              break;
            case 149:
              uint64_t v28 = -3178;
              break;
            case 150:
              uint64_t v28 = -3179;
              break;
            case 151:
              uint64_t v28 = -3180;
              break;
            case 152:
              uint64_t v28 = -3181;
              break;
            case 153:
              uint64_t v28 = -3182;
              break;
            case 154:
              uint64_t v28 = -3183;
              break;
            case 155:
              uint64_t v28 = -3184;
              break;
            case 156:
              uint64_t v28 = -3185;
              break;
            case 157:
              uint64_t v28 = -3186;
              break;
            case 158:
              uint64_t v28 = -3187;
              break;
            case 159:
              uint64_t v28 = -3188;
              break;
            case 160:
              uint64_t v28 = -3189;
              break;
            case 161:
              uint64_t v28 = -3300;
              break;
            case 162:
              uint64_t v28 = -5108;
              break;
            case 163:
              uint64_t v28 = -6009;
              break;
            case 164:
              uint64_t v28 = -6010;
              break;
            case 165:
              uint64_t v28 = -6102;
              break;
            case 166:
              uint64_t v28 = -6103;
              break;
            case 167:
              uint64_t v28 = -6104;
              break;
            case 168:
              uint64_t v28 = -6105;
              break;
            case 169:
              uint64_t v28 = -8001;
              break;
            case 170:
              uint64_t v28 = -8301;
              break;
            case 171:
              uint64_t v28 = -8304;
              break;
            case 172:
              uint64_t v28 = -8400;
              break;
            case 173:
              uint64_t v28 = -8401;
              break;
            case 174:
              uint64_t v28 = -8403;
              break;
            case 175:
              uint64_t v28 = -8404;
              break;
            case 176:
              uint64_t v28 = -8428;
              break;
            case 177:
              uint64_t v28 = -8429;
              break;
            case 178:
              uint64_t v28 = -8433;
              break;
            case 179:
              uint64_t v28 = -8434;
              break;
            case 180:
              uint64_t v28 = -8500;
              break;
            case 181:
              uint64_t v28 = -8501;
              break;
            case 182:
              uint64_t v28 = -8502;
              break;
            case 183:
              uint64_t v28 = -8503;
              break;
            case 184:
              uint64_t v28 = -8504;
              break;
            case 185:
              uint64_t v28 = -22200;
              break;
            case 186:
              uint64_t v28 = -22201;
              break;
            case 187:
              uint64_t v28 = -22202;
              break;
            case 188:
              uint64_t v28 = -22203;
              break;
            case 189:
              uint64_t v28 = -22204;
              break;
            case 190:
              uint64_t v28 = -22205;
              break;
            case 191:
              uint64_t v28 = -22206;
              break;
            case 192:
              uint64_t v28 = -22207;
              break;
            case 193:
              uint64_t v28 = -22208;
              break;
            case 194:
              uint64_t v28 = -72200;
              break;
            case 195:
              uint64_t v28 = -72201;
              break;
            case 196:
              uint64_t v28 = -72202;
              break;
            case 197:
              uint64_t v28 = -72203;
              break;
            case 198:
              uint64_t v28 = -72204;
              break;
            case 199:
              uint64_t v28 = -72205;
              break;
            case 200:
              uint64_t v28 = -72206;
              break;
            case 201:
              uint64_t v28 = -72207;
              break;
            case 202:
              uint64_t v28 = -72208;
              break;
            case 203:
              uint64_t v28 = -72209;
              break;
            case 204:
              uint64_t v28 = -72210;
              break;
            case 205:
              uint64_t v28 = -72211;
              break;
            case 206:
              uint64_t v28 = -72780;
              break;
            case 207:
              uint64_t v28 = -72781;
              break;
            case 208:
              uint64_t v28 = -72782;
              break;
            default:
              break;
          }
          if (v27 != v28) {
            return 0;
          }
          break;
      }
      if (v5 == 2)
      {
        if (v15 != 2) {
          return 0;
        }
      }
      else if (v15 == 2 || ((((v15 & 1) == 0) ^ v5) & 1) == 0)
      {
        return 0;
      }
      if (!sub_214C80D1C(v7, v8 | (v9 << 8), v17, v18 | (v19 << 8))) {
        return 0;
      }
      return sub_214C80D1C(v10, v11 | (v12 << 8), v20, v21 | (v23 << 8));
  }
}

uint64_t sub_214CF36AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  int v6 = *((unsigned __int8 *)a1 + 16);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = *((unsigned __int8 *)a1 + 40);
  uint64_t v10 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v12 = *((unsigned __int8 *)a1 + 64);
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v15 = *((unsigned __int8 *)a2 + 16);
  uint64_t v17 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v18 = *((unsigned __int8 *)a2 + 40);
  uint64_t v20 = a2[6];
  uint64_t v19 = a2[7];
  int v21 = v6 - 209;
  uint64_t v22 = *((unsigned __int8 *)a2 + 64);
  uint64_t v23 = (v6 - 209);
  switch(v21)
  {
    case 0:
      if (v15 == 209) {
        goto LABEL_440;
      }
      return 0;
    case 1:
      if (v15 != 210) {
        return 0;
      }
      goto LABEL_440;
    case 2:
      if (v15 != 211) {
        return 0;
      }
      goto LABEL_440;
    case 3:
      if (v15 != 212) {
        return 0;
      }
      goto LABEL_440;
    case 4:
      if (v15 != 213) {
        return 0;
      }
      goto LABEL_440;
    case 5:
      if (v15 != 214) {
        return 0;
      }
      goto LABEL_440;
    case 6:
      if (v15 != 215) {
        return 0;
      }
      goto LABEL_440;
    case 7:
      if (v15 != 216) {
        return 0;
      }
      goto LABEL_440;
    case 8:
      if (v15 != 217) {
        return 0;
      }
      goto LABEL_440;
    default:
      if ((v15 + 47) < 9u) {
        return 0;
      }
      uint64_t v24 = -1;
      switch(v23)
      {
        case 1:
          uint64_t v24 = -2;
          break;
        case 2:
          uint64_t v24 = -3;
          break;
        case 3:
          uint64_t v24 = -4;
          break;
        case 4:
          uint64_t v24 = -5;
          break;
        case 5:
          uint64_t v24 = -6;
          break;
        case 6:
          uint64_t v24 = -7;
          break;
        case 7:
          uint64_t v24 = -8;
          break;
        case 8:
          uint64_t v24 = -9;
          break;
        case 9:
          uint64_t v24 = -10;
          break;
        case 10:
          uint64_t v24 = -11;
          break;
        case 11:
          uint64_t v24 = -12;
          break;
        case 12:
          uint64_t v24 = -13;
          break;
        case 13:
          uint64_t v24 = -14;
          break;
        case 14:
          uint64_t v24 = -15;
          break;
        case 15:
          uint64_t v24 = -16;
          break;
        case 16:
          uint64_t v24 = -17;
          break;
        case 17:
          uint64_t v24 = -18;
          break;
        case 18:
          uint64_t v24 = -19;
          break;
        case 19:
          uint64_t v24 = -20;
          break;
        case 20:
          uint64_t v24 = -21;
          break;
        case 21:
          uint64_t v24 = -22;
          break;
        case 22:
          uint64_t v24 = -28;
          break;
        case 23:
          uint64_t v24 = -29;
          break;
        case 24:
          uint64_t v24 = 200;
          break;
        case 25:
          uint64_t v24 = 20000;
          break;
        case 26:
          uint64_t v24 = 20001;
          break;
        case 27:
          uint64_t v24 = 20100;
          break;
        case 28:
          uint64_t v24 = 40000;
          break;
        case 29:
          uint64_t v24 = 40010;
          break;
        case 30:
          uint64_t v24 = 40011;
          break;
        case 31:
          uint64_t v24 = 40012;
          break;
        case 32:
          uint64_t v24 = 40013;
          break;
        case 33:
          uint64_t v24 = 40014;
          break;
        case 34:
          uint64_t v24 = 40015;
          break;
        case 35:
          uint64_t v24 = 40020;
          break;
        case 36:
          uint64_t v24 = 40021;
          break;
        case 37:
          uint64_t v24 = 40022;
          break;
        case 38:
          uint64_t v24 = 40023;
          break;
        case 39:
          uint64_t v24 = 40024;
          break;
        case 40:
          uint64_t v24 = 40025;
          break;
        case 41:
          uint64_t v24 = 40026;
          break;
        case 42:
          uint64_t v24 = 40027;
          break;
        case 43:
          uint64_t v24 = 40028;
          break;
        case 44:
          uint64_t v24 = 40029;
          break;
        case 45:
          uint64_t v24 = 40030;
          break;
        case 46:
          uint64_t v24 = 40101;
          break;
        case 47:
          uint64_t v24 = 40102;
          break;
        case 48:
          uint64_t v24 = 40200;
          break;
        case 49:
          uint64_t v24 = 40201;
          break;
        case 50:
          uint64_t v24 = 40205;
          break;
        case 51:
          uint64_t v24 = 40401;
          break;
        case 52:
          uint64_t v24 = 40402;
          break;
        case 53:
          uint64_t v24 = 40403;
          break;
        case 54:
          uint64_t v24 = 40404;
          break;
        case 55:
          uint64_t v24 = 40500;
          break;
        case 56:
          uint64_t v24 = 40600;
          break;
        case 57:
          uint64_t v24 = 40601;
          break;
        case 58:
          uint64_t v24 = 50000;
          break;
        case 59:
          uint64_t v24 = 50001;
          break;
        case 60:
          uint64_t v24 = 50002;
          break;
        case 61:
          uint64_t v24 = 99991;
          break;
        case 62:
          uint64_t v24 = 99992;
          break;
        case 63:
          uint64_t v24 = 99993;
          break;
        case 64:
          uint64_t v24 = -1101;
          break;
        case 65:
          uint64_t v24 = -1102;
          break;
        case 66:
          uint64_t v24 = -1103;
          break;
        case 67:
          uint64_t v24 = -1104;
          break;
        case 68:
          uint64_t v24 = -1110;
          break;
        case 69:
          uint64_t v24 = -1111;
          break;
        case 70:
          uint64_t v24 = -1112;
          break;
        case 71:
          uint64_t v24 = -1113;
          break;
        case 72:
          uint64_t v24 = -1114;
          break;
        case 73:
          uint64_t v24 = -1115;
          break;
        case 74:
          uint64_t v24 = -1116;
          break;
        case 75:
          uint64_t v24 = -1117;
          break;
        case 76:
          uint64_t v24 = -1118;
          break;
        case 77:
          uint64_t v24 = -1119;
          break;
        case 78:
          uint64_t v24 = -1201;
          break;
        case 79:
          uint64_t v24 = -1202;
          break;
        case 80:
          uint64_t v24 = -1203;
          break;
        case 81:
          uint64_t v24 = -1204;
          break;
        case 82:
          uint64_t v24 = -1402;
          break;
        case 83:
          uint64_t v24 = -1403;
          break;
        case 84:
          uint64_t v24 = -1404;
          break;
        case 85:
          uint64_t v24 = -1301;
          break;
        case 86:
          uint64_t v24 = -1302;
          break;
        case 87:
          uint64_t v24 = -1303;
          break;
        case 88:
          uint64_t v24 = -1304;
          break;
        case 89:
          uint64_t v24 = -1305;
          break;
        case 90:
          uint64_t v24 = -1306;
          break;
        case 91:
          uint64_t v24 = -1307;
          break;
        case 92:
          uint64_t v24 = -1308;
          break;
        case 93:
          uint64_t v24 = -1309;
          break;
        case 94:
          uint64_t v24 = -1310;
          break;
        case 95:
          uint64_t v24 = -1315;
          break;
        case 96:
          uint64_t v24 = -1316;
          break;
        case 97:
          uint64_t v24 = -1317;
          break;
        case 98:
          uint64_t v24 = -131600;
          break;
        case 99:
          uint64_t v24 = -2103;
          break;
        case 100:
          uint64_t v24 = -2104;
          break;
        case 101:
          uint64_t v24 = -2107;
          break;
        case 102:
          uint64_t v24 = -2110;
          break;
        case 103:
          uint64_t v24 = -2111;
          break;
        case 104:
          uint64_t v24 = -2112;
          break;
        case 105:
          uint64_t v24 = -2123;
          break;
        case 106:
          uint64_t v24 = -2124;
          break;
        case 107:
          uint64_t v24 = -2125;
          break;
        case 108:
          uint64_t v24 = -2126;
          break;
        case 109:
          uint64_t v24 = -2127;
          break;
        case 110:
          uint64_t v24 = -3101;
          break;
        case 111:
          uint64_t v24 = -3102;
          break;
        case 112:
          uint64_t v24 = -3103;
          break;
        case 113:
          uint64_t v24 = -3104;
          break;
        case 114:
          uint64_t v24 = -3105;
          break;
        case 115:
          uint64_t v24 = -3106;
          break;
        case 116:
          uint64_t v24 = -3107;
          break;
        case 117:
          uint64_t v24 = -3108;
          break;
        case 118:
          uint64_t v24 = -3109;
          break;
        case 119:
          uint64_t v24 = -3110;
          break;
        case 120:
          uint64_t v24 = -3111;
          break;
        case 121:
          uint64_t v24 = -3112;
          break;
        case 122:
          uint64_t v24 = -3113;
          break;
        case 123:
          uint64_t v24 = -3151;
          break;
        case 124:
          uint64_t v24 = -3152;
          break;
        case 125:
          uint64_t v24 = -3153;
          break;
        case 126:
          uint64_t v24 = -3154;
          break;
        case 127:
          uint64_t v24 = -3155;
          break;
        case 128:
          uint64_t v24 = -3156;
          break;
        case 129:
          uint64_t v24 = -3157;
          break;
        case 130:
          uint64_t v24 = -3158;
          break;
        case 131:
          uint64_t v24 = -3159;
          break;
        case 132:
          uint64_t v24 = -3161;
          break;
        case 133:
          uint64_t v24 = -3162;
          break;
        case 134:
          uint64_t v24 = -3163;
          break;
        case 135:
          uint64_t v24 = -3164;
          break;
        case 136:
          uint64_t v24 = -3165;
          break;
        case 137:
          uint64_t v24 = -3166;
          break;
        case 138:
          uint64_t v24 = -3167;
          break;
        case 139:
          uint64_t v24 = -3168;
          break;
        case 140:
          uint64_t v24 = -3169;
          break;
        case 141:
          uint64_t v24 = -3170;
          break;
        case 142:
          uint64_t v24 = -3171;
          break;
        case 143:
          uint64_t v24 = -3172;
          break;
        case 144:
          uint64_t v24 = -3173;
          break;
        case 145:
          uint64_t v24 = -3174;
          break;
        case 146:
          uint64_t v24 = -3175;
          break;
        case 147:
          uint64_t v24 = -3176;
          break;
        case 148:
          uint64_t v24 = -3177;
          break;
        case 149:
          uint64_t v24 = -3178;
          break;
        case 150:
          uint64_t v24 = -3179;
          break;
        case 151:
          uint64_t v24 = -3180;
          break;
        case 152:
          uint64_t v24 = -3181;
          break;
        case 153:
          uint64_t v24 = -3182;
          break;
        case 154:
          uint64_t v24 = -3183;
          break;
        case 155:
          uint64_t v24 = -3184;
          break;
        case 156:
          uint64_t v24 = -3185;
          break;
        case 157:
          uint64_t v24 = -3186;
          break;
        case 158:
          uint64_t v24 = -3187;
          break;
        case 159:
          uint64_t v24 = -3188;
          break;
        case 160:
          uint64_t v24 = -3189;
          break;
        case 161:
          uint64_t v24 = -3300;
          break;
        case 162:
          uint64_t v24 = -5108;
          break;
        case 163:
          uint64_t v24 = -6009;
          break;
        case 164:
          uint64_t v24 = -6010;
          break;
        case 165:
          uint64_t v24 = -6102;
          break;
        case 166:
          uint64_t v24 = -6103;
          break;
        case 167:
          uint64_t v24 = -6104;
          break;
        case 168:
          uint64_t v24 = -6105;
          break;
        case 169:
          uint64_t v24 = -8001;
          break;
        case 170:
          uint64_t v24 = -8301;
          break;
        case 171:
          uint64_t v24 = -8304;
          break;
        case 172:
          uint64_t v24 = -8400;
          break;
        case 173:
          uint64_t v24 = -8401;
          break;
        case 174:
          uint64_t v24 = -8403;
          break;
        case 175:
          uint64_t v24 = -8404;
          break;
        case 176:
          uint64_t v24 = -8428;
          break;
        case 177:
          uint64_t v24 = -8429;
          break;
        case 178:
          uint64_t v24 = -8433;
          break;
        case 179:
          uint64_t v24 = -8434;
          break;
        case 180:
          uint64_t v24 = -8500;
          break;
        case 181:
          uint64_t v24 = -8501;
          break;
        case 182:
          uint64_t v24 = -8502;
          break;
        case 183:
          uint64_t v24 = -8503;
          break;
        case 184:
          uint64_t v24 = -8504;
          break;
        case 185:
          uint64_t v24 = -22200;
          break;
        case 186:
          uint64_t v24 = -22201;
          break;
        case 187:
          uint64_t v24 = -22202;
          break;
        case 188:
          uint64_t v24 = -22203;
          break;
        case 189:
          uint64_t v24 = -22204;
          break;
        case 190:
          uint64_t v24 = -22205;
          break;
        case 191:
          uint64_t v24 = -22206;
          break;
        case 192:
          uint64_t v24 = -22207;
          break;
        case 193:
          uint64_t v24 = -22208;
          break;
        case 194:
          uint64_t v24 = -72200;
          break;
        case 195:
          uint64_t v24 = -72201;
          break;
        case 196:
          uint64_t v24 = -72202;
          break;
        case 197:
          uint64_t v24 = -72203;
          break;
        case 198:
          uint64_t v24 = -72204;
          break;
        case 199:
          uint64_t v24 = -72205;
          break;
        case 200:
          uint64_t v24 = -72206;
          break;
        case 201:
          uint64_t v24 = -72207;
          break;
        case 202:
          uint64_t v24 = -72208;
          break;
        case 203:
          uint64_t v24 = -72209;
          break;
        case 204:
          uint64_t v24 = -72210;
          break;
        case 205:
          uint64_t v24 = -72211;
          break;
        case 206:
          uint64_t v24 = -72780;
          break;
        case 207:
          uint64_t v24 = -72781;
          break;
        case 208:
          uint64_t v24 = -72782;
          break;
        default:
          break;
      }
      uint64_t v25 = -1;
      switch(v15)
      {
        case 1:
          uint64_t v25 = -2;
          break;
        case 2:
          uint64_t v25 = -3;
          break;
        case 3:
          uint64_t v25 = -4;
          break;
        case 4:
          uint64_t v25 = -5;
          break;
        case 5:
          uint64_t v25 = -6;
          break;
        case 6:
          uint64_t v25 = -7;
          break;
        case 7:
          uint64_t v25 = -8;
          break;
        case 8:
          uint64_t v25 = -9;
          break;
        case 9:
          uint64_t v25 = -10;
          break;
        case 10:
          uint64_t v25 = -11;
          break;
        case 11:
          uint64_t v25 = -12;
          break;
        case 12:
          uint64_t v25 = -13;
          break;
        case 13:
          uint64_t v25 = -14;
          break;
        case 14:
          uint64_t v25 = -15;
          break;
        case 15:
          uint64_t v25 = -16;
          break;
        case 16:
          uint64_t v25 = -17;
          break;
        case 17:
          uint64_t v25 = -18;
          break;
        case 18:
          uint64_t v25 = -19;
          break;
        case 19:
          uint64_t v25 = -20;
          break;
        case 20:
          uint64_t v25 = -21;
          break;
        case 21:
          uint64_t v25 = -22;
          break;
        case 22:
          uint64_t v25 = -28;
          break;
        case 23:
          uint64_t v25 = -29;
          break;
        case 24:
          uint64_t v25 = 200;
          break;
        case 25:
          uint64_t v25 = 20000;
          break;
        case 26:
          uint64_t v25 = 20001;
          break;
        case 27:
          uint64_t v25 = 20100;
          break;
        case 28:
          uint64_t v25 = 40000;
          break;
        case 29:
          uint64_t v25 = 40010;
          break;
        case 30:
          uint64_t v25 = 40011;
          break;
        case 31:
          uint64_t v25 = 40012;
          break;
        case 32:
          uint64_t v25 = 40013;
          break;
        case 33:
          uint64_t v25 = 40014;
          break;
        case 34:
          uint64_t v25 = 40015;
          break;
        case 35:
          uint64_t v25 = 40020;
          break;
        case 36:
          uint64_t v25 = 40021;
          break;
        case 37:
          uint64_t v25 = 40022;
          break;
        case 38:
          uint64_t v25 = 40023;
          break;
        case 39:
          uint64_t v25 = 40024;
          break;
        case 40:
          uint64_t v25 = 40025;
          break;
        case 41:
          uint64_t v25 = 40026;
          break;
        case 42:
          uint64_t v25 = 40027;
          break;
        case 43:
          uint64_t v25 = 40028;
          break;
        case 44:
          uint64_t v25 = 40029;
          break;
        case 45:
          uint64_t v25 = 40030;
          break;
        case 46:
          uint64_t v25 = 40101;
          break;
        case 47:
          uint64_t v25 = 40102;
          break;
        case 48:
          uint64_t v25 = 40200;
          break;
        case 49:
          uint64_t v25 = 40201;
          break;
        case 50:
          uint64_t v25 = 40205;
          break;
        case 51:
          uint64_t v25 = 40401;
          break;
        case 52:
          uint64_t v25 = 40402;
          break;
        case 53:
          uint64_t v25 = 40403;
          break;
        case 54:
          uint64_t v25 = 40404;
          break;
        case 55:
          uint64_t v25 = 40500;
          break;
        case 56:
          uint64_t v25 = 40600;
          break;
        case 57:
          uint64_t v25 = 40601;
          break;
        case 58:
          uint64_t v25 = 50000;
          break;
        case 59:
          uint64_t v25 = 50001;
          break;
        case 60:
          uint64_t v25 = 50002;
          break;
        case 61:
          uint64_t v25 = 99991;
          break;
        case 62:
          uint64_t v25 = 99992;
          break;
        case 63:
          uint64_t v25 = 99993;
          break;
        case 64:
          uint64_t v25 = -1101;
          break;
        case 65:
          uint64_t v25 = -1102;
          break;
        case 66:
          uint64_t v25 = -1103;
          break;
        case 67:
          uint64_t v25 = -1104;
          break;
        case 68:
          uint64_t v25 = -1110;
          break;
        case 69:
          uint64_t v25 = -1111;
          break;
        case 70:
          uint64_t v25 = -1112;
          break;
        case 71:
          uint64_t v25 = -1113;
          break;
        case 72:
          uint64_t v25 = -1114;
          break;
        case 73:
          uint64_t v25 = -1115;
          break;
        case 74:
          uint64_t v25 = -1116;
          break;
        case 75:
          uint64_t v25 = -1117;
          break;
        case 76:
          uint64_t v25 = -1118;
          break;
        case 77:
          uint64_t v25 = -1119;
          break;
        case 78:
          uint64_t v25 = -1201;
          break;
        case 79:
          uint64_t v25 = -1202;
          break;
        case 80:
          uint64_t v25 = -1203;
          break;
        case 81:
          uint64_t v25 = -1204;
          break;
        case 82:
          uint64_t v25 = -1402;
          break;
        case 83:
          uint64_t v25 = -1403;
          break;
        case 84:
          uint64_t v25 = -1404;
          break;
        case 85:
          uint64_t v25 = -1301;
          break;
        case 86:
          uint64_t v25 = -1302;
          break;
        case 87:
          uint64_t v25 = -1303;
          break;
        case 88:
          uint64_t v25 = -1304;
          break;
        case 89:
          uint64_t v25 = -1305;
          break;
        case 90:
          uint64_t v25 = -1306;
          break;
        case 91:
          uint64_t v25 = -1307;
          break;
        case 92:
          uint64_t v25 = -1308;
          break;
        case 93:
          uint64_t v25 = -1309;
          break;
        case 94:
          uint64_t v25 = -1310;
          break;
        case 95:
          uint64_t v25 = -1315;
          break;
        case 96:
          uint64_t v25 = -1316;
          break;
        case 97:
          uint64_t v25 = -1317;
          break;
        case 98:
          uint64_t v25 = -131600;
          break;
        case 99:
          uint64_t v25 = -2103;
          break;
        case 100:
          uint64_t v25 = -2104;
          break;
        case 101:
          uint64_t v25 = -2107;
          break;
        case 102:
          uint64_t v25 = -2110;
          break;
        case 103:
          uint64_t v25 = -2111;
          break;
        case 104:
          uint64_t v25 = -2112;
          break;
        case 105:
          uint64_t v25 = -2123;
          break;
        case 106:
          uint64_t v25 = -2124;
          break;
        case 107:
          uint64_t v25 = -2125;
          break;
        case 108:
          uint64_t v25 = -2126;
          break;
        case 109:
          uint64_t v25 = -2127;
          break;
        case 110:
          uint64_t v25 = -3101;
          break;
        case 111:
          uint64_t v25 = -3102;
          break;
        case 112:
          uint64_t v25 = -3103;
          break;
        case 113:
          uint64_t v25 = -3104;
          break;
        case 114:
          uint64_t v25 = -3105;
          break;
        case 115:
          uint64_t v25 = -3106;
          break;
        case 116:
          uint64_t v25 = -3107;
          break;
        case 117:
          uint64_t v25 = -3108;
          break;
        case 118:
          uint64_t v25 = -3109;
          break;
        case 119:
          uint64_t v25 = -3110;
          break;
        case 120:
          uint64_t v25 = -3111;
          break;
        case 121:
          uint64_t v25 = -3112;
          break;
        case 122:
          uint64_t v25 = -3113;
          break;
        case 123:
          uint64_t v25 = -3151;
          break;
        case 124:
          uint64_t v25 = -3152;
          break;
        case 125:
          uint64_t v25 = -3153;
          break;
        case 126:
          uint64_t v25 = -3154;
          break;
        case 127:
          uint64_t v25 = -3155;
          break;
        case 128:
          uint64_t v25 = -3156;
          break;
        case 129:
          uint64_t v25 = -3157;
          break;
        case 130:
          uint64_t v25 = -3158;
          break;
        case 131:
          uint64_t v25 = -3159;
          break;
        case 132:
          uint64_t v25 = -3161;
          break;
        case 133:
          uint64_t v25 = -3162;
          break;
        case 134:
          uint64_t v25 = -3163;
          break;
        case 135:
          uint64_t v25 = -3164;
          break;
        case 136:
          uint64_t v25 = -3165;
          break;
        case 137:
          uint64_t v25 = -3166;
          break;
        case 138:
          uint64_t v25 = -3167;
          break;
        case 139:
          uint64_t v25 = -3168;
          break;
        case 140:
          uint64_t v25 = -3169;
          break;
        case 141:
          uint64_t v25 = -3170;
          break;
        case 142:
          uint64_t v25 = -3171;
          break;
        case 143:
          uint64_t v25 = -3172;
          break;
        case 144:
          uint64_t v25 = -3173;
          break;
        case 145:
          uint64_t v25 = -3174;
          break;
        case 146:
          uint64_t v25 = -3175;
          break;
        case 147:
          uint64_t v25 = -3176;
          break;
        case 148:
          uint64_t v25 = -3177;
          break;
        case 149:
          uint64_t v25 = -3178;
          break;
        case 150:
          uint64_t v25 = -3179;
          break;
        case 151:
          uint64_t v25 = -3180;
          break;
        case 152:
          uint64_t v25 = -3181;
          break;
        case 153:
          uint64_t v25 = -3182;
          break;
        case 154:
          uint64_t v25 = -3183;
          break;
        case 155:
          uint64_t v25 = -3184;
          break;
        case 156:
          uint64_t v25 = -3185;
          break;
        case 157:
          uint64_t v25 = -3186;
          break;
        case 158:
          uint64_t v25 = -3187;
          break;
        case 159:
          uint64_t v25 = -3188;
          break;
        case 160:
          uint64_t v25 = -3189;
          break;
        case 161:
          uint64_t v25 = -3300;
          break;
        case 162:
          uint64_t v25 = -5108;
          break;
        case 163:
          uint64_t v25 = -6009;
          break;
        case 164:
          uint64_t v25 = -6010;
          break;
        case 165:
          uint64_t v25 = -6102;
          break;
        case 166:
          uint64_t v25 = -6103;
          break;
        case 167:
          uint64_t v25 = -6104;
          break;
        case 168:
          uint64_t v25 = -6105;
          break;
        case 169:
          uint64_t v25 = -8001;
          break;
        case 170:
          uint64_t v25 = -8301;
          break;
        case 171:
          uint64_t v25 = -8304;
          break;
        case 172:
          uint64_t v25 = -8400;
          break;
        case 173:
          uint64_t v25 = -8401;
          break;
        case 174:
          uint64_t v25 = -8403;
          break;
        case 175:
          uint64_t v25 = -8404;
          break;
        case 176:
          uint64_t v25 = -8428;
          break;
        case 177:
          uint64_t v25 = -8429;
          break;
        case 178:
          uint64_t v25 = -8433;
          break;
        case 179:
          uint64_t v25 = -8434;
          break;
        case 180:
          uint64_t v25 = -8500;
          break;
        case 181:
          uint64_t v25 = -8501;
          break;
        case 182:
          uint64_t v25 = -8502;
          break;
        case 183:
          uint64_t v25 = -8503;
          break;
        case 184:
          uint64_t v25 = -8504;
          break;
        case 185:
          uint64_t v25 = -22200;
          break;
        case 186:
          uint64_t v25 = -22201;
          break;
        case 187:
          uint64_t v25 = -22202;
          break;
        case 188:
          uint64_t v25 = -22203;
          break;
        case 189:
          uint64_t v25 = -22204;
          break;
        case 190:
          uint64_t v25 = -22205;
          break;
        case 191:
          uint64_t v25 = -22206;
          break;
        case 192:
          uint64_t v25 = -22207;
          break;
        case 193:
          uint64_t v25 = -22208;
          break;
        case 194:
          uint64_t v25 = -72200;
          break;
        case 195:
          uint64_t v25 = -72201;
          break;
        case 196:
          uint64_t v25 = -72202;
          break;
        case 197:
          uint64_t v25 = -72203;
          break;
        case 198:
          uint64_t v25 = -72204;
          break;
        case 199:
          uint64_t v25 = -72205;
          break;
        case 200:
          uint64_t v25 = -72206;
          break;
        case 201:
          uint64_t v25 = -72207;
          break;
        case 202:
          uint64_t v25 = -72208;
          break;
        case 203:
          uint64_t v25 = -72209;
          break;
        case 204:
          uint64_t v25 = -72210;
          break;
        case 205:
          uint64_t v25 = -72211;
          break;
        case 206:
          uint64_t v25 = -72780;
          break;
        case 207:
          uint64_t v25 = -72781;
          break;
        case 208:
          uint64_t v25 = -72782;
          break;
        default:
          break;
      }
      if (v24 != v25) {
        return 0;
      }
LABEL_440:
      if (v5)
      {
        if (!v14) {
          return 0;
        }
        if (v4 != v13 || v5 != v14)
        {
          uint64_t v41 = v9;
          uint64_t v42 = v12;
          uint64_t v26 = v22;
          uint64_t v27 = v20;
          uint64_t v28 = v19;
          uint64_t v29 = v11;
          uint64_t v30 = v10;
          char v31 = sub_214D1ABC8();
          uint64_t v10 = v30;
          uint64_t v11 = v29;
          uint64_t v19 = v28;
          uint64_t v20 = v27;
          uint64_t v22 = v26;
          uint64_t v9 = v41;
          uint64_t v12 = v42;
          char v32 = v31;
          uint64_t result = 0;
          if ((v32 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v14)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v18 != 209) {
            return 0;
          }
          break;
        case 210:
          if (v18 != 210) {
            return 0;
          }
          break;
        case 211:
          if (v18 != 211) {
            return 0;
          }
          break;
        case 212:
          if (v18 != 212) {
            return 0;
          }
          break;
        case 213:
          if (v18 != 213) {
            return 0;
          }
          break;
        case 214:
          if (v18 != 214) {
            return 0;
          }
          break;
        case 215:
          if (v18 != 215) {
            return 0;
          }
          break;
        case 216:
          if (v18 != 216) {
            return 0;
          }
          break;
        case 217:
          if (v18 != 217) {
            return 0;
          }
          break;
        default:
          if ((v18 + 47) < 9u) {
            return 0;
          }
          uint64_t v34 = -1;
          switch(v9)
          {
            case 1:
              uint64_t v34 = -2;
              break;
            case 2:
              uint64_t v34 = -3;
              break;
            case 3:
              uint64_t v34 = -4;
              break;
            case 4:
              uint64_t v34 = -5;
              break;
            case 5:
              uint64_t v34 = -6;
              break;
            case 6:
              uint64_t v34 = -7;
              break;
            case 7:
              uint64_t v34 = -8;
              break;
            case 8:
              uint64_t v34 = -9;
              break;
            case 9:
              uint64_t v34 = -10;
              break;
            case 10:
              uint64_t v34 = -11;
              break;
            case 11:
              uint64_t v34 = -12;
              break;
            case 12:
              uint64_t v34 = -13;
              break;
            case 13:
              uint64_t v34 = -14;
              break;
            case 14:
              uint64_t v34 = -15;
              break;
            case 15:
              uint64_t v34 = -16;
              break;
            case 16:
              uint64_t v34 = -17;
              break;
            case 17:
              uint64_t v34 = -18;
              break;
            case 18:
              uint64_t v34 = -19;
              break;
            case 19:
              uint64_t v34 = -20;
              break;
            case 20:
              uint64_t v34 = -21;
              break;
            case 21:
              uint64_t v34 = -22;
              break;
            case 22:
              uint64_t v34 = -28;
              break;
            case 23:
              uint64_t v34 = -29;
              break;
            case 24:
              uint64_t v34 = 200;
              break;
            case 25:
              uint64_t v34 = 20000;
              break;
            case 26:
              uint64_t v34 = 20001;
              break;
            case 27:
              uint64_t v34 = 20100;
              break;
            case 28:
              uint64_t v34 = 40000;
              break;
            case 29:
              uint64_t v34 = 40010;
              break;
            case 30:
              uint64_t v34 = 40011;
              break;
            case 31:
              uint64_t v34 = 40012;
              break;
            case 32:
              uint64_t v34 = 40013;
              break;
            case 33:
              uint64_t v34 = 40014;
              break;
            case 34:
              uint64_t v34 = 40015;
              break;
            case 35:
              uint64_t v34 = 40020;
              break;
            case 36:
              uint64_t v34 = 40021;
              break;
            case 37:
              uint64_t v34 = 40022;
              break;
            case 38:
              uint64_t v34 = 40023;
              break;
            case 39:
              uint64_t v34 = 40024;
              break;
            case 40:
              uint64_t v34 = 40025;
              break;
            case 41:
              uint64_t v34 = 40026;
              break;
            case 42:
              uint64_t v34 = 40027;
              break;
            case 43:
              uint64_t v34 = 40028;
              break;
            case 44:
              uint64_t v34 = 40029;
              break;
            case 45:
              uint64_t v34 = 40030;
              break;
            case 46:
              uint64_t v34 = 40101;
              break;
            case 47:
              uint64_t v34 = 40102;
              break;
            case 48:
              uint64_t v34 = 40200;
              break;
            case 49:
              uint64_t v34 = 40201;
              break;
            case 50:
              uint64_t v34 = 40205;
              break;
            case 51:
              uint64_t v34 = 40401;
              break;
            case 52:
              uint64_t v34 = 40402;
              break;
            case 53:
              uint64_t v34 = 40403;
              break;
            case 54:
              uint64_t v34 = 40404;
              break;
            case 55:
              uint64_t v34 = 40500;
              break;
            case 56:
              uint64_t v34 = 40600;
              break;
            case 57:
              uint64_t v34 = 40601;
              break;
            case 58:
              uint64_t v34 = 50000;
              break;
            case 59:
              uint64_t v34 = 50001;
              break;
            case 60:
              uint64_t v34 = 50002;
              break;
            case 61:
              uint64_t v34 = 99991;
              break;
            case 62:
              uint64_t v34 = 99992;
              break;
            case 63:
              uint64_t v34 = 99993;
              break;
            case 64:
              uint64_t v34 = -1101;
              break;
            case 65:
              uint64_t v34 = -1102;
              break;
            case 66:
              uint64_t v34 = -1103;
              break;
            case 67:
              uint64_t v34 = -1104;
              break;
            case 68:
              uint64_t v34 = -1110;
              break;
            case 69:
              uint64_t v34 = -1111;
              break;
            case 70:
              uint64_t v34 = -1112;
              break;
            case 71:
              uint64_t v34 = -1113;
              break;
            case 72:
              uint64_t v34 = -1114;
              break;
            case 73:
              uint64_t v34 = -1115;
              break;
            case 74:
              uint64_t v34 = -1116;
              break;
            case 75:
              uint64_t v34 = -1117;
              break;
            case 76:
              uint64_t v34 = -1118;
              break;
            case 77:
              uint64_t v34 = -1119;
              break;
            case 78:
              uint64_t v34 = -1201;
              break;
            case 79:
              uint64_t v34 = -1202;
              break;
            case 80:
              uint64_t v34 = -1203;
              break;
            case 81:
              uint64_t v34 = -1204;
              break;
            case 82:
              uint64_t v34 = -1402;
              break;
            case 83:
              uint64_t v34 = -1403;
              break;
            case 84:
              uint64_t v34 = -1404;
              break;
            case 85:
              uint64_t v34 = -1301;
              break;
            case 86:
              uint64_t v34 = -1302;
              break;
            case 87:
              uint64_t v34 = -1303;
              break;
            case 88:
              uint64_t v34 = -1304;
              break;
            case 89:
              uint64_t v34 = -1305;
              break;
            case 90:
              uint64_t v34 = -1306;
              break;
            case 91:
              uint64_t v34 = -1307;
              break;
            case 92:
              uint64_t v34 = -1308;
              break;
            case 93:
              uint64_t v34 = -1309;
              break;
            case 94:
              uint64_t v34 = -1310;
              break;
            case 95:
              uint64_t v34 = -1315;
              break;
            case 96:
              uint64_t v34 = -1316;
              break;
            case 97:
              uint64_t v34 = -1317;
              break;
            case 98:
              uint64_t v34 = -131600;
              break;
            case 99:
              uint64_t v34 = -2103;
              break;
            case 100:
              uint64_t v34 = -2104;
              break;
            case 101:
              uint64_t v34 = -2107;
              break;
            case 102:
              uint64_t v34 = -2110;
              break;
            case 103:
              uint64_t v34 = -2111;
              break;
            case 104:
              uint64_t v34 = -2112;
              break;
            case 105:
              uint64_t v34 = -2123;
              break;
            case 106:
              uint64_t v34 = -2124;
              break;
            case 107:
              uint64_t v34 = -2125;
              break;
            case 108:
              uint64_t v34 = -2126;
              break;
            case 109:
              uint64_t v34 = -2127;
              break;
            case 110:
              uint64_t v34 = -3101;
              break;
            case 111:
              uint64_t v34 = -3102;
              break;
            case 112:
              uint64_t v34 = -3103;
              break;
            case 113:
              uint64_t v34 = -3104;
              break;
            case 114:
              uint64_t v34 = -3105;
              break;
            case 115:
              uint64_t v34 = -3106;
              break;
            case 116:
              uint64_t v34 = -3107;
              break;
            case 117:
              uint64_t v34 = -3108;
              break;
            case 118:
              uint64_t v34 = -3109;
              break;
            case 119:
              uint64_t v34 = -3110;
              break;
            case 120:
              uint64_t v34 = -3111;
              break;
            case 121:
              uint64_t v34 = -3112;
              break;
            case 122:
              uint64_t v34 = -3113;
              break;
            case 123:
              uint64_t v34 = -3151;
              break;
            case 124:
              uint64_t v34 = -3152;
              break;
            case 125:
              uint64_t v34 = -3153;
              break;
            case 126:
              uint64_t v34 = -3154;
              break;
            case 127:
              uint64_t v34 = -3155;
              break;
            case 128:
              uint64_t v34 = -3156;
              break;
            case 129:
              uint64_t v34 = -3157;
              break;
            case 130:
              uint64_t v34 = -3158;
              break;
            case 131:
              uint64_t v34 = -3159;
              break;
            case 132:
              uint64_t v34 = -3161;
              break;
            case 133:
              uint64_t v34 = -3162;
              break;
            case 134:
              uint64_t v34 = -3163;
              break;
            case 135:
              uint64_t v34 = -3164;
              break;
            case 136:
              uint64_t v34 = -3165;
              break;
            case 137:
              uint64_t v34 = -3166;
              break;
            case 138:
              uint64_t v34 = -3167;
              break;
            case 139:
              uint64_t v34 = -3168;
              break;
            case 140:
              uint64_t v34 = -3169;
              break;
            case 141:
              uint64_t v34 = -3170;
              break;
            case 142:
              uint64_t v34 = -3171;
              break;
            case 143:
              uint64_t v34 = -3172;
              break;
            case 144:
              uint64_t v34 = -3173;
              break;
            case 145:
              uint64_t v34 = -3174;
              break;
            case 146:
              uint64_t v34 = -3175;
              break;
            case 147:
              uint64_t v34 = -3176;
              break;
            case 148:
              uint64_t v34 = -3177;
              break;
            case 149:
              uint64_t v34 = -3178;
              break;
            case 150:
              uint64_t v34 = -3179;
              break;
            case 151:
              uint64_t v34 = -3180;
              break;
            case 152:
              uint64_t v34 = -3181;
              break;
            case 153:
              uint64_t v34 = -3182;
              break;
            case 154:
              uint64_t v34 = -3183;
              break;
            case 155:
              uint64_t v34 = -3184;
              break;
            case 156:
              uint64_t v34 = -3185;
              break;
            case 157:
              uint64_t v34 = -3186;
              break;
            case 158:
              uint64_t v34 = -3187;
              break;
            case 159:
              uint64_t v34 = -3188;
              break;
            case 160:
              uint64_t v34 = -3189;
              break;
            case 161:
              uint64_t v34 = -3300;
              break;
            case 162:
              uint64_t v34 = -5108;
              break;
            case 163:
              uint64_t v34 = -6009;
              break;
            case 164:
              uint64_t v34 = -6010;
              break;
            case 165:
              uint64_t v34 = -6102;
              break;
            case 166:
              uint64_t v34 = -6103;
              break;
            case 167:
              uint64_t v34 = -6104;
              break;
            case 168:
              uint64_t v34 = -6105;
              break;
            case 169:
              uint64_t v34 = -8001;
              break;
            case 170:
              uint64_t v34 = -8301;
              break;
            case 171:
              uint64_t v34 = -8304;
              break;
            case 172:
              uint64_t v34 = -8400;
              break;
            case 173:
              uint64_t v34 = -8401;
              break;
            case 174:
              uint64_t v34 = -8403;
              break;
            case 175:
              uint64_t v34 = -8404;
              break;
            case 176:
              uint64_t v34 = -8428;
              break;
            case 177:
              uint64_t v34 = -8429;
              break;
            case 178:
              uint64_t v34 = -8433;
              break;
            case 179:
              uint64_t v34 = -8434;
              break;
            case 180:
              uint64_t v34 = -8500;
              break;
            case 181:
              uint64_t v34 = -8501;
              break;
            case 182:
              uint64_t v34 = -8502;
              break;
            case 183:
              uint64_t v34 = -8503;
              break;
            case 184:
              uint64_t v34 = -8504;
              break;
            case 185:
              uint64_t v34 = -22200;
              break;
            case 186:
              uint64_t v34 = -22201;
              break;
            case 187:
              uint64_t v34 = -22202;
              break;
            case 188:
              uint64_t v34 = -22203;
              break;
            case 189:
              uint64_t v34 = -22204;
              break;
            case 190:
              uint64_t v34 = -22205;
              break;
            case 191:
              uint64_t v34 = -22206;
              break;
            case 192:
              uint64_t v34 = -22207;
              break;
            case 193:
              uint64_t v34 = -22208;
              break;
            case 194:
              uint64_t v34 = -72200;
              break;
            case 195:
              uint64_t v34 = -72201;
              break;
            case 196:
              uint64_t v34 = -72202;
              break;
            case 197:
              uint64_t v34 = -72203;
              break;
            case 198:
              uint64_t v34 = -72204;
              break;
            case 199:
              uint64_t v34 = -72205;
              break;
            case 200:
              uint64_t v34 = -72206;
              break;
            case 201:
              uint64_t v34 = -72207;
              break;
            case 202:
              uint64_t v34 = -72208;
              break;
            case 203:
              uint64_t v34 = -72209;
              break;
            case 204:
              uint64_t v34 = -72210;
              break;
            case 205:
              uint64_t v34 = -72211;
              break;
            case 206:
              uint64_t v34 = -72780;
              break;
            case 207:
              uint64_t v34 = -72781;
              break;
            case 208:
              uint64_t v34 = -72782;
              break;
            default:
              break;
          }
          uint64_t v35 = -1;
          switch(v18)
          {
            case 1:
              uint64_t v35 = -2;
              break;
            case 2:
              uint64_t v35 = -3;
              break;
            case 3:
              uint64_t v35 = -4;
              break;
            case 4:
              uint64_t v35 = -5;
              break;
            case 5:
              uint64_t v35 = -6;
              break;
            case 6:
              uint64_t v35 = -7;
              break;
            case 7:
              uint64_t v35 = -8;
              break;
            case 8:
              uint64_t v35 = -9;
              break;
            case 9:
              uint64_t v35 = -10;
              break;
            case 10:
              uint64_t v35 = -11;
              break;
            case 11:
              uint64_t v35 = -12;
              break;
            case 12:
              uint64_t v35 = -13;
              break;
            case 13:
              uint64_t v35 = -14;
              break;
            case 14:
              uint64_t v35 = -15;
              break;
            case 15:
              uint64_t v35 = -16;
              break;
            case 16:
              uint64_t v35 = -17;
              break;
            case 17:
              uint64_t v35 = -18;
              break;
            case 18:
              uint64_t v35 = -19;
              break;
            case 19:
              uint64_t v35 = -20;
              break;
            case 20:
              uint64_t v35 = -21;
              break;
            case 21:
              uint64_t v35 = -22;
              break;
            case 22:
              uint64_t v35 = -28;
              break;
            case 23:
              uint64_t v35 = -29;
              break;
            case 24:
              uint64_t v35 = 200;
              break;
            case 25:
              uint64_t v35 = 20000;
              break;
            case 26:
              uint64_t v35 = 20001;
              break;
            case 27:
              uint64_t v35 = 20100;
              break;
            case 28:
              uint64_t v35 = 40000;
              break;
            case 29:
              uint64_t v35 = 40010;
              break;
            case 30:
              uint64_t v35 = 40011;
              break;
            case 31:
              uint64_t v35 = 40012;
              break;
            case 32:
              uint64_t v35 = 40013;
              break;
            case 33:
              uint64_t v35 = 40014;
              break;
            case 34:
              uint64_t v35 = 40015;
              break;
            case 35:
              uint64_t v35 = 40020;
              break;
            case 36:
              uint64_t v35 = 40021;
              break;
            case 37:
              uint64_t v35 = 40022;
              break;
            case 38:
              uint64_t v35 = 40023;
              break;
            case 39:
              uint64_t v35 = 40024;
              break;
            case 40:
              uint64_t v35 = 40025;
              break;
            case 41:
              uint64_t v35 = 40026;
              break;
            case 42:
              uint64_t v35 = 40027;
              break;
            case 43:
              uint64_t v35 = 40028;
              break;
            case 44:
              uint64_t v35 = 40029;
              break;
            case 45:
              uint64_t v35 = 40030;
              break;
            case 46:
              uint64_t v35 = 40101;
              break;
            case 47:
              uint64_t v35 = 40102;
              break;
            case 48:
              uint64_t v35 = 40200;
              break;
            case 49:
              uint64_t v35 = 40201;
              break;
            case 50:
              uint64_t v35 = 40205;
              break;
            case 51:
              uint64_t v35 = 40401;
              break;
            case 52:
              uint64_t v35 = 40402;
              break;
            case 53:
              uint64_t v35 = 40403;
              break;
            case 54:
              uint64_t v35 = 40404;
              break;
            case 55:
              uint64_t v35 = 40500;
              break;
            case 56:
              uint64_t v35 = 40600;
              break;
            case 57:
              uint64_t v35 = 40601;
              break;
            case 58:
              uint64_t v35 = 50000;
              break;
            case 59:
              uint64_t v35 = 50001;
              break;
            case 60:
              uint64_t v35 = 50002;
              break;
            case 61:
              uint64_t v35 = 99991;
              break;
            case 62:
              uint64_t v35 = 99992;
              break;
            case 63:
              uint64_t v35 = 99993;
              break;
            case 64:
              uint64_t v35 = -1101;
              break;
            case 65:
              uint64_t v35 = -1102;
              break;
            case 66:
              uint64_t v35 = -1103;
              break;
            case 67:
              uint64_t v35 = -1104;
              break;
            case 68:
              uint64_t v35 = -1110;
              break;
            case 69:
              uint64_t v35 = -1111;
              break;
            case 70:
              uint64_t v35 = -1112;
              break;
            case 71:
              uint64_t v35 = -1113;
              break;
            case 72:
              uint64_t v35 = -1114;
              break;
            case 73:
              uint64_t v35 = -1115;
              break;
            case 74:
              uint64_t v35 = -1116;
              break;
            case 75:
              uint64_t v35 = -1117;
              break;
            case 76:
              uint64_t v35 = -1118;
              break;
            case 77:
              uint64_t v35 = -1119;
              break;
            case 78:
              uint64_t v35 = -1201;
              break;
            case 79:
              uint64_t v35 = -1202;
              break;
            case 80:
              uint64_t v35 = -1203;
              break;
            case 81:
              uint64_t v35 = -1204;
              break;
            case 82:
              uint64_t v35 = -1402;
              break;
            case 83:
              uint64_t v35 = -1403;
              break;
            case 84:
              uint64_t v35 = -1404;
              break;
            case 85:
              uint64_t v35 = -1301;
              break;
            case 86:
              uint64_t v35 = -1302;
              break;
            case 87:
              uint64_t v35 = -1303;
              break;
            case 88:
              uint64_t v35 = -1304;
              break;
            case 89:
              uint64_t v35 = -1305;
              break;
            case 90:
              uint64_t v35 = -1306;
              break;
            case 91:
              uint64_t v35 = -1307;
              break;
            case 92:
              uint64_t v35 = -1308;
              break;
            case 93:
              uint64_t v35 = -1309;
              break;
            case 94:
              uint64_t v35 = -1310;
              break;
            case 95:
              uint64_t v35 = -1315;
              break;
            case 96:
              uint64_t v35 = -1316;
              break;
            case 97:
              uint64_t v35 = -1317;
              break;
            case 98:
              uint64_t v35 = -131600;
              break;
            case 99:
              uint64_t v35 = -2103;
              break;
            case 100:
              uint64_t v35 = -2104;
              break;
            case 101:
              uint64_t v35 = -2107;
              break;
            case 102:
              uint64_t v35 = -2110;
              break;
            case 103:
              uint64_t v35 = -2111;
              break;
            case 104:
              uint64_t v35 = -2112;
              break;
            case 105:
              uint64_t v35 = -2123;
              break;
            case 106:
              uint64_t v35 = -2124;
              break;
            case 107:
              uint64_t v35 = -2125;
              break;
            case 108:
              uint64_t v35 = -2126;
              break;
            case 109:
              uint64_t v35 = -2127;
              break;
            case 110:
              uint64_t v35 = -3101;
              break;
            case 111:
              uint64_t v35 = -3102;
              break;
            case 112:
              uint64_t v35 = -3103;
              break;
            case 113:
              uint64_t v35 = -3104;
              break;
            case 114:
              uint64_t v35 = -3105;
              break;
            case 115:
              uint64_t v35 = -3106;
              break;
            case 116:
              uint64_t v35 = -3107;
              break;
            case 117:
              uint64_t v35 = -3108;
              break;
            case 118:
              uint64_t v35 = -3109;
              break;
            case 119:
              uint64_t v35 = -3110;
              break;
            case 120:
              uint64_t v35 = -3111;
              break;
            case 121:
              uint64_t v35 = -3112;
              break;
            case 122:
              uint64_t v35 = -3113;
              break;
            case 123:
              uint64_t v35 = -3151;
              break;
            case 124:
              uint64_t v35 = -3152;
              break;
            case 125:
              uint64_t v35 = -3153;
              break;
            case 126:
              uint64_t v35 = -3154;
              break;
            case 127:
              uint64_t v35 = -3155;
              break;
            case 128:
              uint64_t v35 = -3156;
              break;
            case 129:
              uint64_t v35 = -3157;
              break;
            case 130:
              uint64_t v35 = -3158;
              break;
            case 131:
              uint64_t v35 = -3159;
              break;
            case 132:
              uint64_t v35 = -3161;
              break;
            case 133:
              uint64_t v35 = -3162;
              break;
            case 134:
              uint64_t v35 = -3163;
              break;
            case 135:
              uint64_t v35 = -3164;
              break;
            case 136:
              uint64_t v35 = -3165;
              break;
            case 137:
              uint64_t v35 = -3166;
              break;
            case 138:
              uint64_t v35 = -3167;
              break;
            case 139:
              uint64_t v35 = -3168;
              break;
            case 140:
              uint64_t v35 = -3169;
              break;
            case 141:
              uint64_t v35 = -3170;
              break;
            case 142:
              uint64_t v35 = -3171;
              break;
            case 143:
              uint64_t v35 = -3172;
              break;
            case 144:
              uint64_t v35 = -3173;
              break;
            case 145:
              uint64_t v35 = -3174;
              break;
            case 146:
              uint64_t v35 = -3175;
              break;
            case 147:
              uint64_t v35 = -3176;
              break;
            case 148:
              uint64_t v35 = -3177;
              break;
            case 149:
              uint64_t v35 = -3178;
              break;
            case 150:
              uint64_t v35 = -3179;
              break;
            case 151:
              uint64_t v35 = -3180;
              break;
            case 152:
              uint64_t v35 = -3181;
              break;
            case 153:
              uint64_t v35 = -3182;
              break;
            case 154:
              uint64_t v35 = -3183;
              break;
            case 155:
              uint64_t v35 = -3184;
              break;
            case 156:
              uint64_t v35 = -3185;
              break;
            case 157:
              uint64_t v35 = -3186;
              break;
            case 158:
              uint64_t v35 = -3187;
              break;
            case 159:
              uint64_t v35 = -3188;
              break;
            case 160:
              uint64_t v35 = -3189;
              break;
            case 161:
              uint64_t v35 = -3300;
              break;
            case 162:
              uint64_t v35 = -5108;
              break;
            case 163:
              uint64_t v35 = -6009;
              break;
            case 164:
              uint64_t v35 = -6010;
              break;
            case 165:
              uint64_t v35 = -6102;
              break;
            case 166:
              uint64_t v35 = -6103;
              break;
            case 167:
              uint64_t v35 = -6104;
              break;
            case 168:
              uint64_t v35 = -6105;
              break;
            case 169:
              uint64_t v35 = -8001;
              break;
            case 170:
              uint64_t v35 = -8301;
              break;
            case 171:
              uint64_t v35 = -8304;
              break;
            case 172:
              uint64_t v35 = -8400;
              break;
            case 173:
              uint64_t v35 = -8401;
              break;
            case 174:
              uint64_t v35 = -8403;
              break;
            case 175:
              uint64_t v35 = -8404;
              break;
            case 176:
              uint64_t v35 = -8428;
              break;
            case 177:
              uint64_t v35 = -8429;
              break;
            case 178:
              uint64_t v35 = -8433;
              break;
            case 179:
              uint64_t v35 = -8434;
              break;
            case 180:
              uint64_t v35 = -8500;
              break;
            case 181:
              uint64_t v35 = -8501;
              break;
            case 182:
              uint64_t v35 = -8502;
              break;
            case 183:
              uint64_t v35 = -8503;
              break;
            case 184:
              uint64_t v35 = -8504;
              break;
            case 185:
              uint64_t v35 = -22200;
              break;
            case 186:
              uint64_t v35 = -22201;
              break;
            case 187:
              uint64_t v35 = -22202;
              break;
            case 188:
              uint64_t v35 = -22203;
              break;
            case 189:
              uint64_t v35 = -22204;
              break;
            case 190:
              uint64_t v35 = -22205;
              break;
            case 191:
              uint64_t v35 = -22206;
              break;
            case 192:
              uint64_t v35 = -22207;
              break;
            case 193:
              uint64_t v35 = -22208;
              break;
            case 194:
              uint64_t v35 = -72200;
              break;
            case 195:
              uint64_t v35 = -72201;
              break;
            case 196:
              uint64_t v35 = -72202;
              break;
            case 197:
              uint64_t v35 = -72203;
              break;
            case 198:
              uint64_t v35 = -72204;
              break;
            case 199:
              uint64_t v35 = -72205;
              break;
            case 200:
              uint64_t v35 = -72206;
              break;
            case 201:
              uint64_t v35 = -72207;
              break;
            case 202:
              uint64_t v35 = -72208;
              break;
            case 203:
              uint64_t v35 = -72209;
              break;
            case 204:
              uint64_t v35 = -72210;
              break;
            case 205:
              uint64_t v35 = -72211;
              break;
            case 206:
              uint64_t v35 = -72780;
              break;
            case 207:
              uint64_t v35 = -72781;
              break;
            case 208:
              uint64_t v35 = -72782;
              break;
            default:
              break;
          }
          if (v34 != v35) {
            return 0;
          }
          break;
      }
      if (!v8)
      {
        if (v16) {
          return 0;
        }
LABEL_895:
        switch((int)v12)
        {
          case 209:
            if (v22 != 209) {
              return 0;
            }
            break;
          case 210:
            if (v22 != 210) {
              return 0;
            }
            break;
          case 211:
            if (v22 != 211) {
              return 0;
            }
            break;
          case 212:
            if (v22 != 212) {
              return 0;
            }
            break;
          case 213:
            if (v22 != 213) {
              return 0;
            }
            break;
          case 214:
            if (v22 != 214) {
              return 0;
            }
            break;
          case 215:
            if (v22 != 215) {
              return 0;
            }
            break;
          case 216:
            if (v22 != 216) {
              return 0;
            }
            break;
          case 217:
            if (v22 != 217) {
              return 0;
            }
            break;
          default:
            if ((v22 + 47) < 9u) {
              return 0;
            }
            uint64_t v39 = -1;
            switch(v12)
            {
              case 1:
                uint64_t v39 = -2;
                break;
              case 2:
                uint64_t v39 = -3;
                break;
              case 3:
                uint64_t v39 = -4;
                break;
              case 4:
                uint64_t v39 = -5;
                break;
              case 5:
                uint64_t v39 = -6;
                break;
              case 6:
                uint64_t v39 = -7;
                break;
              case 7:
                uint64_t v39 = -8;
                break;
              case 8:
                uint64_t v39 = -9;
                break;
              case 9:
                uint64_t v39 = -10;
                break;
              case 10:
                uint64_t v39 = -11;
                break;
              case 11:
                uint64_t v39 = -12;
                break;
              case 12:
                uint64_t v39 = -13;
                break;
              case 13:
                uint64_t v39 = -14;
                break;
              case 14:
                uint64_t v39 = -15;
                break;
              case 15:
                uint64_t v39 = -16;
                break;
              case 16:
                uint64_t v39 = -17;
                break;
              case 17:
                uint64_t v39 = -18;
                break;
              case 18:
                uint64_t v39 = -19;
                break;
              case 19:
                uint64_t v39 = -20;
                break;
              case 20:
                uint64_t v39 = -21;
                break;
              case 21:
                uint64_t v39 = -22;
                break;
              case 22:
                uint64_t v39 = -28;
                break;
              case 23:
                uint64_t v39 = -29;
                break;
              case 24:
                uint64_t v39 = 200;
                break;
              case 25:
                uint64_t v39 = 20000;
                break;
              case 26:
                uint64_t v39 = 20001;
                break;
              case 27:
                uint64_t v39 = 20100;
                break;
              case 28:
                uint64_t v39 = 40000;
                break;
              case 29:
                uint64_t v39 = 40010;
                break;
              case 30:
                uint64_t v39 = 40011;
                break;
              case 31:
                uint64_t v39 = 40012;
                break;
              case 32:
                uint64_t v39 = 40013;
                break;
              case 33:
                uint64_t v39 = 40014;
                break;
              case 34:
                uint64_t v39 = 40015;
                break;
              case 35:
                uint64_t v39 = 40020;
                break;
              case 36:
                uint64_t v39 = 40021;
                break;
              case 37:
                uint64_t v39 = 40022;
                break;
              case 38:
                uint64_t v39 = 40023;
                break;
              case 39:
                uint64_t v39 = 40024;
                break;
              case 40:
                uint64_t v39 = 40025;
                break;
              case 41:
                uint64_t v39 = 40026;
                break;
              case 42:
                uint64_t v39 = 40027;
                break;
              case 43:
                uint64_t v39 = 40028;
                break;
              case 44:
                uint64_t v39 = 40029;
                break;
              case 45:
                uint64_t v39 = 40030;
                break;
              case 46:
                uint64_t v39 = 40101;
                break;
              case 47:
                uint64_t v39 = 40102;
                break;
              case 48:
                uint64_t v39 = 40200;
                break;
              case 49:
                uint64_t v39 = 40201;
                break;
              case 50:
                uint64_t v39 = 40205;
                break;
              case 51:
                uint64_t v39 = 40401;
                break;
              case 52:
                uint64_t v39 = 40402;
                break;
              case 53:
                uint64_t v39 = 40403;
                break;
              case 54:
                uint64_t v39 = 40404;
                break;
              case 55:
                uint64_t v39 = 40500;
                break;
              case 56:
                uint64_t v39 = 40600;
                break;
              case 57:
                uint64_t v39 = 40601;
                break;
              case 58:
                uint64_t v39 = 50000;
                break;
              case 59:
                uint64_t v39 = 50001;
                break;
              case 60:
                uint64_t v39 = 50002;
                break;
              case 61:
                uint64_t v39 = 99991;
                break;
              case 62:
                uint64_t v39 = 99992;
                break;
              case 63:
                uint64_t v39 = 99993;
                break;
              case 64:
                uint64_t v39 = -1101;
                break;
              case 65:
                uint64_t v39 = -1102;
                break;
              case 66:
                uint64_t v39 = -1103;
                break;
              case 67:
                uint64_t v39 = -1104;
                break;
              case 68:
                uint64_t v39 = -1110;
                break;
              case 69:
                uint64_t v39 = -1111;
                break;
              case 70:
                uint64_t v39 = -1112;
                break;
              case 71:
                uint64_t v39 = -1113;
                break;
              case 72:
                uint64_t v39 = -1114;
                break;
              case 73:
                uint64_t v39 = -1115;
                break;
              case 74:
                uint64_t v39 = -1116;
                break;
              case 75:
                uint64_t v39 = -1117;
                break;
              case 76:
                uint64_t v39 = -1118;
                break;
              case 77:
                uint64_t v39 = -1119;
                break;
              case 78:
                uint64_t v39 = -1201;
                break;
              case 79:
                uint64_t v39 = -1202;
                break;
              case 80:
                uint64_t v39 = -1203;
                break;
              case 81:
                uint64_t v39 = -1204;
                break;
              case 82:
                uint64_t v39 = -1402;
                break;
              case 83:
                uint64_t v39 = -1403;
                break;
              case 84:
                uint64_t v39 = -1404;
                break;
              case 85:
                uint64_t v39 = -1301;
                break;
              case 86:
                uint64_t v39 = -1302;
                break;
              case 87:
                uint64_t v39 = -1303;
                break;
              case 88:
                uint64_t v39 = -1304;
                break;
              case 89:
                uint64_t v39 = -1305;
                break;
              case 90:
                uint64_t v39 = -1306;
                break;
              case 91:
                uint64_t v39 = -1307;
                break;
              case 92:
                uint64_t v39 = -1308;
                break;
              case 93:
                uint64_t v39 = -1309;
                break;
              case 94:
                uint64_t v39 = -1310;
                break;
              case 95:
                uint64_t v39 = -1315;
                break;
              case 96:
                uint64_t v39 = -1316;
                break;
              case 97:
                uint64_t v39 = -1317;
                break;
              case 98:
                uint64_t v39 = -131600;
                break;
              case 99:
                uint64_t v39 = -2103;
                break;
              case 100:
                uint64_t v39 = -2104;
                break;
              case 101:
                uint64_t v39 = -2107;
                break;
              case 102:
                uint64_t v39 = -2110;
                break;
              case 103:
                uint64_t v39 = -2111;
                break;
              case 104:
                uint64_t v39 = -2112;
                break;
              case 105:
                uint64_t v39 = -2123;
                break;
              case 106:
                uint64_t v39 = -2124;
                break;
              case 107:
                uint64_t v39 = -2125;
                break;
              case 108:
                uint64_t v39 = -2126;
                break;
              case 109:
                uint64_t v39 = -2127;
                break;
              case 110:
                uint64_t v39 = -3101;
                break;
              case 111:
                uint64_t v39 = -3102;
                break;
              case 112:
                uint64_t v39 = -3103;
                break;
              case 113:
                uint64_t v39 = -3104;
                break;
              case 114:
                uint64_t v39 = -3105;
                break;
              case 115:
                uint64_t v39 = -3106;
                break;
              case 116:
                uint64_t v39 = -3107;
                break;
              case 117:
                uint64_t v39 = -3108;
                break;
              case 118:
                uint64_t v39 = -3109;
                break;
              case 119:
                uint64_t v39 = -3110;
                break;
              case 120:
                uint64_t v39 = -3111;
                break;
              case 121:
                uint64_t v39 = -3112;
                break;
              case 122:
                uint64_t v39 = -3113;
                break;
              case 123:
                uint64_t v39 = -3151;
                break;
              case 124:
                uint64_t v39 = -3152;
                break;
              case 125:
                uint64_t v39 = -3153;
                break;
              case 126:
                uint64_t v39 = -3154;
                break;
              case 127:
                uint64_t v39 = -3155;
                break;
              case 128:
                uint64_t v39 = -3156;
                break;
              case 129:
                uint64_t v39 = -3157;
                break;
              case 130:
                uint64_t v39 = -3158;
                break;
              case 131:
                uint64_t v39 = -3159;
                break;
              case 132:
                uint64_t v39 = -3161;
                break;
              case 133:
                uint64_t v39 = -3162;
                break;
              case 134:
                uint64_t v39 = -3163;
                break;
              case 135:
                uint64_t v39 = -3164;
                break;
              case 136:
                uint64_t v39 = -3165;
                break;
              case 137:
                uint64_t v39 = -3166;
                break;
              case 138:
                uint64_t v39 = -3167;
                break;
              case 139:
                uint64_t v39 = -3168;
                break;
              case 140:
                uint64_t v39 = -3169;
                break;
              case 141:
                uint64_t v39 = -3170;
                break;
              case 142:
                uint64_t v39 = -3171;
                break;
              case 143:
                uint64_t v39 = -3172;
                break;
              case 144:
                uint64_t v39 = -3173;
                break;
              case 145:
                uint64_t v39 = -3174;
                break;
              case 146:
                uint64_t v39 = -3175;
                break;
              case 147:
                uint64_t v39 = -3176;
                break;
              case 148:
                uint64_t v39 = -3177;
                break;
              case 149:
                uint64_t v39 = -3178;
                break;
              case 150:
                uint64_t v39 = -3179;
                break;
              case 151:
                uint64_t v39 = -3180;
                break;
              case 152:
                uint64_t v39 = -3181;
                break;
              case 153:
                uint64_t v39 = -3182;
                break;
              case 154:
                uint64_t v39 = -3183;
                break;
              case 155:
                uint64_t v39 = -3184;
                break;
              case 156:
                uint64_t v39 = -3185;
                break;
              case 157:
                uint64_t v39 = -3186;
                break;
              case 158:
                uint64_t v39 = -3187;
                break;
              case 159:
                uint64_t v39 = -3188;
                break;
              case 160:
                uint64_t v39 = -3189;
                break;
              case 161:
                uint64_t v39 = -3300;
                break;
              case 162:
                uint64_t v39 = -5108;
                break;
              case 163:
                uint64_t v39 = -6009;
                break;
              case 164:
                uint64_t v39 = -6010;
                break;
              case 165:
                uint64_t v39 = -6102;
                break;
              case 166:
                uint64_t v39 = -6103;
                break;
              case 167:
                uint64_t v39 = -6104;
                break;
              case 168:
                uint64_t v39 = -6105;
                break;
              case 169:
                uint64_t v39 = -8001;
                break;
              case 170:
                uint64_t v39 = -8301;
                break;
              case 171:
                uint64_t v39 = -8304;
                break;
              case 172:
                uint64_t v39 = -8400;
                break;
              case 173:
                uint64_t v39 = -8401;
                break;
              case 174:
                uint64_t v39 = -8403;
                break;
              case 175:
                uint64_t v39 = -8404;
                break;
              case 176:
                uint64_t v39 = -8428;
                break;
              case 177:
                uint64_t v39 = -8429;
                break;
              case 178:
                uint64_t v39 = -8433;
                break;
              case 179:
                uint64_t v39 = -8434;
                break;
              case 180:
                uint64_t v39 = -8500;
                break;
              case 181:
                uint64_t v39 = -8501;
                break;
              case 182:
                uint64_t v39 = -8502;
                break;
              case 183:
                uint64_t v39 = -8503;
                break;
              case 184:
                uint64_t v39 = -8504;
                break;
              case 185:
                uint64_t v39 = -22200;
                break;
              case 186:
                uint64_t v39 = -22201;
                break;
              case 187:
                uint64_t v39 = -22202;
                break;
              case 188:
                uint64_t v39 = -22203;
                break;
              case 189:
                uint64_t v39 = -22204;
                break;
              case 190:
                uint64_t v39 = -22205;
                break;
              case 191:
                uint64_t v39 = -22206;
                break;
              case 192:
                uint64_t v39 = -22207;
                break;
              case 193:
                uint64_t v39 = -22208;
                break;
              case 194:
                uint64_t v39 = -72200;
                break;
              case 195:
                uint64_t v39 = -72201;
                break;
              case 196:
                uint64_t v39 = -72202;
                break;
              case 197:
                uint64_t v39 = -72203;
                break;
              case 198:
                uint64_t v39 = -72204;
                break;
              case 199:
                uint64_t v39 = -72205;
                break;
              case 200:
                uint64_t v39 = -72206;
                break;
              case 201:
                uint64_t v39 = -72207;
                break;
              case 202:
                uint64_t v39 = -72208;
                break;
              case 203:
                uint64_t v39 = -72209;
                break;
              case 204:
                uint64_t v39 = -72210;
                break;
              case 205:
                uint64_t v39 = -72211;
                break;
              case 206:
                uint64_t v39 = -72780;
                break;
              case 207:
                uint64_t v39 = -72781;
                break;
              case 208:
                uint64_t v39 = -72782;
                break;
              default:
                break;
            }
            uint64_t v40 = -1;
            switch(v22)
            {
              case 1:
                uint64_t v40 = -2;
                break;
              case 2:
                uint64_t v40 = -3;
                break;
              case 3:
                uint64_t v40 = -4;
                break;
              case 4:
                uint64_t v40 = -5;
                break;
              case 5:
                uint64_t v40 = -6;
                break;
              case 6:
                uint64_t v40 = -7;
                break;
              case 7:
                uint64_t v40 = -8;
                break;
              case 8:
                uint64_t v40 = -9;
                break;
              case 9:
                uint64_t v40 = -10;
                break;
              case 10:
                uint64_t v40 = -11;
                break;
              case 11:
                uint64_t v40 = -12;
                break;
              case 12:
                uint64_t v40 = -13;
                break;
              case 13:
                uint64_t v40 = -14;
                break;
              case 14:
                uint64_t v40 = -15;
                break;
              case 15:
                uint64_t v40 = -16;
                break;
              case 16:
                uint64_t v40 = -17;
                break;
              case 17:
                uint64_t v40 = -18;
                break;
              case 18:
                uint64_t v40 = -19;
                break;
              case 19:
                uint64_t v40 = -20;
                break;
              case 20:
                uint64_t v40 = -21;
                break;
              case 21:
                uint64_t v40 = -22;
                break;
              case 22:
                uint64_t v40 = -28;
                break;
              case 23:
                uint64_t v40 = -29;
                break;
              case 24:
                uint64_t v40 = 200;
                break;
              case 25:
                uint64_t v40 = 20000;
                break;
              case 26:
                uint64_t v40 = 20001;
                break;
              case 27:
                uint64_t v40 = 20100;
                break;
              case 28:
                uint64_t v40 = 40000;
                break;
              case 29:
                uint64_t v40 = 40010;
                break;
              case 30:
                uint64_t v40 = 40011;
                break;
              case 31:
                uint64_t v40 = 40012;
                break;
              case 32:
                uint64_t v40 = 40013;
                break;
              case 33:
                uint64_t v40 = 40014;
                break;
              case 34:
                uint64_t v40 = 40015;
                break;
              case 35:
                uint64_t v40 = 40020;
                break;
              case 36:
                uint64_t v40 = 40021;
                break;
              case 37:
                uint64_t v40 = 40022;
                break;
              case 38:
                uint64_t v40 = 40023;
                break;
              case 39:
                uint64_t v40 = 40024;
                break;
              case 40:
                uint64_t v40 = 40025;
                break;
              case 41:
                uint64_t v40 = 40026;
                break;
              case 42:
                uint64_t v40 = 40027;
                break;
              case 43:
                uint64_t v40 = 40028;
                break;
              case 44:
                uint64_t v40 = 40029;
                break;
              case 45:
                uint64_t v40 = 40030;
                break;
              case 46:
                uint64_t v40 = 40101;
                break;
              case 47:
                uint64_t v40 = 40102;
                break;
              case 48:
                uint64_t v40 = 40200;
                break;
              case 49:
                uint64_t v40 = 40201;
                break;
              case 50:
                uint64_t v40 = 40205;
                break;
              case 51:
                uint64_t v40 = 40401;
                break;
              case 52:
                uint64_t v40 = 40402;
                break;
              case 53:
                uint64_t v40 = 40403;
                break;
              case 54:
                uint64_t v40 = 40404;
                break;
              case 55:
                uint64_t v40 = 40500;
                break;
              case 56:
                uint64_t v40 = 40600;
                break;
              case 57:
                uint64_t v40 = 40601;
                break;
              case 58:
                uint64_t v40 = 50000;
                break;
              case 59:
                uint64_t v40 = 50001;
                break;
              case 60:
                uint64_t v40 = 50002;
                break;
              case 61:
                uint64_t v40 = 99991;
                break;
              case 62:
                uint64_t v40 = 99992;
                break;
              case 63:
                uint64_t v40 = 99993;
                break;
              case 64:
                uint64_t v40 = -1101;
                break;
              case 65:
                uint64_t v40 = -1102;
                break;
              case 66:
                uint64_t v40 = -1103;
                break;
              case 67:
                uint64_t v40 = -1104;
                break;
              case 68:
                uint64_t v40 = -1110;
                break;
              case 69:
                uint64_t v40 = -1111;
                break;
              case 70:
                uint64_t v40 = -1112;
                break;
              case 71:
                uint64_t v40 = -1113;
                break;
              case 72:
                uint64_t v40 = -1114;
                break;
              case 73:
                uint64_t v40 = -1115;
                break;
              case 74:
                uint64_t v40 = -1116;
                break;
              case 75:
                uint64_t v40 = -1117;
                break;
              case 76:
                uint64_t v40 = -1118;
                break;
              case 77:
                uint64_t v40 = -1119;
                break;
              case 78:
                uint64_t v40 = -1201;
                break;
              case 79:
                uint64_t v40 = -1202;
                break;
              case 80:
                uint64_t v40 = -1203;
                break;
              case 81:
                uint64_t v40 = -1204;
                break;
              case 82:
                uint64_t v40 = -1402;
                break;
              case 83:
                uint64_t v40 = -1403;
                break;
              case 84:
                uint64_t v40 = -1404;
                break;
              case 85:
                uint64_t v40 = -1301;
                break;
              case 86:
                uint64_t v40 = -1302;
                break;
              case 87:
                uint64_t v40 = -1303;
                break;
              case 88:
                uint64_t v40 = -1304;
                break;
              case 89:
                uint64_t v40 = -1305;
                break;
              case 90:
                uint64_t v40 = -1306;
                break;
              case 91:
                uint64_t v40 = -1307;
                break;
              case 92:
                uint64_t v40 = -1308;
                break;
              case 93:
                uint64_t v40 = -1309;
                break;
              case 94:
                uint64_t v40 = -1310;
                break;
              case 95:
                uint64_t v40 = -1315;
                break;
              case 96:
                uint64_t v40 = -1316;
                break;
              case 97:
                uint64_t v40 = -1317;
                break;
              case 98:
                uint64_t v40 = -131600;
                break;
              case 99:
                uint64_t v40 = -2103;
                break;
              case 100:
                uint64_t v40 = -2104;
                break;
              case 101:
                uint64_t v40 = -2107;
                break;
              case 102:
                uint64_t v40 = -2110;
                break;
              case 103:
                uint64_t v40 = -2111;
                break;
              case 104:
                uint64_t v40 = -2112;
                break;
              case 105:
                uint64_t v40 = -2123;
                break;
              case 106:
                uint64_t v40 = -2124;
                break;
              case 107:
                uint64_t v40 = -2125;
                break;
              case 108:
                uint64_t v40 = -2126;
                break;
              case 109:
                uint64_t v40 = -2127;
                break;
              case 110:
                uint64_t v40 = -3101;
                break;
              case 111:
                uint64_t v40 = -3102;
                break;
              case 112:
                uint64_t v40 = -3103;
                break;
              case 113:
                uint64_t v40 = -3104;
                break;
              case 114:
                uint64_t v40 = -3105;
                break;
              case 115:
                uint64_t v40 = -3106;
                break;
              case 116:
                uint64_t v40 = -3107;
                break;
              case 117:
                uint64_t v40 = -3108;
                break;
              case 118:
                uint64_t v40 = -3109;
                break;
              case 119:
                uint64_t v40 = -3110;
                break;
              case 120:
                uint64_t v40 = -3111;
                break;
              case 121:
                uint64_t v40 = -3112;
                break;
              case 122:
                uint64_t v40 = -3113;
                break;
              case 123:
                uint64_t v40 = -3151;
                break;
              case 124:
                uint64_t v40 = -3152;
                break;
              case 125:
                uint64_t v40 = -3153;
                break;
              case 126:
                uint64_t v40 = -3154;
                break;
              case 127:
                uint64_t v40 = -3155;
                break;
              case 128:
                uint64_t v40 = -3156;
                break;
              case 129:
                uint64_t v40 = -3157;
                break;
              case 130:
                uint64_t v40 = -3158;
                break;
              case 131:
                uint64_t v40 = -3159;
                break;
              case 132:
                uint64_t v40 = -3161;
                break;
              case 133:
                uint64_t v40 = -3162;
                break;
              case 134:
                uint64_t v40 = -3163;
                break;
              case 135:
                uint64_t v40 = -3164;
                break;
              case 136:
                uint64_t v40 = -3165;
                break;
              case 137:
                uint64_t v40 = -3166;
                break;
              case 138:
                uint64_t v40 = -3167;
                break;
              case 139:
                uint64_t v40 = -3168;
                break;
              case 140:
                uint64_t v40 = -3169;
                break;
              case 141:
                uint64_t v40 = -3170;
                break;
              case 142:
                uint64_t v40 = -3171;
                break;
              case 143:
                uint64_t v40 = -3172;
                break;
              case 144:
                uint64_t v40 = -3173;
                break;
              case 145:
                uint64_t v40 = -3174;
                break;
              case 146:
                uint64_t v40 = -3175;
                break;
              case 147:
                uint64_t v40 = -3176;
                break;
              case 148:
                uint64_t v40 = -3177;
                break;
              case 149:
                uint64_t v40 = -3178;
                break;
              case 150:
                uint64_t v40 = -3179;
                break;
              case 151:
                uint64_t v40 = -3180;
                break;
              case 152:
                uint64_t v40 = -3181;
                break;
              case 153:
                uint64_t v40 = -3182;
                break;
              case 154:
                uint64_t v40 = -3183;
                break;
              case 155:
                uint64_t v40 = -3184;
                break;
              case 156:
                uint64_t v40 = -3185;
                break;
              case 157:
                uint64_t v40 = -3186;
                break;
              case 158:
                uint64_t v40 = -3187;
                break;
              case 159:
                uint64_t v40 = -3188;
                break;
              case 160:
                uint64_t v40 = -3189;
                break;
              case 161:
                uint64_t v40 = -3300;
                break;
              case 162:
                uint64_t v40 = -5108;
                break;
              case 163:
                uint64_t v40 = -6009;
                break;
              case 164:
                uint64_t v40 = -6010;
                break;
              case 165:
                uint64_t v40 = -6102;
                break;
              case 166:
                uint64_t v40 = -6103;
                break;
              case 167:
                uint64_t v40 = -6104;
                break;
              case 168:
                uint64_t v40 = -6105;
                break;
              case 169:
                uint64_t v40 = -8001;
                break;
              case 170:
                uint64_t v40 = -8301;
                break;
              case 171:
                uint64_t v40 = -8304;
                break;
              case 172:
                uint64_t v40 = -8400;
                break;
              case 173:
                uint64_t v40 = -8401;
                break;
              case 174:
                uint64_t v40 = -8403;
                break;
              case 175:
                uint64_t v40 = -8404;
                break;
              case 176:
                uint64_t v40 = -8428;
                break;
              case 177:
                uint64_t v40 = -8429;
                break;
              case 178:
                uint64_t v40 = -8433;
                break;
              case 179:
                uint64_t v40 = -8434;
                break;
              case 180:
                uint64_t v40 = -8500;
                break;
              case 181:
                uint64_t v40 = -8501;
                break;
              case 182:
                uint64_t v40 = -8502;
                break;
              case 183:
                uint64_t v40 = -8503;
                break;
              case 184:
                uint64_t v40 = -8504;
                break;
              case 185:
                uint64_t v40 = -22200;
                break;
              case 186:
                uint64_t v40 = -22201;
                break;
              case 187:
                uint64_t v40 = -22202;
                break;
              case 188:
                uint64_t v40 = -22203;
                break;
              case 189:
                uint64_t v40 = -22204;
                break;
              case 190:
                uint64_t v40 = -22205;
                break;
              case 191:
                uint64_t v40 = -22206;
                break;
              case 192:
                uint64_t v40 = -22207;
                break;
              case 193:
                uint64_t v40 = -22208;
                break;
              case 194:
                uint64_t v40 = -72200;
                break;
              case 195:
                uint64_t v40 = -72201;
                break;
              case 196:
                uint64_t v40 = -72202;
                break;
              case 197:
                uint64_t v40 = -72203;
                break;
              case 198:
                uint64_t v40 = -72204;
                break;
              case 199:
                uint64_t v40 = -72205;
                break;
              case 200:
                uint64_t v40 = -72206;
                break;
              case 201:
                uint64_t v40 = -72207;
                break;
              case 202:
                uint64_t v40 = -72208;
                break;
              case 203:
                uint64_t v40 = -72209;
                break;
              case 204:
                uint64_t v40 = -72210;
                break;
              case 205:
                uint64_t v40 = -72211;
                break;
              case 206:
                uint64_t v40 = -72780;
                break;
              case 207:
                uint64_t v40 = -72781;
                break;
              case 208:
                uint64_t v40 = -72782;
                break;
              default:
                break;
            }
            if (v39 != v40) {
              return 0;
            }
            break;
        }
        if (v11)
        {
          if (v19 && (v10 == v20 && v11 == v19 || (sub_214D1ABC8() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v19)
        {
          return 1;
        }
        return 0;
      }
      if (!v16) {
        return 0;
      }
      if (v7 == v17 && v8 == v16) {
        goto LABEL_895;
      }
      uint64_t v36 = v10;
      char v37 = sub_214D1ABC8();
      uint64_t v10 = v36;
      char v38 = v37;
      uint64_t result = 0;
      if (v38) {
        goto LABEL_895;
      }
      return result;
  }
}

BOOL _s17CoreODIEssentials25ArmandDeviceDataErrorCodeO2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 0xD1:
      if (v2 != 209) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD2:
      if (v2 != 210) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD3:
      if (v2 != 211) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD4:
      if (v2 != 212) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD5:
      if (v2 != 213) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD6:
      if (v2 != 214) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD7:
      if (v2 != 215) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD8:
      if (v2 != 216) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    case 0xD9:
      if (v2 != 217) {
        goto LABEL_23;
      }
      BOOL result = 1;
      break;
    default:
      if ((v2 + 47) < 9u)
      {
LABEL_23:
        BOOL result = 0;
      }
      else
      {
        uint64_t v4 = -1;
        switch(*a1)
        {
          case 0xD2u:
            uint64_t v4 = -2;
            break;
          case 0xD3u:
            uint64_t v4 = -3;
            break;
          case 0xD4u:
            uint64_t v4 = -4;
            break;
          case 0xD5u:
            uint64_t v4 = -5;
            break;
          case 0xD6u:
            uint64_t v4 = -6;
            break;
          case 0xD7u:
            uint64_t v4 = -7;
            break;
          case 0xD8u:
            uint64_t v4 = -8;
            break;
          case 0xD9u:
            uint64_t v4 = -9;
            break;
          case 0xDAu:
            uint64_t v4 = -10;
            break;
          case 0xDBu:
            uint64_t v4 = -11;
            break;
          case 0xDCu:
            uint64_t v4 = -12;
            break;
          case 0xDDu:
            uint64_t v4 = -13;
            break;
          case 0xDEu:
            uint64_t v4 = -14;
            break;
          case 0xDFu:
            uint64_t v4 = -15;
            break;
          case 0xE0u:
            uint64_t v4 = -16;
            break;
          case 0xE1u:
            uint64_t v4 = -17;
            break;
          case 0xE2u:
            uint64_t v4 = -18;
            break;
          case 0xE3u:
            uint64_t v4 = -19;
            break;
          case 0xE4u:
            uint64_t v4 = -20;
            break;
          case 0xE5u:
            uint64_t v4 = -21;
            break;
          case 0xE6u:
            uint64_t v4 = -22;
            break;
          case 0xE7u:
            uint64_t v4 = -28;
            break;
          case 0xE8u:
            uint64_t v4 = -29;
            break;
          case 0xE9u:
            uint64_t v4 = 200;
            break;
          case 0xEAu:
            uint64_t v4 = 20000;
            break;
          case 0xEBu:
            uint64_t v4 = 20001;
            break;
          case 0xECu:
            uint64_t v4 = 20100;
            break;
          case 0xEDu:
            uint64_t v4 = 40000;
            break;
          case 0xEEu:
            uint64_t v4 = 40010;
            break;
          case 0xEFu:
            uint64_t v4 = 40011;
            break;
          case 0xF0u:
            uint64_t v4 = 40012;
            break;
          case 0xF1u:
            uint64_t v4 = 40013;
            break;
          case 0xF2u:
            uint64_t v4 = 40014;
            break;
          case 0xF3u:
            uint64_t v4 = 40015;
            break;
          case 0xF4u:
            uint64_t v4 = 40020;
            break;
          case 0xF5u:
            uint64_t v4 = 40021;
            break;
          case 0xF6u:
            uint64_t v4 = 40022;
            break;
          case 0xF7u:
            uint64_t v4 = 40023;
            break;
          case 0xF8u:
            uint64_t v4 = 40024;
            break;
          case 0xF9u:
            uint64_t v4 = 40025;
            break;
          case 0xFAu:
            uint64_t v4 = 40026;
            break;
          case 0xFBu:
            uint64_t v4 = 40027;
            break;
          case 0xFCu:
            uint64_t v4 = 40028;
            break;
          case 0xFDu:
            uint64_t v4 = 40029;
            break;
          case 0xFEu:
            uint64_t v4 = 40030;
            break;
          case 0xFFu:
            uint64_t v4 = 40101;
            break;
          case 0u:
            uint64_t v4 = 40102;
            break;
          case 1u:
            uint64_t v4 = 40200;
            break;
          case 2u:
            uint64_t v4 = 40201;
            break;
          case 3u:
            uint64_t v4 = 40205;
            break;
          case 4u:
            uint64_t v4 = 40401;
            break;
          case 5u:
            uint64_t v4 = 40402;
            break;
          case 6u:
            uint64_t v4 = 40403;
            break;
          case 7u:
            uint64_t v4 = 40404;
            break;
          case 8u:
            uint64_t v4 = 40500;
            break;
          case 9u:
            uint64_t v4 = 40600;
            break;
          case 0xAu:
            uint64_t v4 = 40601;
            break;
          case 0xBu:
            uint64_t v4 = 50000;
            break;
          case 0xCu:
            uint64_t v4 = 50001;
            break;
          case 0xDu:
            uint64_t v4 = 50002;
            break;
          case 0xEu:
            uint64_t v4 = 99991;
            break;
          case 0xFu:
            uint64_t v4 = 99992;
            break;
          case 0x10u:
            uint64_t v4 = 99993;
            break;
          case 0x11u:
            uint64_t v4 = -1101;
            break;
          case 0x12u:
            uint64_t v4 = -1102;
            break;
          case 0x13u:
            uint64_t v4 = -1103;
            break;
          case 0x14u:
            uint64_t v4 = -1104;
            break;
          case 0x15u:
            uint64_t v4 = -1110;
            break;
          case 0x16u:
            uint64_t v4 = -1111;
            break;
          case 0x17u:
            uint64_t v4 = -1112;
            break;
          case 0x18u:
            uint64_t v4 = -1113;
            break;
          case 0x19u:
            uint64_t v4 = -1114;
            break;
          case 0x1Au:
            uint64_t v4 = -1115;
            break;
          case 0x1Bu:
            uint64_t v4 = -1116;
            break;
          case 0x1Cu:
            uint64_t v4 = -1117;
            break;
          case 0x1Du:
            uint64_t v4 = -1118;
            break;
          case 0x1Eu:
            uint64_t v4 = -1119;
            break;
          case 0x1Fu:
            uint64_t v4 = -1201;
            break;
          case 0x20u:
            uint64_t v4 = -1202;
            break;
          case 0x21u:
            uint64_t v4 = -1203;
            break;
          case 0x22u:
            uint64_t v4 = -1204;
            break;
          case 0x23u:
            uint64_t v4 = -1402;
            break;
          case 0x24u:
            uint64_t v4 = -1403;
            break;
          case 0x25u:
            uint64_t v4 = -1404;
            break;
          case 0x26u:
            uint64_t v4 = -1301;
            break;
          case 0x27u:
            uint64_t v4 = -1302;
            break;
          case 0x28u:
            uint64_t v4 = -1303;
            break;
          case 0x29u:
            uint64_t v4 = -1304;
            break;
          case 0x2Au:
            uint64_t v4 = -1305;
            break;
          case 0x2Bu:
            uint64_t v4 = -1306;
            break;
          case 0x2Cu:
            uint64_t v4 = -1307;
            break;
          case 0x2Du:
            uint64_t v4 = -1308;
            break;
          case 0x2Eu:
            uint64_t v4 = -1309;
            break;
          case 0x2Fu:
            uint64_t v4 = -1310;
            break;
          case 0x30u:
            uint64_t v4 = -1315;
            break;
          case 0x31u:
            uint64_t v4 = -1316;
            break;
          case 0x32u:
            uint64_t v4 = -1317;
            break;
          case 0x33u:
            uint64_t v4 = -131600;
            break;
          case 0x34u:
            uint64_t v4 = -2103;
            break;
          case 0x35u:
            uint64_t v4 = -2104;
            break;
          case 0x36u:
            uint64_t v4 = -2107;
            break;
          case 0x37u:
            uint64_t v4 = -2110;
            break;
          case 0x38u:
            uint64_t v4 = -2111;
            break;
          case 0x39u:
            uint64_t v4 = -2112;
            break;
          case 0x3Au:
            uint64_t v4 = -2123;
            break;
          case 0x3Bu:
            uint64_t v4 = -2124;
            break;
          case 0x3Cu:
            uint64_t v4 = -2125;
            break;
          case 0x3Du:
            uint64_t v4 = -2126;
            break;
          case 0x3Eu:
            uint64_t v4 = -2127;
            break;
          case 0x3Fu:
            uint64_t v4 = -3101;
            break;
          case 0x40u:
            uint64_t v4 = -3102;
            break;
          case 0x41u:
            uint64_t v4 = -3103;
            break;
          case 0x42u:
            uint64_t v4 = -3104;
            break;
          case 0x43u:
            uint64_t v4 = -3105;
            break;
          case 0x44u:
            uint64_t v4 = -3106;
            break;
          case 0x45u:
            uint64_t v4 = -3107;
            break;
          case 0x46u:
            uint64_t v4 = -3108;
            break;
          case 0x47u:
            uint64_t v4 = -3109;
            break;
          case 0x48u:
            uint64_t v4 = -3110;
            break;
          case 0x49u:
            uint64_t v4 = -3111;
            break;
          case 0x4Au:
            uint64_t v4 = -3112;
            break;
          case 0x4Bu:
            uint64_t v4 = -3113;
            break;
          case 0x4Cu:
            uint64_t v4 = -3151;
            break;
          case 0x4Du:
            uint64_t v4 = -3152;
            break;
          case 0x4Eu:
            uint64_t v4 = -3153;
            break;
          case 0x4Fu:
            uint64_t v4 = -3154;
            break;
          case 0x50u:
            uint64_t v4 = -3155;
            break;
          case 0x51u:
            uint64_t v4 = -3156;
            break;
          case 0x52u:
            uint64_t v4 = -3157;
            break;
          case 0x53u:
            uint64_t v4 = -3158;
            break;
          case 0x54u:
            uint64_t v4 = -3159;
            break;
          case 0x55u:
            uint64_t v4 = -3161;
            break;
          case 0x56u:
            uint64_t v4 = -3162;
            break;
          case 0x57u:
            uint64_t v4 = -3163;
            break;
          case 0x58u:
            uint64_t v4 = -3164;
            break;
          case 0x59u:
            uint64_t v4 = -3165;
            break;
          case 0x5Au:
            uint64_t v4 = -3166;
            break;
          case 0x5Bu:
            uint64_t v4 = -3167;
            break;
          case 0x5Cu:
            uint64_t v4 = -3168;
            break;
          case 0x5Du:
            uint64_t v4 = -3169;
            break;
          case 0x5Eu:
            uint64_t v4 = -3170;
            break;
          case 0x5Fu:
            uint64_t v4 = -3171;
            break;
          case 0x60u:
            uint64_t v4 = -3172;
            break;
          case 0x61u:
            uint64_t v4 = -3173;
            break;
          case 0x62u:
            uint64_t v4 = -3174;
            break;
          case 0x63u:
            uint64_t v4 = -3175;
            break;
          case 0x64u:
            uint64_t v4 = -3176;
            break;
          case 0x65u:
            uint64_t v4 = -3177;
            break;
          case 0x66u:
            uint64_t v4 = -3178;
            break;
          case 0x67u:
            uint64_t v4 = -3179;
            break;
          case 0x68u:
            uint64_t v4 = -3180;
            break;
          case 0x69u:
            uint64_t v4 = -3181;
            break;
          case 0x6Au:
            uint64_t v4 = -3182;
            break;
          case 0x6Bu:
            uint64_t v4 = -3183;
            break;
          case 0x6Cu:
            uint64_t v4 = -3184;
            break;
          case 0x6Du:
            uint64_t v4 = -3185;
            break;
          case 0x6Eu:
            uint64_t v4 = -3186;
            break;
          case 0x6Fu:
            uint64_t v4 = -3187;
            break;
          case 0x70u:
            uint64_t v4 = -3188;
            break;
          case 0x71u:
            uint64_t v4 = -3189;
            break;
          case 0x72u:
            uint64_t v4 = -3300;
            break;
          case 0x73u:
            uint64_t v4 = -5108;
            break;
          case 0x74u:
            uint64_t v4 = -6009;
            break;
          case 0x75u:
            uint64_t v4 = -6010;
            break;
          case 0x76u:
            uint64_t v4 = -6102;
            break;
          case 0x77u:
            uint64_t v4 = -6103;
            break;
          case 0x78u:
            uint64_t v4 = -6104;
            break;
          case 0x79u:
            uint64_t v4 = -6105;
            break;
          case 0x7Au:
            uint64_t v4 = -8001;
            break;
          case 0x7Bu:
            uint64_t v4 = -8301;
            break;
          case 0x7Cu:
            uint64_t v4 = -8304;
            break;
          case 0x7Du:
            uint64_t v4 = -8400;
            break;
          case 0x7Eu:
            uint64_t v4 = -8401;
            break;
          case 0x7Fu:
            uint64_t v4 = -8403;
            break;
          case 0x80u:
            uint64_t v4 = -8404;
            break;
          case 0x81u:
            uint64_t v4 = -8428;
            break;
          case 0x82u:
            uint64_t v4 = -8429;
            break;
          case 0x83u:
            uint64_t v4 = -8433;
            break;
          case 0x84u:
            uint64_t v4 = -8434;
            break;
          case 0x85u:
            uint64_t v4 = -8500;
            break;
          case 0x86u:
            uint64_t v4 = -8501;
            break;
          case 0x87u:
            uint64_t v4 = -8502;
            break;
          case 0x88u:
            uint64_t v4 = -8503;
            break;
          case 0x89u:
            uint64_t v4 = -8504;
            break;
          case 0x8Au:
            uint64_t v4 = -22200;
            break;
          case 0x8Bu:
            uint64_t v4 = -22201;
            break;
          case 0x8Cu:
            uint64_t v4 = -22202;
            break;
          case 0x8Du:
            uint64_t v4 = -22203;
            break;
          case 0x8Eu:
            uint64_t v4 = -22204;
            break;
          case 0x8Fu:
            uint64_t v4 = -22205;
            break;
          case 0x90u:
            uint64_t v4 = -22206;
            break;
          case 0x91u:
            uint64_t v4 = -22207;
            break;
          case 0x92u:
            uint64_t v4 = -22208;
            break;
          case 0x93u:
            uint64_t v4 = -72200;
            break;
          case 0x94u:
            uint64_t v4 = -72201;
            break;
          case 0x95u:
            uint64_t v4 = -72202;
            break;
          case 0x96u:
            uint64_t v4 = -72203;
            break;
          case 0x97u:
            uint64_t v4 = -72204;
            break;
          case 0x98u:
            uint64_t v4 = -72205;
            break;
          case 0x99u:
            uint64_t v4 = -72206;
            break;
          case 0x9Au:
            uint64_t v4 = -72207;
            break;
          case 0x9Bu:
            uint64_t v4 = -72208;
            break;
          case 0x9Cu:
            uint64_t v4 = -72209;
            break;
          case 0x9Du:
            uint64_t v4 = -72210;
            break;
          case 0x9Eu:
            uint64_t v4 = -72211;
            break;
          case 0x9Fu:
            uint64_t v4 = -72780;
            break;
          case 0xA0u:
            uint64_t v4 = -72781;
            break;
          case 0xA1u:
            uint64_t v4 = -72782;
            break;
          default:
            break;
        }
        uint64_t v5 = -1;
        switch(*a2)
        {
          case 1:
            uint64_t v5 = -2;
            break;
          case 2:
            uint64_t v5 = -3;
            break;
          case 3:
            uint64_t v5 = -4;
            break;
          case 4:
            uint64_t v5 = -5;
            break;
          case 5:
            uint64_t v5 = -6;
            break;
          case 6:
            uint64_t v5 = -7;
            break;
          case 7:
            uint64_t v5 = -8;
            break;
          case 8:
            uint64_t v5 = -9;
            break;
          case 9:
            uint64_t v5 = -10;
            break;
          case 0xA:
            uint64_t v5 = -11;
            break;
          case 0xB:
            uint64_t v5 = -12;
            break;
          case 0xC:
            uint64_t v5 = -13;
            break;
          case 0xD:
            uint64_t v5 = -14;
            break;
          case 0xE:
            uint64_t v5 = -15;
            break;
          case 0xF:
            uint64_t v5 = -16;
            break;
          case 0x10:
            uint64_t v5 = -17;
            break;
          case 0x11:
            uint64_t v5 = -18;
            break;
          case 0x12:
            uint64_t v5 = -19;
            break;
          case 0x13:
            uint64_t v5 = -20;
            break;
          case 0x14:
            uint64_t v5 = -21;
            break;
          case 0x15:
            uint64_t v5 = -22;
            break;
          case 0x16:
            uint64_t v5 = -28;
            break;
          case 0x17:
            uint64_t v5 = -29;
            break;
          case 0x18:
            uint64_t v5 = 200;
            break;
          case 0x19:
            uint64_t v5 = 20000;
            break;
          case 0x1A:
            uint64_t v5 = 20001;
            break;
          case 0x1B:
            uint64_t v5 = 20100;
            break;
          case 0x1C:
            uint64_t v5 = 40000;
            break;
          case 0x1D:
            uint64_t v5 = 40010;
            break;
          case 0x1E:
            uint64_t v5 = 40011;
            break;
          case 0x1F:
            uint64_t v5 = 40012;
            break;
          case 0x20:
            uint64_t v5 = 40013;
            break;
          case 0x21:
            uint64_t v5 = 40014;
            break;
          case 0x22:
            uint64_t v5 = 40015;
            break;
          case 0x23:
            uint64_t v5 = 40020;
            break;
          case 0x24:
            uint64_t v5 = 40021;
            break;
          case 0x25:
            uint64_t v5 = 40022;
            break;
          case 0x26:
            uint64_t v5 = 40023;
            break;
          case 0x27:
            uint64_t v5 = 40024;
            break;
          case 0x28:
            uint64_t v5 = 40025;
            break;
          case 0x29:
            uint64_t v5 = 40026;
            break;
          case 0x2A:
            uint64_t v5 = 40027;
            break;
          case 0x2B:
            uint64_t v5 = 40028;
            break;
          case 0x2C:
            uint64_t v5 = 40029;
            break;
          case 0x2D:
            uint64_t v5 = 40030;
            break;
          case 0x2E:
            uint64_t v5 = 40101;
            break;
          case 0x2F:
            uint64_t v5 = 40102;
            break;
          case 0x30:
            uint64_t v5 = 40200;
            break;
          case 0x31:
            uint64_t v5 = 40201;
            break;
          case 0x32:
            uint64_t v5 = 40205;
            break;
          case 0x33:
            uint64_t v5 = 40401;
            break;
          case 0x34:
            uint64_t v5 = 40402;
            break;
          case 0x35:
            uint64_t v5 = 40403;
            break;
          case 0x36:
            uint64_t v5 = 40404;
            break;
          case 0x37:
            uint64_t v5 = 40500;
            break;
          case 0x38:
            uint64_t v5 = 40600;
            break;
          case 0x39:
            uint64_t v5 = 40601;
            break;
          case 0x3A:
            uint64_t v5 = 50000;
            break;
          case 0x3B:
            uint64_t v5 = 50001;
            break;
          case 0x3C:
            uint64_t v5 = 50002;
            break;
          case 0x3D:
            uint64_t v5 = 99991;
            break;
          case 0x3E:
            uint64_t v5 = 99992;
            break;
          case 0x3F:
            uint64_t v5 = 99993;
            break;
          case 0x40:
            uint64_t v5 = -1101;
            break;
          case 0x41:
            uint64_t v5 = -1102;
            break;
          case 0x42:
            uint64_t v5 = -1103;
            break;
          case 0x43:
            uint64_t v5 = -1104;
            break;
          case 0x44:
            uint64_t v5 = -1110;
            break;
          case 0x45:
            uint64_t v5 = -1111;
            break;
          case 0x46:
            uint64_t v5 = -1112;
            break;
          case 0x47:
            uint64_t v5 = -1113;
            break;
          case 0x48:
            uint64_t v5 = -1114;
            break;
          case 0x49:
            uint64_t v5 = -1115;
            break;
          case 0x4A:
            uint64_t v5 = -1116;
            break;
          case 0x4B:
            uint64_t v5 = -1117;
            break;
          case 0x4C:
            uint64_t v5 = -1118;
            break;
          case 0x4D:
            uint64_t v5 = -1119;
            break;
          case 0x4E:
            uint64_t v5 = -1201;
            break;
          case 0x4F:
            uint64_t v5 = -1202;
            break;
          case 0x50:
            uint64_t v5 = -1203;
            break;
          case 0x51:
            uint64_t v5 = -1204;
            break;
          case 0x52:
            uint64_t v5 = -1402;
            break;
          case 0x53:
            uint64_t v5 = -1403;
            break;
          case 0x54:
            uint64_t v5 = -1404;
            break;
          case 0x55:
            uint64_t v5 = -1301;
            break;
          case 0x56:
            uint64_t v5 = -1302;
            break;
          case 0x57:
            uint64_t v5 = -1303;
            break;
          case 0x58:
            uint64_t v5 = -1304;
            break;
          case 0x59:
            uint64_t v5 = -1305;
            break;
          case 0x5A:
            uint64_t v5 = -1306;
            break;
          case 0x5B:
            uint64_t v5 = -1307;
            break;
          case 0x5C:
            uint64_t v5 = -1308;
            break;
          case 0x5D:
            uint64_t v5 = -1309;
            break;
          case 0x5E:
            uint64_t v5 = -1310;
            break;
          case 0x5F:
            uint64_t v5 = -1315;
            break;
          case 0x60:
            uint64_t v5 = -1316;
            break;
          case 0x61:
            uint64_t v5 = -1317;
            break;
          case 0x62:
            uint64_t v5 = -131600;
            break;
          case 0x63:
            uint64_t v5 = -2103;
            break;
          case 0x64:
            uint64_t v5 = -2104;
            break;
          case 0x65:
            uint64_t v5 = -2107;
            break;
          case 0x66:
            uint64_t v5 = -2110;
            break;
          case 0x67:
            uint64_t v5 = -2111;
            break;
          case 0x68:
            uint64_t v5 = -2112;
            break;
          case 0x69:
            uint64_t v5 = -2123;
            break;
          case 0x6A:
            uint64_t v5 = -2124;
            break;
          case 0x6B:
            uint64_t v5 = -2125;
            break;
          case 0x6C:
            uint64_t v5 = -2126;
            break;
          case 0x6D:
            uint64_t v5 = -2127;
            break;
          case 0x6E:
            uint64_t v5 = -3101;
            break;
          case 0x6F:
            uint64_t v5 = -3102;
            break;
          case 0x70:
            uint64_t v5 = -3103;
            break;
          case 0x71:
            uint64_t v5 = -3104;
            break;
          case 0x72:
            uint64_t v5 = -3105;
            break;
          case 0x73:
            uint64_t v5 = -3106;
            break;
          case 0x74:
            uint64_t v5 = -3107;
            break;
          case 0x75:
            uint64_t v5 = -3108;
            break;
          case 0x76:
            uint64_t v5 = -3109;
            break;
          case 0x77:
            uint64_t v5 = -3110;
            break;
          case 0x78:
            uint64_t v5 = -3111;
            break;
          case 0x79:
            uint64_t v5 = -3112;
            break;
          case 0x7A:
            uint64_t v5 = -3113;
            break;
          case 0x7B:
            uint64_t v5 = -3151;
            break;
          case 0x7C:
            uint64_t v5 = -3152;
            break;
          case 0x7D:
            uint64_t v5 = -3153;
            break;
          case 0x7E:
            uint64_t v5 = -3154;
            break;
          case 0x7F:
            uint64_t v5 = -3155;
            break;
          case 0x80:
            uint64_t v5 = -3156;
            break;
          case 0x81:
            uint64_t v5 = -3157;
            break;
          case 0x82:
            uint64_t v5 = -3158;
            break;
          case 0x83:
            uint64_t v5 = -3159;
            break;
          case 0x84:
            uint64_t v5 = -3161;
            break;
          case 0x85:
            uint64_t v5 = -3162;
            break;
          case 0x86:
            uint64_t v5 = -3163;
            break;
          case 0x87:
            uint64_t v5 = -3164;
            break;
          case 0x88:
            uint64_t v5 = -3165;
            break;
          case 0x89:
            uint64_t v5 = -3166;
            break;
          case 0x8A:
            uint64_t v5 = -3167;
            break;
          case 0x8B:
            uint64_t v5 = -3168;
            break;
          case 0x8C:
            uint64_t v5 = -3169;
            break;
          case 0x8D:
            uint64_t v5 = -3170;
            break;
          case 0x8E:
            uint64_t v5 = -3171;
            break;
          case 0x8F:
            uint64_t v5 = -3172;
            break;
          case 0x90:
            uint64_t v5 = -3173;
            break;
          case 0x91:
            uint64_t v5 = -3174;
            break;
          case 0x92:
            uint64_t v5 = -3175;
            break;
          case 0x93:
            uint64_t v5 = -3176;
            break;
          case 0x94:
            uint64_t v5 = -3177;
            break;
          case 0x95:
            uint64_t v5 = -3178;
            break;
          case 0x96:
            uint64_t v5 = -3179;
            break;
          case 0x97:
            uint64_t v5 = -3180;
            break;
          case 0x98:
            uint64_t v5 = -3181;
            break;
          case 0x99:
            uint64_t v5 = -3182;
            break;
          case 0x9A:
            uint64_t v5 = -3183;
            break;
          case 0x9B:
            uint64_t v5 = -3184;
            break;
          case 0x9C:
            uint64_t v5 = -3185;
            break;
          case 0x9D:
            uint64_t v5 = -3186;
            break;
          case 0x9E:
            uint64_t v5 = -3187;
            break;
          case 0x9F:
            uint64_t v5 = -3188;
            break;
          case 0xA0:
            uint64_t v5 = -3189;
            break;
          case 0xA1:
            uint64_t v5 = -3300;
            break;
          case 0xA2:
            uint64_t v5 = -5108;
            break;
          case 0xA3:
            uint64_t v5 = -6009;
            break;
          case 0xA4:
            uint64_t v5 = -6010;
            break;
          case 0xA5:
            uint64_t v5 = -6102;
            break;
          case 0xA6:
            uint64_t v5 = -6103;
            break;
          case 0xA7:
            uint64_t v5 = -6104;
            break;
          case 0xA8:
            uint64_t v5 = -6105;
            break;
          case 0xA9:
            uint64_t v5 = -8001;
            break;
          case 0xAA:
            uint64_t v5 = -8301;
            break;
          case 0xAB:
            uint64_t v5 = -8304;
            break;
          case 0xAC:
            uint64_t v5 = -8400;
            break;
          case 0xAD:
            uint64_t v5 = -8401;
            break;
          case 0xAE:
            uint64_t v5 = -8403;
            break;
          case 0xAF:
            uint64_t v5 = -8404;
            break;
          case 0xB0:
            uint64_t v5 = -8428;
            break;
          case 0xB1:
            uint64_t v5 = -8429;
            break;
          case 0xB2:
            uint64_t v5 = -8433;
            break;
          case 0xB3:
            uint64_t v5 = -8434;
            break;
          case 0xB4:
            uint64_t v5 = -8500;
            break;
          case 0xB5:
            uint64_t v5 = -8501;
            break;
          case 0xB6:
            uint64_t v5 = -8502;
            break;
          case 0xB7:
            uint64_t v5 = -8503;
            break;
          case 0xB8:
            uint64_t v5 = -8504;
            break;
          case 0xB9:
            uint64_t v5 = -22200;
            break;
          case 0xBA:
            uint64_t v5 = -22201;
            break;
          case 0xBB:
            uint64_t v5 = -22202;
            break;
          case 0xBC:
            uint64_t v5 = -22203;
            break;
          case 0xBD:
            uint64_t v5 = -22204;
            break;
          case 0xBE:
            uint64_t v5 = -22205;
            break;
          case 0xBF:
            uint64_t v5 = -22206;
            break;
          case 0xC0:
            uint64_t v5 = -22207;
            break;
          case 0xC1:
            uint64_t v5 = -22208;
            break;
          case 0xC2:
            uint64_t v5 = -72200;
            break;
          case 0xC3:
            uint64_t v5 = -72201;
            break;
          case 0xC4:
            uint64_t v5 = -72202;
            break;
          case 0xC5:
            uint64_t v5 = -72203;
            break;
          case 0xC6:
            uint64_t v5 = -72204;
            break;
          case 0xC7:
            uint64_t v5 = -72205;
            break;
          case 0xC8:
            uint64_t v5 = -72206;
            break;
          case 0xC9:
            uint64_t v5 = -72207;
            break;
          case 0xCA:
            uint64_t v5 = -72208;
            break;
          case 0xCB:
            uint64_t v5 = -72209;
            break;
          case 0xCC:
            uint64_t v5 = -72210;
            break;
          case 0xCD:
            uint64_t v5 = -72211;
            break;
          case 0xCE:
            uint64_t v5 = -72780;
            break;
          case 0xCF:
            uint64_t v5 = -72781;
            break;
          case 0xD0:
            uint64_t v5 = -72782;
            break;
          default:
            break;
        }
        BOOL result = v4 == v5;
      }
      break;
  }
  return result;
}

uint64_t sub_214CF8F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v31 = *(void *)(a1 + 40);
  uint64_t v32 = *(void *)(a1 + 24);
  unsigned __int8 v28 = *(unsigned char *)(a1 + 64);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v29 = *(void *)(a1 + 48);
  uint64_t v30 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v27 = *(void *)(a2 + 48);
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v25 = *(void *)(a1 + 56);
  unsigned __int8 v26 = *(unsigned char *)(a2 + 64);
  if (v6 == 1)
  {
    uint64_t v9 = 0;
    unsigned __int8 v10 = 0;
    if (v3 != 1)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v3 != 1) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  LOBYTE(v4) = 0;
LABEL_6:
  char v11 = sub_214C8391C(v9, v6, v10, v2, v3, v4);
  sub_214D0692C(v2, v3);
  sub_214D0692C(v9, v6);
  if ((v11 & 1) == 0)
  {
    if (v6 == 1)
    {
      uint64_t v12 = 0;
      LOBYTE(v8) = 0;
      uint64_t v7 = 1;
      unsigned __int8 v14 = v31;
      uint64_t v13 = v32;
      if (v3 != 1)
      {
LABEL_9:
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unsigned __int8 v14 = v31;
      uint64_t v13 = v32;
      uint64_t v12 = v30;
      if (v3 != 1) {
        goto LABEL_9;
      }
    }
    uint64_t v13 = 0;
    unsigned __int8 v14 = 0;
    uint64_t v5 = 1;
LABEL_12:
    char v15 = sub_214C8391C(v12, v7, v8, v13, v5, v14);
    sub_214D0692C(v13, v5);
    sub_214D0692C(v12, v7);
    if (v15) {
      goto LABEL_13;
    }
    if (v6 == 1)
    {
      uint64_t v17 = 0;
      unsigned __int8 v18 = 0;
      if (v3 != 1)
      {
LABEL_16:
        uint64_t v19 = v25;
        swift_bridgeObjectRetain();
        uint64_t v20 = v29;
        unsigned __int8 v21 = v28;
LABEL_19:
        char v22 = sub_214C8391C(v17, v6, v18, v20, v19, v21);
        sub_214D0692C(v20, v19);
        sub_214D0692C(v17, v6);
        char v16 = v22 ^ 1;
        return v16 & 1;
      }
    }
    else
    {
      uint64_t v6 = v24;
      swift_bridgeObjectRetain();
      uint64_t v17 = v27;
      unsigned __int8 v18 = v26;
      if (v3 != 1) {
        goto LABEL_16;
      }
    }
    uint64_t v20 = 0;
    unsigned __int8 v21 = 0;
    uint64_t v19 = 1;
    goto LABEL_19;
  }
LABEL_13:
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_214CF91AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v40 = *(void *)(a1 + 40);
  uint64_t v41 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v37 = *(void *)(a1 + 64);
  uint64_t v38 = *(void *)(a1 + 48);
  __int16 v33 = *(_WORD *)(a1 + 80);
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v34 = *(void *)(a1 + 72);
  uint64_t v35 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v30 = *(void *)(a2 + 48);
  uint64_t v42 = *(void *)(a2 + 56);
  uint64_t v39 = *(void *)(a2 + 64);
  uint64_t v32 = *(void *)(a2 + 72);
  __int16 v31 = *(_WORD *)(a2 + 80);
  if (v7 == 1)
  {
    uint64_t v10 = 0;
    unsigned __int8 v11 = 0;
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    unsigned __int8 v11 = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = v6;
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    LOBYTE(v4) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  char v12 = sub_214C8391C(v10, v7, v11, v3, v2, v4);
  sub_214D0692C(v3, v2);
  sub_214D0692C(v10, v7);
  if (v12)
  {
LABEL_21:
    char v24 = 0;
    return v24 & 1;
  }
  if (v7 != 1)
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v15 = v40;
    uint64_t v14 = v41;
    uint64_t v13 = v35;
    if (v2 != 1) {
      goto LABEL_10;
    }
LABEL_12:
    uint64_t v14 = 0;
    unsigned __int8 v15 = 0;
    uint64_t v5 = 1;
    goto LABEL_13;
  }
  uint64_t v13 = 0;
  LOBYTE(v9) = 0;
  uint64_t v8 = 1;
  unsigned __int8 v15 = v40;
  uint64_t v14 = v41;
  if (v2 == 1) {
    goto LABEL_12;
  }
LABEL_10:
  swift_bridgeObjectRetain();
LABEL_13:
  char v16 = sub_214C8391C(v13, v8, v9, v14, v5, v15);
  sub_214D0692C(v14, v5);
  sub_214D0692C(v13, v8);
  if (v16) {
    goto LABEL_21;
  }
  if (v7 == 1)
  {
    uint64_t v17 = 0;
    LOBYTE(v39) = 0;
    uint64_t v42 = 1;
    unsigned __int8 v19 = v37;
    uint64_t v18 = v38;
  }
  else
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v19 = v37;
    uint64_t v18 = v38;
    uint64_t v17 = v30;
  }
  uint64_t v20 = v36;
  if (v2 == 1)
  {
    uint64_t v18 = 0;
    unsigned __int8 v19 = 0;
    uint64_t v20 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  char v21 = sub_214C8391C(v17, v42, v39, v18, v20, v19);
  uint64_t v22 = v20;
  char v23 = v21;
  sub_214D0692C(v18, v22);
  sub_214D0692C(v17, v42);
  if (v23) {
    goto LABEL_21;
  }
  if (v7 == 1) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = v32;
  }
  if (v7 == 1) {
    __int16 v27 = -9728;
  }
  else {
    __int16 v27 = v31 & 0xFF01;
  }
  if (v2 == 1) {
    uint64_t v28 = 0;
  }
  else {
    uint64_t v28 = v34;
  }
  if (v2 == 1) {
    __int16 v29 = -9728;
  }
  else {
    __int16 v29 = v33 & 0xFF01;
  }
  char v24 = sub_214C84FA8(v26, v27, v28, v29) ^ 1;
  return v24 & 1;
}

uint64_t sub_214CF9450(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    uint64_t v7 = 0;
    __int16 v8 = -9728;
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    __int16 v8 = *(_WORD *)(a2 + 8) & 0xFF01;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v28 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  unsigned __int8 v27 = *(unsigned char *)(a1 + 56);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  if (v5 == 1) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v3;
  }
  if (v5 == 1) {
    __int16 v17 = -9728;
  }
  else {
    __int16 v17 = v4 & 0xFF01;
  }
  unsigned __int8 v18 = *(unsigned char *)(a2 + 56);
  if ((sub_214C84FA8(v7, v8, v16, v17) & 1) == 0)
  {
    if (v6 == 1)
    {
      uint64_t v12 = 0;
      LOBYTE(v14) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v26 = v13;
    if (v5 == 1)
    {
      uint64_t v9 = 0;
      LOBYTE(v10) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    char v19 = sub_214C8391C(v12, v6, v14, v9, v5, v10);
    sub_214D0692C(v9, v5);
    sub_214D0692C(v12, v6);
    if ((v19 & 1) == 0)
    {
      if (v6 == 1)
      {
        uint64_t v21 = 0;
        unsigned __int8 v18 = 0;
        uint64_t v15 = 1;
        if (v5 != 1)
        {
LABEL_21:
          swift_bridgeObjectRetain();
          uint64_t v22 = v28;
          unsigned __int8 v23 = v27;
LABEL_24:
          char v24 = sub_214C8391C(v21, v15, v18, v22, v11, v23);
          sub_214D0692C(v22, v11);
          sub_214D0692C(v21, v15);
          char v20 = v24 ^ 1;
          return v20 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = v26;
        if (v5 != 1) {
          goto LABEL_21;
        }
      }
      uint64_t v22 = 0;
      unsigned __int8 v23 = 0;
      uint64_t v11 = 1;
      goto LABEL_24;
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_214CF962C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v36 = *(void *)(a1 + 40);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v34 = *(void *)(a1 + 56);
  uint64_t v35 = *(void *)(a1 + 48);
  int v32 = *(unsigned __int16 *)(a1 + 64);
  int v33 = *(unsigned __int8 *)(a1 + 66);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v28 = *(void *)(a2 + 48);
  uint64_t v29 = *(void *)(a2 + 24);
  uint64_t v27 = *(void *)(a2 + 56);
  int v30 = *(unsigned __int16 *)(a2 + 64);
  int v31 = *(unsigned __int8 *)(a2 + 66);
  if (v6 == 1)
  {
    uint64_t v9 = 0;
    unsigned __int8 v10 = 0;
    if (v2 != 1)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v2 != 1) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  LOBYTE(v4) = 0;
LABEL_6:
  char v11 = sub_214C8391C(v9, v6, v10, v3, v2, v4);
  sub_214D0692C(v3, v2);
  sub_214D0692C(v9, v6);
  if (v11)
  {
LABEL_20:
    char v23 = 0;
    return v23 & 1;
  }
  if (v6 != 1)
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v14 = v36;
    uint64_t v13 = v37;
    uint64_t v12 = v29;
    if (v2 != 1) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v13 = 0;
    unsigned __int8 v14 = 0;
    uint64_t v5 = 1;
    goto LABEL_12;
  }
  uint64_t v12 = 0;
  LOBYTE(v8) = 0;
  uint64_t v7 = 1;
  unsigned __int8 v14 = v36;
  uint64_t v13 = v37;
  if (v2 == 1) {
    goto LABEL_11;
  }
LABEL_9:
  swift_bridgeObjectRetain();
LABEL_12:
  char v15 = sub_214C8391C(v12, v7, v8, v13, v5, v14);
  sub_214D0692C(v13, v5);
  sub_214D0692C(v12, v7);
  if (v15) {
    goto LABEL_20;
  }
  unsigned __int8 v16 = v30;
  if (v6 == 1)
  {
    uint64_t v17 = 0;
    unsigned __int8 v16 = 0;
    uint64_t v18 = 1;
    uint64_t v19 = v35;
  }
  else
  {
    uint64_t v18 = v27;
    swift_bridgeObjectRetain();
    uint64_t v19 = v35;
    uint64_t v17 = v28;
  }
  uint64_t v20 = v34;
  if (v2 == 1)
  {
    uint64_t v19 = 0;
    unsigned __int8 v21 = 0;
    uint64_t v20 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v21 = v32;
  }
  char v22 = sub_214C8391C(v17, v18, v16, v19, v20, v21);
  sub_214D0692C(v19, v20);
  sub_214D0692C(v17, v18);
  if (v22) {
    goto LABEL_20;
  }
  if (v6 == 1) {
    __int16 v25 = 3;
  }
  else {
    __int16 v25 = ((v30 | (v31 << 16)) >> 8) & 0xFF00 | BYTE1(v30);
  }
  if (v2 == 1) {
    __int16 v26 = 3;
  }
  else {
    __int16 v26 = ((v32 | (v33 << 16)) >> 8) & 0xFF00 | BYTE1(v32);
  }
  char v23 = sub_214C865E8(v25, v26) ^ 1;
  return v23 & 1;
}

BOOL sub_214CF98CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  double v37 = *(double *)(a1 + 40);
  double v38 = *(double *)(a1 + 24);
  uint64_t v44 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  double v39 = *(double *)(a1 + 56);
  uint64_t v42 = *(void *)(a1 + 80);
  int v7 = *(unsigned __int16 *)(a1 + 96);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  unsigned int v25 = v9;
  uint64_t v32 = *(void *)(a2 + 32);
  uint64_t v33 = *(void *)a2;
  double v31 = *(double *)(a2 + 40);
  double v29 = *(double *)(a2 + 24);
  uint64_t v30 = *(void *)(a2 + 48);
  double v36 = *(double *)(a2 + 56);
  uint64_t v43 = *(void *)(a2 + 64);
  uint64_t v34 = *(void *)(a2 + 72);
  if (v8 == 1) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *(void *)a2;
  }
  uint64_t v27 = v10;
  if (v8 == 1) {
    unsigned __int8 v11 = 0;
  }
  else {
    unsigned __int8 v11 = v9;
  }
  unsigned __int8 v26 = v11;
  uint64_t v41 = *(void *)(a2 + 80);
  uint64_t v35 = *(void *)(a2 + 88);
  if (v3 == 1) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = *(void *)a1;
  }
  uint64_t v23 = v12;
  if (v3 == 1) {
    unsigned __int8 v13 = 0;
  }
  else {
    unsigned __int8 v13 = *(void *)(a1 + 16);
  }
  unsigned __int8 v24 = v13;
  __int16 v40 = *(_WORD *)(a2 + 96);
  sub_214D06940(*(void *)a2, v8);
  sub_214D06940(v2, v3);
  char v28 = sub_214C8391C(v27, v8, v26, v23, v3, v24);
  HIDWORD(v22) = v7;
  sub_214D0692C(v2, v3);
  LOWORD(v22) = v40;
  sub_214D0692C(v33, v8);
  BOOL result = 0;
  if ((v28 & 1) == 0)
  {
    if (v8 == 1) {
      __int16 v15 = 3;
    }
    else {
      __int16 v15 = (v25 >> 8) & 0xFF00 | BYTE1(v25);
    }
    if (v3 == 1) {
      __int16 v16 = 3;
    }
    else {
      __int16 v16 = (v4 >> 8) & 0xFF00 | BYTE1(v4);
    }
    BOOL result = 0;
    if ((sub_214C865E8(v15, v16) & 1) == 0)
    {
      if (v3 == 1) {
        return 1;
      }
      if (v8 != 1
        && ((v5 & 0xFF00) != 0xD100 || (v32 & 0xFF00) == 0xD100)
        && ((v44 & 0xFF00) != 0xD100 || (v30 & 0xFF00) == 0xD100)
        && ((v6 & 0xFF00) != 0xD100 || (v43 & 0xFF00) == 0xD100))
      {
        if ((v32 & 1) == 0
          && (v5 & 1) == 0
          && (v30 & 1) == 0
          && (v44 & 1) == 0
          && ((v43 | v6) & 1) == 0)
        {
          id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v29, v31, v43, v34, v41, v35, v22);
          id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v38, v37);
          objc_msgSend(v17, sel_distanceFromLocation_, v18);
          double v20 = v19;

          double v21 = v39 >= v36 ? v36 : v39;
          if (v20 <= v21) {
            return 1;
          }
        }
        if (((v42 & 0xFF00) != 0xD100 || (v41 & 0xFF00) == 0xD100)
          && (HIDWORD(v22) >> 8 != 209 || (v40 & 0xFF00) == 0xD100))
        {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_214CF9CA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784F258);
  MEMORY[0x270FA5388](v94, v4);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8, v8);
  unsigned __int8 v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  __int16 v15 = (char *)&v78 - v14;
  MEMORY[0x270FA5388](v13, v16);
  id v18 = (char *)&v78 - v17;
  uint64_t v90 = type metadata accessor for ODIKnownBinding();
  uint64_t v96 = *(void *)(v90 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v90, v19);
  uint64_t v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v23);
  uint64_t v98 = (uint64_t)&v78 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD0);
  uint64_t v27 = MEMORY[0x270FA5388](v25 - 8, v26);
  char v95 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27, v29);
  double v31 = (int64_t *)((char *)&v78 - v30);
  uint64_t v32 = *a2;
  if (*a2 == 1) {
    return 0;
  }
  uint64_t v34 = *a1;
  if (*a1 == 1) {
    return 1;
  }
  BOOL v35 = *((unsigned __int8 *)a1 + 8) != 209 && *((unsigned __int8 *)a2 + 8) == 209;
  uint64_t result = 1;
  if (!v35 && v34)
  {
    char v81 = v22;
    uint64_t v82 = v11;
    char v92 = v15;
    char v93 = v18;
    uint64_t v36 = *(void *)(v34 + 64);
    uint64_t v79 = v34 + 64;
    uint64_t v37 = v34;
    uint64_t v38 = 1 << *(unsigned char *)(v34 + 32);
    uint64_t v39 = -1;
    if (v38 < 64) {
      uint64_t v39 = ~(-1 << v38);
    }
    unint64_t v40 = v39 & v36;
    uint64_t v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    char v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56);
    int64_t v80 = (unint64_t)(v38 + 63) >> 6;
    int64_t v78 = v80 - 1;
    uint64_t v83 = v37;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v91 = 0;
    uint64_t v88 = v6;
    uint64_t v41 = v90;
    uint64_t v42 = v98;
    uint64_t v43 = v95;
    uint64_t v84 = v32;
    char v85 = v31;
    while (v40)
    {
      unint64_t v44 = __clz(__rbit64(v40));
      uint64_t v45 = (v40 - 1) & v40;
      unint64_t v46 = v44 | (v91 << 6);
LABEL_15:
      uint64_t v47 = *(void *)(v83 + 56);
      uint64_t v48 = (void *)(*(void *)(v83 + 48) + 16 * v46);
      uint64_t v49 = v48[1];
      *uint64_t v43 = *v48;
      v43[1] = v49;
      uint64_t v50 = v47 + *(void *)(v96 + 72) * v46;
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
      sub_214B9163C(v50, (uint64_t)v43 + *(int *)(v51 + 48));
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v43, 0, 1, v51);
      swift_bridgeObjectRetain();
LABEL_34:
      sub_214B6AC38((uint64_t)v43, (uint64_t)v31, &qword_26784EFD0);
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
      int v57 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v31, 1, v56);
      BOOL v89 = v57 != 1;
      if (v57 == 1) {
        goto LABEL_50;
      }
      uint64_t v59 = *v31;
      uint64_t v58 = v31[1];
      sub_214D04358((uint64_t)v31 + *(int *)(v56 + 48), v42, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
      uint64_t v60 = v87;
      unint64_t v97 = v45;
      if (v32)
      {
        if (*(void *)(v32 + 16) && (uint64_t v61 = sub_214B87FEC(v59, v58), (v62 & 1) != 0))
        {
          uint64_t v63 = v96;
          uint64_t v64 = (uint64_t)v93;
          sub_214B9163C(*(void *)(v32 + 56) + *(void *)(v96 + 72) * v61, (uint64_t)v93);
          uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
          v65((char *)v64, 0, 1, v41);
        }
        else
        {
          uint64_t v65 = *v60;
          uint64_t v64 = (uint64_t)v93;
          (*v60)(v93, 1, 1, v41);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v65 = *v60;
        uint64_t v64 = (uint64_t)v93;
        (*v60)(v93, 1, 1, v41);
      }
      uint64_t v66 = v41;
      uint64_t v67 = v98;
      uint64_t v68 = (uint64_t)v92;
      sub_214B9163C(v98, (uint64_t)v92);
      v65((char *)v68, 0, 1, v66);
      uint64_t v69 = (uint64_t)v88;
      uint64_t v70 = (uint64_t)&v88[*(int *)(v94 + 48)];
      sub_214B95764(v64, (uint64_t)v88, &qword_26784D878);
      sub_214B95764(v68, v70, &qword_26784D878);
      __int16 v71 = *v86;
      if ((*v86)(v69, 1, v66) == 1)
      {
        sub_214B59CE0(v68, &qword_26784D878);
        sub_214B59CE0(v64, &qword_26784D878);
        sub_214D043C0(v67, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        if (v71(v70, 1, v66) != 1) {
          goto LABEL_49;
        }
        uint64_t v41 = v66;
        uint64_t v42 = v67;
        uint64_t result = sub_214B59CE0(v69, &qword_26784D878);
        uint64_t v43 = v95;
        uint64_t v32 = v84;
        double v31 = v85;
        unint64_t v40 = v97;
      }
      else
      {
        uint64_t v72 = v69;
        uint64_t v73 = v69;
        uint64_t v74 = (uint64_t)v82;
        sub_214B95764(v72, (uint64_t)v82, &qword_26784D878);
        unsigned int v75 = v71(v70, 1, v66);
        uint64_t v43 = v95;
        if (v75 == 1)
        {
          sub_214B59CE0((uint64_t)v92, &qword_26784D878);
          sub_214B59CE0((uint64_t)v93, &qword_26784D878);
          sub_214D043C0(v98, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
          sub_214D043C0(v74, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
          uint64_t v69 = v73;
LABEL_49:
          sub_214B59CE0(v69, &qword_26784F258);
LABEL_50:
          swift_release();
          return v89;
        }
        uint64_t v76 = (uint64_t)v81;
        sub_214D04358(v70, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        char v77 = sub_214CE4364(v74, v76);
        sub_214D043C0(v76, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        sub_214B59CE0((uint64_t)v92, &qword_26784D878);
        sub_214B59CE0((uint64_t)v93, &qword_26784D878);
        uint64_t v42 = v98;
        sub_214D043C0(v98, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        sub_214D043C0(v74, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
        uint64_t result = sub_214B59CE0(v73, &qword_26784D878);
        uint64_t v41 = v90;
        uint64_t v32 = v84;
        double v31 = v85;
        unint64_t v40 = v97;
        if ((v77 & 1) == 0) {
          goto LABEL_50;
        }
      }
    }
    int64_t v52 = v91 + 1;
    if (__OFADD__(v91, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v52 >= v80)
    {
LABEL_33:
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784EFD8);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v43, 1, 1, v55);
      uint64_t v45 = 0;
      goto LABEL_34;
    }
    unint64_t v53 = *(void *)(v79 + 8 * v52);
    if (!v53)
    {
      int64_t v54 = v91 + 2;
      ++v91;
      if (v52 + 1 >= v80) {
        goto LABEL_33;
      }
      unint64_t v53 = *(void *)(v79 + 8 * v54);
      if (!v53)
      {
        int64_t v91 = v52 + 1;
        if (v52 + 2 >= v80) {
          goto LABEL_33;
        }
        unint64_t v53 = *(void *)(v79 + 8 * (v52 + 2));
        if (v53)
        {
          v52 += 2;
          goto LABEL_19;
        }
        int64_t v54 = v52 + 3;
        int64_t v91 = v52 + 2;
        if (v52 + 3 >= v80) {
          goto LABEL_33;
        }
        unint64_t v53 = *(void *)(v79 + 8 * v54);
        if (!v53)
        {
          while (1)
          {
            int64_t v52 = v54 + 1;
            if (__OFADD__(v54, 1)) {
              break;
            }
            if (v52 >= v80)
            {
              int64_t v91 = v78;
              goto LABEL_33;
            }
            unint64_t v53 = *(void *)(v79 + 8 * v52);
            ++v54;
            if (v53) {
              goto LABEL_19;
            }
          }
LABEL_53:
          __break(1u);
          return result;
        }
      }
      int64_t v52 = v54;
    }
LABEL_19:
    uint64_t v45 = (v53 - 1) & v53;
    unint64_t v46 = __clz(__rbit64(v53)) + (v52 << 6);
    int64_t v91 = v52;
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_214CFA4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1, a2);
  uint64_t v4 = v3;
  sub_214B6AC38(v2, (uint64_t)v165, &qword_26784EAD8);
  sub_214B6AC38(v4, (uint64_t)v166, &qword_26784EAD8);
  sub_214B6AC38((uint64_t)v166, (uint64_t)v167, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v167) == 1)
  {
    uint64_t v5 = 0;
    unsigned __int8 v6 = 0;
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v5 = v167[0];
    uint64_t v7 = v167[1];
    unsigned __int8 v6 = v168;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v163, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v163) == 1)
  {
    uint64_t v8 = 0;
    unsigned __int8 v9 = 0;
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v8 = v163[0];
    uint64_t v10 = v163[1];
    unsigned __int8 v9 = v164;
    swift_bridgeObjectRetain();
  }
  char v11 = sub_214C8391C(v5, v7, v6, v8, v10, v9);
  sub_214D0692C(v8, v10);
  sub_214D0692C(v5, v7);
  if (v11) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v161, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v161) == 1)
  {
    uint64_t v12 = 0;
    unsigned __int8 v13 = 0;
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v12 = v161[3];
    uint64_t v14 = v161[4];
    unsigned __int8 v13 = v162;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v159, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v159) == 1)
  {
    uint64_t v15 = 0;
    unsigned __int8 v16 = 0;
    uint64_t v17 = 1;
  }
  else
  {
    uint64_t v15 = v159[3];
    uint64_t v17 = v159[4];
    unsigned __int8 v16 = v160;
    swift_bridgeObjectRetain();
  }
  char v18 = sub_214C8391C(v12, v14, v13, v15, v17, v16);
  sub_214D0692C(v15, v17);
  sub_214D0692C(v12, v14);
  if (v18) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v157, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v157) == 1)
  {
    uint64_t v19 = 0;
    unsigned __int8 v20 = 0;
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v19 = v157[6];
    uint64_t v21 = v157[7];
    unsigned __int8 v20 = v158;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v155, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v155) == 1)
  {
    uint64_t v22 = 0;
    unsigned __int8 v23 = 0;
    uint64_t v24 = 1;
  }
  else
  {
    uint64_t v22 = v155[6];
    uint64_t v24 = v155[7];
    unsigned __int8 v23 = v156;
    swift_bridgeObjectRetain();
  }
  char v25 = sub_214C8391C(v19, v21, v20, v22, v24, v23);
  sub_214D0692C(v22, v24);
  sub_214D0692C(v19, v21);
  if (v25) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v153, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v153) == 1)
  {
    uint64_t v26 = 0;
    unsigned __int8 v27 = 0;
    uint64_t v28 = 1;
  }
  else
  {
    uint64_t v26 = v153[9];
    uint64_t v28 = v153[10];
    unsigned __int8 v27 = v154;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v151, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v151) == 1)
  {
    uint64_t v29 = 0;
    unsigned __int8 v30 = 0;
    uint64_t v31 = 1;
  }
  else
  {
    uint64_t v29 = v151[9];
    uint64_t v31 = v151[10];
    unsigned __int8 v30 = v152;
    swift_bridgeObjectRetain();
  }
  char v32 = sub_214C8391C(v26, v28, v27, v29, v31, v30);
  sub_214D0692C(v29, v31);
  sub_214D0692C(v26, v28);
  if (v32) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v149, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v149) == 1)
  {
    uint64_t v33 = 0;
    unsigned __int8 v34 = 0;
    uint64_t v35 = 1;
  }
  else
  {
    uint64_t v33 = v149[12];
    uint64_t v35 = v149[13];
    unsigned __int8 v34 = v150;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v145, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v145) == 1)
  {
    uint64_t v36 = 0;
    unsigned __int8 v37 = 0;
    uint64_t v38 = 1;
  }
  else
  {
    uint64_t v36 = v146;
    uint64_t v38 = v147;
    unsigned __int8 v37 = v148;
    swift_bridgeObjectRetain();
  }
  char v39 = sub_214C8391C(v33, v35, v34, v36, v38, v37);
  sub_214D0692C(v36, v38);
  sub_214D0692C(v33, v35);
  if (v39) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v141, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v141) == 1)
  {
    uint64_t v40 = 0;
    unsigned __int8 v41 = 0;
    uint64_t v42 = 1;
  }
  else
  {
    uint64_t v40 = v142;
    uint64_t v42 = v143;
    unsigned __int8 v41 = v144;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v137, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v137) == 1)
  {
    uint64_t v43 = 0;
    unsigned __int8 v44 = 0;
    uint64_t v45 = 1;
  }
  else
  {
    uint64_t v43 = v138;
    uint64_t v45 = v139;
    unsigned __int8 v44 = v140;
    swift_bridgeObjectRetain();
  }
  char v46 = sub_214C8391C(v40, v42, v41, v43, v45, v44);
  sub_214D0692C(v43, v45);
  sub_214D0692C(v40, v42);
  if (v46) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v133, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v133) == 1)
  {
    uint64_t v47 = 0;
    unsigned __int8 v48 = 0;
    uint64_t v49 = 1;
  }
  else
  {
    uint64_t v47 = v134;
    uint64_t v49 = v135;
    unsigned __int8 v48 = v136;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v129, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v129) == 1)
  {
    uint64_t v50 = 0;
    unsigned __int8 v51 = 0;
    uint64_t v52 = 1;
  }
  else
  {
    uint64_t v50 = v130;
    uint64_t v52 = v131;
    unsigned __int8 v51 = v132;
    swift_bridgeObjectRetain();
  }
  char v53 = sub_214C8391C(v47, v49, v48, v50, v52, v51);
  sub_214D0692C(v50, v52);
  sub_214D0692C(v47, v49);
  if (v53) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v125, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v125) == 1)
  {
    uint64_t v54 = 0;
    unsigned __int8 v55 = 0;
    uint64_t v56 = 1;
  }
  else
  {
    uint64_t v54 = v126;
    uint64_t v56 = v127;
    unsigned __int8 v55 = v128;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v121, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v121) == 1)
  {
    uint64_t v57 = 0;
    unsigned __int8 v58 = 0;
    uint64_t v59 = 1;
  }
  else
  {
    uint64_t v57 = v122;
    uint64_t v59 = v123;
    unsigned __int8 v58 = v124;
    swift_bridgeObjectRetain();
  }
  char v60 = sub_214C8391C(v54, v56, v55, v57, v59, v58);
  sub_214D0692C(v57, v59);
  sub_214D0692C(v54, v56);
  if (v60) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v117, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v117) == 1)
  {
    uint64_t v61 = 0;
    unsigned __int8 v62 = 0;
    uint64_t v63 = 1;
  }
  else
  {
    uint64_t v61 = v118;
    uint64_t v63 = v119;
    unsigned __int8 v62 = v120;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v113, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v113) == 1)
  {
    uint64_t v64 = 0;
    unsigned __int8 v65 = 0;
    uint64_t v66 = 1;
  }
  else
  {
    uint64_t v64 = v114;
    uint64_t v66 = v115;
    unsigned __int8 v65 = v116;
    swift_bridgeObjectRetain();
  }
  char v67 = sub_214C8391C(v61, v63, v62, v64, v66, v65);
  sub_214D0692C(v64, v66);
  sub_214D0692C(v61, v63);
  if (v67) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v109, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v109) == 1)
  {
    uint64_t v68 = 0;
    unsigned __int8 v69 = 0;
    uint64_t v70 = 1;
  }
  else
  {
    uint64_t v68 = v110;
    uint64_t v70 = v111;
    unsigned __int8 v69 = v112;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v105, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v105) == 1)
  {
    uint64_t v71 = 0;
    unsigned __int8 v72 = 0;
    uint64_t v73 = 1;
  }
  else
  {
    uint64_t v71 = v106;
    uint64_t v73 = v107;
    unsigned __int8 v72 = v108;
    swift_bridgeObjectRetain();
  }
  char v74 = sub_214C8391C(v68, v70, v69, v71, v73, v72);
  sub_214D0692C(v71, v73);
  sub_214D0692C(v68, v70);
  if (v74) {
    goto LABEL_78;
  }
  sub_214B6AC38((uint64_t)v166, (uint64_t)v101, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v101) == 1)
  {
    uint64_t v75 = 0;
    unsigned __int8 v76 = 0;
    uint64_t v77 = 1;
  }
  else
  {
    uint64_t v75 = v102;
    uint64_t v77 = v103;
    unsigned __int8 v76 = v104;
    swift_bridgeObjectRetain();
  }
  sub_214B6AC38((uint64_t)v165, (uint64_t)v97, &qword_26784EAD8);
  if (sub_214B6AC9C((uint64_t)v97) == 1)
  {
    uint64_t v78 = 0;
    unsigned __int8 v79 = 0;
    uint64_t v80 = 1;
  }
  else
  {
    uint64_t v78 = v98;
    uint64_t v80 = v99;
    unsigned __int8 v79 = v100;
    swift_bridgeObjectRetain();
  }
  char v81 = sub_214C8391C(v75, v77, v76, v78, v80, v79);
  sub_214D0692C(v78, v80);
  sub_214D0692C(v75, v77);
  if (v81)
  {
LABEL_78:
    char v82 = 0;
  }
  else
  {
    sub_214B6AC38((uint64_t)v166, (uint64_t)v93, &qword_26784EAD8);
    if (sub_214B6AC9C((uint64_t)v93) == 1)
    {
      uint64_t v84 = 0;
      unsigned __int8 v85 = 0;
      uint64_t v86 = 1;
    }
    else
    {
      uint64_t v84 = v94;
      uint64_t v86 = v95;
      unsigned __int8 v85 = v96;
      swift_bridgeObjectRetain();
    }
    sub_214B6AC38((uint64_t)v165, (uint64_t)v91, &qword_26784EAD8);
    if (sub_214B6AC9C((uint64_t)v91) == 1)
    {
      uint64_t v87 = 0;
      unsigned __int8 v88 = 0;
      uint64_t v89 = 1;
    }
    else
    {
      uint64_t v87 = v91[33];
      uint64_t v89 = v91[34];
      unsigned __int8 v88 = v92;
      swift_bridgeObjectRetain();
    }
    char v90 = sub_214C8391C(v84, v86, v85, v87, v89, v88);
    sub_214D0692C(v87, v89);
    sub_214D0692C(v84, v86);
    char v82 = v90 ^ 1;
  }
  return v82 & 1;
}

uint64_t sub_214CFB024(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v26 = a1[3];
  __int16 v25 = *((_WORD *)a1 + 16);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v24 = a2[3];
  __int16 v8 = *((_WORD *)a2 + 16);
  uint64_t v9 = *a2;
  if (v9 == 3) {
    __int16 v10 = 3;
  }
  else {
    __int16 v10 = *a2;
  }
  if (v2 == 3) {
    __int16 v11 = 3;
  }
  else {
    __int16 v11 = v2;
  }
  if ((sub_214C865E8(v10, v11) & 1) != 0
    || (v9 != 3 ? (__int16 v12 = WORD1(v5)) : (__int16 v12 = 3),
        v2 != 3 ? (__int16 v13 = WORD1(v2)) : (__int16 v13 = 3),
        (sub_214C865E8(v12, v13) & 1) != 0
     || (v9 != 3 ? (uint64_t v14 = v6) : (uint64_t v14 = 0),
         v9 != 3 ? (__int16 v15 = v7 & 0xFF01) : (__int16 v15 = -9728),
         v2 != 3 ? (uint64_t v16 = v3) : (uint64_t v16 = 0),
         v2 != 3 ? (__int16 v17 = v4 & 0xFF01) : (__int16 v17 = -9728),
         (sub_214C84FA8(v14, v15, v16, v17) & 1) != 0)))
  {
    char v18 = 0;
  }
  else
  {
    if (v9 == 3) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = v24;
    }
    if (v9 == 3) {
      __int16 v21 = -9728;
    }
    else {
      __int16 v21 = v8 & 0xFF01;
    }
    if (v2 == 3) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v26;
    }
    if (v2 == 3) {
      __int16 v23 = -9728;
    }
    else {
      __int16 v23 = v25 & 0xFF01;
    }
    char v18 = sub_214C84FA8(v20, v21, v22, v23) ^ 1;
  }
  return v18 & 1;
}

BOOL sub_214CFB13C(uint64_t a1, uint64_t a2)
{
  sub_214B6AC38(a1, (uint64_t)v95, &qword_26784EAE0);
  sub_214B6AC38(a2, (uint64_t)v96, &qword_26784EAE0);
  sub_214B6AC38((uint64_t)v96, (uint64_t)&v97, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)&v97) == 1)
  {
    uint64_t v3 = 0;
    __int16 v4 = -9728;
  }
  else
  {
    uint64_t v3 = v97;
    __int16 v4 = v98 | (v99 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)&v92, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)&v92) == 1)
  {
    uint64_t v5 = 0;
    __int16 v6 = -9728;
  }
  else
  {
    uint64_t v5 = v92;
    __int16 v6 = v93 | (v94 << 8);
  }
  if (sub_214C87C54(v3, v4, v5, v6)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v88, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v88) == 1)
  {
    uint64_t v7 = 0;
    __int16 v8 = -9728;
  }
  else
  {
    uint64_t v7 = v89;
    __int16 v8 = v90 | (v91 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v84, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v84) == 1)
  {
    uint64_t v9 = 0;
    __int16 v10 = -9728;
  }
  else
  {
    uint64_t v9 = v85;
    __int16 v10 = v86 | (v87 << 8);
  }
  if (sub_214C87C54(v7, v8, v9, v10)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v80, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v80) == 1)
  {
    uint64_t v11 = 0;
    __int16 v12 = -9728;
  }
  else
  {
    uint64_t v11 = v81;
    __int16 v12 = v82 | (v83 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v76, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v76) == 1)
  {
    uint64_t v13 = 0;
    __int16 v14 = -9728;
  }
  else
  {
    uint64_t v13 = v77;
    __int16 v14 = v78 | (v79 << 8);
  }
  if (sub_214C87C54(v11, v12, v13, v14)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v72, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v72) == 1)
  {
    uint64_t v15 = 0;
    __int16 v16 = -9728;
  }
  else
  {
    uint64_t v15 = v73;
    __int16 v16 = v74 | (v75 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v68, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v68) == 1)
  {
    uint64_t v17 = 0;
    __int16 v18 = -9728;
  }
  else
  {
    uint64_t v17 = v69;
    __int16 v18 = v70 | (v71 << 8);
  }
  if (sub_214C87C54(v15, v16, v17, v18)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v64, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v64) == 1)
  {
    uint64_t v19 = 0;
    __int16 v20 = -9728;
  }
  else
  {
    uint64_t v19 = v65;
    __int16 v20 = v66 | (v67 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v60, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v60) == 1)
  {
    uint64_t v21 = 0;
    __int16 v22 = -9728;
  }
  else
  {
    uint64_t v21 = v61;
    __int16 v22 = v62 | (v63 << 8);
  }
  if (sub_214C87C54(v19, v20, v21, v22)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v56, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v56) == 1)
  {
    uint64_t v23 = 0;
    __int16 v24 = -9728;
  }
  else
  {
    uint64_t v23 = v57;
    __int16 v24 = v58 | (v59 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v52, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v52) == 1)
  {
    uint64_t v25 = 0;
    __int16 v26 = -9728;
  }
  else
  {
    uint64_t v25 = v53;
    __int16 v26 = v54 | (v55 << 8);
  }
  if (sub_214C87C54(v23, v24, v25, v26)) {
    return 0;
  }
  sub_214B6AC38((uint64_t)v96, (uint64_t)v48, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v48) == 1)
  {
    uint64_t v27 = 0;
    __int16 v28 = -9728;
  }
  else
  {
    uint64_t v27 = v49;
    __int16 v28 = v50 | (v51 << 8);
  }
  sub_214B6AC38((uint64_t)v95, (uint64_t)v44, &qword_26784EAE0);
  if (sub_214D0690C((uint64_t)v44) == 1)
  {
    uint64_t v29 = 0;
    __int16 v30 = -9728;
  }
  else
  {
    uint64_t v29 = v45;
    __int16 v30 = v46 | (v47 << 8);
  }
  if (sub_214C87C54(v27, v28, v29, v30))
  {
    return 0;
  }
  else
  {
    sub_214B6AC38((uint64_t)v96, (uint64_t)v40, &qword_26784EAE0);
    if (sub_214D0690C((uint64_t)v40) == 1)
    {
      uint64_t v33 = 0;
      __int16 v34 = -9728;
    }
    else
    {
      uint64_t v33 = v41;
      __int16 v34 = v42 | (v43 << 8);
    }
    sub_214B6AC38((uint64_t)v95, (uint64_t)v37, &qword_26784EAE0);
    if (sub_214D0690C((uint64_t)v37) == 1)
    {
      uint64_t v35 = 0;
      __int16 v36 = -9728;
    }
    else
    {
      uint64_t v35 = v37[14];
      __int16 v36 = v38 | (v39 << 8);
    }
    return !sub_214C87C54(v33, v34, v35, v36);
  }
}

BOOL _s17CoreODIEssentials16ArmandDeviceDataV21isLessCompleteOrEqual3lhs2toSbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v158 = *(_OWORD *)(a1 + 8);
  __int16 v4 = (unsigned __int8 *)(a2 + 408);
  unsigned __int8 v159 = *(unsigned char *)(a1 + 24);
  uint64_t v168 = *(void *)(a1 + 32);
  uint64_t v167 = *(void *)(a1 + 40);
  uint64_t v169 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v166 = *(void *)(a1 + 56);
  uint64_t v165 = *(void *)(a1 + 64);
  char v164 = *(unsigned char *)(a1 + 72);
  uint64_t v142 = *(void *)(a1 + 80);
  uint64_t v141 = *(void *)(a1 + 88);
  uint64_t v145 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v140 = *(void *)(a1 + 104);
  uint64_t v139 = *(void *)(a1 + 112);
  uint64_t v144 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v138 = *(void *)(a1 + 128);
  uint64_t v137 = *(void *)(a1 + 136);
  uint64_t v143 = *(unsigned __int8 *)(a1 + 144);
  uint64_t v151 = *(void *)(a1 + 152);
  __int16 v150 = *(unsigned __int8 *)(a1 + 160);
  __int16 v149 = *(unsigned __int8 *)(a1 + 161);
  uint64_t v71 = *(unsigned __int8 *)(a1 + 424);
  uint64_t v70 = *(unsigned __int8 *)(a1 + 440);
  uint64_t v100 = *(unsigned __int8 *)(a1 + 456);
  __int16 v99 = *(unsigned __int8 *)(a1 + 472);
  uint64_t v125 = *(void *)(a1 + 168);
  uint64_t v127 = *(void *)(a1 + 176);
  unsigned __int8 v126 = *(unsigned char *)(a1 + 184);
  uint64_t v133 = *(void *)(a1 + 192);
  uint64_t v117 = *(unsigned __int8 *)(a1 + 200);
  uint64_t v116 = *(unsigned __int8 *)(a1 + 201);
  long long v118 = *(_OWORD *)(a1 + 208);
  *(void *)&long long v119 = *(unsigned __int8 *)(a1 + 224);
  *((void *)&v119 + 1) = *(void *)(a1 + 232);
  uint64_t v134 = *(void *)(a1 + 240);
  char v135 = *(unsigned char *)(a1 + 248);
  long long v101 = *(_OWORD *)(a1 + 256);
  *(void *)&long long v102 = *(unsigned __int8 *)(a1 + 272);
  *((void *)&v102 + 1) = *(void *)(a1 + 280);
  *(void *)&long long v103 = *(void *)(a1 + 288);
  *((void *)&v103 + 1) = *(unsigned __int8 *)(a1 + 296);
  long long v105 = *(_OWORD *)(a1 + 304);
  __int16 v111 = *(unsigned __int8 *)(a1 + 320);
  __int16 v108 = *(unsigned __int8 *)(a1 + 321);
  __int16 v104 = *(unsigned __int8 *)(a1 + 322);
  uint64_t v59 = *(void *)(a1 + 328);
  uint64_t v61 = *(void *)(a1 + 336);
  unsigned __int8 v60 = *(unsigned char *)(a1 + 344);
  __int16 v54 = *(unsigned __int8 *)(a1 + 346);
  __int16 v55 = *(unsigned __int8 *)(a1 + 345);
  uint64_t v49 = *(void *)(a1 + 352);
  uint64_t v51 = *(void *)(a1 + 360);
  unsigned __int8 v50 = *(unsigned char *)(a1 + 368);
  uint64_t v93 = *(void *)(a1 + 376);
  uint64_t v92 = *(void *)(a1 + 384);
  uint64_t v90 = *(unsigned __int8 *)(a1 + 392);
  uint64_t v66 = *(unsigned __int8 *)(a1 + 393);
  uint64_t v68 = *(unsigned __int8 *)(a1 + 394);
  uint64_t v91 = *(void *)(a1 + 400);
  uint64_t v67 = *(unsigned __int8 *)(a1 + 408);
  uint64_t v65 = *(unsigned __int8 *)(a1 + 409);
  uint64_t v69 = *(void *)(a1 + 416);
  uint64_t v64 = *(unsigned __int8 *)(a1 + 425);
  uint64_t v95 = *(void *)(a1 + 432);
  uint64_t v63 = *(unsigned __int8 *)(a1 + 441);
  uint64_t v97 = *(void *)(a1 + 448);
  uint64_t v96 = *(unsigned __int8 *)(a1 + 457);
  uint64_t v98 = *(void *)(a1 + 464);
  __int16 v94 = *(unsigned __int8 *)(a1 + 473);
  uint64_t v43 = *(void *)(a1 + 480);
  char v42 = *(unsigned char *)(a1 + 488);
  memcpy(__dst, (const void *)(a1 + 496), sizeof(__dst));
  uint64_t v23 = *(unsigned __int8 *)(a1 + 784);
  uint64_t v46 = *(unsigned __int8 *)(a1 + 785);
  uint64_t v24 = *(unsigned __int8 *)(a1 + 786);
  uint64_t v25 = *(unsigned __int8 *)(a1 + 787);
  uint64_t v29 = *(unsigned __int8 *)(a1 + 800);
  uint64_t v30 = *(void *)(a1 + 792);
  uint64_t v27 = *(unsigned __int8 *)(a1 + 801);
  uint64_t v31 = *(void *)(a1 + 808);
  __int16 v28 = *(unsigned __int8 *)(a1 + 816);
  __int16 v26 = *(unsigned __int8 *)(a1 + 817);
  long long v5 = *(_OWORD *)(a1 + 904);
  long long v179 = *(_OWORD *)(a1 + 888);
  long long v180 = v5;
  v181[0] = *(_OWORD *)(a1 + 920);
  *(_OWORD *)((char *)v181 + 10) = *(_OWORD *)(a1 + 930);
  long long v6 = *(_OWORD *)(a1 + 840);
  long long v175 = *(_OWORD *)(a1 + 824);
  long long v176 = v6;
  long long v7 = *(_OWORD *)(a1 + 872);
  long long v177 = *(_OWORD *)(a1 + 856);
  long long v178 = v7;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v13 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v162 = *(void *)(a2 + 64);
  unsigned __int8 v163 = *(unsigned char *)(a2 + 72);
  uint64_t v161 = *(void *)(a2 + 80);
  uint64_t v160 = *(void *)(a2 + 88);
  uint64_t v136 = *(unsigned __int8 *)(a2 + 96);
  uint64_t v156 = *(void *)(a2 + 104);
  uint64_t v155 = *(void *)(a2 + 112);
  uint64_t v157 = *(unsigned __int8 *)(a2 + 120);
  uint64_t v154 = *(void *)(a2 + 128);
  uint64_t v153 = *(void *)(a2 + 136);
  uint64_t v89 = v4[16];
  uint64_t v88 = v4[32];
  uint64_t v87 = v4[48];
  __int16 v86 = v4[64];
  uint64_t v152 = *(unsigned __int8 *)(a2 + 144);
  uint64_t v148 = *(void *)(a2 + 152);
  int v147 = *(unsigned __int8 *)(a2 + 160);
  int v146 = *(unsigned __int8 *)(a2 + 161);
  uint64_t v122 = *(void *)(a2 + 168);
  uint64_t v124 = *(void *)(a2 + 176);
  unsigned __int8 v123 = *(unsigned char *)(a2 + 184);
  uint64_t v130 = *(void *)(a2 + 192);
  uint64_t v113 = *(unsigned __int8 *)(a2 + 200);
  uint64_t v112 = *(unsigned __int8 *)(a2 + 201);
  long long v131 = *(_OWORD *)(a2 + 208);
  *(void *)&long long v132 = *(unsigned __int8 *)(a2 + 224);
  *((void *)&v132 + 1) = *(void *)(a2 + 232);
  uint64_t v114 = *(void *)(a2 + 240);
  char v115 = *(unsigned char *)(a2 + 248);
  long long v128 = *(_OWORD *)(a2 + 256);
  uint64_t v129 = *(unsigned __int8 *)(a2 + 272);
  uint64_t v120 = *(void *)(a2 + 280);
  *(void *)&long long v121 = *(void *)(a2 + 288);
  *((void *)&v121 + 1) = *(unsigned __int8 *)(a2 + 296);
  long long v110 = *(_OWORD *)(a2 + 304);
  __int16 v109 = *(unsigned __int8 *)(a2 + 320);
  __int16 v106 = *(unsigned __int8 *)(a2 + 321);
  __int16 v107 = *(unsigned __int8 *)(a2 + 322);
  uint64_t v56 = *(void *)(a2 + 328);
  uint64_t v58 = *(void *)(a2 + 336);
  unsigned __int8 v57 = *(unsigned char *)(a2 + 344);
  __int16 v52 = *(unsigned __int8 *)(a2 + 345);
  __int16 v53 = *(unsigned __int8 *)(a2 + 346);
  long long v47 = *(_OWORD *)(a2 + 352);
  unsigned __int8 v48 = *(unsigned char *)(a2 + 368);
  uint64_t v72 = *(unsigned __int8 *)(a2 + 392);
  uint64_t v62 = *(unsigned __int8 *)(a2 + 393);
  uint64_t v73 = *(unsigned __int8 *)(a2 + 394);
  uint64_t v74 = *(void *)(a2 + 376);
  uint64_t v76 = *(void *)(a2 + 400);
  uint64_t v77 = *(void *)(a2 + 384);
  *(void *)&long long v78 = *(unsigned __int8 *)(a2 + 408);
  uint64_t v75 = *(unsigned __int8 *)(a2 + 409);
  *((void *)&v78 + 1) = *(void *)(a2 + 416);
  uint64_t v79 = *(unsigned __int8 *)(a2 + 425);
  uint64_t v80 = *(void *)(a2 + 432);
  uint64_t v81 = *(unsigned __int8 *)(a2 + 441);
  uint64_t v82 = *(void *)(a2 + 448);
  uint64_t v83 = *(unsigned __int8 *)(a2 + 457);
  uint64_t v85 = *(void *)(a2 + 464);
  __int16 v84 = *(unsigned __int8 *)(a2 + 473);
  uint64_t v40 = *(void *)(a2 + 480);
  char v41 = *(unsigned char *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  uint64_t v45 = *(unsigned __int8 *)(a2 + 784);
  uint64_t v44 = *(unsigned __int8 *)(a2 + 785);
  uint64_t v38 = *(unsigned __int8 *)(a2 + 786);
  uint64_t v39 = *(unsigned __int8 *)(a2 + 787);
  uint64_t v36 = *(void *)(a2 + 792);
  uint64_t v37 = *(unsigned __int8 *)(a2 + 800);
  uint64_t v35 = *(unsigned __int8 *)(a2 + 801);
  uint64_t v34 = *(void *)(a2 + 808);
  int v32 = *(unsigned __int8 *)(a2 + 817);
  int v33 = *(unsigned __int8 *)(a2 + 816);
  long long v15 = *(_OWORD *)(a2 + 904);
  long long v187 = *(_OWORD *)(a2 + 888);
  long long v188 = v15;
  v189[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v189 + 10) = *(_OWORD *)(a2 + 930);
  long long v16 = *(_OWORD *)(a2 + 840);
  long long v183 = *(_OWORD *)(a2 + 824);
  long long v184 = v16;
  long long v17 = *(_OWORD *)(a2 + 872);
  long long v185 = *(_OWORD *)(a2 + 856);
  long long v186 = v17;
  if ((sub_214C7E0C8(v158, *((uint64_t *)&v158 + 1), v159, v9, v8, v10) & 1) == 0
    || (sub_214C7E0C8(v168, v167, v169, v12, v11, v13) & 1) == 0
    || (sub_214C7E0C8(v166, v165, v164, v14, v162, v163) & 1) == 0)
  {
    v173[0] = v158;
    *(void *)&v173[1] = v159;
    *((void *)&v173[1] + 1) = v168;
    *(void *)&v173[2] = v167;
    *((void *)&v173[2] + 1) = v169;
    *(void *)&v173[3] = v166;
    *((void *)&v173[3] + 1) = v165;
    LOBYTE(v173[4]) = v164;
    *(void *)&v172[0] = v9;
    *((void *)&v172[0] + 1) = v8;
    *(void *)&v172[1] = v10;
    *((void *)&v172[1] + 1) = v12;
    *(void *)&v172[2] = v11;
    *((void *)&v172[2] + 1) = v13;
    *(void *)&v172[3] = v14;
    *((void *)&v172[3] + 1) = v162;
    LOBYTE(v172[4]) = v163;
    if ((sub_214CF8F60((uint64_t)v173, (uint64_t)v172) & 1) == 0) {
      return 0;
    }
  }
  if ((sub_214C7E0C8(v142, v141, v145, v161, v160, v136) & 1) == 0
    || (sub_214C7E0C8(v140, v139, v144, v156, v155, v157) & 1) == 0
    || (sub_214C7E0C8(v138, v137, v143, v154, v153, v152) & 1) == 0
    || !sub_214C80D1C(v151, v150 | (v149 << 8), v148, v147 | (v146 << 8)))
  {
    *(void *)&v173[0] = v142;
    *((void *)&v173[0] + 1) = v141;
    *(void *)&v173[1] = v145;
    *((void *)&v173[1] + 1) = v140;
    *(void *)&v173[2] = v139;
    *((void *)&v173[2] + 1) = v144;
    *(void *)&v173[3] = v138;
    *((void *)&v173[3] + 1) = v137;
    *(void *)&v173[4] = v143;
    *((void *)&v173[4] + 1) = v151;
    LOWORD(v173[5]) = v150 | (v149 << 8);
    *(void *)&v172[0] = v161;
    *((void *)&v172[0] + 1) = v160;
    *(void *)&v172[1] = v136;
    *((void *)&v172[1] + 1) = v156;
    *(void *)&v172[2] = v155;
    *((void *)&v172[2] + 1) = v157;
    *(void *)&v172[3] = v154;
    *((void *)&v172[3] + 1) = v153;
    *(void *)&v172[4] = v152;
    *((void *)&v172[4] + 1) = v148;
    LOWORD(v172[5]) = v147 | ((_WORD)v146 << 8);
    if ((sub_214CF91AC((uint64_t)v173, (uint64_t)v172) & 1) == 0) {
      return 0;
    }
  }
  *(void *)&v173[0] = v125;
  *((void *)&v173[0] + 1) = v127;
  LOBYTE(v173[1]) = v126;
  *(void *)&v172[0] = v122;
  *((void *)&v172[0] + 1) = v124;
  LOBYTE(v172[1]) = v123;
  if ((sub_214CE7468((uint64_t *)v173, (uint64_t *)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v18 = sub_214C8391C(v122, v124, v123, v125, v127, v126);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      return 0;
    }
  }
  *(void *)&v173[0] = v133;
  BYTE8(v173[0]) = v117;
  BYTE9(v173[0]) = v116;
  v173[1] = v118;
  LOBYTE(v173[2]) = v119;
  *((void *)&v173[2] + 1) = *((void *)&v119 + 1);
  *(void *)&v173[3] = v134;
  BYTE8(v173[3]) = v135;
  *(void *)&v172[0] = v130;
  BYTE8(v172[0]) = v113;
  BYTE9(v172[0]) = v112;
  v172[1] = v131;
  LOBYTE(v172[2]) = v132;
  *((void *)&v172[2] + 1) = *((void *)&v132 + 1);
  *(void *)&v172[3] = v114;
  BYTE8(v172[3]) = v115;
  if ((sub_214CE47FC((uint64_t *)v173, (uint64_t *)v172) & 1) == 0)
  {
    *(void *)&v173[0] = v133;
    *((void *)&v173[0] + 1) = v117 | (v116 << 8);
    v173[1] = v118;
    v173[2] = v119;
    *(void *)&v173[3] = v134;
    BYTE8(v173[3]) = v135;
    *(void *)&v172[0] = v130;
    *((void *)&v172[0] + 1) = v113 | (v112 << 8);
    v172[1] = v131;
    v172[2] = v132;
    *(void *)&v172[3] = v114;
    BYTE8(v172[3]) = v115;
    if ((sub_214CF9450((uint64_t)v173, (uint64_t)v172) & 1) == 0) {
      return 0;
    }
  }
  if ((sub_214C7E0C8(v101, *((uint64_t *)&v101 + 1), v102, v128, *((uint64_t *)&v128 + 1), v129) & 1) == 0
    || (sub_214C7E0C8(*((uint64_t *)&v102 + 1), v103, SBYTE8(v103), v120, v121, BYTE8(v121)) & 1) == 0
    || (sub_214C7E0C8(v105, *((uint64_t *)&v105 + 1), v111, v110, *((uint64_t *)&v110 + 1), v109) & 1) == 0
    || (sub_214C7F6F0(v108 | (unsigned __int16)(v104 << 8), v106 | (unsigned __int16)(v107 << 8)) & 1) == 0)
  {
    v173[0] = v101;
    v173[1] = v102;
    v173[2] = v103;
    v173[3] = v105;
    BYTE2(v173[4]) = v104;
    LOWORD(v173[4]) = v111 | (v108 << 8);
    v172[0] = v128;
    *(void *)&v172[1] = v129;
    *((void *)&v172[1] + 1) = v120;
    v172[2] = v121;
    v172[3] = v110;
    BYTE2(v172[4]) = v107;
    LOWORD(v172[4]) = v109 | (v106 << 8);
    if ((sub_214CF962C((uint64_t)v173, (uint64_t)v172) & 1) == 0) {
      return 0;
    }
  }
  *(void *)&v173[0] = v93;
  *((void *)&v173[0] + 1) = v92;
  LOBYTE(v173[1]) = v90;
  BYTE1(v173[1]) = v66;
  BYTE2(v173[1]) = v68;
  *((void *)&v173[1] + 1) = v91;
  LOBYTE(v173[2]) = v67;
  BYTE1(v173[2]) = v65;
  *((void *)&v173[2] + 1) = v69;
  LOBYTE(v173[3]) = v71;
  BYTE1(v173[3]) = v64;
  *((void *)&v173[3] + 1) = v95;
  LOBYTE(v173[4]) = v70;
  BYTE1(v173[4]) = v63;
  *((void *)&v173[4] + 1) = v97;
  LOBYTE(v173[5]) = v100;
  BYTE1(v173[5]) = v96;
  *((void *)&v173[5] + 1) = v98;
  LOBYTE(v173[6]) = v99;
  BYTE1(v173[6]) = v94;
  *(void *)&v172[0] = v74;
  *((void *)&v172[0] + 1) = v77;
  LOBYTE(v172[1]) = v72;
  BYTE1(v172[1]) = v62;
  BYTE2(v172[1]) = v73;
  *((void *)&v172[1] + 1) = v76;
  LOBYTE(v172[2]) = v78;
  BYTE1(v172[2]) = v75;
  *((void *)&v172[2] + 1) = *((void *)&v78 + 1);
  LOBYTE(v172[3]) = v89;
  BYTE1(v172[3]) = v79;
  *((void *)&v172[3] + 1) = v80;
  LOBYTE(v172[4]) = v88;
  BYTE1(v172[4]) = v81;
  *((void *)&v172[4] + 1) = v82;
  LOBYTE(v172[5]) = v87;
  BYTE1(v172[5]) = v83;
  *((void *)&v172[5] + 1) = v85;
  LOBYTE(v172[6]) = v86;
  BYTE1(v172[6]) = v84;
  if (!sub_214CE2AA0((uint64_t *)v173, (uint64_t *)v172))
  {
    *(void *)&v173[0] = v93;
    *((void *)&v173[0] + 1) = v92;
    *(void *)&v173[1] = v90 | (v66 << 8) | (v68 << 16);
    *((void *)&v173[1] + 1) = v91;
    *(void *)&v173[2] = v67 | (v65 << 8);
    *((void *)&v173[2] + 1) = v69;
    *(void *)&v173[3] = v71 | (v64 << 8);
    *((void *)&v173[3] + 1) = v95;
    *(void *)&v173[4] = v70 | (v63 << 8);
    *((void *)&v173[4] + 1) = v97;
    *(void *)&v173[5] = v100 | (v96 << 8);
    *((void *)&v173[5] + 1) = v98;
    LOWORD(v173[6]) = v99 | (v94 << 8);
    *(void *)&v172[0] = v74;
    *((void *)&v172[0] + 1) = v77;
    *(void *)&v172[1] = v72 | (v62 << 8) | (v73 << 16);
    *((void *)&v172[1] + 1) = v76;
    v172[2] = v78 | (unint64_t)(v75 << 8);
    *(void *)&v172[3] = v89 | (v79 << 8);
    *((void *)&v172[3] + 1) = v80;
    *(void *)&v172[4] = v88 | (v81 << 8);
    *((void *)&v172[4] + 1) = v82;
    *(void *)&v172[5] = v87 | (v83 << 8);
    *((void *)&v172[5] + 1) = v85;
    LOWORD(v172[6]) = v86 | (v84 << 8);
    if (!sub_214CF98CC((uint64_t)v173, (uint64_t)v172)) {
      return 0;
    }
  }
  *(void *)&v173[0] = v59;
  *((void *)&v173[0] + 1) = v61;
  LOBYTE(v173[1]) = v60;
  *(void *)&v172[0] = v56;
  *((void *)&v172[0] + 1) = v58;
  LOBYTE(v172[1]) = v57;
  if ((sub_214CE7468((uint64_t *)v173, (uint64_t *)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v19 = sub_214C8391C(v56, v58, v57, v59, v61, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19) {
      return 0;
    }
  }
  LOBYTE(v173[0]) = v55;
  BYTE1(v173[0]) = v54;
  LOBYTE(v172[0]) = v52;
  BYTE1(v172[0]) = v53;
  if ((sub_214CE8A8C((unsigned __int8 *)v173, (unsigned __int8 *)v172) & 1) == 0
    && (sub_214C865E8(v52 | (unsigned __int16)(v53 << 8), v55 | (unsigned __int16)(v54 << 8)) & 1) != 0)
  {
    return 0;
  }
  *(void *)&v173[0] = v49;
  *((void *)&v173[0] + 1) = v51;
  LOBYTE(v173[1]) = v50;
  v172[0] = v47;
  LOBYTE(v172[1]) = v48;
  if ((sub_214CE7468((uint64_t *)v173, (uint64_t *)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v20 = sub_214C8391C(v47, *((uint64_t *)&v47 + 1), v48, v49, v51, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      return 0;
    }
  }
  *(void *)&v173[0] = v43;
  BYTE8(v173[0]) = v42;
  *(void *)&v172[0] = v40;
  BYTE8(v172[0]) = v41;
  if ((sub_214CEA098((uint64_t)v173, (uint64_t)v172) & 1) == 0)
  {
    *(void *)&v173[0] = v43;
    BYTE8(v173[0]) = v42;
    *(void *)&v172[0] = v40;
    BYTE8(v172[0]) = v41;
    if ((sub_214CF9CA0((uint64_t *)v173, (uint64_t *)v172) & 1) == 0) {
      return 0;
    }
  }
  memcpy(v173, __dst, 0x119uLL);
  memcpy(v172, __src, 0x119uLL);
  if ((sub_214CEB6D4((uint64_t)v173, (uint64_t)v172) & 1) == 0)
  {
    memcpy(v172, __dst, 0x119uLL);
    nullsub_1(v172);
    sub_214B6AC38((uint64_t)v172, (uint64_t)v171, &qword_26784EAD8);
    memcpy(v173, __src, 0x119uLL);
    nullsub_1(v173);
    sub_214B6AC38((uint64_t)v173, (uint64_t)v170, &qword_26784EAD8);
    if ((sub_214CFA4F4((uint64_t)v171, (uint64_t)v170) & 1) == 0) {
      return 0;
    }
  }
  if ((sub_214C7F6F0((unsigned __int16)v23 | (unsigned __int16)((_WORD)v46 << 8), (unsigned __int16)v45 | (unsigned __int16)((_WORD)v44 << 8)) & 1) != 0&& (sub_214C7F6F0((unsigned __int16)v24 | (unsigned __int16)((_WORD)v25 << 8), (unsigned __int16)v38 | (unsigned __int16)((_WORD)v39 << 8)) & 1) != 0&& sub_214C80D1C(v30, v29 | ((_WORD)v27 << 8), v36, v37 | (v35 << 8))&& sub_214C80D1C(v31, v28 | (v26 << 8), v34, v33 | (v32 << 8)))
  {
    goto LABEL_36;
  }
  *(void *)&v173[0] = v23 | (v46 << 8) | (v24 << 16) | (v25 << 24);
  *((void *)&v173[0] + 1) = v30;
  *(void *)&v173[1] = v29 | (v27 << 8);
  *((void *)&v173[1] + 1) = v31;
  LOWORD(v173[2]) = v28 | (v26 << 8);
  *(void *)&v172[0] = v45 | (v44 << 8) | (v38 << 16) | (v39 << 24);
  *((void *)&v172[0] + 1) = v36;
  *(void *)&v172[1] = v37 | (v35 << 8);
  *((void *)&v172[1] + 1) = v34;
  LOWORD(v172[2]) = v33 | ((_WORD)v32 << 8);
  if (sub_214CFB024((uint64_t *)v173, (uint64_t *)v172))
  {
LABEL_36:
    v173[4] = v179;
    v173[5] = v180;
    v173[6] = v181[0];
    *(_OWORD *)((char *)&v173[6] + 10) = *(_OWORD *)((char *)v181 + 10);
    v173[0] = v175;
    v173[1] = v176;
    v173[2] = v177;
    v173[3] = v178;
    v172[4] = v187;
    v172[5] = v188;
    v172[6] = v189[0];
    *(_OWORD *)((char *)&v172[6] + 10) = *(_OWORD *)((char *)v189 + 10);
    v172[0] = v183;
    v172[1] = v184;
    v172[2] = v185;
    v172[3] = v186;
    if (sub_214CE2830((uint64_t)v173, (uint64_t)v172))
    {
      return 1;
    }
    else
    {
      v172[4] = v179;
      v172[5] = v180;
      v172[6] = v181[0];
      *(_OWORD *)((char *)&v172[6] + 10) = *(_OWORD *)((char *)v181 + 10);
      v172[0] = v175;
      v172[1] = v176;
      v172[2] = v177;
      v172[3] = v178;
      nullsub_1(v172);
      sub_214B6AC38((uint64_t)v172, (uint64_t)v171, &qword_26784EAE0);
      v173[4] = v187;
      v173[5] = v188;
      v173[6] = v189[0];
      *(_OWORD *)((char *)&v173[6] + 10) = *(_OWORD *)((char *)v189 + 10);
      v173[0] = v183;
      v173[1] = v184;
      v173[2] = v185;
      v173[3] = v186;
      nullsub_1(v173);
      sub_214B6AC38((uint64_t)v173, (uint64_t)v170, &qword_26784EAE0);
      return sub_214CFB13C((uint64_t)v171, (uint64_t)v170);
    }
  }
  else
  {
    return 0;
  }
}

uint64_t sub_214CFC7D4()
{
  return objectdestroy_36Tm(81);
}

uint64_t sub_214CFC7DC()
{
  return MEMORY[0x270FA0238](v0, 144, 7);
}

uint64_t sub_214CFC7EC()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214CFC7FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 297, 7);
}

uint64_t sub_214CFC88C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 114, 7);
}

uint64_t sub_214CFC8C4()
{
  return objectdestroy_36Tm(83);
}

uint64_t sub_214CFC8CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_214CFC90C()
{
  return objectdestroy_36Tm(98);
}

uint64_t sub_214CFC914()
{
  return objectdestroy_36Tm(81);
}

unint64_t sub_214CFC91C()
{
  unint64_t result = qword_26784EB40;
  if (!qword_26784EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB40);
  }
  return result;
}

unint64_t sub_214CFC970()
{
  unint64_t result = qword_26784EB48;
  if (!qword_26784EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB48);
  }
  return result;
}

unint64_t sub_214CFC9C4()
{
  unint64_t result = qword_26784EB50;
  if (!qword_26784EB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB50);
  }
  return result;
}

unint64_t sub_214CFCA18()
{
  unint64_t result = qword_26784EB58;
  if (!qword_26784EB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB58);
  }
  return result;
}

unint64_t sub_214CFCA6C()
{
  unint64_t result = qword_26784EB60;
  if (!qword_26784EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB60);
  }
  return result;
}

unint64_t sub_214CFCAC0()
{
  unint64_t result = qword_26784EB68;
  if (!qword_26784EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB68);
  }
  return result;
}

unint64_t sub_214CFCB14()
{
  unint64_t result = qword_26784EB70;
  if (!qword_26784EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB70);
  }
  return result;
}

unint64_t sub_214CFCB68()
{
  unint64_t result = qword_26784EB78;
  if (!qword_26784EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB78);
  }
  return result;
}

unint64_t sub_214CFCBBC()
{
  unint64_t result = qword_26784EB80;
  if (!qword_26784EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB80);
  }
  return result;
}

unint64_t sub_214CFCC10()
{
  unint64_t result = qword_26784EB88;
  if (!qword_26784EB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB88);
  }
  return result;
}

unint64_t sub_214CFCC64()
{
  unint64_t result = qword_26784EB90;
  if (!qword_26784EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EB90);
  }
  return result;
}

uint64_t sub_214CFCCB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_214D0499C();
  uint64_t result = sub_214D1A438();
  uint64_t v7 = result;
  if (v2)
  {
    __int16 v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_214CDCD38(&v6, v5, (void (*)(uint64_t))sub_214C4E7F8, (uint64_t)&type metadata for PhoneFormatterSource.PhoneNumberType, &qword_26784E498, (uint64_t (*)(uint64_t))sub_214C4EE9C);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_214CFCD74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_214D068B8();
  uint64_t result = sub_214D1A438();
  uint64_t v7 = result;
  if (v2)
  {
    __int16 v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_214CDCD38(&v6, v5, (void (*)(uint64_t))sub_214C4E804, (uint64_t)&type metadata for GeocoderSource.AddressType, &qword_26784E518, (uint64_t (*)(uint64_t))sub_214C4EEA8);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_214CFCE30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7272456F6ELL && a2 == 0xE500000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61567465736E75 && a2 == 0xEA00000000006575 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6974704F6C696ELL && a2 == 0xEB000000006C616ELL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465696E6564 && a2 == 0xE600000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7463657078656E75 && a2 == 0xEF726F7272456465 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000214D37E00 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E69646F636E65 && a2 == 0xED0000726F727245 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000214D37E20 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6369447974706D65 && a2 == 0xEF7972616E6F6974 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F727245636170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_214CFD2B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C62756F44 && a2 == 0xE600000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69727453 && a2 == 0xE600000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7630409 && a2 == 0xE300000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702125892 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1819242306 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1819047246 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_214CFD4EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x645F73656E757469 && a2 == 0xEB00000000646973;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x645F64756F6C6369 && a2 == 0xEB00000000646973 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449656C707061 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214CFD670(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6169726573 && a2 == 0xE600000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684628597 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684628325 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214CFD818(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684628325 && a2 == 0xE400000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684628851 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214CFD958(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265626D756ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469636369 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1769172329 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6572506D69537369 && a2 == 0xEC000000746E6573)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214CFDB0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61636F6C5F737067 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000214D388E0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D2D560 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D2D580 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_214CFDDE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000214D38900)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_214CFDE68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000214D38920)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_214CFDEF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697665447369 && a2 == 0xEE0064656B636F4CLL;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000214D2D700 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D2D720 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614C656369766564 && a2 == 0xEE0065676175676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214CFE0E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000214D2D750 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000214D2D770 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000214D2D790)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214CFE22C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974614C656D6F68 && a2 == 0xEC00000065647574;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6F4C656D6F68 && a2 == 0xED00006564757469 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D38940 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D38960 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C676E696C6C6962 && a2 == 0xEF65647574697461 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D38980 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746974614C636F64 && a2 == 0xEB00000000656475 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69676E6F4C636F64 && a2 == 0xEC00000065647574)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_214CFE5E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x66657250656D616ELL && a2 == 0xEA00000000007869;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E656C6464696DLL && a2 == 0xEA0000000000656DLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x66667553656D616ELL && a2 == 0xEA00000000007869 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D616E6B63696ELL && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D614E72656570 && a2 == 0xEE00786966657250 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696D614672656570 && a2 == 0xEE00656D614E796CLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6576694772656570 && a2 == 0xED0000656D614E6ELL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6464694D72656570 && a2 == 0xEE00656D614E656CLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656D614E72656570 && a2 == 0xEE00786966667553 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63694E72656570 && a2 == 0xEC000000656D616ELL)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_214CFEBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_defaultActor_initialize();
  unint64_t v10 = sub_214B7F7FC(MEMORY[0x263F8EE78]);
  char v68 = 1;
  char v67 = 1;
  char v66 = 1;
  char v65 = 1;
  char v64 = 1;
  char v63 = 1;
  char v62 = 1;
  char v61 = 1;
  char v134 = 1;
  char v131 = 1;
  char v120 = 1;
  char v117 = 1;
  char v114 = 1;
  char v111 = 1;
  char v108 = 1;
  char v93 = 1;
  char v90 = 1;
  char v69 = 1;
  *(void *)(v5 + 128) = 0;
  *(_OWORD *)(v5 + 112) = 0u;
  *(unsigned char *)(v5 + 136) = -46;
  *(_DWORD *)(v5 + 137) = *(_DWORD *)v140;
  *(_DWORD *)(v5 + 140) = *(_DWORD *)&v140[3];
  *(_OWORD *)(v5 + 144) = 0u;
  *(unsigned char *)(v5 + 160) = -46;
  *(_DWORD *)(v5 + 161) = *(_DWORD *)v139;
  *(_DWORD *)(v5 + 164) = *(_DWORD *)&v139[3];
  *(_OWORD *)(v5 + 168) = 0u;
  *(unsigned char *)(v5 + 184) = -46;
  int v11 = *(_DWORD *)v138;
  *(_DWORD *)(v5 + 188) = *(_DWORD *)&v138[3];
  *(_DWORD *)(v5 + 185) = v11;
  *(_OWORD *)(v5 + 192) = 0u;
  *(unsigned char *)(v5 + 208) = -46;
  *(_DWORD *)(v5 + 212) = *(_DWORD *)&v137[3];
  *(_DWORD *)(v5 + 209) = *(_DWORD *)v137;
  *(_OWORD *)(v5 + 216) = 0u;
  *(unsigned char *)(v5 + 232) = -46;
  *(_DWORD *)(v5 + 236) = *(_DWORD *)&v136[3];
  *(_DWORD *)(v5 + 233) = *(_DWORD *)v136;
  *(_OWORD *)(v5 + 240) = 0u;
  *(unsigned char *)(v5 + 256) = -46;
  int v12 = *(_DWORD *)v135;
  *(_DWORD *)(v5 + 260) = *(_DWORD *)&v135[3];
  *(_DWORD *)(v5 + 257) = v12;
  *(void *)(v5 + 264) = 0;
  *(unsigned char *)(v5 + 272) = v134;
  *(unsigned char *)(v5 + 273) = -46;
  *(_WORD *)(v5 + 278) = v133;
  *(_DWORD *)(v5 + 274) = *(_DWORD *)&v132[7];
  *(_OWORD *)(v5 + 280) = 0u;
  *(unsigned char *)(v5 + 296) = -46;
  *(_DWORD *)(v5 + 297) = *(_DWORD *)v132;
  *(_DWORD *)(v5 + 300) = *(_DWORD *)&v132[3];
  *(void *)(v5 + 304) = 0;
  *(unsigned char *)(v5 + 312) = v131;
  *(unsigned char *)(v5 + 313) = -46;
  int v13 = *(_DWORD *)&v129[7];
  *(_WORD *)(v5 + 318) = v130;
  *(_DWORD *)(v5 + 314) = v13;
  *(_OWORD *)(v5 + 320) = 0u;
  *(unsigned char *)(v5 + 336) = -46;
  int v14 = *(_DWORD *)v129;
  *(_DWORD *)(v5 + 340) = *(_DWORD *)&v129[3];
  *(_DWORD *)(v5 + 337) = v14;
  *(_OWORD *)(v5 + 344) = 0u;
  *(unsigned char *)(v5 + 360) = -46;
  int v15 = *(_DWORD *)v128;
  *(_DWORD *)(v5 + 364) = *(_DWORD *)&v128[3];
  *(_DWORD *)(v5 + 361) = v15;
  *(_OWORD *)(v5 + 368) = 0u;
  *(unsigned char *)(v5 + 384) = -46;
  int v16 = *(_DWORD *)v127;
  *(_DWORD *)(v5 + 388) = *(_DWORD *)&v127[3];
  *(_DWORD *)(v5 + 385) = v16;
  *(_OWORD *)(v5 + 392) = 0u;
  *(unsigned char *)(v5 + 408) = -46;
  int v17 = *(_DWORD *)v126;
  *(_DWORD *)(v5 + 412) = *(_DWORD *)&v126[3];
  *(_DWORD *)(v5 + 409) = v17;
  *(_OWORD *)(v5 + 416) = 0u;
  *(_WORD *)(v5 + 432) = 722;
  *(unsigned char *)(v5 + 434) = -46;
  int v18 = v124;
  *(unsigned char *)(v5 + 439) = v125;
  *(_DWORD *)(v5 + 435) = v18;
  *(_OWORD *)(v5 + 440) = 0u;
  *(_WORD *)(v5 + 456) = 722;
  *(unsigned char *)(v5 + 458) = -46;
  int v19 = *(_DWORD *)&v123[7];
  *(unsigned char *)(v5 + 463) = v123[11];
  *(_DWORD *)(v5 + 459) = v19;
  *(_OWORD *)(v5 + 464) = 0u;
  *(unsigned char *)(v5 + 480) = -46;
  int v20 = *(_DWORD *)v123;
  *(_DWORD *)(v5 + 484) = *(_DWORD *)&v123[3];
  *(_DWORD *)(v5 + 481) = v20;
  *(_OWORD *)(v5 + 488) = 0u;
  *(_WORD *)(v5 + 504) = 722;
  *(unsigned char *)(v5 + 506) = -46;
  int v21 = v121;
  *(unsigned char *)(v5 + 511) = v122;
  *(_DWORD *)(v5 + 507) = v21;
  *(void *)(v5 + 512) = 0;
  *(unsigned char *)(v5 + 520) = v120;
  *(unsigned char *)(v5 + 521) = -46;
  int v22 = v118;
  *(_WORD *)(v5 + 526) = v119;
  *(_DWORD *)(v5 + 522) = v22;
  *(void *)(v5 + 528) = 0;
  *(unsigned char *)(v5 + 536) = v117;
  *(unsigned char *)(v5 + 537) = -46;
  int v23 = v115;
  *(_WORD *)(v5 + 542) = v116;
  *(_DWORD *)(v5 + 538) = v23;
  *(void *)(v5 + 544) = 0;
  *(unsigned char *)(v5 + 552) = v114;
  *(unsigned char *)(v5 + 553) = -46;
  int v24 = v112;
  *(_WORD *)(v5 + 558) = v113;
  *(_DWORD *)(v5 + 554) = v24;
  *(void *)(v5 + 560) = 0;
  *(unsigned char *)(v5 + 568) = v111;
  *(unsigned char *)(v5 + 569) = -46;
  int v25 = v109;
  *(_WORD *)(v5 + 574) = v110;
  *(_DWORD *)(v5 + 570) = v25;
  *(void *)(v5 + 576) = 0;
  *(unsigned char *)(v5 + 584) = v108;
  *(unsigned char *)(v5 + 585) = -46;
  int v26 = *(_DWORD *)&v106[7];
  *(_WORD *)(v5 + 590) = v107;
  *(_DWORD *)(v5 + 586) = v26;
  *(void *)(v5 + 592) = v10;
  *(unsigned char *)(v5 + 600) = -39;
  int v27 = *(_DWORD *)v106;
  *(_DWORD *)(v5 + 604) = *(_DWORD *)&v106[3];
  *(_DWORD *)(v5 + 601) = v27;
  *(_OWORD *)(v5 + 608) = 0u;
  *(unsigned char *)(v5 + 624) = -46;
  int v28 = *(_DWORD *)v105;
  *(_DWORD *)(v5 + 628) = *(_DWORD *)&v105[3];
  *(_DWORD *)(v5 + 625) = v28;
  *(_OWORD *)(v5 + 632) = 0u;
  *(unsigned char *)(v5 + 648) = -46;
  int v29 = *(_DWORD *)v104;
  *(_DWORD *)(v5 + 652) = *(_DWORD *)&v104[3];
  *(_DWORD *)(v5 + 649) = v29;
  *(_OWORD *)(v5 + 656) = 0u;
  *(unsigned char *)(v5 + 672) = -46;
  int v30 = *(_DWORD *)v103;
  *(_DWORD *)(v5 + 676) = *(_DWORD *)&v103[3];
  *(_DWORD *)(v5 + 673) = v30;
  *(_OWORD *)(v5 + 680) = 0u;
  *(unsigned char *)(v5 + 696) = -46;
  int v31 = *(_DWORD *)v102;
  *(_DWORD *)(v5 + 700) = *(_DWORD *)&v102[3];
  *(_DWORD *)(v5 + 697) = v31;
  *(_OWORD *)(v5 + 704) = 0u;
  *(unsigned char *)(v5 + 720) = -46;
  int v32 = *(_DWORD *)v101;
  *(_DWORD *)(v5 + 724) = *(_DWORD *)&v101[3];
  *(_DWORD *)(v5 + 721) = v32;
  *(_OWORD *)(v5 + 728) = 0u;
  *(unsigned char *)(v5 + 744) = -46;
  int v33 = *(_DWORD *)v100;
  *(_DWORD *)(v5 + 748) = *(_DWORD *)&v100[3];
  *(_DWORD *)(v5 + 745) = v33;
  *(_OWORD *)(v5 + 752) = 0u;
  *(unsigned char *)(v5 + 768) = -46;
  int v34 = *(_DWORD *)v99;
  *(_DWORD *)(v5 + 772) = *(_DWORD *)&v99[3];
  *(_DWORD *)(v5 + 769) = v34;
  *(_OWORD *)(v5 + 776) = 0u;
  *(unsigned char *)(v5 + 792) = -46;
  int v35 = *(_DWORD *)v98;
  *(_DWORD *)(v5 + 796) = *(_DWORD *)&v98[3];
  *(_DWORD *)(v5 + 793) = v35;
  *(_OWORD *)(v5 + 800) = 0u;
  *(unsigned char *)(v5 + 816) = -46;
  int v36 = *(_DWORD *)v97;
  *(_DWORD *)(v5 + 820) = *(_DWORD *)&v97[3];
  *(_DWORD *)(v5 + 817) = v36;
  *(_OWORD *)(v5 + 824) = 0u;
  *(unsigned char *)(v5 + 840) = -46;
  int v37 = *(_DWORD *)v96;
  *(_DWORD *)(v5 + 844) = *(_DWORD *)&v96[3];
  *(_DWORD *)(v5 + 841) = v37;
  *(_OWORD *)(v5 + 848) = 0u;
  *(unsigned char *)(v5 + 864) = -46;
  int v38 = *(_DWORD *)v95;
  *(_DWORD *)(v5 + 868) = *(_DWORD *)&v95[3];
  *(_DWORD *)(v5 + 865) = v38;
  *(_OWORD *)(v5 + 872) = 0u;
  *(unsigned char *)(v5 + 888) = -46;
  int v39 = *(_DWORD *)v94;
  *(_DWORD *)(v5 + 892) = *(_DWORD *)&v94[3];
  *(_DWORD *)(v5 + 889) = v39;
  *(_DWORD *)(v5 + 896) = -771567102;
  *(void *)(v5 + 904) = 0;
  *(unsigned char *)(v5 + 912) = v93;
  *(unsigned char *)(v5 + 913) = -46;
  int v40 = v91;
  *(_WORD *)(v5 + 918) = v92;
  *(_DWORD *)(v5 + 914) = v40;
  *(void *)(v5 + 920) = 0;
  *(unsigned char *)(v5 + 928) = v90;
  *(unsigned char *)(v5 + 929) = -46;
  int v41 = v88;
  *(_WORD *)(v5 + 934) = v89;
  *(_DWORD *)(v5 + 930) = v41;
  *(void *)(v5 + 936) = 0;
  *(_WORD *)(v5 + 944) = -11775;
  int v42 = v86;
  *(_WORD *)(v5 + 950) = v87;
  *(_DWORD *)(v5 + 946) = v42;
  *(void *)(v5 + 952) = 0;
  *(_WORD *)(v5 + 960) = -11775;
  int v43 = v84;
  *(_WORD *)(v5 + 966) = v85;
  *(_DWORD *)(v5 + 962) = v43;
  *(void *)(v5 + 968) = 0;
  *(_WORD *)(v5 + 976) = -11775;
  int v44 = v82;
  *(_WORD *)(v5 + 982) = v83;
  *(_DWORD *)(v5 + 978) = v44;
  *(void *)(v5 + 984) = 0;
  *(_WORD *)(v5 + 992) = -11775;
  int v45 = v80;
  *(_WORD *)(v5 + 998) = v81;
  *(_DWORD *)(v5 + 994) = v45;
  *(void *)(v5 + 1000) = 0;
  *(_WORD *)(v5 + 1008) = -11775;
  int v46 = v78;
  *(_WORD *)(v5 + 1014) = v79;
  *(_DWORD *)(v5 + 1010) = v46;
  *(void *)(v5 + 1016) = 0;
  *(_WORD *)(v5 + 1024) = -11775;
  int v47 = v76;
  *(_WORD *)(v5 + 1030) = v77;
  *(_DWORD *)(v5 + 1026) = v47;
  *(void *)(v5 + 1032) = 0;
  *(_WORD *)(v5 + 1040) = -11775;
  int v48 = v74;
  *(_WORD *)(v5 + 1046) = v75;
  *(_DWORD *)(v5 + 1042) = v48;
  *(void *)(v5 + 1048) = 0;
  *(_WORD *)(v5 + 1056) = -11775;
  int v49 = *(_DWORD *)&v72[7];
  *(_WORD *)(v5 + 1062) = v73;
  *(_DWORD *)(v5 + 1058) = v49;
  *(_OWORD *)(v5 + 1064) = 0u;
  *(unsigned char *)(v5 + 1080) = -46;
  int v50 = *(_DWORD *)v72;
  *(_DWORD *)(v5 + 1084) = *(_DWORD *)&v72[3];
  *(_DWORD *)(v5 + 1081) = v50;
  *(_OWORD *)(v5 + 1088) = 0u;
  *(unsigned char *)(v5 + 1104) = -46;
  int v51 = *(_DWORD *)v71;
  *(_DWORD *)(v5 + 1108) = *(_DWORD *)&v71[3];
  *(_DWORD *)(v5 + 1105) = v51;
  *(_OWORD *)(v5 + 1112) = 0u;
  *(unsigned char *)(v5 + 1128) = -46;
  int v52 = *(_DWORD *)v70;
  *(_DWORD *)(v5 + 1132) = *(_DWORD *)&v70[3];
  *(_DWORD *)(v5 + 1129) = v52;
  *(void *)(v5 + 1136) = 0;
  *(unsigned char *)(v5 + 1144) = v69;
  *(_WORD *)(v5 + 1145) = 210;
  *(unsigned char *)(v5 + 1147) = 0;
  *(void *)(v5 + 1168) = 0;
  *(_OWORD *)(v5 + 1152) = 0u;
  *(void *)(v5 + 1232) = a3;
  *(void *)(v5 + 1240) = a4;
  uint64_t v53 = type metadata accessor for PhoneCertificateVendorWrapper();
  swift_allocObject();
  uint64_t v59 = v53;
  unsigned __int8 v60 = &off_26C5A7E30;
  *(void *)&long long v58 = sub_214BB805C();
  uint64_t v54 = type metadata accessor for PhoneAuthenticationCertificateProvider();
  uint64_t v55 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v55 + 152) = 0;
  sub_214B59EC0(&v58, v55 + 112);
  *(void *)(v5 + 1200) = v54;
  *(void *)(v5 + 1208) = &off_26C5A8030;
  *(void *)(v5 + 1176) = v55;
  *(void *)(v5 + 1216) = a1;
  *(void *)(v5 + 1224) = a2;
  *(void *)&long long v58 = a1;
  *((void *)&v58 + 1) = a2;
  char v57 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001FLL, 0x8000000214D388C0, &v57);
  return v5;
}

uint64_t type metadata accessor for ArmandDataFiller()
{
  return self;
}

uint64_t sub_214CFF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  int v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *int v11 = v3;
  v11[1] = sub_214B6A55C;
  return sub_214CCFC50(a1, a2, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_214CFF408()
{
  unint64_t result = qword_26784EC28;
  if (!qword_26784EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EC28);
  }
  return result;
}

unint64_t sub_214CFF460()
{
  unint64_t result = qword_26784EC30;
  if (!qword_26784EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EC30);
  }
  return result;
}

uint64_t sub_214CFF4B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (const void *)(*a1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x40AuLL);
  memcpy(a2, v3, 0x40AuLL);
  return sub_214BB6CB4((uint64_t)__dst);
}

uint64_t dispatch thunk of ODIBindingsProvider.allBindings.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BB2C3C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIBindingsProvider.geoCoder.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BFAE14;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIBindingsProvider.getBinding(bindingName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  int v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int v11 = v5;
  v11[1] = sub_214B6B4A4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ODIBindingsProvider.registerBinding(_:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  int v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *int v13 = v6;
  v13[1] = sub_214B6B4A4;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ODILocationProvider.gpsLocationEnabled()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BFAE14;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODILocationProvider.getLocation()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214BFAE14;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODILocationProvider.getLocationOrWait()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B69F08;
  return v7(a1, a2);
}

uint64_t getEnumTagSinglePayload for ArmandDeviceDataErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x27)
  {
    unsigned int v2 = a2 + 217;
    if (a2 + 217 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 217;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 217;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x214CFFCD0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 217;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0xD1) {
    unsigned int v8 = v7 - 208;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 0xA) {
    return v8 - 9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ArmandDeviceDataErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 217;
  if (a3 + 217 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0x27) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0x26)
  {
    unsigned int v7 = ((a2 - 39) >> 8) + 1;
    *unint64_t result = a2 - 39;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x214CFFDB8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 - 39;
        break;
    }
  }
  return result;
}

uint64_t sub_214CFFDE0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0xD1) {
    return v1 - 208;
  }
  else {
    return 0;
  }
}

unsigned char *sub_214CFFDF4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 - 48;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode()
{
  return &type metadata for ArmandDeviceDataErrorCode;
}

uint64_t sub_214CFFE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_214CFFE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_214CFFE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for ArmandDeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v9;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v10;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v11 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v11;
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v12 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v12;
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  uint64_t v13 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v13;
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  uint64_t v14 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v14;
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(_WORD *)(a1 + 321) = *(_WORD *)(a2 + 321);
  uint64_t v15 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v15;
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(_WORD *)(a1 + 345) = *(_WORD *)(a2 + 345);
  uint64_t v16 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v16;
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  uint64_t v17 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v17;
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_WORD *)(a1 + 393) = *(_WORD *)(a2 + 393);
  uint64_t v18 = *(void *)(a2 + 400);
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  *(void *)(a1 + 400) = v18;
  uint64_t v19 = *(void *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(void *)(a1 + 416) = v19;
  uint64_t v20 = *(void *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  *(void *)(a1 + 432) = v20;
  uint64_t v21 = *(void *)(a2 + 448);
  *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
  *(void *)(a1 + 448) = v21;
  uint64_t v22 = *(void *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(void *)(a1 + 464) = v22;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v23 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v23;
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(unsigned char *)(a1 + 776) = *(unsigned char *)(a2 + 776);
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  long long v24 = *(_OWORD *)(a2 + 824);
  long long v25 = *(_OWORD *)(a2 + 840);
  long long v26 = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 872) = v26;
  *(_OWORD *)(a1 + 824) = v24;
  *(_OWORD *)(a1 + 840) = v25;
  long long v27 = *(_OWORD *)(a2 + 888);
  long long v28 = *(_OWORD *)(a2 + 904);
  long long v29 = *(_OWORD *)(a2 + 920);
  long long v30 = *(_OWORD *)(a2 + 930);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(_OWORD *)(a1 + 930) = v30;
  *(_OWORD *)(a1 + 904) = v28;
  *(_OWORD *)(a1 + 920) = v29;
  *(_OWORD *)(a1 + 888) = v27;
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(unsigned char *)(a1 + 968) = *(unsigned char *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(unsigned char *)(a1 + 1016) = *(unsigned char *)(a2 + 1016);
  *(_WORD *)(a1 + 1032) = *(_WORD *)(a2 + 1032);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  long long v31 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v31;
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v4;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v5 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v5;
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(unsigned char *)(a1 + 321) = *(unsigned char *)(a2 + 321);
  *(unsigned char *)(a1 + 322) = *(unsigned char *)(a2 + 322);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(unsigned char *)(a1 + 345) = *(unsigned char *)(a2 + 345);
  *(unsigned char *)(a1 + 346) = *(unsigned char *)(a2 + 346);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(unsigned char *)(a1 + 393) = *(unsigned char *)(a2 + 393);
  *(unsigned char *)(a1 + 394) = *(unsigned char *)(a2 + 394);
  uint64_t v6 = *(void *)(a2 + 400);
  *(unsigned char *)(a1 + 408) = *(unsigned char *)(a2 + 408);
  *(void *)(a1 + 400) = v6;
  *(unsigned char *)(a1 + 409) = *(unsigned char *)(a2 + 409);
  uint64_t v7 = *(void *)(a2 + 416);
  *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
  *(void *)(a1 + 416) = v7;
  *(unsigned char *)(a1 + 425) = *(unsigned char *)(a2 + 425);
  uint64_t v8 = *(void *)(a2 + 432);
  *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
  *(void *)(a1 + 432) = v8;
  *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
  uint64_t v9 = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(void *)(a1 + 448) = v9;
  *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
  uint64_t v10 = *(void *)(a2 + 464);
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  *(void *)(a1 + 464) = v10;
  *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 776) = *(unsigned char *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(unsigned char *)(a1 + 785) = *(unsigned char *)(a2 + 785);
  *(unsigned char *)(a1 + 786) = *(unsigned char *)(a2 + 786);
  *(unsigned char *)(a1 + 787) = *(unsigned char *)(a2 + 787);
  uint64_t v11 = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 792) = v11;
  *(unsigned char *)(a1 + 801) = *(unsigned char *)(a2 + 801);
  uint64_t v12 = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(void *)(a1 + 808) = v12;
  *(unsigned char *)(a1 + 817) = *(unsigned char *)(a2 + 817);
  uint64_t v13 = *(void *)(a2 + 824);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(void *)(a1 + 824) = v13;
  *(unsigned char *)(a1 + 833) = *(unsigned char *)(a2 + 833);
  uint64_t v14 = *(void *)(a2 + 840);
  *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
  *(void *)(a1 + 840) = v14;
  *(unsigned char *)(a1 + 849) = *(unsigned char *)(a2 + 849);
  uint64_t v15 = *(void *)(a2 + 856);
  *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
  *(void *)(a1 + 856) = v15;
  *(unsigned char *)(a1 + 865) = *(unsigned char *)(a2 + 865);
  uint64_t v16 = *(void *)(a2 + 872);
  *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
  *(void *)(a1 + 872) = v16;
  *(unsigned char *)(a1 + 881) = *(unsigned char *)(a2 + 881);
  uint64_t v17 = *(void *)(a2 + 888);
  *(unsigned char *)(a1 + 896) = *(unsigned char *)(a2 + 896);
  *(void *)(a1 + 888) = v17;
  *(unsigned char *)(a1 + 897) = *(unsigned char *)(a2 + 897);
  uint64_t v18 = *(void *)(a2 + 904);
  *(unsigned char *)(a1 + 912) = *(unsigned char *)(a2 + 912);
  *(void *)(a1 + 904) = v18;
  *(unsigned char *)(a1 + 913) = *(unsigned char *)(a2 + 913);
  uint64_t v19 = *(void *)(a2 + 920);
  *(unsigned char *)(a1 + 928) = *(unsigned char *)(a2 + 928);
  *(void *)(a1 + 920) = v19;
  *(unsigned char *)(a1 + 929) = *(unsigned char *)(a2 + 929);
  uint64_t v20 = *(void *)(a2 + 936);
  *(unsigned char *)(a1 + 944) = *(unsigned char *)(a2 + 944);
  *(void *)(a1 + 936) = v20;
  *(unsigned char *)(a1 + 945) = *(unsigned char *)(a2 + 945);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 968) = *(unsigned char *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1016) = *(unsigned char *)(a2 + 1016);
  uint64_t v21 = *(void *)(a2 + 1024);
  *(unsigned char *)(a1 + 1032) = *(unsigned char *)(a2 + 1032);
  *(void *)(a1 + 1024) = v21;
  *(unsigned char *)(a1 + 1033) = *(unsigned char *)(a2 + 1033);
  return a1;
}

void *__swift_memcpy1034_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x40AuLL);
}

uint64_t assignWithTake for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  uint64_t v11 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v12 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v13 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  uint64_t v14 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  uint64_t v15 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(_WORD *)(a1 + 321) = *(_WORD *)(a2 + 321);
  uint64_t v16 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(_WORD *)(a1 + 345) = *(_WORD *)(a2 + 345);
  uint64_t v17 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  uint64_t v18 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 392) = *(unsigned char *)(a2 + 392);
  *(_WORD *)(a1 + 393) = *(_WORD *)(a2 + 393);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  uint64_t v19 = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(void *)(a1 + 448) = v19;
  *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  uint64_t v20 = *(void *)(a2 + 504);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 704) = *(unsigned char *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 752) = *(unsigned char *)(a2 + 752);
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 776) = *(unsigned char *)(a2 + 776);
  *(_DWORD *)(a1 + 784) = *(_DWORD *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(_WORD *)(a1 + 800) = *(_WORD *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
  *(unsigned char *)(a1 + 848) = *(unsigned char *)(a2 + 848);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(unsigned char *)(a1 + 849) = *(unsigned char *)(a2 + 849);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(_WORD *)(a1 + 864) = *(_WORD *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(_WORD *)(a1 + 880) = *(_WORD *)(a2 + 880);
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(unsigned char *)(a1 + 912) = *(unsigned char *)(a2 + 912);
  *(unsigned char *)(a1 + 913) = *(unsigned char *)(a2 + 913);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(_WORD *)(a1 + 928) = *(_WORD *)(a2 + 928);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(_WORD *)(a1 + 944) = *(_WORD *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 968) = *(unsigned char *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 992) = *(unsigned char *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 1016) = *(unsigned char *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(_WORD *)(a1 + 1032) = *(_WORD *)(a2 + 1032);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArmandDeviceData(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 1034)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArmandDeviceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 1032) = 0;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 1034) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 1034) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceData()
{
  return &type metadata for ArmandDeviceData;
}

uint64_t method lookup function for ArmandDataFiller(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ArmandDataFiller);
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ArmandDataFiller.isReadyForAssessment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ArmandDataFiller.__allocating_init(sessionIdentifier:workflowID:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of ArmandDataFiller.updateArmandData(for:locationHelper:bindingsHelper:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 592)
                                                                   + **(int **)(*(void *)v4 + 592));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_214BB2C3C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ArmandDataFiller.notifyODNatorReady()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

unsigned char *storeEnumTagSinglePayload for ArmandDeviceDataErrorCode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D01540);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.CodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.CodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NoErrCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NoErrCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnsetValueCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnsetValueCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NilOptionalCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NilOptionalCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.DeniedCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.DeniedCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.PacErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for AccountsSource()
{
  return &type metadata for AccountsSource;
}

uint64_t initializeWithCopy for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileGestaltSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 82)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileGestaltSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 82) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileGestaltSource()
{
  return &type metadata for MobileGestaltSource;
}

uint64_t destroy for BaaSource()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BaaSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BaaSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  return a1;
}

uint64_t assignWithTake for BaaSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaaSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BaaSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BaaSource()
{
  return &type metadata for BaaSource;
}

ValueMetadata *type metadata accessor for NearFieldSource()
{
  return &type metadata for NearFieldSource;
}

ValueMetadata *type metadata accessor for IDSSource()
{
  return &type metadata for IDSSource;
}

uint64_t initializeWithCopy for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  return a1;
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreTelephonySource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 67)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreTelephonySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 67) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 67) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonySource()
{
  return &type metadata for CoreTelephonySource;
}

uint64_t initializeWithCopy for LocationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocationSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v8 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  return a1;
}

__n128 __swift_memcpy98_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for LocationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 98)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSource()
{
  return &type metadata for LocationSource;
}

uint64_t getEnumTagSinglePayload for TelephonyUtilitiesSource(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for TelephonyUtilitiesSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D022FCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesSource()
{
  return &type metadata for TelephonyUtilitiesSource;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeZoneSource()
{
  return &type metadata for TimeZoneSource;
}

uint64_t initializeBufferWithCopyOfBuffer for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CallerClientSource()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallerClientSource(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CallerClientSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CallerClientSource()
{
  return &type metadata for CallerClientSource;
}

uint64_t destroy for NameParserSource()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NameParserSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v12 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v12;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v13 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v13;
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v14 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v14;
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NameParserSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  return a1;
}

void *__swift_memcpy281_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x119uLL);
}

uint64_t assignWithTake for NameParserSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v12 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v13 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v14 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v15 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  return a1;
}

uint64_t getEnumTagSinglePayload for NameParserSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 281)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NameParserSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 281) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 281) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameParserSource()
{
  return &type metadata for NameParserSource;
}

uint64_t getEnumTagSinglePayload for DeviceSettingsSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[34]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceSettingsSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceSettingsSource()
{
  return &type metadata for DeviceSettingsSource;
}

__n128 __swift_memcpy122_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 106) = *(long long *)((char *)a2 + 106);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeocoderSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x27 && *(unsigned char *)(a1 + 122)) {
    return (*(_DWORD *)a1 + 39);
  }
  if (*(unsigned __int8 *)(a1 + 9) <= 0xD9u) {
    int v3 = 217;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 9);
  }
  int v4 = v3 - 218;
  if (*(unsigned __int8 *)(a1 + 9) < 0xD1u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GeocoderSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x26)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 - 39;
    if (a3 >= 0x27) {
      *(unsigned char *)(result + 122) = 1;
    }
  }
  else
  {
    if (a3 >= 0x27) {
      *(unsigned char *)(result + 122) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 - 39;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeocoderSource()
{
  return &type metadata for GeocoderSource;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource()
{
  return &type metadata for PhoneFormatterSource;
}

uint64_t getEnumTagSinglePayload for ConfigurationSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x27 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 39);
  }
  if (*(unsigned __int8 *)(a1 + 9) <= 0xD9u) {
    int v3 = 217;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 9);
  }
  int v4 = v3 - 218;
  if (*(unsigned __int8 *)(a1 + 9) < 0xD1u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfigurationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x26)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 39;
    if (a3 >= 0x27) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0x27) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 - 39;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfigurationSource()
{
  return &type metadata for ConfigurationSource;
}

unint64_t sub_214D031C8()
{
  unint64_t result = qword_26784ED00;
  if (!qword_26784ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED00);
  }
  return result;
}

unint64_t sub_214D03220()
{
  unint64_t result = qword_26784ED08;
  if (!qword_26784ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED08);
  }
  return result;
}

unint64_t sub_214D03278()
{
  unint64_t result = qword_26784ED10;
  if (!qword_26784ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED10);
  }
  return result;
}

unint64_t sub_214D032D0()
{
  unint64_t result = qword_26784ED18;
  if (!qword_26784ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED18);
  }
  return result;
}

unint64_t sub_214D03328()
{
  unint64_t result = qword_26784ED20;
  if (!qword_26784ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED20);
  }
  return result;
}

unint64_t sub_214D03380()
{
  unint64_t result = qword_26784ED28;
  if (!qword_26784ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED28);
  }
  return result;
}

unint64_t sub_214D033D8()
{
  unint64_t result = qword_26784ED30;
  if (!qword_26784ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED30);
  }
  return result;
}

unint64_t sub_214D03430()
{
  unint64_t result = qword_26784ED38;
  if (!qword_26784ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED38);
  }
  return result;
}

unint64_t sub_214D03488()
{
  unint64_t result = qword_26784ED40;
  if (!qword_26784ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED40);
  }
  return result;
}

unint64_t sub_214D034E0()
{
  unint64_t result = qword_26784ED48;
  if (!qword_26784ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED48);
  }
  return result;
}

unint64_t sub_214D03538()
{
  unint64_t result = qword_26784ED50;
  if (!qword_26784ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED50);
  }
  return result;
}

unint64_t sub_214D03590()
{
  unint64_t result = qword_26784ED58;
  if (!qword_26784ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED58);
  }
  return result;
}

unint64_t sub_214D035E8()
{
  unint64_t result = qword_26784ED60;
  if (!qword_26784ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED60);
  }
  return result;
}

unint64_t sub_214D03640()
{
  unint64_t result = qword_26784ED68;
  if (!qword_26784ED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED68);
  }
  return result;
}

unint64_t sub_214D03698()
{
  unint64_t result = qword_26784ED70;
  if (!qword_26784ED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED70);
  }
  return result;
}

unint64_t sub_214D036F0()
{
  unint64_t result = qword_26784ED78;
  if (!qword_26784ED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED78);
  }
  return result;
}

unint64_t sub_214D03748()
{
  unint64_t result = qword_26784ED80;
  if (!qword_26784ED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED80);
  }
  return result;
}

unint64_t sub_214D037A0()
{
  unint64_t result = qword_26784ED88;
  if (!qword_26784ED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED88);
  }
  return result;
}

unint64_t sub_214D037F8()
{
  unint64_t result = qword_26784ED90;
  if (!qword_26784ED90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED90);
  }
  return result;
}

unint64_t sub_214D03850()
{
  unint64_t result = qword_26784ED98;
  if (!qword_26784ED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784ED98);
  }
  return result;
}

unint64_t sub_214D038A8()
{
  unint64_t result = qword_26784EDA0;
  if (!qword_26784EDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDA0);
  }
  return result;
}

unint64_t sub_214D03900()
{
  unint64_t result = qword_26784EDA8;
  if (!qword_26784EDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDA8);
  }
  return result;
}

unint64_t sub_214D03958()
{
  unint64_t result = qword_26784EDB0;
  if (!qword_26784EDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDB0);
  }
  return result;
}

unint64_t sub_214D039B0()
{
  unint64_t result = qword_26784EDB8;
  if (!qword_26784EDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDB8);
  }
  return result;
}

unint64_t sub_214D03A08()
{
  unint64_t result = qword_26784EDC0;
  if (!qword_26784EDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDC0);
  }
  return result;
}

unint64_t sub_214D03A60()
{
  unint64_t result = qword_26784EDC8;
  if (!qword_26784EDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDC8);
  }
  return result;
}

unint64_t sub_214D03AB8()
{
  unint64_t result = qword_26784EDD0;
  if (!qword_26784EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDD0);
  }
  return result;
}

unint64_t sub_214D03B10()
{
  unint64_t result = qword_26784EDD8;
  if (!qword_26784EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDD8);
  }
  return result;
}

unint64_t sub_214D03B68()
{
  unint64_t result = qword_26784EDE0;
  if (!qword_26784EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDE0);
  }
  return result;
}

unint64_t sub_214D03BC0()
{
  unint64_t result = qword_26784EDE8;
  if (!qword_26784EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDE8);
  }
  return result;
}

unint64_t sub_214D03C18()
{
  unint64_t result = qword_26784EDF0;
  if (!qword_26784EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDF0);
  }
  return result;
}

unint64_t sub_214D03C70()
{
  unint64_t result = qword_26784EDF8;
  if (!qword_26784EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EDF8);
  }
  return result;
}

unint64_t sub_214D03CC8()
{
  unint64_t result = qword_26784EE00;
  if (!qword_26784EE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE00);
  }
  return result;
}

unint64_t sub_214D03D20()
{
  unint64_t result = qword_26784EE08;
  if (!qword_26784EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE08);
  }
  return result;
}

unint64_t sub_214D03D78()
{
  unint64_t result = qword_26784EE10;
  if (!qword_26784EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE10);
  }
  return result;
}

unint64_t sub_214D03DD0()
{
  unint64_t result = qword_26784EE18;
  if (!qword_26784EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE18);
  }
  return result;
}

unint64_t sub_214D03E28()
{
  unint64_t result = qword_26784EE20;
  if (!qword_26784EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE20);
  }
  return result;
}

unint64_t sub_214D03E80()
{
  unint64_t result = qword_26784EE28;
  if (!qword_26784EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE28);
  }
  return result;
}

unint64_t sub_214D03ED8()
{
  unint64_t result = qword_26784EE30;
  if (!qword_26784EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE30);
  }
  return result;
}

uint64_t type metadata accessor for ODIKnownBinding()
{
  uint64_t result = qword_26784F260;
  if (!qword_26784F260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214D03F78(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_214B6A264(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214D03FC8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214D04010()
{
  unint64_t result = qword_26784EE58;
  if (!qword_26784EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE58);
  }
  return result;
}

unint64_t sub_214D04064()
{
  unint64_t result = qword_26784EE88;
  if (!qword_26784EE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EE88);
  }
  return result;
}

unint64_t sub_214D040B8()
{
  unint64_t result = qword_26784EEB8;
  if (!qword_26784EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EEB8);
  }
  return result;
}

unint64_t sub_214D0410C()
{
  unint64_t result = qword_26784EEE8;
  if (!qword_26784EEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EEE8);
  }
  return result;
}

unint64_t sub_214D04160()
{
  unint64_t result = qword_26784EF00;
  if (!qword_26784EF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EF00);
  }
  return result;
}

unint64_t sub_214D041B4()
{
  unint64_t result = qword_26784EF18;
  if (!qword_26784EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EF18);
  }
  return result;
}

unint64_t sub_214D04208()
{
  unint64_t result = qword_26784EF48;
  if (!qword_26784EF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EF48);
  }
  return result;
}

unint64_t sub_214D0425C()
{
  unint64_t result = qword_26784EF78;
  if (!qword_26784EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EF78);
  }
  return result;
}

unint64_t sub_214D042B0()
{
  unint64_t result = qword_26784EF90;
  if (!qword_26784EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EF90);
  }
  return result;
}

unint64_t sub_214D04304()
{
  unint64_t result = qword_26784EFA8;
  if (!qword_26784EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EFA8);
  }
  return result;
}

uint64_t sub_214D04358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_214D043C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_214D04420()
{
  unint64_t result = qword_26784EFF0;
  if (!qword_26784EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EFF0);
  }
  return result;
}

uint64_t sub_214D04474(uint64_t a1)
{
  return a1;
}

unint64_t sub_214D04550()
{
  unint64_t result = qword_26784F008;
  if (!qword_26784F008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F008);
  }
  return result;
}

unint64_t sub_214D045A4()
{
  unint64_t result = qword_26784F020;
  if (!qword_26784F020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F020);
  }
  return result;
}

unint64_t sub_214D045F8()
{
  unint64_t result = qword_26784F038;
  if (!qword_26784F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F038);
  }
  return result;
}

unint64_t sub_214D0464C()
{
  unint64_t result = qword_26784F050;
  if (!qword_26784F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F050);
  }
  return result;
}

uint64_t sub_214D046A0(uint64_t a1)
{
  return sub_214B57580(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_214D046AC(uint64_t a1)
{
  return sub_214B95A9C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_214D046B4(void *a1)
{
  objc_msgSend(a1, sel_coordinate);
  double v3 = v2;
  if (qword_26784C868 != -1) {
    swift_once();
  }
  int v4 = (void *)qword_26784D478;
  id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
  id v6 = objc_msgSend(v4, sel_stringFromNumber_, v5);

  if (v6)
  {
    sub_214D1A038();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  objc_msgSend(a1, sel_coordinate);
  long long v7 = (void *)qword_26784D478;
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v8);
  id v10 = objc_msgSend(v7, sel_stringFromNumber_, v9);

  if (v10)
  {
    sub_214D1A038();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_214D04888()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214D048C0()
{
  return objectdestroy_164Tm(MEMORY[0x263F8EED8], MEMORY[0x263F8EEA0]);
}

uint64_t sub_214D048EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_214B6B4A4;
  return sub_214CC8020(a1, v4, v5, v6);
}

unint64_t sub_214D0499C()
{
  unint64_t result = qword_26784F098;
  if (!qword_26784F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784F098);
  }
  return result;
}

uint64_t sub_214D049F0()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_214D04A48(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = swift_task_alloc();
  long long v9 = *(_OWORD *)(v1 + 96);
  *(void *)(v2 + 16) = v8;
  *(void *)uint64_t v8 = v2;
  *(void *)(v8 + 8) = sub_214B6B4A4;
  *(void *)(v8 + 152) = v7;
  *(_OWORD *)(v8 + 136) = v9;
  *(void *)(v8 + 120) = v5;
  *(void *)(v8 + 128) = v6;
  *(void *)(v8 + 104) = v4;
  *(void *)(v8 + 112) = v1 + 40;
  *(void *)(v8 + 96) = a1;
  return MEMORY[0x270FA2498](sub_214CD1ADC, 0, 0);
}

uint64_t sub_214D04B30(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_214D04B8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_214B6F6CC(v2, v3, v4);
  return a1;
}

uint64_t sub_214D04BD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_214B6F6DC(v2, v3, v4);
  return a1;
}

uint64_t sub_214D04C24()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_214D04C7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214CDA130(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214D04D70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD98C4(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_214D04E48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD8A10(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t objectdestroy_183Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_214D04F68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD766C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_214D0503C(uint64_t a1)
{
  return a1;
}

uint64_t sub_214D05070(uint64_t a1)
{
  return a1;
}

uint64_t sub_214D050A4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214D050EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_214B6B4A4;
  return sub_214CD7374(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_214D051B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD6990(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_214D05294(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD5FAC(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_214D0536C()
{
  return objectdestroy_164Tm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t sub_214D05398(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_214B6B4A4;
  return sub_214CD5B30(a1, v4, v5, v6);
}

uint64_t sub_214D0544C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B6F6DC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 160, 7);
}

uint64_t sub_214D054B0()
{
  uint64_t v2 = v0 + 4;
  uint64_t v3 = v0[12];
  uint64_t v4 = v0 + 13;
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_214B6B4A4;
  v7[25] = v6;
  v7[26] = v5;
  v7[23] = v3;
  v7[24] = v4;
  v7[22] = v2;
  return MEMORY[0x270FA2498](sub_214CD4FF4, 0, 0);
}

uint64_t sub_214D05584(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD457C(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_199Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B6F6DC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_214D056BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_214B6B4A4;
  return sub_214CD38F0(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_214D05794()
{
  return objectdestroy_164Tm(MEMORY[0x263F8EEE8], MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_164Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  return MEMORY[0x270FA0238](v2, 40, 7);
}

uint64_t sub_214D05818(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_214B6B4A4;
  return sub_214CD3750(a1, v4, v5, v6);
}

uint64_t sub_214D058CC()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_214D0591C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)(v1 + 6);
  uint64_t v10 = v1[11];
  uint64_t v9 = v1[12];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214CD2D80(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_214D059FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_214B6B4A4;
  return sub_214CD36A0(a1, v4, v1 + 24);
}

uint64_t sub_214D05AAC(uint64_t a1)
{
  return sub_214D06244(a1, sub_214C3F654);
}

uint64_t sub_214D05AC4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B6B4A4;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_214CD43A8, 0, 0);
}

uint64_t sub_214D05B68(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  return sub_214CD4F20(a1, v1);
}

uint64_t objectdestroy_231Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_214D05C48()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214B6B4A4;
  v3[5] = v2;
  v3[6] = v0 + 24;
  return MEMORY[0x270FA2498](sub_214CD5840, v2, 0);
}

uint64_t sub_214D05CF8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  return sub_214CD68E4(a1, v1);
}

uint64_t sub_214D05D94(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  return sub_214CD72C8(a1, v1);
}

uint64_t sub_214D05E30(uint64_t *a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6A55C;
  return sub_214CD8414(a1, v1);
}

uint64_t sub_214D05EC8(uint64_t a1)
{
  return sub_214D06244(a1, sub_214C3FE0C);
}

uint64_t sub_214D05EE0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B6B4A4;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_214CD9498, 0, 0);
}

uint64_t sub_214D05F84(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6B4A4;
  return sub_214CDA084(a1, v1);
}

uint64_t sub_214D06020()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_214D06068(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_214B6B4A4;
  return sub_214CDADB0(a1, v4, v5, v1 + 32);
}

uint64_t sub_214D0611C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_214D0616C(uint64_t a1)
{
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_214B6B4A4;
  return sub_214CD21A4(a1, (uint64_t)(v1 + 2), v4, v5, v6, v7);
}

uint64_t sub_214D06244(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_214D0625C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_214CFCD74(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_214CDC814(v4, &qword_26784CFD0);
  swift_bridgeObjectRelease();
  unint64_t v6 = sub_214B919DC(MEMORY[0x263F8EE78]);
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v10 = (unsigned char *)(v7 + 32);
    while (1)
    {
      uint64_t v97 = v8;
      uint64_t v98 = v10 + 1;
      switch(*v10)
      {
        case 1:
          LOBYTE(v99) = 66;
          uint64_t v94 = sub_214CDB3C8(&v99, a2);
          uint64_t v31 = v30;
          LOBYTE(v99) = 67;
          uint64_t v90 = sub_214CDB3C8(&v99, a2);
          uint64_t v33 = v32;
          LOBYTE(v99) = 62;
          uint64_t v86 = sub_214CDB3C8(&v99, a2);
          uint64_t v35 = v34;
          LOBYTE(v99) = 63;
          uint64_t v83 = sub_214CDB3C8(&v99, a2);
          uint64_t v37 = v36;
          LOBYTE(v99) = 61;
          uint64_t v38 = sub_214CDB3C8(&v99, a2);
          uint64_t v40 = v39;
          LOBYTE(v99) = 64;
          uint64_t v41 = sub_214CDB3C8(&v99, a2);
          uint64_t v43 = v42;
          LOBYTE(v99) = 65;
          uint64_t v44 = sub_214CDB3C8(&v99, a2);
          if (!v31 && !v33 && !v35 && !v40 && !v43 && !v45)
          {
            swift_bridgeObjectRelease();
            unsigned __int8 v29 = 1;
            goto LABEL_35;
          }
          v101[0] = v94;
          v101[1] = v31;
          v101[2] = v90;
          v101[3] = v33;
          v101[4] = v86;
          v101[5] = v35;
          v101[6] = v83;
          unsigned char v101[7] = v37;
          v101[8] = v38;
          v101[9] = v40;
          v101[10] = v41;
          v101[11] = v43;
          v101[12] = v44;
          v101[13] = v45;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v99 = v97;
          uint64_t v12 = (long long *)v101;
          unsigned __int8 v13 = 1;
          goto LABEL_4;
        case 2:
          LOBYTE(v99) = 55;
          uint64_t v95 = sub_214CDB3C8(&v99, a2);
          uint64_t v47 = v46;
          LOBYTE(v99) = 56;
          uint64_t v91 = sub_214CDB3C8(&v99, a2);
          uint64_t v49 = v48;
          LOBYTE(v99) = 51;
          uint64_t v87 = sub_214CDB3C8(&v99, a2);
          uint64_t v51 = v50;
          LOBYTE(v99) = 52;
          uint64_t v84 = sub_214CDB3C8(&v99, a2);
          uint64_t v53 = v52;
          LOBYTE(v99) = 50;
          uint64_t v54 = sub_214CDB3C8(&v99, a2);
          uint64_t v56 = v55;
          LOBYTE(v99) = 53;
          uint64_t v57 = sub_214CDB3C8(&v99, a2);
          uint64_t v59 = v58;
          LOBYTE(v99) = 54;
          uint64_t v60 = sub_214CDB3C8(&v99, a2);
          if (!v47 && !v49 && !v51 && !v56 && !v59 && !v61)
          {
            swift_bridgeObjectRelease();
            unsigned __int8 v29 = 2;
            goto LABEL_35;
          }
          v102[0] = v95;
          v102[1] = v47;
          v102[2] = v91;
          v102[3] = v49;
          v102[4] = v87;
          v102[5] = v51;
          v102[6] = v84;
          unsigned char v102[7] = v53;
          v102[8] = v54;
          v102[9] = v56;
          v102[10] = v57;
          v102[11] = v59;
          v102[12] = v60;
          v102[13] = v61;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v99 = v97;
          uint64_t v12 = (long long *)v102;
          unsigned __int8 v13 = 2;
          goto LABEL_4;
        case 3:
          LOBYTE(v99) = 23;
          uint64_t v96 = sub_214CDB3C8(&v99, a2);
          uint64_t v63 = v62;
          LOBYTE(v99) = 24;
          uint64_t v92 = sub_214CDB3C8(&v99, a2);
          uint64_t v65 = v64;
          LOBYTE(v99) = 25;
          uint64_t v88 = sub_214CDB3C8(&v99, a2);
          uint64_t v67 = v66;
          LOBYTE(v99) = 26;
          uint64_t v85 = sub_214CDB3C8(&v99, a2);
          uint64_t v69 = v68;
          LOBYTE(v99) = 27;
          uint64_t v70 = sub_214CDB3C8(&v99, a2);
          uint64_t v72 = v71;
          LOBYTE(v99) = 28;
          uint64_t v73 = sub_214CDB3C8(&v99, a2);
          uint64_t v75 = v74;
          LOBYTE(v99) = 30;
          uint64_t v76 = sub_214CDB3C8(&v99, a2);
          if (!v63 && !v65 && !v67 && !v72 && !v75 && !v77)
          {
            swift_bridgeObjectRelease();
            unsigned __int8 v29 = 3;
            goto LABEL_35;
          }
          v103[0] = v96;
          v103[1] = v63;
          v103[2] = v92;
          v103[3] = v65;
          v103[4] = v88;
          v103[5] = v67;
          v103[6] = v85;
          unsigned char v103[7] = v69;
          v103[8] = v70;
          v103[9] = v72;
          v103[10] = v73;
          v103[11] = v75;
          v103[12] = v76;
          v103[13] = v77;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v99 = v97;
          uint64_t v12 = (long long *)v103;
          unsigned __int8 v13 = 3;
          goto LABEL_4;
        default:
          LOBYTE(v99) = 5;
          uint64_t v93 = sub_214CDB3C8(&v99, a2);
          uint64_t v15 = v14;
          LOBYTE(v99) = 6;
          uint64_t v89 = sub_214CDB3C8(&v99, a2);
          uint64_t v17 = v16;
          LOBYTE(v99) = 7;
          uint64_t v18 = sub_214CDB3C8(&v99, a2);
          uint64_t v20 = v19;
          LOBYTE(v99) = 8;
          uint64_t v21 = sub_214CDB3C8(&v99, a2);
          uint64_t v23 = v22;
          LOBYTE(v99) = 9;
          uint64_t v24 = sub_214CDB3C8(&v99, a2);
          uint64_t v26 = v25;
          LOBYTE(v99) = 11;
          uint64_t v27 = sub_214CDB3C8(&v99, a2);
          if (v15 || v17 || v20 || v26 || v28)
          {
            v100[0] = v93;
            v100[1] = v15;
            v100[2] = v89;
            v100[3] = v17;
            v100[4] = v18;
            v100[5] = v20;
            v100[6] = v21;
            unsigned char v100[7] = v23;
            v100[8] = v24;
            v100[9] = v26;
            v100[10] = v27;
            v100[11] = v28;
            v100[12] = 0;
            v100[13] = 0;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v99 = v97;
            uint64_t v12 = (long long *)v100;
            unsigned __int8 v13 = 0;
LABEL_4:
            sub_214B8EE8C(v12, v13, isUniquelyReferenced_nonNull_native);
            uint64_t v8 = v99;
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
          unsigned __int8 v29 = 0;
LABEL_35:
          uint64_t v8 = v97;
          unint64_t v78 = sub_214B88378(v29);
          if (v79)
          {
            unint64_t v80 = v78;
            int v81 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v99 = v97;
            if (!v81)
            {
              sub_214B91328();
              uint64_t v8 = v99;
            }
            sub_214CDC2BC(v80, v8);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_5:
            swift_bridgeObjectRelease();
          }
          --v9;
          uint64_t v10 = v98;
          if (!v9) {
            goto LABEL_42;
          }
          break;
      }
    }
  }
LABEL_42:
  swift_release();
  return v8;
}

unint64_t sub_214D068B8()
{
  unint64_t result = qword_26784F250;
  if (!qword_26784F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F250);
  }
  return result;
}

uint64_t sub_214D0690C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 9) <= 0xD9u) {
    int v1 = 217;
  }
  else {
    int v1 = *(unsigned __int8 *)(a1 + 9);
  }
  unsigned int v2 = v1 - 217;
  if (*(unsigned __int8 *)(a1 + 9) >= 0xD1u) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t sub_214D0692C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214D06940(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource.PhoneNumberType()
{
  return &type metadata for PhoneFormatterSource.PhoneNumberType;
}

uint64_t getEnumTagSinglePayload for LocationProviderError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocationProviderError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationProviderError()
{
  return &type metadata for LocationProviderError;
}

ValueMetadata *type metadata accessor for GeocoderSource.AddressType()
{
  return &type metadata for GeocoderSource.AddressType;
}

ValueMetadata *type metadata accessor for ConfigurationSource.CodingKeys()
{
  return &type metadata for ConfigurationSource.CodingKeys;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource.CodingKeys()
{
  return &type metadata for PhoneFormatterSource.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GeocoderSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D06B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeocoderSource.CodingKeys()
{
  return &type metadata for GeocoderSource.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceSettingsSource.CodingKeys()
{
  return &type metadata for DeviceSettingsSource.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NameParserSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D06C38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NameParserSource.CodingKeys()
{
  return &type metadata for NameParserSource.CodingKeys;
}

ValueMetadata *type metadata accessor for CallerClientSource.CodingKeys()
{
  return &type metadata for CallerClientSource.CodingKeys;
}

ValueMetadata *type metadata accessor for TimeZoneSource.CodingKeys()
{
  return &type metadata for TimeZoneSource.CodingKeys;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesSource.CodingKeys()
{
  return &type metadata for TelephonyUtilitiesSource.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D06D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSource.CodingKeys()
{
  return &type metadata for LocationSource.CodingKeys;
}

ValueMetadata *type metadata accessor for CoreTelephonySource.CodingKeys()
{
  return &type metadata for CoreTelephonySource.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSSource.CodingKeys()
{
  return &type metadata for IDSSource.CodingKeys;
}

ValueMetadata *type metadata accessor for NearFieldSource.CodingKeys()
{
  return &type metadata for NearFieldSource.CodingKeys;
}

ValueMetadata *type metadata accessor for BaaSource.CodingKeys()
{
  return &type metadata for BaaSource.CodingKeys;
}

unsigned char *_s17CoreODIEssentials14GeocoderSourceV11AddressTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D06EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileGestaltSource.CodingKeys()
{
  return &type metadata for MobileGestaltSource.CodingKeys;
}

unsigned char *_s17CoreODIEssentials20PhoneFormatterSourceV15PhoneNumberTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D06FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountsSource.CodingKeys()
{
  return &type metadata for AccountsSource.CodingKeys;
}

uint64_t *sub_214D06FEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v10 = sub_214D19C78();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_214D07110(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t v3 = sub_214D19C78();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_214D071B4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_214D19C78();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_214D07294(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_214D043C0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v7 = sub_214D19C78();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_214D073A0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_214D19C78();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_214D07458(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_214D043C0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ODIKnownBinding);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_214D19C78();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_214D07538()
{
  uint64_t result = sub_214D19C78();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_214D075E4()
{
  return sub_214D03FC8(&qword_26784F270, 255, (void (*)(uint64_t))type metadata accessor for ODIKnownBinding);
}

unint64_t sub_214D07634()
{
  unint64_t result = qword_26784F278;
  if (!qword_26784F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F278);
  }
  return result;
}

unint64_t sub_214D0768C()
{
  unint64_t result = qword_26784F280;
  if (!qword_26784F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F280);
  }
  return result;
}

unint64_t sub_214D076E4()
{
  unint64_t result = qword_26784F288;
  if (!qword_26784F288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F288);
  }
  return result;
}

unint64_t sub_214D0773C()
{
  unint64_t result = qword_26784F290;
  if (!qword_26784F290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F290);
  }
  return result;
}

unint64_t sub_214D07794()
{
  unint64_t result = qword_26784F298;
  if (!qword_26784F298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F298);
  }
  return result;
}

unint64_t sub_214D077EC()
{
  unint64_t result = qword_26784F2A0;
  if (!qword_26784F2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2A0);
  }
  return result;
}

unint64_t sub_214D07844()
{
  unint64_t result = qword_26784F2A8;
  if (!qword_26784F2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2A8);
  }
  return result;
}

unint64_t sub_214D0789C()
{
  unint64_t result = qword_26784F2B0;
  if (!qword_26784F2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2B0);
  }
  return result;
}

unint64_t sub_214D078F4()
{
  unint64_t result = qword_26784F2B8;
  if (!qword_26784F2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2B8);
  }
  return result;
}

unint64_t sub_214D0794C()
{
  unint64_t result = qword_26784F2C0;
  if (!qword_26784F2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2C0);
  }
  return result;
}

unint64_t sub_214D079A4()
{
  unint64_t result = qword_26784F2C8;
  if (!qword_26784F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2C8);
  }
  return result;
}

unint64_t sub_214D079FC()
{
  unint64_t result = qword_26784F2D0;
  if (!qword_26784F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2D0);
  }
  return result;
}

unint64_t sub_214D07A54()
{
  unint64_t result = qword_26784F2D8;
  if (!qword_26784F2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2D8);
  }
  return result;
}

unint64_t sub_214D07AAC()
{
  unint64_t result = qword_26784F2E0;
  if (!qword_26784F2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2E0);
  }
  return result;
}

unint64_t sub_214D07B04()
{
  unint64_t result = qword_26784F2E8;
  if (!qword_26784F2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2E8);
  }
  return result;
}

unint64_t sub_214D07B5C()
{
  unint64_t result = qword_26784F2F0;
  if (!qword_26784F2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2F0);
  }
  return result;
}

unint64_t sub_214D07BB4()
{
  unint64_t result = qword_26784F2F8;
  if (!qword_26784F2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F2F8);
  }
  return result;
}

unint64_t sub_214D07C0C()
{
  unint64_t result = qword_26784F300;
  if (!qword_26784F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F300);
  }
  return result;
}

unint64_t sub_214D07C64()
{
  unint64_t result = qword_26784F308;
  if (!qword_26784F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F308);
  }
  return result;
}

unint64_t sub_214D07CBC()
{
  unint64_t result = qword_26784F310;
  if (!qword_26784F310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F310);
  }
  return result;
}

unint64_t sub_214D07D14()
{
  unint64_t result = qword_26784F318;
  if (!qword_26784F318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F318);
  }
  return result;
}

unint64_t sub_214D07D6C()
{
  unint64_t result = qword_26784F320;
  if (!qword_26784F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F320);
  }
  return result;
}

unint64_t sub_214D07DC4()
{
  unint64_t result = qword_26784F328;
  if (!qword_26784F328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F328);
  }
  return result;
}

unint64_t sub_214D07E1C()
{
  unint64_t result = qword_26784F330;
  if (!qword_26784F330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F330);
  }
  return result;
}

unint64_t sub_214D07E74()
{
  unint64_t result = qword_26784F338;
  if (!qword_26784F338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F338);
  }
  return result;
}

unint64_t sub_214D07ECC()
{
  unint64_t result = qword_26784F340;
  if (!qword_26784F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F340);
  }
  return result;
}

unint64_t sub_214D07F24()
{
  unint64_t result = qword_26784F348;
  if (!qword_26784F348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F348);
  }
  return result;
}

unint64_t sub_214D07F7C()
{
  unint64_t result = qword_26784F350;
  if (!qword_26784F350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F350);
  }
  return result;
}

unint64_t sub_214D07FD4()
{
  unint64_t result = qword_26784F358;
  if (!qword_26784F358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F358);
  }
  return result;
}

unint64_t sub_214D0802C()
{
  unint64_t result = qword_26784F360;
  if (!qword_26784F360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F360);
  }
  return result;
}

unint64_t sub_214D08084()
{
  unint64_t result = qword_26784F368;
  if (!qword_26784F368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F368);
  }
  return result;
}

unint64_t sub_214D080DC()
{
  unint64_t result = qword_26784F370;
  if (!qword_26784F370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F370);
  }
  return result;
}

unint64_t sub_214D08134()
{
  unint64_t result = qword_26784F378;
  if (!qword_26784F378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F378);
  }
  return result;
}

unint64_t sub_214D0818C()
{
  unint64_t result = qword_26784F380;
  if (!qword_26784F380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F380);
  }
  return result;
}

unint64_t sub_214D081E4()
{
  unint64_t result = qword_26784F388;
  if (!qword_26784F388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F388);
  }
  return result;
}

unint64_t sub_214D0823C()
{
  unint64_t result = qword_26784F390;
  if (!qword_26784F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F390);
  }
  return result;
}

unint64_t sub_214D08294()
{
  unint64_t result = qword_26784F398;
  if (!qword_26784F398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F398);
  }
  return result;
}

unint64_t sub_214D082EC()
{
  unint64_t result = qword_26784F3A0;
  if (!qword_26784F3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3A0);
  }
  return result;
}

unint64_t sub_214D08344()
{
  unint64_t result = qword_26784F3A8;
  if (!qword_26784F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3A8);
  }
  return result;
}

unint64_t sub_214D0839C()
{
  unint64_t result = qword_26784F3B0;
  if (!qword_26784F3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3B0);
  }
  return result;
}

unint64_t sub_214D083F4()
{
  unint64_t result = qword_26784F3B8;
  if (!qword_26784F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3B8);
  }
  return result;
}

unint64_t sub_214D0844C()
{
  unint64_t result = qword_26784F3C0;
  if (!qword_26784F3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3C0);
  }
  return result;
}

unint64_t sub_214D084A4()
{
  unint64_t result = qword_26784F3C8;
  if (!qword_26784F3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3C8);
  }
  return result;
}

unint64_t sub_214D084FC()
{
  unint64_t result = qword_26784F3D0;
  if (!qword_26784F3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3D0);
  }
  return result;
}

unint64_t sub_214D08554()
{
  unint64_t result = qword_26784F3D8;
  if (!qword_26784F3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3D8);
  }
  return result;
}

unint64_t sub_214D085AC()
{
  unint64_t result = qword_26784F3E0;
  if (!qword_26784F3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3E0);
  }
  return result;
}

unint64_t sub_214D08604()
{
  unint64_t result = qword_26784F3E8;
  if (!qword_26784F3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F3E8);
  }
  return result;
}

unint64_t sub_214D08658()
{
  unint64_t result = qword_26784F428;
  if (!qword_26784F428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F428);
  }
  return result;
}

unint64_t sub_214D086AC()
{
  unint64_t result = qword_26784F430;
  if (!qword_26784F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F430);
  }
  return result;
}

unint64_t sub_214D08700()
{
  unint64_t result = qword_26784F438;
  if (!qword_26784F438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F438);
  }
  return result;
}

unint64_t sub_214D08754()
{
  unint64_t result = qword_26784F440;
  if (!qword_26784F440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F440);
  }
  return result;
}

unint64_t sub_214D087A8()
{
  unint64_t result = qword_26784F448;
  if (!qword_26784F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F448);
  }
  return result;
}

unint64_t sub_214D087FC()
{
  unint64_t result = qword_26784F450;
  if (!qword_26784F450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F450);
  }
  return result;
}

unint64_t sub_214D08850()
{
  unint64_t result = qword_26784F458;
  if (!qword_26784F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F458);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ODIKnownBinding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214D08970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.CodingKeys()
{
  return &type metadata for ODIKnownBinding.CodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.DoubleCodingKeys()
{
  return &type metadata for ODIKnownBinding.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.StringCodingKeys()
{
  return &type metadata for ODIKnownBinding.StringCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.IntCodingKeys()
{
  return &type metadata for ODIKnownBinding.IntCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.DateCodingKeys()
{
  return &type metadata for ODIKnownBinding.DateCodingKeys;
}

unsigned char *_s17CoreODIEssentials25ArmandDeviceDataErrorCodeO18PacErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x214D08A84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.BoolCodingKeys()
{
  return &type metadata for ODIKnownBinding.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.NullCodingKeys()
{
  return &type metadata for ODIKnownBinding.NullCodingKeys;
}

unint64_t sub_214D08AD0()
{
  unint64_t result = qword_26784F498;
  if (!qword_26784F498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F498);
  }
  return result;
}

unint64_t sub_214D08B28()
{
  unint64_t result = qword_26784F4A0;
  if (!qword_26784F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4A0);
  }
  return result;
}

unint64_t sub_214D08B80()
{
  unint64_t result = qword_26784F4A8;
  if (!qword_26784F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4A8);
  }
  return result;
}

unint64_t sub_214D08BD8()
{
  unint64_t result = qword_26784F4B0;
  if (!qword_26784F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4B0);
  }
  return result;
}

unint64_t sub_214D08C30()
{
  unint64_t result = qword_26784F4B8;
  if (!qword_26784F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4B8);
  }
  return result;
}

unint64_t sub_214D08C88()
{
  unint64_t result = qword_26784F4C0;
  if (!qword_26784F4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4C0);
  }
  return result;
}

unint64_t sub_214D08CE0()
{
  unint64_t result = qword_26784F4C8;
  if (!qword_26784F4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4C8);
  }
  return result;
}

unint64_t sub_214D08D38()
{
  unint64_t result = qword_26784F4D0;
  if (!qword_26784F4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4D0);
  }
  return result;
}

unint64_t sub_214D08D90()
{
  unint64_t result = qword_26784F4D8;
  if (!qword_26784F4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4D8);
  }
  return result;
}

unint64_t sub_214D08DE8()
{
  unint64_t result = qword_26784F4E0;
  if (!qword_26784F4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4E0);
  }
  return result;
}

unint64_t sub_214D08E40()
{
  unint64_t result = qword_26784F4E8;
  if (!qword_26784F4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4E8);
  }
  return result;
}

unint64_t sub_214D08E98()
{
  unint64_t result = qword_26784F4F0;
  if (!qword_26784F4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4F0);
  }
  return result;
}

unint64_t sub_214D08EF0()
{
  unint64_t result = qword_26784F4F8;
  if (!qword_26784F4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F4F8);
  }
  return result;
}

unint64_t sub_214D08F48()
{
  unint64_t result = qword_26784F500;
  if (!qword_26784F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F500);
  }
  return result;
}

unint64_t sub_214D08FA0()
{
  unint64_t result = qword_26784F508;
  if (!qword_26784F508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F508);
  }
  return result;
}

unint64_t sub_214D08FF8()
{
  unint64_t result = qword_26784F510;
  if (!qword_26784F510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F510);
  }
  return result;
}

unint64_t sub_214D09050()
{
  unint64_t result = qword_26784F518;
  if (!qword_26784F518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F518);
  }
  return result;
}

unint64_t sub_214D090A8()
{
  unint64_t result = qword_26784F520;
  if (!qword_26784F520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F520);
  }
  return result;
}

unint64_t sub_214D09100()
{
  unint64_t result = qword_26784F528;
  if (!qword_26784F528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F528);
  }
  return result;
}

unint64_t sub_214D09158()
{
  unint64_t result = qword_26784F530;
  if (!qword_26784F530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784F530);
  }
  return result;
}

Swift::Bool __swiftcall NSUserDefaults.internalBool(forKey:)(Swift::String forKey)
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 != 1) {
    return 0;
  }
  unsigned int v2 = (void *)sub_214D1A028();
  unsigned __int8 v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

Swift::String_optional __swiftcall NSUserDefaults.internalString(forKey:)(Swift::String forKey)
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1
    && (unsigned int v2 = (void *)sub_214D1A028(),
        id v3 = objc_msgSend(v1, sel_stringForKey_, v2),
        v2,
        v3))
  {
    uint64_t v4 = sub_214D1A038();
    unsigned int v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unsigned int v6 = 0;
  }
  uint64_t v7 = v4;
  uint64_t v8 = v6;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

uint64_t sub_214D09330()
{
  unint64_t v1 = *v0;
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 != 1) {
    return 0;
  }
  unsigned int v2 = (void *)sub_214D1A028();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_214D1A038();

  return v4;
}

Swift::Int_optional __swiftcall NSUserDefaults.internalInt(forKey:)(Swift::String forKey)
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    unsigned int v2 = (void *)sub_214D1A028();
    id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

    if (v3)
    {
      uint64_t v4 = sub_214D1A038();
      unint64_t v6 = v5;

      uint64_t v8 = HIBYTE(v6) & 0xF;
      uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
      if ((v6 & 0x2000000000000000) != 0) {
        uint64_t v10 = HIBYTE(v6) & 0xF;
      }
      else {
        uint64_t v10 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (v10)
      {
        if ((v6 & 0x1000000000000000) != 0)
        {
          uint64_t v12 = (uint64_t)sub_214C6639C(v4, v6, 10);
          LOBYTE(v4) = v27;
LABEL_48:
          swift_bridgeObjectRelease();
          char v23 = v4 & 1;
          if (v4) {
            Swift::Int v7 = 0;
          }
          else {
            Swift::Int v7 = v12;
          }
          goto LABEL_59;
        }
        if ((v6 & 0x2000000000000000) == 0)
        {
          if ((v4 & 0x1000000000000000) != 0) {
            uint64_t v11 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v11 = (unsigned __int8 *)sub_214D1A818();
          }
          uint64_t v12 = (uint64_t)sub_214C66384(v11, v9, 10);
          LOBYTE(v4) = v13 & 1;
          goto LABEL_48;
        }
        v28[0] = v4;
        v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
        if (v4 == 43)
        {
          if (!v8) {
            goto LABEL_63;
          }
          if (v8 == 1 || (BYTE1(v4) - 48) > 9u) {
            goto LABEL_35;
          }
          uint64_t v12 = (BYTE1(v4) - 48);
          if (v8 != 2)
          {
            if ((BYTE2(v4) - 48) > 9u) {
              goto LABEL_35;
            }
            uint64_t v12 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            uint64_t v14 = v8 - 3;
            if (v14)
            {
              uint64_t v15 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                unsigned int v16 = *v15 - 48;
                if (v16 > 9) {
                  goto LABEL_35;
                }
                uint64_t v17 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                  goto LABEL_35;
                }
                uint64_t v12 = v17 + v16;
                if (__OFADD__(v17, v16)) {
                  goto LABEL_35;
                }
                LOBYTE(v4) = 0;
                ++v15;
                if (!--v14) {
                  goto LABEL_48;
                }
              }
            }
          }
        }
        else
        {
          if (v4 == 45)
          {
            if (v8)
            {
              if (v8 != 1 && (BYTE1(v4) - 48) <= 9u)
              {
                if (v8 == 2)
                {
                  LOBYTE(v4) = 0;
                  uint64_t v12 = -(uint64_t)(BYTE1(v4) - 48);
                  goto LABEL_48;
                }
                if ((BYTE2(v4) - 48) <= 9u)
                {
                  uint64_t v12 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
                  uint64_t v22 = v8 - 3;
                  if (!v22) {
                    goto LABEL_47;
                  }
                  uint64_t v24 = (unsigned __int8 *)v28 + 3;
                  while (1)
                  {
                    unsigned int v25 = *v24 - 48;
                    if (v25 > 9) {
                      break;
                    }
                    uint64_t v26 = 10 * v12;
                    if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                      break;
                    }
                    uint64_t v12 = v26 - v25;
                    if (__OFSUB__(v26, v25)) {
                      break;
                    }
                    LOBYTE(v4) = 0;
                    ++v24;
                    if (!--v22) {
                      goto LABEL_48;
                    }
                  }
                }
              }
LABEL_35:
              uint64_t v12 = 0;
              LOBYTE(v4) = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          if (!v8 || (v4 - 48) > 9u) {
            goto LABEL_35;
          }
          uint64_t v12 = (v4 - 48);
          if (v8 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u) {
              goto LABEL_35;
            }
            uint64_t v12 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
            uint64_t v18 = v8 - 2;
            if (v18)
            {
              uint64_t v19 = (unsigned __int8 *)v28 + 2;
              while (1)
              {
                unsigned int v20 = *v19 - 48;
                if (v20 > 9) {
                  goto LABEL_35;
                }
                uint64_t v21 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                  goto LABEL_35;
                }
                uint64_t v12 = v21 + v20;
                if (__OFADD__(v21, v20)) {
                  goto LABEL_35;
                }
                LOBYTE(v4) = 0;
                ++v19;
                if (!--v18) {
                  goto LABEL_48;
                }
              }
            }
          }
        }
LABEL_47:
        LOBYTE(v4) = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
    }
  }
  Swift::Int v7 = 0;
  char v23 = 1;
LABEL_59:
  LOBYTE(v9) = v23;
LABEL_64:
  result.is_nil = v9;
  result.value = v7;
  return result;
}

void __swiftcall NSUserDefaults.internalFloat(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    id v3 = (void *)sub_214D1A028();
    id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      uint64_t v5 = sub_214D1A038();
      uint64_t v7 = v6;

      int v20 = 0;
      uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
      v16[2] = &v20;
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v5 & 0x1000000000000000))
      {
        sub_214D1A778();
      }
      else
      {
        MEMORY[0x270FA5388](v10, v16);
        if ((v7 & 0x2000000000000000) != 0)
        {
          uint64_t v17 = v5;
          uint64_t v18 = v7 & 0xFFFFFFFFFFFFFFLL;
          BOOL v15 = (v5 > 0x20u || ((0x100003E01uLL >> v5) & 1) == 0)
             && (uint64_t v14 = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0
             && *v14 == 0;
          char v19 = v15;
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        if ((v5 & 0x1000000000000000) != 0)
        {
          uint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v12 = v5 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v11 = sub_214D1A818();
        }
        char v19 = sub_214D09B74(v11, v12, (void (*)(uint64_t *__return_ptr))sub_214D09C88) & 1;
      }
      swift_bridgeObjectRelease();
LABEL_19:
      char v13 = v19 ^ 1;
      goto LABEL_20;
    }
  }
  char v13 = 1;
LABEL_20:
  LOBYTE(v17) = v13;
}

uint64_t static NSUserDefaults.globalInternalBool(forKey:)(uint64_t a1, uint64_t a2)
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 != 1) {
    return 0;
  }
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  id v5 = objc_msgSend(v4, sel_persistentDomainForName_, *MEMORY[0x263F08100]);

  if (!v5 || (uint64_t v6 = sub_214D19F98(), v5, !v6))
  {
    long long v11 = 0u;
    long long v12 = 0u;
    goto LABEL_15;
  }
  if (!*(void *)(v6 + 16))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_214B87FEC(a1, a2);
  if ((v8 & 1) == 0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_214B5EC30(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_15:
    sub_214B5ECF4((uint64_t)&v11);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v10;
  }
  return result;
}

uint64_t sub_214D09B74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_214D09BD4@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *sub_214D09C18@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_214D09C88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void sub_214D0B82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0BA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0BD54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0BFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0C234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0C580(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_214D0C810(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_214D0CB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_214D0CDCC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_214D0D17C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_214D0D598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0D89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_214D0DAD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_214D0DD08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_214D0DF68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void bcgsyabc74vz12(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    BOOL v3 = a3 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_214D0E718()
{
  return 4294940294;
}

uint64_t sub_214D0E720(uint64_t a1, unsigned int a2, void *a3)
{
  *a3 = (*(uint64_t (**)(void, uint64_t))(v3 + 576))(a2, 3384187359);
  (*(void (**)(void *, unint64_t *, uint64_t))(v3 + 760))(&unk_214D2ADF4, &STACK[0x420], 16);
  uint64_t v5 = *(uint64_t (**)(void *))(v3 + 760);
  STACK[0x398] = v4 - 144;
  uint64_t v6 = v5(&unk_214D2A9E0);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((13
                                              * ((unint64_t)((char *)&STACK[0x430] - (char *)&unk_214D2B720) < 0x20)) ^ 0x27u)))(v6);
}

uint64_t sub_214D0E7D8@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)&STACK[0x430] = xmmword_214D2CC70;
  *(_OWORD *)&STACK[0x440] = xmmword_214D2CC80;
  *(_OWORD *)&STACK[0x450] = xmmword_214D2CC90;
  *(_OWORD *)&STACK[0x460] = xmmword_214D2CCA0;
  *(_OWORD *)&STACK[0x470] = xmmword_214D2CCB0;
  *(_OWORD *)&STACK[0x480] = xmmword_214D2CCC0;
  *(_OWORD *)&STACK[0x490] = xmmword_214D2CCD0;
  *(_OWORD *)&STACK[0x4A0] = xmmword_214D2CCE0;
  *(_OWORD *)&STACK[0x4B0] = xmmword_214D2CCF0;
  *(_OWORD *)&STACK[0x4C0] = xmmword_214D2CD00;
  *(_OWORD *)&STACK[0x4D0] = xmmword_214D2CD10;
  *(_OWORD *)&STACK[0x4E0] = xmmword_214D2CD20;
  *(_OWORD *)&STACK[0x4F0] = xmmword_214D2CD30;
  *(_OWORD *)&STACK[0x500] = xmmword_214D2CD40;
  *(_OWORD *)&STACK[0x510] = xmmword_214D2CD50;
  *(_OWORD *)&STACK[0x520] = xmmword_214D2CD60;
  *(_OWORD *)&STACK[0x530] = xmmword_214D2CD70;
  *(_OWORD *)&STACK[0x540] = xmmword_214D2CD80;
  *(_OWORD *)&STACK[0x550] = xmmword_214D2CD90;
  *(_OWORD *)&STACK[0x560] = xmmword_214D2CDA0;
  *(_OWORD *)&STACK[0x570] = xmmword_214D2CDB0;
  *(_OWORD *)&STACK[0x580] = xmmword_214D2CDC0;
  *(_OWORD *)&STACK[0x590] = xmmword_214D2CDD0;
  *(_OWORD *)&STACK[0x5A0] = xmmword_214D2CDE0;
  *(_OWORD *)&STACK[0x5B0] = xmmword_214D2CDF0;
  *(_OWORD *)&STACK[0x5C0] = xmmword_214D2CE00;
  *(_OWORD *)&STACK[0x5D0] = xmmword_214D2CE10;
  *(_OWORD *)&STACK[0x5E0] = xmmword_214D2CE20;
  *(_OWORD *)&STACK[0x5F0] = 0u;
  *(_OWORD *)&STACK[0x600] = 0u;
  *(_OWORD *)&STACK[0x610] = 0u;
  *(_OWORD *)&STACK[0x620] = 0u;
  *(_OWORD *)&STACK[0x630] = 0u;
  *(_OWORD *)&STACK[0x640] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  int v4 = ((118806587 - v3) & 0xFD1595EF ^ 0x82) == 137;
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * v4) | (v4 << 6) | 0xD)))();
}

uint64_t sub_214D0E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (v9 ^ ((4 * (&a9 == (uint64_t *)-1072)) | (16 * (&a9 == (uint64_t *)-1072))))))();
}

uint64_t sub_214D0E9E4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 ^ 7) + 67831726) & 0xFBF4F86B ^ 0x3B) * (a1 == v2)) ^ v1 ^ 7)))();
}

uint64_t sub_214D0EA24()
{
  int v5 = v0 + 26;
  *(void *)(v4 - 144) = 0x951FAAEE1026D03;
  *(void *)(v4 - 136) = 0x9AAF552B875DE8C0;
  int v6 = (v0 + 26) ^ 0x2B;
  if (v1) {
    BOOL v7 = v2 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 + 15) * v8) ^ v5)))();
}

uint64_t sub_214D0EA80()
{
  STACK[0x398] = (unint64_t)&STACK[0x420];
  if (v1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ 0x2B) + 15) * v5) ^ v0)))();
}

uint64_t sub_214D0EABC@<X0>(int a1@<W8>)
{
  unsigned int v4 = ((v2 + 1357734545) ^ 0xFD29D4E) & (2 * ((v2 + 1357734545) & 0xAF129D6F)) ^ (v2 + 1357734545) & 0xAF129D6F;
  unsigned int v5 = ((v1 - 712503020) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4))) & ((v2 + 1357734545) ^ 0x45D695C4) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4)) & 0xEAC408AA;
  unsigned int v6 = ((4 * (v5 ^ 0x2A4408A9)) ^ 0xAB1022AC) & (v5 ^ 0x2A4408A9) ^ (4 * (v5 ^ 0x2A4408A9)) & 0xEAC408A8;
  unsigned int v7 = (v6 ^ 0xAA0000A0) & (16 * ((v5 ^ 0xC0800000) & (4 * v4) ^ v4)) ^ (v5 ^ 0xC0800000) & (4 * v4) ^ v4;
  unsigned int v8 = ((16 * (v6 ^ 0x40C40803)) ^ 0xAC408AB0) & (v6 ^ 0x40C40803) ^ (16 * (v6 ^ 0x40C40803)) & 0xEAC408A0;
  unsigned int v9 = v7 ^ 0xEAC408AB ^ (v8 ^ 0xA8400800) & (v7 << 8);
  unsigned int v10 = (v2 + 1357734545) ^ (2
                           * ((v9 << 16) & 0x6AC40000 ^ v9 ^ ((v9 << 16) ^ 0x8AB0000) & (((v8 ^ 0x4284000B) << 8) & 0xEAC40000 ^ 0x2AC40000 ^ (((v8 ^ 0x4284000B) << 8) ^ 0x44080000) & (v8 ^ 0x4284000B))));
  BOOL v12 = ((2 * (v10 & 0xF ^ 0x14144808)) | 0xBBAA1134) - (v10 & 0xF ^ 0x14144808) != -1483323083 || v10 == 1805290553;
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 ^ 5 ^ ((a1 + 56) | 2)) * v12) ^ a1)))();
}

uint64_t sub_214D0EC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 ^ 0x21) + 3) * (&a9 == (uint64_t *)-1072)) | v9)))();
}

uint64_t sub_214D0ECB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  STACK[0x380] = v47;
  STACK[0x378] = v48;
  if (v47) {
    BOOL v56 = v48 == 0;
  }
  else {
    BOOL v56 = 1;
  }
  int v57 = !v56;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((v57 * (((v45 ^ 0x1B) - 4) ^ 4)) ^ v45)))(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_214D0ED28()
{
  LODWORD(STACK[0x408]) = v4 >> 3;
  unsigned int v5 = (v4 >> 3) ^ 0xD735187;
  LODWORD(STACK[0x404]) = v5;
  uint64_t v6 = v1[((v0 + 60) ^ 0xA88D423B) % v5];
  unint64_t v7 = ((((v4 >> 3) ^ 0xFA7DD71E757E83ALL) - 0x7C853498ECDBE7DDLL) ^ (((v4 >> 3) ^ 0xBC7D8232869CD75)
                                                                    - 0x78E531CA23E5C292) ^ (((v4 >> 3) ^ 0x4600552C24D74C8)
                                                                                             - 0x7742ECBBC9C17B2FLL))
     + 0x7322E9E984482D8FLL;
  if (v7 < 0x7D48CF2F != (unint64_t)(v6 + 3030306715) < 0x7D48CF2F) {
    BOOL v8 = v7 < 0x7D48CF2F;
  }
  else {
    BOOL v8 = v6 + 3030306715 < v7;
  }
  unint64_t v9 = (v4 >> 3) ^ 0xD735187;
  int v10 = (v6
       - ((((v4 >> 3) ^ 0xF2ED58B59878CAE4) + 0x7E304EA36C0B3AFDLL) ^ (((v4 >> 3) ^ 0xB37863114FD9A27ELL)
                                                                       + 0x3FA57507BBAA5267) ^ (((v4 >> 3) ^ 0x41953BA4DAD2391DLL)
                                                                                                - 0x32B7D24DD15E36FALL))
       - 0x7322E9E8CFA95DF4)
      % v9;
  int v11 = (v10 ^ 0x67CF7DE7) - 1648521478 + ((2 * v10) & 0xF9EFBCE);
  if (v8) {
    int v11 = v6 + 1021513037;
  }
  unsigned int v12 = (v11 ^ 0xFB72EB1F) & (2 * (v11 & 0xFA72F31F)) ^ v11 & 0xFA72F31F;
  unsigned int v13 = ((2 * (v11 ^ 0xCFD72D19)) ^ 0x6B4BBC0C) & (v11 ^ 0xCFD72D19) ^ (2 * (v11 ^ 0xCFD72D19)) & 0x35A5DE06;
  int v14 = v13 ^ 0x14A44202;
  int v15 = (v13 ^ 0x21019C04) & (4 * v12) ^ v12;
  unsigned int v16 = ((4 * v14) ^ 0xD6977818) & v14 ^ (4 * v14) & 0x35A5DE00;
  int v17 = (v16 ^ 0x14855800) & (16 * v15) ^ v15;
  int v18 = ((16 * (v16 ^ 0x21208606)) ^ 0x5A5DE060) & (v16 ^ 0x21208606) ^ (16 * (v16 ^ 0x21208606)) & 0x35A5DE00;
  unint64_t v19 = v11 ^ (2
             * ((((v18 ^ 0x25A01E06) << 8) & 0x35A50000 ^ 0x25840000 ^ (((v18 ^ 0x25A01E06) << 8) ^ 0xA5DE0000) & (v18 ^ 0x25A01E06)) & (((v18 ^ 0x1005C000) & (v17 << 8) ^ v17) << 16) ^ (v18 ^ 0x1005C000) & (v17 << 8) ^ v17)) ^ 0x82819111F058D31DLL;
  unint64_t v20 = v1[(v1[(v1[(v19 - ((2 * v19) & 0x5012203D35393CCLL) - 0x1C1D4A741656361ALL) ^ 0x163249AE383E9E4] + 3855038535)
             % v9]
          + 3865674970)
         % v9]
      + 578455804;
  STACK[0x3F8] = v9;
  LODWORD(v20) = v20 % v9 - ((2 * (v20 % v9)) & 0x1737DBD2) + 1268510185;
  unsigned int v21 = (((v20 ^ 0x81F1505E) + 2113871245) ^ ((v20 ^ 0x77571436) - 1957078555) ^ ((v20 ^ 0xBD3DA981) + 1093919828))
      - 1494198759;
  BOOL v22 = v21 < 0x5E85F655;
  *int v2 = *v1 ^ 0x6D6D6D6D6D6D6D6DLL;
  if (v21 >= 0x5E85F655) {
    BOOL v22 = v21 > 0x5E85F656;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((15 * !v22) ^ (v0 + 60))))();
}

uint64_t sub_214D0F270@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>)
{
  unsigned int v6 = (v2 + 1350776877) & 0xAF7CC79D;
  unsigned int v7 = (((LODWORD(STACK[0x408]) ^ 0x819E62D0) + 727381173) ^ ((LODWORD(STACK[0x408]) ^ 0x14CF84FD) - 1106570598) ^ ((LODWORD(STACK[0x408]) ^ 0x9822B7AA) + 853942735))
     + v6
     + 1114879174;
  BOOL v8 = v7 < 0xEA2B7CAA;
  *(void *)(v4 + 8 * a2) = *(void *)(v3 + 8 * a2) ^ a1;
  if (v8 == a2 - 366248789 < 0xEA2B7CAA) {
    BOOL v8 = v7 > a2 - 366248789;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((53 * v8) | v6)))();
}

uint64_t sub_214D0F3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  STACK[0x390] = v6;
  if (((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
       + 10) & 0xE) != 0)
    uint64_t v8 = (*(unsigned char *)(a5
                   + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
        + 10) & 0xF;
  else {
    uint64_t v8 = 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((103 * (v8 != 1)) ^ (v5 - 29))))();
}

uint64_t sub_214D0F4F8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((99 * (v1 == 15)) ^ v0)))();
}

#error "214D114AC: call analysis failed (funcsize=1831)"

uint64_t sub_214D114B4@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v62 = v56 - 11;
  LODWORD(a50) = LODWORD(STACK[0x330]) ^ LODWORD(STACK[0x3E8]) ^ (LODWORD(STACK[0x2E0])
                                                                + a2
                                                                + 295089407
                                                                + (LODWORD(STACK[0x3D4]) ^ LODWORD(STACK[0x200]) ^ (a6 + v60)));
  uint64_t v63 = (((LODWORD(STACK[0x408]) ^ 0xC5E51CD5) + 1864469170) ^ ((LODWORD(STACK[0x408]) ^ 0x32CC1792) - 1744272905) ^ (((v56 - 94741882) ^ LODWORD(STACK[0x408])) + 1352584357))
      + 1916659118;
  BOOL v64 = v63 < 0x19F5AD92;
  unint64_t v65 = 0x418B018541479FA3
      * (((*(void *)(STACK[0x390] + 8 * v58) + (*(void *)(STACK[0x390] + 8 * v58) ^ 0x9292929292929292) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + *(void *)(STACK[0x390] + 8 * v58));
  unint64_t v66 = (v65 ^ v59) + v58 - (((v65 ^ v59) + v58) >> 32);
  unint64_t v67 = v66 - (v66 >> ((v56 - 47) ^ 0x1Bu)) - ((v66 - (v66 >> ((v56 - 47) ^ 0x1Bu))) >> 8);
  int v68 = (v67 + a1) ^ a4;
  unint64_t v69 = ((v67 + v57) ^ v65) + v58 - ((((v67 + v57) ^ v65) + v58) >> 32);
  unint64_t v70 = v69 - (v69 >> 16) - ((v69 - (v69 >> 16)) >> 8);
  unint64_t v71 = ((v70 + v57) ^ v65) + v58 - ((((v70 + v57) ^ v65) + v58) >> 32);
  uint64_t v72 = v68 ^ (v70 + a1) ^ (v71
                                          - (v71 >> 16)
                                          - ((v71 - (v71 >> 16)) >> 8)
                                          + a1);
  unsigned int v73 = v58 + 1;
  uint64_t v74 = v64 ^ (v73 >= 0xE60A526E);
  if (!v74) {
    BOOL v64 = v73 + 435531154 < v63;
  }
  uint64_t v75 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((21 * v64) ^ v62));
  HIDWORD(a45) = LODWORD(STACK[0x348]) ^ 0x2AE252BD;
  return v75(a1, v75, 0x418B018541479FA3, v74, v63, a3, v72, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_214D116A4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                    + 3) & 0xF))
       + 1) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                     + 3) & 0xF))
        + 1) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * ((25 * (v4 == 1)) ^ a2)))(a1, (a2 - 8));
}

uint64_t sub_214D11C70(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 | (4 * (v2 != 15)))))();
}

uint64_t sub_214D11D08(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v68 = (a2 - 2) | 0x18;
  unsigned int v69 = (a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13) + (((a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13)) >> 5);
  unsigned int v70 = (v68 ^ 0xF9901316) + v69 - (((v68 ^ 0xF9901316) + v69) >> 10);
  unsigned int v71 = v70 - (v70 >> 2);
  int v72 = v69 ^ v62;
  unsigned int v73 = v71 ^ 0xF30576F9;
  int v74 = v71 ^ v65;
  unsigned int v75 = v73 + (v73 >> 14) - ((v73 + (v73 >> 14)) >> 2);
  unsigned int v76 = v75 + 511487013 + ((v75 + 511487013) >> 15) + ((v75 + 511487013 + ((v75 + 511487013) >> 15)) >> 3);
  unsigned int v77 = (v72 ^ -v72 ^ (v76 - (v76 ^ v72))) + v76;
  unsigned int v78 = (v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10) + (((v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10)) >> 7);
  int v79 = v74 ^ v78;
  unsigned int v80 = v78 - 787086048 - ((v78 - 787086048) >> 9) + ((v78 - 787086048 - ((v78 - 787086048) >> 9)) >> 5);
  unsigned int v81 = v80 - 1168002143 - ((v80 - 1168002143) >> 14) + ((v80 - 1168002143 - ((v80 - 1168002143) >> 14)) >> 4);
  int v82 = v81 ^ v77;
  unsigned int v83 = v81 - 879085134 + ((v81 - 879085134) >> 10) - ((v81 - 879085134 + ((v81 - 879085134) >> 10)) >> 5);
  unsigned int v84 = v79 ^ v83;
  unsigned int v85 = v82 ^ 2 | v82 & 0x9A38B5A8;
  unsigned int v86 = v75 ^ v64 ^ v80 ^ (v83
                         + 1300749569
                         - ((v83 + 1300749569) >> 9)
                         - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4));
  unint64_t v87 = (((v75 ^ v64 ^ v80 ^ (v83
                                             + 1
                                             - ((v83 + 1300749569) >> 9)
                                             - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4))) ^ 4)
       + 1) & 7;
  int v88 = v86 & 7 ^ 3;
  LODWORD(STACK[0x354]) = v88;
  BOOL v89 = v88 == 0;
  if (v88) {
    int v90 = 255;
  }
  else {
    int v90 = 0;
  }
  STACK[0x2A8] = v87;
  int v91 = v90 << v87;
  int v92 = v91;
  int v93 = 16843009 * v91;
  if (v89) {
    unsigned __int8 v94 = 0;
  }
  else {
    unsigned __int8 v94 = ~(_BYTE)v91;
  }
  uint64_t v95 = (~v93 - v93) ^ 0xFFFFFFFE;
  uint64_t v96 = (1929379840 * v92) & v84;
  uint64_t v97 = v67[0xB4C2D96D % LODWORD(STACK[0x404])];
  LODWORD(STACK[0x328]) = v84;
  LODWORD(v97) = ((v67[((v67[((v67[((v97 ^ 0x6D6D6D6D6D6D6D6DuLL) + 2986301921u) % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                            + 2923655298u)
                           % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2008708959)
                     % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                + 3811120295u)
               % STACK[0x3F8];
  int v98 = 16843009
      * (v84 ^ 0x88 ^ ((unsigned __int16)(v84 ^ 0x5B88) >> 8) ^ ((v84 ^ 0x74325B88) >> 16) ^ HIBYTE(v84) ^ 0x71);
  LODWORD(STACK[0x3E0]) = (16843009
                         * (v85 ^ 0xBB ^ ((unsigned __int16)(v85 ^ 0x2BB) >> 8) ^ ((v85 ^ 0x247F02BB) >> 16) ^ HIBYTE(v85) ^ 0x48)) ^ 0x69696969 ^ v98;
  uint64_t v99 = (v97 - ((2 * v97) & 0xA49F8CA) - 1524302747) ^ 0xA524FC65;
  LODWORD(STACK[0x250]) = v98 ^ 0x5050505;
  int v100 = LODWORD(STACK[0x318]) ^ 0x14BE8117;
  LODWORD(STACK[0x40C]) = v85;
  LODWORD(STACK[0x314]) = v85 & 0xFFFFFF01;
  LODWORD(STACK[0x3EC]) = v86;
  BOOL v101 = v99 > 0x1AE6B61D;
  uint64_t v102 = 0x418B018541479FA3 * (*v67 ^ 0x6D6D6D6D6D6D6D6DLL);
  uint64_t v103 = (v102 ^ 0x177943424141AE0BLL)
       - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
       - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)
       - (((v102 ^ 0x177943424141AE0BLL)
         - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
         - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)) >> (((v68 - 8) | 0x20u) - 41))
       + v63;
  int v104 = v103 ^ v100;
  uint64_t v105 = (v103 ^ v102)
       - ((v103 ^ (unint64_t)v102) >> 32)
       - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v103 ^ v102)
         - ((v103 ^ (unint64_t)v102) >> 32)
         - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  int v106 = v104 ^ v105;
  uint64_t v107 = (v105 ^ v102)
       - ((v105 ^ (unint64_t)v102) >> 32)
       - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v105 ^ v102)
         - ((v105 ^ (unint64_t)v102) >> 32)
         - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  uint64_t v108 = v106 ^ v107;
  if (v99 <= 0x1AE6B61D) {
    BOOL v101 = (v99 - 451327518) > 0xE51949E3;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * ((93 * v101) ^ v68)))(a1, v108, v96, v99, v107, 0x6D6D6D6D6D6D6D6DLL, v95, (v85 ^ 2u) & v94, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_214D12130()
{
}

uint64_t sub_214D12138@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  LODWORD(STACK[0x334]) = (a6 + a8) ^ a7;
  unsigned int v12 = (((LODWORD(STACK[0x408]) ^ 0xB3C2264A) + 419868719) ^ ((LODWORD(STACK[0x408]) ^ 0x11E19BDF) - 1155199556) ^ (((v10 - 1353651231) ^ LODWORD(STACK[0x408])) + 93616759))
      - 340330973;
  BOOL v13 = v12 < 0x936EBE07;
  uint64_t v14 = 0x418B018541479FA3 * ((17 * ((v10 + 20) ^ 0x47u)) ^ (a5 - 30) ^ *(void *)(STACK[0x390] + 8 * v8));
  unint64_t v15 = (v14 ^ a4) + v8 - (((v14 ^ a4) + (unint64_t)v8) >> 32);
  unint64_t v16 = v15 - (v15 >> 16) - ((v15 - (v15 >> 16)) >> 8);
  unint64_t v17 = ((v16 + v9) ^ v14) + v8 - ((((v16 + v9) ^ v14) + v8) >> 32);
  unint64_t v18 = v17 - (v17 >> 16) - ((v17 - (v17 >> 16)) >> 8);
  unint64_t v19 = ((v18 + v9) ^ v14) + v8 - ((((v18 + v9) ^ v14) + v8) >> 32);
  unint64_t v20 = v19 - (v19 >> 16) - ((v19 - (v19 >> 16)) >> 8);
  uint64_t v21 = (v16 + v9) ^ a2 ^ (v18 + v9) ^ ((v9 & (2
                                                                                           * (v20 + 1238975257)))
                                                                      + ((v20 + 1238975257) ^ 0x49D94319));
  if (v13 == v8 - 1821458936 < 0x936EBE07) {
    BOOL v13 = v12 > v8 - 1821458936;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v11
                                                                                + 8 * ((v13 | (2 * v13)) ^ (v10 + 20))))(a1, v21, a3, 0x89751B1549D94319);
}

uint64_t sub_214D122E0()
{
  LODWORD(STACK[0x24C]) = v0 ^ 0x6C6C6C6C;
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                    + 9) & 0xF))
       + 7) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                     + 9) & 0xF))
        + 7) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((39 * (v4 != 1)) ^ (v1 - 1585224797) & 0x5E7C9C3Fu)))(1236720864);
}

void sub_214D125F4()
{
}

uint64_t sub_214D125FC@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  STACK[0x410] = 1302115035;
  LODWORD(STACK[0x29C]) = a1 ^ a3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 == 15) | (16 * (v3 == 15)) | (a2 + 69889606))))();
}

void sub_214D12788()
{
}

#error "214D12F9C: call analysis failed (funcsize=450)"

uint64_t sub_214D12FA4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = (a3 - 42) | 0x18;
  LODWORD(STACK[0x330]) = a68 ^ a48;
  LODWORD(STACK[0x21C]) ^= LODWORD(STACK[0x300]) ^ STACK[0x348] ^ (STACK[0x2A8] | (STACK[0x348] << 6));
  LODWORD(STACK[0x210]) ^= a50 ^ HIDWORD(a50) ^ a1 ^ LODWORD(STACK[0x208]) ^ (HIDWORD(a48) << (((a3 - 42) | 0x18) - 53));
  LODWORD(STACK[0x300]) = a69 ^ a49 ^ v74 & STACK[0x2F8] ^ 0x184832E0;
  unsigned int v77 = (((LODWORD(STACK[0x408]) ^ 0xE1D4BBA2) + 1259351495) ^ ((LODWORD(STACK[0x408]) ^ 0x74969F81) - 565048858) ^ ((LODWORD(STACK[0x408]) ^ 0x983175A4) + 854975425))
      - 204021315;
  LODWORD(STACK[0x208]) = LODWORD(STACK[0x2FC]) ^ (8 * HIDWORD(a49));
  BOOL v78 = v77 < 0x9B8EA9A1;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v71 + 8 * a7) ^ v75);
  unint64_t v80 = (v79 ^ v69) + a7 - (((v79 ^ v69) + (unint64_t)a7) >> 32);
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> ((v76 + 2) ^ 0x33u)) + v70;
  unint64_t v82 = (v81 ^ v79) + a7 - (((v81 ^ v79) + (unint64_t)a7) >> 32);
  unint64_t v83 = v82 - (v82 >> 16) - ((v82 - (v82 >> 16)) >> 8);
  uint64_t v84 = v73 & ((v83 + a4) >> 1);
  unint64_t v85 = ((v83 + v70) ^ v79) + a7 - ((((v83 + v70) ^ v79) + a7) >> 32);
  uint64_t v86 = a7 + 1;
  uint64_t v87 = v78 ^ ((v86 - 1685149279) < 0x9B8EA9A1);
  if (!v87) {
    BOOL v78 = v77 > (int)v86 - 1685149279;
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8 * ((97 * v78) ^ v76)))(v85 - (v85 >> 16) - ((v85 - (v85 >> 16)) >> 8), 2609818017, (v76 + 2), a4, v87, v84, v86, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_214D13254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  LODWORD(a58) = a58 + LODWORD(STACK[0x308]);
  LODWORD(STACK[0x2FC]) = 16 * v63;
  LODWORD(STACK[0x200]) ^= HIDWORD(a55) ^ a51 ^ HIDWORD(a53);
  LODWORD(STACK[0x308]) = a54 + LODWORD(STACK[0x30C]);
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x3A0]) ^ 0xED35EB3F ^ (2093737731 * HIDWORD(a51));
  unint64_t v67 = a1
      - 0x373B377CD11039CBLL
      + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)
      + ((a1 - 0x373B377CD11039CBLL + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)) >> 11);
  uint64_t v68 = (v67 >> 7) + v67 - 2 * (v67 >> 7);
  unint64_t v69 = v68
      - 0x13AFA5FA8FB17A6
      + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)
      - ((v68 - 0x13AFA5FA8FB17A6 + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)) >> 8);
  unint64_t v70 = v69 + (v69 >> 6);
  unint64_t v71 = v70
      + 0x47CBE9EA4DE0F1B7
      - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)
      + ((v70 + 0x47CBE9EA4DE0F1B7 - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)) >> 8);
  unint64_t v72 = v71
      + (v71 >> 7)
      - 0x25953151116B048ALL
      + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)
      - ((v71 + (v71 >> 7) - 0x25953151116B048ALL + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)) >> 14);
  unint64_t v73 = v72
      - (v72 >> 7)
      - 0x10BF2422B96631C1
      - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)
      + ((v72 - (v72 >> 7) - 0x10BF2422B96631C1 - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)) >> 8);
  unint64_t v74 = v73 + (v73 >> 8);
  unint64_t v75 = (v74 ^ 0xF929F7F6E1EC1FCELL)
      + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)
      + (((v74 ^ 0xF929F7F6E1EC1FCELL) + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)) >> 14);
  unint64_t v76 = v75
      + (v75 >> 6)
      - 0x70FE5FCAA42AEA45
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45 - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)) >> 13);
  unint64_t v77 = ((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905)
      - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)
      - ((((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)) >> 11);
  int v78 = v74 ^ v70 ^ v62 ^ ((v74 ^ v70) >> 1) & 0x55DF6EBA ^ v65 & ((v77
                                                                                              + (v77 >> 4)) >> 1) ^ (v77 + (v77 >> 4));
  if (((v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xE) != 0) {
    uint64_t v79 = (v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xF;
  }
  else {
    uint64_t v79 = 1;
  }
  unsigned int v80 = *v66 * ((a3 ^ 0xFBD591FD) + 1973706621);
  unint64_t v81 = (unint64_t)((v80 ^ 0x19226648) + ((v80 ^ 0x19226648) >> 16)) >> 8;
  uint64_t v82 = (v80 ^ 0x19226648) - 651057517 + ((v80 ^ 0x19226648) >> 16) + v81;
  int v83 = (v80 ^ 0x19226648) - 1302115034 + ((v80 ^ 0x19226648) >> 16) + v81;
  unint64_t v84 = (unint64_t)((v83 ^ v80) + ((v83 ^ v80) >> 16)) >> 8;
  unsigned int v85 = (v83 ^ v80) - 651057517 + ((v83 ^ v80) >> 16) + v84;
  uint64_t v86 = ((v83 ^ v80) - 1302115034 + ((v83 ^ v80) >> 16) + v84) ^ v80;
  unint64_t v87 = (unint64_t)v86 >> 16;
  unint64_t v88 = (unint64_t)(v86 + WORD1(v86)) >> 8;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)(((2 * (v79 == 1)) | (4 * (v79 == 1))) ^ a3)))(v86, 0, a3, a4, (v86 - 1302115034 + v87 + v88), (v85 >> 1) & 0x55DF6EBA, v82 ^ v78 ^ (v82 >> 1) & 0x55DF6EBA ^ v85 ^ (v85 >> 1) & 0x55DF6EBA ^ (v86 - 651057517 + v87 + v88) ^ ((v86 - 651057517 + v87 + v88) >> 1) & 0x55DF6EBA, v82, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_214D13618@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3A0] = v69;
  LODWORD(STACK[0x32C]) = a65 ^ ~HIDWORD(a53);
  LODWORD(STACK[0x2F8]) = a54 ^ LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x310]) ^= a66;
  int v72 = 1903817027 * *(unsigned __int8 *)(v70 + a5);
  unsigned int v73 = v72 ^ (v71 + a1 + ((a1 + a2) >> 16) + ((a1 + a2 + ((a1 + a2) >> 16)) >> 8) + v66 - 1);
  uint64_t v74 = (a5 - 651057517);
  unsigned int v75 = v74 + v73 + ((v73 + a5) >> 16) + ((v73 + a5 + ((v73 + a5) >> 16)) >> 8);
  unsigned int v76 = ((2 * v75) & 0xB2634D26) + (v75 ^ 0xD931A693);
  unint64_t v77 = (unint64_t)((v76 ^ v72) + a5 + (((v76 ^ v72) + a5) >> 16)) >> 8;
  unsigned int v78 = v74 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77;
  LODWORD(v77) = (a5 - 1302115034 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77) ^ v72;
  unint64_t v79 = (v77 + a5);
  unint64_t v80 = v79 >> 16;
  unint64_t v81 = (unint64_t)(v79 + WORD1(v79)) >> 8;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((a5 != 15) | (16 * (a5 != 15)) | (v68 + 69889598))))((a5 - 1302115034 + v77 + v80 + v81), 1302115034, -651057517, a3, 3 * (v68 ^ 0xFBD591D7), v80, v75 ^ a4 ^ v67 & (v75 >> 1) ^ v78 ^ v67 & (v78 >> 1) ^ (v74 + v77 + v80 + v81) ^ v67 & ((v74 + v77 + v80 + v81) >> 1), v74, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_214D1383C()
{
}

uint64_t sub_214D13854@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (a3 + ((v67 + v66) >> 16) + v67 + ((v67 + v66 + ((v67 + v66) >> 16)) >> 8) - a1) ^ 0xCF39C5D0;
  int v70 = ((*(void *)(STACK[0x390]
                    + 8
                    * (((*(void *)(STACK[0x390]
                                   + 8
                                   * (((*(void *)(STACK[0x390]
                                                  + 8
                                                  * (((*(void *)(STACK[0x390]
                                                                 + 8 * (0x791DF2FAu % LODWORD(STACK[0x404]))) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                                    + 2126161460)
                                                   % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                     + 2993841644u)
                                    % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2220923829u)
                     % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 1951303181)
      % STACK[0x3F8];
  LODWORD(STACK[0x3F8]) = ((v69 - (v69 >> 13)) >> (((a2 - 117) & 0x47) - 1)) + v69 - (v69 >> 13);
  unsigned int v71 = (v70 - ((2 * v70) & 0x3C890E0C) - 1102805242) ^ 0xBE448706;
  int v72 = STACK[0x318];
  LODWORD(STACK[0x404]) = a65 ^ LODWORD(STACK[0x3F0]);
  unsigned int v73 = v72 ^ LODWORD(STACK[0x3EC]) ^ 0x5879B4F0;
  LODWORD(STACK[0x318]) = v73;
  LODWORD(STACK[0x324]) = v65 & (v73 >> 1);
  BOOL v74 = v71 > 0x7AF340BF;
  if (v71 <= 0x7AF340BF) {
    BOOL v74 = v71 - 2062762176 > 0x850CBF41;
  }
  return (*(uint64_t (**)(uint64_t))(v68 + 8 * (int)((53 * v74) ^ (a2 + 1562391435) & 0xA2DFCC47)))(3141127236);
}

uint64_t sub_214D13C68@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v75 = (a2 + 13);
  LODWORD(STACK[0x3F8]) ^= a66 ^ HIDWORD(a44) ^ a65 ^ HIDWORD(a54) ^ a52 ^ v73 ^ HIDWORD(a46) ^ a46 ^ HIDWORD(a45) & v68 ^ 0x7BE8B087;
  unsigned int v76 = (((LODWORD(STACK[0x408]) ^ 0xA0D707E7) + 169054596) ^ ((LODWORD(STACK[0x408]) ^ 0x52B52E1C) - 126764935) ^ ((LODWORD(STACK[0x408]) ^ 0xFF11787C) + 1440083453 + v75))
      - 862621162;
  int v77 = v69 + a4;
  BOOL v78 = v76 < 0x744D39FA;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v74 + 8 * v69) ^ 0x6D6D6D6D6D6D6D6DLL);
  unint64_t v80 = (v79 ^ v70) + v69 - (((v79 ^ v70) + (unint64_t)v69) >> (((a2 + 1) | 4u) + 12));
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> 8) + v67;
  int v82 = v66 & (v81 >> 1) ^ v81 ^ v72;
  unint64_t v83 = (v81 ^ v79) + v69 - (((v81 ^ v79) + (unint64_t)v69) >> 32);
  uint64_t v84 = v83 - (v83 >> 16) - ((v83 - (v83 >> 16)) >> 8) + v67;
  unsigned int v85 = v66 & (v84 >> 1) ^ v84;
  uint64_t v86 = v78 ^ ((v77 + 797378118) < 0x744D39FA);
  if (!v86) {
    BOOL v78 = v76 > v77 + 797378118;
  }
  unint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * (int)((57 * v78) ^ v75));
  HIDWORD(a45) = a45 & v68;
  return v87(57, v75, 1951218170, a1, v87, v82 ^ v85, a3, v86, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_214D13ED8()
{
}

uint64_t sub_214D13EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,int a52,int a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v64 = LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x328]) ^ a7;
  LODWORD(STACK[0x230]) = a62 ^ LODWORD(STACK[0x3DC]) ^ 0xF7F7F7F7;
  LODWORD(STACK[0x408]) = v64 ^ a56 ^ a53 ^ a52 ^ a50 ^ 0xA6766605;
  if (((*(unsigned char *)(STACK[0x398]
                  + ((*(unsigned char *)(STACK[0x398]
                               + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                    + 6) & 0xF))
       + 12) & 0xE) != 0)
    uint64_t v65 = (*(unsigned char *)(STACK[0x398]
                    + ((*(unsigned char *)(STACK[0x398]
                                 + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                      + 6) & 0xF))
         + 12) & 0xF;
  else {
    uint64_t v65 = 1;
  }
  return (*(uint64_t (**)(void))(v62 + 8 * ((69 * (v65 == 1)) ^ v63)))();
}

uint64_t sub_214D14270@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v63 = 1903817027 * *(unsigned __int8 *)(v60 + v58);
  unsigned int v64 = v63 ^ (v62
             + a4
             + ((a4 + v57) >> 16)
             + ((a4 + v57 + ((a4 + v57) >> 16)) >> 8)
             + a1
             - 1);
  int v65 = v58 + v62;
  unsigned int v66 = v58
      + v62
      + v64
      + ((v64 + v58) >> 16)
      + ((v64 + v58 + ((v64 + v58) >> 16)) >> 8);
  unsigned int v67 = v58
      + v62
      + (v66 ^ v63)
      + (((v66 ^ v63) + v58) >> 16)
      + (((v66 ^ v63) + v58 + (((v66 ^ v63) + v58) >> 16)) >> 8);
  int v68 = v67 ^ v63;
  unint64_t v69 = (v67 ^ v63) + v58;
  unint64_t v70 = v69 >> 16;
  unint64_t v71 = (unint64_t)(v69 + WORD1(v69)) >> 8;
  return (*(uint64_t (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((74 * (v58 == 15)) ^ (v59 + 69889625))))((v65 + v68 + v70 + v71), v58, 74, STACK[0x410] - 1, a2, v60, v66 ^ a3 ^ a2 & (v66 >> 1) ^ v67 ^ a2 & (v67 >> 1) ^ (v65+ v68+ v70+ v71) ^ a2 & ((v65 + v68 + v70 + v71) >> 1), a2 & ((v58 + v61 + v68 + v70 + v71) >> 1), a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_214D1443C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  STACK[0x410] = a4;
  JUMPOUT(0x214D142BCLL);
}

uint64_t sub_214D14458@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = (v65 + ((a5 + a1) >> 16) + a5 + ((a5 + a1 + ((a5 + a1) >> 16)) >> 8) - a2) ^ 0xCF39C5D0;
  unsigned int v69 = v68 - (v68 >> 13) + ((v68 - (v68 >> 13)) >> 5);
  unsigned int v70 = v69 - 107998449 - ((v69 - 107998449) >> 10) - ((v69 - 107998449 - ((v69 - 107998449) >> 10)) >> 2);
  unsigned int v71 = (v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14) - (((v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14)) >> 2);
  unsigned int v72 = v71 + 511487013 + ((v71 + 511487013) >> 15) + ((v71 + 511487013 + ((v71 + 511487013) >> 15)) >> 3);
  uint64_t v73 = (v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10) + (((v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10)) >> 7);
  int v74 = v73
      - 787086048
      - ((v73 - 787086048) >> 9)
      + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5);
  unsigned int v75 = v74
      - 1168002143
      - ((v74 - 1168002143) >> 14)
      + ((v74 - 1168002143 - ((v74 - 1168002143) >> 14)) >> 4);
  unsigned int v76 = v75 - 879085134 + ((v75 - 879085134) >> 10) - ((v75 - 879085134 + ((v75 - 879085134) >> 10)) >> 5);
  LODWORD(a51) = a3 & (LODWORD(STACK[0x310]) >> 1);
  HIDWORD(a50) = a3 & (HIDWORD(a52) >> 1);
  LODWORD(a56) = v70;
  HIDWORD(v88) = (((v73 ^ 0x903F3380) + (v73 | 0x6FC0CC7F) + 1) ^ v70 & 0x6FC0CC7E) >> 1;
  int v77 = a3 & (v75 >> 1) ^ v75;
  LODWORD(a53) = v66 ^ v69 ^ v72 ^ a3 & ((v72 ^ v69) >> 1);
  HIDWORD(a52) = v77 ^ a53;
  LODWORD(v88) = -v77;
  HIDWORD(v87) = v76 & 0x6FC0CC7F;
  LODWORD(v87) = !(((_BYTE)v73
                  + 32
                  - ((v73 - 787086048) >> 9)
                  + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5)) & 1);
  int v78 = STACK[0x318];
  LODWORD(STACK[0x410]) = v71;
  LODWORD(STACK[0x318]) = v74;
  HIDWORD(a55) = v76 + 1300749569 - ((v76 + 1300749569) >> 9) - ((v76 + 1300749569 - ((v76 + 1300749569) >> 9)) >> 4);
  HIDWORD(a46) = (v74 ^ v71 ^ v78 ^ HIDWORD(a55)) >> 1;
  uint64_t v79 = (LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x24C]));
  int v80 = STACK[0x328];
  unsigned int v81 = (v67 + 27) ^ 0x9B67EC7F ^ *((_DWORD *)*(&off_26422BCC0 + (v67 ^ 0x12)) + 232);
  LODWORD(v82) = __ROR4__(0, 20) ^ 0xAE6F4F2C;
  HIDWORD(v82) = v82;
  uint64_t v83 = LODWORD(STACK[0x38C]);
  uint64_t v84 = 4 * (LOBYTE(STACK[0x250]) ^ LOBYTE(STACK[0x24C]));
  *(_DWORD *)(STACK[0x378] + v84) = a65 ^ LODWORD(STACK[0x314]) ^ 0xE00D27BF ^ ((((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x334]) >> STACK[0x348]) | (((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x32C]) << v83));
  uint64_t v85 = LODWORD(STACK[0x40C]);
  *(_DWORD *)(STACK[0x380] + v84) = v85 ^ v80 ^ 0x8CDA8304 ^ (unsigned __int16)(((v82 >> 12) ^ 0xE6A3) - 7298) ^ *((unsigned __int16 *)*(&off_26422BCC0 + (v67 ^ 0x1C)) + ((v82 >> 12) ^ 0xF2CAE6B1) - 6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * v67))(v73, v85, 59043, v83, a3, v79, a4, &off_26422BCC0, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           v87,
           v88,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_214D14744()
{
}

#error "214D192D8: call analysis failed (funcsize=4626)"

void sub_214D192DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,int a57,int a58,int a59)
{
  LODWORD(STACK[0x28C]) = a58 ^ 0xCEEAF932;
  LODWORD(STACK[0x288]) = a57 ^ 0x79C04953;
  LODWORD(STACK[0x280]) = a56 ^ 0x32A6819A;
  LODWORD(STACK[0x284]) = a59 ^ 0x84299AD3;
  JUMPOUT(0x214D163D0);
}

void sub_214D19398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  uint64_t v55 = 8 * (a54 + 54);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x380]);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x378]);
  JUMPOUT(0x214D19410);
}

char *sub_214D1944C(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_214D196A8()
{
  return MEMORY[0x270EEDBA0]();
}

uint64_t sub_214D196B8()
{
  return MEMORY[0x270EEDBF0]();
}

uint64_t sub_214D196C8()
{
  return MEMORY[0x270EEDBF8]();
}

uint64_t sub_214D196D8()
{
  return MEMORY[0x270EEDC10]();
}

uint64_t sub_214D196E8()
{
  return MEMORY[0x270EEDC48]();
}

uint64_t sub_214D196F8()
{
  return MEMORY[0x270EEDC50]();
}

uint64_t sub_214D19708()
{
  return MEMORY[0x270EEDC68]();
}

uint64_t sub_214D19718()
{
  return MEMORY[0x270EEDC80]();
}

uint64_t sub_214D19728()
{
  return MEMORY[0x270EEDC88]();
}

uint64_t sub_214D19738()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_214D19748()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_214D19758()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_214D19768()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_214D19778()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_214D19788()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_214D19798()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_214D197A8()
{
  return MEMORY[0x270EEE188]();
}

uint64_t sub_214D197B8()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_214D197C8()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_214D197D8()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_214D197E8()
{
  return MEMORY[0x270EEE4A0]();
}

uint64_t sub_214D197F8()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_214D19808()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_214D19818()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_214D19828()
{
  return MEMORY[0x270EEE548]();
}

uint64_t sub_214D19838()
{
  return MEMORY[0x270EEE5B8]();
}

uint64_t sub_214D19848()
{
  return MEMORY[0x270EEE5F8]();
}

uint64_t sub_214D19858()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_214D19868()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_214D19878()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_214D19888()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_214D19898()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_214D198A8()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_214D198B8()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_214D198C8()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_214D198D8()
{
  return MEMORY[0x270EEE828]();
}

uint64_t sub_214D198E8()
{
  return MEMORY[0x270EEE848]();
}

uint64_t sub_214D198F8()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_214D19908()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_214D19918()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_214D19928()
{
  return MEMORY[0x270EEF320]();
}

uint64_t sub_214D19938()
{
  return MEMORY[0x270EEF340]();
}

uint64_t sub_214D19948()
{
  return MEMORY[0x270EEF360]();
}

uint64_t sub_214D19958()
{
  return MEMORY[0x270EEF390]();
}

uint64_t sub_214D19968()
{
  return MEMORY[0x270EEF3B8]();
}

uint64_t sub_214D19978()
{
  return MEMORY[0x270EEF410]();
}

uint64_t sub_214D19988()
{
  return MEMORY[0x270EEF420]();
}

uint64_t sub_214D19998()
{
  return MEMORY[0x270EEF460]();
}

uint64_t sub_214D199A8()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_214D199B8()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_214D199C8()
{
  return MEMORY[0x270EEFBD8]();
}

uint64_t sub_214D199D8()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_214D199E8()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_214D199F8()
{
  return MEMORY[0x270EEFC70]();
}

uint64_t sub_214D19A08()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_214D19A18()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_214D19A28()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_214D19A38()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_214D19A48()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_214D19A58()
{
  return MEMORY[0x270EEFEB8]();
}

uint64_t sub_214D19A68()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_214D19A78()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_214D19A88()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_214D19A98()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_214D19AA8()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_214D19AB8()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_214D19AC8()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_214D19AD8()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_214D19AE8()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_214D19AF8()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_214D19B08()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_214D19B18()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_214D19B28()
{
  return MEMORY[0x270EF00D0]();
}

uint64_t sub_214D19B38()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_214D19B48()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_214D19B58()
{
  return MEMORY[0x270EF0168]();
}

uint64_t sub_214D19B68()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_214D19B78()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_214D19B88()
{
  return MEMORY[0x270EF0218]();
}

uint64_t sub_214D19B98()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_214D19BA8()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_214D19BB8()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_214D19BC8()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_214D19BD8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_214D19BE8()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_214D19BF8()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_214D19C08()
{
  return MEMORY[0x270EF09C8]();
}

uint64_t sub_214D19C18()
{
  return MEMORY[0x270EF09E0]();
}

uint64_t sub_214D19C28()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_214D19C38()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_214D19C48()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_214D19C58()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_214D19C68()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_214D19C78()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_214D19C88()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_214D19C98()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_214D19CA8()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_214D19CB8()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_214D19CC8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_214D19CD8()
{
  return MEMORY[0x270EF0D78]();
}

uint64_t sub_214D19CE8()
{
  return MEMORY[0x270EF0DB8]();
}

uint64_t sub_214D19CF8()
{
  return MEMORY[0x270EF0DD8]();
}

uint64_t sub_214D19D08()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_214D19D18()
{
  return MEMORY[0x270EF0F40]();
}

uint64_t sub_214D19D28()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_214D19D38()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_214D19D48()
{
  return MEMORY[0x270EF0F90]();
}

uint64_t sub_214D19D58()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_214D19D68()
{
  return MEMORY[0x270EF1008]();
}

uint64_t sub_214D19D78()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_214D19D88()
{
  return MEMORY[0x270EF1080]();
}

uint64_t sub_214D19D98()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_214D19DA8()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_214D19DB8()
{
  return MEMORY[0x270EF1378]();
}

uint64_t sub_214D19DC8()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_214D19DD8()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_214D19DE8()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_214D19DF8()
{
  return MEMORY[0x270EF1580]();
}

uint64_t sub_214D19E08()
{
  return MEMORY[0x270EF15A8]();
}

uint64_t sub_214D19E18()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_214D19E28()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_214D19E38()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_214D19E48()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_214D19E58()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_214D19E68()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_214D19E78()
{
  return MEMORY[0x270FA2C68]();
}

uint64_t sub_214D19E88()
{
  return MEMORY[0x270FA2C90]();
}

uint64_t sub_214D19E98()
{
  return MEMORY[0x270FA2C98]();
}

uint64_t sub_214D19EA8()
{
  return MEMORY[0x270FA2CC0]();
}

uint64_t sub_214D19EB8()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_214D19EC8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_214D19ED8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_214D19EE8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_214D19EF8()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_214D19F08()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_214D19F18()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_214D19F28()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_214D19F38()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_214D19F48()
{
  return MEMORY[0x270FA0A98]();
}

uint64_t sub_214D19F58()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_214D19F68()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_214D19F78()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_214D19F88()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_214D19F98()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_214D19FA8()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_214D19FB8()
{
  return MEMORY[0x270F9D0A0]();
}

uint64_t sub_214D19FC8()
{
  return MEMORY[0x270F9D0B8]();
}

uint64_t sub_214D19FD8()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_214D19FE8()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_214D19FF8()
{
  return MEMORY[0x270F9D3A8]();
}

uint64_t sub_214D1A008()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_214D1A018()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_214D1A028()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_214D1A038()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_214D1A048()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_214D1A058()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_214D1A068()
{
  return MEMORY[0x270EF1A18]();
}

uint64_t sub_214D1A078()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_214D1A088()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_214D1A098()
{
  return MEMORY[0x270EF1AB8]();
}

uint64_t sub_214D1A0A8()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_214D1A0B8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_214D1A0C8()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_214D1A0D8()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_214D1A0E8()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_214D1A0F8()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_214D1A108()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_214D1A118()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_214D1A128()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_214D1A138()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_214D1A148()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_214D1A168()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_214D1A178()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_214D1A188()
{
  return MEMORY[0x270F9D888]();
}

uint64_t sub_214D1A198()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_214D1A1A8()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_214D1A1B8()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_214D1A1C8()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_214D1A1D8()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_214D1A1E8()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_214D1A228()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_214D1A238()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_214D1A248()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_214D1A258()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_214D1A268()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_214D1A278()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_214D1A288()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_214D1A298()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_214D1A2A8()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_214D1A2B8()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_214D1A2C8()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_214D1A2D8()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_214D1A2E8()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_214D1A2F8()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_214D1A308()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_214D1A328()
{
  return MEMORY[0x270FA1EE8]();
}

uint64_t sub_214D1A338()
{
  return MEMORY[0x270FA1EF0]();
}

uint64_t sub_214D1A358()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_214D1A368()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_214D1A378()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_214D1A398()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_214D1A3A8()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_214D1A3C8()
{
  return MEMORY[0x270FA2040]();
}

uint64_t sub_214D1A3E8()
{
  return MEMORY[0x270FA2050]();
}

uint64_t sub_214D1A3F8()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_214D1A408()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_214D1A418()
{
  return MEMORY[0x270F9DDD8]();
}

uint64_t sub_214D1A428()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_214D1A438()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_214D1A448()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_214D1A458()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_214D1A468()
{
  return MEMORY[0x270EF1DA8]();
}

uint64_t sub_214D1A488()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_214D1A498()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_214D1A4A8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_214D1A4B8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_214D1A4C8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_214D1A4D8()
{
  return MEMORY[0x270FA0C08]();
}

uint64_t sub_214D1A4E8()
{
  return MEMORY[0x270FA0C38]();
}

uint64_t sub_214D1A4F8()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_214D1A508()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_214D1A518()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_214D1A528()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_214D1A538()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_214D1A548()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_214D1A558()
{
  return MEMORY[0x270FA0EA0]();
}

uint64_t sub_214D1A568()
{
  return MEMORY[0x270FA0EC0]();
}

uint64_t sub_214D1A578()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_214D1A588()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_214D1A598()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_214D1A5A8()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_214D1A5B8()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_214D1A5C8()
{
  return MEMORY[0x270F9E3B0]();
}

uint64_t sub_214D1A5D8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_214D1A5E8()
{
  return MEMORY[0x270F9E3D0]();
}

uint64_t sub_214D1A5F8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_214D1A608()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_214D1A618()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_214D1A628()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_214D1A638()
{
  return MEMORY[0x270EF24C0]();
}

uint64_t sub_214D1A648()
{
  return MEMORY[0x270EF2590]();
}

uint64_t sub_214D1A658()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_214D1A668()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_214D1A678()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_214D1A688()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_214D1A698()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_214D1A6A8()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_214D1A6B8()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_214D1A6C8()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_214D1A6D8()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_214D1A6E8()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_214D1A6F8()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_214D1A708()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_214D1A718()
{
  return MEMORY[0x270F9E8D8]();
}

uint64_t sub_214D1A728()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_214D1A738()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_214D1A748()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_214D1A758()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_214D1A768()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_214D1A778()
{
  return MEMORY[0x270F9E988]();
}

uint64_t sub_214D1A798()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_214D1A7A8()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_214D1A7B8()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_214D1A7C8()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_214D1A7D8()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_214D1A7E8()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_214D1A7F8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_214D1A808()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_214D1A818()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_214D1A828()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_214D1A848()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_214D1A858()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_214D1A868()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_214D1A878()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_214D1A888()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_214D1A898()
{
  return MEMORY[0x270FA2168]();
}

uint64_t sub_214D1A8A8()
{
  return MEMORY[0x270FA2180]();
}

uint64_t sub_214D1A8B8()
{
  return MEMORY[0x270FA2198]();
}

uint64_t sub_214D1A8C8()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_214D1A8D8()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_214D1A8E8()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_214D1A8F8()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_214D1A908()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_214D1A918()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_214D1A928()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_214D1A938()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_214D1A948()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_214D1A958()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_214D1A968()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_214D1A978()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_214D1A988()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_214D1A998()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_214D1A9B8()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_214D1A9C8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_214D1A9D8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_214D1A9E8()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_214D1A9F8()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_214D1AA08()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_214D1AA18()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_214D1AA28()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_214D1AA38()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_214D1AA48()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_214D1AA58()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_214D1AA68()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_214D1AA78()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_214D1AA88()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_214D1AA98()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_214D1AAA8()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_214D1AAB8()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_214D1AAC8()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_214D1AAD8()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_214D1AAE8()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_214D1AAF8()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_214D1AB08()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_214D1AB18()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_214D1AB28()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_214D1AB38()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_214D1AB48()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_214D1AB58()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_214D1AB68()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_214D1AB78()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_214D1AB98()
{
  return MEMORY[0x270F9F578]();
}

uint64_t sub_214D1ABA8()
{
  return MEMORY[0x270F9F5A0]();
}

uint64_t sub_214D1ABB8()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_214D1ABC8()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_214D1ABE8()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_214D1ABF8()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_214D1AC08()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_214D1AC28()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_214D1AC48()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_214D1AC58()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_214D1AC68()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_214D1AC88()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_214D1AC98()
{
  return MEMORY[0x270F9FB20]();
}

uint64_t sub_214D1ACA8()
{
  return MEMORY[0x270F9FB28]();
}

uint64_t sub_214D1ACB8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_214D1ACC8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_214D1ACD8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_214D1ACE8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_214D1ACF8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_214D1AD08()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_214D1AD18()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_214D1AD28()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_214D1AD38()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_214D1AD48()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_214D1AD58()
{
  return MEMORY[0x270F9FD58]();
}

uint64_t sub_214D1AD68()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_214D1AD78()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_214D1AD88()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_214D1AD98()
{
  return MEMORY[0x270F9FF68]();
}

uint64_t sub_214D1ADC8()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

uint64_t CCCryptorGCMOneshotEncrypt()
{
  return MEMORY[0x270ED7918]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x270ED7B28](data, *(void *)&len, md);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x270EE4808](theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x270EE4820](theData);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return (CFStringRef)MEMORY[0x270EE49A0](err);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x270F1B710]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x270F1B718]();
}

void CFRelease(CFTypeRef cf)
{
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x270F95FB8]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x270F4AE40]();
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return (SecAccessControlRef)MEMORY[0x270EFD650](allocator, protection, flags, error);
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x270EFD710](certificate);
}

uint64_t SecCertificateCopyExtensionValue()
{
  return MEMORY[0x270EFD730]();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return (SecKeyRef)MEMORY[0x270EFD758](certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x270EFD7E0](allocator, data);
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return (CFStringRef)MEMORY[0x270EFD8F0](*(void *)&status, reserved);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x270EFD980](query);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9B0](key, error);
}

CFDataRef SecKeyCopyKeyExchangeResult(SecKeyRef privateKey, SecKeyAlgorithm algorithm, SecKeyRef publicKey, CFDictionaryRef parameters, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9B8](privateKey, algorithm, publicKey, parameters, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x270EFD9D8](key);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA40](parameters, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x270EFDAC8](key, algorithm, signedData, signature, error);
}

uint64_t SecPolicyCreateMDLTerminalAuth()
{
  return MEMORY[0x270EFDB78]();
}

SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
{
  return (SecPolicyRef)MEMORY[0x270EFDB98](revocationFlags);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

SecKeyRef SecTrustCopyKey(SecTrustRef trust)
{
  return (SecKeyRef)MEMORY[0x270EFDD28](trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x270EFDD40](certificates, policies, trust);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x270EFDD60](trust, error);
}

OSStatus SecTrustGetTrustResult(SecTrustRef trust, SecTrustResultType *result)
{
  return MEMORY[0x270EFDD80](trust, result);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return MEMORY[0x270EFDDA8](trust, anchorCertificates);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x270FA0170]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x270FA0178]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t ccder_decode_len()
{
  return MEMORY[0x270ED8910]();
}

uint64_t ccder_decode_sequence_tl()
{
  return MEMORY[0x270ED8920]();
}

uint64_t ccder_decode_tag()
{
  return MEMORY[0x270ED8928]();
}

uint64_t ccder_encode_constructed_tl()
{
  return MEMORY[0x270ED8950]();
}

uint64_t ccder_encode_integer()
{
  return MEMORY[0x270ED8960]();
}

uint64_t ccder_sizeof()
{
  return MEMORY[0x270ED8980]();
}

uint64_t ccder_sizeof_integer()
{
  return MEMORY[0x270ED8998]();
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x270ED8EF8](*(void *)&__clock_id);
}

uint64_t container_system_group_path_for_identifier()
{
  return MEMORY[0x270ED90F0]();
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x270EDA4B8](__s, __smax, *(void *)&__c, __n);
}

int mlock(const void *a1, size_t a2)
{
  return MEMORY[0x270EDA590](a1, a2);
}

int munlock(const void *a1, size_t a2)
{
  return MEMORY[0x270EDA5E8](a1, a2);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x270F9A678](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x270EDAB10]();
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x270EDB6D8](__str, __endptr, *(void *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x270FA2400]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x270FA2418]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x270FA04B0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}