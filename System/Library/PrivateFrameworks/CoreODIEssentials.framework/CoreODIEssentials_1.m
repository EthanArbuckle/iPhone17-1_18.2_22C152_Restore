uint64_t sub_214BE27C0(uint64_t (*a1)(void **, void **))
{
  void *v1;
  void *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;

  v2 = v1;
  v4 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_214BE9C2C();
  }
  sub_214BE8B44(a1);
  return sub_214D1A858();
}

uint64_t sub_214BE2858()
{
  type metadata accessor for ODIDeviceInfo();
  swift_allocObject();
  uint64_t result = sub_214BE32DC();
  qword_26ACE4030 = result;
  return result;
}

uint64_t sub_214BE2894@<X0>(uint64_t *a1@<X8>)
{
  if (*(void *)(v1 + 192))
  {
    uint64_t v3 = *(void *)(v1 + 184);
    unint64_t v4 = *(void *)(v1 + 192);
  }
  else
  {
    *(_OWORD *)(v1 + 184) = xmmword_214D21390;
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xE100000000000000;
    uint64_t v3 = 45;
  }
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_214BE2928()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ODIDeviceInfo.DeviceInfoHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_214BE2970()
{
  v1[17] = v0;
  uint64_t v2 = sub_214D19CC8();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BE2A5C, v0, 0);
}

uint64_t sub_214BE2A5C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = *(void *)(v1 + 224);
  v0[21] = v2;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
    return v3(v2);
  }
  else
  {
    v5 = *(void **)(v1 + 128);
    v0[15] = 0;
    id v6 = objc_msgSend(v5, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 15);
    v7 = (void *)v0[15];
    if (v6)
    {
      v8 = v6;
      id v9 = v7;
      id v10 = objc_msgSend(v8, sel_uuid);

      sub_214D19CA8();
      v0[2] = v0;
      v0[7] = v0 + 16;
      v0[3] = sub_214BE2CF8;
      uint64_t v11 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_214BB7F78;
      v0[13] = &block_descriptor_64;
      v0[14] = v11;
      objc_msgSend(v5, sel_getSubscriptionInfo_, v0 + 10);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
    else
    {
      id v12 = v7;
      sub_214D199B8();

      swift_willThrow();
      swift_task_dealloc();
      v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
  }
}

uint64_t sub_214BE2CF8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 176) = v2;
  uint64_t v3 = *(void *)(v1 + 136);
  if (v2) {
    uint64_t v4 = sub_214BE30D4;
  }
  else {
    uint64_t v4 = sub_214BE2E44;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BE2E44()
{
  v21 = v0;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)v0[16];
  id v2 = objc_msgSend(v1, sel_subscriptionsInUse);

  uint64_t v3 = v0[20];
  if (v2)
  {
    sub_214B6A264(0, &qword_26ACE4390);
    unint64_t v4 = sub_214D1A268();

    uint64_t v5 = sub_214BE319C(v4);
    swift_bridgeObjectRelease();
    *(void *)(swift_task_alloc() + 16) = v3;
    if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
    {
      unint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v6 = (uint64_t)sub_214CDC484(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = v6;
    sub_214BE27C0(sub_214BEA1B4);
    uint64_t v10 = v0[19];
    uint64_t v9 = v0[20];
    uint64_t v12 = v0[17];
    uint64_t v11 = v0[18];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(void *)(v12 + 224) = v6;
    swift_retain();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  else
  {
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    sub_214BE2894(v16);
    uint64_t v17 = v16[0];
    uint64_t v18 = v16[1];
    v19[0] = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D33850, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
    uint64_t v6 = 0;
  }
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  v13 = (uint64_t (*)(uint64_t))v0[1];
  return v13(v6);
}

uint64_t sub_214BE30D4()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214BE319C(unint64_t a1)
{
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_214D1A948();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2166B0290](i, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      if (objc_msgSend(v5, sel_isSimHidden))
      {
      }
      else
      {
        sub_214D1A848();
        sub_214D1A878();
        sub_214D1A888();
        sub_214D1A858();
      }
    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_214BE32DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_214D1A508();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_214D19F38();
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v9 = sub_214D1A4F8();
  MEMORY[0x270FA5388](v9 - 8, v10);
  swift_defaultActor_initialize();
  sub_214B6A264(0, (unint64_t *)&qword_26ACE4370);
  sub_214D1A4E8();
  sub_214D19F28();
  uint64_t v11 = *MEMORY[0x263F8F130];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v6, v11, v2);
  *(void *)(v0 + 112) = sub_214D1A538();
  sub_214D1A4E8();
  sub_214D19F28();
  v12(v6, v11, v2);
  uint64_t v13 = sub_214D1A538();
  *(void *)(v1 + 120) = v13;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(unsigned char *)(v1 + 168) = 0;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(void *)(v1 + 224) = 0;
  *(void *)(v1 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F02D30]), sel_initWithQueue_, v13);
  return v1;
}

uint64_t sub_214BE354C(void **a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D870);
  MEMORY[0x270FA5388](v4 - 8, v5);
  v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_214D19CC8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v28 - v14;
  v16 = *a1;
  uint64_t v17 = *a2;
  id v18 = objc_msgSend(v16, sel_uuid);
  sub_214D19CA8();

  id v19 = objc_msgSend(v17, sel_uuid);
  sub_214D19CA8();

  int v20 = sub_214D19C98();
  if (((v20 ^ sub_214D19C98()) & 1) == 0)
  {
    int v20 = objc_msgSend(v16, sel_slotID) == (id)1;
    if (v20 != (objc_msgSend(v17, sel_slotID) != (id)1))
    {
      uint64_t v32 = sub_214D19C88();
      uint64_t v33 = v21;
      uint64_t v30 = sub_214D19C88();
      uint64_t v31 = v22;
      uint64_t v23 = sub_214D19D98();
      uint64_t v24 = (uint64_t)v29;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
      sub_214BBD7FC();
      uint64_t v25 = sub_214D1A648();
      sub_214B59CE0(v24, &qword_26784D870);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v20) = v25 == -1;
    }
  }
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v12, v7);
  v26(v15, v7);
  return v20 & 1;
}

void *sub_214BE3824(char a1)
{
  uint64_t v3 = *(void *)(v1 + 200);
  if (!v3 || (uint64_t v26 = *(void *)(v3 + 16)) == 0)
  {
    sub_214BE2894(&v30);
    uint64_t v28 = v30;
    unint64_t v29 = v31;
    LOBYTE(v27[0]) = 5;
    unint64_t v8 = 0x8000000214D334A0;
    uint64_t v9 = 0xD00000000000001ALL;
LABEL_8:
    CoreODILogger.info(_:category:)(v9, v8, v27);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1)
  {
    uint64_t v3 = *(void *)(v1 + 216);
    if (v3)
    {
      uint64_t v4 = *(void *)(v1 + 208);
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_214B874BC(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v2 = v5[2];
      unint64_t v6 = v5[3];
      unint64_t v1 = v2 + 1;
      if (v2 >= v6 >> 1) {
        goto LABEL_49;
      }
      goto LABEL_6;
    }
    sub_214BE2894(&v30);
    uint64_t v28 = v30;
    unint64_t v29 = v31;
    LOBYTE(v27[0]) = 5;
    uint64_t v9 = 0xD000000000000022;
    unint64_t v8 = 0x8000000214D334C0;
    goto LABEL_8;
  }
  uint64_t v10 = v3 + 32;
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v4 = MEMORY[0x263F8D310];
  while (1)
  {
    unint64_t v6 = *(void *)(v3 + 16);
    if (v11 >= v6)
    {
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v12 = (uint64_t *)(v10 + 16 * v11);
    unint64_t v2 = v12[1];
    uint64_t v30 = *v12;
    uint64_t v13 = v30;
    unint64_t v31 = v2;
    v27[1] = 0xE000000000000000;
    uint64_t v28 = 48;
    unint64_t v29 = 0xE100000000000000;
    v27[0] = 0;
    sub_214BBD7FC();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_214D1A628();
    unint64_t v1 = v15;
    if ((v30 || v2 != 0xE000000000000000) && (sub_214D1ABC8() & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    if (++v11 == v26)
    {
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  uint64_t v16 = v5[2];
  if (!v16) {
    goto LABEL_21;
  }
  if (v5[4] == v30 && v5[5] == v2 || (sub_214D1ABC8() & 1) != 0) {
    goto LABEL_32;
  }
  if (v16 == 1) {
    goto LABEL_21;
  }
  if (v5[6] == v30 && v5[7] == v2 || (sub_214D1ABC8() & 1) != 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v10 = v3 + 32;
    goto LABEL_11;
  }
  if (v16 == 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v1) & 0xF;
    if ((v1 & 0x2000000000000000) == 0) {
      uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (v17)
    {
      uint64_t v10 = v3 + 32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_214B874BC(0, v5[2] + 1, 1, v5);
      }
      unint64_t v19 = v5[2];
      unint64_t v18 = v5[3];
      unint64_t v1 = v19 + 1;
      if (v19 >= v18 >> 1) {
        uint64_t v5 = sub_214B874BC((void *)(v18 > 1), v19 + 1, 1, v5);
      }
      v5[2] = v1;
      int v20 = &v5[2 * v19];
      v20[4] = v13;
      v20[5] = v2;
      goto LABEL_11;
    }
    goto LABEL_33;
  }
  uint64_t v21 = v5 + 9;
  unint64_t v6 = 2;
  while (!__OFADD__(v6, 1))
  {
    if (*(v21 - 1) == v30 && *v21 == v2) {
      goto LABEL_32;
    }
    unint64_t v24 = v6 + 1;
    unint64_t v25 = v6;
    if (sub_214D1ABC8()) {
      goto LABEL_32;
    }
    v21 += 2;
    unint64_t v6 = v25 + 1;
    if (v24 == v16) {
      goto LABEL_21;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t v5 = sub_214B874BC((void *)(v6 > 1), v1, 1, v5);
LABEL_6:
  v5[2] = v1;
  uint64_t v7 = &v5[2 * v2];
  v7[4] = v4;
  v7[5] = v3;
  return v5;
}

uint64_t sub_214BE3BEC()
{
  *(void *)(v1 + 184) = v0;
  return MEMORY[0x270FA2498](sub_214BE3C7C, v0, 0);
}

uint64_t sub_214BE3C7C()
{
  unint64_t v18 = v0;
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[23];
  sub_214BE2894((uint64_t *)&v13);
  unint64_t v15 = v13;
  unint64_t v16 = v14;
  LOBYTE(v12[0]) = 5;
  CoreODILogger.debug(_:category:)(0xD000000000000013, 0x8000000214D339A0, v12);
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(v1 + 128);
  v0[24] = v2;
  objc_msgSend(v2, sel_setDelegate_, v1);
  v0[20] = 0;
  id v3 = objc_msgSend(v2, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 20);
  v0[25] = v3;
  uint64_t v4 = (void *)v0[20];
  if (v3)
  {
    id v5 = v4;
    unint64_t v6 = (void *)swift_task_alloc();
    v0[26] = v6;
    *unint64_t v6 = v0;
    v6[1] = sub_214BE3F34;
    return sub_214BE2970();
  }
  else
  {
    id v8 = v4;
    uint64_t v9 = (void *)sub_214D199B8();

    swift_willThrow();
    sub_214BE2894(v12);
    unint64_t v13 = v12[0];
    uint64_t v14 = v12[1];
    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xD00000000000001FLL;
    unint64_t v16 = 0x8000000214D339C0;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();

    swift_bridgeObjectRelease();
    uint64_t v10 = v15;
    LOBYTE(v15) = 5;
    CoreODILogger.debug(_:category:)(v10, v16, &v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0[23] + 168) = 1;
    unint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_214BE3F34(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 216) = a1;
  *(void *)(v4 + 224) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 184);
  if (v1) {
    unint64_t v6 = sub_214BE474C;
  }
  else {
    unint64_t v6 = sub_214BE4094;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214BE4094()
{
  uint64_t v21 = v0;
  uint64_t v20 = *MEMORY[0x263EF8340];
  unint64_t v1 = v0[27];
  unint64_t v2 = (void *)v0[23];
  if (!v1)
  {
    uint64_t v7 = (void *)v0[25];
    sub_214BE2894((uint64_t *)&v16);
    unint64_t v18 = v16;
    unint64_t v19 = v17;
    LOBYTE(v15[0]) = 14;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D33850, v15);

    goto LABEL_5;
  }
  uint64_t v3 = (void *)v0[28];
  swift_retain();
  uint64_t v4 = sub_214BE9F88(v1, v2);
  if (v3)
  {
    uint64_t v5 = (void *)v0[25];
    swift_release();

    swift_bridgeObjectRelease();
    sub_214BE2894(v15);
    unint64_t v16 = v15[0];
    uint64_t v17 = v15[1];
    unint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD00000000000001FLL;
    unint64_t v19 = 0x8000000214D339C0;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();

    swift_bridgeObjectRelease();
    uint64_t v6 = v18;
    LOBYTE(v18) = 5;
    CoreODILogger.debug(_:category:)(v6, v19, &v18);
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0[23] + 168) = 1;
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  uint64_t v10 = v4;
  uint64_t v12 = (void *)v0[24];
  uint64_t v11 = v0[25];
  uint64_t v13 = v0[23];
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 200) = v10;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_214BE43A4;
  uint64_t v14 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214BE48B0;
  v0[13] = &block_descriptor_70;
  v0[14] = v14;
  objc_msgSend(v12, sel_getPhoneNumberWithCompletion_completion_, v11, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214BE43A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  return MEMORY[0x270FA2498](sub_214BE44C4, v1, 0);
}

uint64_t sub_214BE44C4()
{
  uint64_t v28 = v0;
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 184);
  unint64_t v2 = *(void **)(v0 + 152);
  id v3 = *(id *)(v0 + 144);
  id v4 = objc_msgSend(v3, sel_number);
  uint64_t v5 = sub_214D1A038();
  uint64_t v7 = v6;

  v1[26] = v5;
  v1[27] = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = v1[26];
  uint64_t v8 = v1[27];
  uint64_t v10 = (void *)v1[25];
  if (v10 && v10[2])
  {
    uint64_t v12 = v10[4];
    uint64_t v11 = v10[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
  }
  if (!v8)
  {
    if (!v11) {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!v11) {
    goto LABEL_15;
  }
  if (v9 == v12 && v8 == v11) {
    goto LABEL_16;
  }
  char v14 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_15:
    sub_214BE2894((uint64_t *)&v23);
    unint64_t v25 = v23;
    unint64_t v26 = v24;
    LOBYTE(v22[0]) = 5;
    CoreODILogger.info(_:category:)(0xD000000000000033, 0x8000000214D33A10, v22);
LABEL_16:
    swift_bridgeObjectRelease();
  }
LABEL_17:
  uint64_t v15 = *(void *)(v0 + 184);
  sub_214BE2894(v22);
  unint64_t v23 = v22[0];
  uint64_t v24 = v22[1];
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000021;
  unint64_t v26 = 0x8000000214D33A50;
  uint64_t v16 = *(void *)(v15 + 200);
  if (v16) {
    uint64_t v17 = *(void *)(v16 + 16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = *(void **)(v0 + 200);
  *(void *)(v0 + 176) = v17;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v19 = v25;
  LOBYTE(v25) = 5;
  CoreODILogger.debug(_:category:)(v19, v26, &v25);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(*(void *)(v0 + 184) + 168) = 1;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_214BE474C()
{
  uint64_t v9 = v0;
  uint64_t v8 = *MEMORY[0x263EF8340];

  uint64_t v1 = *(void **)(v0 + 224);
  sub_214BE2894(v5);
  v5[2] = v5[0];
  v5[3] = v5[1];
  unint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v6 = 0xD00000000000001FLL;
  unint64_t v7 = 0x8000000214D339C0;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();

  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  LOBYTE(v6) = 5;
  CoreODILogger.debug(_:category:)(v2, v7, &v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(*(void *)(v0 + 184) + 168) = 1;
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214BE48B0(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(*(void *)(*(void *)(a1 + 32) + 64) + 40);
  *id v4 = a2;
  v4[1] = a3;
  id v5 = a2;
  id v6 = a3;
  return swift_continuation_resume();
}

uint64_t sub_214BE490C()
{
  v1[23] = v0;
  uint64_t v2 = sub_214D19CC8();
  v1[24] = v2;
  v1[25] = *(void *)(v2 - 8);
  v1[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BE49F8, v0, 0);
}

uint64_t sub_214BE49F8()
{
  v45 = v0;
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0[23] + 128);
  v0[20] = 0;
  v0[27] = v1;
  id v2 = objc_msgSend(v1, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 20);
  id v3 = (void *)v0[20];
  if (!v2)
  {
    id v16 = v3;
    uint64_t v17 = (void *)sub_214D199B8();

    swift_willThrow();
LABEL_10:
    sub_214BE2894(v39);
    unint64_t v40 = v39[0];
    uint64_t v41 = v39[1];
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD000000000000018;
    unint64_t v43 = 0x8000000214D33890;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v22 = v42;
    LOBYTE(v42) = 5;
    CoreODILogger.debug(_:category:)(v22, v43, &v42);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v23 = 0;
    goto LABEL_12;
  }
  uint64_t v4 = v2;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_uuid);

  sub_214D19CA8();
  v0[22] = 0;
  id v7 = objc_msgSend(v1, sel_getSubscriptionInfoWithError_, v0 + 22);
  uint64_t v8 = (void *)v0[22];
  if (!v7)
  {
    uint64_t v19 = v0[25];
    uint64_t v18 = v0[26];
    uint64_t v20 = v0[24];
    id v21 = v8;
    uint64_t v17 = (void *)sub_214D199B8();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_10;
  }
  uint64_t v9 = v7;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_subscriptionsInUse);

  uint64_t v12 = v0[26];
  if (!v11)
  {
    uint64_t v26 = v0[24];
    uint64_t v27 = v0[25];
    sub_214BE2894((uint64_t *)&v40);
    unint64_t v42 = v40;
    unint64_t v43 = v41;
    LOBYTE(v39[0]) = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D33850, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v12, v26);
    goto LABEL_11;
  }
  sub_214B6A264(0, &qword_26ACE4390);
  unint64_t v13 = sub_214D1A268();

  uint64_t v14 = sub_214BE319C(v13);
  swift_bridgeObjectRelease();
  *(void *)(swift_task_alloc() + 16) = v12;
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    unint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v15 = (uint64_t)sub_214CDC484(v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v42 = v15;
  sub_214BE27C0(sub_214BE9F00);
  swift_bridgeObjectRelease();
  v0[28] = v15;
  swift_task_dealloc();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_214D1A948();
    swift_release();
    v0[29] = v35;
    if (v35) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v28 = *(void *)(v15 + 16);
    v0[29] = v28;
    if (v28)
    {
LABEL_19:
      v0[30] = MEMORY[0x263F8EE78];
      uint64_t v29 = v0[28];
      if ((v29 & 0xC000000000000001) != 0) {
        id v30 = (id)MEMORY[0x2166B0290](0);
      }
      else {
        id v30 = *(id *)(v29 + 32);
      }
      id v31 = v30;
      v0[31] = v30;
      v0[32] = 1;
      uint64_t v32 = (void *)v0[27];
      v0[2] = v0;
      v0[7] = v0 + 18;
      v0[3] = sub_214BE4F9C;
      uint64_t v33 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_214BE5548;
      v0[13] = &block_descriptor_63;
      v0[14] = v33;
      objc_msgSend(v32, sel_copySIMIdentity_completion_, v31, v0 + 10);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
  }
  uint64_t v37 = v0[25];
  uint64_t v36 = v0[26];
  uint64_t v38 = v0[24];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_12:
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(uint64_t))v0[1];
  return v24(v23);
}

uint64_t sub_214BE4F9C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 264) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 184);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_214BE53B4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 184);
    uint64_t v4 = sub_214BE511C;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_214BE511C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = (void *)v0[30];
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v4 = sub_214B874BC(0, v4[2] + 1, 1, (void *)v0[30]);
  }
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_214B874BC((void *)(v5 > 1), v6 + 1, 1, v4);
  }
  uint64_t v7 = (void *)v0[31];
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[29];
  v4[2] = v6 + 1;
  id v10 = &v4[2 * v6];
  v10[4] = v1;
  v10[5] = v2;

  if (v8 == v9)
  {
    uint64_t v12 = v0[25];
    uint64_t v11 = v0[26];
    uint64_t v13 = v0[24];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void *))v0[1];
    return v14(v4);
  }
  else
  {
    uint64_t v16 = v0[32];
    v0[30] = v4;
    uint64_t v17 = v0[28];
    if ((v17 & 0xC000000000000001) != 0) {
      id v18 = (id)MEMORY[0x2166B0290](v16);
    }
    else {
      id v18 = *(id *)(v17 + 8 * v16 + 32);
    }
    id v19 = v18;
    v0[31] = v18;
    v0[32] = v16 + 1;
    if (__OFADD__(v16, 1)) {
      __break(1u);
    }
    uint64_t v20 = (void *)v0[27];
    v0[2] = v0;
    v0[7] = v0 + 18;
    v0[3] = sub_214BE4F9C;
    uint64_t v21 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_214BE5548;
    v0[13] = &block_descriptor_63;
    v0[14] = v21;
    objc_msgSend(v20, sel_copySIMIdentity_completion_, v19, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
}

uint64_t sub_214BE53B4()
{
  uint64_t v13 = v0;
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)v0[31];
  uint64_t v3 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[24];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  unint64_t v5 = (void *)v0[33];
  sub_214BE2894(v9);
  v9[2] = v9[0];
  v9[3] = v9[1];
  unint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v10 = 0xD000000000000018;
  unint64_t v11 = 0x8000000214D33890;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v6 = v10;
  LOBYTE(v10) = 5;
  CoreODILogger.debug(_:category:)(v6, v11, &v10);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7(0);
}

uint64_t sub_214BE5548(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    uint64_t v8 = sub_214D1A038();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214BE5604()
{
  *(void *)(v1 + 56) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214BE5694;
  return sub_214BE2970();
}

uint64_t sub_214BE5694(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 56);
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v5 = sub_214BE5AEC;
  }
  else {
    uint64_t v5 = sub_214BE57C0;
  }
  return MEMORY[0x270FA2498](v5, v4, 0);
}

uint64_t sub_214BE57C0()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[9];
  if (v1)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    uint64_t v6 = sub_214BE9C40((unint64_t *)&qword_26ACE44B0, v5, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
    uint64_t v7 = swift_task_alloc();
    v0[11] = v7;
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v3;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[12] = v8;
    void *v8 = v0;
    v8[1] = sub_214BE59A0;
    uint64_t v9 = MEMORY[0x263F8D310];
    uint64_t v16 = v4;
    uint64_t v10 = MEMORY[0x263F8D310];
    return MEMORY[0x270FA22B8](v0 + 6, v9, v4, v2, v6, &unk_26784D838, v7, v10);
  }
  else
  {
    sub_214BE2894(v13);
    v13[2] = v13[0];
    v13[3] = v13[1];
    char v17 = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D33850, &v17);
    swift_bridgeObjectRelease();
    unint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11(0);
  }
}

uint64_t sub_214BE59A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = sub_214BE5C14;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_214BE5AD4;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BE5AD4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 48));
}

uint64_t sub_214BE5AEC()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void **)(v0 + 80);
  sub_214BE2894(v5);
  v5[2] = v5[0];
  v5[3] = v5[1];
  unint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v6 = 0xD000000000000017;
  unint64_t v7 = 0x8000000214D33830;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  LOBYTE(v6) = 5;
  CoreODILogger.debug(_:category:)(v2, v7, &v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(0);
}

uint64_t sub_214BE5C14()
{
  uint64_t v8 = v0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(void **)(v0 + 104);
  sub_214BE2894(v5);
  v5[2] = v5[0];
  v5[3] = v5[1];
  unint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v6 = 0xD000000000000017;
  unint64_t v7 = 0x8000000214D33830;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  LOBYTE(v6) = 5;
  CoreODILogger.debug(_:category:)(v2, v7, &v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(0);
}

uint64_t sub_214BE5D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D840);
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BE5E58, 0, 0);
}

uint64_t sub_214BE5E58()
{
  unint64_t v1 = *(void *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_214D1A948();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    sub_214D1A3C8();
    *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
    unint64_t v25 = sub_214BE9EA4();
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_214BE6200;
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v3 = v0 + 72;
    unint64_t v5 = v25;
    return MEMORY[0x270FA1E80](v3, v4, v5);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v29 = v1 & 0xC000000000000001;
    uint64_t v28 = *(void *)(v0 + 104) + 32;
    uint64_t v30 = v2;
    while (1)
    {
      if (v29) {
        id v8 = (id)MEMORY[0x2166B0290](v6, *(void *)(v0 + 104));
      }
      else {
        id v8 = *(id *)(v28 + 8 * v6);
      }
      uint64_t v9 = v8;
      uint64_t v11 = *(void *)(v0 + 144);
      uint64_t v10 = *(void *)(v0 + 152);
      uint64_t v12 = *(void **)(v0 + 112);
      uint64_t v13 = sub_214D1A368();
      uint64_t v14 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
      uint64_t v15 = (void *)swift_allocObject();
      uint64_t v15[2] = 0;
      uint64_t v16 = v15 + 2;
      v15[3] = 0;
      v15[4] = v12;
      v15[5] = v9;
      sub_214BE9E3C(v10, v11);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
      id v17 = v12;
      id v18 = v9;
      uint64_t v19 = *(void *)(v0 + 144);
      if (v10 == 1)
      {
        sub_214B59CE0(*(void *)(v0 + 144), (uint64_t *)&unk_26ACE4338);
        if (!*v16) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_214D1A358();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        if (!*v16)
        {
LABEL_13:
          uint64_t v20 = 0;
          uint64_t v22 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v20 = sub_214D1A2D8();
      uint64_t v22 = v21;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v23 = **(void **)(v0 + 96);
      uint64_t v24 = v22 | v20;
      if (v22 | v20)
      {
        uint64_t v24 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v20;
        *(void *)(v0 + 40) = v22;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 152);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v24;
      *(void *)(v0 + 64) = v23;
      swift_task_create();

      swift_release();
      sub_214B59CE0(v7, (uint64_t *)&unk_26ACE4338);
      if (v30 == v6) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return MEMORY[0x270FA1E80](v3, v4, v5);
}

uint64_t sub_214BE6200()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[16];
    uint64_t v3 = v2[17];
    uint64_t v5 = v2[15];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_214BE64FC;
  }
  else
  {
    uint64_t v6 = sub_214BE6344;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_214BE6344()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[20];
  if (v1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v5 = (void *)v0[20];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v5 = sub_214B874BC(0, v5[2] + 1, 1, v5);
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1) {
      uint64_t v5 = sub_214B874BC((void *)(v6 > 1), v7 + 1, 1, v5);
    }
    v5[2] = v7 + 1;
    uint64_t v8 = &v5[2 * v7];
    v8[4] = v2;
    v8[5] = v1;
    v0[20] = v5;
    unint64_t v9 = sub_214BE9EA4();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[21] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_214BE6200;
    uint64_t v11 = v0[15];
    return MEMORY[0x270FA1E80](v0 + 9, v11, v9);
  }
  else
  {
    uint64_t v12 = (void *)v0[11];
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_bridgeObjectRelease();
    *uint64_t v12 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_214BE64FC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BE6574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[17] = a1;
  return MEMORY[0x270FA2498](sub_214BE6598, 0, 0);
}

uint64_t sub_214BE6598()
{
  uint64_t v2 = (void *)v0[18];
  uint64_t v1 = v0[19];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214BE6698;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214BE5548;
  v0[13] = &block_descriptor_1;
  v0[14] = v3;
  objc_msgSend(v2, sel_copyMobileSubscriberIdentity_completion_, v1, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214BE6698()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_214BE67CC;
  }
  else {
    uint64_t v2 = sub_214BE67A8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BE67A8()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void **)(v0 + 136);
  *uint64_t v1 = *(void *)(v0 + 120);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214BE67CC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BE6838()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_214BE6858, v0, 0);
}

uint64_t sub_214BE6858()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F29120]), sel_init);
  v0[17] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214BE6974;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214BE6C88;
  v0[13] = &block_descriptor_67;
  v0[14] = v2;
  objc_msgSend(v1, sel_appleIDHeadersWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214BE6974()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 144) = v2;
  uint64_t v3 = *(void *)(v1 + 128);
  if (v2) {
    uint64_t v4 = sub_214BE6C18;
  }
  else {
    uint64_t v4 = sub_214BE6A94;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BE6A94()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void *)(v0 + 120);

  if (v1)
  {
    if (*(void *)(v1 + 16))
    {
      uint64_t v2 = sub_214B87FEC(0x2D656C7070412D58, 0xEE004D2D444D2D49);
      if (v3)
      {
        uint64_t v4 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v2);
        uint64_t v5 = *v4;
        uint64_t v6 = v4[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        return v7(v5, v6);
      }
    }
    swift_bridgeObjectRelease();
  }
  v10[0] = 68;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x8000000214D33920, 0, v10, 0, 0, 0xD00000000000005BLL, 0x8000000214D33940, 0x292844494D746567, 0xE800000000000000, 318);
  swift_willThrow();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_214BE6C18()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214BE6C88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_214D19F98();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_214BE9F20((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214BE6D6C()
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 128);
  v17[0] = 0;
  id v2 = objc_msgSend(v1, sel_getUserDefaultVoiceSubscriptionContext_, v17);
  id v3 = v17[0];
  if (!v2)
  {
    id v11 = v17[0];
    uint64_t v12 = sub_214D199B8();

    swift_willThrow();
    uint64_t v13 = (void *)v12;
LABEL_6:

    char v10 = 0;
    return v10 & 1;
  }
  uint64_t v4 = v2;
  v17[0] = 0;
  id v5 = v3;
  id v6 = objc_msgSend(v1, sel_getSIMStatus_error_, v4, v17);
  id v7 = v17[0];
  if (!v6)
  {
    id v14 = v17[0];
    uint64_t v15 = sub_214D199B8();

    swift_willThrow();
    uint64_t v13 = (void *)v15;
    goto LABEL_6;
  }
  uint64_t v8 = v6;
  sub_214D1A038();
  id v9 = v7;

  char v10 = sub_214BE6EC0();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_214BE6EC0()
{
  uint64_t v0 = (void *)sub_214D1A028();
  uint64_t v1 = (void *)*MEMORY[0x263F030B8];
  if (!*MEMORY[0x263F030B8]
    || (type metadata accessor for CFString(0),
        sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
        id v2 = v0,
        id v3 = v1,
        char v4 = sub_214D19E48(),
        v3,
        v2,
        (v4 & 1) == 0))
  {
    id v5 = (void *)*MEMORY[0x263F03060];
    if (!*MEMORY[0x263F03060]
      || (type metadata accessor for CFString(0),
          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
          id v2 = v0,
          id v6 = v5,
          char v7 = sub_214D19E48(),
          v6,
          v2,
          (v7 & 1) == 0))
    {
      uint64_t v8 = (void *)*MEMORY[0x263F030D8];
      if (!*MEMORY[0x263F030D8]
        || (type metadata accessor for CFString(0),
            sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
            id v2 = v0,
            id v9 = v8,
            char v10 = sub_214D19E48(),
            v9,
            v2,
            (v10 & 1) == 0))
      {
        id v11 = (void *)*MEMORY[0x263F03090];
        if (!*MEMORY[0x263F03090]
          || (type metadata accessor for CFString(0),
              sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
              id v2 = v0,
              id v12 = v11,
              char v13 = sub_214D19E48(),
              v12,
              v2,
              (v13 & 1) == 0))
        {
          id v14 = (void *)*MEMORY[0x263F03098];
          if (!*MEMORY[0x263F03098]
            || (type metadata accessor for CFString(0),
                sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                id v2 = v0,
                id v15 = v14,
                char v16 = sub_214D19E48(),
                v15,
                v2,
                (v16 & 1) == 0))
          {
            id v17 = (void *)*MEMORY[0x263F030C0];
            if (!*MEMORY[0x263F030C0]
              || (type metadata accessor for CFString(0),
                  sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                  id v2 = v0,
                  id v18 = v17,
                  char v19 = sub_214D19E48(),
                  v18,
                  v2,
                  (v19 & 1) == 0))
            {
              uint64_t v20 = (void *)*MEMORY[0x263F030B0];
              if (!*MEMORY[0x263F030B0]
                || (type metadata accessor for CFString(0),
                    sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                    id v2 = v0,
                    id v21 = v20,
                    char v22 = sub_214D19E48(),
                    v21,
                    v2,
                    (v22 & 1) == 0))
              {
                uint64_t v23 = (void *)*MEMORY[0x263F03058];
                if (!*MEMORY[0x263F03058]
                  || (type metadata accessor for CFString(0),
                      sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                      id v2 = v0,
                      id v24 = v23,
                      char v25 = sub_214D19E48(),
                      v24,
                      v2,
                      (v25 & 1) == 0))
                {
                  uint64_t v26 = (void *)*MEMORY[0x263F03070];
                  if (!*MEMORY[0x263F03070]
                    || (type metadata accessor for CFString(0),
                        sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                        id v2 = v0,
                        id v27 = v26,
                        char v28 = sub_214D19E48(),
                        v27,
                        v2,
                        (v28 & 1) == 0))
                  {
                    unint64_t v29 = (void *)*MEMORY[0x263F030A8];
                    if (!*MEMORY[0x263F030A8]
                      || (type metadata accessor for CFString(0),
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                          id v2 = v0,
                          id v30 = v29,
                          char v31 = sub_214D19E48(),
                          v30,
                          v2,
                          (v31 & 1) == 0))
                    {
                      uint64_t v32 = (void *)*MEMORY[0x263F030A0];
                      if (!*MEMORY[0x263F030A0]
                        || (type metadata accessor for CFString(0),
                            sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString),
                            id v2 = v0,
                            id v33 = v32,
                            char v34 = sub_214D19E48(),
                            v33,
                            v2,
                            (v34 & 1) == 0))
                      {
                        uint64_t v36 = (void *)*MEMORY[0x263F03088];
                        if (*MEMORY[0x263F03088])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v37 = v0;
                          id v38 = v36;
                          char v39 = sub_214D19E48();

                          if (v39) {
                            goto LABEL_35;
                          }
                        }
                        unint64_t v40 = (void *)*MEMORY[0x263F03078];
                        if (*MEMORY[0x263F03078])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v37 = v0;
                          id v41 = v40;
                          char v42 = sub_214D19E48();

                          if (v42) {
                            goto LABEL_35;
                          }
                        }
                        unint64_t v43 = (void *)*MEMORY[0x263F030D0];
                        if (*MEMORY[0x263F030D0])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v37 = v0;
                          id v44 = v43;
                          char v45 = sub_214D19E48();

                          if (v45) {
                            goto LABEL_35;
                          }
                        }
                        uint64_t v46 = (void *)*MEMORY[0x263F030E0];
                        if (*MEMORY[0x263F030E0])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v37 = v0;
                          id v47 = v46;
                          char v48 = sub_214D19E48();

                          if (v48) {
                            goto LABEL_35;
                          }
                        }
                        v49 = (void *)*MEMORY[0x263F03068];
                        if (*MEMORY[0x263F03068])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v37 = v0;
                          id v50 = v49;
                          char v51 = sub_214D19E48();

                          if (v51)
                          {
LABEL_35:

                            return 0;
                          }
                        }
                        v52 = (void *)*MEMORY[0x263F030C8];
                        if (*MEMORY[0x263F030C8])
                        {
                          type metadata accessor for CFString(0);
                          sub_214BE9C40(&qword_26784D828, 255, type metadata accessor for CFString);
                          id v53 = v52;
                          id v54 = v0;
                          id v55 = v53;
                          char v56 = sub_214D19E48();

                          if (v56) {
                            return 0;
                          }
                        }
                        else
                        {
                        }
                        sub_214BE2894(v58);
                        v57[2] = v58[0];
                        v57[3] = v58[1];
                        sub_214D1A7A8();
                        swift_bridgeObjectRelease();
                        v57[0] = 0xD000000000000005;
                        v57[1] = 0x8000000214D33810;
                        sub_214D1A108();
                        CoreODILogger.info(_:category:)(0xD000000000000017, 0x8000000214D33810, v57);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        return 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return 1;
}

uint64_t sub_214BE78D0(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return MEMORY[0x270FA2498](sub_214BE7960, v1, 0);
}

uint64_t sub_214BE7960()
{
  id v27 = v0;
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[9];
  sub_214BE2894(&v20);
  uint64_t v22 = v20;
  uint64_t v23 = v21;
  unint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  v0[5] = objc_msgSend(v1, sel_slotID);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v3 = v24;
  LOBYTE(v24) = 5;
  CoreODILogger.info(_:category:)(v3, v25, &v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(v2 + 128);
  v0[6] = 0;
  id v5 = objc_msgSend(v4, sel_getPhoneNumber_error_, v1, v0 + 6);
  id v6 = (void *)v0[6];
  if (v5)
  {
    char v7 = v5;
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_number);

    uint64_t v10 = sub_214D1A038();
    uint64_t v12 = v11;

    v0[10] = v10;
    v0[11] = v12;
    sub_214BE2894(&v22);
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000016;
    unint64_t v25 = 0x8000000214D337A0;
    sub_214D1A108();
    if (qword_26ACE4208 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_214D19EE8();
    __swift_project_value_buffer(v13, (uint64_t)qword_26ACEBA88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214C3DE8C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    id v14 = (void *)swift_task_alloc();
    v0[12] = v14;
    *id v14 = v0;
    v14[1] = sub_214BE7D70;
    return sub_214BE2970();
  }
  else
  {
    id v16 = v6;
    id v17 = (void *)sub_214D199B8();

    swift_willThrow();
    sub_214BE2894(&v20);
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v18 = v24;
    LOBYTE(v24) = 5;
    CoreODILogger.error(_:category:)(v18, v25, &v24);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    char v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_214BE7D70(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 104) = a1;
  *(void *)(v4 + 112) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 72);
  if (v1) {
    id v6 = sub_214BE82C4;
  }
  else {
    id v6 = sub_214BE7ED0;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214BE7ED0()
{
  uint64_t v18 = v0;
  uint64_t v17 = *MEMORY[0x263EF8340];
  unint64_t v1 = v0[13];
  uint64_t v2 = v0[9];
  uint64_t v3 = *(void **)(v2 + 200);
  if (v1)
  {
    uint64_t v4 = v0[8];
    swift_bridgeObjectRetain();
    sub_214BE8420(v4, v1);
    unint64_t v6 = v5;
    char v8 = v7;
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0 && (v6 & 0x8000000000000000) == 0)
    {
      if (v3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_214BE99EC(v3);
        }
        if (v6 >= v3[2]) {
          __break(1u);
        }
        uint64_t v9 = v0[11];
        uint64_t v10 = &v3[2 * v6];
        v10[4] = v0[10];
        v10[5] = v9;
      }
      swift_bridgeObjectRelease();
      *(void *)(v2 + 200) = v3;
      swift_bridgeObjectRelease();
      uint64_t v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v0[15] = v3;
  swift_bridgeObjectRelease();
  sub_214BE2894(v15);
  uint64_t v15[2] = v15[0];
  v15[3] = v15[1];
  char v16 = 5;
  CoreODILogger.info(_:category:)(0xD000000000000040, 0x8000000214D337C0, &v16);
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[16] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_214BE80FC;
  uint64_t v12 = v0[9];
  v11[23] = v12;
  return MEMORY[0x270FA2498](sub_214BE3C7C, v12, 0);
}

uint64_t sub_214BE80FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BE8238, v1, 0);
}

uint64_t sub_214BE8238()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BE82C4()
{
  uint64_t v9 = v0;
  uint64_t v8 = *MEMORY[0x263EF8340];
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 112);
  sub_214BE2894(v5);
  v5[2] = v5[0];
  v5[3] = v5[1];
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  LOBYTE(v6) = 5;
  CoreODILogger.error(_:category:)(v2, v7, &v6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_214BE8420(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x2166B0290](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      unint64_t v5 = v4;
      sub_214B6A264(0, &qword_26ACE4390);
      char v6 = sub_214D1A5A8();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x2166B0290](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_214D1A5A8();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_214D1A948();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

id *ODIDeviceInfo.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIDeviceInfo.__deallocating_deinit()
{
  ODIDeviceInfo.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ODIDeviceInfo.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214BE866C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  uint64_t v5[4] = a5;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_214BE8690, 0, 0);
}

uint64_t sub_214BE8690()
{
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 40) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_214BE8798;
    v3[8] = *(void *)(v0 + 32);
    v3[9] = v2;
    return MEMORY[0x270FA2498](sub_214BE7960, v2, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    id v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_214BE8798()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_214BE88B0, 0, 0);
}

uint64_t sub_214BE88B0()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 40) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for ODIDeviceInfo()
{
  return self;
}

uint64_t method lookup function for ODIDeviceInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODIDeviceInfo);
}

uint64_t dispatch thunk of ODIDeviceInfo.getCTPhoneNumber(useDefaultVoiceNumber:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t type metadata accessor for ODIDeviceInfo.DeviceInfoHelper()
{
  return self;
}

uint64_t sub_214BE8A90(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_214B6A55C;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_214BE8690, 0, 0);
}

void sub_214BE8B44(uint64_t (*a1)(void **, void **))
{
  uint64_t v3 = v1[1];
  uint64_t v4 = sub_214D1AB68();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_144;
    }
    if (v3) {
      sub_214BE9328(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 <= -2) {
    goto LABEL_153;
  }
  uint64_t v112 = v4;
  v108 = v1;
  if (v3 < 2)
  {
    id v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v121 = MEMORY[0x263F8EE78];
    v116 = (id *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_105:
      if (v34 >= 2)
      {
        uint64_t v97 = *v108;
        do
        {
          unint64_t v98 = v34 - 2;
          if (v34 < 2) {
            goto LABEL_139;
          }
          if (!v97) {
            goto LABEL_152;
          }
          uint64_t v99 = (uint64_t)v8;
          uint64_t v100 = *(void *)&v8[16 * v98 + 32];
          uint64_t v101 = *(void *)&v8[16 * v34 + 24];
          sub_214BE9430((id *)(v97 + 8 * v100), (id *)(v97 + 8 * *(void *)&v8[16 * v34 + 16]), v97 + 8 * v101, v116, a1);
          if (v2) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_140;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            v102 = (char *)v99;
          }
          else {
            v102 = sub_214BE995C(v99);
          }
          if (v98 >= *((void *)v102 + 2)) {
            goto LABEL_141;
          }
          v103 = &v102[16 * v98 + 32];
          *(void *)v103 = v100;
          *((void *)v103 + 1) = v101;
          unint64_t v104 = *((void *)v102 + 2);
          if (v34 > v104) {
            goto LABEL_142;
          }
          v105 = v102;
          memmove(&v102[16 * v34 + 16], &v102[16 * v34 + 32], 16 * (v104 - v34));
          id v8 = v105;
          *((void *)v105 + 2) = v104 - 1;
          unint64_t v34 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_214B6A264(0, &qword_26ACE4390);
    uint64_t v7 = sub_214D1A2A8();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v116 = (id *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v121 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v1;
  uint64_t v109 = *v1 + 16;
  uint64_t v107 = *v1 - 8;
  id v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v113 = v3;
  uint64_t v117 = *v1;
LABEL_13:
  uint64_t v11 = v9++;
  if (v9 < v3)
  {
    uint64_t v12 = v8;
    uint64_t v13 = *(void **)(v10 + 8 * v9);
    v119 = *(void **)(v10 + 8 * v11);
    id v14 = v119;
    v120 = v13;
    id v15 = v13;
    id v16 = v14;
    int v17 = a1(&v120, &v119);
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_122;
    }
    int v18 = v17;

    uint64_t v9 = v11 + 2;
    if (v11 + 2 < v3)
    {
      uint64_t v110 = v11;
      uint64_t v19 = (void **)(v109 + 8 * v11);
      while (1)
      {
        uint64_t v20 = *v19;
        v119 = *(v19 - 1);
        uint64_t v21 = v119;
        v120 = v20;
        id v22 = v20;
        id v23 = v21;
        int v24 = a1(&v120, &v119);

        if ((v18 ^ v24)) {
          break;
        }
        ++v9;
        ++v19;
        uint64_t v3 = v113;
        if (v113 == v9)
        {
          uint64_t v9 = v113;
          goto LABEL_21;
        }
      }
      uint64_t v3 = v113;
LABEL_21:
      uint64_t v11 = v110;
    }
    id v8 = v12;
    uint64_t v10 = v117;
    if (v18)
    {
      if (v9 < v11) {
        goto LABEL_148;
      }
      if (v11 < v9)
      {
        unint64_t v25 = (uint64_t *)(v107 + 8 * v9);
        uint64_t v26 = v9;
        uint64_t v27 = v11;
        uint64_t v28 = (uint64_t *)(v117 + 8 * v11);
        do
        {
          if (v27 != --v26)
          {
            if (!v117) {
              goto LABEL_151;
            }
            uint64_t v29 = *v28;
            *uint64_t v28 = *v25;
            *unint64_t v25 = v29;
          }
          ++v27;
          --v25;
          ++v28;
        }
        while (v27 < v26);
      }
    }
  }
  if (v9 >= v3) {
    goto LABEL_40;
  }
  if (__OFSUB__(v9, v11)) {
    goto LABEL_145;
  }
  if (v9 - v11 >= v112)
  {
LABEL_40:
    if (v9 < v11) {
      goto LABEL_143;
    }
    goto LABEL_41;
  }
  if (__OFADD__(v11, v112)) {
    goto LABEL_146;
  }
  if (v11 + v112 >= v3) {
    uint64_t v30 = v3;
  }
  else {
    uint64_t v30 = v11 + v112;
  }
  if (v30 >= v11)
  {
    if (v9 == v30) {
      goto LABEL_40;
    }
    v106 = v8;
    v85 = (void **)(v107 + 8 * v9);
    uint64_t v111 = v11;
    uint64_t v115 = v30;
    while (1)
    {
      v86 = *(void **)(v10 + 8 * v9);
      uint64_t v87 = v11;
      v88 = v85;
      v89 = v85;
      while (1)
      {
        v119 = *v89;
        v90 = v119;
        v120 = v86;
        id v91 = v86;
        id v92 = v90;
        char v93 = a1(&v120, &v119);
        if (v2)
        {
          swift_bridgeObjectRelease();

LABEL_122:
          *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_214D1A288();
          swift_bridgeObjectRelease();
          return;
        }
        char v94 = v93;

        if ((v94 & 1) == 0) {
          break;
        }
        uint64_t v10 = v117;
        if (!v117) {
          goto LABEL_150;
        }
        v95 = *v89;
        v86 = v89[1];
        *v89 = v86;
        v89[1] = v95;
        --v89;
        if (v9 == ++v87) {
          goto LABEL_99;
        }
      }
      uint64_t v10 = v117;
LABEL_99:
      ++v9;
      v85 = v88 + 1;
      uint64_t v11 = v111;
      if (v9 == v115)
      {
        uint64_t v9 = v115;
        id v8 = v106;
        if (v115 < v111) {
          goto LABEL_143;
        }
LABEL_41:
        char v31 = v8;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          id v8 = v31;
        }
        else {
          id v8 = sub_214BE97A0(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        unint64_t v33 = *((void *)v8 + 2);
        unint64_t v32 = *((void *)v8 + 3);
        unint64_t v34 = v33 + 1;
        uint64_t v10 = v117;
        if (v33 >= v32 >> 1)
        {
          v96 = sub_214BE97A0((char *)(v32 > 1), v33 + 1, 1, v8);
          uint64_t v10 = v117;
          id v8 = v96;
        }
        *((void *)v8 + 2) = v34;
        uint64_t v35 = v8 + 32;
        uint64_t v36 = &v8[16 * v33 + 32];
        *(void *)uint64_t v36 = v11;
        *((void *)v36 + 1) = v9;
        if (v33)
        {
          uint64_t v114 = v9;
          while (1)
          {
            unint64_t v37 = v34 - 1;
            if (v34 >= 4)
            {
              char v42 = &v35[16 * v34];
              uint64_t v43 = *((void *)v42 - 8);
              uint64_t v44 = *((void *)v42 - 7);
              BOOL v48 = __OFSUB__(v44, v43);
              uint64_t v45 = v44 - v43;
              if (v48) {
                goto LABEL_128;
              }
              uint64_t v47 = *((void *)v42 - 6);
              uint64_t v46 = *((void *)v42 - 5);
              BOOL v48 = __OFSUB__(v46, v47);
              uint64_t v40 = v46 - v47;
              char v41 = v48;
              if (v48) {
                goto LABEL_129;
              }
              unint64_t v49 = v34 - 2;
              id v50 = &v35[16 * v34 - 32];
              uint64_t v52 = *(void *)v50;
              uint64_t v51 = *((void *)v50 + 1);
              BOOL v48 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              if (v48) {
                goto LABEL_131;
              }
              BOOL v48 = __OFADD__(v40, v53);
              uint64_t v54 = v40 + v53;
              if (v48) {
                goto LABEL_134;
              }
              if (v54 >= v45)
              {
                v72 = &v35[16 * v37];
                uint64_t v74 = *(void *)v72;
                uint64_t v73 = *((void *)v72 + 1);
                BOOL v48 = __OFSUB__(v73, v74);
                uint64_t v75 = v73 - v74;
                if (v48) {
                  goto LABEL_138;
                }
                BOOL v65 = v40 < v75;
                goto LABEL_78;
              }
            }
            else
            {
              if (v34 != 3)
              {
                uint64_t v66 = *((void *)v8 + 4);
                uint64_t v67 = *((void *)v8 + 5);
                BOOL v48 = __OFSUB__(v67, v66);
                uint64_t v59 = v67 - v66;
                char v60 = v48;
                goto LABEL_72;
              }
              uint64_t v39 = *((void *)v8 + 4);
              uint64_t v38 = *((void *)v8 + 5);
              BOOL v48 = __OFSUB__(v38, v39);
              uint64_t v40 = v38 - v39;
              char v41 = v48;
            }
            if (v41) {
              goto LABEL_130;
            }
            unint64_t v49 = v34 - 2;
            id v55 = &v35[16 * v34 - 32];
            uint64_t v57 = *(void *)v55;
            uint64_t v56 = *((void *)v55 + 1);
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v59 = v56 - v57;
            char v60 = v58;
            if (v58) {
              goto LABEL_133;
            }
            v61 = &v35[16 * v37];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v48 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v48) {
              goto LABEL_136;
            }
            if (__OFADD__(v59, v64)) {
              goto LABEL_137;
            }
            if (v59 + v64 >= v40)
            {
              BOOL v65 = v40 < v64;
LABEL_78:
              if (v65) {
                unint64_t v37 = v49;
              }
              goto LABEL_80;
            }
LABEL_72:
            if (v60) {
              goto LABEL_132;
            }
            v68 = &v35[16 * v37];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v48 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v48) {
              goto LABEL_135;
            }
            if (v71 < v59) {
              goto LABEL_89;
            }
LABEL_80:
            unint64_t v76 = v37 - 1;
            if (v37 - 1 >= v34)
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            if (!v10) {
              goto LABEL_149;
            }
            v77 = v8;
            v78 = &v35[16 * v76];
            uint64_t v79 = *(void *)v78;
            v80 = v35;
            unint64_t v81 = v37;
            v82 = &v35[16 * v37];
            uint64_t v83 = *((void *)v82 + 1);
            sub_214BE9430((id *)(v10 + 8 * *(void *)v78), (id *)(v10 + 8 * *(void *)v82), v10 + 8 * v83, v116, a1);
            if (v2) {
              goto LABEL_121;
            }
            if (v83 < v79) {
              goto LABEL_125;
            }
            if (v81 > *((void *)v77 + 2)) {
              goto LABEL_126;
            }
            *(void *)v78 = v79;
            *(void *)&v80[16 * v76 + 8] = v83;
            unint64_t v84 = *((void *)v77 + 2);
            if (v81 >= v84) {
              goto LABEL_127;
            }
            unint64_t v34 = v84 - 1;
            memmove(v82, v82 + 16, 16 * (v84 - 1 - v81));
            uint64_t v35 = v80;
            id v8 = v77;
            *((void *)v77 + 2) = v84 - 1;
            uint64_t v10 = v117;
            uint64_t v9 = v114;
            if (v84 <= 2) {
              goto LABEL_89;
            }
          }
        }
        unint64_t v34 = 1;
LABEL_89:
        uint64_t v3 = v113;
        if (v9 >= v113) {
          goto LABEL_105;
        }
        goto LABEL_13;
      }
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  sub_214D1A918();
  __break(1u);
}

void sub_214BE9328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void **, void **))
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a1;
    uint64_t v8 = *v4;
    uint64_t v9 = (void **)(*v4 + 8 * a3 - 8);
LABEL_4:
    uint64_t v10 = *(void **)(v8 + 8 * v6);
    int v18 = v9;
    while (1)
    {
      uint64_t v21 = v10;
      uint64_t v20 = *v9;
      uint64_t v11 = v20;
      id v12 = v10;
      id v13 = v11;
      char v14 = a4(&v21, &v20);

      if (v5) {
        break;
      }
      if (v14)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        id v15 = *v9;
        uint64_t v10 = v9[1];
        *uint64_t v9 = v10;
        v9[1] = v15;
        --v9;
        if (v6 != ++v7) {
          continue;
        }
      }
      ++v6;
      uint64_t v9 = v18 + 1;
      uint64_t v7 = a1;
      if (v6 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_214BE9430(id *__src, id *a2, unint64_t a3, id *a4, uint64_t (*a5)(id *, void **))
{
  uint64_t v6 = v5;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  BOOL v48 = __src;
  uint64_t v47 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 <= -8) {
      goto LABEL_50;
    }
    if (a4 != a2 || &a2[v14] <= a4) {
      memmove(a4, a2, 8 * v14);
    }
    unint64_t v25 = (char *)&a4[v14];
    uint64_t v46 = v25;
    BOOL v48 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_49:
      sub_214BE98A0((void **)&v48, (const void **)&v47, &v46);
      return 1;
    }
    uint64_t v26 = (id *)(a3 - 8);
    uint64_t v27 = v7;
    uint64_t v39 = v8;
    while (1)
    {
      char v42 = v7;
      unint64_t v28 = (unint64_t)v25;
      uint64_t v29 = v25 - 8;
      id v45 = (id)*((void *)v25 - 1);
      uint64_t v30 = *--v27;
      uint64_t v44 = v30;
      id v31 = v45;
      id v32 = v30;
      char v33 = a5(&v45, &v44);
      if (v6)
      {

        goto LABEL_49;
      }
      char v34 = v33;
      uint64_t v35 = v26 + 1;

      if (v34)
      {
        unint64_t v25 = (char *)v28;
        if (v35 != v42 || v26 >= v42) {
          *uint64_t v26 = *v27;
        }
        BOOL v48 = v27;
      }
      else
      {
        uint64_t v46 = v29;
        if ((unint64_t)v35 >= v28 && (unint64_t)v26 < v28)
        {
          unint64_t v36 = (unint64_t)v39;
          if (v35 != (id *)v28) {
            *uint64_t v26 = *(id *)v29;
          }
          unint64_t v37 = (char *)a4;
          uint64_t v27 = v42;
          unint64_t v25 = v29;
          uint64_t v6 = 0;
          goto LABEL_44;
        }
        *uint64_t v26 = *(id *)v29;
        uint64_t v27 = v42;
        unint64_t v25 = v29;
      }
      uint64_t v6 = 0;
      unint64_t v36 = (unint64_t)v39;
      unint64_t v37 = (char *)a4;
LABEL_44:
      if ((unint64_t)v27 > v36)
      {
        --v26;
        uint64_t v7 = v27;
        if (v25 > v37) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v9 > -8)
  {
    id v15 = a4;
    if (a4 != __src || &__src[v11] <= a4) {
      memmove(a4, __src, 8 * v11);
    }
    id v16 = (char *)&a4[v11];
    uint64_t v46 = v16;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        int v17 = v8;
        id v45 = *v7;
        uint64_t v44 = *v15;
        int v18 = v44;
        id v19 = v45;
        id v20 = v18;
        char v21 = a5(&v45, &v44);
        if (v5) {
          break;
        }
        char v22 = v21;

        if (v22)
        {
          id v23 = v7 + 1;
          int v24 = v17;
          if (v17 < v7 || v17 >= v23 || v17 != v7) {
            *int v17 = *v7;
          }
        }
        else
        {
          int v24 = v17;
          if (v17 != v15) {
            *int v17 = *v15;
          }
          uint64_t v47 = ++v15;
          id v23 = v7;
        }
        uint64_t v8 = v24 + 1;
        BOOL v48 = v8;
        if (v15 < (void **)v16)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

char *sub_214BE97A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784D868);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_214BE98A0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_214D1A988();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_214BE995C(uint64_t a1)
{
  return sub_214BE97A0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_214BE9970(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_214D1A948();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2166B02A0);
}

void *sub_214BE99EC(void *a1)
{
  return sub_214B874BC(0, a1[2], 0, a1);
}

uint64_t (*sub_214BE9A00(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_214BE9B1C(v6, a2, a3);
  return sub_214BE9A68;
}

uint64_t (*sub_214BE9A6C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_214BE9BA4(v6, a2, a3);
  return sub_214BE9A68;
}

void sub_214BE9AD4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_214BE9B1C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2166B0290](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_214BE9B9C;
  }
  __break(1u);
  return result;
}

void sub_214BE9B9C(id *a1)
{
}

uint64_t (*sub_214BE9BA4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x2166B0290](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_214BE9C24;
  }
  __break(1u);
  return result;
}

uint64_t sub_214BE9C24()
{
  return swift_release();
}

void sub_214BE9C2C()
{
}

uint64_t sub_214BE9C40(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214BE9C88(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_214B6B4A4;
  return sub_214BE5D50(a1, a2, v7, v6);
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_214BE9D88(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_214B6A55C;
  *(_OWORD *)(v4 + 144) = v5;
  *(void *)(v4 + 136) = a1;
  return MEMORY[0x270FA2498](sub_214BE6598, 0, 0);
}

uint64_t sub_214BE9E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_214BE9EA4()
{
  unint64_t result = qword_26784D860;
  if (!qword_26784D860)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784D840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D860);
  }
  return result;
}

uint64_t sub_214BE9F00(void **a1, void **a2)
{
  return sub_214BE354C(a1, a2) & 1;
}

uint64_t sub_214BE9F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BE9F88(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v25 = *MEMORY[0x263EF8340];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      break;
    }
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_214B67D50(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      __break(1u);
    }
    uint64_t v6 = 0;
    uint64_t v5 = v24;
    unint64_t v22 = v3 & 0xC000000000000001;
    a2 = (void *)a2[16];
    while (v4 != v6)
    {
      if (v22) {
        id v7 = (id)MEMORY[0x2166B0290](v6, v3);
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v23 = 0;
      id v9 = objc_msgSend(a2, sel_getPhoneNumber_error_, v7, &v23);
      if (!v9)
      {
        id v20 = v23;
        sub_214D199B8();

        swift_willThrow();
        swift_release();

        return v5;
      }
      uint64_t v10 = v9;
      unint64_t v11 = v3;
      id v12 = v23;
      id v13 = objc_msgSend(v10, sel_number);

      uint64_t v14 = sub_214D1A038();
      uint64_t v16 = v15;

      uint64_t v24 = v5;
      unint64_t v18 = *(void *)(v5 + 16);
      unint64_t v17 = *(void *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_214B67D50(v17 > 1, v18 + 1, 1);
        uint64_t v5 = v24;
      }
      ++v6;
      *(void *)(v5 + 16) = v18 + 1;
      uint64_t v19 = v5 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      unint64_t v3 = v11;
      if (v4 == v6) {
        return v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_214D1A948();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_214BEA1B4(void **a1, void **a2)
{
  return sub_214BE9F00(a1, a2) & 1;
}

Swift::String_optional __swiftcall ODIAssessmentResult.trainingSignalID()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x270FA5388](v2, v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  id v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_214B79530(v1, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_214BEA374((uint64_t)v5, type metadata accessor for ODIAssessmentResult);
    uint64_t v10 = 0;
    unint64_t v11 = 0;
  }
  else
  {
    sub_214BEA310((uint64_t)v5, (uint64_t)v9);
    uint64_t v10 = *v9;
    unint64_t v11 = (void *)v9[1];
    swift_bridgeObjectRetain();
    sub_214BEA374((uint64_t)v9, type metadata accessor for ODIAssessment);
  }
  uint64_t v12 = v10;
  id v13 = v11;
  result.value._object = v13;
  result.value._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_214BEA310(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODIAssessment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BEA374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL ODIAssessmentResult.isSuccessful.getter()
{
  uint64_t v1 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B79530(v0, (uint64_t)v4);
  BOOL v5 = swift_getEnumCaseMultiPayload() != 1;
  sub_214BEA374((uint64_t)v4, type metadata accessor for ODIAssessmentResult);
  return v5;
}

BOOL sub_214BEA488(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_214BEA498()
{
  return sub_214D1AD18();
}

uint64_t sub_214BEA4C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214BEA5B8()
{
  return sub_214D1AD48();
}

uint64_t sub_214BEA600(char a1)
{
  if (a1) {
    return 0x646F43726F727265;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_214BEA638(void *a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 32);
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = v4;
  long long v17 = v14;
  long long v18 = v4;
  type metadata accessor for ArmandDeviceDataField.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_214D1AB48();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  id v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v13[1];
  sub_214D1AD88();
  LOBYTE(v17) = 0;
  uint64_t v11 = v16;
  sub_214D1AAE8();
  if (!v11)
  {
    LOBYTE(v17) = *(unsigned char *)(v10 + *(int *)(a2 + 52));
    char v19 = 1;
    sub_214BEE504();
    sub_214D1AB38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_214BEA808@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v29 = a6;
  uint64_t v11 = sub_214D1A5D8();
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11, v12);
  id v32 = (char *)&v29 - v13;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  type metadata accessor for ArmandDeviceDataField.CodingKeys();
  swift_getWitnessTable();
  uint64_t v14 = sub_214D1AA88();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v14, v15);
  long long v17 = (char *)&v29 - v16;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v31 = a3;
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v18 = type metadata accessor for ArmandDeviceDataField();
  uint64_t v30 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v19);
  char v21 = (char *)&v29 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))((char *)&v29 - v20, 1, 1, a2);
  uint64_t v22 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  uint64_t v23 = v38;
  sub_214D1AD78();
  if (v23)
  {
    uint64_t v27 = v36;
    uint64_t v26 = v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v21, v26);
  }
  else
  {
    uint64_t v24 = v30;
    LOBYTE(v39) = 0;
    uint64_t v25 = v32;
    sub_214D1AA18();
    (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v21, v25, v37);
    char v43 = 1;
    sub_214BEE4B0();
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    v21[*(int *)(v18 + 52)] = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v29, v21, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v18);
  }
}

BOOL sub_214BEABF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214BEA488(*a1, *a2);
}

uint64_t sub_214BEAC08()
{
  return sub_214BEA5B8();
}

uint64_t sub_214BEAC1C()
{
  return sub_214BEA498();
}

uint64_t sub_214BEAC30()
{
  return sub_214D1AD48();
}

uint64_t sub_214BEAC7C()
{
  return sub_214BEA600(*v0);
}

uint64_t sub_214BEAC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214BEA4C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214BEACC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214B6F478();
  *a1 = result;
  return result;
}

uint64_t sub_214BEACF8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_214BEAD4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_214BEADA0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_214BEA808(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_214BEADC4(void *a1, uint64_t a2)
{
  return sub_214BEA638(a1, a2);
}

unint64_t sub_214BEADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  MEMORY[0x270FA5388](v6 - 8, v7);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ODIKnownBinding();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = *v2;
  uint64_t v15 = *((unsigned __int8 *)v3 + 8);
  if (!v14 || !*(void *)(v14 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  v26[0] = (uint64_t)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_214B87FEC(a1, a2);
  if (v17)
  {
    sub_214B9163C(*(void *)(v14 + 56) + *(void *)(v11 + 72) * v16, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:
    sub_214BED6F0((uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x646F43726F727265;
    *(void *)(inited + 40) = 0xE900000000000065;
    if ((v15 + 47) >= 9u)
    {
      uint64_t v19 = -1;
      switch(v15)
      {
        case 1:
          uint64_t v19 = -2;
          break;
        case 2:
          uint64_t v19 = -3;
          break;
        case 3:
          uint64_t v19 = -4;
          break;
        case 4:
          uint64_t v19 = -5;
          break;
        case 5:
          uint64_t v19 = -6;
          break;
        case 6:
          uint64_t v19 = -7;
          break;
        case 7:
          uint64_t v19 = -8;
          break;
        case 8:
          uint64_t v19 = -9;
          break;
        case 9:
          uint64_t v19 = -10;
          break;
        case 10:
          uint64_t v19 = -11;
          break;
        case 11:
          uint64_t v19 = -12;
          break;
        case 12:
          uint64_t v19 = -13;
          break;
        case 13:
          uint64_t v19 = -14;
          break;
        case 14:
          uint64_t v19 = -15;
          break;
        case 15:
          uint64_t v19 = -16;
          break;
        case 16:
          uint64_t v19 = -17;
          break;
        case 17:
          uint64_t v19 = -18;
          break;
        case 18:
          uint64_t v19 = -19;
          break;
        case 19:
          uint64_t v19 = -20;
          break;
        case 20:
          uint64_t v19 = -21;
          break;
        case 21:
          uint64_t v19 = -22;
          break;
        case 22:
          uint64_t v19 = -28;
          break;
        case 23:
          uint64_t v19 = -29;
          break;
        case 24:
          uint64_t v19 = 200;
          break;
        case 25:
          uint64_t v19 = 20000;
          break;
        case 26:
          uint64_t v19 = 20001;
          break;
        case 27:
          uint64_t v19 = 20100;
          break;
        case 28:
          uint64_t v19 = 40000;
          break;
        case 29:
          uint64_t v19 = 40010;
          break;
        case 30:
          uint64_t v19 = 40011;
          break;
        case 31:
          uint64_t v19 = 40012;
          break;
        case 32:
          uint64_t v19 = 40013;
          break;
        case 33:
          uint64_t v19 = 40014;
          break;
        case 34:
          uint64_t v19 = 40015;
          break;
        case 35:
          uint64_t v19 = 40020;
          break;
        case 36:
          uint64_t v19 = 40021;
          break;
        case 37:
          uint64_t v19 = 40022;
          break;
        case 38:
          uint64_t v19 = 40023;
          break;
        case 39:
          uint64_t v19 = 40024;
          break;
        case 40:
          uint64_t v19 = 40025;
          break;
        case 41:
          uint64_t v19 = 40026;
          break;
        case 42:
          uint64_t v19 = 40027;
          break;
        case 43:
          uint64_t v19 = 40028;
          break;
        case 44:
          uint64_t v19 = 40029;
          break;
        case 45:
          uint64_t v19 = 40030;
          break;
        case 46:
          uint64_t v19 = 40101;
          break;
        case 47:
          uint64_t v19 = 40102;
          break;
        case 48:
          uint64_t v19 = 40200;
          break;
        case 49:
          uint64_t v19 = 40201;
          break;
        case 50:
          uint64_t v19 = 40205;
          break;
        case 51:
          uint64_t v19 = 40401;
          break;
        case 52:
          uint64_t v19 = 40402;
          break;
        case 53:
          uint64_t v19 = 40403;
          break;
        case 54:
          uint64_t v19 = 40404;
          break;
        case 55:
          uint64_t v19 = 40500;
          break;
        case 56:
          uint64_t v19 = 40600;
          break;
        case 57:
          uint64_t v19 = 40601;
          break;
        case 58:
          uint64_t v19 = 50000;
          break;
        case 59:
          uint64_t v19 = 50001;
          break;
        case 60:
          uint64_t v19 = 50002;
          break;
        case 61:
          uint64_t v19 = 99991;
          break;
        case 62:
          uint64_t v19 = 99992;
          break;
        case 63:
          uint64_t v19 = 99993;
          break;
        case 64:
          uint64_t v19 = -1101;
          break;
        case 65:
          uint64_t v19 = -1102;
          break;
        case 66:
          uint64_t v19 = -1103;
          break;
        case 67:
          uint64_t v19 = -1104;
          break;
        case 68:
          uint64_t v19 = -1110;
          break;
        case 69:
          uint64_t v19 = -1111;
          break;
        case 70:
          uint64_t v19 = -1112;
          break;
        case 71:
          uint64_t v19 = -1113;
          break;
        case 72:
          uint64_t v19 = -1114;
          break;
        case 73:
          uint64_t v19 = -1115;
          break;
        case 74:
          uint64_t v19 = -1116;
          break;
        case 75:
          uint64_t v19 = -1117;
          break;
        case 76:
          uint64_t v19 = -1118;
          break;
        case 77:
          uint64_t v19 = -1119;
          break;
        case 78:
          uint64_t v19 = -1201;
          break;
        case 79:
          uint64_t v19 = -1202;
          break;
        case 80:
          uint64_t v19 = -1203;
          break;
        case 81:
          uint64_t v19 = -1204;
          break;
        case 82:
          uint64_t v19 = -1402;
          break;
        case 83:
          uint64_t v19 = -1403;
          break;
        case 84:
          uint64_t v19 = -1404;
          break;
        case 85:
          uint64_t v19 = -1301;
          break;
        case 86:
          uint64_t v19 = -1302;
          break;
        case 87:
          uint64_t v19 = -1303;
          break;
        case 88:
          uint64_t v19 = -1304;
          break;
        case 89:
          uint64_t v19 = -1305;
          break;
        case 90:
          uint64_t v19 = -1306;
          break;
        case 91:
          uint64_t v19 = -1307;
          break;
        case 92:
          uint64_t v19 = -1308;
          break;
        case 93:
          uint64_t v19 = -1309;
          break;
        case 94:
          uint64_t v19 = -1310;
          break;
        case 95:
          uint64_t v19 = -1315;
          break;
        case 96:
          uint64_t v19 = -1316;
          break;
        case 97:
          uint64_t v19 = -1317;
          break;
        case 98:
          uint64_t v19 = -131600;
          break;
        case 99:
          uint64_t v19 = -2103;
          break;
        case 100:
          uint64_t v19 = -2104;
          break;
        case 101:
          uint64_t v19 = -2107;
          break;
        case 102:
          uint64_t v19 = -2110;
          break;
        case 103:
          uint64_t v19 = -2111;
          break;
        case 104:
          uint64_t v19 = -2112;
          break;
        case 105:
          uint64_t v19 = -2123;
          break;
        case 106:
          uint64_t v19 = -2124;
          break;
        case 107:
          uint64_t v19 = -2125;
          break;
        case 108:
          uint64_t v19 = -2126;
          break;
        case 109:
          uint64_t v19 = -2127;
          break;
        case 110:
          uint64_t v19 = -3101;
          break;
        case 111:
          uint64_t v19 = -3102;
          break;
        case 112:
          uint64_t v19 = -3103;
          break;
        case 113:
          uint64_t v19 = -3104;
          break;
        case 114:
          uint64_t v19 = -3105;
          break;
        case 115:
          uint64_t v19 = -3106;
          break;
        case 116:
          uint64_t v19 = -3107;
          break;
        case 117:
          uint64_t v19 = -3108;
          break;
        case 118:
          uint64_t v19 = -3109;
          break;
        case 119:
          uint64_t v19 = -3110;
          break;
        case 120:
          uint64_t v19 = -3111;
          break;
        case 121:
          uint64_t v19 = -3112;
          break;
        case 122:
          uint64_t v19 = -3113;
          break;
        case 123:
          uint64_t v19 = -3151;
          break;
        case 124:
          uint64_t v19 = -3152;
          break;
        case 125:
          uint64_t v19 = -3153;
          break;
        case 126:
          uint64_t v19 = -3154;
          break;
        case 127:
          uint64_t v19 = -3155;
          break;
        case 128:
          uint64_t v19 = -3156;
          break;
        case 129:
          uint64_t v19 = -3157;
          break;
        case 130:
          uint64_t v19 = -3158;
          break;
        case 131:
          uint64_t v19 = -3159;
          break;
        case 132:
          uint64_t v19 = -3161;
          break;
        case 133:
          uint64_t v19 = -3162;
          break;
        case 134:
          uint64_t v19 = -3163;
          break;
        case 135:
          uint64_t v19 = -3164;
          break;
        case 136:
          uint64_t v19 = -3165;
          break;
        case 137:
          uint64_t v19 = -3166;
          break;
        case 138:
          uint64_t v19 = -3167;
          break;
        case 139:
          uint64_t v19 = -3168;
          break;
        case 140:
          uint64_t v19 = -3169;
          break;
        case 141:
          uint64_t v19 = -3170;
          break;
        case 142:
          uint64_t v19 = -3171;
          break;
        case 143:
          uint64_t v19 = -3172;
          break;
        case 144:
          uint64_t v19 = -3173;
          break;
        case 145:
          uint64_t v19 = -3174;
          break;
        case 146:
          uint64_t v19 = -3175;
          break;
        case 147:
          uint64_t v19 = -3176;
          break;
        case 148:
          uint64_t v19 = -3177;
          break;
        case 149:
          uint64_t v19 = -3178;
          break;
        case 150:
          uint64_t v19 = -3179;
          break;
        case 151:
          uint64_t v19 = -3180;
          break;
        case 152:
          uint64_t v19 = -3181;
          break;
        case 153:
          uint64_t v19 = -3182;
          break;
        case 154:
          uint64_t v19 = -3183;
          break;
        case 155:
          uint64_t v19 = -3184;
          break;
        case 156:
          uint64_t v19 = -3185;
          break;
        case 157:
          uint64_t v19 = -3186;
          break;
        case 158:
          uint64_t v19 = -3187;
          break;
        case 159:
          uint64_t v19 = -3188;
          break;
        case 160:
          uint64_t v19 = -3189;
          break;
        case 161:
          uint64_t v19 = -3300;
          break;
        case 162:
          uint64_t v19 = -5108;
          break;
        case 163:
          uint64_t v19 = -6009;
          break;
        case 164:
          uint64_t v19 = -6010;
          break;
        case 165:
          uint64_t v19 = -6102;
          break;
        case 166:
          uint64_t v19 = -6103;
          break;
        case 167:
          uint64_t v19 = -6104;
          break;
        case 168:
          uint64_t v19 = -6105;
          break;
        case 169:
          uint64_t v19 = -8001;
          break;
        case 170:
          uint64_t v19 = -8301;
          break;
        case 171:
          uint64_t v19 = -8304;
          break;
        case 172:
          uint64_t v19 = -8400;
          break;
        case 173:
          uint64_t v19 = -8401;
          break;
        case 174:
          uint64_t v19 = -8403;
          break;
        case 175:
          uint64_t v19 = -8404;
          break;
        case 176:
          uint64_t v19 = -8428;
          break;
        case 177:
          uint64_t v19 = -8429;
          break;
        case 178:
          uint64_t v19 = -8433;
          break;
        case 179:
          uint64_t v19 = -8434;
          break;
        case 180:
          uint64_t v19 = -8500;
          break;
        case 181:
          uint64_t v19 = -8501;
          break;
        case 182:
          uint64_t v19 = -8502;
          break;
        case 183:
          uint64_t v19 = -8503;
          break;
        case 184:
          uint64_t v19 = -8504;
          break;
        case 185:
          uint64_t v19 = -22200;
          break;
        case 186:
          uint64_t v19 = -22201;
          break;
        case 187:
          uint64_t v19 = -22202;
          break;
        case 188:
          uint64_t v19 = -22203;
          break;
        case 189:
          uint64_t v19 = -22204;
          break;
        case 190:
          uint64_t v19 = -22205;
          break;
        case 191:
          uint64_t v19 = -22206;
          break;
        case 192:
          uint64_t v19 = -22207;
          break;
        case 193:
          uint64_t v19 = -22208;
          break;
        case 194:
          uint64_t v19 = -72200;
          break;
        case 195:
          uint64_t v19 = -72201;
          break;
        case 196:
          uint64_t v19 = -72202;
          break;
        case 197:
          uint64_t v19 = -72203;
          break;
        case 198:
          uint64_t v19 = -72204;
          break;
        case 199:
          uint64_t v19 = -72205;
          break;
        case 200:
          uint64_t v19 = -72206;
          break;
        case 201:
          uint64_t v19 = -72207;
          break;
        case 202:
          uint64_t v19 = -72208;
          break;
        case 203:
          uint64_t v19 = -72209;
          break;
        case 204:
          uint64_t v19 = -72210;
          break;
        case 205:
          uint64_t v19 = -72211;
          break;
        case 206:
          uint64_t v19 = -72780;
          break;
        case 207:
          uint64_t v19 = -72781;
          break;
        case 208:
          uint64_t v19 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v19 = -(uint64_t)(v15 + 47);
    }
    uint64_t v20 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 80) = v20;
    *(void *)(inited + 48) = v19;
    return sub_214B7E450(inited);
  }
  sub_214B915D8((uint64_t)v9, v26[0]);
  sub_214C7D3A8(v27);
  __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_214D1C1F0;
  *(void *)(v23 + 32) = 0x65756C6176;
  *(void *)(v23 + 40) = 0xE500000000000000;
  sub_214B93DCC((uint64_t)v27, v23 + 48);
  *(void *)(v23 + 88) = 0x646F43726F727265;
  *(void *)(v23 + 96) = 0xE900000000000065;
  if ((v15 + 47) >= 9u)
  {
    uint64_t v24 = -1;
    switch(v15)
    {
      case 1:
        uint64_t v24 = -2;
        break;
      case 2:
        uint64_t v24 = -3;
        break;
      case 3:
        uint64_t v24 = -4;
        break;
      case 4:
        uint64_t v24 = -5;
        break;
      case 5:
        uint64_t v24 = -6;
        break;
      case 6:
        uint64_t v24 = -7;
        break;
      case 7:
        uint64_t v24 = -8;
        break;
      case 8:
        uint64_t v24 = -9;
        break;
      case 9:
        uint64_t v24 = -10;
        break;
      case 10:
        uint64_t v24 = -11;
        break;
      case 11:
        uint64_t v24 = -12;
        break;
      case 12:
        uint64_t v24 = -13;
        break;
      case 13:
        uint64_t v24 = -14;
        break;
      case 14:
        uint64_t v24 = -15;
        break;
      case 15:
        uint64_t v24 = -16;
        break;
      case 16:
        uint64_t v24 = -17;
        break;
      case 17:
        uint64_t v24 = -18;
        break;
      case 18:
        uint64_t v24 = -19;
        break;
      case 19:
        uint64_t v24 = -20;
        break;
      case 20:
        uint64_t v24 = -21;
        break;
      case 21:
        uint64_t v24 = -22;
        break;
      case 22:
        uint64_t v24 = -28;
        break;
      case 23:
        uint64_t v24 = -29;
        break;
      case 24:
        uint64_t v24 = 200;
        break;
      case 25:
        uint64_t v24 = 20000;
        break;
      case 26:
        uint64_t v24 = 20001;
        break;
      case 27:
        uint64_t v24 = 20100;
        break;
      case 28:
        uint64_t v24 = 40000;
        break;
      case 29:
        uint64_t v24 = 40010;
        break;
      case 30:
        uint64_t v24 = 40011;
        break;
      case 31:
        uint64_t v24 = 40012;
        break;
      case 32:
        uint64_t v24 = 40013;
        break;
      case 33:
        uint64_t v24 = 40014;
        break;
      case 34:
        uint64_t v24 = 40015;
        break;
      case 35:
        uint64_t v24 = 40020;
        break;
      case 36:
        uint64_t v24 = 40021;
        break;
      case 37:
        uint64_t v24 = 40022;
        break;
      case 38:
        uint64_t v24 = 40023;
        break;
      case 39:
        uint64_t v24 = 40024;
        break;
      case 40:
        uint64_t v24 = 40025;
        break;
      case 41:
        uint64_t v24 = 40026;
        break;
      case 42:
        uint64_t v24 = 40027;
        break;
      case 43:
        uint64_t v24 = 40028;
        break;
      case 44:
        uint64_t v24 = 40029;
        break;
      case 45:
        uint64_t v24 = 40030;
        break;
      case 46:
        uint64_t v24 = 40101;
        break;
      case 47:
        uint64_t v24 = 40102;
        break;
      case 48:
        uint64_t v24 = 40200;
        break;
      case 49:
        uint64_t v24 = 40201;
        break;
      case 50:
        uint64_t v24 = 40205;
        break;
      case 51:
        uint64_t v24 = 40401;
        break;
      case 52:
        uint64_t v24 = 40402;
        break;
      case 53:
        uint64_t v24 = 40403;
        break;
      case 54:
        uint64_t v24 = 40404;
        break;
      case 55:
        uint64_t v24 = 40500;
        break;
      case 56:
        uint64_t v24 = 40600;
        break;
      case 57:
        uint64_t v24 = 40601;
        break;
      case 58:
        uint64_t v24 = 50000;
        break;
      case 59:
        uint64_t v24 = 50001;
        break;
      case 60:
        uint64_t v24 = 50002;
        break;
      case 61:
        uint64_t v24 = 99991;
        break;
      case 62:
        uint64_t v24 = 99992;
        break;
      case 63:
        uint64_t v24 = 99993;
        break;
      case 64:
        uint64_t v24 = -1101;
        break;
      case 65:
        uint64_t v24 = -1102;
        break;
      case 66:
        uint64_t v24 = -1103;
        break;
      case 67:
        uint64_t v24 = -1104;
        break;
      case 68:
        uint64_t v24 = -1110;
        break;
      case 69:
        uint64_t v24 = -1111;
        break;
      case 70:
        uint64_t v24 = -1112;
        break;
      case 71:
        uint64_t v24 = -1113;
        break;
      case 72:
        uint64_t v24 = -1114;
        break;
      case 73:
        uint64_t v24 = -1115;
        break;
      case 74:
        uint64_t v24 = -1116;
        break;
      case 75:
        uint64_t v24 = -1117;
        break;
      case 76:
        uint64_t v24 = -1118;
        break;
      case 77:
        uint64_t v24 = -1119;
        break;
      case 78:
        uint64_t v24 = -1201;
        break;
      case 79:
        uint64_t v24 = -1202;
        break;
      case 80:
        uint64_t v24 = -1203;
        break;
      case 81:
        uint64_t v24 = -1204;
        break;
      case 82:
        uint64_t v24 = -1402;
        break;
      case 83:
        uint64_t v24 = -1403;
        break;
      case 84:
        uint64_t v24 = -1404;
        break;
      case 85:
        uint64_t v24 = -1301;
        break;
      case 86:
        uint64_t v24 = -1302;
        break;
      case 87:
        uint64_t v24 = -1303;
        break;
      case 88:
        uint64_t v24 = -1304;
        break;
      case 89:
        uint64_t v24 = -1305;
        break;
      case 90:
        uint64_t v24 = -1306;
        break;
      case 91:
        uint64_t v24 = -1307;
        break;
      case 92:
        uint64_t v24 = -1308;
        break;
      case 93:
        uint64_t v24 = -1309;
        break;
      case 94:
        uint64_t v24 = -1310;
        break;
      case 95:
        uint64_t v24 = -1315;
        break;
      case 96:
        uint64_t v24 = -1316;
        break;
      case 97:
        uint64_t v24 = -1317;
        break;
      case 98:
        uint64_t v24 = -131600;
        break;
      case 99:
        uint64_t v24 = -2103;
        break;
      case 100:
        uint64_t v24 = -2104;
        break;
      case 101:
        uint64_t v24 = -2107;
        break;
      case 102:
        uint64_t v24 = -2110;
        break;
      case 103:
        uint64_t v24 = -2111;
        break;
      case 104:
        uint64_t v24 = -2112;
        break;
      case 105:
        uint64_t v24 = -2123;
        break;
      case 106:
        uint64_t v24 = -2124;
        break;
      case 107:
        uint64_t v24 = -2125;
        break;
      case 108:
        uint64_t v24 = -2126;
        break;
      case 109:
        uint64_t v24 = -2127;
        break;
      case 110:
        uint64_t v24 = -3101;
        break;
      case 111:
        uint64_t v24 = -3102;
        break;
      case 112:
        uint64_t v24 = -3103;
        break;
      case 113:
        uint64_t v24 = -3104;
        break;
      case 114:
        uint64_t v24 = -3105;
        break;
      case 115:
        uint64_t v24 = -3106;
        break;
      case 116:
        uint64_t v24 = -3107;
        break;
      case 117:
        uint64_t v24 = -3108;
        break;
      case 118:
        uint64_t v24 = -3109;
        break;
      case 119:
        uint64_t v24 = -3110;
        break;
      case 120:
        uint64_t v24 = -3111;
        break;
      case 121:
        uint64_t v24 = -3112;
        break;
      case 122:
        uint64_t v24 = -3113;
        break;
      case 123:
        uint64_t v24 = -3151;
        break;
      case 124:
        uint64_t v24 = -3152;
        break;
      case 125:
        uint64_t v24 = -3153;
        break;
      case 126:
        uint64_t v24 = -3154;
        break;
      case 127:
        uint64_t v24 = -3155;
        break;
      case 128:
        uint64_t v24 = -3156;
        break;
      case 129:
        uint64_t v24 = -3157;
        break;
      case 130:
        uint64_t v24 = -3158;
        break;
      case 131:
        uint64_t v24 = -3159;
        break;
      case 132:
        uint64_t v24 = -3161;
        break;
      case 133:
        uint64_t v24 = -3162;
        break;
      case 134:
        uint64_t v24 = -3163;
        break;
      case 135:
        uint64_t v24 = -3164;
        break;
      case 136:
        uint64_t v24 = -3165;
        break;
      case 137:
        uint64_t v24 = -3166;
        break;
      case 138:
        uint64_t v24 = -3167;
        break;
      case 139:
        uint64_t v24 = -3168;
        break;
      case 140:
        uint64_t v24 = -3169;
        break;
      case 141:
        uint64_t v24 = -3170;
        break;
      case 142:
        uint64_t v24 = -3171;
        break;
      case 143:
        uint64_t v24 = -3172;
        break;
      case 144:
        uint64_t v24 = -3173;
        break;
      case 145:
        uint64_t v24 = -3174;
        break;
      case 146:
        uint64_t v24 = -3175;
        break;
      case 147:
        uint64_t v24 = -3176;
        break;
      case 148:
        uint64_t v24 = -3177;
        break;
      case 149:
        uint64_t v24 = -3178;
        break;
      case 150:
        uint64_t v24 = -3179;
        break;
      case 151:
        uint64_t v24 = -3180;
        break;
      case 152:
        uint64_t v24 = -3181;
        break;
      case 153:
        uint64_t v24 = -3182;
        break;
      case 154:
        uint64_t v24 = -3183;
        break;
      case 155:
        uint64_t v24 = -3184;
        break;
      case 156:
        uint64_t v24 = -3185;
        break;
      case 157:
        uint64_t v24 = -3186;
        break;
      case 158:
        uint64_t v24 = -3187;
        break;
      case 159:
        uint64_t v24 = -3188;
        break;
      case 160:
        uint64_t v24 = -3189;
        break;
      case 161:
        uint64_t v24 = -3300;
        break;
      case 162:
        uint64_t v24 = -5108;
        break;
      case 163:
        uint64_t v24 = -6009;
        break;
      case 164:
        uint64_t v24 = -6010;
        break;
      case 165:
        uint64_t v24 = -6102;
        break;
      case 166:
        uint64_t v24 = -6103;
        break;
      case 167:
        uint64_t v24 = -6104;
        break;
      case 168:
        uint64_t v24 = -6105;
        break;
      case 169:
        uint64_t v24 = -8001;
        break;
      case 170:
        uint64_t v24 = -8301;
        break;
      case 171:
        uint64_t v24 = -8304;
        break;
      case 172:
        uint64_t v24 = -8400;
        break;
      case 173:
        uint64_t v24 = -8401;
        break;
      case 174:
        uint64_t v24 = -8403;
        break;
      case 175:
        uint64_t v24 = -8404;
        break;
      case 176:
        uint64_t v24 = -8428;
        break;
      case 177:
        uint64_t v24 = -8429;
        break;
      case 178:
        uint64_t v24 = -8433;
        break;
      case 179:
        uint64_t v24 = -8434;
        break;
      case 180:
        uint64_t v24 = -8500;
        break;
      case 181:
        uint64_t v24 = -8501;
        break;
      case 182:
        uint64_t v24 = -8502;
        break;
      case 183:
        uint64_t v24 = -8503;
        break;
      case 184:
        uint64_t v24 = -8504;
        break;
      case 185:
        uint64_t v24 = -22200;
        break;
      case 186:
        uint64_t v24 = -22201;
        break;
      case 187:
        uint64_t v24 = -22202;
        break;
      case 188:
        uint64_t v24 = -22203;
        break;
      case 189:
        uint64_t v24 = -22204;
        break;
      case 190:
        uint64_t v24 = -22205;
        break;
      case 191:
        uint64_t v24 = -22206;
        break;
      case 192:
        uint64_t v24 = -22207;
        break;
      case 193:
        uint64_t v24 = -22208;
        break;
      case 194:
        uint64_t v24 = -72200;
        break;
      case 195:
        uint64_t v24 = -72201;
        break;
      case 196:
        uint64_t v24 = -72202;
        break;
      case 197:
        uint64_t v24 = -72203;
        break;
      case 198:
        uint64_t v24 = -72204;
        break;
      case 199:
        uint64_t v24 = -72205;
        break;
      case 200:
        uint64_t v24 = -72206;
        break;
      case 201:
        uint64_t v24 = -72207;
        break;
      case 202:
        uint64_t v24 = -72208;
        break;
      case 203:
        uint64_t v24 = -72209;
        break;
      case 204:
        uint64_t v24 = -72210;
        break;
      case 205:
        uint64_t v24 = -72211;
        break;
      case 206:
        uint64_t v24 = -72780;
        break;
      case 207:
        uint64_t v24 = -72781;
        break;
      case 208:
        uint64_t v24 = -72782;
        break;
      default:
        break;
    }
  }
  else
  {
    uint64_t v24 = -(uint64_t)(v15 + 47);
  }
  uint64_t v25 = MEMORY[0x263F8D6D8];
  *(void *)(v23 + 128) = MEMORY[0x263F8D6C8];
  *(void *)(v23 + 136) = v25;
  *(void *)(v23 + 104) = v24;
  unint64_t v21 = sub_214B7E450(v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  sub_214BED750(v26[0]);
  return v21;
}

uint64_t sub_214BEC5DC(uint64_t a1, uint64_t a2)
{
  sub_214D1A5D8();
  sub_214D1A5E8();
  if ((*(unsigned char *)(v2 + *(int *)(a2 + 52)) + 47) >= 9u) {
    sub_214D1AD18();
  }
  return sub_214D1AD18();
}

uint64_t sub_214BED0CC(uint64_t a1)
{
  sub_214D1AD08();
  sub_214BEC5DC((uint64_t)v3, a1);
  return sub_214D1AD48();
}

uint64_t sub_214BED11C(uint64_t a1, uint64_t a2)
{
  sub_214D1AD08();
  sub_214BEC5DC((uint64_t)v4, a2);
  return sub_214D1AD48();
}

uint64_t sub_214BED160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v57 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_214D1A5D8();
  uint64_t v59 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v13);
  BOOL v58 = (char *)&v47 - v14;
  uint64_t v54 = v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v52 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2, v17);
  id v55 = (char *)&v47 - v18;
  uint64_t v56 = a3;
  v61[0] = a3;
  v61[1] = a4;
  v61[2] = a5;
  v61[3] = a6;
  uint64_t v51 = a6;
  uint64_t v19 = type metadata accessor for ArmandDeviceDataField();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19, v21);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v22, v25);
  unint64_t v28 = (char *)&v47 - v27;
  uint64_t v29 = *(int *)(v26 + 52);
  LOBYTE(v61[0]) = *(unsigned char *)(a1 + v29);
  char v60 = *(unsigned char *)(a2 + v29);
  BOOL v30 = _s17CoreODIEssentials25ArmandDeviceDataErrorCodeO2eeoiySbAC_ACtFZ_0(v61, &v60);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v31(v28, a1, v19);
  v31(v24, a2, v19);
  if (!v30)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v20 + 8);
    v40(v24, v19);
    v40(v28, v19);
LABEL_9:
    char v39 = 0;
    return v39 & 1;
  }
  uint64_t v48 = TupleTypeMetadata2;
  uint64_t v33 = v54;
  id v32 = v55;
  uint64_t v34 = &v55[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v35(v55, v28, v54);
  id v50 = v34;
  v35(v34, v24, v33);
  uint64_t v36 = v56;
  unint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  if (v49(v32, 1, v56) != 1)
  {
    v35(v58, v32, v33);
    int v41 = v49(v50, 1, v36);
    uint64_t v42 = v57;
    char v43 = v58;
    if (v41 != 1)
    {
      (*(void (**)(void))(v57 + 32))();
      char v39 = sub_214D1A018();
      uint64_t v57 = *(void *)(v42 + 8);
      ((void (*)(char *, uint64_t))v57)(v53, v36);
      uint64_t v46 = *(void (**)(char *, uint64_t))(v20 + 8);
      v46(v24, v19);
      v46(v28, v19);
      ((void (*)(char *, uint64_t))v57)(v58, v36);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v33);
      return v39 & 1;
    }
    uint64_t v37 = v32;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v20 + 8);
    v44(v24, v19);
    v44(v28, v19);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v36);
    goto LABEL_8;
  }
  uint64_t v37 = v32;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v20 + 8);
  v38(v24, v19);
  v38(v28, v19);
  if (v49(v50, 1, v36) != 1)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v48);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v33);
  char v39 = 1;
  return v39 & 1;
}

uint64_t sub_214BED6C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_214BED160(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_214BED6D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_214BED6F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_214BED750(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ArmandDeviceDataField()
{
  return swift_getGenericMetadata();
}

uint64_t sub_214BED7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_214BED7CC()
{
  uint64_t result = sub_214D1A5D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_214BED864(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    *((unsigned char *)a1 + v7) = *((unsigned char *)a2 + v7);
  }
  return a1;
}

uint64_t sub_214BED9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_214BEDA6C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *sub_214BEDB7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  return a1;
}

void *sub_214BEDD0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    size_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *sub_214BEDE1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  return a1;
}

uint64_t sub_214BEDFAC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x26) {
    unsigned int v7 = 38;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v10 = v8 + 1;
  char v11 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_28:
      if (v6 < 0x26)
      {
        unsigned int v17 = *((unsigned __int8 *)a1 + v8);
        if (v17 >= 0xD1) {
          unsigned int v18 = v17 - 208;
        }
        else {
          unsigned int v18 = 0;
        }
        if (v18 >= 0xA) {
          return v18 - 9;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v16 >= 2) {
          return v16 - 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_28;
  }
LABEL_20:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_214BEE178(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x26) {
    unsigned int v10 = 38;
  }
  else {
    unsigned int v10 = v9;
  }
  size_t v11 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v11;
  }
  size_t v12 = v11 + 1;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 == 0 || !v13)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v12 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
  if (!HIWORD(v15))
  {
    if (v15 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v15 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v16 = ~v10 + a2;
    if (v12 < 4)
    {
      int v17 = (v16 >> (8 * v12)) + 1;
      if (v11 != -1)
      {
        int v18 = v16 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x214BEE460);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (v9 < 0x26)
        {
          a1[v11] = a2 - 39;
        }
        else if (v9 >= a2)
        {
          uint64_t v22 = *(void (**)(void))(v7 + 56);
          v22();
        }
        else
        {
          if (v11 <= 3) {
            int v19 = ~(-1 << (8 * v11));
          }
          else {
            int v19 = -1;
          }
          if (v11)
          {
            int v20 = v19 & (~v9 + a2);
            if (v11 <= 3) {
              int v21 = v11;
            }
            else {
              int v21 = 4;
            }
            bzero(a1, v11);
            switch(v21)
            {
              case 2:
                *(_WORD *)a1 = v20;
                break;
              case 3:
                *(_WORD *)a1 = v20;
                a1[2] = BYTE2(v20);
                break;
              case 4:
                *(_DWORD *)a1 = v20;
                break;
              default:
                *a1 = v20;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ArmandDeviceDataField.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_214BEE4B0()
{
  unint64_t result = qword_26784D908;
  if (!qword_26784D908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D908);
  }
  return result;
}

unint64_t sub_214BEE504()
{
  unint64_t result = qword_26784D910[0];
  if (!qword_26784D910[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26784D910);
  }
  return result;
}

uint64_t sub_214BEE558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

unsigned char *sub_214BEE560(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214BEE62CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_214BEE654()
{
  return swift_getWitnessTable();
}

uint64_t sub_214BEE670()
{
  return swift_getWitnessTable();
}

uint64_t sub_214BEE68C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for DeepLink()
{
  return self;
}

uint64_t _s5StateVwxx_0(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = a1[40];
  if (v2 >> 60 != 15) {
    sub_214B58A4C(a1[39], v2);
  }
  if (a1[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[61])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v3 = a1[69];
  if (v3 >> 60 != 15) {
    sub_214B58A4C(a1[68], v3);
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v5 = a1[73];
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = a1[72];
    return sub_214B58A4C(v6, v5);
  }
  return result;
}

uint64_t _s5StateVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    uint64_t v12 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v12;
    uint64_t v13 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v13;
    uint64_t v14 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v15;
    uint64_t v16 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v16;
    uint64_t v17 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v19 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v19;
    long long v20 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
    long long v21 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v21;
  }
  uint64_t v22 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v22;
  uint64_t v23 = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v23;
    uint64_t v24 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v24;
    uint64_t v25 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v25;
    uint64_t v26 = *(void *)(a2 + 304);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v27;
    long long v28 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v28;
  }
  uint64_t v29 = (uint64_t *)(a2 + 312);
  unint64_t v30 = *(void *)(a2 + 320);
  if (v30 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 312) = *(_OWORD *)v29;
    uint64_t v31 = *(void *)(a2 + 344);
    if (v31)
    {
LABEL_9:
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v31;
      uint64_t v32 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v32;
      uint64_t v33 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v33;
      uint64_t v34 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v34;
      uint64_t v35 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v35;
      uint64_t v36 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v36;
      uint64_t v37 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = v37;
      uint64_t v38 = *(void *)(a2 + 456);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v39 = *v29;
    sub_214B6A3A0(*v29, *(void *)(a2 + 320));
    *(void *)(a1 + 312) = v39;
    *(void *)(a1 + 320) = v30;
    uint64_t v31 = *(void *)(a2 + 344);
    if (v31) {
      goto LABEL_9;
    }
  }
  long long v40 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v40;
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  long long v41 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v41;
  long long v42 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v42;
  long long v43 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v43;
LABEL_12:
  uint64_t v44 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v44;
  uint64_t v45 = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v45;
    uint64_t v46 = *(void *)(a2 + 504);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = v46;
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v47 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v47;
    long long v48 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v48;
  }
  unint64_t v49 = (uint64_t *)(a2 + 544);
  unint64_t v50 = *(void *)(a2 + 552);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 544) = *(_OWORD *)v49;
  }
  else
  {
    uint64_t v51 = *v49;
    sub_214B6A3A0(*v49, *(void *)(a2 + 552));
    *(void *)(a1 + 544) = v51;
    *(void *)(a1 + 552) = v50;
  }
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  uint64_t v52 = (_OWORD *)(a2 + 576);
  unint64_t v53 = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 576) = *v52;
  }
  else
  {
    uint64_t v54 = *(void *)v52;
    sub_214B6A3A0(v54, v53);
    *(void *)(a1 + 576) = v54;
    *(void *)(a1 + 584) = v53;
  }
  *(_WORD *)(a1 + 592) = *(_WORD *)(a2 + 592);
  return a1;
}

uint64_t _s5StateVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 96);
  uint64_t v5 = (_OWORD *)(a2 + 96);
  uint64_t v6 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v6)
    {
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1 + 96);
      *uint64_t v4 = *v5;
      long long v7 = *(_OWORD *)(a2 + 160);
      long long v9 = *(_OWORD *)(a2 + 112);
      long long v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v7;
      *(_OWORD *)(a1 + 112) = v9;
      *(_OWORD *)(a1 + 128) = v8;
      long long v11 = *(_OWORD *)(a2 + 192);
      long long v10 = *(_OWORD *)(a2 + 208);
      long long v12 = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(_OWORD *)(a1 + 192) = v11;
      *(_OWORD *)(a1 + 208) = v10;
      *(_OWORD *)(a1 + 176) = v12;
    }
  }
  else if (v6)
  {
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v4 = *v5;
    long long v13 = *(_OWORD *)(a2 + 112);
    long long v14 = *(_OWORD *)(a2 + 128);
    long long v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 128) = v14;
    long long v16 = *(_OWORD *)(a2 + 176);
    long long v17 = *(_OWORD *)(a2 + 192);
    long long v18 = *(_OWORD *)(a2 + 208);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(_OWORD *)(a1 + 192) = v17;
    *(_OWORD *)(a1 + 208) = v18;
    *(_OWORD *)(a1 + 176) = v16;
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v19 = (_OWORD *)(a1 + 248);
  long long v20 = (long long *)(a2 + 248);
  uint64_t v21 = *(void *)(a2 + 256);
  if (*(void *)(a1 + 256))
  {
    if (v21)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 248);
      long long v22 = *(_OWORD *)(a2 + 296);
      long long v24 = *v20;
      long long v23 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v22;
      *long long v19 = v24;
      *(_OWORD *)(a1 + 264) = v23;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v20;
    long long v26 = *(_OWORD *)(a2 + 264);
    long long v27 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v27;
    *long long v19 = v25;
    *(_OWORD *)(a1 + 264) = v26;
  }
  long long v28 = (uint64_t *)(a2 + 312);
  unint64_t v29 = *(void *)(a2 + 320);
  if (*(void *)(a1 + 320) >> 60 == 15)
  {
    if (v29 >> 60 != 15)
    {
      uint64_t v30 = *v28;
      sub_214B6A3A0(*v28, *(void *)(a2 + 320));
      *(void *)(a1 + 312) = v30;
      *(void *)(a1 + 320) = v29;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v29 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 312);
LABEL_20:
    *(_OWORD *)(a1 + 312) = *(_OWORD *)v28;
    goto LABEL_22;
  }
  uint64_t v31 = *v28;
  sub_214B6A3A0(*v28, *(void *)(a2 + 320));
  uint64_t v32 = *(void *)(a1 + 312);
  unint64_t v33 = *(void *)(a1 + 320);
  *(void *)(a1 + 312) = v31;
  *(void *)(a1 + 320) = v29;
  sub_214B58A4C(v32, v33);
LABEL_22:
  uint64_t v34 = (_OWORD *)(a1 + 328);
  uint64_t v35 = (_OWORD *)(a2 + 328);
  uint64_t v36 = *(void *)(a2 + 344);
  if (*(void *)(a1 + 344))
  {
    if (v36)
    {
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1 + 328);
      *uint64_t v34 = *v35;
      long long v37 = *(_OWORD *)(a2 + 392);
      long long v39 = *(_OWORD *)(a2 + 344);
      long long v38 = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = v37;
      *(_OWORD *)(a1 + 344) = v39;
      *(_OWORD *)(a1 + 360) = v38;
      long long v41 = *(_OWORD *)(a2 + 424);
      long long v40 = *(_OWORD *)(a2 + 440);
      long long v42 = *(_OWORD *)(a2 + 408);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(_OWORD *)(a1 + 424) = v41;
      *(_OWORD *)(a1 + 440) = v40;
      *(_OWORD *)(a1 + 408) = v42;
    }
  }
  else if (v36)
  {
    *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v34 = *v35;
    long long v43 = *(_OWORD *)(a2 + 344);
    long long v44 = *(_OWORD *)(a2 + 360);
    long long v45 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v45;
    *(_OWORD *)(a1 + 344) = v43;
    *(_OWORD *)(a1 + 360) = v44;
    long long v46 = *(_OWORD *)(a2 + 408);
    long long v47 = *(_OWORD *)(a2 + 424);
    long long v48 = *(_OWORD *)(a2 + 440);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(_OWORD *)(a1 + 424) = v47;
    *(_OWORD *)(a1 + 440) = v48;
    *(_OWORD *)(a1 + 408) = v46;
  }
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v49 = (_OWORD *)(a1 + 480);
  unint64_t v50 = (long long *)(a2 + 480);
  uint64_t v51 = *(void *)(a2 + 488);
  if (*(void *)(a1 + 488))
  {
    if (v51)
    {
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 480);
      long long v52 = *(_OWORD *)(a2 + 528);
      long long v54 = *v50;
      long long v53 = *(_OWORD *)(a2 + 496);
      *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
      *(_OWORD *)(a1 + 528) = v52;
      _OWORD *v49 = v54;
      *(_OWORD *)(a1 + 496) = v53;
    }
  }
  else if (v51)
  {
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v55 = *v50;
    long long v56 = *(_OWORD *)(a2 + 496);
    long long v57 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v57;
    _OWORD *v49 = v55;
    *(_OWORD *)(a1 + 496) = v56;
  }
  BOOL v58 = (uint64_t *)(a2 + 544);
  unint64_t v59 = *(void *)(a2 + 552);
  if (*(void *)(a1 + 552) >> 60 == 15)
  {
    if (v59 >> 60 != 15)
    {
      uint64_t v60 = *v58;
      sub_214B6A3A0(*v58, *(void *)(a2 + 552));
      *(void *)(a1 + 544) = v60;
      *(void *)(a1 + 552) = v59;
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v59 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 544);
LABEL_41:
    *(_OWORD *)(a1 + 544) = *(_OWORD *)v58;
    goto LABEL_43;
  }
  uint64_t v61 = *v58;
  sub_214B6A3A0(*v58, *(void *)(a2 + 552));
  uint64_t v62 = *(void *)(a1 + 544);
  unint64_t v63 = *(void *)(a1 + 552);
  *(void *)(a1 + 544) = v61;
  *(void *)(a1 + 552) = v59;
  sub_214B58A4C(v62, v63);
LABEL_43:
  uint64_t v64 = (unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  BOOL v65 = (uint64_t *)(a2 + 576);
  unint64_t v66 = *(void *)(a2 + 584);
  if (*(void *)(a1 + 584) >> 60 != 15)
  {
    if (v66 >> 60 != 15)
    {
      uint64_t v68 = *v65;
      sub_214B6A3A0(*v65, v66);
      uint64_t v69 = *(void *)(a1 + 576);
      unint64_t v70 = *(void *)(a1 + 584);
      *(void *)(a1 + 576) = v68;
      *(void *)(a1 + 584) = v66;
      sub_214B58A4C(v69, v70);
      goto LABEL_50;
    }
    sub_214B6B27C(a1 + 576);
    goto LABEL_48;
  }
  if (v66 >> 60 == 15)
  {
LABEL_48:
    *(_OWORD *)(a1 + 576) = *(_OWORD *)v65;
    goto LABEL_50;
  }
  uint64_t v67 = *v65;
  sub_214B6A3A0(*v65, v66);
  *(void *)(a1 + 576) = v67;
  *(void *)(a1 + 584) = v66;
LABEL_50:
  *(unsigned char *)(a1 + 592) = *v64;
  *(unsigned char *)(a1 + 593) = v64[1];
  return a1;
}

void *__swift_memcpy594_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x252uLL);
}

uint64_t _s5StateVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    uint64_t v10 = *(void *)(a2 + 112);
    if (v10)
    {
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214BD3ECC(a1 + 96);
  }
  long long v18 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v18;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v19 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v19;
  long long v20 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
LABEL_6:
  uint64_t v22 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 256))
  {
    uint64_t v23 = *(void *)(a2 + 256);
    if (v23)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 304);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214B78000(a1 + 248);
  }
  long long v27 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v27;
  long long v28 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v28;
LABEL_11:
  unint64_t v29 = (_OWORD *)(a2 + 312);
  unint64_t v30 = *(void *)(a1 + 320);
  if (v30 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 312) = *v29;
    goto LABEL_16;
  }
  unint64_t v31 = *(void *)(a2 + 320);
  if (v31 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 312);
    goto LABEL_14;
  }
  uint64_t v32 = *(void *)(a1 + 312);
  *(void *)(a1 + 312) = *(void *)v29;
  *(void *)(a1 + 320) = v31;
  sub_214B58A4C(v32, v30);
LABEL_16:
  if (*(void *)(a1 + 344))
  {
    uint64_t v33 = *(void *)(a2 + 344);
    if (v33)
    {
      *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v33;
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v34;
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void *)(a2 + 456);
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = v40;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_214BD3ECC(a1 + 328);
  }
  long long v41 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v41;
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  long long v42 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v42;
  long long v43 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v43;
  long long v44 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v44;
LABEL_21:
  uint64_t v45 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v45;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 488))
  {
    uint64_t v46 = *(void *)(a2 + 488);
    if (v46)
    {
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      *(void *)(a1 + 488) = v46;
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(a2 + 504);
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      *(void *)(a1 + 504) = v47;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_214B78000(a1 + 480);
  }
  long long v48 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v48;
  long long v49 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v49;
LABEL_26:
  unint64_t v50 = (_OWORD *)(a2 + 544);
  unint64_t v51 = *(void *)(a1 + 552);
  if (v51 >> 60 == 15)
  {
LABEL_29:
    *(_OWORD *)(a1 + 544) = *v50;
    goto LABEL_31;
  }
  unint64_t v52 = *(void *)(a2 + 552);
  if (v52 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 544);
    goto LABEL_29;
  }
  uint64_t v53 = *(void *)(a1 + 544);
  *(void *)(a1 + 544) = *(void *)v50;
  *(void *)(a1 + 552) = v52;
  sub_214B58A4C(v53, v51);
LABEL_31:
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  long long v54 = (void *)(a2 + 576);
  unint64_t v55 = *(void *)(a1 + 584);
  if (v55 >> 60 != 15)
  {
    unint64_t v56 = *(void *)(a2 + 584);
    if (v56 >> 60 != 15)
    {
      uint64_t v57 = *(void *)(a1 + 576);
      *(void *)(a1 + 576) = *v54;
      *(void *)(a1 + 584) = v56;
      sub_214B58A4C(v57, v55);
      goto LABEL_36;
    }
    sub_214B6B27C(a1 + 576);
  }
  *(_OWORD *)(a1 + 576) = *(_OWORD *)v54;
LABEL_36:
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(unsigned char *)(a1 + 593) = *(unsigned char *)(a2 + 593);
  return a1;
}

uint64_t _s5StateVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 594)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5StateVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 584) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 592) = 0;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 594) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 594) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5StateVMa_0()
{
  return &_s5StateVN_0;
}

uint64_t _s26ODNAssessmentGUIDContainerVwxx(void *a1)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[20])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = a1[28];
  if (v2 >> 60 != 15) {
    sub_214B58A4C(a1[27], v2);
  }
  if (a1[31])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[49];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  unint64_t v4 = a1[57];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[56];
    return sub_214B58A4C(v5, v4);
  }
  return result;
}

uint64_t _s26ODNAssessmentGUIDContainerVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    uint64_t v9 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    long long v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  uint64_t v17 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  if (v17)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v17;
    uint64_t v18 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v18;
    uint64_t v19 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v19;
    uint64_t v20 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v21;
    long long v22 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v22;
  }
  uint64_t v23 = (uint64_t *)(a2 + 216);
  unint64_t v24 = *(void *)(a2 + 224);
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 216) = *(_OWORD *)v23;
    uint64_t v25 = *(void *)(a2 + 248);
    if (v25)
    {
LABEL_9:
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v25;
      uint64_t v26 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v26;
      uint64_t v27 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v27;
      uint64_t v28 = *(void *)(a2 + 296);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = v28;
      uint64_t v29 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v29;
      uint64_t v30 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v30;
      uint64_t v31 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v31;
      uint64_t v32 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v33 = *v23;
    sub_214B6A3A0(*v23, *(void *)(a2 + 224));
    *(void *)(a1 + 216) = v33;
    *(void *)(a1 + 224) = v24;
    uint64_t v25 = *(void *)(a2 + 248);
    if (v25) {
      goto LABEL_9;
    }
  }
  long long v34 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v34;
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  long long v35 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v35;
  long long v36 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v36;
  long long v37 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v37;
LABEL_12:
  uint64_t v38 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v38;
  uint64_t v39 = *(void *)(a2 + 392);
  swift_bridgeObjectRetain();
  if (v39)
  {
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = v39;
    uint64_t v40 = *(void *)(a2 + 408);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v40;
    uint64_t v41 = *(void *)(a2 + 424);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v41;
    uint64_t v42 = *(void *)(a2 + 440);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v43 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v43;
    long long v44 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v44;
  }
  uint64_t v45 = (uint64_t *)(a2 + 448);
  unint64_t v46 = *(void *)(a2 + 456);
  if (v46 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 448) = *(_OWORD *)v45;
  }
  else
  {
    uint64_t v47 = *v45;
    sub_214B6A3A0(*v45, v46);
    *(void *)(a1 + 448) = v47;
    *(void *)(a1 + 456) = v46;
  }
  return a1;
}

uint64_t _s26ODNAssessmentGUIDContainerVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v4)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 64);
      long long v7 = *(_OWORD *)(a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = v6;
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v8 = *(_OWORD *)(a2 + 112);
      long long v10 = *(_OWORD *)(a2 + 80);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v8;
      *(_OWORD *)(a1 + 80) = v10;
    }
  }
  else if (v4)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    long long v14 = *(_OWORD *)(a2 + 80);
    long long v15 = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 112);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v15;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v14;
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (_OWORD *)(a1 + 152);
  uint64_t v18 = (long long *)(a2 + 152);
  uint64_t v19 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v19)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 152);
      long long v20 = *(_OWORD *)(a2 + 200);
      long long v22 = *v18;
      long long v21 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v20;
      *uint64_t v17 = v22;
      *(_OWORD *)(a1 + 168) = v21;
    }
  }
  else if (v19)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v18;
    long long v24 = *(_OWORD *)(a2 + 168);
    long long v25 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v25;
    *uint64_t v17 = v23;
    *(_OWORD *)(a1 + 168) = v24;
  }
  uint64_t v26 = (uint64_t *)(a2 + 216);
  unint64_t v27 = *(void *)(a2 + 224);
  if (*(void *)(a1 + 224) >> 60 == 15)
  {
    if (v27 >> 60 != 15)
    {
      uint64_t v28 = *v26;
      sub_214B6A3A0(*v26, *(void *)(a2 + 224));
      *(void *)(a1 + 216) = v28;
      *(void *)(a1 + 224) = v27;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v27 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 216);
LABEL_20:
    *(_OWORD *)(a1 + 216) = *(_OWORD *)v26;
    goto LABEL_22;
  }
  uint64_t v29 = *v26;
  sub_214B6A3A0(*v26, *(void *)(a2 + 224));
  uint64_t v30 = *(void *)(a1 + 216);
  unint64_t v31 = *(void *)(a1 + 224);
  *(void *)(a1 + 216) = v29;
  *(void *)(a1 + 224) = v27;
  sub_214B58A4C(v30, v31);
LABEL_22:
  uint64_t v32 = (_OWORD *)(a1 + 232);
  uint64_t v33 = (_OWORD *)(a2 + 232);
  uint64_t v34 = *(void *)(a2 + 248);
  if (*(void *)(a1 + 248))
  {
    if (v34)
    {
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214BD3ECC(a1 + 232);
      *uint64_t v32 = *v33;
      long long v35 = *(_OWORD *)(a2 + 296);
      long long v37 = *(_OWORD *)(a2 + 248);
      long long v36 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v35;
      *(_OWORD *)(a1 + 248) = v37;
      *(_OWORD *)(a1 + 264) = v36;
      long long v39 = *(_OWORD *)(a2 + 328);
      long long v38 = *(_OWORD *)(a2 + 344);
      long long v40 = *(_OWORD *)(a2 + 312);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(_OWORD *)(a1 + 328) = v39;
      *(_OWORD *)(a1 + 344) = v38;
      *(_OWORD *)(a1 + 312) = v40;
    }
  }
  else if (v34)
  {
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v32 = *v33;
    long long v41 = *(_OWORD *)(a2 + 248);
    long long v42 = *(_OWORD *)(a2 + 264);
    long long v43 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v43;
    *(_OWORD *)(a1 + 248) = v41;
    *(_OWORD *)(a1 + 264) = v42;
    long long v44 = *(_OWORD *)(a2 + 312);
    long long v45 = *(_OWORD *)(a2 + 328);
    long long v46 = *(_OWORD *)(a2 + 344);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(_OWORD *)(a1 + 328) = v45;
    *(_OWORD *)(a1 + 344) = v46;
    *(_OWORD *)(a1 + 312) = v44;
  }
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = (_OWORD *)(a1 + 384);
  long long v48 = (long long *)(a2 + 384);
  uint64_t v49 = *(void *)(a2 + 392);
  if (*(void *)(a1 + 392))
  {
    if (v49)
    {
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 384);
      long long v50 = *(_OWORD *)(a2 + 432);
      long long v52 = *v48;
      long long v51 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v50;
      *uint64_t v47 = v52;
      *(_OWORD *)(a1 + 400) = v51;
    }
  }
  else if (v49)
  {
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *v48;
    long long v54 = *(_OWORD *)(a2 + 400);
    long long v55 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v55;
    *uint64_t v47 = v53;
    *(_OWORD *)(a1 + 400) = v54;
  }
  unint64_t v56 = (uint64_t *)(a2 + 448);
  unint64_t v57 = *(void *)(a2 + 456);
  if (*(void *)(a1 + 456) >> 60 != 15)
  {
    if (v57 >> 60 != 15)
    {
      uint64_t v59 = *v56;
      sub_214B6A3A0(*v56, v57);
      uint64_t v60 = *(void *)(a1 + 448);
      unint64_t v61 = *(void *)(a1 + 456);
      *(void *)(a1 + 448) = v59;
      *(void *)(a1 + 456) = v57;
      sub_214B58A4C(v60, v61);
      return a1;
    }
    sub_214B6B27C(a1 + 448);
    goto LABEL_41;
  }
  if (v57 >> 60 == 15)
  {
LABEL_41:
    *(_OWORD *)(a1 + 448) = *(_OWORD *)v56;
    return a1;
  }
  uint64_t v58 = *v56;
  sub_214B6A3A0(*v56, v57);
  *(void *)(a1 + 448) = v58;
  *(void *)(a1 + 456) = v57;
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t _s26ODNAssessmentGUIDContainerVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214BD3ECC(a1);
  }
  long long v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  long long v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
LABEL_6:
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v16;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160))
  {
    uint64_t v17 = *(void *)(a2 + 160);
    if (v17)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214B78000(a1 + 152);
  }
  long long v21 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v21;
  long long v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
LABEL_11:
  long long v23 = (_OWORD *)(a2 + 216);
  unint64_t v24 = *(void *)(a1 + 224);
  if (v24 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 216) = *v23;
    goto LABEL_16;
  }
  unint64_t v25 = *(void *)(a2 + 224);
  if (v25 >> 60 == 15)
  {
    sub_214B6B27C(a1 + 216);
    goto LABEL_14;
  }
  uint64_t v26 = *(void *)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)v23;
  *(void *)(a1 + 224) = v25;
  sub_214B58A4C(v26, v24);
LABEL_16:
  if (*(void *)(a1 + 248))
  {
    uint64_t v27 = *(void *)(a2 + 248);
    if (v27)
    {
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void *)(a2 + 264);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(a2 + 280);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void *)(a2 + 296);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(a2 + 312);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = v31;
      swift_bridgeObjectRelease();
      uint64_t v32 = *(void *)(a2 + 328);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 344);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v33;
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v34;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_214BD3ECC(a1 + 232);
  }
  long long v35 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v35;
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  long long v36 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v36;
  long long v37 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v37;
  long long v38 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v38;
LABEL_21:
  uint64_t v39 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = v39;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 392))
  {
    uint64_t v40 = *(void *)(a2 + 392);
    if (v40)
    {
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v40;
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v41;
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v42;
      swift_bridgeObjectRelease();
      uint64_t v43 = *(void *)(a2 + 440);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = v43;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_214B78000(a1 + 384);
  }
  long long v44 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v44;
  long long v45 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v45;
LABEL_26:
  long long v46 = (void *)(a2 + 448);
  unint64_t v47 = *(void *)(a1 + 456);
  if (v47 >> 60 != 15)
  {
    unint64_t v48 = *(void *)(a2 + 456);
    if (v48 >> 60 != 15)
    {
      uint64_t v49 = *(void *)(a1 + 448);
      *(void *)(a1 + 448) = *v46;
      *(void *)(a1 + 456) = v48;
      sub_214B58A4C(v49, v47);
      return a1;
    }
    sub_214B6B27C(a1 + 448);
  }
  *(_OWORD *)(a1 + 448) = *(_OWORD *)v46;
  return a1;
}

uint64_t _s26ODNAssessmentGUIDContainerVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 464)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s26ODNAssessmentGUIDContainerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 464) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 464) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s26ODNAssessmentGUIDContainerVMa()
{
  return &_s26ODNAssessmentGUIDContainerVN;
}

uint64_t _s24ODNAssessmentIdentifiersVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s24ODNAssessmentIdentifiersVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s24ODNAssessmentIdentifiersVMa()
{
  return &_s24ODNAssessmentIdentifiersVN;
}

void *_s14ODNIdentifiersVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14ODNIdentifiersVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s14ODNIdentifiersVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14ODNIdentifiersVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14ODNIdentifiersVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14ODNIdentifiersVMa()
{
  return &_s14ODNIdentifiersVN;
}

uint64_t sub_214BF1024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D1A368();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_214D1A358();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_214B59CE0(a1, (uint64_t *)&unk_26ACE4338);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_214D1A2D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_214BF11D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D1A368();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_214D1A358();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_214B59CE0(a1, (uint64_t *)&unk_26ACE4338);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_214D1A2D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  type metadata accessor for ODNAssessmentResult();
  return swift_task_create();
}

uint64_t sub_214BF1380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D1A368();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_214D1A358();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_214B59CE0(a1, (uint64_t *)&unk_26ACE4338);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_214D1A2D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBC8);
  return swift_task_create();
}

id sub_214BF1534(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_214B6A264(0, (unint64_t *)&unk_26784D220);
    uint64_t v4 = (void *)sub_214D19F88();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_214BF15D0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_214BF1634(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_214BF1698()
{
  type metadata accessor for InUseAssertionManager(0);
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 144) = 0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  uint64_t result = sub_214D19ED8();
  qword_26784D9A0 = v0;
  return result;
}

void sub_214BF171C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (v2[15] || (v8 = v2[17]) != 0 && (v2[16] == a1 ? (BOOL v9 = v8 == a2) : (BOOL v9 = 0), !v9 && (sub_214D1ABC8() & 1) == 0))
  {
    oslog = sub_214D19EC8();
    os_log_type_t v4 = sub_214D1A4B8();
    if (os_log_type_enabled(oslog, v4))
    {
      BOOL v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v5 = 0;
      _os_log_impl(&dword_214B4E000, oslog, v4, "InUseAssertion requestInUse requested with mismatched bundleIdentifier", v5, 2u);
      MEMORY[0x2166B1540](v5, -1, -1);
    }
  }
  else
  {
    uint64_t v10 = v2[14];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
    }
    else
    {
      v2[14] = v12;
      if (!v2[18])
      {
        swift_bridgeObjectRetain_n();
        long long v13 = sub_214D19EC8();
        os_log_type_t v14 = sub_214D1A498();
        if (os_log_type_enabled(v13, v14))
        {
          long long v15 = (uint8_t *)swift_slowAlloc();
          uint64_t v16 = swift_slowAlloc();
          uint64_t v23 = v16;
          *(_DWORD *)long long v15 = 136315138;
          swift_bridgeObjectRetain();
          sub_214C3D88C(a1, a2, &v23);
          sub_214D1A5F8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_214B4E000, v13, v14, "Taking InUseAssertion for %s", v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2166B1540](v16, -1, -1);
          MEMORY[0x2166B1540](v15, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v3[16] = a1;
        v3[17] = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v17 = self;
        uint64_t v18 = (void *)sub_214D1A028();
        uint64_t v19 = (void *)sub_214D1A028();
        id v20 = objc_msgSend(v17, sel_newAssertionForBundleIdentifier_withReason_level_, v18, v19, 1);

        long long v21 = (void *)v3[18];
        v3[18] = v20;
      }
    }
  }
}

void sub_214BF1A14(id a1)
{
  uint64_t v2 = v1;
  if (v1[17]) {
    goto LABEL_2;
  }
  if (!v1[15]) {
    goto LABEL_23;
  }
  id v6 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_214D1A038();
    uint64_t v10 = v9;

    BOOL v11 = (void *)v1[15];
    if (!v11) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    BOOL v11 = (void *)v1[15];
    if (!v11) {
      goto LABEL_16;
    }
  }
  id v12 = objc_msgSend(v11, sel_bundleIdentifier);
  if (v12)
  {
    long long v13 = v12;
    uint64_t v14 = sub_214D1A038();
    uint64_t v16 = v15;

    if (v10) {
      goto LABEL_17;
    }
LABEL_14:
    if (!v16) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
LABEL_16:
  uint64_t v14 = 0;
  uint64_t v16 = 0;
  if (!v10) {
    goto LABEL_14;
  }
LABEL_17:
  if (!v16)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  if (v8 == v14 && v10 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v17 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_2:
    oslog = sub_214D19EC8();
    os_log_type_t v3 = sub_214D1A4B8();
    if (os_log_type_enabled(oslog, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v4 = 0;
      _os_log_impl(&dword_214B4E000, oslog, v3, "InUseAssertion requestInUse requested with mismatched bundle", v4, 2u);
      MEMORY[0x2166B1540](v4, -1, -1);
    }

    return;
  }
LABEL_23:
  uint64_t v18 = v1[14];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    v1[14] = v20;
    if (!v1[18])
    {
      id v21 = a1;
      long long v22 = sub_214D19EC8();
      os_log_type_t v23 = sub_214D1A498();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v37 = v25;
        *(_DWORD *)unint64_t v24 = 136315138;
        id v26 = objc_msgSend(v21, sel_description);
        uint64_t v27 = sub_214D1A038();
        unint64_t v29 = v28;

        sub_214C3D88C(v27, v29, &v37);
        sub_214D1A5F8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_214B4E000, v22, v23, "Taking InUseAssertion for %s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v25, -1, -1);
        MEMORY[0x2166B1540](v24, -1, -1);
      }
      else
      {
      }
      uint64_t v30 = (void *)v2[15];
      v2[15] = v21;
      id v31 = v21;

      uint64_t v32 = self;
      uint64_t v33 = (void *)sub_214D1A028();
      id v34 = objc_msgSend(v32, sel_newAssertionForBundle_withReason_level_, v31, v33, 1);

      long long v35 = (void *)v2[18];
      v2[18] = v34;
    }
  }
}

void sub_214BF1DE8()
{
  unint64_t v1 = v0;
  if (!v0[18] || (uint64_t)v0[14] <= 0)
  {
    uint64_t v2 = sub_214D19EC8();
    os_log_type_t v3 = sub_214D1A4B8();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v4 = 0;
      _os_log_impl(&dword_214B4E000, v2, v3, "InUseAssertion release requested when none held", v4, 2u);
      MEMORY[0x2166B1540](v4, -1, -1);
    }
  }
  uint64_t v5 = v1[14];
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v1[14] = v7;
    if (v7 <= 0)
    {
      uint64_t v8 = (void *)v1[18];
      if (v8) {
        objc_msgSend(v8, sel_invalidate);
      }
      uint64_t v9 = sub_214D19EC8();
      os_log_type_t v10 = sub_214D1A498();
      if (os_log_type_enabled(v9, v10))
      {
        BOOL v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v11 = 0;
        _os_log_impl(&dword_214B4E000, v9, v10, "Releasing InUseAssertion", v11, 2u);
        MEMORY[0x2166B1540](v11, -1, -1);
      }

      id v12 = (void *)v1[18];
      v1[18] = 0;

      v1[16] = 0;
      v1[17] = 0;
      swift_bridgeObjectRelease();
      long long v13 = (void *)v1[15];
      v1[15] = 0;

      v1[14] = 0;
    }
  }
}

uint64_t sub_214BF1F6C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentialsP33_62B399B2DD34B45DBAE8CA5FF1D3DB2321InUseAssertionManager_sharedLogger;
  uint64_t v2 = sub_214D19EE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

double sub_214BF2000()
{
  double result = *MEMORY[0x263F00B28] * 3.0;
  *(double *)&qword_26784D9A8 = result;
  return result;
}

double sub_214BF2020()
{
  double result = *MEMORY[0x263F00B28];
  qword_26784D9B0 = *MEMORY[0x263F00B28];
  return result;
}

uint64_t sub_214BF2038(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    BOOL v11 = v12;
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64);
    v18[1] = v8;
    uint64_t v14 = v8 + v13;
    uint64_t v15 = *(void *)(v10 + 56);
    do
    {
      v11(v7, v14, v3);
      v18[2] = a1;
      id v16 = a1;
      sub_214D1A2E8();
      (*(void (**)(char *, uint64_t))(v10 - 8))(v7, v3);
      v14 += v15;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BF21A8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    BOOL v11 = v12;
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64);
    v18[1] = v8;
    uint64_t v14 = v8 + v13;
    uint64_t v15 = *(void *)(v10 + 56);
    do
    {
      v11(v7, v14, v3);
      v18[2] = a1;
      id v16 = a1;
      sub_214D1A2F8();
      (*(void (**)(char *, uint64_t))(v10 - 8))(v7, v3);
      v14 += v15;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_214BF2314()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODILocationHelper.__allocating_init(authBundle:authBundleIdentifier:context:analyticsManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  BOOL v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *BOOL v11 = v5;
  v11[1] = sub_214BB2C3C;
  return ODILocationHelper.init(authBundle:authBundleIdentifier:context:analyticsManager:)(a1, a2, a3, a4, a5);
}

uint64_t ODILocationHelper.init(authBundle:authBundleIdentifier:context:analyticsManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = v6;
  uint64_t v7 = (void *)v5;
  v6[30] = a5;
  v6[31] = v5;
  v6[28] = a3;
  v6[29] = a4;
  uint64_t v40 = v6 + 2;
  v6[26] = a1;
  v6[27] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  v6[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D9D0);
  v6[33] = swift_task_alloc();
  uint64_t v8 = sub_214D19F18();
  v6[34] = v8;
  v6[35] = *(void *)(v8 - 8);
  v6[36] = swift_task_alloc();
  uint64_t v38 = sub_214D1A508();
  uint64_t v36 = *(void *)(v38 - 8);
  uint64_t v37 = swift_task_alloc();
  v6[37] = v37;
  sub_214D1A4F8();
  v6[38] = swift_task_alloc();
  sub_214D19F38();
  v6[39] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ODISignpost();
  v6[40] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[41] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v6[42] = v11;
  uint64_t v32 = swift_task_alloc();
  v6[43] = v32;
  swift_defaultActor_initialize();
  *(_OWORD *)(v5 + 112) = xmmword_214D21760;
  *(unsigned char *)(v5 + 128) = 0;
  *(_DWORD *)(v5 + 200) = 0;
  *(void *)(v5 + 136) = 0;
  *(void *)(v5 + 144) = 0;
  *(unsigned char *)(v5 + 204) = 1;
  type metadata accessor for ODILocationHelper.ContinuationsActor();
  uint64_t v12 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v12 + 112) = MEMORY[0x263F8EE78];
  v7[26] = v12;
  v7[27] = 0;
  uint64_t v13 = (char *)v7 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v6[44] = v14;
  v6[45] = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v14(v13, 1, 1, v9);
  if (qword_26784C8A0 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_267863608;
  uint64_t v15 = unk_267863610;
  char v17 = byte_267863618;
  uint64_t v18 = (void *)qword_267863620;
  int v19 = byte_267863628;
  *(void *)(v11 + 32) = "enableTelemetry=YES";
  *(void *)(v11 + 40) = 19;
  *(unsigned char *)(v11 + 48) = 2;
  *(void *)uint64_t v11 = v16;
  *(void *)(v11 + 8) = v15;
  *(unsigned char *)(v11 + 16) = v17;
  *(void *)(v11 + 24) = v18;
  id v20 = v18;
  sub_214D19EA8();
  sub_214D1A588();
  if (v19 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }

  sub_214B6A2A8(v11, v32);
  uint64_t v34 = a4 + 16;
  sub_214B93DCC(v34, (uint64_t)(v7 + 20));
  sub_214B93DCC((uint64_t)(v7 + 20), (uint64_t)v40);
  uint64_t v21 = v6[5];
  uint64_t v22 = v6[6];
  __swift_project_boxed_opaque_existential_1(v40, v21);
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  if (a1)
  {
    id v23 = objc_msgSend(a1, sel_description);
    sub_214D1A038();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v24 = v41;
  LOBYTE(v41) = 4;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v22 + 16))(v24, v42, &v41, v21, v22);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v6[46] = sub_214B6A264(0, (unint64_t *)&qword_26ACE4370);
  sub_214D19F28();
  v6[23] = MEMORY[0x263F8EE78];
  sub_214BF8680((unint64_t *)&qword_26ACE4368, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4300);
  sub_214B96188((unint64_t *)&qword_26ACE4308, &qword_26ACE4300);
  sub_214D1A678();
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v37, *MEMORY[0x263F8F130], v38);
  uint64_t v25 = (void *)sub_214D1A538();
  v6[47] = v25;
  v7[19] = v25;
  sub_214B93DCC(v34, (uint64_t)(v6 + 12));
  id v26 = objc_allocWithZone((Class)type metadata accessor for ODILocationHelper.LocationManagerDelegate(0));
  id v27 = v25;
  swift_retain();
  id v28 = sub_214BF8524((uint64_t)(v6 + 12), a5);
  swift_release();
  v7[29] = v28;
  unint64_t v29 = (void *)v7[17];
  v7[17] = v28;
  id v30 = v28;

  v7[28] = a5;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BF2B7C, v7, 0);
}

uint64_t sub_214BF2B7C()
{
  uint64_t v21 = v0;
  if (v0[28])
  {
    uint64_t v1 = (void *)v0[31];
    uint64_t v2 = v1[23];
    uint64_t v3 = v1[24];
    __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000004;
    unint64_t v20 = 0x8000000214D33CA0;
    sub_214D1A108();
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v3 + 16))(0xD000000000000030, 0x8000000214D33CA0, &v19, v2, v3);
    swift_bridgeObjectRelease();
    if (qword_26784C880 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_26784D9A0;
    v0[48] = qword_26784D9A0;
    uint64_t v5 = sub_214BF2F48;
LABEL_9:
    return MEMORY[0x270FA2498](v5, v4, 0);
  }
  uint64_t v6 = (void *)v0[26];
  if (v6)
  {
    uint64_t v7 = (void *)v0[31];
    uint64_t v8 = v7[23];
    uint64_t v9 = v7[24];
    __swift_project_boxed_opaque_existential_1(v7 + 20, v8);
    id v10 = v6;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000004;
    unint64_t v20 = 0x8000000214D33BE0;
    id v11 = objc_msgSend(v10, sel_description);
    sub_214D1A038();

    sub_214D1A108();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v9 + 16))(0xD000000000000025, 0x8000000214D33BE0, &v19, v8, v9);
    swift_bridgeObjectRelease();
    if (qword_26784C880 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_26784D9A0;
    v0[51] = qword_26784D9A0;
    uint64_t v5 = sub_214BF3410;
    goto LABEL_9;
  }
  uint64_t v12 = (void *)v0[47];
  uint64_t v13 = (void *)v0[31];
  uint64_t v14 = v13[23];
  uint64_t v15 = v13[24];
  __swift_project_boxed_opaque_existential_1(v13 + 20, v14);
  LOBYTE(v19) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v15 + 32))(0xD000000000000050, 0x8000000214D33B80, &v19, v14, v15);

  sub_214D1A578();
  sub_214D19E98();
  swift_release();
  swift_release();
  sub_214B6A30C(v0[43]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v17 = v0[31];
  return v16(v17);
}

uint64_t sub_214BF2F48()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[27];
  unint64_t v3 = v0[28];
  sub_214BF171C(v4, v3);
  *(unsigned char *)(v2 + 128) = 1;
  uint64_t v5 = sub_214BF8680(&qword_26784D9E0, (void (*)(uint64_t))type metadata accessor for ODILocationHelper);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[49] = v6;
  v6[2] = v1;
  v6[3] = v4;
  v6[4] = v3;
  v6[5] = v2;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[50] = v7;
  uint64_t v8 = sub_214B6A264(0, &qword_26784D9E8);
  void *v7 = v0;
  v7[1] = sub_214BF30D0;
  return MEMORY[0x270FA2318](v0 + 24, v2, v5, 0xD00000000000003FLL, 0x8000000214D33C10, sub_214BF87B4, v6, v8);
}

uint64_t sub_214BF30D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  unint64_t v3 = *(void **)(v1 + 192);
  *(void *)(v1 + 432) = v3;
  uint64_t v4 = *(void *)(v1 + 248);
  uint64_t v5 = *(void **)(v4 + 120);
  *(void *)(v4 + 120) = v3;
  id v6 = v3;

  uint64_t v7 = *(void **)(v4 + 232);
  swift_retain();
  id v8 = v7;
  sub_214BF83F4(v4, v6, (uint64_t)v8);

  swift_release();
  if (objc_msgSend(v6, sel_locationServicesAvailable))
  {
    uint64_t v9 = *(void *)(v1 + 280);
    uint64_t v10 = *(void *)(v1 + 288);
    uint64_t v11 = *(void *)(v1 + 272);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v10, *MEMORY[0x263F8F080], v11);
    *(void *)(v1 + 440) = sub_214D1A548();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    return MEMORY[0x270FA2498](sub_214BF38CC, 0, 0);
  }
  else
  {

    uint64_t v12 = *(void **)(v1 + 208);
    sub_214D1A578();
    sub_214D19E98();
    swift_release();
    swift_release();

    sub_214B6A30C(*(void *)(v1 + 344));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v2 + 8);
    uint64_t v14 = *(void *)(v1 + 248);
    return v13(v14);
  }
}

uint64_t sub_214BF3410()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[31];
  unint64_t v3 = (void *)v0[26];
  sub_214BF1A14(v3);
  *(unsigned char *)(v2 + 128) = 1;
  uint64_t v4 = sub_214BF8680(&qword_26784D9E0, (void (*)(uint64_t))type metadata accessor for ODILocationHelper);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[52] = v5;
  v5[2] = v1;
  v5[3] = v3;
  uint64_t v5[4] = v2;
  swift_retain();
  id v6 = (void *)swift_task_alloc();
  v0[53] = v6;
  uint64_t v7 = sub_214B6A264(0, &qword_26784D9E8);
  *id v6 = v0;
  v6[1] = sub_214BF3590;
  return MEMORY[0x270FA2318](v0 + 25, v2, v4, 0xD00000000000003FLL, 0x8000000214D33C10, sub_214BF86E8, v5, v7);
}

uint64_t sub_214BF3590()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 208);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();

  swift_task_dealloc();
  uint64_t v4 = *(void **)(v1 + 200);
  *(void *)(v1 + 432) = v4;
  uint64_t v5 = *(void *)(v1 + 248);
  id v6 = *(void **)(v5 + 120);
  *(void *)(v5 + 120) = v4;
  id v7 = v4;

  id v8 = *(void **)(v5 + 232);
  swift_retain();
  id v9 = v8;
  sub_214BF83F4(v5, v7, (uint64_t)v9);

  swift_release();
  if (objc_msgSend(v7, sel_locationServicesAvailable))
  {
    uint64_t v10 = *(void *)(v1 + 280);
    uint64_t v11 = *(void *)(v1 + 288);
    uint64_t v12 = *(void *)(v1 + 272);
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v11, *MEMORY[0x263F8F080], v12);
    *(void *)(v1 + 440) = sub_214D1A548();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    return MEMORY[0x270FA2498](sub_214BF38CC, 0, 0);
  }
  else
  {

    uint64_t v17 = v3;
    uint64_t v13 = *(void **)(v1 + 208);

    sub_214D1A578();
    sub_214D19E98();
    swift_release();
    swift_release();

    sub_214B6A30C(*(void *)(v1 + 344));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t))(v17 + 8);
    uint64_t v15 = *(void *)(v1 + 248);
    return v14(v15);
  }
}

uint64_t sub_214BF38CC()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[28].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[27], v0[27], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28].i64[1] = (uint64_t)v2;
  type metadata accessor for CLAuthorizationStatus(0);
  *uint64_t v2 = v0;
  v2[1] = sub_214BF39D0;
  return MEMORY[0x270FA2318](&v0[29], 0, 0, 0xD000000000000015, 0x8000000214D33C50, sub_214BF86F4, v1, v3);
}

uint64_t sub_214BF39D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BF3AE8, 0, 0);
}

uint64_t sub_214BF3AE8()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 248);

  *(_DWORD *)(v1 + 200) = *(_DWORD *)(v0 + 464);
  *(unsigned char *)(v1 + 204) = 0;
  sub_214B93DCC(v1 + 160, v0 + 56);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v2);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xD00000000000002CLL;
  unint64_t v29 = 0x8000000214D33C70;
  if ((*(unsigned char *)(v1 + 204) & 1) == 0)
  {
    *(_DWORD *)(v0 + 468) = *(_DWORD *)(*(void *)(v0 + 248) + 200);
    sub_214BF86FC();
    sub_214D1A658();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  unint64_t v4 = v28;
  LOBYTE(v28) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v3 + 16))(v4, v29, &v28, v2, v3);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  if (qword_26784C890 != -1) {
    swift_once();
  }
  objc_msgSend(*(id *)(v0 + 432), sel_setDistanceFilter_, *(double *)&qword_26784D9B0);
  if (qword_26784C888 != -1) {
    swift_once();
  }
  objc_msgSend(*(id *)(v0 + 432), sel_setDesiredAccuracy_, *(double *)&qword_26784D9A8);
  if (qword_26784C8A8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v7 = qword_267863630;
  uint64_t v6 = *(void *)algn_267863638;
  char v8 = byte_267863640;
  id v9 = (void *)qword_267863648;
  int v10 = byte_267863650;
  *(void *)(v5 + 32) = "enableTelemetry=YES";
  *(void *)(v5 + 40) = 19;
  *(unsigned char *)(v5 + 48) = 2;
  *(void *)uint64_t v5 = v7;
  *(void *)(v5 + 8) = v6;
  *(unsigned char *)(v5 + 16) = v8;
  *(void *)(v5 + 24) = v9;
  id v11 = v9;
  sub_214D19EA8();
  sub_214D1A588();
  if (v10 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  id v26 = *(id *)(v0 + 432);
  id v27 = *(void **)(v0 + 376);
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 352);
  uint64_t v14 = *(void *)(v0 + 320);
  uint64_t v13 = *(void *)(v0 + 328);
  uint64_t v15 = *(void *)(v0 + 256);
  uint64_t v16 = *(void *)(v0 + 264);
  uint64_t v17 = *(void *)(v0 + 248);

  sub_214B6A2A8(v13, v16);
  v12(v16, 0, 1, v14);
  uint64_t v18 = v17 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  sub_214BF8750(v16, v18, &qword_26784D9D0);
  swift_endAccess();
  objc_msgSend(v26, sel_requestLocation);
  id v19 = *(id *)(v17 + 232);
  sub_214D19C58();

  uint64_t v20 = sub_214D19C78();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
  uint64_t v21 = (uint64_t)v19
      + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  sub_214BF8750(v15, v21, &qword_26ACE3B10);
  swift_endAccess();
  uint64_t v22 = *(void **)(v0 + 208);

  sub_214D1A578();
  sub_214D19E98();
  swift_release();
  swift_release();

  sub_214B6A30C(*(void *)(v0 + 344));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v24 = *(void *)(v0 + 248);
  return v23(v24);
}

uint64_t type metadata accessor for ODILocationHelper.ContinuationsActor()
{
  return self;
}

uint64_t sub_214BF4024(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a2;
  uint64_t v32 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v33 = sub_214D19F08();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33, v6);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_214D19F38();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13, v16);
  uint64_t v17 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21 + v18, v17, v13);
  uint64_t v22 = (void *)(v21 + v19);
  uint64_t v23 = v30;
  *uint64_t v22 = v29;
  v22[1] = v23;
  uint64_t v24 = v31;
  *(void *)(v21 + v20) = v32;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v24;
  aBlock[4] = sub_214BFA990;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = &block_descriptor_108;
  uint64_t v25 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v24;
  sub_214D19F28();
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_214BF8680((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B96188((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  uint64_t v26 = v33;
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v12, v8, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  return swift_release();
}

void sub_214BF43DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *(void **)(a4 + 232);
  id v7 = objc_allocWithZone(MEMORY[0x263F00A60]);
  id v8 = v6;
  id v9 = a5;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v7, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v10, v8, v9);

  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
    sub_214D1A2F8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_214BF44BC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a4;
  id v27 = a3;
  uint64_t v30 = sub_214D19F08();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30, v5);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_214D19F38();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8, v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v16 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v16, v12);
  uint64_t v22 = v27;
  uint64_t v21 = v28;
  *(void *)(v20 + v18) = v27;
  *(void *)(v20 + v19) = v29;
  *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_214BFAC78;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = &block_descriptor_120;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v22;
  swift_retain();
  v21;
  sub_214D19F28();
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_214BF8680((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B96188((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  uint64_t v25 = v30;
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v11, v7, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  return swift_release();
}

void sub_214BF486C(int a1, id a2, uint64_t a3, void *a4)
{
  id v6 = objc_msgSend(a2, sel_bundlePath);
  sub_214D1A038();

  id v7 = *(void **)(a3 + 232);
  id v8 = objc_allocWithZone(MEMORY[0x263F00A60]);
  id v9 = v7;
  id v10 = a4;
  id v11 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v8, sel_initWithEffectiveBundlePath_delegate_onQueue_, v11, v9, v10);

  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
    sub_214D1A2F8();
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall ODILocationHelper.gpsLocationEnabled()()
{
  Swift::Bool result = 0;
  if ((*(unsigned char *)(v0 + 204) & 1) == 0)
  {
    uint64_t v1 = *(unsigned int *)(v0 + 200);
    if (objc_msgSend(self, sel_locationServicesEnabled))
    {
      if (sub_214BF15D0(v1, (uint64_t)&unk_26C5A59A0)) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t ODILocationHelper.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_214D19C78();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  id v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v14 = (char *)&aBlock[-1] - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v15 - 8, v16);
  unint64_t v18 = (char *)&aBlock[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    uint64_t v19 = sub_214D1A368();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = 0;
    sub_214BF1024((uint64_t)v18, (uint64_t)&unk_26784DA08, v20);
    swift_release();
  }
  uint64_t v21 = *(void *)(v1 + 232);
  if ((*(unsigned char *)(v21
                 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) & 1) == 0)
  {
    uint64_t v22 = v21
        + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
    swift_beginAccess();
    sub_214BF87C0(v22, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_214B59CE0((uint64_t)v5, &qword_26ACE3B10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
      sub_214D19C58();
      sub_214D19BB8();
      double v24 = v23;
      uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v11, v6);
      *(float *)&unsigned int v26 = v24;
      unint64_t v27 = v26 | 0x8000000000000000;
      uint64_t v28 = (void *)sub_214D1A028();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v27;
      *(void *)(v29 + 24) = 20;
      aBlock[4] = sub_214BD620C;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_214BF1534;
      aBlock[3] = &block_descriptor_12;
      uint64_t v30 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v30);

      v25(v14, v6);
    }
  }

  __swift_destroy_boxed_opaque_existential_1(v1 + 160);
  swift_release();
  swift_release();

  sub_214B59CE0(v1 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost, &qword_26784D9D0);
  uint64_t v31 = *(void *)(v1 + 216);
  *(void *)(v1 + 216) = 0;
  if (v31)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v32 = *(void *)(v31 + 216);
      swift_retain();
      swift_release();
      uint64_t v31 = v32;
    }
    while (v32);
  }
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_214BF4E18()
{
  return MEMORY[0x270FA2498](sub_214BF4E34, 0, 0);
}

uint64_t sub_214BF4E34()
{
  if (qword_26784C880 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26784D9A0;
  *(void *)(v0 + 16) = qword_26784D9A0;
  return MEMORY[0x270FA2498](sub_214BF4ECC, v1, 0);
}

uint64_t sub_214BF4ECC()
{
  sub_214BF1DE8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ODILocationHelper.__deallocating_deinit()
{
  ODILocationHelper.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_214BF4F58()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_214BF4F78, v0, 0);
}

uint64_t sub_214BF4F78()
{
  uint64_t v10 = v0;
  uint64_t v1 = (void *)v0[2];
  if (v1[15])
  {
    uint64_t v2 = v1[23];
    uint64_t v3 = v1[24];
    __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
    char v9 = 4;
    (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 16))(0xD000000000000016, 0x8000000214D34290, &v9, v2, v3);
    uint64_t v4 = (void *)v1[17];
    v1[17] = 0;

    uint64_t v5 = (void *)v1[15];
    v1[15] = 0;

    if (qword_26784C880 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_26784D9A0;
    v0[3] = qword_26784D9A0;
    return MEMORY[0x270FA2498](sub_214BF50D0, v6, 0);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_214BF50D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_214BF1DE8();
  return MEMORY[0x270FA2498](sub_214BF5138, v1, 0);
}

uint64_t sub_214BF5138()
{
  uint64_t v1 = v0[2];
  *(unsigned char *)(v1 + 128) = 0;
  uint64_t v2 = *(void *)(v1 + 208);
  v0[4] = v2;
  sub_214BF99CC();
  v0[5] = swift_allocError();
  *uint64_t v3 = 0;
  return MEMORY[0x270FA2498](sub_214BF51CC, v2, 0);
}

uint64_t sub_214BF51CC()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_214BF2038(v1);

  return MEMORY[0x270FA2498](sub_214BF524C, v2, 0);
}

uint64_t sub_214BF524C()
{
  *(void *)(*(void *)(v0 + 16) + 216) = 0;
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ODILocationHelper.getLocationOrWait()()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for ODISignpost();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BF5358, v0, 0);
}

uint64_t sub_214BF5358()
{
  if (qword_26784C8B0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v3 = qword_267863658;
  uint64_t v2 = unk_267863660;
  char v4 = byte_267863668;
  uint64_t v5 = (void *)qword_267863670;
  int v6 = byte_267863678;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v10 = v0[3];

  sub_214B6A2A8(v9, v8);
  uint64_t v11 = sub_214BF8680(&qword_26784D9E0, (void (*)(uint64_t))type metadata accessor for ODILocationHelper);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[7] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DA18);
  *uint64_t v12 = v0;
  v12[1] = sub_214BF55A4;
  uint64_t v14 = v0[3];
  return MEMORY[0x270FA2360](v0 + 2, v10, v11, 0xD000000000000013, 0x8000000214D33CE0, sub_214BF892C, v14, v13);
}

uint64_t sub_214BF55A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    char v4 = sub_214BF5824;
  }
  else {
    char v4 = sub_214BF56D0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BF56D0()
{
  uint64_t v1 = v0[6];
  uint64_t v7 = v0[2];
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8D4F8];
  *(_OWORD *)(v2 + 16) = xmmword_214D1C1E0;
  uint64_t v4 = MEMORY[0x263F8D530];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(unsigned char *)(v2 + 32) = v7 != 0;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v7);
}

uint64_t sub_214BF5824()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8D4F8];
  *(_OWORD *)(v2 + 16) = xmmword_214D1C1E0;
  uint64_t v4 = MEMORY[0x263F8D530];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214BF5964(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0);
  uint64_t v3 = *(void *)(v30 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v30, v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(a2 + 160);
  uint64_t v11 = *(void *)(a2 + 184);
  uint64_t v12 = *(void *)(a2 + 192);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 160), v11);
  LOBYTE(v32) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v12 + 16))(0xD000000000000022, 0x8000000214D34360, &v32, v11, v12);
  if ((*(unsigned char *)(a2 + 204) & 1) == 0)
  {
    int v13 = *(_DWORD *)(a2 + 200);
    if ((v13 - 3) >= 2)
    {
      uint64_t v15 = *(void *)(a2 + 184);
      uint64_t v14 = *(void *)(a2 + 192);
      __swift_project_boxed_opaque_existential_1(v10, v15);
      unint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD00000000000001BLL;
      unint64_t v33 = 0x8000000214D343C0;
      int v31 = v13;
      sub_214D1AB78();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      unint64_t v16 = v32;
      LOBYTE(v32) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v14 + 32))(v16, v33, &v32, v15, v14);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0;
      return sub_214D1A2F8();
    }
  }
  uint64_t v17 = *(void **)(a2 + 144);
  if (v17)
  {
    uint64_t v19 = *(void *)(a2 + 184);
    uint64_t v18 = *(void *)(a2 + 192);
    __swift_project_boxed_opaque_existential_1(v10, v19);
    LOBYTE(v32) = 4;
    uint64_t v20 = *(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v18 + 32);
    id v21 = v17;
    v20(0xD00000000000002ALL, 0x8000000214D34390, &v32, v19, v18);
    unint64_t v32 = (unint64_t)v17;
    return sub_214D1A2F8();
  }
  uint64_t v23 = sub_214D1A368();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  uint64_t v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v30);
  uint64_t v25 = sub_214BF8680(&qword_26784D9E0, (void (*)(uint64_t))type metadata accessor for ODILocationHelper);
  unint64_t v26 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = a2;
  *((void *)v27 + 3) = v25;
  *((void *)v27 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v27[v26], (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  swift_retain_n();
  sub_214BF1024((uint64_t)v9, (uint64_t)&unk_26784DBD8, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_214BF5D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0);
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BF5E08, a4, 0);
}

uint64_t sub_214BF5E08()
{
  uint64_t v10 = v0;
  uint64_t v1 = (void *)v0[11];
  if (v1[15])
  {
    v1[27] = v1;
    swift_release();
    uint64_t v2 = v1[26];
    v0[16] = v2;
    swift_retain();
    return MEMORY[0x270FA2498](sub_214BF6008, v2, 0);
  }
  else
  {
    sub_214B93DCC((uint64_t)(v1 + 20), (uint64_t)(v0 + 2));
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
    v9[0] = 4;
    v9[1] = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    (*(void (**)(void, unint64_t, void *, uint64_t, uint64_t))(v4 + 16))(0, 0xE000000000000000, v9, v3, v4);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    uint64_t v5 = (void *)v1[18];
    v0[10] = v5;
    id v6 = v5;
    sub_214D1A2F8();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_214BF6008()
{
  uint64_t v1 = v0[16];
  (*(void (**)(void, void, void))(v0[14] + 16))(v0[15], v0[12], v0[13]);
  uint64_t v2 = (unint64_t *)(v1 + 112);
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 112);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 112) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v3 = sub_214B87B98(0, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  unint64_t v6 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    unint64_t v3 = sub_214B87B98(v5 > 1, v6 + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[11];
  *(void *)(v3 + 16) = v6 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v6, v7, v9);
  swift_endAccess();
  return MEMORY[0x270FA2498](sub_214BF615C, v10, 0);
}

uint64_t sub_214BF615C()
{
  uint64_t v7 = v0;
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = v1[23];
  uint64_t v3 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
  char v6 = 4;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 16))(0xD00000000000002ELL, 0x8000000214D34450, &v6, v2, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

CLLocation_optional __swiftcall ODILocationHelper.getLocation()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 20;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  char v14 = 14;
  Loggable.debug(_:category:)(0xD00000000000001ALL, 0x8000000214D33D10, &v14, v3, v4);
  uint64_t v7 = (void *)v1[18];
  if (v7)
  {
    uint64_t v9 = v1[23];
    uint64_t v8 = v1[24];
    __swift_project_boxed_opaque_existential_1(v2, v9);
    char v13 = 4;
    uint64_t v10 = *(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v8 + 32);
    id v11 = v7;
    v10(0xD000000000000021, 0x8000000214D33D30, &v13, v9, v8);
  }
  uint64_t v12 = (objc_class *)v7;
  result.value._internal = v5;
  result.value.super.isa = v12;
  result.is_nil = v6;
  return result;
}

uint64_t sub_214BF6310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  void *v7 = v5;
  v7[1] = sub_214B6B4A4;
  return sub_214BF63AC(a5);
}

uint64_t sub_214BF63AC(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D9D0);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ODISignpost();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BF64B8, v1, 0);
}

uint64_t sub_214BF64B8()
{
  uint64_t v2 = (void *)v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = *(void **)(v1 + 144);
  *(void *)(v1 + 144) = v2;

  uint64_t v4 = qword_26784C8B8;
  id v5 = v2;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[14];
  uint64_t v8 = qword_267863680;
  uint64_t v7 = *(void *)algn_267863688;
  char v9 = byte_267863690;
  uint64_t v10 = (void *)qword_267863698;
  int v11 = byte_2678636A0;
  *(void *)(v6 + 32) = "enableTelemetry=YES";
  *(void *)(v6 + 40) = 19;
  *(unsigned char *)(v6 + 48) = 2;
  *(void *)uint64_t v6 = v8;
  *(void *)(v6 + 8) = v7;
  *(unsigned char *)(v6 + 16) = v9;
  *(void *)(v6 + 24) = v10;
  id v12 = v10;
  sub_214D19EA8();
  sub_214D1A588();
  if (v11 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[9];

  sub_214B6A2A8(v13, v14);
  uint64_t v16 = *(void *)(v15 + 208);
  v0[16] = v16;
  return MEMORY[0x270FA2498](sub_214BF6664, v16, 0);
}

uint64_t sub_214BF6664()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_214BF21A8(*(void **)(v0 + 64));
  return MEMORY[0x270FA2498](sub_214BF66D0, v1, 0);
}

uint64_t sub_214BF66D0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  sub_214D1A578();
  sub_214D19E98();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1))
  {
    uint64_t v5 = v0[13];
    sub_214BF9A20(v4, v5);
    sub_214D1A578();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x263F8D4F8];
    *(_OWORD *)(v6 + 16) = xmmword_214D1C1E0;
    uint64_t v8 = MEMORY[0x263F8D530];
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 64) = v8;
    *(unsigned char *)(v6 + 32) = 1;
    sub_214D19E88();
    swift_bridgeObjectRelease();
    sub_214B6A30C(v5);
  }
  uint64_t v9 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[12] + 56))(v9, 1, 1, v0[11]);
  swift_beginAccess();
  sub_214BF8750(v9, v4, &qword_26784D9D0);
  swift_endAccess();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[17] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_214BF6928;
  uint64_t v11 = v0[9];
  v10[2] = v11;
  return MEMORY[0x270FA2498](sub_214BF4F78, v11, 0);
}

uint64_t sub_214BF6928()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BF6A38, v1, 0);
}

uint64_t sub_214BF6A38()
{
  sub_214B6A30C(*(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BF6ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  void *v7 = v5;
  v7[1] = sub_214B6B4A4;
  return sub_214BF6B68(a5);
}

uint64_t sub_214BF6B68(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D9D0);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ODISignpost();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[16] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214BF6CB8;
  v4[2] = v1;
  return MEMORY[0x270FA2498](sub_214BF4F78, v1, 0);
}

uint64_t sub_214BF6CB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214BF6DC8, v1, 0);
}

uint64_t sub_214BF6DC8()
{
  if (qword_26784C8B8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v3 = qword_267863680;
  uint64_t v2 = *(void *)algn_267863688;
  char v4 = byte_267863690;
  uint64_t v5 = (void *)qword_267863698;
  int v6 = byte_2678636A0;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[15];
  uint64_t v10 = (void *)v0[8];
  uint64_t v11 = v0[9];

  sub_214B6A2A8(v8, v9);
  uint64_t v12 = *(void *)(v11 + 208);
  v0[17] = v12;
  sub_214BF99CC();
  v0[18] = swift_allocError();
  *uint64_t v13 = v10;
  sub_214BF99AC(v10);
  return MEMORY[0x270FA2498](sub_214BF6F90, v12, 0);
}

uint64_t sub_214BF6F90()
{
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 72);
  sub_214BF2038(v1);

  return MEMORY[0x270FA2498](sub_214BF7010, v2, 0);
}

uint64_t sub_214BF7010()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  sub_214D1A578();
  sub_214D19E98();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  uint64_t v6 = v0[15];
  if (v5)
  {
    sub_214B6A30C(v0[15]);
    swift_endAccess();
  }
  else
  {
    uint64_t v7 = v0[13];
    sub_214BF9A20(v4, v7);
    swift_endAccess();
    sub_214D1A578();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x263F8D4F8];
    *(_OWORD *)(v8 + 16) = xmmword_214D1C1E0;
    uint64_t v10 = MEMORY[0x263F8D530];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(unsigned char *)(v8 + 32) = 0;
    sub_214D19E88();
    swift_bridgeObjectRelease();
    sub_214B6A30C(v7);
    sub_214B6A30C(v6);
  }
  uint64_t v11 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[12] + 56))(v11, 1, 1, v0[11]);
  swift_beginAccess();
  sub_214BF8750(v11, v4, &qword_26784D9D0);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_214BF7264(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_214D1A368();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = v2;
  *(_DWORD *)(v10 + 40) = a1;
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  swift_retain();
  if (v11 == 1)
  {
    sub_214B59CE0((uint64_t)v7, (uint64_t *)&unk_26ACE4338);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    sub_214D1A358();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (*(void *)(v10 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_214D1A2D8();
      uint64_t v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = &unk_26784DB40;
  *(void *)(v15 + 24) = v10;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    id v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_214BF74B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a4;
  return MEMORY[0x270FA2498](sub_214BF74D4, a4, 0);
}

uint64_t sub_214BF74D4()
{
  sub_214BF7538(*(_DWORD *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BF7538(int a1)
{
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 192);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 160), v3);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  v6[0] = 0xD000000000000004;
  v6[1] = 0x8000000214D34140;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, void *, uint64_t, uint64_t))(v4 + 16))(0xD000000000000022, 0x8000000214D34140, v6, v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 200) = a1;
  *(unsigned char *)(v1 + 204) = 0;
  return result;
}

id sub_214BF763C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager];
  if (v3)
  {
    objc_msgSend(v3, sel_stopUpdatingLocation);
    uint64_t v4 = *(void **)&v0[v2];
    if (v4) {
      objc_msgSend(v4, sel_setDelegate_, 0);
    }
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t ODILocationHelper.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214BF795C()
{
  uint64_t v2 = *v0;
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_214BF797C, v2, 0);
}

uint64_t sub_214BF797C()
{
  Swift::Bool v1 = ODILocationHelper.gpsLocationEnabled()();
  uint64_t v2 = *(uint64_t (**)(BOOL))(v0 + 8);
  BOOL v3 = v1;
  return v2(v3);
}

uint64_t sub_214BF79E0()
{
  uint64_t v2 = *v0;
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_214BF7A00, v2, 0);
}

uint64_t sub_214BF7A00()
{
  unint64_t v1 = (unint64_t)ODILocationHelper.getLocation()();
  uint64_t v2 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_214BF7A60()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_214BB831C;
  return ODILocationHelper.getLocationOrWait()();
}

uint64_t ODILocationHelperContext.__allocating_init(logger:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_214B59EC0(a1, v2 + 16);
  return v2;
}

uint64_t ODILocationHelperContext.init(logger:)(long long *a1)
{
  sub_214B59EC0(a1, v1 + 16);
  return v1;
}

uint64_t ODILocationHelperContext.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ODILocationHelperContext.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_214BF7BAC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = a3;
  uint64_t v26 = a2;
  uint64_t v4 = sub_214D19F08();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_214D19F38();
  uint64_t v8 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v9);
  int v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DC00);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v18 = v23;
  *(void *)(v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
  aBlock[4] = sub_214BFAAE4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214B7541C;
  aBlock[3] = &block_descriptor_114;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v18;
  sub_214D19F28();
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_214BF8680((unint64_t *)&unk_26ACE4220, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE42C0);
  sub_214B96188((unint64_t *)&qword_26ACE42D0, (uint64_t *)&unk_26ACE42C0);
  sub_214D1A678();
  MEMORY[0x2166AFFF0](0, v11, v7, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v24);
  return swift_release();
}

uint64_t type metadata accessor for ODILocationHelper.LocationManagerDelegate(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784DB20);
}

uint64_t sub_214BF7F50(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214BFAE4C;
  return v6(a1);
}

uint64_t sub_214BF802C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214BF8108;
  return v6(a1);
}

uint64_t sub_214BF8108()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214BF8200(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_214BF82E0;
  return v5(v2 + 32);
}

uint64_t sub_214BF82E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

id sub_214BF83F4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v5, sel_lock);
  uint64_t v6 = a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent;
  uint64_t v7 = MEMORY[0x2166B1650](a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  swift_unknownObjectRelease();
  if (v7
    || (uint64_t v8 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager,
        *(void *)(a3
                  + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager)))
  {
    uint64_t v9 = (void *)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
    uint64_t v10 = *(void *)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
    uint64_t v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    char v15 = 4;
    (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v11 + 56))(0xD000000000000032, 0x8000000214D344A0, &v15, v10, v11);
  }
  else
  {
    *(void *)(v6 + 8) = &off_26C5A59E8;
    swift_unknownObjectWeakAssign();
    uint64_t v13 = *(void **)(a3 + v8);
    *(void *)(a3 + v8) = a2;

    id v14 = a2;
  }
  return objc_msgSend(v5, sel_unlock);
}

id sub_214BF8524(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager] = 0;
  uint64_t v7 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock;
  id v8 = objc_allocWithZone(MEMORY[0x263F08958]);
  uint64_t v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = &v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt];
  uint64_t v11 = sub_214D19C78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate] = 0;
  v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent] = 0;
  sub_214B93DCC(a1, (uint64_t)&v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger]);
  *(void *)&v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_analyticsManager] = a2;
  swift_retain();

  v14.receiver = v9;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

uint64_t sub_214BF8680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ODILocationHelper(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784DA60);
}

uint64_t sub_214BF86E8(uint64_t a1)
{
  return sub_214BF44BC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_214BF86F4(uint64_t a1)
{
  return sub_214BF7BAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_214BF86FC()
{
  unint64_t result = qword_26784D9F0;
  if (!qword_26784D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784D9F0);
  }
  return result;
}

uint64_t sub_214BF8750(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_214BF87B4(uint64_t a1)
{
  return sub_214BF4024(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_214BF87C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214BF8828()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_214BF8850()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214BF8888()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214B6B4A4;
  return MEMORY[0x270FA2498](sub_214BF4E34, 0, 0);
}

uint64_t sub_214BF892C(uint64_t a1)
{
  return sub_214BF5964(a1, v1);
}

uint64_t sub_214BF8934()
{
  return type metadata accessor for InUseAssertionManager(0);
}

uint64_t type metadata accessor for InUseAssertionManager(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784DA50);
}

uint64_t sub_214BF895C()
{
  uint64_t result = sub_214D19EE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_214BF8A1C()
{
  return type metadata accessor for ODILocationHelper(0);
}

void sub_214BF8A24()
{
  sub_214BF8D64(319, (unint64_t *)&unk_26784DA78, (void (*)(uint64_t))type metadata accessor for ODISignpost);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ODILocationHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODILocationHelper);
}

uint64_t dispatch thunk of ODILocationHelper.__allocating_init(authBundle:authBundleIdentifier:context:analyticsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_super v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 192)
                                                                            + **(int **)(v5 + 192));
  id v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *id v12 = v6;
  v12[1] = sub_214BFAE14;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_214BF8C68()
{
  return type metadata accessor for ODILocationHelper.LocationManagerDelegate(0);
}

void sub_214BF8C70()
{
  sub_214BF8D64(319, &qword_26784DB30, MEMORY[0x263F07490]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_214BF8D64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_214D1A5D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for ODILocationHelperContext()
{
  return self;
}

uint64_t method lookup function for ODILocationHelperContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODILocationHelperContext);
}

uint64_t dispatch thunk of ODILocationHelperContext.__allocating_init(logger:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_214BF8E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_214BF8E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_214BF8E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_214BF8E44()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 44, 7);
}

uint64_t sub_214BF8E84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = *(_DWORD *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(_DWORD *)(v4 + 24) = v3;
  *(void *)(v4 + 8) = sub_214B6A55C;
  *(void *)(v4 + 16) = v2;
  return MEMORY[0x270FA2498](sub_214BF74D4, v2, 0);
}

uint64_t sub_214BF8F34(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B6B4A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26784DB48 + dword_26784DB48);
  return v6(a1, v4);
}

void sub_214BF8FEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v58 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_214D19C78();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11, v12);
  unint64_t v57 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v59 = (char *)&v57 - v16;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) = 1;
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 32);
  uint64_t v60 = (void *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v18);
  unint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v62 = 0xD00000000000001ALL;
  unint64_t v63 = 0x8000000214D34170;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  unint64_t v19 = v62;
  LOBYTE(v62) = 4;
  uint64_t v20 = a1;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v17 + 16))(v19, v63, &v62, v18, v17);
  uint64_t v21 = v61;
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)sub_214D199A8();
  id v23 = objc_msgSend(v22, sel_code);

  uint64_t v24 = v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  sub_214BF87C0(v24, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v11) == 1)
  {
    sub_214B59CE0((uint64_t)v10, &qword_26ACE3B10);
    uint64_t v25 = v2;
  }
  else
  {
    uint64_t v26 = v59;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v59, v10, v11);
    uint64_t v27 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent;
    uint64_t v25 = v2;
    if ((*(unsigned char *)(v2
                   + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v11);
    }
    else
    {
      uint64_t v28 = v57;
      sub_214D19C58();
      sub_214D19BB8();
      double v30 = v29;
      int v31 = *(void (**)(char *, uint64_t))(v21 + 8);
      v31(v28, v11);
      *(float *)&unsigned int v32 = v30;
      unint64_t v33 = v32 | 0x8000000000000000;
      uint64_t v34 = (void *)sub_214D1A028();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v33;
      *(void *)(v35 + 24) = v23;
      unint64_t v66 = sub_214BFAE10;
      uint64_t v67 = v35;
      unint64_t v62 = MEMORY[0x263EF8330];
      unint64_t v63 = 1107296256;
      uint64_t v64 = sub_214BF1534;
      BOOL v65 = &block_descriptor_71;
      uint64_t v36 = _Block_copy(&v62);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v36);

      v31(v59, v11);
      uint64_t v20 = a1;
      *(unsigned char *)(v25 + v27) = 1;
    }
  }
  unint64_t v62 = v20;
  id v37 = (id)v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
  if (swift_dynamicCast())
  {
    sub_214BF9868(v68);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784DB60);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    *(_OWORD *)(inited + 32) = xmmword_214D21770;
    char v39 = sub_214BF1634((uint64_t)v23, inited);
    swift_setDeallocating();
    if (v39)
    {
      uint64_t v40 = v60[3];
      uint64_t v41 = v60[4];
      __swift_project_boxed_opaque_existential_1(v60, v40);
      unint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      swift_getErrorValue();
      sub_214D1AC88();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      unint64_t v42 = v62;
      LOBYTE(v62) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v41 + 40))(v42, v63, &v62, v40, v41);
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v23 == (id)1)
  {
    uint64_t v43 = v60[3];
    uint64_t v44 = v60[4];
    __swift_project_boxed_opaque_existential_1(v60, v43);
    unint64_t v62 = 0;
    unint64_t v63 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    unint64_t v45 = v62;
    LOBYTE(v62) = 4;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v44 + 40))(v45, v63, &v62, v43, v44);
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  else
  {
    unint64_t v62 = v20;
    id v46 = (id)v20;
    if (swift_dynamicCast())
    {
      uint64_t v20 = (uint64_t)v68;
    }
    else
    {
      uint64_t v47 = v60[3];
      uint64_t v48 = v60[4];
      __swift_project_boxed_opaque_existential_1(v60, v47);
      unint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      swift_getErrorValue();
      sub_214D1AC88();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      unint64_t v49 = v62;
      LOBYTE(v62) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v48 + 48))(v49, v63, &v62, v47, v48);
      swift_bridgeObjectRelease();
      id v50 = (id)v20;
    }
  }
  long long v51 = *(void **)(v25 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v51, sel_lock);
  uint64_t v52 = MEMORY[0x2166B1650](v25 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  if (v52)
  {
    uint64_t v53 = v52;
    uint64_t v54 = sub_214D1A368();
    uint64_t v55 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v58, 1, 1, v54);
    unint64_t v56 = (void *)swift_allocObject();
    v56[2] = 0;
    v56[3] = 0;
    v56[4] = v53;
    v56[5] = v20;
    swift_unknownObjectRetain();
    sub_214BF99AC((id)v20);
    sub_214BF1024(v55, (uint64_t)&unk_26784DB70, (uint64_t)v56);
    swift_release();
    swift_unknownObjectRelease();
  }
  objc_msgSend(v51, sel_unlock);
  sub_214BF9868((id)v20);
}

void sub_214BF9868(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

uint64_t sub_214BF9878()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 40);
  if ((unint64_t)v1 >= 3) {

  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_214BF98C8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_214B6B4A4;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_214B6B4A4;
  return sub_214BF6B68(v2);
}

id sub_214BF99AC(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

uint64_t sub_214BF99BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_214BF99CC()
{
  unint64_t result = qword_26784DB88;
  if (!qword_26784DB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DB88);
  }
  return result;
}

uint64_t sub_214BF9A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_214BF9A84(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  unint64_t v84 = (void (*)(char *, uint64_t))((char *)&v77 - v14);
  uint64_t v15 = sub_214D19C78();
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15, v16);
  unint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v20);
  uint64_t v22 = (char *)&v77 - v21;
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  v80 = v7;
  unint64_t v81 = v22;
  if (byte_26ACEB960 == 1)
  {
    id v23 = objc_msgSend(self, sel_standardUserDefaults);
    uint64_t v24 = (void *)sub_214D1A028();
    unsigned int v25 = objc_msgSend(v23, sel_BOOLForKey_, v24);
  }
  else
  {
    unsigned int v25 = 0;
  }
  uint64_t aBlock = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v27 = swift_bridgeObjectRetain();
    v77 = v19;
    v78 = v12;
    if (v26) {
      goto LABEL_8;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x263F8EE78];
    uint64_t v34 = (uint64_t)v84;
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_214D1A948();
  uint64_t v26 = v27;
  v77 = v19;
  v78 = v12;
  if (!v27) {
    goto LABEL_21;
  }
LABEL_8:
  if (v26 < 1)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v79 = v15;
  uint64_t v82 = v2;
  for (uint64_t i = 0; i != v26; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v29 = (id)MEMORY[0x2166B0290](i, a1);
    }
    else {
      id v29 = *(id *)(a1 + 8 * i + 32);
    }
    double v30 = v29;
    id v31 = objc_msgSend(v29, sel_sourceInformation, v77);
    if (!v31
      || (unsigned int v32 = v31,
          unsigned int v33 = objc_msgSend(v31, sel_isSimulatedBySoftware),
          v32,
          (v33 ^ 1 | v25) == 1))
    {
      sub_214D1A848();
      sub_214D1A878();
      sub_214D1A888();
      sub_214D1A858();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  a1 = aBlock;
  uint64_t v2 = v82;
  uint64_t v15 = v79;
  uint64_t v34 = (uint64_t)v84;
  if (aBlock < 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((a1 & 0x4000000000000000) == 0)
  {
    uint64_t v35 = *(void *)(a1 + 16);
    if (!v35) {
      goto LABEL_39;
    }
    goto LABEL_24;
  }
LABEL_38:
  swift_retain();
  uint64_t v35 = sub_214D1A948();
  swift_release();
  if (!v35)
  {
LABEL_39:
    swift_release();
    if (v26)
    {
      uint64_t v73 = *(void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
      uint64_t v74 = *(void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v73);
      LOBYTE(aBlock) = 4;
      (*(void (**)(unint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v74 + 16))(0xD000000000000022, 0x8000000214D34300, &aBlock, v73, v74);
      sub_214BF99CC();
      uint64_t v75 = (void *)swift_allocError();
      *unint64_t v76 = 2;
      sub_214BF8FEC((uint64_t)v75);
    }
    return;
  }
LABEL_24:
  uint64_t v36 = (void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
  uint64_t v37 = *(void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
  uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v37);
  LOBYTE(aBlock) = 4;
  (*(void (**)(unint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v38 + 16))(0xD000000000000015, 0x8000000214D342B0, &aBlock, v37, v38);
  *(unsigned char *)(v2
           + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) = 1;
  uint64_t v39 = v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  sub_214BF87C0(v39, v34);
  uint64_t v40 = v83;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v34, 1, v15) == 1)
  {
    sub_214B59CE0(v34, &qword_26ACE3B10);
  }
  else
  {
    uint64_t v41 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v81, v34, v15);
    uint64_t v42 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent;
    if ((*(unsigned char *)(v2
                   + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v15);
    }
    else
    {
      uint64_t v43 = v77;
      sub_214D19C58();
      sub_214D19BB8();
      double v45 = v44;
      id v46 = *(void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v79 = v40 + 8;
      unint64_t v84 = v46;
      v46(v43, v15);
      *(float *)&unsigned int v47 = v45;
      uint64_t v48 = v47;
      unint64_t v49 = (void *)sub_214D1A028();
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v48;
      *(void *)(v50 + 24) = 0;
      v89 = sub_214BFAE10;
      uint64_t v90 = v50;
      uint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v86 = 1107296256;
      uint64_t v87 = sub_214BF1534;
      v88 = &block_descriptor_84;
      long long v51 = _Block_copy(&aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v51);

      *(unsigned char *)(v2 + v42) = 1;
      uint64_t v52 = v36[3];
      uint64_t v53 = v36[4];
      __swift_project_boxed_opaque_existential_1(v36, v52);
      uint64_t v82 = v2;
      uint64_t aBlock = 0;
      unint64_t v86 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      sub_214D1A408();
      uint64_t v54 = aBlock;
      LOBYTE(aBlock) = 4;
      uint64_t v2 = v82;
      (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v53 + 16))(v54, v86, &aBlock, v52, v53);
      swift_bridgeObjectRelease();
      v84(v81, v15);
      uint64_t v55 = (uint64_t)v78;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v78, 1, 1, v15);
      swift_beginAccess();
      sub_214BF8750(v55, v39, &qword_26ACE3B10);
      swift_endAccess();
    }
  }
  uint64_t v56 = v36[3];
  uint64_t v57 = v36[4];
  __swift_project_boxed_opaque_existential_1(v36, v56);
  uint64_t aBlock = 0x6E6F697461636F6CLL;
  unint64_t v86 = 0xEB00000000203A73;
  uint64_t v58 = sub_214B6A264(0, &qword_26784DB90);
  MEMORY[0x2166AFD40](a1, v58);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v59 = aBlock;
  LOBYTE(aBlock) = 4;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v57 + 72))(v59, v86, &aBlock, v56, v57);
  swift_bridgeObjectRelease();
  unint64_t v27 = v35 - 1;
  if (__OFSUB__(v35, 1)) {
    goto LABEL_44;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_45:
    id v60 = (id)MEMORY[0x2166B0290](v27, a1);
    goto LABEL_34;
  }
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v27 >= *(void *)(a1 + 16))
  {
LABEL_47:
    __break(1u);
    return;
  }
  id v60 = *(id *)(a1 + 8 * v27 + 32);
LABEL_34:
  uint64_t v61 = v60;
  swift_release();
  objc_msgSend(v61, sel_coordinate);
  double v63 = round(v62 * 1000.0) / 1000.0;
  objc_msgSend(v61, sel_coordinate);
  id v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A50]), sel_initWithLatitude_longitude_, v63, round(v64 * 1000.0) / 1000.0);
  unint64_t v66 = *(void **)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v66, sel_lock);
  uint64_t v67 = MEMORY[0x2166B1650](v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  if (v67)
  {
    uint64_t v68 = v67;
    uint64_t v69 = sub_214D1A368();
    uint64_t v70 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v80, 1, 1, v69);
    uint64_t v71 = (void *)swift_allocObject();
    v71[2] = 0;
    v71[3] = 0;
    v71[4] = v68;
    v71[5] = v65;
    swift_unknownObjectRetain();
    id v72 = v65;
    sub_214BF1024(v70, (uint64_t)&unk_26784DBA0, (uint64_t)v71);
    swift_release();
    swift_unknownObjectRelease();
  }
  objc_msgSend(v66, sel_unlock, v77);
}

uint64_t sub_214BFA4C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_214BFA510()
{
  uint64_t v2 = *(void *)(v0 + 40);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_214B6B4A4;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_214B6B4A4;
  return sub_214BF63AC(v2);
}

uint64_t sub_214BFA5F4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214BFA604(uint64_t a1)
{
  return a1;
}

uint64_t sub_214BFA62C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B6B4A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26784DBB8 + dword_26784DBB8);
  return v6(a1, v4);
}

uint64_t sub_214BFA6E4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_214BFA7BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784DBB0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_214B6B4A4;
  return sub_214BF5D40(a1, v5, v6, v7, v8);
}

uint64_t sub_214BFA8BC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_214BFA990()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v4);
  unint64_t v6 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void *)(v0 + v3);
  uint64_t v8 = *(void *)(v0 + v3 + 8);
  sub_214BF43DC(v0 + v2, v7, v8, v5, v6);
}

uint64_t sub_214BFAA3C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DC00);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_214BFAAE4()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784DC00) - 8);
  objc_msgSend(*(id *)(v0+ ((*(void *)(v1 + 64)+ ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), sel_authorizationStatus);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DC00);
  return sub_214D1A2F8();
}

uint64_t sub_214BFABA8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  return MEMORY[0x270FA0238](v0, v7 + 8, v5);
}

void sub_214BFAC78()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DBF0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void **)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v4);
  unint64_t v7 = *(void **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_214BF486C(v0 + v2, v5, v6, v7);
}

uint64_t sub_214BFAD20()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214BFAD58(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B6A55C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26784DC08 + dword_26784DC08);
  return v6(a1, v4);
}

uint64_t sub_214BFAE50(char a1, uint64_t a2, SecCertificateRef certificate, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, void (*a13)(void), uint64_t a14)
{
  uint64_t v26 = a6;
  SecKeyRef v20 = SecCertificateCopyKey(certificate);
  if (v20)
  {
    uint64_t v21 = v20;
    sub_214B93DCC(a2, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(a12);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_214BFB034(a1, v25, v21, a4, a5, v26, a7, a8, a9, a10, a11, a13, a14);
  }
  else
  {
    LOWORD(v25[0]) = 0;
    uint64_t v22 = a4;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x8000000214D347C0, 0, (unsigned __int16 *)v25, 0, 0, 0xD000000000000078, 0x8000000214D34800, 0xD000000000000050, 0x8000000214D34880, 129);
    swift_willThrow();
    sub_214B58A4C(v26, a7);
    sub_214B58A4C(a4, a5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v22;
}

uint64_t sub_214BFB034(char a1, void *a2, SecKeyRef key, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(void), uint64_t a13)
{
  uint64_t v15 = v13;
  SecKeyRef v18 = key;
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  uint64_t v105 = a8;
  uint64_t v106 = a9;
  uint64_t v107 = a10;
  uint64_t v108 = a11;
  error[0] = 0;
  CFDataRef v20 = SecKeyCopyExternalRepresentation(key, error);
  if (!v20)
  {
    __int16 v104 = 198;
    sub_214B751B4(error[0], 0xD000000000000033, 0x8000000214D348E0, &v104);
    swift_willThrow();
    goto LABEL_23;
  }
  CFDataRef v21 = v20;
  char v94 = a1;
  uint64_t v99 = v15;
  uint64_t v100 = a4;
  uint64_t v22 = v18;
  unint64_t v23 = a5;
  uint64_t v24 = sub_214D19B68();
  unint64_t v26 = v25;

  unint64_t v27 = (void *)sub_214D19B38();
  id v28 = DigestSha256(v27);

  if (!v28)
  {
    __int16 v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x8000000214D34920, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x8000000214D34800, 0xD00000000000004ELL, 0x8000000214D34960, 145);
    swift_willThrow();
    sub_214B58A4C(v24, v26);
    a5 = v23;
    SecKeyRef v18 = v22;
    a4 = v100;
    goto LABEL_23;
  }
  unint64_t v97 = v23;
  unint64_t v98 = v26;
  v95 = v22;
  uint64_t v29 = sub_214D19B68();
  unint64_t v31 = v30;

  uint64_t v32 = sub_214D19B48();
  uint64_t v34 = v33;
  sub_214B58A4C(v29, v31);
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  a12();
  uint64_t v35 = sub_214D19778();
  if (v14)
  {
    sub_214B58A4C(v24, v26);
    swift_bridgeObjectRelease();
    swift_release();
    SecKeyRef v18 = v95;
    a5 = v97;
    uint64_t v15 = v99;
    a4 = v100;
LABEL_23:
    sub_214B58A4C(a6, a7);
    sub_214B58A4C(a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_deallocPartialClassInstance();
    goto LABEL_24;
  }
  uint64_t v37 = v35;
  unint64_t v38 = v36;
  uint64_t v89 = v32;
  uint64_t v90 = v34;
  swift_release();
  id v39 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v91 = v24;
  uint64_t v15 = v99;
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  unint64_t v92 = v38;
  uint64_t v93 = v37;
  if (byte_26ACEB960)
  {
    uint64_t v40 = (void *)sub_214D1A028();
    unsigned __int8 v41 = objc_msgSend(v39, sel_BOOLForKey_, v40);

    unint64_t v42 = v98;
    a5 = v97;
    SecKeyRef v18 = v95;
    char v43 = v94;
    if (v41)
    {
      if (qword_26ACE41D8 != -1) {
        swift_once();
      }
      id v44 = (id)qword_26ACEBA50;
      sub_214D1A498();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_214D1C1E0;
      uint64_t v46 = sub_214D19B48();
      uint64_t v48 = v47;
      *(void *)(v45 + 56) = MEMORY[0x263F8D310];
      *(void *)(v45 + 64) = sub_214B5F3EC();
      *(void *)(v45 + 32) = v46;
      *(void *)(v45 + 40) = v48;
      sub_214D19E78();

      swift_bridgeObjectRelease();
      a5 = v97;
      unint64_t v42 = v98;
    }
  }
  else
  {

    unint64_t v42 = v98;
    a5 = v97;
    SecKeyRef v18 = v95;
    char v43 = v94;
  }
  if (!v43)
  {
    swift_bridgeObjectRelease();
    __int16 v104 = 75;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003BLL, 0x8000000214D34A50, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x8000000214D34800, 0xD00000000000004ELL, 0x8000000214D34960, 156);
    swift_willThrow();
    sub_214B58A4C(v91, v42);
    unint64_t v60 = v38;
    uint64_t v59 = v93;
LABEL_22:
    sub_214B58A4C(v59, v60);
    a4 = v100;
    goto LABEL_23;
  }
  unint64_t v49 = (void *)sub_214D19B38();
  id v50 = DigestSha256(v49);

  if (!v50)
  {
    swift_bridgeObjectRelease();
    __int16 v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000033, 0x8000000214D349D0, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x8000000214D34800, 0xD00000000000004ELL, 0x8000000214D34960, 159);
    swift_willThrow();
    sub_214B58A4C(v91, v98);
    unint64_t v60 = v38;
    uint64_t v59 = v93;
    goto LABEL_22;
  }
  uint64_t v51 = sub_214D19B68();
  unint64_t v53 = v52;

  uint64_t v54 = (void *)sub_214D19B38();
  id v55 = DigestSha256(v54);

  if (!v55)
  {
    swift_bridgeObjectRelease();
    __int16 v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x8000000214D34A10, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x8000000214D34800, 0xD00000000000004ELL, 0x8000000214D34960, 162);
    swift_willThrow();
    sub_214B58A4C(v91, v98);
    sub_214B58A4C(v93, v92);
    uint64_t v59 = v51;
    unint64_t v60 = v53;
    goto LABEL_22;
  }
  uint64_t v83 = v51;
  uint64_t v96 = sub_214D19B68();
  unint64_t v88 = v56;

  uint64_t v86 = a2[3];
  uint64_t v84 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v86);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3AB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = v100;
  *(void *)(inited + 48) = a5;
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = a6;
  *(void *)(inited + 72) = a7;
  unint64_t v58 = sub_214B917F8(inited);
  swift_setDeallocating();
  sub_214B6A3A0(v100, a5);
  sub_214B6A3A0(a6, a7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3618);
  swift_arrayDestroy();
  uint64_t v61 = (*(uint64_t (**)(uint64_t, unint64_t, SecKeyRef, unint64_t, uint64_t))(v84 + 16))(v93, v92, v18, v58, v86);
  unint64_t v63 = v62;
  uint64_t v85 = v64;
  unint64_t v87 = v65;
  swift_bridgeObjectRelease();
  sub_214B58A4C(v61, v63);
  uint64_t v66 = a2[3];
  uint64_t v67 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v66);
  uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 40))(v66, v67);
  unint64_t v71 = v70;
  uint64_t v72 = sub_214D19B48();
  uint64_t v74 = v73;
  sub_214B58A4C(v69, v71);
  uint64_t v75 = sub_214D19B48();
  uint64_t v77 = v76;
  uint64_t v78 = sub_214D19B48();
  *(unsigned char *)(v99 + 32) = v94;
  *(void *)(v99 + 40) = v72;
  *(void *)(v99 + 48) = v74;
  *(void *)(v99 + 56) = v89;
  *(void *)(v99 + 64) = v90;
  *(void *)(v99 + 72) = v75;
  *(void *)(v99 + 80) = v77;
  *(void *)(v99 + 88) = v78;
  *(void *)(v99 + 96) = v79;
  *(void *)(v99 + 112) = 0;
  *(void *)(v99 + 120) = 0;
  *(void *)(v99 + 104) = 0;
  uint64_t v80 = sub_214D19B48();
  uint64_t v82 = v81;
  sub_214B58A4C(v91, v98);
  sub_214B58A4C(v93, v92);
  sub_214B58A4C(v83, v53);
  sub_214B58A4C(v85, v87);
  sub_214B58A4C(v96, v88);
  sub_214B58A4C(a6, a7);
  sub_214B58A4C(v100, v97);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)(v99 + 16) = v80;
  *(void *)(v99 + 24) = v82;
LABEL_24:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v15;
}

uint64_t static ODNAssessmentGUIDManager.getECv3SHEncryptedContainers(tsidEncryptionCertString:tsid:assessmentGUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_214BFD5C0(a1, a2, a3, a4, a5, a6);
}

uint64_t getECv3SHEncryptedContainers(tsidEncryptionCertString:tsid:assessmentGUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_214BFD5C0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_214BFBA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for PregeneratedAssessment();
  uint64_t v7 = sub_214D19AE8();
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  uint64_t v9 = v7;
  unint64_t v10 = v8;
  uint64_t v11 = sub_214D19AE8();
  if (v12 >> 60 == 15)
  {
    sub_214B59EAC(v9, v10);
LABEL_4:
    LOWORD(v103) = 88;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D34640, 0, (unsigned __int16 *)&v103, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x7344495547746567, 0xEF293A6D6F726628, 45);
    return swift_willThrow();
  }
  uint64_t v14 = v11;
  unint64_t v15 = v12;
  if (!v2[4])
  {
    LOWORD(v103) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D34670, 0, (unsigned __int16 *)&v103, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x7344495547746567, 0xEF293A6D6F726628, 49);
    swift_willThrow();
    sub_214B59EAC(v14, v15);
    return sub_214B59EAC(v9, v10);
  }
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  unint64_t v49 = v12;
  uint64_t v50 = v2[4];
  uint64_t v48 = v11;
  uint64_t v16 = v2[5];
  uint64_t v51 = v2[6];
  uint64_t v17 = v2;
  uint64_t v18 = v2[7];
  uint64_t v19 = v17[9];
  uint64_t v20 = v17[11];
  uint64_t v52 = v17[8];
  uint64_t v53 = v17[10];
  unint64_t v112 = v10;
  uint64_t v21 = v17[13];
  uint64_t v47 = v17[12];
  char v46 = *((unsigned char *)v17 + 112);
  sub_214D19768();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214D19758();
  sub_214BA6410();
  sub_214D19748();
  if (v3)
  {
    swift_release();
    sub_214BA651C(v50);
    sub_214B59EAC(v48, v49);
    uint64_t v22 = v9;
    return sub_214B59EAC(v22, v112);
  }
  uint64_t v43 = v9;
  sub_214D19748();
  uint64_t v39 = v103;
  uint64_t v41 = *((void *)&v104 + 1);
  uint64_t v42 = *((void *)&v103 + 1);
  uint64_t v37 = v105;
  uint64_t v38 = v104;
  long long v23 = v106;
  uint64_t v40 = *((void *)&v105 + 1);
  uint64_t v92 = v50;
  uint64_t v93 = v16;
  uint64_t v94 = v51;
  uint64_t v95 = v18;
  uint64_t v96 = v52;
  uint64_t v97 = v19;
  uint64_t v98 = v53;
  uint64_t v99 = v20;
  uint64_t v100 = v47;
  uint64_t v101 = v21;
  char v102 = v46;
  v91[0] = v103;
  v91[1] = v104;
  v91[2] = v105;
  v91[3] = v106;
  sub_214B54820(v91, (uint64_t)&v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v89 = v109;
  v90[0] = v110;
  *(void *)&v90[1] = v111;
  long long v85 = v105;
  long long v86 = v106;
  long long v87 = v107;
  long long v88 = v108;
  long long v83 = v103;
  long long v84 = v104;
  uint64_t v70 = v50;
  uint64_t v71 = v16;
  uint64_t v72 = v51;
  uint64_t v73 = v18;
  uint64_t v74 = v52;
  uint64_t v75 = v19;
  uint64_t v76 = v53;
  uint64_t v77 = v20;
  uint64_t v78 = v47;
  uint64_t v79 = v21;
  char v80 = v46;
  v68[0] = v39;
  v68[1] = v42;
  v68[2] = v38;
  v68[3] = v41;
  v68[4] = v37;
  v68[5] = v40;
  long long v69 = v23;
  sub_214B54820(v68, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v62 = v81[2];
  long long v63 = v81[3];
  *(void *)&v67[1] = v82;
  long long v66 = v81[6];
  v67[0] = v81[7];
  long long v64 = v81[4];
  long long v65 = v81[5];
  long long v60 = v81[0];
  long long v61 = v81[1];
  if (*(_OWORD *)((char *)v90 + 8) != *(_OWORD *)(v45 + *(int *)(v6 + 32)) && (sub_214D1ABC8() & 1) == 0
    || *(_OWORD *)((char *)v67 + 8) != *(_OWORD *)(v45 + *(int *)(v6 + 40)) && (sub_214D1ABC8() & 1) == 0)
  {
    sub_214B5A080((uint64_t)&v83);
    sub_214B5A080((uint64_t)&v60);
    LOWORD(v54[0]) = 109;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x8000000214D34690, 0, (unsigned __int16 *)v54, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x7344495547746567, 0xEF293A6D6F726628, 62);
    swift_willThrow();
    swift_release();
    sub_214BA651C(v50);
    sub_214B59EAC(v48, v49);
    uint64_t v22 = v9;
    return sub_214B59EAC(v22, v112);
  }
  if (qword_26ACE3C08 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_214D19EE8();
  __swift_project_value_buffer(v24, (uint64_t)qword_26ACE3AD0);
  unint64_t v25 = sub_214D19EC8();
  os_log_type_t v26 = sub_214D1A498();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl(&dword_214B4E000, v25, v26, "using guids from pre-generated assessment", v27, 2u);
    MEMORY[0x2166B1540](v27, -1, -1);
  }

  uint64_t v28 = v17[3];
  uint64_t v58 = v17[2];
  uint64_t v59 = v28;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v56 = 0xD000000000000016;
  unint64_t v57 = 0x8000000214D346D0;
  ODIClientGUID.description.getter();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  v54[6] = v66;
  v54[7] = v67[0];
  uint64_t v55 = *(void *)&v67[1];
  v54[2] = v62;
  v54[3] = v63;
  v54[4] = v64;
  v54[5] = v65;
  v54[0] = v60;
  v54[1] = v61;
  ODIClientGUID.description.getter();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(v54[0]) = 14;
  CoreODILogger.debug(_:category:)(0xD000000000000016, 0x8000000214D346D0, v54);
  sub_214B59EAC(v43, v112);
  swift_release();
  swift_bridgeObjectRelease();
  sub_214BA651C(v50);
  sub_214B59EAC(v48, v49);
  uint64_t result = swift_bridgeObjectRelease();
  long long v29 = v90[0];
  *(_OWORD *)(v44 + 96) = v89;
  *(_OWORD *)(v44 + 112) = v29;
  long long v30 = v86;
  *(_OWORD *)(v44 + 32) = v85;
  *(_OWORD *)(v44 + 48) = v30;
  long long v31 = v88;
  *(_OWORD *)(v44 + 64) = v87;
  *(_OWORD *)(v44 + 80) = v31;
  long long v32 = v84;
  *(_OWORD *)uint64_t v44 = v83;
  *(_OWORD *)(v44 + 16) = v32;
  long long v33 = v64;
  *(_OWORD *)(v44 + 216) = v65;
  long long v34 = v67[0];
  *(_OWORD *)(v44 + 232) = v66;
  *(_OWORD *)(v44 + 248) = v34;
  long long v35 = v60;
  *(_OWORD *)(v44 + 152) = v61;
  long long v36 = v63;
  *(_OWORD *)(v44 + 168) = v62;
  *(_OWORD *)(v44 + 184) = v36;
  *(_OWORD *)(v44 + 200) = v33;
  *(void *)(v44 + 128) = *(void *)&v90[1];
  *(void *)(v44 + 264) = *(void *)&v67[1];
  *(_OWORD *)(v44 + 136) = v35;
  return result;
}

uint64_t sub_214BFC4A0(uint64_t a1)
{
  *(void *)(v2 + 1016) = v1;
  *(void *)(v2 + 1008) = a1;
  return MEMORY[0x270FA2498](sub_214BFC4C4, 0, 0);
}

uint64_t sub_214BFC4C4()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 1016);
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)(v0 + 1024) = v2;
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)(v0 + 1032) = v3;
  uint64_t v4 = *(void *)(v1 + 48);
  *(void *)(v0 + 1040) = v4;
  uint64_t v5 = *(void *)(v1 + 56);
  *(void *)(v0 + 1048) = v5;
  uint64_t v6 = *(void *)(v1 + 64);
  *(void *)(v0 + 1056) = v6;
  uint64_t v7 = *(void *)(v1 + 72);
  *(void *)(v0 + 1064) = v7;
  uint64_t v8 = *(void *)(v1 + 80);
  *(void *)(v0 + 1072) = v8;
  uint64_t v9 = *(void *)(v1 + 88);
  *(void *)(v0 + 1080) = v9;
  uint64_t v10 = *(void *)(v1 + 96);
  *(void *)(v0 + 1088) = v10;
  uint64_t v11 = *(void *)(v1 + 104);
  *(void *)(v0 + 1096) = v11;
  char v12 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v0 + 913) = v12;
  if (v2)
  {
    *(void *)(v0 + 832) = v2;
    *(void *)(v0 + 840) = v3;
    *(void *)(v0 + 848) = v4;
    *(void *)(v0 + 856) = v5;
    *(void *)(v0 + 864) = v6;
    *(void *)(v0 + 872) = v7;
    *(void *)(v0 + 880) = v8;
    *(void *)(v0 + 888) = v9;
    *(void *)(v0 + 896) = v10;
    *(void *)(v0 + 904) = v11;
    *(unsigned char *)(v0 + 912) = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 1104) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_214BFC6F4;
    return DIPClientGUIDFactory.createNewAssessmentGUID()(v0 + 16);
  }
  else
  {
    v16[0] = -118;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x8000000214D34520, 0, v16, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x65746172656E6567, 0xEF29287344495547, 152);
    swift_willThrow();
    unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_214BFC6F4()
{
  *(void *)(*(void *)v1 + 1112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214BFD0C4;
  }
  else {
    uint64_t v2 = sub_214BFC808;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214BFC808()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 + 1112);
  long long v2 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 400) = v2;
  uint64_t v3 = *(void *)(v0 + 144);
  *(void *)(v0 + 416) = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 336) = v4;
  long long v5 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 368) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 304) = v6;
  uint64_t v7 = *(void *)(v0 + 408);
  uint64_t v8 = v3;
  *(void *)(v0 + 1120) = v7;
  *(void *)(v0 + 1128) = v3;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 1136) = sub_214B69620(v7, v8);
  *(void *)(v0 + 1144) = v9;
  if (v1)
  {
    uint64_t v10 = *(void *)(v0 + 1024);
    swift_bridgeObjectRelease();
    sub_214B5A080(v0 + 288);
    uint64_t v11 = v10;
LABEL_5:
    sub_214BA651C(v11);
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  if (v9 >> 60 == 15)
  {
    uint64_t v12 = *(void *)(v0 + 1024);
    sub_214B5A080(v0 + 288);
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v22[0] = 0xD00000000000008DLL;
    v22[1] = 0x8000000214D34540;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000214D34540, 0, (unsigned __int8 *)v22, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x65746172656E6567, 0xEF29287344495547, 159);
    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v11 = v12;
    goto LABEL_5;
  }
  char v15 = *(unsigned char *)(v0 + 913);
  uint64_t v16 = *(void *)(v0 + 1096);
  uint64_t v17 = *(void *)(v0 + 1088);
  long long v18 = *(_OWORD *)(v0 + 1072);
  long long v19 = *(_OWORD *)(v0 + 1056);
  long long v20 = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v0 + 920) = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 936) = v20;
  *(_OWORD *)(v0 + 952) = v19;
  *(_OWORD *)(v0 + 968) = v18;
  *(void *)(v0 + 984) = v17;
  *(void *)(v0 + 992) = v16;
  *(unsigned char *)(v0 + 1000) = v15;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 1152) = v21;
  void *v21 = v0;
  v21[1] = sub_214BFCB70;
  return DIPClientGUIDFactory.createNewTrainingGUID()(v0 + 424);
}

uint64_t sub_214BFCB70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_214B5A080(v2 + 288);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_214BFD158;
  }
  else
  {
    uint64_t v3 = sub_214BFCC98;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_214BFCC98()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 552);
  *(void *)(v0 + 824) = v2;
  long long v3 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 808) = v3;
  long long v4 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 744) = v4;
  long long v5 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 776) = v5;
  long long v6 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 712) = v6;
  uint64_t v7 = *(void *)(v0 + 816);
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_214B69620(v7, v8);
  if (v1)
  {
    unint64_t v11 = *(void *)(v0 + 1144);
    uint64_t v12 = *(void *)(v0 + 1136);
    uint64_t v13 = *(void *)(v0 + 1024);
    swift_bridgeObjectRelease();
    sub_214B5A080(v0 + 696);
    sub_214B59EAC(v12, v11);
    swift_bridgeObjectRelease();
    sub_214B5A080(v0 + 288);
    uint64_t v14 = v13;
LABEL_5:
    sub_214BA651C(v14);
    long long v19 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  unint64_t v15 = v10;
  uint64_t v16 = (_OWORD *)(v0 + 288);
  uint64_t v35 = v8;
  if (v10 >> 60 == 15)
  {
    uint64_t v17 = *(void *)(v0 + 1136);
    unint64_t v32 = *(void *)(v0 + 1144);
    uint64_t v18 = *(void *)(v0 + 1024);
    sub_214B5A080((uint64_t)v16);
    swift_bridgeObjectRelease();
    sub_214B5A080(v0 + 696);
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v36[0] = 0xD00000000000008DLL;
    v36[1] = 0x8000000214D34570;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x8000000214D34570, 0, (unsigned __int8 *)v36, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x65746172656E6567, 0xEF29287344495547, 166);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_214B59EAC(v17, v32);
    uint64_t v14 = v18;
    goto LABEL_5;
  }
  uint64_t v20 = v9;
  uint64_t v34 = *(void *)(v0 + 1144);
  uint64_t v21 = *(void *)(v0 + 1136);
  long long v33 = *(_OWORD *)(v0 + 1120);
  uint64_t v22 = *(void *)(v0 + 1008);
  sub_214BA651C(*(void *)(v0 + 1024));
  long long v23 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 672) = v23;
  *(void *)(v0 + 688) = *(void *)(v0 + 416);
  long long v24 = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 608) = v24;
  long long v25 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 640) = v25;
  long long v26 = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 560) = *v16;
  *(_OWORD *)(v0 + 576) = v26;
  nullsub_1(v0 + 560);
  long long v27 = *(_OWORD *)(v0 + 760);
  *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 776);
  long long v28 = *(_OWORD *)(v0 + 808);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 792);
  *(_OWORD *)(v0 + 264) = v28;
  long long v29 = *(_OWORD *)(v0 + 696);
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 712);
  long long v30 = *(_OWORD *)(v0 + 744);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 728);
  *(_OWORD *)(v0 + 200) = v30;
  *(_OWORD *)(v0 + 216) = v27;
  *(void *)(v0 + 280) = *(void *)(v0 + 824);
  *(_OWORD *)(v0 + 152) = v29;
  nullsub_1(v0 + 152);
  sub_214B58AA4(v0 + 560, v22);
  *(_OWORD *)(v22 + 136) = v33;
  *(void *)(v22 + 152) = v21;
  *(void *)(v22 + 160) = v34;
  sub_214B58AA4(v0 + 152, v22 + 168);
  *(void *)(v22 + 304) = v7;
  *(void *)(v22 + 312) = v35;
  *(void *)(v22 + 320) = v20;
  *(void *)(v22 + 328) = v15;
  long long v19 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v19();
}

uint64_t sub_214BFD0C4()
{
  sub_214BA651C(*(void *)(v0 + 1024));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BFD158()
{
  uint64_t v1 = v0[128];
  sub_214B59EAC(v0[142], v0[143]);
  sub_214BA651C(v1);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t ODNAssessmentGUIDManager.deinit()
{
  swift_bridgeObjectRelease();
  sub_214BA651C(*(void *)(v0 + 32));
  return v0;
}

uint64_t ODNAssessmentGUIDManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_214BA651C(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_214BFD2E8()
{
  uint64_t v0 = sub_214D19AE8();
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = v0;
    unint64_t v3 = v1;
    uint64_t v4 = sub_214D19AE8();
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = v4;
      unint64_t v7 = v5;
      sub_214D19768();
      swift_allocObject();
      sub_214D19758();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
      sub_214BFDBAC(&qword_26784D298, &qword_26ACE3868);
      sub_214D19748();
      uint64_t v8 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3870);
      sub_214BFDBAC(&qword_26784DC30, &qword_26ACE3870);
      sub_214D19748();
      sub_214B59EAC(v2, v3);
      swift_release();
      sub_214B59EAC(v6, v7);
      return v8;
    }
    sub_214B59EAC(v2, v3);
  }
  uint64_t v11 = 45;
  unint64_t v12 = 0xE100000000000000;
  char v10 = 14;
  CoreODILogger.info(_:category:)(0xD000000000000035, 0x8000000214D345A0, &v10);
  return 0;
}

uint64_t sub_214BFD5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_214B75F18();
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = v11;
      uint64_t v14 = SecCertificateCopyKey(v11);
      if (v14 && (unint64_t v15 = v14, v16 = sub_214B760A8(v14), v18 = v17, v15, v18 >> 60 != 15))
      {
        uint64_t v29 = v16;
        SecCertificateRef certificate = (SecCertificateRef)type metadata accessor for DIPECIESSessionECV3SH();
        swift_allocObject();
        SecCertificateRef v27 = certificate;
        long long v28 = &off_26C5ABF00;
        *(void *)long long v26 = sub_214BD07F4(0);
        sub_214D198C8();
        swift_allocObject();
        uint64_t v24 = *(void *)v26;
        swift_retain();
        uint64_t v20 = v13;
        unint64_t v21 = sub_214D19898() | 0x4000000000000000;
        uint64_t v22 = v29;
        sub_214B6A3A0(v29, v18);
        a3 = sub_214BFAE50(2, (uint64_t)v26, v20, 0x4100000000, v21, v29, v18, 49, 0xE100000000000000, a3, a4, &qword_26ACE3868, (void (*)(void))sub_214BFDC50, (uint64_t)&type metadata for TrainingSignalId);
        SecCertificateRef v27 = certificate;
        long long v28 = &off_26C5ABF00;
        *(void *)long long v26 = v24;
        swift_allocObject();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_214D19898();
        sub_214BFAE50(2, (uint64_t)v26, v20, 0x4100000000, v23 | 0x4000000000000000, v22, v18, 49, 0xE100000000000000, a5, a6, &qword_26ACE3870, (void (*)(void))sub_214BFDBFC, (uint64_t)&type metadata for AssessmentGUIDContainer);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26[0] = 91;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003ALL, 0x8000000214D34730, 0, v26, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0xD00000000000004BLL, 0x8000000214D34770, 118);
        swift_willThrow();
      }
    }
  }
  else
  {
    if (qword_26ACE41D8 != -1) {
      swift_once();
    }
    id v12 = (id)qword_26ACEBA50;
    sub_214D1A488();
    sub_214D19E78();

    return 0;
  }
  return a3;
}

uint64_t sub_214BFD9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_214BFD9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B6A55C;
  return v9(a1, a2, a3);
}

uint64_t sub_214BFDAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_214BFDAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_214BFDB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_214BFDB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

uint64_t sub_214BFDB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for ODNAssessmentGUIDManager()
{
  return self;
}

uint64_t method lookup function for ODNAssessmentGUIDManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODNAssessmentGUIDManager);
}

uint64_t sub_214BFDBAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214BFDBFC()
{
  unint64_t result = qword_26ACE3890;
  if (!qword_26ACE3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3890);
  }
  return result;
}

unint64_t sub_214BFDC50()
{
  unint64_t result = qword_26ACE36F8;
  if (!qword_26ACE36F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36F8);
  }
  return result;
}

uint64_t sub_214BFDCA4()
{
  v1[9] = v0;
  v1[10] = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BFDDB4, v0, 0);
}

uint64_t sub_214BFDDB4()
{
  unint64_t v17 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9] + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_214C03180(v4, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_214B59CE0(v0[15], &qword_26784DD60);
  }
  else
  {
    uint64_t v5 = v0[15];
    uint64_t v7 = v0[12];
    uint64_t v6 = v0[13];
    uint64_t v8 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    sub_214B59CE0(v5, &qword_26784DD60);
    sub_214C03070();
    uint64_t v9 = swift_allocError();
    *uint64_t v10 = 2;
    v0[8] = v9;
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  uint64_t v11 = v0[14];
  long long v15 = *(_OWORD *)(v0 + 9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[12] + 56))(v11, 1, 1, v0[11]);
  swift_beginAccess();
  sub_214C031E8(v11, v4);
  swift_endAccess();
  char v16 = 0;
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x8000000214D34C80, &v16);
  sub_214C03250(&qword_26784DD68, 255, (void (*)(uint64_t))type metadata accessor for ODINFHardwareMonitor);
  uint64_t v12 = swift_task_alloc();
  v0[16] = v12;
  *(_OWORD *)(v12 + 16) = v15;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[17] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_214BFE094;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_214BFE094()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = sub_214BFE234;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 72);
    swift_task_dealloc();
    uint64_t v4 = sub_214BFE1BC;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214BFE1BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BFE234()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BFE2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  uint64_t v16 = a2 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_214C031E8((uint64_t)v13, v16);
  swift_endAccess();
  uint64_t v17 = sub_214D1A368();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  uint64_t v18 = sub_214C03250(&qword_26784DD68, 255, (void (*)(uint64_t))type metadata accessor for ODINFHardwareMonitor);
  long long v19 = (void *)swift_allocObject();
  v19[2] = a2;
  v19[3] = v18;
  v19[4] = a2;
  v19[5] = a3;
  swift_retain_n();
  sub_214BD7480((uint64_t)v9, (uint64_t)&unk_26784DD78, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_214BFE510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_214BFE530, a4, 0);
}

uint64_t sub_214BFE530()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214BFE5C8;
  return MEMORY[0x270FA1FF0](1000000000);
}

uint64_t sub_214BFE5C8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    return MEMORY[0x270FA2498](sub_214BFE70C, v6, 0);
  }
}

uint64_t sub_214BFE70C()
{
  uint64_t v4 = v0;
  char v3 = 0;
  CoreODILogger.info(_:category:)(0xD000000000000049, 0x8000000214D34CE0, &v3);
  sub_214BFE7C8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214BFE7C8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v13 = &v16[-v12];
  uint64_t v14 = v0 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_214C03180(v14, (uint64_t)v13);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1))
  {
    sub_214B59CE0((uint64_t)v13, &qword_26784DD60);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v13, v1);
    sub_214B59CE0((uint64_t)v13, &qword_26784DD60);
    sub_214D1A2F8();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
  swift_beginAccess();
  sub_214C031E8((uint64_t)v10, v14);
  return swift_endAccess();
}

uint64_t sub_214BFE9EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0x657261685369646FLL;
  unint64_t v12 = 0xEF726567676F4C64;
  char v10 = 0;
  CoreODILogger.info(_:category:)(0xD00000000000002FLL, 0x8000000214D34C50, &v10);
  sub_214D1A338();
  uint64_t v6 = sub_214D1A368();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  swift_retain();
  sub_214BF1024((uint64_t)v5, (uint64_t)&unk_26784DD58, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_214BFEB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214BFEC4C, a4, 0);
}

uint64_t sub_214BFEC4C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8] + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_214C03180(v4, v1);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[13];
  if (v5)
  {
    sub_214B59CE0(v0[13], &qword_26784DD60);
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v7 = v0[11];
    uint64_t v9 = v0[9];
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 16))(v7, v0[13], v9);
    sub_214B59CE0(v6, &qword_26784DD60);
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  uint64_t v10 = v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[10] + 56))(v10, 1, 1, v0[9]);
  swift_beginAccess();
  sub_214C031E8(v10, v4);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

id sub_214BFEE28()
{
  uint64_t v1 = (char *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v2 = &v1[OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5.receiver = v1;
  v5.super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_214BFEF68()
{
  sub_214B59CE0(v0 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation, &qword_26784DD60);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

double sub_214BFEFB0()
{
  type metadata accessor for DeviceInformation();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  qword_26ACE5430 = v0;
  return result;
}

uint64_t static DeviceInformation.shared.getter()
{
  if (qword_26ACE5448 != -1) {
    swift_once();
  }
  return swift_retain();
}

BOOL static DeviceInformation.DeviceInfoError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceInformation.DeviceInfoError.hash(into:)()
{
  return sub_214D1AD18();
}

uint64_t DeviceInformation.DeviceInfoError.hashValue.getter()
{
  return sub_214D1AD48();
}

uint64_t sub_214BFF0DC()
{
  *(void *)(v1 + 240) = v0;
  return MEMORY[0x270FA2498](sub_214BFF0FC, v0, 0);
}

uint64_t sub_214BFF0FC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 112);
    objc_super v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    swift_bridgeObjectRetain();
    return v5(v3, v2);
  }
  else
  {
    return MEMORY[0x270FA2498](sub_214BFF1C0, 0, 0);
  }
}

uint64_t sub_214BFF1C0()
{
  if (qword_26ACE4038 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26ACE4030;
  *(void *)(v0 + 248) = qword_26ACE4030;
  swift_retain();
  return MEMORY[0x270FA2498](sub_214BFF268, v1, 0);
}

uint64_t sub_214BFF268()
{
  uint64_t v1 = *(void *)(v0 + 248);
  if (*(unsigned char *)(v1 + 168))
  {
    return MEMORY[0x270FA2498](sub_214BFF448, v1, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_214BFF338;
    return sub_214BE3BEC();
  }
}

uint64_t sub_214BFF338()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  return MEMORY[0x270FA2498](sub_214BFF448, v2, 0);
}

uint64_t sub_214BFF448()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = sub_214C03250((unint64_t *)&qword_26ACE44B0, 255, (void (*)(uint64_t))type metadata accessor for ODIDeviceInfo);
  v0[33] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[34] = v3;
  v3[2] = v1;
  v3[3] = 0x54746375646F7250;
  v3[4] = 0xEB00000000657079;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4288);
  v0[36] = v5;
  *uint64_t v4 = v0;
  v4[1] = sub_214BFF5C4;
  return MEMORY[0x270FA2318](v0 + 20, v1, v2, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BC4F98, v3, v5);
}

uint64_t sub_214BFF5C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_214BFF704, v2, 0);
}

uint64_t sub_214BFF704()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = v3;
  v3[2] = v2;
  v3[3] = 0x4E746375646F7250;
  v3[4] = 0xEB00000000656D61;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[40] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214BFF828;
  uint64_t v5 = v0[36];
  return MEMORY[0x270FA2318](v0 + 24, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BFF828()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 328) = *(_OWORD *)(v1 + 192);
  return MEMORY[0x270FA2498](sub_214BFF968, v2, 0);
}

uint64_t sub_214BFF968()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  uint64_t v3 = swift_task_alloc();
  v0[43] = v3;
  *(void *)(v3 + 16) = v2;
  strcpy((char *)(v3 + 24), "ProductVersion");
  *(unsigned char *)(v3 + 39) = -18;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214BFFA90;
  uint64_t v5 = v0[36];
  return MEMORY[0x270FA2318](v0 + 22, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BFFA90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 360) = *(_OWORD *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_214BFFBD0, v2, 0);
}

uint64_t sub_214BFFBD0()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  uint64_t v3 = swift_task_alloc();
  v0[47] = v3;
  *(void *)(v3 + 16) = v2;
  strcpy((char *)(v3 + 24), "BuildVersion");
  *(unsigned char *)(v3 + 37) = 0;
  *(_WORD *)(v3 + 38) = -5120;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[48] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_214BFFCF4;
  uint64_t v5 = v0[36];
  return MEMORY[0x270FA2318](v0 + 18, v2, v1, 0x736E41474D746567, 0xEF293A5F28726577, sub_214BD06B0, v3, v5);
}

uint64_t sub_214BFFCF4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 392) = *(_OWORD *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_214BFFE34, v2, 0);
}

id sub_214BFFE34()
{
  type metadata accessor for DeviceInformation();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id result = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = *MEMORY[0x263EFFB70];
  if (*MEMORY[0x263EFFB70])
  {
    id v12 = result;
    if (objc_msgSend(result, sel_objectForInfoDictionaryKey_, v4))
    {
      sub_214D1A668();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_214C00320(v0 + 16, v0 + 112);
    if (*(void *)(v0 + 136)) {
      swift_dynamicCast();
    }
    else {
      sub_214B59CE0(v0 + 112, (uint64_t *)&unk_26ACE44A0);
    }
    id v5 = objc_msgSend(v12, sel_bundleIdentifier);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_214D1A038();
    }
    id v7 = objc_msgSend(v2, sel_mainBundle);
    if (objc_msgSend(v7, sel_objectForInfoDictionaryKey_, v4))
    {
      sub_214D1A668();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 64) = 0u;
    }
    sub_214C00320(v0 + 48, v0 + 80);
    if (*(void *)(v0 + 104)) {
      swift_dynamicCast();
    }
    else {
      sub_214B59CE0(v0 + 80, (uint64_t *)&unk_26ACE44A0);
    }
    id v8 = objc_msgSend(v7, sel_bundleIdentifier);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_214D1A038();
    }
    uint64_t v10 = *(void *)(v0 + 240);
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    *(void *)(v10 + 112) = 60;
    *(void *)(v10 + 120) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v11 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return (id)v11(60, 0xE100000000000000);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DeviceInformation()
{
  return self;
}

uint64_t sub_214C00320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE44A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214C00388()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_214C003A8, v0, 0);
}

uint64_t sub_214C003A8()
{
  uint64_t v1 = (objc_class *)objc_msgSend(self, sel_sharedHardwareManagerWithNoUI);
  v0[2].super_class = v1;
  uint64_t v2 = type metadata accessor for ODINFHardwareMonitor();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v0[1].id receiver = (id)v3;
  v0[1].super_class = (Class)v2;
  id v6 = objc_msgSendSuper2(v0 + 1, sel_init);
  v0[3].id receiver = v6;
  [(objc_class *)v1 registerEventListener:v6];
  unsigned int v7 = [(objc_class *)v1 getHwSupport];
  if ((v7 | 2) == 3)
  {
    id v8 = (objc_class *)swift_task_alloc();
    v0[3].super_class = v8;
    *(void *)id v8 = v0;
    *((void *)v8 + 1) = sub_214C00604;
    return sub_214BFDCA4();
  }
  else
  {
    unsigned int v10 = v7;
    [(objc_class *)v0[2].super_class unregisterEventListener:v0[3].receiver];
    id receiver = v0[3].receiver;
    if (v10 == 2)
    {

      super_class = (uint64_t (*)(Class))v0->super_class;
      Class v13 = v0[2].super_class;
      return super_class(v13);
    }
    else
    {
      Class v14 = v0[2].super_class;
      sub_214C03070();
      swift_allocError();
      *uint64_t v15 = 0;
      swift_willThrow();

      uint64_t v16 = (uint64_t (*)(void))v0->super_class;
      return v16();
    }
  }
}

uint64_t sub_214C00604()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_214C00844;
  }
  else {
    uint64_t v4 = sub_214C00730;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C00730()
{
  unsigned int v1 = objc_msgSend(*(id *)(v0 + 40), sel_getHwSupport);
  objc_msgSend(*(id *)(v0 + 40), sel_unregisterEventListener_, *(void *)(v0 + 48));
  uint64_t v2 = *(void **)(v0 + 48);
  if (v1 == 2)
  {

    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v4 = *(void *)(v0 + 40);
    return v3(v4);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 40);
    sub_214C03070();
    swift_allocError();
    unsigned char *v7 = 0;
    swift_willThrow();

    id v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_214C00844()
{
  unsigned int v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214C008AC()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x270FA2498](sub_214C0093C, v0, 0);
}

uint64_t sub_214C0093C()
{
  uint64_t v1 = swift_allocObject();
  v0[8] = v1;
  *(void *)(v1 + 16) = 0;
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214C00A48;
  uint64_t v4 = v0[7];
  v3[4] = v4;
  return MEMORY[0x270FA2498](sub_214C003A8, v4, 0);
}

uint64_t sub_214C00A48(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 88) = a1;
  *(void *)(v4 + 96) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 56);
  if (v1) {
    uint64_t v6 = sub_214C010E4;
  }
  else {
    uint64_t v6 = sub_214C00BA8;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_214C00BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = v2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v3 + 144);
  uint64_t v5 = v3;
  if (v4)
  {
LABEL_2:
    *(void *)(v2 + 104) = v4;
    uint64_t v6 = *(void *)(v2 + 88);
    uint64_t v7 = *(void *)(v3 + 136);
    uint64_t v8 = sub_214C03250(&qword_26784DD30, a2, (void (*)(uint64_t))type metadata accessor for DeviceInformation);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v2 + 112) = v9;
    long long v10 = *(_OWORD *)(v2 + 64);
    *(void *)(v9 + 16) = v6;
    *(_OWORD *)(v9 + 24) = v10;
    *(void *)(v9 + 40) = v7;
    *(void *)(v9 + 48) = v4;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v2 + 120) = v11;
    *uint64_t v11 = v2;
    v11[1] = sub_214C00EB4;
    return MEMORY[0x270FA2360](v2 + 16, v5, v8, 0xD000000000000012, 0x8000000214D34BD0, sub_214C02E98, v9, &type metadata for ODNNearFieldData);
  }
  *(void *)(v2 + 48) = 0;
  id v12 = objc_msgSend(*(id *)(v2 + 88), sel_cachedEmbeddedSecureElementSerialNumber_, v2 + 48);
  Class v13 = *(void **)(v2 + 48);
  if (v12)
  {
    Class v14 = v12;
    uint64_t v15 = sub_214D1A038();
    uint64_t v17 = v16;
    id v18 = v13;

    *(void *)(v3 + 136) = v15;
    *(void *)(v3 + 144) = v17;
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 144);
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + 56);
      goto LABEL_2;
    }
    long long v19 = *(void **)(v2 + 88);
    v23[0] = 76;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x8000000214D34B50, 0, v23, 0, 0, 0xD00000000000005FLL, 0x8000000214D34B70, 0xD000000000000012, 0x8000000214D34BD0, 148);
  }
  else
  {
    long long v19 = *(void **)(v2 + 88);
    id v20 = v13;
    sub_214D199B8();
  }
  swift_willThrow();
  swift_release();
  swift_release();

  uint64_t v21 = *(uint64_t (**)(void))(v2 + 8);
  return v21();
}

uint64_t sub_214C00EB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = sub_214C0117C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_214C01030;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C01030()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v1, v2, v3, v4);
}

uint64_t sub_214C010E4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C0117C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C01244(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v22 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD38);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v17 = (void *)(v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v17 = a5;
  v17[1] = a6;
  aBlock[4] = sub_214C02FA0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214C01690;
  aBlock[3] = &block_descriptor_13;
  id v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  id v19 = objc_msgSend(v22, sel_startSecureElementManagerSessionWithPriority_, v18);
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

void sub_214C0144C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v26[6] = *MEMORY[0x263EF8340];
  if (a1 && !a2)
  {
    long long v10 = (void *)(a3 + 16);
    uint64_t v11 = (void **)(a4 + 16);
    swift_beginAccess();
    v26[0] = *v10;
    swift_beginAccess();
    uint64_t v24 = *v11;
    id v23 = a1;
    unsigned int v12 = objc_msgSend(v23, sel_getCryptogram_challengeResponse_, v26, &v24);
    uint64_t v13 = v24;
    uint64_t v14 = *v11;
    *uint64_t v11 = v24;
    swift_endAccess();
    unint64_t v15 = (void *)v26[0];
    uint64_t v16 = (void *)*v10;
    *long long v10 = v26[0];
    swift_endAccess();
    id v17 = v13;
    id v18 = v15;

    if (v12)
    {
      swift_beginAccess();
      id v19 = (void *)*v10;
      if (v19)
      {
        swift_beginAccess();
        id v20 = *v11;
        if (v20)
        {
          v25[0] = v19;
          v25[1] = v20;
          v25[2] = a6;
          v25[3] = a7;
          id v21 = v19;
          id v22 = v20;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD38);
          sub_214D1A2F8();
          objc_msgSend(v23, sel_endSession);

          return;
        }
      }
    }
    objc_msgSend(v23, sel_endSession);
  }
  LOBYTE(v25[0]) = 77;
  v25[0] = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x8000000214D34C30, 0, (unsigned __int8 *)v25, 0, 0, 0xD00000000000005FLL, 0x8000000214D34B70, 0xD000000000000012, 0x8000000214D34BD0, 163);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD38);
  sub_214D1A2E8();
}

void sub_214C01690(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_214C0171C()
{
  *(void *)(v1 + 120) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 128) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214C017F4;
  v2[4] = v0;
  return MEMORY[0x270FA2498](sub_214C003A8, v0, 0);
}

uint64_t sub_214C017F4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[17] = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v3[15];
    return MEMORY[0x270FA2498](sub_214C01978, v6, 0);
  }
}

uint64_t sub_214C01978(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[15];
  v2[13] = 0;
  uint64_t v5 = sub_214C03250(&qword_26784DD30, a2, (void (*)(uint64_t))type metadata accessor for DeviceInformation);
  uint64_t v6 = swift_task_alloc();
  v2[18] = v6;
  *(void *)(v6 + 16) = v2 + 13;
  *(void *)(v6 + 24) = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[19] = v7;
  uint64_t v8 = sub_214B6A264(0, &qword_26784DD80);
  void *v7 = v2;
  v7[1] = sub_214C01B04;
  return MEMORY[0x270FA2360](v2 + 12, v4, v5, 0x4553657461647075, 0xED00002928734449, sub_214C0339C, v6, v8);
}

uint64_t sub_214C01B04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = sub_214C02004;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 120);
    swift_task_dealloc();
    uint64_t v4 = sub_214C01C78;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C01C78()
{
  *(void *)(v0 + 80) = 0;
  uint64_t v1 = *(void **)(v0 + 96);
  id v2 = objc_msgSend(*(id *)(v0 + 136), sel_cachedEmbeddedSecureElementSerialNumber_, v0 + 80);
  uint64_t v3 = *(void **)(v0 + 80);
  if (!v2) {
    goto LABEL_14;
  }
  uint64_t v4 = v2;
  uint64_t v5 = *(void **)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = sub_214D1A038();
  uint64_t v9 = v8;
  id v10 = v3;

  *(void *)(v6 + 136) = v7;
  *(void *)(v6 + 144) = v9;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 88) = 0;
  id v11 = objc_msgSend(v5, sel_secureElementsWithError_, v0 + 88);
  uint64_t v3 = *(void **)(v0 + 88);
  if (v11)
  {
    unsigned int v12 = v11;
    uint64_t v34 = v1;
    uint64_t v13 = sub_214D1A268();
    id v14 = v3;

    uint64_t v15 = *(void *)(v13 + 16);
    if (v15)
    {
      uint64_t v16 = v0 + 16;
      uint64_t v17 = v0 + 48;
      id v18 = (id *)(v0 + 112);
      uint64_t v19 = v13 + 32;
      uint64_t v33 = v0;
      swift_bridgeObjectRetain();
      id v20 = (void *)MEMORY[0x263F8EE78];
      do
      {
        sub_214B5EC30(v19, v17);
        sub_214B5EC30(v17, v16);
        sub_214B6A264(0, &qword_26784DD88);
        if (swift_dynamicCast()
          && (id v21 = *v18,
              id v22 = objc_msgSend(*v18, sel_serialNumber),
              v21,
              v22))
        {
          uint64_t v23 = sub_214D1A038();
          uint64_t v25 = v24;

          __swift_destroy_boxed_opaque_existential_1(v17);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v20 = sub_214B874BC(0, v20[2] + 1, 1, v20);
          }
          unint64_t v27 = v20[2];
          unint64_t v26 = v20[3];
          if (v27 >= v26 >> 1) {
            id v20 = sub_214B874BC((void *)(v26 > 1), v27 + 1, 1, v20);
          }
          v20[2] = v27 + 1;
          long long v28 = &v20[2 * v27];
          v28[4] = v23;
          v28[5] = v25;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1(v17);
        }
        v19 += 32;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v20 = (void *)MEMORY[0x263F8EE78];
    }
    *(void *)(*(void *)(v0 + 120) + 128) = v20;

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 104))
    {
      objc_msgSend(*(id *)(v0 + 104), sel_endSession);
      swift_unknownObjectRelease();
    }

    long long v31 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
LABEL_14:
    id v29 = v3;
    sub_214D199B8();

    swift_willThrow();
    long long v30 = *(void **)(v0 + 136);
    if (*(void *)(v0 + 104))
    {
      objc_msgSend(*(id *)(v0 + 104), sel_endSession);

      swift_unknownObjectRelease();
    }
    else
    {
    }
    long long v31 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v31();
}

uint64_t sub_214C02004()
{
  swift_task_dealloc();
  uint64_t v1 = *(void **)(v0 + 136);
  if (*(void *)(v0 + 104))
  {
    objc_msgSend(*(id *)(v0 + 104), sel_endSession);

    swift_unknownObjectRelease();
  }
  else
  {
  }
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_214C020D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DD90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_214C03438;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_214C01690;
  aBlock[3] = &block_descriptor_66;
  unsigned int v12 = _Block_copy(aBlock);
  swift_release();
  id v13 = objc_msgSend(a3, sel_startSecureElementManagerSession_, v12);
  _Block_release(v12);
  *a2 = v13;
  return swift_unknownObjectRelease();
}

uint64_t sub_214C02294(void *a1, id a2)
{
  if (a1)
  {
    id v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DD90);
    return sub_214D1A2F8();
  }
  else
  {
    if (!a2)
    {
      sub_214C03070();
      swift_allocError();
      uint64_t v5 = v4;
      a2 = 0;
      unsigned char *v5 = 1;
    }
    id v6 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DD90);
    return sub_214D1A2E8();
  }
}

uint64_t sub_214C02340()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_214C02360, v0, 0);
}

uint64_t sub_214C02360()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[18];
  v0[3] = v2;
  if (v2)
  {
    uint64_t v3 = v1[17];
    uint64_t v4 = v2;
    goto LABEL_3;
  }
  id v6 = (void *)v1[16];
  if (v6)
  {
    if (v6[2])
    {
      uint64_t v3 = v6[4];
      uint64_t v4 = v6[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v4 = 0;
    }
LABEL_3:
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    swift_bridgeObjectRetain();
    return v8(v3, v4);
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[4] = v7;
  void *v7 = v0;
  v7[1] = sub_214C0248C;
  return sub_214C0171C();
}

uint64_t sub_214C0248C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    return MEMORY[0x270FA2498](sub_214C025D0, v6, 0);
  }
}

uint64_t sub_214C025D0()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 128);
  if (v1)
  {
    swift_bridgeObjectRetain();
    if (v1[2])
    {
LABEL_3:
      uint64_t v2 = v1[4];
      uint64_t v3 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v1 = (void *)MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
LABEL_6:
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v5(v2, v3);
}

uint64_t DeviceInformation.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DeviceInformation.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DeviceInformation.unownedExecutor.getter()
{
  return v0;
}

unint64_t sub_214C02730()
{
  unint64_t result = qword_26784DC58;
  if (!qword_26784DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DC58);
  }
  return result;
}

uint64_t sub_214C02784()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214BC5478;
  v3[30] = v2;
  return MEMORY[0x270FA2498](sub_214BFF0FC, v2, 0);
}

uint64_t sub_214C02830(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B69F08;
  return v7(a1, a2);
}

uint64_t dispatch thunk of DeviceInformationProvider.clientInfoHeader()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214BC5478;
  return v7(a1, a2);
}

uint64_t sub_214C02A10()
{
  return type metadata accessor for ODINFHardwareMonitor();
}

uint64_t type metadata accessor for ODINFHardwareMonitor()
{
  uint64_t result = qword_26784DCE8;
  if (!qword_26784DCE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_214C02A64()
{
  sub_214C02B00();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_214C02B00()
{
  if (!qword_26784DD00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784CD68);
    unint64_t v0 = sub_214D1A5D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26784DD00);
    }
  }
}

uint64_t method lookup function for DeviceInformation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DeviceInformation);
}

uint64_t dispatch thunk of DeviceInformation.clientInfoHeader()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 136) + **(int **)(*(void *)v0 + 136));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B72738;
  return v4();
}

uint64_t dispatch thunk of DeviceInformation.getSEID()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 224) + **(int **)(*(void *)v0 + 224));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214BA6744;
  return v4();
}

unsigned char *storeEnumTagSinglePayload for DeviceInformation.DeviceInfoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C02E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceInformation.DeviceInfoError()
{
  return &type metadata for DeviceInformation.DeviceInfoError;
}

uint64_t sub_214C02E60()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214C02E98(uint64_t a1)
{
  return sub_214C01244(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_214C02EA8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_214C02FA0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784DD38) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = v2 + v6;
  unint64_t v10 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  sub_214C0144C(a1, a2, v7, v8, v9, v11, v12);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_214C03070()
{
  unint64_t result = qword_26784DD40;
  if (!qword_26784DD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DD40);
  }
  return result;
}

uint64_t sub_214C030C4()
{
  return objectdestroy_46Tm(40);
}

uint64_t sub_214C030CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_214B6A55C;
  return sub_214BFEB44(a1, v4, v5, v6);
}

uint64_t sub_214C03180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_214C031E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_214C03250(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214C03298(uint64_t a1)
{
  return sub_214BFE2BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_214C032A0()
{
  return objectdestroy_46Tm(48);
}

uint64_t objectdestroy_46Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_214C032F4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214B6A55C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_214BFE530, v2, 0);
}

uint64_t sub_214C0339C(uint64_t a1)
{
  return sub_214C020D0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_214C033A4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DD90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_214C03438(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26784DD90);
  return sub_214C02294(a1, a2);
}

uint64_t sub_214C034C4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43A8);
    uint64_t v2 = sub_214D1A978();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v13 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_37;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v26) {
      break;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    int64_t v17 = v7 + 1;
    if (!v16)
    {
      int64_t v17 = v7 + 2;
      if (v7 + 2 >= v26) {
        break;
      }
      unint64_t v16 = *(void *)(v27 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v7 + 3;
        if (v7 + 3 >= v26) {
          break;
        }
        unint64_t v16 = *(void *)(v27 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v7 + 4;
          if (v7 + 4 >= v26) {
            break;
          }
          unint64_t v16 = *(void *)(v27 + 8 * v17);
          if (!v16)
          {
            int64_t v18 = v7 + 5;
            if (v7 + 5 >= v26) {
              break;
            }
            unint64_t v16 = *(void *)(v27 + 8 * v18);
            if (!v16)
            {
              while (1)
              {
                int64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_40;
                }
                if (v17 >= v26) {
                  goto LABEL_38;
                }
                unint64_t v16 = *(void *)(v27 + 8 * v17);
                ++v18;
                if (v16) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v17 = v7 + 5;
          }
        }
      }
    }
LABEL_36:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    int64_t v7 = v17;
LABEL_37:
    char v23 = *(unsigned char *)(*(void *)(a1 + 48) + v14);
    sub_214B5EC30(*(void *)(a1 + 56) + 32 * v14, (uint64_t)v33 + 8);
    LOBYTE(v33[0]) = v23;
    v31[0] = v33[0];
    v31[1] = v33[1];
    uint64_t v32 = v34;
    LOBYTE(v30[0]) = v23;
    sub_214B5EC20((_OWORD *)((char *)v31 + 8), v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784DDA8);
    swift_dynamicCast();
    char v24 = v30[0];
    sub_214B5EC20((_OWORD *)((char *)v30 + 8), v28);
    sub_214B5EC20(v28, v30);
    sub_214B5EC20(v30, v29);
    sub_214D1AD08();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_214D1AD48();
    uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v10 = v8 & ~v9;
    unint64_t v11 = v10 >> 6;
    if (((-1 << v10) & ~*(void *)(v6 + 8 * (v10 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    char v19 = 0;
    unint64_t v20 = (unint64_t)(63 - v9) >> 6;
    do
    {
      if (++v11 == v20 && (v19 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x214C03A6CLL);
      }
      BOOL v21 = v11 == v20;
      if (v11 == v20) {
        unint64_t v11 = 0;
      }
      v19 |= v21;
      uint64_t v22 = *(void *)(v6 + 8 * v11);
    }
    while (v22 == -1);
    unint64_t v12 = __clz(__rbit64(~v22)) + (v11 << 6);
LABEL_10:
    *(void *)(v6 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v2 + 48) + v12) = v24;
    sub_214B5EC20(v29, (_OWORD *)(*(void *)(v2 + 56) + 32 * v12));
    ++*(void *)(v2 + 16);
  }
LABEL_38:
  swift_release();
  sub_214BB7994();
  return v2;
}

uint64_t sub_214C03AA8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43E0);
    uint64_t v2 = sub_214D1A978();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_214B93DCC(*(void *)(a1 + 56) + 40 * v12, (uint64_t)v43);
    *(void *)&long long v42 = v19;
    *((void *)&v42 + 1) = v18;
    *(_OWORD *)&v39[5] = v42;
    v40[0] = v43[0];
    v40[1] = v43[1];
    uint64_t v41 = v44;
    uint64_t v30 = v19;
    uint64_t v31 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_214B59EC0(v40, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
    swift_dynamicCast();
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_214B5EC20(&v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_214B5EC20(v39, v29);
    sub_214B5EC20(v29, &v36);
    uint64_t result = sub_214D1A6F8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(void *)(v10 + 32) = v34;
    uint64_t result = (uint64_t)sub_214B5EC20(&v36, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_214BB7994();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_214C03EB0(uint64_t a1)
{
  uint64_t v55 = sub_214D19C78();
  uint64_t v2 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55, v3);
  uint64_t v54 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4280);
  uint64_t v6 = MEMORY[0x270FA5388](v53, v5);
  int64_t v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6, v9);
  unint64_t v11 = (char *)&v44 - v10;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43D0);
    unint64_t v12 = (void *)sub_214D1A978();
  }
  else
  {
    unint64_t v12 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v47 = a1 + 64;
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  uint64_t v44 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v46 = (unint64_t)(63 - v14) >> 6;
  uint64_t v52 = v2 + 16;
  uint64_t v51 = &v59;
  uint64_t v50 = v2 + 32;
  unint64_t v49 = &v61;
  uint64_t v45 = v12 + 8;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v48 = MEMORY[0x263F8EE58] + 8;
  if (v16) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v23 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v23 >= v46) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v47 + 8 * v23);
  int64_t v25 = i + 1;
  if (!v24)
  {
    int64_t v25 = i + 2;
    if (i + 2 >= v46) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v47 + 8 * v25);
    if (!v24)
    {
      int64_t v25 = i + 3;
      if (i + 3 >= v46) {
        goto LABEL_32;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = i + 4;
        if (i + 4 >= v46) {
          goto LABEL_32;
        }
        unint64_t v24 = *(void *)(v47 + 8 * v25);
        if (!v24)
        {
          int64_t v26 = i + 5;
          if (i + 5 < v46)
          {
            unint64_t v24 = *(void *)(v47 + 8 * v26);
            if (v24)
            {
              int64_t v25 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v25 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_36;
              }
              if (v25 >= v46) {
                break;
              }
              unint64_t v24 = *(void *)(v47 + 8 * v25);
              ++v26;
              if (v24) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_214BB7994();
          return (unint64_t)v12;
        }
      }
    }
  }
LABEL_26:
  unint64_t v16 = (v24 - 1) & v24;
  unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
  for (i = v25; ; unint64_t v22 = v21 | (i << 6))
  {
    int64_t v27 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v22);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = v53;
    uint64_t v31 = v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(&v11[*(int *)(v53 + 48)], *(void *)(a1 + 56) + *(void *)(v2 + 72) * v22, v55);
    *(void *)unint64_t v11 = v29;
    *((void *)v11 + 1) = v28;
    sub_214B6AC38((uint64_t)v11, (uint64_t)v8, &qword_26ACE4280);
    long long v32 = (char *)v8 + *(int *)(v30 + 48);
    uint64_t v33 = v8[1];
    uint64_t v57 = *v8;
    uint64_t v58 = v33;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v54, v32, v31);
    swift_bridgeObjectRetain();
    uint64_t v34 = v51;
    swift_dynamicCast();
    uint64_t v35 = v57;
    uint64_t v36 = v58;
    long long v37 = v49;
    sub_214B5EC20(v34, v49);
    sub_214B5EC20(v37, v62);
    sub_214B5EC20(v62, &v60);
    unint64_t result = sub_214B87FEC(v35, v36);
    unint64_t v38 = result;
    if (v39)
    {
      uint64_t v18 = a1;
      uint64_t v19 = (uint64_t *)(v12[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v19 = v35;
      v19[1] = v36;
      a1 = v18;
      uint64_t v20 = (_OWORD *)(v12[7] + 32 * v38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      unint64_t result = (unint64_t)sub_214B5EC20(&v60, v20);
      if (!v16) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v12[2] >= v12[3]) {
      break;
    }
    *(void *)((char *)v45 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v40 = (uint64_t *)(v12[6] + 16 * result);
    *uint64_t v40 = v35;
    v40[1] = v36;
    unint64_t result = (unint64_t)sub_214B5EC20(&v60, (_OWORD *)(v12[7] + 32 * result));
    uint64_t v41 = v12[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_34;
    }
    uint64_t v12[2] = v43;
    if (!v16) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v21 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_214C043BC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43E0);
    uint64_t v2 = sub_214D1A978();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_214B5EC30(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_214B5EC20(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_214B5EC20(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_214B5EC20(v36, v37);
    sub_214B5EC20(v37, &v33);
    uint64_t result = sub_214D1A6F8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_214B5EC20(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_214BB7994();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_214C04784(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A58);
    uint64_t v2 = (void *)sub_214D1A978();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v25 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v7 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v13 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v13 >= v24) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v13);
  int64_t v15 = i + 1;
  if (!v14)
  {
    int64_t v15 = i + 2;
    if (i + 2 >= v24) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v15);
    if (!v14)
    {
      int64_t v15 = i + 3;
      if (i + 3 >= v24) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = i + 4;
        if (i + 4 >= v24) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v15);
        if (!v14)
        {
          int64_t v16 = i + 5;
          if (i + 5 < v24)
          {
            unint64_t v14 = *(void *)(v25 + 8 * v16);
            if (v14)
            {
              int64_t v15 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v15 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_36;
              }
              if (v15 >= v24) {
                break;
              }
              unint64_t v14 = *(void *)(v25 + 8 * v15);
              ++v16;
              if (v14) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_214BB7994();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v14 - 1) & v14;
  unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
  for (i = v15; ; unint64_t v12 = v11 | (i << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v27 = *v17;
    uint64_t v28 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
    swift_dynamicCast();
    sub_214B59EC0(&v29, (uint64_t)v31);
    sub_214B59EC0(v31, (uint64_t)v32);
    sub_214B59EC0(v32, (uint64_t)&v30);
    unint64_t result = sub_214B87FEC(v27, v28);
    unint64_t v18 = result;
    if (v19)
    {
      uint64_t v8 = v7;
      unint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unint64_t v9 = v27;
      v9[1] = v28;
      uint64_t v7 = v8;
      uint64_t v10 = v2[7] + 40 * v18;
      __swift_destroy_boxed_opaque_existential_1(v10);
      unint64_t result = sub_214B59EC0(&v30, v10);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v20 = v27;
    v20[1] = v28;
    unint64_t result = sub_214B59EC0(&v30, v2[7] + 40 * result);
    uint64_t v21 = v2[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_34;
    }
    v2[2] = v23;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_214C04AC4()
{
  unint64_t result = sub_214C04AE4();
  qword_26ACEB9E0 = (uint64_t)result;
  return result;
}

void *sub_214C04AE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v0, v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DIPURLCache();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_sharedURLCache);
  objc_msgSend(v5, sel_memoryCapacity);

  id v6 = objc_msgSend(v4, sel_sharedURLCache);
  objc_msgSend(v6, sel_diskCapacity);

  if (qword_26ACE35F8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v0, (uint64_t)qword_26ACE35E0);
  sub_214C06FFC(v7, (uint64_t)v3);
  uint64_t v8 = (void *)sub_214D1A468();
  id v9 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    uint64_t v10 = (void *)sub_214D1A028();
    unsigned __int8 v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

    if (v11) {
      objc_msgSend(v8, sel_removeAllCachedResponses);
    }
  }
  else
  {
  }
  sub_214C05444();
  return v8;
}

uint64_t sub_214C04D04()
{
  uint64_t v0 = sub_214D199D8();
  uint64_t v63 = *(void *)(v0 - 8);
  uint64_t v64 = v0;
  MEMORY[0x270FA5388](v0, v1);
  long long v62 = (char *)v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_214D19AA8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3, v5);
  uint64_t v61 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  unsigned __int8 v11 = (char *)v57 - v10;
  MEMORY[0x270FA5388](v9, v12);
  unint64_t v14 = (char *)v57 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  uint64_t v17 = MEMORY[0x270FA5388](v15, v16);
  long long v65 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17, v19);
  BOOL v22 = (char *)v57 - v21;
  uint64_t v24 = MEMORY[0x270FA5388](v20, v23);
  uint64_t v67 = (char *)v57 - v25;
  __swift_allocate_value_buffer(v24, qword_26ACE35E0);
  uint64_t v66 = __swift_project_value_buffer(v15, (uint64_t)qword_26ACE35E0);
  uint64_t v26 = self;
  uint64_t v27 = &_OBJC_LABEL_PROTOCOL___NNHzG8lq6aMxZpXq;
  id v28 = objc_msgSend(v26, sel_defaultManager);
  long long v29 = (void *)sub_214D1A028();
  id v30 = objc_msgSend(v28, sel_containerURLForSecurityApplicationGroupIdentifier_, v29);

  if (v30)
  {
    sub_214D19A48();

    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v31(v22, v11, v3);
    long long v32 = *(char **)(v4 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v32)(v22, 0, 1, v3);
    uint64_t v33 = v4;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v22, 1, v3) != 1)
    {
      v31(v14, v22, v3);
      unint64_t v68 = 0xD000000000000013;
      unint64_t v69 = 0x8000000214D34DF0;
      uint64_t v41 = v62;
      uint64_t v40 = v63;
      uint64_t v42 = v64;
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x263F06E50], v64);
      sub_214BBD7FC();
      uint64_t v43 = (uint64_t)v67;
      sub_214D19A88();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v32)(v43, 0, 1, v3);
      return sub_214B6AC38(v43, v66, (uint64_t *)&unk_26ACE3B00);
    }
    long long v34 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v32;
    uint64_t v27 = &_OBJC_LABEL_PROTOCOL___NNHzG8lq6aMxZpXq;
  }
  else
  {
    long long v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v34(v22, 1, 1, v3);
    uint64_t v33 = v4;
  }
  sub_214B59CE0((uint64_t)v22, (uint64_t *)&unk_26ACE3B00);
  id v35 = [v26 (SEL)v27[250]];
  uint64_t v36 = 1;
  id v37 = objc_msgSend(v35, sel_URLsForDirectory_inDomains_, 13, 1);

  uint64_t v38 = sub_214D1A268();
  uint64_t v39 = (uint64_t)v65;
  if (*(void *)(v38 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v65, v38 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v3);
    uint64_t v36 = 0;
  }
  v34((char *)v39, v36, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v3) == 1)
  {
    sub_214B59CE0(v39, (uint64_t *)&unk_26ACE3B00);
    uint64_t v43 = (uint64_t)v67;
    v34(v67, 1, 1, v3);
  }
  else
  {
    uint64_t v60 = v33 + 56;
    long long v65 = (char *)v34;
    id v44 = objc_msgSend(self, sel_mainBundle);
    id v45 = objc_msgSend(v44, sel_bundleIdentifier);

    if (v45)
    {
      uint64_t v46 = sub_214D1A038();
      unint64_t v48 = v47;
    }
    else
    {
      uint64_t v46 = 0xD000000000000014;
      unint64_t v48 = 0x8000000214D34DD0;
    }
    unint64_t v68 = v46;
    unint64_t v69 = v48;
    unsigned int v59 = *MEMORY[0x263F06E50];
    unint64_t v49 = v62;
    uint64_t v50 = v63;
    uint64_t v58 = *(void (**)(char *))(v63 + 104);
    uint64_t v51 = v64;
    v58(v62);
    v57[1] = sub_214BBD7FC();
    uint64_t v52 = v61;
    sub_214D19A98();
    uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
    v53(v49, v51);
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v54(v39, v3);
    unint64_t v68 = 7107189;
    unint64_t v69 = 0xE300000000000000;
    ((void (*)(char *, void, uint64_t))v58)(v49, v59, v51);
    uint64_t v55 = v67;
    sub_214D19A88();
    v53(v49, v51);
    swift_bridgeObjectRelease();
    v54((uint64_t)v52, v3);
    uint64_t v43 = (uint64_t)v55;
    ((void (*)(char *, void, uint64_t, uint64_t))v65)(v55, 0, 1, v3);
  }
  return sub_214B6AC38(v43, v66, (uint64_t *)&unk_26ACE3B00);
}

uint64_t sub_214C05444()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
  uint64_t v14 = v5;
  unint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v11 = 0xD00000000000001ELL;
  unint64_t v12 = 0x8000000214D34FA0;
  if (qword_26ACE35F8 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v1, (uint64_t)qword_26ACE35E0);
  sub_214C06FFC(v6, (uint64_t)v4);
  uint64_t v7 = sub_214D19AA8();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_214B59CE0((uint64_t)v4, (uint64_t *)&unk_26ACE3B00);
  }
  else
  {
    sub_214D199E8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v9 = v11;
  LOBYTE(v11) = 14;
  CoreODILogger.debug(_:category:)(v9, v12, &v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_214C05830(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8, v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8);
  uint64_t v10 = (char *)&v41 - v9;
  id v11 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    unint64_t v12 = (void *)sub_214D1A028();
    unsigned __int8 v13 = objc_msgSend(v11, sel_BOOLForKey_, v12);

    if (v13)
    {
      id v14 = a1;
      return a1;
    }
  }
  else
  {
  }
  id v16 = objc_msgSend(a1, sel_response);
  unint64_t v17 = sub_214C05E10(v16);

  if (v17)
  {
    uint64_t v42 = v7;
    uint64_t v43 = v10;
    uint64_t v44 = v1;
    id v18 = objc_msgSend(a1, sel_response);
    id v19 = objc_msgSend(a1, sel_data);
    uint64_t v20 = sub_214D19B68();
    unint64_t v22 = v21;

    sub_214C043BC(v17);
    id v23 = objc_msgSend(a1, sel_storagePolicy);
    id v24 = objc_allocWithZone(MEMORY[0x263F086F8]);
    uint64_t v25 = (void *)sub_214D19B38();
    uint64_t v26 = (void *)sub_214D19F88();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v24, sel_initWithResponse_data_userInfo_storagePolicy_, v18, v25, v26, v23);
    sub_214B58A4C(v20, v22);

    id v27 = objc_msgSend(a1, sel_response);
    id v28 = objc_msgSend(v27, sel_URL);

    if (v28)
    {
      uint64_t v29 = (uint64_t)v42;
      sub_214D19A48();

      uint64_t v30 = sub_214D19AA8();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
    }
    else
    {
      uint64_t v30 = sub_214D19AA8();
      uint64_t v29 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v42, 1, 1, v30);
    }
    uint64_t v32 = (uint64_t)v43;
    sub_214B6AC38(v29, (uint64_t)v43, (uint64_t *)&unk_26ACE3B00);
    sub_214D19AA8();
    uint64_t v33 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v30) == 1)
    {
      sub_214B59CE0(v32, (uint64_t *)&unk_26ACE3B00);
    }
    else
    {
      sub_214D199E8();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v30);
    }
    uint64_t v34 = v44;
    if (*(void *)(v17 + 16) && (uint64_t v35 = sub_214B87FEC(0x4173657269707865, 0xE900000000000074), (v36 & 1) != 0))
    {
      sub_214B5EC30(*(void *)(v17 + 56) + 32 * v35, (uint64_t)&v47);
    }
    else
    {
      long long v47 = 0u;
      long long v48 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v48 + 1))
    {
      sub_214B5EC20(&v47, &v49);
    }
    else
    {
      uint64_t v50 = MEMORY[0x263F8D310];
      *(void *)&long long v49 = 7104878;
      *((void *)&v49 + 1) = 0xE300000000000000;
      sub_214B59CE0((uint64_t)&v47, (uint64_t *)&unk_26ACE44A0);
    }
    uint64_t v37 = *(void *)(v34 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    uint64_t v38 = *(void *)(v34 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    *(void *)&long long v47 = v37;
    *((void *)&v47 + 1) = v38;
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A908();
    uint64_t v39 = v45;
    LOBYTE(v45) = 14;
    CoreODILogger.debug(_:category:)(v39, v46, &v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  }
  else
  {
    uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    *(void *)&long long v49 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    *((void *)&v49 + 1) = v31;
    LOBYTE(v47) = 17;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000022, 0x8000000214D34F50, &v47);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

unint64_t sub_214C05E10(void *a1)
{
  uint64_t v3 = sub_214D19C78();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3, v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  id v11 = (char *)&v33 - v10;
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (!v12) {
    return 0;
  }
  unsigned __int8 v13 = (void *)v12;
  id v14 = a1;
  unint64_t v15 = sub_214C07064(v13);
  if (!v16 || (sub_214C07364(v15, v16), char v18 = v17, swift_bridgeObjectRelease(), (v18 & 1) != 0))
  {
    uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    uint64_t v36 = v31;
    char v34 = 17;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000049, 0x8000000214D34E10, &v34);
    swift_bridgeObjectRelease();

    return 0;
  }
  sub_214D19C68();
  sub_214D19BC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4468);
  id v19 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4290) - 8);
  uint64_t v20 = *(void *)(*(void *)v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(*(void *)v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_214D1C1F0;
  id v23 = (void *)(v22 + v21);
  id v24 = (char *)v23 + v19[14];
  *id v23 = 0x74416465726F7473;
  v23[1] = 0xE800000000000000;
  id v33 = v14;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v25(v24, v11, v3);
  uint64_t v26 = (void *)((char *)v23 + v20);
  id v27 = (char *)v23 + v20 + v19[14];
  *uint64_t v26 = 0x4173657269707865;
  v26[1] = 0xE900000000000074;
  v25(v27, v8, v3);
  unint64_t v28 = sub_214B7FA0C(v22);
  unint64_t v29 = sub_214C03EB0(v28);

  swift_bridgeObjectRelease();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v8, v3);
  v30(v11, v3);
  return v29;
}

id sub_214C0645C()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for DIPURLCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPURLCache()
{
  return self;
}

uint64_t sub_214C064C8(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_214C0696C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  unsigned __int8 v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_214D1A1A8();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_214D1A0F8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_214D1A0F8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_214D1A1C8();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unsigned __int8 v13 = sub_214B87BAC(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    unsigned __int8 v13 = sub_214B87BAC((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  unint64_t v28 = &v13[4 * v27];
  _OWORD v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_214D1A0F8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_214D1A1C8();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned __int8 v13 = sub_214B87BAC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      unsigned __int8 v13 = sub_214B87BAC((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_214D1A918();
  __break(1u);
LABEL_42:
  uint64_t result = sub_214D1A918();
  __break(1u);
  return result;
}

uint64_t sub_214C0696C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_214D1A1C8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_214B87BAC(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_214B87BAC((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_214D1A918();
  __break(1u);
  return result;
}

uint64_t sub_214C06AC8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE35B8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  int v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_214D19D98();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B10);
  MEMORY[0x270FA5388](v11 - 8, v12);
  unint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_214D19C78();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17);
  char v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_msgSend(a1, sel_userInfo);
  if (!v20)
  {
    long long v38 = 0u;
    long long v39 = 0u;
LABEL_12:
    sub_214B59CE0((uint64_t)&v38, (uint64_t *)&unk_26ACE44A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_13;
  }
  uint64_t v21 = v20;
  v36[0] = v7;
  uint64_t v22 = sub_214D19F98();

  v36[1] = 0x74416465726F7473;
  _OWORD v36[2] = 0xE800000000000000;
  sub_214D1A728();
  if (*(void *)(v22 + 16) && (unint64_t v23 = sub_214B88110((uint64_t)v37), (v24 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_214B6ABE4((uint64_t)v37);
  if (!*((void *)&v39 + 1)) {
    goto LABEL_12;
  }
  int v25 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v25 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_13:
    sub_214B59CE0((uint64_t)v14, &qword_26ACE3B10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_214D19CD8();
  unint64_t v27 = (void *)sub_214D19D08();
  (*(void (**)(char *, uint64_t))(v36[0] + 8))(v10, v6);
  objc_msgSend(v26, sel_setLocale_, v27);

  sub_214D19E08();
  uint64_t v28 = sub_214D19E38();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v28) != 1)
  {
    uint64_t v30 = (void *)sub_214D19E18();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
  }
  objc_msgSend(v26, sel_setTimeZone_, v30);

  uint64_t v31 = (void *)sub_214D1A028();
  objc_msgSend(v26, sel_setDateFormat_, v31);

  uint64_t v32 = (void *)sub_214D19BD8();
  id v33 = objc_msgSend(v26, sel_stringFromDate_, v32);

  uint64_t v34 = sub_214D1A038();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  return v34;
}

uint64_t sub_214C06FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_214C07064(void *a1)
{
  id v2 = objc_msgSend(a1, sel_allHeaderFields);
  uint64_t v3 = sub_214D19F98();

  sub_214D1A728();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_214B88110((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_214B6ABE4((uint64_t)v15);
  if (*((void *)&v17 + 1))
  {
    if (swift_dynamicCast()) {
      return 0xD000000000000019;
    }
  }
  else
  {
    sub_214B59CE0((uint64_t)&v16, (uint64_t *)&unk_26ACE44A0);
  }
  id v6 = objc_msgSend(a1, sel_allHeaderFields);
  uint64_t v7 = sub_214D19F98();

  sub_214D1A728();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_214B88110((uint64_t)v15), (v9 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_214B6ABE4((uint64_t)v15);
  if (*((void *)&v17 + 1))
  {
    if (swift_dynamicCast()) {
      return 0xD000000000000019;
    }
  }
  else
  {
    sub_214B59CE0((uint64_t)&v16, (uint64_t *)&unk_26ACE44A0);
  }
  id v10 = objc_msgSend(a1, sel_allHeaderFields);
  uint64_t v11 = sub_214D19F98();

  sub_214D1A728();
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_214B88110((uint64_t)v15), (v13 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_214B6ABE4((uint64_t)v15);
  if (*((void *)&v17 + 1))
  {
    if (swift_dynamicCast()) {
      return 0xD000000000000019;
    }
  }
  else
  {
    sub_214B59CE0((uint64_t)&v16, (uint64_t *)&unk_26ACE44A0);
  }
  return 0;
}

uint64_t sub_214C07364(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = sub_214D197B8();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v29 = 44;
  *((void *)&v29 + 1) = 0xE100000000000000;
  id v26 = &v29;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_214C064C8(0x7FFFFFFFFFFFFFFFLL, 1, sub_214C0764C, (uint64_t)v25, a1, a2);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    unint64_t v23 = (void (**)(char *, uint64_t))(v4 + 8);
    v22[1] = v8;
    id v10 = (uint64_t *)(v8 + 56);
    while (1)
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      long long v29 = *(_OWORD *)(v10 - 3);
      uint64_t v30 = v11;
      uint64_t v31 = v12;
      swift_bridgeObjectRetain();
      sub_214D197A8();
      sub_214C07668();
      uint64_t v13 = sub_214D1A618();
      unint64_t v15 = v14;
      (*v23)(v7, v24);
      uint64_t v16 = swift_bridgeObjectRelease();
      *(void *)&long long v29 = 61;
      *((void *)&v29 + 1) = 0xE100000000000000;
      MEMORY[0x270FA5388](v16, v17);
      v22[-2] = &v29;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_214C064C8(0x7FFFFFFFFFFFFFFFLL, 1, sub_214C0764C, (uint64_t)&v22[-4], v13, v15);
      swift_bridgeObjectRelease();
      if (*(void *)(v18 + 16) == 2)
      {
        uint64_t v19 = *(void *)(v18 + 48);
        uint64_t v20 = *(void *)(v18 + 56);
        long long v29 = *(_OWORD *)(v18 + 32);
        uint64_t v30 = v19;
        uint64_t v31 = v20;
        uint64_t v27 = 0x6567612D78616DLL;
        unint64_t v28 = 0xE700000000000000;
        sub_214BBD7FC();
        if (!sub_214D1A638()) {
          break;
        }
      }
      swift_bridgeObjectRelease();
      v10 += 4;
      if (!--v9) {
        goto LABEL_8;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v18 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return sub_214D1A418();
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_214C0764C(void *a1)
{
  return sub_214C076BC(a1) & 1;
}

unint64_t sub_214C07668()
{
  unint64_t result = qword_26ACE4248;
  if (!qword_26ACE4248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4248);
  }
  return result;
}

uint64_t sub_214C076BC(void *a1)
{
  id v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_214D1ABC8() & 1;
  }
}

uint64_t sub_214C07714()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_214C0774C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PregeneratedAssessment.assessmentGUIDSeedDecoded()(CoreODIEssentials::ODIClientGUIDSeeds *__return_ptr retstr)
{
  type metadata accessor for PregeneratedAssessment();
  uint64_t v2 = sub_214D19AE8();
  if (v3 >> 60 == 15)
  {
    unsigned __int8 v7 = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, &v7, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA6410();
    sub_214D19748();
    swift_release();
    if (v1)
    {
      unsigned __int8 v6 = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, &v6, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 82);
      swift_willThrow();

      sub_214B59EAC(v4, v5);
    }
    else
    {
      sub_214B59EAC(v4, v5);
    }
  }
}

uint64_t type metadata accessor for PregeneratedAssessment()
{
  uint64_t result = qword_26784DDE8;
  if (!qword_26784DDE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PregeneratedAssessment.trainingGUIDSeedDecoded()(CoreODIEssentials::ODIClientGUIDSeeds *__return_ptr retstr)
{
  type metadata accessor for PregeneratedAssessment();
  uint64_t v2 = sub_214D19AE8();
  if (v3 >> 60 == 15)
  {
    unsigned __int8 v7 = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, &v7, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA6410();
    sub_214D19748();
    swift_release();
    if (v1)
    {
      unsigned __int8 v6 = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, &v6, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 82);
      swift_willThrow();

      sub_214B59EAC(v4, v5);
    }
    else
    {
      sub_214B59EAC(v4, v5);
    }
  }
}

uint64_t PregeneratedAssessment.workflowID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PregeneratedAssessment() + 20);
  uint64_t v4 = sub_214D19C78();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PregeneratedAssessment.assessment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.assessmentGUID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.assessmentGUIDSeeds.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingGUID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingGUIDSeeds.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingSignalID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.digestIndex.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 52));
}

uint64_t PregeneratedAssessment.bindings.getter()
{
  type metadata accessor for PregeneratedAssessment();
  return swift_bridgeObjectRetain();
}

uint64_t PregeneratedAssessment.encryptedTSID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.encryptedAGUID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.useSendOTD.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 68));
}

uint64_t PregeneratedAssessment.otdDestinationHost.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.profileID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.init(workflowID:createdAt:assessment:trainingData:assessmentGUID:assessmentGUIDSeeds:trainingGUID:trainingGUIDSeeds:trainingSignalID:digestIndex:bindings:encryptedTSID:encryptedAGUID:useSentOTD:otdDestinationHost:profileID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *a9 = a1;
  a9[1] = a2;
  uint64_t v32 = (int *)type metadata accessor for PregeneratedAssessment();
  id v33 = (char *)a9 + v32[5];
  uint64_t v34 = sub_214D19C78();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v33, a3, v34);
  uint64_t v36 = (void *)((char *)a9 + v32[6]);
  *uint64_t v36 = a4;
  v36[1] = a5;
  uint64_t v37 = (void *)((char *)a9 + v32[7]);
  *uint64_t v37 = a6;
  v37[1] = a7;
  long long v38 = (void *)((char *)a9 + v32[8]);
  *long long v38 = a8;
  v38[1] = a10;
  long long v39 = (void *)((char *)a9 + v32[9]);
  *long long v39 = a11;
  v39[1] = a12;
  uint64_t v40 = (void *)((char *)a9 + v32[10]);
  *uint64_t v40 = a13;
  v40[1] = a14;
  uint64_t v41 = (void *)((char *)a9 + v32[11]);
  *uint64_t v41 = a15;
  v41[1] = a16;
  uint64_t v42 = (void *)((char *)a9 + v32[12]);
  *uint64_t v42 = a17;
  v42[1] = a18;
  *(void *)((char *)a9 + v32[13]) = a19;
  *(void *)((char *)a9 + v32[14]) = a20;
  uint64_t v43 = (void *)((char *)a9 + v32[15]);
  *uint64_t v43 = a21;
  v43[1] = a22;
  uint64_t v44 = (void *)((char *)a9 + v32[16]);
  *uint64_t v44 = a23;
  v44[1] = a24;
  *((unsigned char *)a9 + v32[17]) = a25;
  uint64_t v45 = (void *)((char *)a9 + v32[18]);
  void *v45 = a26;
  v45[1] = a27;
  unint64_t v46 = (void *)((char *)a9 + v32[19]);
  *unint64_t v46 = a28;
  v46[1] = a29;
  return result;
}

unint64_t sub_214C081B0(char a1)
{
  unint64_t result = 0x776F6C666B726F77;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4164657461657263;
      break;
    case 2:
    case 4:
      unint64_t result = 0x656D737365737361;
      break;
    case 3:
      unint64_t result = 0x676E696E69617274;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x676E696E69617274;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x6E49747365676964;
      break;
    case 10:
      unint64_t result = 0x73676E69646E6962;
      break;
    case 11:
    case 12:
      unint64_t result = 0x6574707972636E65;
      break;
    case 13:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0x49656C69666F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_214C083CC(char a1)
{
  unint64_t result = 0x776F6C666B726F77;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4164657461657263;
      break;
    case 2:
    case 4:
      unint64_t result = 0x656D737365737361;
      break;
    case 3:
      unint64_t result = 0x676E696E69617274;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x676E696E69617274;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x6E49747365676964;
      break;
    case 10:
      unint64_t result = 0x73676E69646E6962;
      break;
    case 11:
    case 12:
      unint64_t result = 0x6574707972636E65;
      break;
    case 13:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0x49656C69666F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C085E8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_214C081B0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_214C081B0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214C08674()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214C081B0(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C086D8()
{
  sub_214C081B0(*v0);
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C0872C()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214C081B0(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C0878C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C0B158();
  *a1 = result;
  return result;
}

unint64_t sub_214C087BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_214C081B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_214C087E8()
{
  return sub_214C083CC(*v0);
}

uint64_t sub_214C087F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C0B158();
  *a1 = result;
  return result;
}

void sub_214C08818(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_214C08824(uint64_t a1)
{
  unint64_t v2 = sub_214C09378();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C08860(uint64_t a1)
{
  unint64_t v2 = sub_214C09378();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PregeneratedAssessment.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v101[4] = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_214D19C78();
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  MEMORY[0x270FA5388](v5, v6);
  char v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DDB0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = (int *)type metadata accessor for PregeneratedAssessment();
  MEMORY[0x270FA5388](v99, v14);
  uint64_t v98 = (uint64_t *)((char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = a1[3];
  uint64_t v92 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_214C09378();
  sub_214D1AD78();
  if (v2)
  {
    uint64_t v97 = v2;
    int v94 = 0;
    unsigned int v19 = 0;
LABEL_4:
    uint64_t v20 = v98;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    int v22 = (v19 >> 2) & 1;
    int v23 = (v19 >> 3) & 1;
    int v24 = (v19 >> 4) & 1;
    int v25 = (v19 >> 5) & 1;
    int v26 = (v19 >> 6) & 1;
    int v27 = (v19 >> 7) & 1;
    if (v19) {
      uint64_t result = swift_bridgeObjectRelease();
    }
    unint64_t v28 = v99;
    if ((v19 & 2) == 0)
    {
      BOOL v96 = 0;
      uint64_t v93 = 0;
      LODWORD(v95) = 0;
      if ((v19 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
    LODWORD(v95) = 0;
    uint64_t v93 = 0;
    BOOL v96 = 0;
LABEL_20:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v90 + 8))((char *)v20 + v28[5], v91);
    if ((v22 & 1) == 0)
    {
LABEL_8:
      if (v23) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t result = swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    if (!v24)
    {
LABEL_10:
      if (v25) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    if (v25)
    {
LABEL_11:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_25;
    }
LABEL_24:
    if (!v26)
    {
LABEL_12:
      if (v27) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    if (v27)
    {
LABEL_13:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v94 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (!v94)
    {
LABEL_14:
      if (v96) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t result = swift_bridgeObjectRelease();
    if (v96)
    {
LABEL_15:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v93 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_29;
    }
LABEL_28:
    if (!v93)
    {
LABEL_16:
      if (HIDWORD(v93)) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
LABEL_29:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v93 & 0x100000000) != 0)
    {
LABEL_17:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v95 & 1) == 0) {
        return result;
      }
      return swift_bridgeObjectRelease();
    }
LABEL_30:
    if (!v95) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v95 = a2;
  LOBYTE(v101[0]) = 0;
  uint64_t v17 = v13;
  uint64_t v18 = sub_214D1AA28();
  long long v29 = v98;
  *uint64_t v98 = v18;
  v29[1] = v30;
  LOBYTE(v101[0]) = 1;
  sub_214C0B2AC(&qword_26784DDC0, MEMORY[0x263F07490]);
  uint64_t v31 = v91;
  sub_214D1AA68();
  uint64_t v32 = v99;
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))((char *)v29 + v99[5], v8, v31);
  LOBYTE(v101[0]) = 2;
  uint64_t v33 = sub_214D1AA28();
  uint64_t v34 = (uint64_t *)((char *)v29 + v32[6]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v101[0]) = 3;
  uint64_t v36 = sub_214D1AA28();
  uint64_t v37 = (uint64_t *)((char *)v29 + v32[7]);
  *uint64_t v37 = v36;
  v37[1] = v38;
  LOBYTE(v101[0]) = 4;
  uint64_t v39 = sub_214D1AA28();
  uint64_t v40 = (uint64_t *)((char *)v29 + v32[8]);
  *uint64_t v40 = v39;
  v40[1] = v41;
  LOBYTE(v101[0]) = 5;
  uint64_t v42 = sub_214D1AA28();
  uint64_t v43 = (uint64_t *)((char *)v29 + v32[9]);
  *uint64_t v43 = v42;
  v43[1] = v44;
  LOBYTE(v101[0]) = 6;
  uint64_t v45 = sub_214D1AA28();
  unint64_t v46 = (uint64_t *)((char *)v29 + v32[10]);
  *unint64_t v46 = v45;
  v46[1] = v47;
  LOBYTE(v101[0]) = 7;
  uint64_t v48 = sub_214D1AA28();
  long long v49 = (uint64_t *)((char *)v29 + v32[11]);
  uint64_t *v49 = v48;
  v49[1] = v50;
  LOBYTE(v101[0]) = 8;
  uint64_t v51 = sub_214D1AA28();
  uint64_t v52 = (uint64_t *)((char *)v29 + v99[12]);
  uint64_t *v52 = v51;
  v52[1] = v53;
  LOBYTE(v101[0]) = 9;
  uint64_t v54 = v9;
  uint64_t v55 = v17;
  uint64_t v56 = sub_214D1AA58();
  uint64_t v97 = 0;
  *(uint64_t *)((char *)v98 + v99[13]) = v56;
  LOBYTE(v100) = 10;
  sub_214C093CC();
  uint64_t v57 = v97;
  sub_214D1AA68();
  uint64_t v97 = v57;
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v54);
    unsigned int v19 = 511;
    int v94 = 1;
    goto LABEL_4;
  }
  uint64_t v59 = v101[0];
  unint64_t v58 = v101[1];
  uint64_t v60 = self;
  uint64_t v61 = (void *)sub_214D19B38();
  id v100 = 0;
  id v62 = objc_msgSend(v60, sel_JSONObjectWithData_options_error_, v61, 0, &v100);

  BOOL v96 = v62 != 0;
  id v63 = v100;
  if (!v62)
  {
    unint64_t v68 = v63;
    uint64_t v69 = sub_214D199B8();

    uint64_t v97 = v69;
    swift_willThrow();
    sub_214B58A4C(v59, v58);
    goto LABEL_39;
  }
  sub_214D1A668();
  swift_unknownObjectRelease();
  unint64_t v64 = sub_214C09420((uint64_t)v101);
  *(uint64_t *)((char *)v98 + v99[14]) = v64;
  LOBYTE(v100) = 11;
  uint64_t v65 = v97;
  uint64_t v66 = sub_214D1AA28();
  uint64_t v97 = v65;
  if (v65)
  {
    sub_214B58A4C(v59, v58);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
LABEL_39:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v54);
    uint64_t v93 = 0;
    LODWORD(v95) = 0;
LABEL_40:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    uint64_t v20 = v98;
    swift_bridgeObjectRelease();
    int v94 = 1;
    int v27 = 1;
    int v26 = 1;
    int v25 = 1;
    int v24 = 1;
    int v23 = 1;
    LOBYTE(v22) = 1;
    unint64_t v28 = v99;
    goto LABEL_20;
  }
  uint64_t v70 = (uint64_t *)((char *)v98 + v99[15]);
  *uint64_t v70 = v66;
  v70[1] = v67;
  LOBYTE(v100) = 12;
  uint64_t v71 = v97;
  uint64_t v72 = sub_214D1AA28();
  uint64_t v97 = v71;
  if (v71)
  {
    sub_214B58A4C(v59, v58);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v54);
    LODWORD(v95) = 0;
    uint64_t v93 = 1;
    goto LABEL_40;
  }
  uint64_t v74 = (uint64_t *)((char *)v98 + v99[16]);
  *uint64_t v74 = v72;
  v74[1] = v73;
  LOBYTE(v100) = 13;
  uint64_t v75 = v97;
  char v76 = sub_214D1A9E8();
  uint64_t v97 = v75;
  if (v75
    || (*((unsigned char *)v98 + v99[17]) = (v76 == 2) | v76 & 1,
        LOBYTE(v100) = 14,
        uint64_t v77 = v97,
        uint64_t v78 = sub_214D1A9D8(),
        (uint64_t v97 = v77) != 0))
  {
    sub_214B58A4C(v59, v58);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v54);
    LODWORD(v95) = 0;
    uint64_t v93 = 0x100000001;
    goto LABEL_40;
  }
  char v80 = (uint64_t *)((char *)v98 + v99[18]);
  uint64_t *v80 = v78;
  v80[1] = v79;
  LOBYTE(v100) = 15;
  uint64_t v81 = v97;
  uint64_t v82 = sub_214D1A9D8();
  uint64_t v97 = v81;
  if (v81)
  {
    sub_214B58A4C(v59, v58);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v54);
    uint64_t v93 = 0x100000001;
    LODWORD(v95) = 1;
    goto LABEL_40;
  }
  uint64_t v84 = v82;
  unint64_t v85 = v83;
  sub_214B58A4C(v59, v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v54);
  uint64_t v86 = 0x4E574F4E4B4E55;
  if (v85) {
    uint64_t v86 = v84;
  }
  unint64_t v87 = 0xE700000000000000;
  if (v85) {
    unint64_t v87 = v85;
  }
  uint64_t v88 = (uint64_t)v98;
  long long v89 = (uint64_t *)((char *)v98 + v99[19]);
  *long long v89 = v86;
  v89[1] = v87;
  sub_214BA6464(v88, v95);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  return sub_214BD4880(v88);
}

unint64_t sub_214C09378()
{
  unint64_t result = qword_26784DDB8;
  if (!qword_26784DDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DDB8);
  }
  return result;
}

unint64_t sub_214C093CC()
{
  unint64_t result = qword_26784DDC8;
  if (!qword_26784DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DDC8);
  }
  return result;
}

unint64_t sub_214C09420(uint64_t a1)
{
  sub_214B5EC30(a1, (uint64_t)&v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE10);
  if (!swift_dynamicCast()) {
    return sub_214B7E450(MEMORY[0x263F8EE78]);
  }
  int64_t v1 = 0;
  uint64_t v2 = v38;
  uint64_t v3 = *(void *)(v38 + 64);
  uint64_t v33 = v38 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v38 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  int64_t v34 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = (void *)MEMORY[0x263F8EE80];
  if ((v5 & v3) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v1 << 6);
LABEL_8:
  uint64_t v10 = *(void *)(v2 + 56);
  uint64_t v11 = (void *)(*(void *)(v2 + 48) + 16 * v9);
  uint64_t v12 = v11[1];
  *(void *)&long long v38 = *v11;
  *((void *)&v38 + 1) = v12;
  sub_214B5EC30(v10 + 32 * v9, (uint64_t)v39);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_214C0B1A4((uint64_t)&v38, (uint64_t)&v40);
    uint64_t v16 = v41;
    if (!v41)
    {
      swift_release();
      return (unint64_t)v7;
    }
    uint64_t v17 = v40;
    sub_214B5EC20(&v42, v37);
    sub_214C09E0C((uint64_t)v37, (uint64_t)&v35);
    if (!v36)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      swift_bridgeObjectRelease();
      sub_214C0B20C((uint64_t)&v35);
      if (v6) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    sub_214B59EC0(&v35, (uint64_t)&v38);
    sub_214B93DCC((uint64_t)&v38, (uint64_t)&v35);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v20 = sub_214B87FEC(v17, v16);
    uint64_t v21 = v7[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v7[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v19 & 1) == 0) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_214B90ABC();
        if ((v24 & 1) == 0) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_214B8CC74(v23, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = sub_214B87FEC(v17, v16);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_49;
      }
      unint64_t v20 = v25;
      if ((v24 & 1) == 0)
      {
LABEL_33:
        v7[(v20 >> 6) + 8] |= 1 << v20;
        int v27 = (uint64_t *)(v7[6] + 16 * v20);
        *int v27 = v17;
        v27[1] = v16;
        sub_214B59EC0(&v35, v7[7] + 40 * v20);
        uint64_t v28 = v7[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_47;
        }
        v7[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
    }
    uint64_t v31 = v7[7] + 40 * v20;
    __swift_destroy_boxed_opaque_existential_1(v31);
    sub_214B59EC0(&v35, v31);
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    if (v6) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v13 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_46;
    }
    if (v13 < v34)
    {
      unint64_t v14 = *(void *)(v33 + 8 * v13);
      if (v14) {
        goto LABEL_12;
      }
      int64_t v15 = v1 + 2;
      ++v1;
      if (v13 + 1 < v34)
      {
        unint64_t v14 = *(void *)(v33 + 8 * v15);
        if (v14) {
          goto LABEL_15;
        }
        int64_t v1 = v13 + 1;
        if (v13 + 2 < v34)
        {
          unint64_t v14 = *(void *)(v33 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          int64_t v15 = v13 + 3;
          int64_t v1 = v13 + 2;
          if (v13 + 3 < v34)
          {
            unint64_t v14 = *(void *)(v33 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_48;
                }
                if (v13 >= v34)
                {
                  int64_t v1 = v34 - 1;
                  goto LABEL_26;
                }
                unint64_t v14 = *(void *)(v33 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            int64_t v13 = v15;
LABEL_12:
            unint64_t v6 = (v14 - 1) & v14;
            unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v1 = v13;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    unint64_t v6 = 0;
    memset(v39, 0, sizeof(v39));
    long long v38 = 0u;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  unint64_t result = sub_214D1AC58();
  __break(1u);
  return result;
}

uint64_t PregeneratedAssessment.encode(to:)(void *a1)
{
  void v22[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DDD0);
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  uint64_t v8 = type metadata accessor for PregeneratedAssessment();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  unint64_t v9 = (void *)sub_214D19F88();
  v22[0] = 0;
  id v10 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v9, 0, v22);

  id v11 = v22[0];
  if (v10)
  {
    uint64_t v19 = v8;
    uint64_t v12 = (void *)sub_214D19B68();
    unint64_t v14 = v13;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_214C09378();
    sub_214D1AD88();
    LOBYTE(v22[0]) = 0;
    sub_214D1AAF8();
    if (!v1)
    {
      LOBYTE(v22[0]) = 1;
      sub_214D19C78();
      sub_214C0B2AC(&qword_26784DDD8, MEMORY[0x263F07490]);
      sub_214D1AB38();
      LOBYTE(v22[0]) = 2;
      sub_214D1AAF8();
      uint64_t v18 = (void *)v14;
      LOBYTE(v22[0]) = 3;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 4;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 5;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 6;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 7;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 8;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 9;
      sub_214D1AB28();
      v22[0] = v12;
      v22[1] = v18;
      char v21 = 10;
      sub_214C0A0D0();
      sub_214D1AB38();
      LOBYTE(v22[0]) = 11;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 12;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 13;
      sub_214D1AB08();
      LOBYTE(v22[0]) = 15;
      sub_214D1AAF8();
      LOBYTE(v22[0]) = 14;
      sub_214D1AAA8();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v3);
    return sub_214B58A4C((uint64_t)v12, v14);
  }
  else
  {
    int64_t v15 = v11;
    sub_214D199B8();

    return swift_willThrow();
  }
}

uint64_t sub_214C09E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_214B5EC30(a1, (uint64_t)v20);
  unint64_t v4 = sub_214C0B26C();
  if (swift_dynamicCast())
  {
    uint64_t v5 = v19[0];
    *(void *)(a2 + 24) = v4;
    *(void *)(a2 + 32) = sub_214C0B2AC(&qword_26784DE20, (void (*)(uint64_t))sub_214C0B26C);
    *(void *)a2 = v5;
  }
  else
  {
    uint64_t v6 = MEMORY[0x263F8D310];
    if (swift_dynamicCast())
    {
      uint64_t v7 = v19[0];
      uint64_t v8 = v19[1];
      uint64_t v9 = MEMORY[0x263F8D320];
      *(void *)(a2 + 24) = v6;
      *(void *)(a2 + 32) = v9;
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v8;
    }
    else
    {
      if (qword_26ACE3C08 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_214D19EE8();
      __swift_project_value_buffer(v10, (uint64_t)qword_26ACE3AD0);
      sub_214B5EC30(a1, (uint64_t)v19);
      id v11 = sub_214D19EC8();
      os_log_type_t v12 = sub_214D1A4B8();
      if (os_log_type_enabled(v11, v12))
      {
        unint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v18 = v14;
        *(_DWORD *)unint64_t v13 = 136315138;
        __swift_project_boxed_opaque_existential_1(v19, v19[3]);
        swift_getDynamicType();
        uint64_t v15 = sub_214D1ADC8();
        sub_214C3D88C(v15, v16, &v18);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        _os_log_impl(&dword_214B4E000, v11, v12, "ODIBindingsValue is not supporting %s type", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v14, -1, -1);
        MEMORY[0x2166B1540](v13, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      }

      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t sub_214C0A0A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PregeneratedAssessment.init(from:)(a1, a2);
}

uint64_t sub_214C0A0B8(void *a1)
{
  return PregeneratedAssessment.encode(to:)(a1);
}

unint64_t sub_214C0A0D0()
{
  unint64_t result = qword_26784DDE0;
  if (!qword_26784DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DDE0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PregeneratedAssessment(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v57 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v57 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_214D19C78();
    os_log_type_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    unint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v60 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v60;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    BOOL v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *BOOL v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)v4 + v21);
    char v26 = (void *)((char *)a2 + v21);
    uint64_t v59 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v59;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    BOOL v29 = (void *)((char *)v4 + v27);
    uint64_t v30 = (void *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (void *)((char *)v4 + v28);
    uint64_t v33 = (void *)((char *)a2 + v28);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[12];
    uint64_t v36 = a3[13];
    uint64_t v37 = (void *)((char *)v4 + v35);
    long long v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    *(void *)((char *)v4 + v36) = *(void *)((char *)a2 + v36);
    uint64_t v40 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    uint64_t v41 = (void *)((char *)v4 + v40);
    long long v42 = (void *)((char *)a2 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = a3[16];
    uint64_t v45 = a3[17];
    unint64_t v46 = (void *)((char *)v4 + v44);
    uint64_t v47 = (void *)((char *)a2 + v44);
    uint64_t v48 = v47[1];
    *unint64_t v46 = *v47;
    v46[1] = v48;
    *((unsigned char *)v4 + v45) = *((unsigned char *)a2 + v45);
    uint64_t v49 = a3[18];
    uint64_t v50 = a3[19];
    uint64_t v51 = (void *)((char *)v4 + v49);
    uint64_t v52 = (void *)((char *)a2 + v49);
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = (void *)((char *)v4 + v50);
    uint64_t v55 = (void *)((char *)a2 + v50);
    uint64_t v56 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PregeneratedAssessment(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_214D19C78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PregeneratedAssessment(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_214D19C78();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v58 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v58;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  BOOL v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v57 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v57;
  uint64_t v26 = a3[10];
  uint64_t v27 = a3[11];
  uint64_t v28 = (void *)((char *)a1 + v26);
  BOOL v29 = (void *)((char *)a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = (void *)((char *)a1 + v27);
  uint64_t v32 = (void *)((char *)a2 + v27);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a3[12];
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)((char *)a1 + v34);
  uint64_t v37 = (void *)((char *)a2 + v34);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  *(void *)((char *)a1 + v35) = *(void *)((char *)a2 + v35);
  uint64_t v39 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = a3[16];
  uint64_t v44 = a3[17];
  uint64_t v45 = (void *)((char *)a1 + v43);
  unint64_t v46 = (void *)((char *)a2 + v43);
  uint64_t v47 = v46[1];
  void *v45 = *v46;
  v45[1] = v47;
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  uint64_t v48 = a3[18];
  uint64_t v49 = a3[19];
  uint64_t v50 = (void *)((char *)a1 + v48);
  uint64_t v51 = (void *)((char *)a2 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = (void *)((char *)a1 + v49);
  uint64_t v54 = (void *)((char *)a2 + v49);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PregeneratedAssessment(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_214D19C78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[12];
  BOOL v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[15];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[16];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  uint64_t v37 = a3[18];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[19];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PregeneratedAssessment(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_214D19C78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[19];
  *(_OWORD *)((char *)a1 + a3[18]) = *(_OWORD *)((char *)a2 + a3[18]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

void *assignWithTake for PregeneratedAssessment(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_214D19C78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[15];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *uint64_t v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[16];
  uint64_t v53 = (void *)((char *)a1 + v52);
  uint64_t v54 = (void *)((char *)a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  uint64_t v58 = (void *)((char *)a1 + v57);
  uint64_t v59 = (void *)((char *)a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[19];
  id v63 = (void *)((char *)a1 + v62);
  unint64_t v64 = (void *)((char *)a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *id v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PregeneratedAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214C0AC74);
}

uint64_t sub_214C0AC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_214D19C78();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PregeneratedAssessment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214C0AD38);
}

uint64_t sub_214C0AD38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_214D19C78();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_214C0ADE0()
{
  uint64_t result = sub_214D19C78();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PregeneratedAssessment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PregeneratedAssessment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C0B018);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PregeneratedAssessment.CodingKeys()
{
  return &type metadata for PregeneratedAssessment.CodingKeys;
}

unint64_t sub_214C0B054()
{
  unint64_t result = qword_26784DDF8;
  if (!qword_26784DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DDF8);
  }
  return result;
}

unint64_t sub_214C0B0AC()
{
  unint64_t result = qword_26784DE00;
  if (!qword_26784DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE00);
  }
  return result;
}

unint64_t sub_214C0B104()
{
  unint64_t result = qword_26784DE08;
  if (!qword_26784DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE08);
  }
  return result;
}

uint64_t sub_214C0B158()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_214C0B1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_214C0B20C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D148);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_214C0B26C()
{
  unint64_t result = qword_26784D208;
  if (!qword_26784D208)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26784D208);
  }
  return result;
}

uint64_t sub_214C0B2AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214C0B2F4(uint64_t a1, void *a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D150);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_214B59CE0(a1, &qword_26784D150);
    sub_214C0E820(a2, (uint64_t)v9);
    sub_214B94EE8((uint64_t)a2);
    return sub_214B59CE0((uint64_t)v9, &qword_26784D150);
  }
  else
  {
    sub_214B6AC38(a1, (uint64_t)v13, &qword_26784D000);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int v3 = 0x8000000000000000;
    sub_214B8E73C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v18;
    swift_bridgeObjectRelease();
    return sub_214B94EE8((uint64_t)a2);
  }
}

uint64_t sub_214C0B4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D878);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_214B59CE0(a1, &qword_26784D878);
    sub_214C0E9FC(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_214B59CE0((uint64_t)v11, &qword_26784D878);
  }
  else
  {
    sub_214B915D8(a1, (uint64_t)v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_214B8EA48((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_214C0B668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_214B59EC0((long long *)a1, (uint64_t)v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *int v3 = 0x8000000000000000;
    uint64_t v7 = v16;
    uint64_t v8 = v17;
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x270FA5388](v9, v9);
    uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v12 + 16))(v11);
    sub_214CDF74C((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native, &v14, v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *int v3 = v14;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_214B59CE0(a1, &qword_26784D148);
    sub_214C0EB8C(a2, a3, (uint64_t)v15);
    swift_bridgeObjectRelease();
    return sub_214B59CE0((uint64_t)v15, &qword_26784D148);
  }
}

unint64_t sub_214C0B7F4()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_214D1A118();
  if (!v1)
  {
    uint64_t v4 = (char *)MEMORY[0x263F8EE78];
LABEL_20:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  unint64_t v2 = v0;
  unint64_t v3 = v1;
  uint64_t v4 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_214D1ABC8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v7) = 10;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_14;
      }
      goto LABEL_18;
    }
    if (sub_214D19FF8())
    {
      unint64_t result = sub_214C0ED30(v2, v3);
      if ((result & 0x100000000) != 0) {
        goto LABEL_22;
      }
      if ((result & 0xFFFFFF80) == 0) {
        break;
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:
    unint64_t v2 = sub_214D1A118();
    unint64_t v3 = v5;
    if (!v5) {
      goto LABEL_20;
    }
  }
  unint64_t result = sub_214C0ED30(v2, v3);
  if ((result & 0x100000000) != 0) {
    goto LABEL_23;
  }
  int v7 = result;
  unint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 0xFFFFFF00) == 0)
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_14:
      unint64_t v9 = *((void *)v4 + 2);
      unint64_t v8 = *((void *)v4 + 3);
      if (v9 >= v8 >> 1) {
        uint64_t v4 = sub_214B87124((char *)(v8 > 1), v9 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v9 + 1;
      v4[v9 + 32] = v7;
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v4 = sub_214B87124(0, *((void *)v4 + 2) + 1, 1, v4);
    goto LABEL_14;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

CoreODIEssentials::BindingsKeys_optional __swiftcall BindingsKeys.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_214D1AC28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 52;
  switch(v3)
  {
    case 0:
      goto LABEL_54;
    case 1:
      char v5 = 1;
      goto LABEL_54;
    case 2:
      char v5 = 2;
      goto LABEL_54;
    case 3:
      char v5 = 3;
      goto LABEL_54;
    case 4:
      char v5 = 4;
      goto LABEL_54;
    case 5:
      char v5 = 5;
      goto LABEL_54;
    case 6:
      char v5 = 6;
      goto LABEL_54;
    case 7:
      char v5 = 7;
      goto LABEL_54;
    case 8:
      char v5 = 8;
      goto LABEL_54;
    case 9:
      char v5 = 9;
      goto LABEL_54;
    case 10:
      char v5 = 10;
      goto LABEL_54;
    case 11:
      char v5 = 11;
      goto LABEL_54;
    case 12:
      char v5 = 12;
      goto LABEL_54;
    case 13:
      char v5 = 13;
      goto LABEL_54;
    case 14:
      char v5 = 14;
      goto LABEL_54;
    case 15:
      char v5 = 15;
      goto LABEL_54;
    case 16:
      char v5 = 16;
      goto LABEL_54;
    case 17:
      char v5 = 17;
      goto LABEL_54;
    case 18:
      char v5 = 18;
      goto LABEL_54;
    case 19:
      char v5 = 19;
      goto LABEL_54;
    case 20:
      char v5 = 20;
      goto LABEL_54;
    case 21:
      char v5 = 21;
      goto LABEL_54;
    case 22:
      char v5 = 22;
      goto LABEL_54;
    case 23:
      char v5 = 23;
      goto LABEL_54;
    case 24:
      char v5 = 24;
      goto LABEL_54;
    case 25:
      char v5 = 25;
      goto LABEL_54;
    case 26:
      char v5 = 26;
      goto LABEL_54;
    case 27:
      char v5 = 27;
      goto LABEL_54;
    case 28:
      char v5 = 28;
      goto LABEL_54;
    case 29:
      char v5 = 29;
      goto LABEL_54;
    case 30:
      char v5 = 30;
      goto LABEL_54;
    case 31:
      char v5 = 31;
      goto LABEL_54;
    case 32:
      char v5 = 32;
      goto LABEL_54;
    case 33:
      char v5 = 33;
      goto LABEL_54;
    case 34:
      char v5 = 34;
      goto LABEL_54;
    case 35:
      char v5 = 35;
      goto LABEL_54;
    case 36:
      char v5 = 36;
      goto LABEL_54;
    case 37:
      char v5 = 37;
      goto LABEL_54;
    case 38:
      char v5 = 38;
      goto LABEL_54;
    case 39:
      char v5 = 39;
      goto LABEL_54;
    case 40:
      char v5 = 40;
      goto LABEL_54;
    case 41:
      char v5 = 41;
      goto LABEL_54;
    case 42:
      char v5 = 42;
      goto LABEL_54;
    case 43:
      char v5 = 43;
      goto LABEL_54;
    case 44:
      char v5 = 44;
      goto LABEL_54;
    case 45:
      char v5 = 45;
      goto LABEL_54;
    case 46:
      char v5 = 46;
      goto LABEL_54;
    case 47:
      char v5 = 47;
      goto LABEL_54;
    case 48:
      char v5 = 48;
      goto LABEL_54;
    case 49:
      char v5 = 49;
      goto LABEL_54;
    case 50:
      char v5 = 50;
      goto LABEL_54;
    case 51:
      char v5 = 51;
LABEL_54:
      char v6 = v5;
      break;
    case 52:
      break;
    case 53:
      char v6 = 53;
      break;
    case 54:
      char v6 = 54;
      break;
    case 55:
      char v6 = 55;
      break;
    case 56:
      char v6 = 56;
      break;
    case 57:
      char v6 = 57;
      break;
    case 58:
      char v6 = 58;
      break;
    case 59:
      char v6 = 59;
      break;
    case 60:
      char v6 = 60;
      break;
    case 61:
      char v6 = 61;
      break;
    case 62:
      char v6 = 62;
      break;
    case 63:
      char v6 = 63;
      break;
    case 64:
      char v6 = 64;
      break;
    case 65:
      char v6 = 65;
      break;
    case 66:
      char v6 = 66;
      break;
    case 67:
      char v6 = 67;
      break;
    case 68:
      char v6 = 68;
      break;
    case 69:
      char v6 = 69;
      break;
    default:
      char v6 = 70;
      break;
  }
  *unint64_t v2 = v6;
  return result;
}

unint64_t BindingsKeys.rawValue.getter()
{
  unint64_t result = 0x6D614E7473726966;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t result = 0x6C69616D65;
      break;
    case 3:
      unint64_t result = 0x6D754E656E6F6870;
      break;
    case 4:
      unint64_t result = 0x746565727473;
      break;
    case 5:
      unint64_t result = 0x31746565727473;
      break;
    case 6:
      unint64_t result = 0x32746565727473;
      break;
    case 7:
      unint64_t result = 2037672291;
      break;
    case 8:
      unint64_t result = 0x6574617473;
      break;
    case 9:
      unint64_t result = 0x6F436C6174736F70;
      break;
    case 0xA:
      unint64_t result = 0x7972746E756F63;
      break;
    case 0xB:
      unint64_t result = 0x437972746E756F63;
      break;
    case 0xC:
      unint64_t result = 0x746E756F436F7369;
      break;
    case 0xD:
      unint64_t result = 0x4C73736572646461;
      break;
    case 0xE:
      unint64_t result = 0x4C73736572646461;
      break;
    case 0xF:
      unint64_t result = 0x6E6F685072656570;
      break;
    case 0x10:
      unint64_t result = 0x7372694672656570;
      break;
    case 0x11:
      unint64_t result = 0x7473614C72656570;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x14:
    case 0x16:
    case 0x19:
    case 0x1A:
      unint64_t result = 0x746E656D75636F64;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x17:
    case 0x18:
    case 0x1C:
    case 0x21:
    case 0x22:
    case 0x24:
    case 0x25:
    case 0x3B:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x1F:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x23:
      unint64_t result = 0x6947646573726170;
      break;
    case 0x26:
      unint64_t result = 0x694E646573726170;
      break;
    case 0x27:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x28:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x29:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x2A:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x2B:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x2C:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x2D:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x2E:
      unint64_t result = 0x6563697665447369;
      break;
    case 0x2F:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x30:
      unint64_t result = 0x614C656369766564;
      break;
    case 0x31:
      unint64_t result = 0x6469656C707061;
      break;
    case 0x32:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x33:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x34:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x35:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x36:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x37:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x38:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x39:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x3A:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x3C:
      unint64_t result = 0x4C676E696C6C6962;
      break;
    case 0x3D:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x3E:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x3F:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x40:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x41:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x42:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x43:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x44:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x45:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C0C588(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1D2B8(*a1, *a2);
}

uint64_t sub_214C0C594()
{
  return sub_214D1AD48();
}

uint64_t sub_214C0C5FC()
{
  BindingsKeys.rawValue.getter();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C0C660()
{
  return sub_214D1AD48();
}

CoreODIEssentials::BindingsKeys_optional sub_214C0C6C4(Swift::String *a1)
{
  return BindingsKeys.init(rawValue:)(*a1);
}

unint64_t sub_214C0C6D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BindingsKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

CoreODIEssentials::BindingsHelpers __swiftcall BindingsHelpers.init()()
{
  void *v0 = 45;
  v0[1] = 0xE100000000000000;
  return result;
}

id static BindingsHelpers.isDiagnosticsAllowed.getter()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    unint64_t v1 = result;
    unsigned int v2 = objc_msgSend(result, sel_effectiveBoolValueForSetting_, *MEMORY[0x263F53878]);

    return (id)(v2 == 1);
  }
  return result;
}

uint64_t static BindingsHelpers.deviceCountryCode.getter()
{
  uint64_t v0 = sub_214D19D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B20);
  MEMORY[0x270FA5388](v5 - 8, v6);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D19D58();
  sub_214D19D48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t v9 = sub_214D19D38();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_214B59CE0((uint64_t)v8, &qword_26ACE3B20);
  }
  else
  {
    sub_214D19CE8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static BindingsHelpers.asciiDeviceLanguage.getter()
{
  uint64_t v0 = _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0();
  if (v1)
  {
    unint64_t v2 = v1;
  }
  else
  {
    uint64_t v0 = 0;
    unint64_t v2 = 0xE000000000000000;
  }
  uint64_t v3 = _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(v0, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t BindingsHelpers.getNameComponents(firstName:lastName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3590);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_214D19998();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8, v10);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v14);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v60 = a2;
  uint64_t v61 = MEMORY[0x263F8EE80];
  uint64_t v59 = a1;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A78]), sel_init);
  uint64_t v18 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_personNameComponentsFromString_, v18);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  sub_214D19978();

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v7, v13, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    sub_214B59CE0((uint64_t)v7, &qword_26ACE3590);
    return v61;
  }
  v20(v16, v7, v8);
  uint64_t v21 = sub_214D19958();
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = v61;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v25;
    sub_214B8E388(v23, v24, 0xD000000000000010, 0x8000000214D2D5F0, isUniquelyReferenced_nonNull_native);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0xD000000000000010, 0x8000000214D2D5F0);
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_214D19938();
  if (v28)
  {
    uint64_t v29 = v27;
    uint64_t v30 = v28;
    uint64_t v31 = v61;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v31;
    sub_214B8E388(v29, v30, 0xD000000000000010, 0x8000000214D2D5A0, v32);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0xD000000000000010, 0x8000000214D2D5A0);
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_214D19928();
  if (v34)
  {
    uint64_t v35 = v33;
    uint64_t v36 = v34;
    uint64_t v37 = v61;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v37;
    sub_214B8E388(v35, v36, 0x6947646573726170, 0xEF656D614E6E6576, v38);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0x6947646573726170, 0xEF656D614E6E6576);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_214D19948();
  if (v40)
  {
    uint64_t v41 = v39;
    uint64_t v42 = v40;
    uint64_t v43 = v61;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v43;
    sub_214B8E388(v41, v42, 0xD000000000000010, 0x8000000214D2D5D0, v44);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0xD000000000000010, 0x8000000214D2D5D0);
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_214D19968();
  if (v46)
  {
    uint64_t v47 = v45;
    uint64_t v48 = v46;
    uint64_t v49 = v61;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v49;
    sub_214B8E388(v47, v48, 0xD000000000000010, 0x8000000214D2D610, v50);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0xD000000000000010, 0x8000000214D2D610);
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_214D19988();
  if (v52)
  {
    uint64_t v53 = v51;
    uint64_t v54 = v52;
    uint64_t v55 = v61;
    char v56 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v55;
    sub_214B8E388(v53, v54, 0x694E646573726170, 0xEE00656D614E6B63, v56);
    uint64_t v61 = v59;
  }
  else
  {
    sub_214C0E738(0x694E646573726170, 0xEE00656D614E6B63);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  return v61;
}

unint64_t sub_214C0CFBC(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  *(void *)&long long v83 = *v1;
  *((void *)&v83 + 1) = v3;
  LOBYTE(v79) = 6;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x8000000214D34FE0, &v79);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
  uint64_t v5 = sub_214B87FEC(0x6D614E7473726966, 0xE900000000000065);
  if ((v6 & 1) == 0) {
    goto LABEL_9;
  }
  sub_214B93DCC(*(void *)(a1 + 56) + 40 * v5, (uint64_t)&v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v7 = v80;
  if (!*(void *)(a1 + 16)
    || (v8 = v79, uint64_t v9 = sub_214B87FEC(0x656D614E7473616CLL, 0xE800000000000000), (v10 & 1) == 0)
    || (sub_214B93DCC(*(void *)(a1 + 56) + 40 * v9, (uint64_t)&v83), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(void *)&long long v83 = v4;
    *((void *)&v83 + 1) = v3;
    LOBYTE(v79) = 6;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD000000000000028, 0x8000000214D35010, &v79);
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x263F8EE80];
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = BindingsHelpers.getNameComponents(firstName:lastName:)(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_214C04784(v11);
  swift_bridgeObjectRelease();
LABEL_10:
  if (!*(void *)(a1 + 16)) {
    goto LABEL_35;
  }
  uint64_t v13 = sub_214B87FEC(0xD000000000000012, 0x8000000214D2DCA0);
  if ((v14 & 1) == 0) {
    goto LABEL_35;
  }
  sub_214B93DCC(*(void *)(a1 + 56) + 40 * v13, (uint64_t)&v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3960);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_35;
  }
  uint64_t v15 = v80;
  if (!*(void *)(a1 + 16)
    || (v16 = v79, uint64_t v17 = sub_214B87FEC(0xD000000000000011, 0x8000000214D2DCC0), (v18 & 1) == 0)
    || (sub_214B93DCC(*(void *)(a1 + 56) + 40 * v17, (uint64_t)&v83),
        uint64_t v19 = MEMORY[0x263F8D310],
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_35:
    *(void *)&long long v83 = v4;
    *((void *)&v83 + 1) = v3;
    LOBYTE(v79) = 6;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD00000000000002CLL, 0x8000000214D35040, &v79);
    goto LABEL_36;
  }
  uint64_t v20 = BindingsHelpers.getNameComponents(firstName:lastName:)(v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = sub_214B87FEC(0xD000000000000010, 0x8000000214D2D5F0);
    if (v22)
    {
      uint64_t v23 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v84 = v19;
      uint64_t v85 = MEMORY[0x263F8D320];
      *(void *)&long long v83 = v24;
      *((void *)&v83 + 1) = v25;
      sub_214B59EC0(&v83, (uint64_t)&v79);
      swift_bridgeObjectRetain();
      LOBYTE(v25) = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v82 = v12;
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
      MEMORY[0x270FA5388](v26, v26);
      uint64_t v28 = (uint64_t *)((char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      sub_214C0F508(*v28, v28[1], 0xD000000000000018, 0x8000000214D2DE30, v25, &v82);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
      unint64_t v12 = v82;
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v20 + 16))
    {
      uint64_t v30 = sub_214B87FEC(0xD000000000000010, 0x8000000214D2D5A0);
      if (v31)
      {
        char v32 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v30);
        uint64_t v33 = *v32;
        uint64_t v34 = v32[1];
        uint64_t v84 = v19;
        uint64_t v85 = MEMORY[0x263F8D320];
        *(void *)&long long v83 = v33;
        *((void *)&v83 + 1) = v34;
        sub_214B59EC0(&v83, (uint64_t)&v79);
        swift_bridgeObjectRetain();
        LOBYTE(v34) = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v82 = v12;
        uint64_t v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
        MEMORY[0x270FA5388](v35, v35);
        uint64_t v37 = (uint64_t *)((char *)&v78 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *))(v38 + 16))(v37);
        sub_214C0F508(*v37, v37[1], 0xD000000000000018, 0x8000000214D2DE50, v34, &v82);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        unint64_t v12 = v82;
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v20 + 16))
      {
        uint64_t v39 = sub_214B87FEC(0x6947646573726170, 0xEF656D614E6E6576);
        if (v40)
        {
          uint64_t v41 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v39);
          uint64_t v42 = *v41;
          uint64_t v43 = v41[1];
          uint64_t v84 = v19;
          uint64_t v85 = MEMORY[0x263F8D320];
          *(void *)&long long v83 = v42;
          *((void *)&v83 + 1) = v43;
          sub_214B59EC0(&v83, (uint64_t)&v79);
          swift_bridgeObjectRetain();
          LOBYTE(v43) = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v82 = v12;
          uint64_t v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
          MEMORY[0x270FA5388](v44, v44);
          uint64_t v46 = (uint64_t *)((char *)&v78 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *))(v47 + 16))(v46);
          sub_214C0F508(*v46, v46[1], 0xD000000000000017, 0x8000000214D2DE70, v43, &v82);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
          unint64_t v12 = v82;
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v20 + 16))
        {
          uint64_t v48 = sub_214B87FEC(0xD000000000000010, 0x8000000214D2D5D0);
          if (v49)
          {
            char v50 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v48);
            uint64_t v51 = *v50;
            uint64_t v52 = v50[1];
            uint64_t v84 = v19;
            uint64_t v85 = MEMORY[0x263F8D320];
            *(void *)&long long v83 = v51;
            *((void *)&v83 + 1) = v52;
            sub_214B59EC0(&v83, (uint64_t)&v79);
            swift_bridgeObjectRetain();
            LOBYTE(v52) = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v82 = v12;
            uint64_t v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
            MEMORY[0x270FA5388](v53, v53);
            uint64_t v55 = (uint64_t *)((char *)&v78 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v56 + 16))(v55);
            sub_214C0F508(*v55, v55[1], 0xD000000000000018, 0x8000000214D2DE90, v52, &v82);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
            unint64_t v12 = v82;
            swift_bridgeObjectRelease();
          }
          if (*(void *)(v20 + 16))
          {
            uint64_t v57 = sub_214B87FEC(0xD000000000000010, 0x8000000214D2D610);
            if (v58)
            {
              uint64_t v59 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v57);
              uint64_t v60 = *v59;
              uint64_t v61 = v59[1];
              uint64_t v84 = v19;
              uint64_t v85 = MEMORY[0x263F8D320];
              *(void *)&long long v83 = v60;
              *((void *)&v83 + 1) = v61;
              sub_214B59EC0(&v83, (uint64_t)&v79);
              swift_bridgeObjectRetain();
              LOBYTE(v61) = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v82 = v12;
              uint64_t v62 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
              MEMORY[0x270FA5388](v62, v62);
              unint64_t v64 = (uint64_t *)((char *)&v78 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
              (*(void (**)(uint64_t *))(v65 + 16))(v64);
              sub_214C0F508(*v64, v64[1], 0xD000000000000018, 0x8000000214D2DEB0, v61, &v82);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
              unint64_t v12 = v82;
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v20 + 16))
            {
              uint64_t v66 = sub_214B87FEC(0x694E646573726170, 0xEE00656D614E6B63);
              if (v67)
              {
                unint64_t v68 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v66);
                uint64_t v70 = *v68;
                uint64_t v69 = v68[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v84 = v19;
                uint64_t v85 = MEMORY[0x263F8D320];
                *(void *)&long long v83 = v70;
                *((void *)&v83 + 1) = v69;
                sub_214B59EC0(&v83, (uint64_t)&v79);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v82 = v12;
                uint64_t v72 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
                MEMORY[0x270FA5388](v72, v72);
                uint64_t v74 = (uint64_t *)((char *)&v78 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v75 + 16))(v74);
                sub_214C0F508(*v74, v74[1], 0xD000000000000016, 0x8000000214D2DED0, isUniquelyReferenced_nonNull_native, &v82);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
                unint64_t v12 = v82;
              }
            }
          }
        }
      }
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  *(void *)&long long v83 = 0x657261685369646FLL;
  *((void *)&v83 + 1) = 0xEF726567676F4C64;
  uint64_t v79 = 0;
  unint64_t v80 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  uint64_t v79 = 0x2064657373657547;
  unint64_t v80 = 0xE800000000000000;
  unint64_t v82 = *(void *)(v12 + 16);
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  uint64_t v76 = v79;
  LOBYTE(v79) = 5;
  CoreODILogger.debug(_:category:)(v76, v80, &v79);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t BindingsHelpers.getStaticBindings(bindings:excludeAppleID:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 176) = a2;
  *(void *)(v3 + 48) = a1;
  uint64_t v4 = sub_214D19D78();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B18);
  *(void *)(v3 + 80) = swift_task_alloc();
  uint64_t v5 = sub_214D19D98();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = *(void *)(v5 - 8);
  *(void *)(v3 + 104) = swift_task_alloc();
  *(void *)(v3 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B20);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  *(void *)(v3 + 120) = v6;
  *(void *)(v3 + 128) = v7;
  *(void *)(v3 + 136) = v8;
  return MEMORY[0x270FA2498](sub_214C0DD04, 0, 0);
}

uint64_t sub_214C0DD04()
{
  uint64_t v42 = v0;
  id v1 = objc_msgSend(self, sel_sharedConnection);
  if (v1)
  {
    unint64_t v2 = v1;
    unsigned int v3 = objc_msgSend(v1, sel_effectiveBoolValueForSetting_, *MEMORY[0x263F53878]);

    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = 0;
  }
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = MEMORY[0x263F8D4F8];
  uint64_t v10 = MEMORY[0x263F8D508];
  *((void *)&v40 + 1) = MEMORY[0x263F8D4F8];
  uint64_t v41 = MEMORY[0x263F8D508];
  LOBYTE(v39) = v4;
  sub_214C0B668((uint64_t)&v39, 0xD000000000000014, 0x8000000214D2D700);
  int v11 = MKBGetDeviceLockState();
  *((void *)&v40 + 1) = v9;
  uint64_t v41 = v10;
  LOBYTE(v39) = (v11 - 1) < 2;
  sub_214C0B668((uint64_t)&v39, 0x6563697665447369, 0xEE0064656B636F4CLL);
  sub_214D19D58();
  sub_214D19D48();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v37(v6, v7);
  uint64_t v12 = sub_214D19D38();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12);
  uint64_t v15 = *(void *)(v0 + 120);
  if (v14 == 1)
  {
    sub_214B59CE0(*(void *)(v0 + 120), &qword_26ACE3B20);
  }
  else
  {
    sub_214D19CE8();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  uint64_t v22 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  *((void *)&v40 + 1) = MEMORY[0x263F8D6C8];
  uint64_t v41 = MEMORY[0x263F8D6D8];
  *(void *)&long long v39 = v22;
  sub_214C0B668((uint64_t)&v39, 0xD000000000000011, 0x8000000214D2D720);
  sub_214D19D58();
  sub_214D19D88();
  v37(v16, v18);
  sub_214D19D68();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  uint64_t v23 = sub_214D19CF8();
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23);
  uint64_t v26 = *(void *)(v0 + 80);
  if (v25 == 1)
  {
    sub_214B59CE0(*(void *)(v0 + 80), &qword_26ACE3B18);
    long long v39 = 0u;
    long long v40 = 0u;
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v27 = sub_214D19CE8();
    *((void *)&v40 + 1) = MEMORY[0x263F8D310];
    uint64_t v41 = MEMORY[0x263F8D320];
    *(void *)&long long v39 = v27;
    *((void *)&v39 + 1) = v28;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  char v29 = *(unsigned char *)(v0 + 176);
  sub_214C0B668((uint64_t)&v39, 0x614C656369766564, 0xEE0065676175676ELL);
  if (v29)
  {
    uint64_t v30 = *(void *)(v0 + 136);
    char v31 = *(uint64_t **)(v0 + 48);
    *(void *)&long long v39 = *(void *)(v0 + 128);
    *((void *)&v39 + 1) = v30;
    unint64_t v32 = sub_214C0CFBC(*v31);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v39 = *v31;
    *char v31 = 0x8000000000000000;
    sub_214C0F098(v32, (uint64_t)sub_214C0F044, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v39);
    *char v31 = v39;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  else
  {
    if (qword_26ACE3710 != -1) {
      swift_once();
    }
    *(void *)(v0 + 144) = qword_26ACE3700;
    uint64_t v38 = (uint64_t (__cdecl *)())((char *)&dword_26784EA50 + dword_26784EA50);
    swift_retain();
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_214C0E268;
    return v38();
  }
}

uint64_t sub_214C0E268(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_214C0E554;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    id v6 = a1;
    uint64_t v5 = sub_214C0E3A0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_214C0E3A0()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {
    id v2 = objc_msgSend(*(id *)(v0 + 168), sel_appleID);

    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_214D1A038();
      uint64_t v5 = v4;

      uint64_t v15 = MEMORY[0x263F8D310];
      uint64_t v16 = MEMORY[0x263F8D320];
      uint64_t v13 = v3;
      uint64_t v14 = v5;
      sub_214C0B668((uint64_t)&v13, 0x6469656C707061, 0xE700000000000000);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v8 = *(uint64_t **)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v14 = v7;
  unint64_t v9 = sub_214C0CFBC(*v8);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v8;
  uint64_t *v8 = 0x8000000000000000;
  sub_214C0F098(v9, (uint64_t)sub_214C0F044, 0, isUniquelyReferenced_nonNull_native, &v13);
  uint64_t *v8 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  return result;
}

uint64_t sub_214C0E554()
{
  uint64_t v10 = v0;
  uint64_t v1 = (void *)v0[20];
  swift_release();
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  uint64_t v8 = 0xD000000000000006;
  unint64_t v9 = 0x8000000214D34FC0;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  CoreODILogger.error(_:category:)(0xD000000000000017, 0x8000000214D34FC0, &v8);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v2 = v0[17];
  uint64_t v3 = (uint64_t *)v0[6];
  uint64_t v8 = v0[16];
  unint64_t v9 = v2;
  unint64_t v4 = sub_214C0CFBC(*v3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_214C0F098(v4, (uint64_t)sub_214C0F044, 0, isUniquelyReferenced_nonNull_native, &v8);
  *uint64_t v3 = v8;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214C0E738(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_214B87FEC(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_214B90050();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_214CDB560(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_214C0E820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_214B88214(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_214B90408();
      uint64_t v9 = v17;
    }
    memcpy(v16, (const void *)(*(void *)(v9 + 48) + 1048 * v6), 0x415uLL);
    sub_214B94EE8((uint64_t)v16);
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
    uint64_t v12 = *(void *)(v11 - 8);
    sub_214B6AC38(v10 + *(void *)(v12 + 72) * v6, a2, &qword_26784D000);
    sub_214CDB91C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D000);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a2, 1, 1, v14);
  }
}

uint64_t sub_214C0E9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_214B87FEC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_214B90850();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for ODIKnownBinding();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_214B915D8(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_214CDBB6C(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ODIKnownBinding();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_214C0EB8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_214B87FEC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_214B90ABC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_214B59EC0((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_214CDBD7C(v8, v11);
    *unint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_214C0EC98(uint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_214B883E4(a1);
  if ((v4 & 1) == 0) {
    return 1;
  }
  unint64_t v5 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v1;
  uint64_t v10 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_214B91198();
    uint64_t v7 = v10;
  }
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v5);
  sub_214CDC124(v5, v7);
  *unint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_214C0ED30(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_214C0EE10(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_214D1A798();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_214D1A818();
      }
      unsigned int v5 = sub_214D1A828();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_214C0EE10(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    double result = sub_214C0EEB0(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_214C0EF20(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_214C0EEB0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    double result = sub_214B57CF0(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_214C0EF20(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_214D1A818();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }
      if ((*(unsigned char *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(unsigned char *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }
    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

uint64_t sub_214C0F044@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_214B93DCC((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_214C0F098(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v37 = a1;
  uint64_t v38 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v39 = v8;
  uint64_t v40 = 0;
  uint64_t v41 = v11 & v9;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_214C0F304((uint64_t)&v34);
  uint64_t v12 = v35;
  if (!v35)
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_214BB7994();
    return swift_release();
  }
  while (1)
  {
    uint64_t v15 = v34;
    sub_214B59EC0(&v36, (uint64_t)v33);
    uint64_t v16 = *a5;
    unint64_t v18 = sub_214B87FEC(v15, v12);
    uint64_t v19 = *(void *)(v16 + 16);
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (*(void *)(v16 + 24) >= v21)
    {
      if (a4)
      {
        if (v17) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_214B90ABC();
        if (v22) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_214B8CC74(v21, a4 & 1);
      uint64_t v23 = sub_214B87FEC(v15, v12);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_22;
      }
      unint64_t v18 = v23;
      if (v22)
      {
LABEL_6:
        uint64_t v13 = 40 * v18;
        sub_214B93DCC(*(void *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_214B93DCC((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(*a5 + 56) + v13;
        __swift_destroy_boxed_opaque_existential_1(v14);
        sub_214B59EC0(v32, v14);
        goto LABEL_7;
      }
    }
    int v25 = (void *)*a5;
    *(void *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    uint64_t v26 = (uint64_t *)(v25[6] + 16 * v18);
    *uint64_t v26 = v15;
    v26[1] = v12;
    sub_214B59EC0(v33, v25[7] + 40 * v18);
    uint64_t v27 = v25[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_21;
    }
    v25[2] = v29;
LABEL_7:
    sub_214C0F304((uint64_t)&v34);
    uint64_t v12 = v35;
    a4 = 1;
    if (!v35) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_214D1AC58();
  __break(1u);
  return result;
}

uint64_t sub_214C0F304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_214B93DCC(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  long long v25 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_214B6AC38((uint64_t)&v25, (uint64_t)v23, &qword_26ACE3970);
  if (*((void *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    uint64_t v22 = v24;
    v19(v21);
    return sub_214B59CE0((uint64_t)v21, &qword_26ACE3968);
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_214C0F508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x263F8D310];
  uint64_t v30 = MEMORY[0x263F8D310];
  uint64_t v31 = MEMORY[0x263F8D320];
  *(void *)&long long v29 = a1;
  *((void *)&v29 + 1) = a2;
  uint64_t v11 = (void *)*a6;
  unint64_t v13 = sub_214B87FEC(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 40 * v13;
      __swift_destroy_boxed_opaque_existential_1(v20);
      return sub_214B59EC0(&v29, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_214B90ABC();
    goto LABEL_7;
  }
  sub_214B8CC74(v16, a5 & 1);
  uint64_t v22 = sub_214B87FEC(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_214D1AC58();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29, v10);
  MEMORY[0x270FA5388](v24, v24);
  uint64_t v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_214C0F6F8(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_214C0F6F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = MEMORY[0x263F8D310];
  uint64_t v14 = MEMORY[0x263F8D320];
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  int64_t v7 = (void *)(a6[6] + 16 * a1);
  void *v7 = a2;
  v7[1] = a3;
  uint64_t result = sub_214B59EC0(&v12, a6[7] + 40 * a1);
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0()
{
  if (sub_214D1A0E8() != 2)
  {
    uint64_t v35 = 0x657261685369646FLL;
    uint64_t v36 = 0xEF726567676F4C64;
    unint64_t v33 = 5;
    unint64_t v34 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v33);
    swift_bridgeObjectRelease();
    return -1;
  }
  swift_bridgeObjectRetain();
  unint64_t v0 = sub_214C0B7F4();
  swift_bridgeObjectRelease();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_214B67D50(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v35;
    do
    {
      LOBYTE(v33) = *(unsigned char *)(v0 + v2 + 32);
      uint64_t v4 = sub_214D1AB78();
      uint64_t v6 = v5;
      uint64_t v35 = v3;
      unint64_t v8 = *(void *)(v3 + 16);
      unint64_t v7 = *(void *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_214B67D50(v7 > 1, v8 + 1, 1);
        uint64_t v3 = v35;
      }
      ++v2;
      *(void *)(v3 + 16) = v8 + 1;
      unint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v4;
      *(void *)(v9 + 40) = v6;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  uint64_t v35 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  sub_214B6A878();
  uint64_t v11 = sub_214D1A008();
  unint64_t v13 = v12;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v13) & 0xF;
  uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v17 = HIBYTE(v13) & 0xF;
  }
  else {
    uint64_t v17 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = -1;
LABEL_55:
    uint64_t v35 = 0x657261685369646FLL;
    uint64_t v36 = 0xEF726567676F4C64;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v33 = 0xD000000000000005;
    unint64_t v34 = 0x8000000214D351B0;
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    CoreODILogger.debug(_:category:)(0xD000000000000018, 0x8000000214D351B0, &v33);
    swift_bridgeObjectRelease();
    return v10;
  }
  if ((v13 & 0x1000000000000000) != 0)
  {
    uint64_t v10 = (uint64_t)sub_214C6639C(v11, v13, 10);
    LOBYTE(v11) = v32;
LABEL_53:
    swift_bridgeObjectRelease();
    if (v11) {
      uint64_t v10 = -1;
    }
    goto LABEL_55;
  }
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((v11 & 0x1000000000000000) != 0) {
      uint64_t v18 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v18 = (unsigned __int8 *)sub_214D1A818();
    }
    uint64_t v10 = (uint64_t)sub_214C66384(v18, v16, 10);
    LOBYTE(v11) = v19 & 1;
    goto LABEL_53;
  }
  uint64_t v35 = v11;
  uint64_t v36 = v13 & 0xFFFFFFFFFFFFFFLL;
  if (v11 == 43)
  {
    if (!v15) {
      goto LABEL_67;
    }
    if (v15 == 1 || (BYTE1(v11) - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v10 = (BYTE1(v11) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(v11) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v10 = 10 * (BYTE1(v11) - 48) + (BYTE2(v11) - 48);
      uint64_t v20 = v15 - 3;
      if (v20)
      {
        uint64_t v21 = (unsigned __int8 *)&v35 + 3;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            goto LABEL_40;
          }
          uint64_t v23 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_40;
          }
          uint64_t v10 = v23 + v22;
          if (__OFADD__(v23, v22)) {
            goto LABEL_40;
          }
          LOBYTE(v11) = 0;
          ++v21;
          if (!--v20) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_52:
    LOBYTE(v11) = 0;
    goto LABEL_53;
  }
  if (v11 != 45)
  {
    if (!v15 || (v11 - 48) > 9u) {
      goto LABEL_40;
    }
    uint64_t v10 = (v11 - 48);
    if (v15 != 1)
    {
      if ((BYTE1(v11) - 48) > 9u) {
        goto LABEL_40;
      }
      uint64_t v10 = 10 * (v11 - 48) + (BYTE1(v11) - 48);
      uint64_t v24 = v15 - 2;
      if (v24)
      {
        uint64_t v25 = (unsigned __int8 *)&v35 + 2;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_40;
          }
          uint64_t v27 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_40;
          }
          uint64_t v10 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_40;
          }
          LOBYTE(v11) = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_53;
          }
        }
      }
    }
    goto LABEL_52;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(v11) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        LOBYTE(v11) = 0;
        uint64_t v10 = -(uint64_t)(BYTE1(v11) - 48);
        goto LABEL_53;
      }
      if ((BYTE2(v11) - 48) <= 9u)
      {
        uint64_t v10 = -10 * (BYTE1(v11) - 48) - (BYTE2(v11) - 48);
        uint64_t v28 = v15 - 3;
        if (!v28) {
          goto LABEL_52;
        }
        long long v29 = (unsigned __int8 *)&v35 + 3;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            break;
          }
          uint64_t v31 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            break;
          }
          uint64_t v10 = v31 - v30;
          if (__OFSUB__(v31, v30)) {
            break;
          }
          LOBYTE(v11) = 0;
          ++v29;
          if (!--v28) {
            goto LABEL_53;
          }
        }
      }
    }
LABEL_40:
    uint64_t v10 = 0;
    LOBYTE(v11) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0()
{
  uint64_t v0 = sub_214D19D78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_214D19D98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B18);
  MEMORY[0x270FA5388](v10 - 8, v11);
  unint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D19D58();
  sub_214D19D88();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_214D19D68();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  uint64_t v14 = sub_214D19CF8();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_214B59CE0((uint64_t)v13, &qword_26ACE3B18);
    return 0;
  }
  else
  {
    uint64_t v16 = sub_214D19CE8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  return v16;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  uint64_t v20 = a1;
  unint64_t v21 = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = 0;
  uint64_t v23 = v2;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_214D1A118();
  if (v4)
  {
    unint64_t v5 = v3;
    unint64_t v6 = v4;
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
    while ((v5 != 2573 || v6 != 0xE200000000000000) && (sub_214D1ABC8() & 1) == 0)
    {
      if (sub_214D19FF8())
      {
        uint64_t result = sub_214C0ED30(v5, v6);
        if ((result & 0x100000000) != 0) {
          goto LABEL_35;
        }
        if ((result & 0xFFFFFF80) == 0)
        {
          uint64_t result = sub_214C0ED30(v5, v6);
          if ((result & 0x100000000) != 0) {
            goto LABEL_36;
          }
          int v10 = result;
          uint64_t result = swift_bridgeObjectRelease();
          if ((v10 & 0xFFFFFF00) != 0)
          {
            __break(1u);
            goto LABEL_34;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_16;
          }
LABEL_20:
          uint64_t v7 = sub_214B87124(0, *((void *)v7 + 2) + 1, 1, v7);
LABEL_16:
          unint64_t v12 = *((void *)v7 + 2);
          unint64_t v11 = *((void *)v7 + 3);
          if (v12 >= v11 >> 1) {
            uint64_t v7 = sub_214B87124((char *)(v11 > 1), v12 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v12 + 1;
          v7[v12 + 32] = v10;
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
LABEL_6:
      unint64_t v5 = sub_214D1A118();
      unint64_t v6 = v8;
      if (!v8) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
    LOBYTE(v10) = 10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
LABEL_22:
  swift_bridgeObjectRelease();
  unint64_t v13 = *((void *)v7 + 2);
  if (v13 > 4 || (uint64_t result = sub_214D1A0E8(), v13 != result))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 0x657261685369646FLL;
    unint64_t v21 = 0xEF726567676F4C64;
    unint64_t v18 = 5;
    unint64_t v19 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v18);
    swift_bridgeObjectRelease();
    return -1;
  }
  uint64_t v14 = *((void *)v7 + 2);
  if (!v14)
  {
    uint64_t v15 = 0;
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v20 = 0x657261685369646FLL;
    unint64_t v21 = 0xEF726567676F4C64;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000005;
    unint64_t v19 = 0x8000000214D35150;
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    CoreODILogger.debug(_:category:)(0xD000000000000019, 0x8000000214D35150, &v18);
    swift_bridgeObjectRelease();
    return v15;
  }
  uint64_t v15 = 0;
  uint64_t v16 = (unsigned __int8 *)(v7 + 32);
  while ((unsigned __int128)(v15 * (__int128)1000) >> 64 == (1000 * v15) >> 63)
  {
    unsigned int v17 = *v16++;
    uint64_t v15 = 1000 * v15 + v17;
    if (!--v14) {
      goto LABEL_31;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_214C10394()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3B20);
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_214D19D98();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_currentLocale);
  sub_214D19D18();

  sub_214D19D48();
  uint64_t v10 = sub_214D19D38();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
  {
    sub_214B59CE0((uint64_t)v3, &qword_26ACE3B20);
  }
  else
  {
    sub_214D19CE8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  }
  uint64_t v12 = sub_214D1A028();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV17formatPhoneNumber05phoneG016usingCountryCodeSSSgSS_So8NSStringCSgtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A108();
  sub_214D1A108();
  if (qword_26ACE4208 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_214D19EE8();
  __swift_project_value_buffer(v4, (uint64_t)qword_26ACEBA88);
  swift_bridgeObjectRetain();
  sub_214C3DE8C();
  swift_bridgeObjectRelease_n();
  if (a3) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = (void *)sub_214C10394();
  }
  uint64_t v15 = 0x657261685369646FLL;
  unint64_t v16 = 0xEF726567676F4C64;
  id v6 = a3;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "Country Code: ");
  HIBYTE(v14[1]) = -18;
  sub_214D1A038();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v7 = v14[0];
  LOBYTE(v14[0]) = 14;
  CoreODILogger.debug(_:category:)(v7, v14[1], v14);
  swift_bridgeObjectRelease();
  unint64_t v8 = (void *)sub_214D1A028();
  id v9 = (void *)CFPhoneNumberCreate();

  uint64_t String = CFPhoneNumberCreateString();
  if (String)
  {
    uint64_t v11 = (void *)String;
    uint64_t v12 = sub_214D1A038();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214C3DE8C();

  swift_bridgeObjectRelease_n();
  return v12;
}

unint64_t sub_214C108E4()
{
  unint64_t result = qword_26784DE30;
  if (!qword_26784DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784DE30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BindingsKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xBB) {
    goto LABEL_17;
  }
  if (a2 + 69 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 69) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 69;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 69;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 69;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x46;
  int v8 = v6 - 70;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BindingsKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 69 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 69) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xBB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xBA)
  {
    unsigned int v6 = ((a2 - 187) >> 8) + 1;
    *unint64_t result = a2 + 69;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C10A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 69;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BindingsKeys()
{
  return &type metadata for BindingsKeys;
}

ValueMetadata *type metadata accessor for BindingsHelpers()
{
  return &type metadata for BindingsHelpers;
}

uint64_t sub_214C10ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v43 = 0x49444F65726F63;
  *((void *)&v43 + 1) = 0xE700000000000000;
  sub_214D1A728();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_214B88110((uint64_t)v45), (v5 & 1) != 0))
  {
    sub_214B5EC30(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_214B6ABE4((uint64_t)v45);
  if (*((void *)&v28 + 1))
  {
    if (swift_dynamicCast())
    {
      long long v6 = v43;
      sub_214D19768();
      swift_allocObject();
      sub_214D19758();
      sub_214C167D4();
      sub_214D19748();
      swift_release();
      strcpy((char *)&v43, "daemonVersion");
      HIWORD(v43) = -4864;
      sub_214D1A728();
      if (*(void *)(a1 + 16) && (unint64_t v13 = sub_214B88110((uint64_t)&v27), (v14 & 1) != 0))
      {
        sub_214B5EC30(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v43);
      }
      else
      {
        long long v43 = 0u;
        long long v44 = 0u;
      }
      sub_214B6ABE4((uint64_t)&v27);
      if (*((void *)&v44 + 1))
      {
        int v15 = swift_dynamicCast();
        if (v15) {
          uint64_t v16 = v25;
        }
        else {
          uint64_t v16 = 0;
        }
        if (v15) {
          uint64_t v17 = v26;
        }
        else {
          uint64_t v17 = 0;
        }
      }
      else
      {
        sub_214B5ECF4((uint64_t)&v43);
        uint64_t v16 = 0;
        uint64_t v17 = 0;
      }
      swift_bridgeObjectRelease();
      *(void *)&v45[0] = v16;
      *((void *)&v45[0] + 1) = v17;
      *(void *)&long long v43 = 0x7365727574616566;
      *((void *)&v43 + 1) = 0xE800000000000000;
      sub_214D1A728();
      if (*(void *)(a1 + 16) && (unint64_t v18 = sub_214B88110((uint64_t)&v27), (v19 & 1) != 0))
      {
        sub_214B5EC30(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v43);
      }
      else
      {
        long long v43 = 0u;
        long long v44 = 0u;
      }
      sub_214B6ABE4((uint64_t)&v27);
      if (*((void *)&v44 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3950);
        if (swift_dynamicCast()) {
          uint64_t v20 = v25;
        }
        else {
          uint64_t v20 = 0;
        }
      }
      else
      {
        sub_214B5ECF4((uint64_t)&v43);
        uint64_t v20 = 0;
      }
      swift_bridgeObjectRelease();
      *((void *)&v46 + 1) = v20;
      char v47 = 0;
      if (qword_26ACE3C08 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_214D19EE8();
      __swift_project_value_buffer(v21, (uint64_t)qword_26ACE3AD0);
      uint64_t v22 = sub_214D19EC8();
      os_log_type_t v23 = sub_214D1A498();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_214B4E000, v22, v23, "Got config from asd.", v24, 2u);
        MEMORY[0x2166B1540](v24, -1, -1);
      }
      sub_214B58A4C(v6, *((unint64_t *)&v6 + 1));

      long long v39 = v45[12];
      long long v40 = v45[13];
      long long v41 = v46;
      char v42 = v47;
      long long v35 = v45[8];
      long long v36 = v45[9];
      long long v37 = v45[10];
      long long v38 = v45[11];
      long long v31 = v45[4];
      long long v32 = v45[5];
      long long v33 = v45[6];
      long long v34 = v45[7];
      long long v27 = v45[0];
      long long v28 = v45[1];
      long long v29 = v45[2];
      long long v30 = v45[3];
      nullsub_1(&v27);
      uint64_t v11 = &v27;
      return sub_214B6AC38((uint64_t)v11, a2, (uint64_t *)&unk_26ACE3B90);
    }
  }
  else
  {
    sub_214B5ECF4((uint64_t)&v27);
  }
  if (qword_26ACE3C08 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_214D19EE8();
  __swift_project_value_buffer(v7, (uint64_t)qword_26ACE3AD0);
  int v8 = sub_214D19EC8();
  os_log_type_t v9 = sub_214D1A4A8();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_214B4E000, v8, v9, "Error decoding config from asd: No Data object coreODI", v10, 2u);
    MEMORY[0x2166B1540](v10, -1, -1);
  }

  sub_214C167A0((uint64_t)v45);
  uint64_t v11 = v45;
  return sub_214B6AC38((uint64_t)v11, a2, (uint64_t *)&unk_26ACE3B90);
}

uint64_t sub_214C11168(char a1)
{
  sub_214B6AC38(v1 + 16, (uint64_t)v6, &qword_26ACE44B8);
  uint64_t v3 = 0;
  switch(a1)
  {
    case 1:
      return v3;
    case 2:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[2];
      goto LABEL_25;
    case 3:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[4];
      goto LABEL_25;
    case 4:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[6];
      goto LABEL_25;
    case 5:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[8];
      goto LABEL_25;
    case 6:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[12];
      goto LABEL_25;
    case 7:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[10];
      goto LABEL_25;
    case 8:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[14];
      goto LABEL_25;
    case 9:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[16];
      goto LABEL_25;
    case 10:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[18];
      goto LABEL_25;
    case 11:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[20];
      goto LABEL_25;
    default:
      sub_214B6AC38((uint64_t)v6, (uint64_t)v5, &qword_26ACE44B8);
      if (sub_214B6AC9C((uint64_t)v5) == 1) {
        return 0;
      }
      uint64_t v3 = v5[0];
LABEL_25:
      swift_bridgeObjectRetain();
      return v3;
  }
}

uint64_t sub_214C11404(uint64_t a1)
{
  *(void *)(v2 + 2256) = v1;
  *(void *)(v2 + 2248) = a1;
  return MEMORY[0x270FA2498](sub_214C11428, v1, 0);
}

uint64_t sub_214C11428()
{
  uint64_t v1 = *(void *)(v0 + 2256);
  if (*(unsigned char *)(v1 + 353))
  {
    sub_214B6AC38(v1 + 112, v0 + 1752, (uint64_t *)&unk_26ACE3B90);
    sub_214B6AC38(v0 + 1752, v0 + 1504, (uint64_t *)&unk_26ACE3B90);
    if (sub_214B6AC9C(v0 + 1504) != 1)
    {
      uint64_t v19 = *(void *)(v0 + 2248);
      long long v20 = *(_OWORD *)(v0 + 1504);
      long long v21 = *(_OWORD *)(v0 + 1520);
      long long v22 = *(_OWORD *)(v0 + 1552);
      *(_OWORD *)(v19 + 32) = *(_OWORD *)(v0 + 1536);
      *(_OWORD *)(v19 + 48) = v22;
      *(_OWORD *)uint64_t v19 = v20;
      *(_OWORD *)(v19 + 16) = v21;
      long long v23 = *(_OWORD *)(v0 + 1568);
      long long v24 = *(_OWORD *)(v0 + 1584);
      long long v25 = *(_OWORD *)(v0 + 1616);
      *(_OWORD *)(v19 + 96) = *(_OWORD *)(v0 + 1600);
      *(_OWORD *)(v19 + 112) = v25;
      *(_OWORD *)(v19 + 64) = v23;
      *(_OWORD *)(v19 + 80) = v24;
      long long v26 = *(_OWORD *)(v0 + 1632);
      long long v27 = *(_OWORD *)(v0 + 1648);
      long long v28 = *(_OWORD *)(v0 + 1680);
      *(_OWORD *)(v19 + 160) = *(_OWORD *)(v0 + 1664);
      *(_OWORD *)(v19 + 176) = v28;
      *(_OWORD *)(v19 + 128) = v26;
      *(_OWORD *)(v19 + 144) = v27;
      long long v29 = *(_OWORD *)(v0 + 1696);
      long long v30 = *(_OWORD *)(v0 + 1712);
      long long v31 = *(_OWORD *)(v0 + 1728);
      *(unsigned char *)(v19 + 240) = *(unsigned char *)(v0 + 1744);
      *(_OWORD *)(v19 + 208) = v30;
      *(_OWORD *)(v19 + 224) = v31;
      *(_OWORD *)(v19 + 192) = v29;
      sub_214B6AC38(v0 + 1752, v0 + 2000, (uint64_t *)&unk_26ACE3B90);
      sub_214C11A54((void *)(v0 + 2000));
      goto LABEL_12;
    }
    uint64_t v1 = *(void *)(v0 + 2256);
  }
  sub_214B6AC38(v1 + 360, v0 + 264, (uint64_t *)&unk_26ACE3B90);
  sub_214B6AC38(v0 + 264, v0 + 1256, (uint64_t *)&unk_26ACE3B90);
  if (sub_214B6AC9C(v0 + 1256) == 1)
  {
    if (qword_26784C858 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_26784CC78;
    *(void *)(v0 + 2264) = qword_26784CC78;
    unint64_t v3 = sub_214B67DD0();
    unint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 2272) = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE40);
    *unint64_t v4 = v0;
    v4[1] = sub_214C116FC;
    return MEMORY[0x270FA2318](v0 + 16, v2, v3, 0x6E6F436863746566, 0xED00002928676966, sub_214B62B88, 0, v5);
  }
  uint64_t v6 = *(void *)(v0 + 2248);
  long long v7 = *(_OWORD *)(v0 + 1256);
  long long v8 = *(_OWORD *)(v0 + 1272);
  long long v9 = *(_OWORD *)(v0 + 1304);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v0 + 1288);
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)uint64_t v6 = v7;
  *(_OWORD *)(v6 + 16) = v8;
  long long v10 = *(_OWORD *)(v0 + 1320);
  long long v11 = *(_OWORD *)(v0 + 1336);
  long long v12 = *(_OWORD *)(v0 + 1368);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(v0 + 1352);
  *(_OWORD *)(v6 + 112) = v12;
  *(_OWORD *)(v6 + 64) = v10;
  *(_OWORD *)(v6 + 80) = v11;
  long long v13 = *(_OWORD *)(v0 + 1384);
  long long v14 = *(_OWORD *)(v0 + 1400);
  long long v15 = *(_OWORD *)(v0 + 1432);
  *(_OWORD *)(v6 + 160) = *(_OWORD *)(v0 + 1416);
  *(_OWORD *)(v6 + 176) = v15;
  *(_OWORD *)(v6 + 128) = v13;
  *(_OWORD *)(v6 + 144) = v14;
  long long v16 = *(_OWORD *)(v0 + 1448);
  long long v17 = *(_OWORD *)(v0 + 1464);
  long long v18 = *(_OWORD *)(v0 + 1480);
  *(unsigned char *)(v6 + 240) = *(unsigned char *)(v0 + 1496);
  *(_OWORD *)(v6 + 208) = v17;
  *(_OWORD *)(v6 + 224) = v18;
  *(_OWORD *)(v6 + 192) = v16;
  sub_214C11DD8(v0 + 264, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11E5C);
LABEL_12:
  long long v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_214C116FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2264);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C1180C, v1, 0);
}

uint64_t sub_214C1180C()
{
  long long v1 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 1216) = v1;
  *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 240);
  long long v2 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1152) = v2;
  long long v3 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 1184) = v3;
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 1088) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1120) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 1024) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 1040) = *(_OWORD *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 2256);
  *(unsigned char *)(v0 + 1248) = *(unsigned char *)(v0 + 256);
  *(_OWORD *)(v0 + 1056) = v7;
  *(unsigned char *)(v0 + 258) = *(unsigned char *)(v0 + 257);
  return MEMORY[0x270FA2498](sub_214C11890, v8, 0);
}

uint64_t sub_214C11890()
{
  uint64_t v1 = *(void *)(v0 + 2256);
  uint64_t v2 = *(void *)(v0 + 2248);
  uint64_t v3 = v1 + 360;
  *(unsigned char *)(v1 + 353) = *(unsigned char *)(v0 + 258);
  long long v4 = *(_OWORD *)(v0 + 1216);
  *(_OWORD *)(v0 + 952) = *(_OWORD *)(v0 + 1200);
  *(_OWORD *)(v0 + 968) = v4;
  *(_OWORD *)(v0 + 984) = *(_OWORD *)(v0 + 1232);
  *(unsigned char *)(v0 + 1000) = *(unsigned char *)(v0 + 1248);
  long long v5 = *(_OWORD *)(v0 + 1152);
  *(_OWORD *)(v0 + 888) = *(_OWORD *)(v0 + 1136);
  *(_OWORD *)(v0 + 904) = v5;
  long long v6 = *(_OWORD *)(v0 + 1184);
  *(_OWORD *)(v0 + 920) = *(_OWORD *)(v0 + 1168);
  *(_OWORD *)(v0 + 936) = v6;
  long long v7 = *(_OWORD *)(v0 + 1088);
  *(_OWORD *)(v0 + 824) = *(_OWORD *)(v0 + 1072);
  *(_OWORD *)(v0 + 840) = v7;
  long long v8 = *(_OWORD *)(v0 + 1120);
  *(_OWORD *)(v0 + 856) = *(_OWORD *)(v0 + 1104);
  *(_OWORD *)(v0 + 872) = v8;
  long long v9 = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 1008);
  *(_OWORD *)(v0 + 776) = v9;
  long long v10 = *(_OWORD *)(v0 + 1056);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v0 + 808) = v10;
  nullsub_1(v0 + 760);
  sub_214B6AC38(v3, v0 + 512, (uint64_t *)&unk_26ACE3B90);
  sub_214B6AC38(v0 + 760, v3, (uint64_t *)&unk_26ACE3B90);
  sub_214C11A54((void *)(v0 + 1008));
  sub_214C11DD8(v0 + 512, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  long long v11 = *(_OWORD *)(v0 + 1056);
  long long v13 = *(_OWORD *)(v0 + 1008);
  long long v12 = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v2 + 32) = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v2 + 48) = v11;
  *(_OWORD *)uint64_t v2 = v13;
  *(_OWORD *)(v2 + 16) = v12;
  long long v14 = *(_OWORD *)(v0 + 1088);
  long long v15 = *(_OWORD *)(v0 + 1120);
  long long v16 = *(_OWORD *)(v0 + 1072);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 1104);
  *(_OWORD *)(v2 + 112) = v15;
  *(_OWORD *)(v2 + 64) = v16;
  *(_OWORD *)(v2 + 80) = v14;
  long long v17 = *(_OWORD *)(v0 + 1152);
  long long v18 = *(_OWORD *)(v0 + 1184);
  long long v19 = *(_OWORD *)(v0 + 1136);
  *(_OWORD *)(v2 + 160) = *(_OWORD *)(v0 + 1168);
  *(_OWORD *)(v2 + 176) = v18;
  *(_OWORD *)(v2 + 128) = v19;
  *(_OWORD *)(v2 + 144) = v17;
  long long v20 = *(_OWORD *)(v0 + 1216);
  long long v21 = *(_OWORD *)(v0 + 1232);
  long long v22 = *(_OWORD *)(v0 + 1200);
  *(unsigned char *)(v2 + 240) = *(unsigned char *)(v0 + 1248);
  *(_OWORD *)(v2 + 208) = v20;
  *(_OWORD *)(v2 + 224) = v21;
  *(_OWORD *)(v2 + 192) = v22;
  sub_214C11DD8(v0 + 264, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11E5C);
  long long v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

void *sub_214C11A54(void *a1)
{
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[2];
  uint64_t v3 = a1[24];
  uint64_t v2 = a1[25];
  uint64_t v4 = a1[26];
  swift_bridgeObjectRetain();
  sub_214C11B74(v7, v6);
  sub_214C11C48(v3, v2, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214C11B74(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214C11C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214C11C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_214B99934(a3, a4);
    sub_214B99A08(a25, a26, a27);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214C11DD8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4);
  return a1;
}

uint64_t sub_214C11E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_214C11B74(a3, a4);
    sub_214C11C48(a25, a26, a27);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_214C11FD8()
{
  type metadata accessor for ConfigManager();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_214C167A0((uint64_t)v2);
  sub_214B6AC38((uint64_t)v2, v0 + 112, (uint64_t *)&unk_26ACE3B90);
  *(unsigned char *)(v0 + 353) = 2;
  uint64_t result = sub_214B6AC38((uint64_t)v2, v0 + 360, (uint64_t *)&unk_26ACE3B90);
  qword_26ACE3AE8 = v0;
  return result;
}

uint64_t static ConfigManager.shared.getter()
{
  if (qword_26ACE3C10 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_214C120BC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_26ACE3C08 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_214D19EE8();
  __swift_project_value_buffer(v4, (uint64_t)qword_26ACE3AD0);
  swift_bridgeObjectRetain_n();
  long long v5 = sub_214D19EC8();
  os_log_type_t v6 = sub_214D1A498();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v38[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_214D19FA8();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v37[0] = sub_214C3D88C(v9, v11, v38);
    sub_214D1A5F8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v5, v6, "Config being set by direct call from asd: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v8, -1, -1);
    long long v12 = v7;
    uint64_t v2 = v1;
    MEMORY[0x2166B1540](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_214C10ADC(a1, (uint64_t)v36);
  sub_214B6AC38((uint64_t)v36, (uint64_t)v37, (uint64_t *)&unk_26ACE3B90);
  sub_214B6AC38((uint64_t)v37, (uint64_t)v38, (uint64_t *)&unk_26ACE3B90);
  if (sub_214B6AC9C((uint64_t)v38) == 1)
  {
    long long v13 = sub_214D19EC8();
    os_log_type_t v14 = sub_214D1A4A8();
    if (os_log_type_enabled(v13, v14))
    {
      long long v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v15 = 0;
      _os_log_impl(&dword_214B4E000, v13, v14, "Couldn't set configuration directly passed in. Falling back to default", v15, 2u);
      MEMORY[0x2166B1540](v15, -1, -1);
    }

    strcpy((char *)v32, "daemonVersion");
    HIWORD(v32[0]) = -4864;
    sub_214D1A728();
    if (*(void *)(a1 + 16) && (unint64_t v16 = sub_214B88110((uint64_t)v36), (v17 & 1) != 0))
    {
      sub_214B5EC30(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v34);
    }
    else
    {
      long long v34 = 0u;
      long long v35 = 0u;
    }
    sub_214B6ABE4((uint64_t)v36);
    if (*((void *)&v35 + 1))
    {
      int v19 = swift_dynamicCast();
      if (v19) {
        uint64_t v20 = *(void *)&v32[0];
      }
      else {
        uint64_t v20 = 0;
      }
      if (v19) {
        uint64_t v21 = *((void *)&v32[0] + 1);
      }
      else {
        uint64_t v21 = 0;
      }
    }
    else
    {
      sub_214B5ECF4((uint64_t)&v34);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
    }
    sub_214B6ABBC(&v23);
    *(void *)&long long v24 = v20;
    *((void *)&v24 + 1) = v21;
    sub_214B6AC38((uint64_t)&v23, (uint64_t)v25, &qword_26ACE44B8);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    long long v28 = xmmword_214D1DF30;
    LOBYTE(v29) = 0;
    uint64_t v30 = 0;
    char v31 = 2;
    char v33 = 2;
    v32[8] = v25[7];
    v32[9] = v25[8];
    v32[10] = v25[9];
    v32[11] = v25[10];
    v32[4] = v25[3];
    v32[5] = v25[4];
    v32[6] = v25[5];
    v32[7] = v25[6];
    v32[0] = v24;
    v32[1] = v25[0];
    long long v32[2] = v25[1];
    long long v32[3] = v25[2];
    v32[12] = 0u;
    v32[13] = xmmword_214D1DF30;
    v32[14] = v29;
    nullsub_1(v32);
    sub_214B6AC38(v2 + 112, (uint64_t)v36, (uint64_t *)&unk_26ACE3B90);
    sub_214B6AC38((uint64_t)v32, v2 + 112, (uint64_t *)&unk_26ACE3B90);
    long long v18 = v36;
  }
  else
  {
    sub_214B6AC38(v2 + 112, (uint64_t)v32, (uint64_t *)&unk_26ACE3B90);
    sub_214B6AC38((uint64_t)v37, v2 + 112, (uint64_t *)&unk_26ACE3B90);
    long long v18 = v32;
  }
  uint64_t result = sub_214C11DD8((uint64_t)v18, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  *(unsigned char *)(v2 + 353) = 1;
  return result;
}

uint64_t ConfigManager.deinit()
{
  sub_214B6AC38(v0 + 112, (uint64_t)v2, (uint64_t *)&unk_26ACE3B90);
  sub_214C11DD8((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  sub_214B6AC38(v0 + 360, (uint64_t)v3, (uint64_t *)&unk_26ACE3B90);
  sub_214C11DD8((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ConfigManager.__deallocating_deinit()
{
  sub_214B6AC38(v0 + 112, (uint64_t)v2, (uint64_t *)&unk_26ACE3B90);
  sub_214C11DD8((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  sub_214B6AC38(v0 + 360, (uint64_t)v3, (uint64_t *)&unk_26ACE3B90);
  sub_214C11DD8((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C11C5C);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ConfigManager.unownedExecutor.getter()
{
  return v0;
}

unint64_t sub_214C126CC(char a1)
{
  unint64_t result = 0x42696C6F69766172;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000025;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C12830(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C164F0();
  sub_214D1AD88();
  v9[15] = 0;
  sub_214D1AAA8();
  if (!v1)
  {
    v9[14] = 1;
    sub_214D1AAA8();
    v9[13] = 2;
    sub_214D1AAA8();
    v9[12] = 3;
    sub_214D1AAA8();
    v9[11] = 4;
    sub_214D1AAA8();
    v9[10] = 5;
    sub_214D1AAA8();
    v9[9] = 6;
    sub_214D1AAA8();
    v9[8] = 7;
    sub_214D1AAA8();
    v9[7] = 8;
    sub_214D1AAA8();
    v9[6] = 9;
    sub_214D1AAA8();
    v9[5] = 10;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_214C12AF8()
{
  return sub_214C126CC(*v0);
}

uint64_t sub_214C12B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C15080(a1, a2);
  *a3 = result;
  return result;
}

void sub_214C12B28(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_214C12B34(uint64_t a1)
{
  unint64_t v2 = sub_214C164F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C12B70(uint64_t a1)
{
  unint64_t v2 = sub_214C164F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_214C12BAC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214C154B0(a1, v9);
  if (!v2)
  {
    long long v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v9[10];
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_214C12C10(void *a1)
{
  return sub_214C12830(a1);
}

uint64_t sub_214C12C28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C16544();
  sub_214D1AD88();
  v12[0] = 0;
  sub_214D1AAC8();
  if (!v2)
  {
    sub_214B6AC38(v3 + 16, (uint64_t)v13, &qword_26784DE88);
    sub_214B6AC38((uint64_t)v13, (uint64_t)v12, &qword_26784DE88);
    v11[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4270);
    sub_214C16598(&qword_26784DE90);
    sub_214D1AAE8();
    v12[0] = 2;
    sub_214D1AAD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_214C12E28()
{
  unint64_t v1 = 0xD00000000000001ELL;
  if (*v0 != 1) {
    unint64_t v1 = 0x6B6E756843676F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000018;
  }
}

uint64_t sub_214C12E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C15EE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C12EB8(uint64_t a1)
{
  unint64_t v2 = sub_214C16544();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C12EF4(uint64_t a1)
{
  unint64_t v2 = sub_214C16544();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_214C12F30@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214C16050(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_214C12F78(void *a1)
{
  return sub_214C12C28(a1);
}

unint64_t sub_214C12FB4()
{
  unint64_t result = 0x65566E6F6D656164;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1936487029;
      break;
    case 2:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 3:
      unint64_t result = 0x7365727574616566;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C13068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C162BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C13090(uint64_t a1)
{
  unint64_t v2 = sub_214C13990();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C130CC(uint64_t a1)
{
  unint64_t v2 = sub_214C13990();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreODIConfig.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DE48);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  sub_214B6AC38((uint64_t)(v1 + 2), (uint64_t)v25, &qword_26ACE44B8);
  uint64_t v8 = v1[24];
  uint64_t v19 = v1[25];
  uint64_t v20 = v8;
  uint64_t v9 = v1[26];
  uint64_t v17 = v1[27];
  uint64_t v18 = v9;
  int v26 = *((unsigned __int8 *)v1 + 224);
  uint64_t v16 = v1[29];
  v15[3] = *((unsigned __int8 *)v1 + 240);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C13990();
  sub_214D1AD88();
  LOBYTE(v23[0]) = 0;
  uint64_t v10 = v22;
  sub_214D1AAA8();
  if (!v10)
  {
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    sub_214B6AC38((uint64_t)v25, (uint64_t)v23, &qword_26ACE44B8);
    char v27 = 1;
    sub_214C139E4();
    sub_214D1AAE8();
    v23[0] = v13;
    v23[1] = v12;
    v23[2] = v11;
    _OWORD v23[3] = v17;
    char v24 = v26;
    char v27 = 2;
    sub_214C13A38();
    sub_214D1AAE8();
    v23[0] = v16;
    char v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3950);
    sub_214C13BA0(&qword_26784DE60);
    sub_214D1AAE8();
    LOBYTE(v23[0]) = 4;
    sub_214D1AAB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void *CoreODIConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43E8);
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v5);
  char v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v61 = 0uLL;
  sub_214B6ABBC(v67);
  sub_214B6AC38((uint64_t)v67, (uint64_t)v62, &qword_26ACE44B8);
  long long v63 = 0uLL;
  long long v64 = xmmword_214D1DF30;
  LOBYTE(v65) = 0;
  *((void *)&v65 + 1) = 0;
  char v66 = 2;
  uint64_t v8 = a1[3];
  unint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_214C13990();
  sub_214D1AD78();
  if (!v2)
  {
    uint64_t v9 = v4;
    LOBYTE(v45) = 0;
    uint64_t v10 = sub_214D1A9D8();
    uint64_t v12 = v11;
    *(void *)&long long v61 = v10;
    *((void *)&v61 + 1) = v11;
    char v43 = 1;
    sub_214C13A8C();
    swift_bridgeObjectRetain();
    sub_214D1AA18();
    uint64_t v32 = v12;
    sub_214B6AC38((uint64_t)&v44, (uint64_t)v42, &qword_26ACE44B8);
    sub_214B6AC38((uint64_t)v42, (uint64_t)v62, &qword_26ACE44B8);
    LOBYTE(v35) = 2;
    sub_214C13B34(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214C11B74);
    sub_214C13AE0();
    sub_214D1AA18();
    uint64_t v30 = *((void *)&v45 + 1);
    uint64_t v31 = v45;
    long long v13 = v46;
    LODWORD(v12) = v47;
    long long v63 = v45;
    long long v64 = v46;
    LOBYTE(v65) = v47;
    v27[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3950);
    long long v28 = v13;
    LOBYTE(v35) = 3;
    uint64_t v14 = v34;
    int v29 = v12;
    sub_214C11C48(v31, v30, v13);
    sub_214C13BA0(&qword_26ACE3958);
    sub_214D1AA18();
    uint64_t v15 = v45;
    *((void *)&v65 + 1) = v45;
    char v41 = 4;
    swift_bridgeObjectRetain();
    LOBYTE(v12) = sub_214D1A9E8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v14);
    char v66 = v12;
    *(void *)&long long v35 = v10;
    *((void *)&v35 + 1) = v32;
    sub_214B6AC38((uint64_t)v42, (uint64_t)v36, &qword_26ACE44B8);
    uint64_t v17 = v30;
    *(void *)&long long v37 = v31;
    *((void *)&v37 + 1) = v30;
    uint64_t v18 = v28;
    long long v38 = v28;
    LOBYTE(v39) = v29;
    *((void *)&v39 + 1) = v15;
    char v40 = v12;
    sub_214C11A54(&v35);
    swift_bridgeObjectRelease();
    sub_214B99A08(v31, v17, v18);
    sub_214C13B34(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B99934);
    swift_bridgeObjectRelease();
    long long v19 = v38;
    uint64_t v20 = v33;
    *(_OWORD *)(v33 + 192) = v37;
    *(_OWORD *)(v20 + 208) = v19;
    *(_OWORD *)(v20 + 224) = v39;
    *(unsigned char *)(v20 + 240) = v40;
    long long v21 = v36[8];
    *(_OWORD *)(v20 + 128) = v36[7];
    *(_OWORD *)(v20 + 144) = v21;
    long long v22 = v36[10];
    *(_OWORD *)(v20 + 160) = v36[9];
    *(_OWORD *)(v20 + 176) = v22;
    long long v23 = v36[4];
    *(_OWORD *)(v20 + 64) = v36[3];
    *(_OWORD *)(v20 + 80) = v23;
    long long v24 = v36[6];
    *(_OWORD *)(v20 + 96) = v36[5];
    *(_OWORD *)(v20 + 112) = v24;
    long long v25 = v36[0];
    *(_OWORD *)uint64_t v20 = v35;
    *(_OWORD *)(v20 + 16) = v25;
    long long v26 = v36[2];
    *(_OWORD *)(v20 + 32) = v36[1];
    *(_OWORD *)(v20 + 48) = v26;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  long long v57 = v63;
  long long v58 = v64;
  long long v59 = v65;
  char v60 = v66;
  long long v53 = v62[7];
  long long v54 = v62[8];
  long long v55 = v62[9];
  long long v56 = v62[10];
  long long v49 = v62[3];
  long long v50 = v62[4];
  long long v51 = v62[5];
  long long v52 = v62[6];
  long long v45 = v61;
  long long v46 = v62[0];
  long long v47 = v62[1];
  long long v48 = v62[2];
  return sub_214B99814(&v45);
}

void *sub_214C13960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreODIConfig.init(from:)(a1, a2);
}

uint64_t sub_214C13978(void *a1)
{
  return CoreODIConfig.encode(to:)(a1);
}

unint64_t sub_214C13990()
{
  unint64_t result = qword_26ACE3B30;
  if (!qword_26ACE3B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B30);
  }
  return result;
}

unint64_t sub_214C139E4()
{
  unint64_t result = qword_26784DE50;
  if (!qword_26784DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE50);
  }
  return result;
}

unint64_t sub_214C13A38()
{
  unint64_t result = qword_26784DE58;
  if (!qword_26784DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE58);
  }
  return result;
}

unint64_t sub_214C13A8C()
{
  unint64_t result = qword_26ACE3B80;
  if (!qword_26ACE3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B80);
  }
  return result;
}

unint64_t sub_214C13AE0()
{
  unint64_t result = qword_26ACE3B60;
  if (!qword_26ACE3B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B60);
  }
  return result;
}

void *sub_214C13B34(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_214C13BA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE3950);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ConfigManager()
{
  return self;
}

uint64_t method lookup function for ConfigManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ConfigManager);
}

uint64_t dispatch thunk of ConfigManager.config.getter(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 112) + **(int **)(*(void *)v1 + 112));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_214B6A55C;
  return v6(a1);
}

uint64_t dispatch thunk of ConfigManager.setConfiguration(configDict:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t destroy for CoreODIConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 208) != 1) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    long long v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    long long v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    long long v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v11;
    uint64_t v12 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v12;
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v13;
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v14;
    uint64_t v15 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v15;
    uint64_t v16 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v16;
    uint64_t v17 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v17;
    uint64_t v18 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v18;
    uint64_t v19 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v19;
    uint64_t v20 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  long long v21 = (_OWORD *)(a1 + 192);
  long long v22 = (_OWORD *)(a2 + 192);
  uint64_t v23 = *(void *)(a2 + 208);
  if (v23 == 1)
  {
    long long v24 = *(_OWORD *)(a2 + 208);
    _OWORD *v21 = *v22;
    *(_OWORD *)(a1 + 208) = v24;
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  }
  else
  {
    *(void *)long long v21 = *(void *)v22;
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    uint64_t v25 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = v23;
    *(void *)(a1 + 216) = v25;
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  uint64_t v5 = (long long *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *uint64_t v4 = v7;
      long long v9 = *(_OWORD *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 80);
      long long v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      long long v12 = *(_OWORD *)(a2 + 128);
      long long v13 = *(_OWORD *)(a2 + 144);
      long long v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 144) = v13;
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_214C1442C(a1 + 16);
    long long v16 = *(_OWORD *)(a2 + 32);
    long long v15 = *(_OWORD *)(a2 + 48);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)(a1 + 48) = v15;
    long long v17 = *(_OWORD *)(a2 + 112);
    long long v19 = *(_OWORD *)(a2 + 64);
    long long v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 64) = v19;
    *(_OWORD *)(a1 + 80) = v18;
    long long v20 = *(_OWORD *)(a2 + 176);
    long long v22 = *(_OWORD *)(a2 + 128);
    long long v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 144) = v21;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (long long *)(a1 + 192);
  long long v24 = (long long *)(a2 + 192);
  uint64_t v25 = *(void *)(a2 + 208);
  if (*(void *)(a1 + 208) == 1)
  {
    if (v25 == 1)
    {
      long long v26 = *v24;
      long long v27 = *(_OWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      *uint64_t v23 = v26;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      uint64_t v30 = *(void *)v24;
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)uint64_t v23 = v30;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      uint64_t v31 = *(void *)(a2 + 216);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      *(void *)(a1 + 216) = v31;
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 1)
  {
    sub_214C1445C(a1 + 192);
    char v28 = *(unsigned char *)(a2 + 224);
    long long v29 = *(_OWORD *)(a2 + 208);
    *uint64_t v23 = *v24;
    *(_OWORD *)(a1 + 208) = v29;
    *(unsigned char *)(a1 + 224) = v28;
  }
  else
  {
    uint64_t v32 = *(void *)v24;
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)uint64_t v23 = v32;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(a2 + 216);
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    *(void *)(a1 + 216) = v33;
  }
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  return a1;
}

uint64_t sub_214C1442C(uint64_t a1)
{
  return a1;
}

uint64_t sub_214C1445C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy241_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (v5 == 1)
  {
    sub_214C1442C(a1 + 16);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    long long v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    long long v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    long long v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  long long v21 = (void *)(a1 + 192);
  long long v22 = (void *)(a2 + 192);
  if (*(void *)(a1 + 208) != 1)
  {
    uint64_t v23 = *(void *)(a2 + 208);
    if (v23 != 1)
    {
      void *v21 = *v22;
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = v23;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      goto LABEL_11;
    }
    sub_214C1445C(a1 + 192);
  }
  long long v24 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *(_OWORD *)(a1 + 208) = v24;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
LABEL_11:
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 241)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 240) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 241) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 241) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig()
{
  return &type metadata for CoreODIConfig;
}

uint64_t destroy for CoreODIConfig.Configuration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreODIConfig.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreODIConfig.Configuration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithTake for CoreODIConfig.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.Configuration()
{
  return &type metadata for CoreODIConfig.Configuration;
}

unsigned char *storeEnumTagSinglePayload for CoreODIConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C14A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.CodingKeys()
{
  return &type metadata for CoreODIConfig.CodingKeys;
}

uint64_t destroy for CoreODIConfig.URLs()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CoreODIConfig.URLs(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CoreODIConfig.URLs(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

void *assignWithTake for CoreODIConfig.URLs(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig.URLs(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.URLs(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.URLs()
{
  return &type metadata for CoreODIConfig.URLs;
}

unint64_t sub_214C14F7C()
{
  unint64_t result = qword_26784DE70;
  if (!qword_26784DE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE70);
  }
  return result;
}

unint64_t sub_214C14FD4()
{
  unint64_t result = qword_26ACE3B40;
  if (!qword_26ACE3B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B40);
  }
  return result;
}

unint64_t sub_214C1502C()
{
  unint64_t result = qword_26ACE3B38;
  if (!qword_26ACE3B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B38);
  }
  return result;
}

uint64_t sub_214C15080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x42696C6F69766172 && a2 == 0xEE006C7255657361;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000214D35280 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D352B0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000214D352D0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000214D352F0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D35310 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000214D35330 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D35350 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000214D35370 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000214D35390 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000214D353B0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_214C154B0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43F8);
  uint64_t v5 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76, v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C164F0();
  sub_214D1AD78();
  uint64_t v81 = a1;
  if (v2)
  {
    uint64_t v85 = v2;
    long long v82 = 0uLL;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v79 = 0;
    uint64_t v80 = 0;
    uint64_t v13 = 0;
    uint64_t v86 = 0;
    uint64_t v87 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v88 = 0;
    uint64_t v89 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    uint64_t v101 = v18;
    uint64_t v102 = v80;
    uint64_t v103 = v17;
    uint64_t v104 = v89;
    uint64_t v105 = v16;
    uint64_t v106 = v88;
    uint64_t v107 = v15;
    uint64_t v108 = v87;
    uint64_t v109 = v14;
    uint64_t v110 = v86;
    uint64_t v111 = v13;
    uint64_t v112 = v79;
    uint64_t v113 = v12;
    uint64_t v114 = v84;
    uint64_t v115 = v11;
    uint64_t v116 = v78;
    uint64_t v117 = v83;
    uint64_t v118 = v77;
    long long v119 = v82;
    uint64_t v121 = 0;
    uint64_t v120 = 0;
    return sub_214C16600((uint64_t)&v101);
  }
  uint64_t v9 = v5;
  LOBYTE(v101) = 0;
  uint64_t v10 = sub_214D1A9D8();
  uint64_t v21 = v20;
  uint64_t v75 = v10;
  LOBYTE(v101) = 1;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_214D1A9D8();
  uint64_t v80 = v21;
  uint64_t v24 = v23;
  uint64_t v74 = v22;
  LOBYTE(v101) = 2;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_214D1A9D8();
  uint64_t v89 = v24;
  uint64_t v73 = v25;
  LOBYTE(v101) = 3;
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_214D1A9D8();
  uint64_t v88 = v27;
  uint64_t v72 = v28;
  LOBYTE(v101) = 4;
  uint64_t v30 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_214D1A9D8();
  uint64_t v87 = v30;
  uint64_t v71 = v31;
  LOBYTE(v101) = 5;
  uint64_t v33 = v32;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_214D1A9D8();
  uint64_t v86 = v33;
  uint64_t v35 = v34;
  LOBYTE(v101) = 6;
  uint64_t v37 = v36;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_214D1A9D8();
  uint64_t v79 = v37;
  uint64_t v40 = v39;
  uint64_t v69 = a2;
  uint64_t v70 = v38;
  LOBYTE(v101) = 7;
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_214D1A9D8();
  uint64_t v84 = v40;
  uint64_t v67 = v41;
  uint64_t v68 = v35;
  LOBYTE(v101) = 8;
  uint64_t v43 = v42;
  swift_bridgeObjectRetain();
  uint64_t v83 = sub_214D1A9D8();
  uint64_t v85 = 0;
  uint64_t v78 = v43;
  LOBYTE(v101) = 9;
  uint64_t v45 = v44;
  swift_bridgeObjectRetain();
  uint64_t v46 = v85;
  *(void *)&long long v82 = sub_214D1A9D8();
  *((void *)&v82 + 1) = v47;
  uint64_t v85 = v46;
  uint64_t v77 = v45;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v82 = 0uLL;
LABEL_9:
    uint64_t v17 = v74;
    uint64_t v18 = v75;
    uint64_t v15 = v72;
    uint64_t v16 = v73;
    uint64_t v12 = v70;
    uint64_t v14 = v71;
    uint64_t v11 = v67;
    uint64_t v13 = v68;
    goto LABEL_4;
  }
  char v122 = 10;
  swift_bridgeObjectRetain();
  uint64_t v48 = v85;
  uint64_t v49 = sub_214D1A9D8();
  uint64_t v85 = v48;
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v51 = v49;
  uint64_t v52 = v50;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v76);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v90 = v75;
  *((void *)&v90 + 1) = v21;
  *(void *)&long long v91 = v74;
  *((void *)&v91 + 1) = v89;
  *(void *)&long long v92 = v73;
  *((void *)&v92 + 1) = v88;
  *(void *)&long long v93 = v72;
  *((void *)&v93 + 1) = v87;
  *(void *)&long long v94 = v71;
  *((void *)&v94 + 1) = v86;
  *(void *)&long long v95 = v68;
  *((void *)&v95 + 1) = v37;
  *(void *)&long long v96 = v70;
  *((void *)&v96 + 1) = v84;
  *(void *)&long long v97 = v67;
  *((void *)&v97 + 1) = v43;
  *(void *)&long long v98 = v83;
  *((void *)&v98 + 1) = v45;
  long long v99 = v82;
  uint64_t v66 = v51;
  *(void *)&long long v100 = v51;
  *((void *)&v100 + 1) = v52;
  sub_214C166D0((uint64_t)&v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = v88;
  swift_bridgeObjectRelease();
  uint64_t v54 = v87;
  swift_bridgeObjectRelease();
  uint64_t v55 = v86;
  swift_bridgeObjectRelease();
  uint64_t v56 = v79;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v78;
  swift_bridgeObjectRelease();
  uint64_t v58 = v77;
  swift_bridgeObjectRelease();
  uint64_t v59 = *((void *)&v82 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  uint64_t v101 = v75;
  uint64_t v102 = v80;
  uint64_t v103 = v74;
  uint64_t v104 = v89;
  uint64_t v105 = v73;
  uint64_t v106 = v53;
  uint64_t v107 = v72;
  uint64_t v108 = v54;
  uint64_t v109 = v71;
  uint64_t v110 = v55;
  uint64_t v111 = v68;
  uint64_t v112 = v56;
  uint64_t v113 = v70;
  uint64_t v114 = v84;
  uint64_t v115 = v67;
  uint64_t v116 = v57;
  uint64_t v117 = v83;
  uint64_t v118 = v58;
  *(void *)&long long v119 = v82;
  *((void *)&v119 + 1) = v59;
  uint64_t v120 = v66;
  uint64_t v121 = v52;
  uint64_t result = sub_214C16600((uint64_t)&v101);
  long long v60 = v99;
  long long v61 = v69;
  v69[8] = v98;
  v61[9] = v60;
  v61[10] = v100;
  long long v62 = v95;
  void v61[4] = v94;
  v61[5] = v62;
  long long v63 = v97;
  v61[6] = v96;
  v61[7] = v63;
  long long v64 = v91;
  _OWORD *v61 = v90;
  v61[1] = v64;
  long long v65 = v93;
  v61[2] = v92;
  v61[3] = v65;
  return result;
}

uint64_t sub_214C15EE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000214D353D0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000214D353F0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B6E756843676F6CLL && a2 == 0xEC000000657A6953)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214C16050@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C16544();
  sub_214D1AD78();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = 0;
    uint64_t v10 = sub_214D1A9F8();
    char v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4270);
    char v22 = 1;
    sub_214C16598(&qword_26ACE4278);
    sub_214D1AA18();
    v20[0] = a2;
    uint64_t v13 = v20[1];
    char v21 = 2;
    uint64_t v14 = sub_214D1AA08();
    uint64_t v15 = v9;
    char v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v19 = v20[0];
    *(void *)v20[0] = v10;
    *(unsigned char *)(v19 + 8) = v12 & 1;
    *(void *)(v19 + 16) = v13;
    *(void *)(v19 + 24) = v14;
    *(unsigned char *)(v19 + 32) = v17 & 1;
  }
  return result;
}

uint64_t sub_214C162BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65566E6F6D656164 && a2 == 0xED00006E6F697372;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1936487029 && a2 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D35260)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_214C164F0()
{
  unint64_t result = qword_26ACE3B68;
  if (!qword_26ACE3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B68);
  }
  return result;
}

unint64_t sub_214C16544()
{
  unint64_t result = qword_26ACE3B48;
  if (!qword_26ACE3B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B48);
  }
  return result;
}

uint64_t sub_214C16598(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4270);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214C16600(uint64_t a1)
{
  return a1;
}

uint64_t sub_214C166D0(uint64_t a1)
{
  return a1;
}

double sub_214C167A0(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_214D1DF40;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(unsigned char *)(a1 + 240) = 0;
  return result;
}

unint64_t sub_214C167D4()
{
  unint64_t result = qword_26ACE3B88;
  if (!qword_26ACE3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B88);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreODIConfig.Configuration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C168F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.Configuration.CodingKeys()
{
  return &type metadata for CoreODIConfig.Configuration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODIServerRepo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CoreODIConfig.URLs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C16A88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.URLs.CodingKeys()
{
  return &type metadata for CoreODIConfig.URLs.CodingKeys;
}

unint64_t sub_214C16AC4()
{
  unint64_t result = qword_26784DE98;
  if (!qword_26784DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DE98);
  }
  return result;
}

unint64_t sub_214C16B1C()
{
  unint64_t result = qword_26784DEA0;
  if (!qword_26784DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784DEA0);
  }
  return result;
}

unint64_t sub_214C16B74()
{
  unint64_t result = qword_26ACE3B58;
  if (!qword_26ACE3B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B58);
  }
  return result;
}

unint64_t sub_214C16BCC()
{
  unint64_t result = qword_26ACE3B50;
  if (!qword_26ACE3B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B50);
  }
  return result;
}

unint64_t sub_214C16C24()
{
  unint64_t result = qword_26ACE3B78;
  if (!qword_26ACE3B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B78);
  }
  return result;
}

unint64_t sub_214C16C7C()
{
  unint64_t result = qword_26ACE3B70;
  if (!qword_26ACE3B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3B70);
  }
  return result;
}

uint64_t sub_214C16CD0(uint64_t a1)
{
  MEMORY[0x270FA5388](a1, a1);
  int v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_214C16E34((uint64_t)v2);
}

uint64_t sub_214C16D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_214C16E34(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_214C16EE0()
{
  uint64_t v2 = *(void *)(v0 + *(void *)(*(void *)v0 + 136));
  swift_bridgeObjectRetain();
  sub_214D1A108();
  return v2;
}

uint64_t sub_214C16F4C()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 152));
}

uint64_t sub_214C16F68(uint64_t result)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 152)) = result;
  return result;
}

uint64_t ODIConfigurationManager.__allocating_init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v16 = swift_allocObject();
  ODIConfigurationManager.init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t ODIConfigurationManager.init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v9 = v8;
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v48 = a4;
  uint64_t v15 = *(void *)(*(void *)v9 + 80);
  uint64_t v16 = sub_214D1A5D8();
  uint64_t v42 = *(void *)(v16 - 8);
  uint64_t v43 = v16;
  uint64_t v18 = MEMORY[0x270FA5388](v16, v17);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v18, v22);
  uint64_t v24 = (char *)&v40 - v23;
  swift_defaultActor_initialize();
  *(unsigned char *)(v9 + *(void *)(*(void *)v9 + 152)) = 0;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, a1, v15);
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v25 = (void *)sub_214D1A028();
  id v26 = objc_msgSend(a5, sel_dataForKey_, v25);

  if (v26)
  {
    uint64_t v41 = a5;
    uint64_t v27 = sub_214D19B68();
    unint64_t v29 = v28;

    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214D19748();
    uint64_t v30 = a1;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v21 + 8);
    v31(v30, v15);
    swift_release();
    sub_214B58A4C(v27, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v15);
    v31(v24, v15);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v20, v15);
    a5 = v41;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(a1, v15);
  }
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  uint64_t v35 = v45;
  uint64_t v34 = v46;
  uint64_t v36 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v9 + *(void *)(*(void *)v9 + 112), v24, v15);
  uint64_t v37 = (void *)(v9 + *(void *)(*(void *)v9 + 128));
  *uint64_t v37 = v36;
  v37[1] = v35;
  *(double *)(v9 + *(void *)(*(void *)v9 + 120)) = a8;
  uint64_t v38 = (void *)(v9 + *(void *)(*(void *)v9 + 136));
  *uint64_t v38 = v34;
  v38[1] = v33;
  *(void *)(v9 + *(void *)(*(void *)v9 + 144)) = v32;
  *(void *)(v9 + *(void *)(*(void *)v9 + 160)) = a5;
  return v9;
}

uint64_t sub_214C17460()
{
  v1[2] = v0;
  uint64_t v2 = sub_214D19C78();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C17520, v0, 0);
}

uint64_t sub_214C17520()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = *(void **)(v3 + *(void *)(*(void *)v3 + 160));
  sub_214C16EE0();
  unsigned int v6 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_doubleForKey_, v6);
  double v8 = v7;

  double v9 = v8 + *(double *)(v3 + *(void *)(*(void *)v3 + 120));
  sub_214D19C68();
  sub_214D19BA8();
  double v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  if (v9 >= v11)
  {
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    char v12 = (void *)swift_task_alloc();
    v0[6] = v12;
    *char v12 = v0;
    v12[1] = sub_214C176C0;
    return sub_214C177D8();
  }
}

uint64_t sub_214C176C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C177D8()
{
  v1[13] = v0;
  uint64_t v2 = *v0;
  v1[14] = *v0;
  uint64_t v3 = sub_214D19C78();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v4 = *(void *)(v2 + 80);
  v1[18] = v4;
  v1[19] = *(void *)(v4 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  uint64_t v5 = sub_214D19738();
  v1[22] = v5;
  v1[23] = *(void *)(v5 - 8);
  v1[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C17998, v0, 0);
}

uint64_t sub_214C17998()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  if (*(unsigned char *)(v1 + v2))
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_214D19EE8();
    __swift_project_value_buffer(v3, (uint64_t)qword_26ACEBA58);
    uint64_t v4 = sub_214D19EC8();
    os_log_type_t v5 = sub_214D1A498();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v6 = 0;
      _os_log_impl(&dword_214B4E000, v4, v5, "Config update already in progress - skipping requested update", v6, 2u);
      MEMORY[0x2166B1540](v6, -1, -1);
    }

    type metadata accessor for ODIConfigurationManager.ConfigManagerError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(_WORD *)(v7 + 8) = -16384;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    *(unsigned char *)(v1 + v2) = 1;
    (*(void (**)(void))(v1 + *(void *)(*(void *)v1 + 128)))();
    double v10 = (void *)swift_task_alloc();
    v0[25] = v10;
    *double v10 = v0;
    v10[1] = sub_214C17C24;
    uint64_t v11 = v0[24];
    return MEMORY[0x270EF1EB0](v11, 0);
  }
}

uint64_t sub_214C17C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = (void *)*v4;
  unsigned int v6 = (void *)*v4;
  v6[26] = a1;
  v6[27] = a2;
  v6[28] = a3;
  v6[29] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[13];
  if (v3) {
    double v8 = sub_214C18570;
  }
  else {
    double v8 = sub_214C17D5C;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_214C17D5C()
{
  uint64_t v69 = v0;
  self;
  if (swift_dynamicCastObjCClass())
  {
    self;
    uint64_t v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      uint64_t v2 = (void *)v1;
      uint64_t v3 = (void *)v0[28];
      sub_214B6A3A0(v0[26], v0[27]);
      id v4 = v3;
      sub_214BA6D38((uint64_t)objc_msgSend(v2, sel_statusCode), (uint64_t)&v62);

      uint64_t v5 = v62;
      int v6 = v63;
    }
    else
    {
      sub_214B6A3A0(v0[26], v0[27]);
      uint64_t v5 = 1;
      int v6 = 1;
    }
    uint64_t v64 = 0;
    __int16 v65 = 1;
    uint64_t v66 = v5;
    char v67 = v6;
    char v68 = 0;
    if (!_s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(&v66, (uint64_t)&v64))
    {
      sub_214B58A4C(v0[26], v0[27]);
      if (qword_26ACE41E0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_214D19EE8();
      __swift_project_value_buffer(v17, (uint64_t)qword_26ACEBA58);
      uint64_t v18 = sub_214D19EC8();
      os_log_type_t v19 = sub_214D1A4A8();
      uint64_t v58 = v5;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 136315138;
        uint64_t v66 = v21;
        uint64_t v62 = v5;
        BOOL v63 = v6 != 0;
        uint64_t v22 = HTTPStatusCode.description.getter();
        v0[12] = sub_214C3D88C(v22, v23, &v66);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_214B4E000, v18, v19, "Config update response not success: %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v21, -1, -1);
        MEMORY[0x2166B1540](v20, -1, -1);
      }

      unint64_t v24 = v0[27];
      uint64_t v25 = (void *)v0[28];
      uint64_t v26 = v0[26];
      uint64_t v27 = v0[23];
      uint64_t v60 = v0[24];
      uint64_t v28 = v0[22];
      uint64_t v29 = v0[13];
      type metadata accessor for ODIConfigurationManager.ConfigManagerError();
      swift_getWitnessTable();
      swift_allocError();
      *(void *)uint64_t v30 = v58;
      *(_WORD *)(v30 + 8) = v6 | 0x4000;
      swift_willThrow();

      sub_214B58A4C(v26, v24);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v60, v28);
      goto LABEL_20;
    }
  }
  else
  {
    sub_214B6A3A0(v0[26], v0[27]);
  }
  uint64_t v7 = (void *)v0[29];
  sub_214D19768();
  swift_allocObject();
  sub_214D19758();
  sub_214D19748();
  if (!v7)
  {
    unint64_t v31 = v0[27];
    uint64_t v32 = v0[26];
    uint64_t v57 = v0[23];
    uint64_t v33 = v0[21];
    uint64_t v59 = v0[22];
    uint64_t v61 = v0[24];
    uint64_t v34 = v0[19];
    uint64_t v35 = v0[20];
    uint64_t v36 = v0[18];
    uint64_t v56 = (void *)v0[28];
    uint64_t v53 = v0[17];
    uint64_t v37 = v0[16];
    uint64_t v54 = v0[15];
    uint64_t v55 = v33;
    uint64_t v38 = v0[13];
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v33, v36);
    sub_214C16E34(v35);
    uint64_t v39 = *(void **)(v38 + *(void *)(*(void *)v38 + 160));
    uint64_t v40 = (void *)sub_214D19B38();
    sub_214B58A4C(v32, v31);
    uint64_t v41 = (void *)sub_214D1A028();
    objc_msgSend(v39, sel_setObject_forKey_, v40, v41);

    sub_214D19C68();
    sub_214D19BA8();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53, v54);
    uint64_t v42 = (void *)sub_214D1A3F8();
    sub_214C16EE0();
    uint64_t v43 = (void *)sub_214D1A028();
    swift_bridgeObjectRelease();
    objc_msgSend(v39, sel_setObject_forKey_, v42, v43);

    sub_214B58A4C(v32, v31);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v55, v36);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v61, v59);
    *(unsigned char *)(v38 + *(void *)(*(void *)v38 + 152)) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = (uint64_t (*)(void))v0[1];
    goto LABEL_21;
  }
  sub_214B58A4C(v0[26], v0[27]);
  swift_release();
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_214D19EE8();
  __swift_project_value_buffer(v8, (uint64_t)qword_26ACEBA58);
  id v9 = v7;
  id v10 = v7;
  uint64_t v11 = sub_214D19EC8();
  os_log_type_t v12 = sub_214D1A4A8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v62 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_getErrorValue();
    uint64_t v15 = sub_214D1AC88();
    v0[11] = sub_214C3D88C(v15, v16, &v62);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v11, v12, "Config decode error: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v14, -1, -1);
    MEMORY[0x2166B1540](v13, -1, -1);
  }
  else
  {
  }
  unint64_t v45 = v0[27];
  uint64_t v46 = (void *)v0[28];
  uint64_t v47 = v0[26];
  uint64_t v49 = v0[23];
  uint64_t v48 = v0[24];
  uint64_t v50 = v0[22];
  uint64_t v29 = v0[13];
  type metadata accessor for ODIConfigurationManager.ConfigManagerError();
  swift_getWitnessTable();
  swift_allocError();
  *(void *)uint64_t v51 = v7;
  *(_WORD *)(v51 + 8) = 0x8000;
  swift_willThrow();

  sub_214B58A4C(v47, v45);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
LABEL_20:
  *(unsigned char *)(v29 + *(void *)(*(void *)v29 + 152)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(void))v0[1];
LABEL_21:
  return v44();
}

uint64_t sub_214C18570()
{
  uint64_t v22 = v0;
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = sub_214D19EE8();
  __swift_project_value_buffer(v2, (uint64_t)qword_26ACEBA58);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_214D19EC8();
  os_log_type_t v6 = sub_214D1A4A8();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[29];
  if (v7)
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v21 = v10;
    *(_DWORD *)id v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_214D1AC88();
    v0[8] = sub_214C3D88C(v11, v12, &v21);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v5, v6, "Config update request failed: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v10, -1, -1);
    MEMORY[0x2166B1540](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[29];
  uint64_t v15 = v0[23];
  uint64_t v14 = v0[24];
  uint64_t v16 = v0[22];
  uint64_t v17 = v0[13];
  type metadata accessor for ODIConfigurationManager.ConfigManagerError();
  swift_getWitnessTable();
  swift_allocError();
  *(void *)uint64_t v18 = v13;
  *(_WORD *)(v18 + 8) = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  *(unsigned char *)(v17 + *(void *)(*(void *)v17 + 152)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_214C18848()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_214C18868, v0, 0);
}

uint64_t sub_214C18868()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 160));
  uint64_t v2 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

  sub_214C16EE0();
  id v3 = (void *)sub_214D1A028();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeObjectForKey_, v3);

  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t ODIConfigurationManager.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIConfigurationManager.__deallocating_deinit()
{
  ODIConfigurationManager.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ODIConfigurationManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214C18A78()
{
  return ODIConfigurationManager.unownedExecutor.getter();
}

uint64_t sub_214C18A94@<X0>(uint64_t a1@<X8>)
{
  return sub_214C16D90(a1);
}

uint64_t sub_214C18ABC()
{
  return 24;
}

__n128 sub_214C18AC8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_214C18ADC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ODIConfigurationManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ODIConfigurationManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODIConfigurationManager);
}

uint64_t dispatch thunk of ODIConfigurationManager.config.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ODIConfigurationManager.__allocating_init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of ODIConfigurationManager.updateIfNeeded()()
{
  id v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 232) + **(int **)(*(void *)v0 + 232));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B6A55C;
  return v4();
}

uint64_t dispatch thunk of ODIConfigurationManager.clearStoredData()()
{
  id v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 248) + **(int **)(*(void *)v0 + 248));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B6A55C;
  return v4();
}

uint64_t sub_214C18E0C(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int16 v4 = *(_WORD *)(a2 + 8);
  sub_214C18E54(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  return a1;
}

id sub_214C18E54(id result, unsigned int a2)
{
  if (((a2 >> 14) & 1 | 2) == 2) {
    return result;
  }
  return result;
}

void sub_214C18E6C(uint64_t a1)
{
}

void sub_214C18E7C(id a1, unsigned int a2)
{
  if (((a2 >> 14) & 1 | 2) == 2) {
}
  }

uint64_t sub_214C18E94(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int16 v4 = *(_WORD *)(a2 + 8);
  sub_214C18E54(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned int v6 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v4;
  sub_214C18E7C(v5, v6);
  return a1;
}

uint64_t sub_214C18EE8(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 8);
  unsigned __int16 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned int v5 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  sub_214C18E7C(v4, v5);
  return a1;
}

uint64_t sub_214C18F28(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int16 *)(a1 + 8) >> 7) & 0x7C | (*(unsigned __int16 *)(a1 + 8) >> 14)) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_214C18F7C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(_WORD *)(result + 8) = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_214C18FD0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 8) >> 14;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_214C18FEC(uint64_t result)
{
  *(_WORD *)(result + 8) &= 0x3FFFu;
  return result;
}

uint64_t sub_214C18FFC(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_WORD *)(result + 8) = *(_WORD *)(result + 8) & 0x1FF | ((_WORD)a2 << 14);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(_WORD *)(result + 8) = -16384;
  }
  return result;
}

uint64_t type metadata accessor for ODIConfigurationManager.ConfigManagerError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_214C19044(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v2 - 8, v3);
  unsigned int v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_214D1A368();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_214B59CE0((uint64_t)v5, (uint64_t *)&unk_26ACE4338);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_214D1A358();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_214D1A2D8();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_26784DFE0;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    uint64_t v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_214C19288(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    *(unsigned char *)(v1 + 112) = 0;
    return sub_214D1A2F8();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    int v9 = (unint64_t *)(v1 + 120);
    swift_beginAccess();
    unint64_t v10 = *(void *)(v1 + 120);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 120) = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v10 = sub_214B877EC(0, *(void *)(v10 + 16) + 1, 1, v10);
      *int v9 = v10;
    }
    unint64_t v13 = *(void *)(v10 + 16);
    unint64_t v12 = *(void *)(v10 + 24);
    if (v13 >= v12 >> 1)
    {
      unint64_t v10 = sub_214B877EC(v12 > 1, v13 + 1, 1, v10);
      *int v9 = v10;
    }
    *(void *)(v10 + 16) = v13 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v7, v3);
    return swift_endAccess();
  }
}

uint64_t sub_214C19444()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DFD0);
  MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  int v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = v0 + 120;
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(v0 + 120);
  if (*(void *)(v12 + 16))
  {
    unint64_t v13 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v6 + 16);
    unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v13(v9, v12 + v14, v5);
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)v10 + 16))
    {
      v13(v4, *(void *)v10 + v14, v5);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      uint64_t result = sub_214B59CE0((uint64_t)v4, &qword_26784DFD0);
      if (*(void *)(*(void *)v10 + 16))
      {
        sub_214C5191C(0, 1);
        swift_endAccess();
        sub_214D1A2F8();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    *(unsigned char *)(v0 + 112) = 1;
  }
  return result;
}

uint64_t sub_214C1965C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4, v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_214D1A368();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784DFF0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_214C19834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_214C19854, a4, 0);
}

uint64_t sub_214C19854()
{
  sub_214C19288(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for AsyncWorkQueue()
{
  return self;
}

uint64_t sub_214C198D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_214C198F8, a4, 0);
}

uint64_t sub_214C198F8()
{
  sub_214C19444();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C19958()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_214C19998()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_214B6B4A4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_214C198F8, v2, 0);
}

uint64_t sub_214C19A40()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214C19A78(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B6A55C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26784DB48 + dword_26784DB48);
  return v6(a1, v4);
}

uint64_t sub_214C19B30()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_214C19C08()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330) - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_214B6A55C;
  return MEMORY[0x270FA2498](sub_214C19854, v3, 0);
}

uint64_t sub_214C19CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *unint64_t v13 = v6;
  v13[1] = sub_214B6A55C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_214C19E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a3;
  v4[20] = a4;
  v4[17] = a1;
  v4[18] = a2;
  return MEMORY[0x270FA2498](sub_214C19E40, 0, 0);
}

uint64_t sub_214C19E40()
{
  uint64_t v1 = v0[18];
  id v2 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v0[21] = v2;
  uint64_t v3 = sub_214D1A028();
  v0[22] = v3;
  sub_214C03AA8(v1);
  uint64_t v4 = sub_214D19F88();
  v0[23] = v4;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_214C19FCC;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_214C1A30C;
  v0[13] = &block_descriptor_2;
  v0[14] = v5;
  objc_msgSend(v2, sel_ofLBc0SV56ddaijH_i7D0Lridvo8oYoNd_completion_, v3, v4, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214C19FCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    id v2 = sub_214C1A1FC;
  }
  else {
    id v2 = sub_214C1A0DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214C1A0DC()
{
  uint64_t v1 = *(void **)(v0 + 176);
  unint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 120);

  sub_214D19768();
  swift_allocObject();
  sub_214D19758();
  type metadata accessor for PregeneratedAssessment();
  sub_214C1A3E0();
  sub_214D19748();
  uint64_t v4 = *(void **)(v0 + 168);
  swift_release();
  sub_214B58A4C(v3, v2);

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214C1A1FC()
{
  uint64_t v7 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  unint64_t v2 = *(void **)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  swift_willThrow();

  v6[0] = -100;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x8000000214D354D0, 0, v6, 0, 0, 0xD000000000000072, 0x8000000214D35500, 0xD000000000000036, 0x8000000214D35580, 22);
  swift_willThrow();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214C1A30C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = sub_214D19B68();
    uint64_t v11 = v10;

    uint64_t v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_214C1A3E0()
{
  unint64_t result = qword_26784E008;
  if (!qword_26784E008)
  {
    type metadata accessor for PregeneratedAssessment();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E008);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentPregenerator()
{
  return &type metadata for AssessmentPregenerator;
}

_OWORD *sub_214C1A448@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v17 = sub_214D1A0A8();
  unint64_t result = (_OWORD *)MEMORY[0x270FA5388](v17 - 8, v18);
  v76[0] = a4;
  v76[1] = a5;
  uint64_t v77 = a6;
  unint64_t v78 = a7;
  switch(a8 >> 60)
  {
    case 1uLL:
    case 2uLL:
      if (a1 != 16) {
        goto LABEL_47;
      }
      goto LABEL_12;
    case 3uLL:
    case 4uLL:
      if (a1 != 17) {
        goto LABEL_47;
      }
      goto LABEL_12;
    case 5uLL:
    case 6uLL:
    case 7uLL:
      if (*(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != a1) {
        goto LABEL_47;
      }
      goto LABEL_12;
    case 8uLL:
      switch(__ROR8__(a8, 3) ^ 0x1000000000000000)
      {
        case 1:
          goto LABEL_11;
        case 2:
          if (a1 != 5) {
            goto LABEL_47;
          }
LABEL_43:
          unint64_t result = (_OWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_26784DBC8);
          a9[3] = (uint64_t)result;
          *(unsigned char *)a9 = 1;
          return result;
        case 3:
          if (a1 != 18) {
            goto LABEL_47;
          }
LABEL_45:
          *(void *)&long long v73 = a4;
          *((void *)&v73 + 1) = a5;
          uint64_t v74 = a6;
          unint64_t v75 = a7;
          swift_unknownObjectRetain();
          sub_214D1A088();
          goto LABEL_53;
        case 4:
          if (a1 != 19) {
            goto LABEL_47;
          }
          goto LABEL_52;
        case 5:
          if (a1 != 22) {
            goto LABEL_47;
          }
LABEL_52:
          *(void *)&long long v73 = a4;
          *((void *)&v73 + 1) = a5;
          uint64_t v74 = a6;
          unint64_t v75 = a7;
          swift_unknownObjectRetain();
          sub_214D1A098();
LABEL_53:
          __swift_instantiateConcreteTypeFromMangledName(&qword_26784E010);
          sub_214C1B478();
          uint64_t v58 = sub_214D1A068();
          if (v59)
          {
            uint64_t v60 = v58;
            uint64_t v61 = v59;
            a9[3] = MEMORY[0x263F8D310];
            unint64_t result = (_OWORD *)swift_unknownObjectRelease();
            *a9 = v60;
            a9[1] = v61;
            return result;
          }
          sub_214B7C31C();
          swift_allocError();
          *uint64_t v62 = 2;
          goto LABEL_49;
        case 6:
LABEL_33:
          if ((a7 & 1) == 0)
          {
            swift_unknownObjectRetain();
            goto LABEL_35;
          }
          sub_214D1AC08();
          swift_unknownObjectRetain_n();
          uint64_t v63 = swift_dynamicCastClass();
          if (!v63)
          {
            swift_unknownObjectRelease();
            uint64_t v63 = MEMORY[0x263F8EE78];
          }
          uint64_t v64 = *(void *)(v63 + 16);
          swift_release();
          if (__OFSUB__(a7 >> 1, a6)) {
            goto LABEL_81;
          }
          if (v64 != (a7 >> 1) - a6) {
            goto LABEL_82;
          }
          uint64_t v53 = swift_dynamicCastClass();
          if (!v53)
          {
            swift_unknownObjectRelease();
            uint64_t v53 = MEMORY[0x263F8EE78];
          }
          goto LABEL_62;
        case 7:
LABEL_36:
          a9[3] = (uint64_t)&type metadata for ASN1ItemTemp;
          uint64_t v54 = swift_allocObject();
          *a9 = v54;
          *(void *)(v54 + 16) = a1;
          *(unsigned char *)(v54 + 24) = a2;
          *(unsigned char *)(v54 + 25) = a3 & 1;
          *(void *)(v54 + 32) = a4;
          *(void *)(v54 + 40) = a5;
          *(void *)(v54 + 48) = a6;
          *(void *)(v54 + 56) = a7;
          return (_OWORD *)swift_unknownObjectRetain();
        default:
          if (a1 != 2) {
            goto LABEL_47;
          }
LABEL_29:
          int64_t v49 = a7 >> 1;
          uint64_t v50 = (a7 >> 1) - a6;
          if (__OFSUB__(a7 >> 1, a6))
          {
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            swift_unknownObjectRelease();
LABEL_35:
            uint64_t v53 = sub_214CDC49C(a4, a5, a6, a7);
LABEL_62:
            unint64_t result = (_OWORD *)swift_unknownObjectRelease();
            a9[3] = (uint64_t)&type metadata for CoreODIASN1OtherType;
            *a9 = a1;
            a9[1] = v53;
          }
          else
          {
            if (v50 > 8)
            {
              sub_214B7C31C();
              swift_allocError();
              *uint64_t v51 = 1;
              goto LABEL_48;
            }
            a9[3] = MEMORY[0x263F8E970];
            if (v49 == a6)
            {
              unint64_t v66 = 0;
LABEL_72:
              *a9 = v66;
              return result;
            }
            if (v49 > a6)
            {
              unint64_t v66 = 0;
              char v68 = (unsigned __int8 *)(a5 + a6);
              do
              {
                unsigned int v69 = *v68++;
                unint64_t v66 = v69 | (v66 << 8);
                --v50;
              }
              while (v50);
              goto LABEL_72;
            }
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            swift_unknownObjectRelease();
LABEL_68:
            uint64_t v67 = sub_214CDC49C(a4, a5, a6, a7);
LABEL_79:
            swift_unknownObjectRelease();
            unint64_t result = (_OWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39A8);
            a9[3] = (uint64_t)result;
            *a9 = v67;
          }
          return result;
      }
    default:
LABEL_11:
      if (a1 == 4)
      {
LABEL_12:
        switch(a8 >> 60)
        {
          case 1uLL:
            uint64_t v28 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            swift_unknownObjectRetain();
            uint64_t v29 = v28;
            uint64_t v30 = v79;
            unint64_t v31 = sub_214C1B260((uint64_t)v76, v29);
            if (!v30)
            {
              uint64_t v32 = v31;
              a9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
              *a9 = (uint64_t)v32;
            }
            return (_OWORD *)swift_unknownObjectRelease();
          case 2uLL:
          case 4uLL:
            uint64_t v20 = a8 & 0xFFFFFFFFFFFFFFFLL;
            unint64_t v21 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            char v22 = *(unsigned char *)(v20 + 24);
            sub_214C1ADC4(v21);
            swift_unknownObjectRetain();
            uint64_t v23 = v79;
            unint64_t v24 = sub_214B7C3CC(v76, v21, v22);
            if (v23)
            {
              swift_unknownObjectRelease();
              return (_OWORD *)sub_214BE222C(v21);
            }
            uint64_t v52 = v24;
            sub_214BE222C(v21);
            a9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
            *a9 = (uint64_t)v52;
            return (_OWORD *)swift_unknownObjectRelease();
          case 3uLL:
            uint64_t v33 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v34 = swift_unknownObjectRetain();
            uint64_t v35 = sub_214C1AE88(v34, a5, a6, a7, v33);
            if (v79) {
              return (_OWORD *)swift_unknownObjectRelease();
            }
            uint64_t v55 = v35;
            a9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26784D728);
            unint64_t result = (_OWORD *)swift_unknownObjectRelease();
            *a9 = (uint64_t)v55;
            return result;
          case 5uLL:
            uint64_t v36 = a8 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v37 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v38 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v39 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            unint64_t v25 = *(void *)(v36 + 40);
            uint64_t v40 = *(unsigned __int8 *)(v36 + 48);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            sub_214C1ADC4(v25);
            uint64_t v41 = v79;
            sub_214B7BEB0(&v73, v76, v25, v40);
            if (v41) {
              goto LABEL_26;
            }
            swift_unknownObjectRelease();
            sub_214BE222C(v25);
            uint64_t v42 = a9;
            a9[3] = (uint64_t)&type metadata for CoreODIASN1ApplicationType;
            goto LABEL_41;
          case 6uLL:
            uint64_t v43 = a8 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v37 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v38 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v39 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            unint64_t v25 = *(void *)(v43 + 40);
            uint64_t v44 = *(unsigned __int8 *)(v43 + 48);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            sub_214C1ADC4(v25);
            uint64_t v45 = v79;
            sub_214B7BEB0(&v73, v76, v25, v44);
            if (v45) {
              goto LABEL_26;
            }
            swift_unknownObjectRelease();
            sub_214BE222C(v25);
            uint64_t v42 = a9;
            a9[3] = (uint64_t)&type metadata for CoreODIASN1ContextType;
            goto LABEL_41;
          case 7uLL:
            uint64_t v46 = a8 & 0xFFFFFFFFFFFFFFFLL;
            uint64_t v37 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v38 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
            uint64_t v39 = *(void *)((a8 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
            unint64_t v25 = *(void *)(v46 + 40);
            uint64_t v47 = *(unsigned __int8 *)(v46 + 48);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            sub_214C1ADC4(v25);
            uint64_t v48 = v79;
            sub_214B7BEB0(&v73, v76, v25, v47);
            if (v48)
            {
LABEL_26:
              swift_bridgeObjectRelease();
LABEL_27:
              swift_unknownObjectRelease();
              return (_OWORD *)sub_214BE222C(v25);
            }
            else
            {
              swift_unknownObjectRelease();
              sub_214BE222C(v25);
              uint64_t v42 = a9;
              a9[3] = (uint64_t)&type metadata for CoreODIASN1PrivateType;
LABEL_41:
              uint64_t v56 = swift_allocObject();
              *uint64_t v42 = v56;
              *(void *)(v56 + 16) = v37;
              *(void *)(v56 + 24) = v38;
              *(void *)(v56 + 32) = v39;
              return sub_214B5EC20(&v73, (_OWORD *)(v56 + 40));
            }
          case 8uLL:
            switch(__ROR8__(a8, 3) ^ 0x1000000000000000)
            {
              case 1:
                if ((a7 & 1) == 0)
                {
                  swift_unknownObjectRetain();
                  goto LABEL_68;
                }
                sub_214D1AC08();
                swift_unknownObjectRetain_n();
                uint64_t v70 = swift_dynamicCastClass();
                if (!v70)
                {
                  swift_unknownObjectRelease();
                  uint64_t v70 = MEMORY[0x263F8EE78];
                }
                uint64_t v71 = *(void *)(v70 + 16);
                swift_release();
                if (__OFSUB__(a7 >> 1, a6)) {
                  goto LABEL_84;
                }
                if (v71 != (a7 >> 1) - a6) {
                  goto LABEL_85;
                }
                uint64_t v67 = swift_dynamicCastClass();
                if (!v67)
                {
                  swift_unknownObjectRelease();
                  uint64_t v67 = MEMORY[0x263F8EE78];
                }
                break;
              case 2:
                goto LABEL_43;
              case 3:
                goto LABEL_45;
              case 4:
              case 5:
                goto LABEL_52;
              case 6:
                goto LABEL_33;
              case 7:
                goto LABEL_36;
              default:
                goto LABEL_29;
            }
            goto LABEL_79;
          default:
            unint64_t v25 = *(void *)(a8 + 16);
            uint64_t v26 = *(unsigned __int8 *)(a8 + 24);
            swift_unknownObjectRetain();
            sub_214C1ADC4(v25);
            uint64_t v27 = v79;
            sub_214B7BEB0(&v73, v76, v25, v26);
            if (v27) {
              goto LABEL_27;
            }
            if (v77 == v78 >> 1)
            {
              swift_unknownObjectRelease();
              sub_214BE222C(v25);
              return sub_214B5EC20(&v73, a9);
            }
            sub_214B7C31C();
            swift_allocError();
            *__int16 v65 = 3;
            swift_willThrow();
            sub_214BE222C(v25);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
            break;
        }
      }
      else
      {
LABEL_47:
        sub_214B7C31C();
        swift_allocError();
        *uint64_t v57 = 0;
LABEL_48:
        swift_unknownObjectRetain();
LABEL_49:
        swift_willThrow();
      }
      return (_OWORD *)swift_unknownObjectRelease();
  }
}

uint64_t sub_214C1AD8C()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

unint64_t sub_214C1ADC4(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      unint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return MEMORY[0x270FA0238](v0, 72, 7);
}

void *sub_214C1AE88(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v41 = a4;
  uint64_t v6 = v5;
  v39[0] = a1;
  v39[1] = a2;
  uint64_t v40 = a3;
  if (a3 == a4 >> 1)
  {
    swift_unknownObjectRetain();
    id v7 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_36;
  }
  uint64_t v8 = a5;
  uint64_t v9 = (unint64_t *)(a5 + 32);
  swift_unknownObjectRetain();
  id v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v42 = v8;
  uint64_t v32 = v9;
LABEL_4:
  sub_214B7BEB0(v38, v39, 0x8000000000000038, 0);
  if (v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0 || (uint64_t v10 = v34, (v11 = *(void *)(v8 + 16)) == 0))
  {
LABEL_35:
    swift_bridgeObjectRelease();
    sub_214B7C31C();
    swift_allocError();
    *uint64_t v28 = 0;
    swift_willThrow();
    swift_unknownObjectRelease();
    goto LABEL_36;
  }
  uint64_t v12 = v33;
  uint64_t v13 = BYTE8(v33);
  uint64_t v14 = BYTE9(v33);
  uint64_t v16 = v35;
  uint64_t v15 = v36;
  uint64_t v17 = v9;
  uint64_t v18 = v37;
  while (2)
  {
    unint64_t v20 = *v17;
    v17 += 2;
    unint64_t v19 = v20;
    switch(v20 >> 60)
    {
      case 1uLL:
      case 2uLL:
        if ((void)v33 == 16) {
          goto LABEL_28;
        }
        goto LABEL_9;
      case 3uLL:
      case 4uLL:
        if ((void)v33 != 17) {
          goto LABEL_9;
        }
        goto LABEL_28;
      case 5uLL:
      case 6uLL:
      case 7uLL:
        if ((void)v33 == *(void *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 0x10)) {
          goto LABEL_28;
        }
        goto LABEL_9;
      case 8uLL:
        switch(__ROR8__(v19, 3) ^ 0x1000000000000000)
        {
          case 1:
            goto LABEL_18;
          case 2:
            if ((void)v33 == 5) {
              goto LABEL_29;
            }
            goto LABEL_9;
          case 3:
            if ((void)v33 == 18) {
              goto LABEL_29;
            }
            goto LABEL_9;
          case 4:
            if ((void)v33 == 19) {
              goto LABEL_29;
            }
            goto LABEL_9;
          case 5:
            if ((void)v33 == 22) {
              goto LABEL_29;
            }
            goto LABEL_9;
          case 6:
          case 7:
            goto LABEL_29;
          default:
            if ((void)v33 == 2) {
              goto LABEL_29;
            }
            goto LABEL_9;
        }
      default:
LABEL_18:
        if ((void)v33 != 4)
        {
LABEL_9:
          if (!--v11) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_28:
        uint64_t v31 = v34;
        unint64_t v21 = v7;
        uint64_t v22 = v37;
        uint64_t v23 = v36;
        uint64_t v24 = BYTE9(v33);
        uint64_t v25 = v35;
        sub_214C1ADC4(v19);
        uint64_t v16 = v25;
        uint64_t v14 = v24;
        uint64_t v15 = v23;
        uint64_t v18 = v22;
        id v7 = v21;
        uint64_t v10 = v31;
LABEL_29:
        swift_unknownObjectRetain_n();
        LOBYTE(v30) = 0;
        sub_214C1A448(&v33, v12, v13, v14, v10, v16, v15, v18, v19, v30);
        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v7 = sub_214B875CC(0, v7[2] + 1, 1, v7);
        }
        unint64_t v27 = v7[2];
        unint64_t v26 = v7[3];
        if (v27 >= v26 >> 1) {
          id v7 = sub_214B875CC((void *)(v26 > 1), v27 + 1, 1, v7);
        }
        v7[2] = v27 + 1;
        sub_214B5EC20(&v33, &v7[4 * v27 + 4]);
        swift_unknownObjectRelease();
        sub_214BE222C(v19);
        swift_unknownObjectRelease();
        uint64_t v8 = v42;
        uint64_t v9 = v32;
        if (v40 != v41 >> 1) {
          goto LABEL_4;
        }
LABEL_36:
        swift_unknownObjectRelease();
        return v7;
    }
  }
}

void *sub_214C1B260(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  id v7 = (unsigned __int8 *)(a2 + 40);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    unint64_t v9 = *((void *)v7 - 1);
    uint64_t v10 = *v7;
    sub_214C1ADC4(v9);
    sub_214B7BEB0(v17, a1, v9, v10);
    if (!v3)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_214B875CC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1) {
        uint64_t v8 = sub_214B875CC((void *)(v13 > 1), v14 + 1, 1, v8);
      }
      v8[2] = v14 + 1;
      sub_214B5EC20(v17, &v8[4 * v14 + 4]);
      sub_214BE222C(v9);
      goto LABEL_4;
    }
    v17[0] = v3;
    id v11 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    if (!swift_dynamicCast() || (unsigned __int8 v12 = v18, (v18 | 4) != 4))
    {
      sub_214BE222C(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }

    if (!v10) {
      break;
    }
    sub_214BE222C(v9);

    uint64_t v3 = 0;
LABEL_4:
    v7 += 16;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B7C31C();
  swift_allocError();
  *uint64_t v15 = v12;
  swift_willThrow();
  sub_214BE222C(v9);
LABEL_18:

  return v8;
}

unint64_t sub_214C1B478()
{
  unint64_t result = qword_26784E018;
  if (!qword_26784E018)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784E010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E018);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_214C1ADC4(*(void *)a2);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithCopy for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  sub_214C1ADC4(*(void *)a2);
  unint64_t v5 = *(void *)a1;
  *(void *)a1 = v4;
  sub_214BE222C(v5);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_214BE222C(v4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIASN1Definition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIASN1Definition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1Definition()
{
  return &type metadata for CoreODIASN1Definition;
}

unint64_t *initializeBufferWithCopyOfBuffer for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_214C1ADC4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for CoreODIASN1Definition.ASN1Type(unint64_t *a1)
{
  return sub_214BE222C(*a1);
}

unint64_t *assignWithCopy for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_214C1ADC4(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_214BE222C(v4);
  return a1;
}

unint64_t *assignWithTake for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_214BE222C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIASN1Definition.ASN1Type(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x78 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 120);
  }
  unsigned int v3 = ((*(void *)a1 >> 60) & 0x8F | (16 * (*(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x77) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CoreODIASN1Definition.ASN1Type(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x77)
  {
    *(void *)unint64_t result = a2 - 120;
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_214C1B7A0(void *a1)
{
  uint64_t v1 = *a1 >> 60;
  if (v1 <= 7) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 8;
  }
}

void *sub_214C1B7BC(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_214C1B7CC(unint64_t *result, uint64_t a2)
{
  if (a2 < 8)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 60;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 8);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1Definition.ASN1Type()
{
  return &type metadata for CoreODIASN1Definition.ASN1Type;
}

unsigned char *storeEnumTagSinglePayload for HardwareAttestationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C1B8E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HardwareAttestationType()
{
  return &type metadata for HardwareAttestationType;
}

unsigned char *storeEnumTagSinglePayload for JWSAlgorithm(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C1B9E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JWSAlgorithm()
{
  return &type metadata for JWSAlgorithm;
}

uint64_t sub_214C1BA1C(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))Logger.LogCategory.rawValue.getter);
}

uint64_t sub_214C1BA34(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64756F6C4369;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64756F6C4369;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x73656E755469;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684628325;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1869903201;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x73656E755469) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1684628325;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1869903201) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1BB8C(char a1, char a2)
{
  if (a1 == a2) {
    char v2 = 1;
  }
  else {
    char v2 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_214C1BBF0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEF312E4E53412D31;
  uint64_t v3 = 0x765F4343455F5645;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x33765F4345;
    }
    else {
      uint64_t v5 = 0x48535F33765F4345;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x765F4343455F5645;
  unint64_t v6 = 0xEF312E4E53412D31;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x33765F4345;
    }
    else {
      uint64_t v3 = 0x48535F33765F4345;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214C1BD14(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000214D2D750;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000018;
    }
    else {
      unint64_t v5 = 0xD000000000000017;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000214D2D770;
    }
    else {
      unint64_t v6 = 0x8000000214D2D790;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x8000000214D2D750;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000018;
    }
    else {
      unint64_t v2 = 0xD000000000000017;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x8000000214D2D770;
    }
    else {
      unint64_t v3 = 0x8000000214D2D790;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214C1BE14(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE0064656B636F4CLL;
  uint64_t v3 = 0x6563697665447369;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6563697665447369;
  unint64_t v6 = 0xEE0064656B636F4CLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = 0x8000000214D2D700;
      break;
    case 2:
      unint64_t v6 = 0x8000000214D2D720;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v5 = 0x614C656E6F687069;
      unint64_t v6 = 0xEE0065676175676ELL;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x7365727574616566;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x8000000214D2D700;
      if (v5 == 0xD000000000000014) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0x8000000214D2D720;
      if (v5 != 0xD000000000000011) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v3 = 0x614C656E6F687069;
      unint64_t v2 = 0xEE0065676175676ELL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x7365727574616566) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1C028(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_214C1C040(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))ArmandDeviceDataFieldName.rawValue.getter);
}

uint64_t sub_214C1C058(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x656475746974616CLL;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656475746974616CLL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x64757469676E6F6CLL;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v3 = 0x8000000214D2D560;
      break;
    case 3:
      unint64_t v3 = 0x8000000214D2D580;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x6564757469746C61;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x64757469676E6F6CLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x8000000214D2D560;
      if (v5 != 0xD000000000000012) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x8000000214D2D580;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_12;
    case 4:
      if (v5 != 0x6564757469746C61) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1C224(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF65647574697461;
  unint64_t v3 = 0x4C73736572646461;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4C73736572646461;
  unint64_t v6 = 0xEF65647574697461;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000010;
      char v7 = "addressLongitude";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      char v7 = "docAddressLatitude";
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0xD000000000000013;
      char v7 = "docAddressLongitude";
      goto LABEL_8;
    case 4:
      char v8 = "shippingAddressLatitude";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0xD000000000000018;
      char v7 = "shippingAddressLongitude";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD000000000000016;
      char v7 = "billingAddressLatitude";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    case 7:
      char v8 = "billingAddressLongitude";
LABEL_10:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000017;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0xD000000000000010;
      unint64_t v9 = "addressLongitude";
      goto LABEL_18;
    case 2:
      unint64_t v3 = 0xD000000000000012;
      unint64_t v9 = "docAddressLatitude";
      goto LABEL_18;
    case 3:
      unint64_t v3 = 0xD000000000000013;
      unint64_t v9 = "docAddressLongitude";
      goto LABEL_18;
    case 4:
      uint64_t v10 = "shippingAddressLatitude";
      goto LABEL_22;
    case 5:
      unint64_t v3 = 0xD000000000000018;
      unint64_t v9 = "shippingAddressLongitude";
      goto LABEL_18;
    case 6:
      unint64_t v3 = 0xD000000000000016;
      unint64_t v9 = "billingAddressLatitude";
LABEL_18:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_19;
    case 7:
      uint64_t v10 = "billingAddressLongitude";
LABEL_22:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == 0xD000000000000017) {
        goto LABEL_23;
      }
      goto LABEL_25;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_23:
      if (v6 == v2) {
        char v11 = 1;
      }
      else {
LABEL_25:
      }
        char v11 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_214C1C45C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5260627;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5260627;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 17747;
      break;
    case 2:
      uint64_t v5 = 5653577;
      break;
    case 3:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 20559;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 17747) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 5653577;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 20559) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1C594(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB0000000064695FLL;
  unint64_t v3 = 0x776F6C666B726F77;
  uint64_t v4 = a1;
  unint64_t v5 = 0x776F6C666B726F77;
  unint64_t v6 = 0xEB0000000064695FLL;
  switch(v4)
  {
    case 1:
      char v7 = "is_device_locked";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000033;
      char v8 = "encrypted_training_signal_id_container_digest_index";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000026;
      char v8 = "encrypted_training_signal_id_container";
LABEL_5:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v5 = 0x5F64616F6C796170;
      unint64_t v6 = 0xEE006572756E6574;
      break;
    case 5:
      char v7 = "experiment_group";
LABEL_8:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v9 = "is_device_locked";
      goto LABEL_16;
    case 2:
      unint64_t v3 = 0xD000000000000033;
      uint64_t v10 = "encrypted_training_signal_id_container_digest_index";
      goto LABEL_13;
    case 3:
      unint64_t v3 = 0xD000000000000026;
      uint64_t v10 = "encrypted_training_signal_id_container";
LABEL_13:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v3 = 0x5F64616F6C796170;
      unint64_t v2 = 0xEE006572756E6574;
      break;
    case 5:
      unint64_t v9 = "experiment_group";
LABEL_16:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000010;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v11 = 1;
  }
  else {
    char v11 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_214C1C794(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x656D737365737361;
  }
  if (v2) {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v4 = 0x8000000214D2D880;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x656D737365737361;
  }
  if (a2) {
    unint64_t v6 = 0x8000000214D2D880;
  }
  else {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_214C1C844(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))ODIErrorPropertyKey.rawValue.getter);
}

uint64_t sub_214C1C85C(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))DIPErrorPropertyKey.rawValue.getter);
}

uint64_t sub_214C1C874(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000214D2E270;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656C69666F7270;
      break;
    case 2:
      unint64_t v5 = 0x49656C69666F7270;
      unint64_t v3 = 0xEB000000006F666ELL;
      break;
    case 3:
      unint64_t v5 = 0x49656C69666F7270;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E6F6973726576;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x8000000214D2E270;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x656C69666F7270) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB000000006F666ELL;
      if (v5 != 0x49656C69666F7270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x49656C69666F7270;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E6F6973726576) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1CA54(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64756F6C4369;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64756F6C4369;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x73656E755469;
      break;
    case 2:
      uint64_t v5 = 0x64726143656DLL;
      break;
    case 3:
      uint64_t v5 = 0x6D754E656E6F6870;
      uint64_t v6 = 7497058;
      goto LABEL_6;
    case 4:
      uint64_t v5 = 0x726F707075736E75;
      uint64_t v6 = 6579572;
LABEL_6:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x73656E755469) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      if (v5 != 0x64726143656DLL) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      uint64_t v2 = 0x6D754E656E6F6870;
      unint64_t v7 = 0xEB00000000726562;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xEB00000000646574;
      if (v5 != 0x726F707075736E75) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_214C1CC14(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x73746E756F636341;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x73746E756F636341;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xEF64756F6C43692ELL;
      break;
    case 2:
      unint64_t v3 = 0xEF73656E7554692ELL;
      break;
    case 3:
      uint64_t v5 = 0x656C655465726F43;
      unint64_t v3 = 0xED0000796E6F6870;
      break;
    case 4:
      uint64_t v5 = 0x797469746E656449;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64726143654DLL;
      break;
    case 6:
      uint64_t v5 = 0x726F707075736E75;
      unint64_t v3 = 0xEB00000000646574;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF64756F6C43692ELL;
      if (v5 == 0x73746E756F636341) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEF73656E7554692ELL;
      if (v5 != 0x73746E756F636341) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xED0000796E6F6870;
      if (v5 != 0x656C655465726F43) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      if (v5 != 0x797469746E656449) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x64726143654DLL;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xEB00000000646574;
      if (v5 != 0x726F707075736E75) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_214C1CE68(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))ArmandDataSource.rawValue.getter);
}

uint64_t sub_214C1CE80(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x45656D69746E7572;
  }
  else {
    uint64_t v3 = 0x65736E6F70736572;
  }
  if (v2) {
    unint64_t v4 = 0xEE00726564616548;
  }
  else {
    unint64_t v4 = 0xEC000000726F7272;
  }
  if (a2) {
    uint64_t v5 = 0x45656D69746E7572;
  }
  else {
    uint64_t v5 = 0x65736E6F70736572;
  }
  if (a2) {
    unint64_t v6 = 0xEC000000726F7272;
  }
  else {
    unint64_t v6 = 0xEE00726564616548;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_214C1CF3C(char a1, char a2)
{
  if (a1 == a2) {
    char v2 = 1;
  }
  else {
    char v2 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_214C1CFA0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6574617473;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6574617473;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x42676E697373696DLL;
      goto LABEL_4;
    case 2:
      uint64_t v5 = 0x42746E6572727563;
LABEL_4:
      unint64_t v3 = 0xEF73676E69646E69;
      break;
    case 3:
      uint64_t v5 = 0x646F43726F727265;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 4:
      uint64_t v5 = 0x616E696D6F4E7369;
      unint64_t v3 = 0xEB00000000646574;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 0x42676E697373696DLL;
      goto LABEL_10;
    case 2:
      uint64_t v7 = 0x42746E6572727563;
LABEL_10:
      unint64_t v6 = 0xEF73676E69646E69;
      if (v5 != v7) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 3:
      uint64_t v2 = 0x646F43726F727265;
      unint64_t v6 = 0xE900000000000065;
      goto LABEL_13;
    case 4:
      unint64_t v6 = 0xEB00000000646574;
      if (v5 != 0x616E696D6F4E7369) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_17:
      }
        char v8 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_214C1D184(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, MilestoneTag.rawValue.getter);
}

uint64_t sub_214C1D19C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7469573635325345;
    }
    else {
      uint64_t v3 = 0x453635325345;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC0000004D415568;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7469573635325345;
      }
      else {
        uint64_t v6 = 0x453635325345;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC0000004D415568;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x3635325345;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x3635325345)
  {
LABEL_21:
    char v8 = sub_214D1ABC8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214C1D2B8(uint64_t a1, uint64_t a2)
{
  return sub_214C1D2D0(a1, a2, (uint64_t (*)(void))BindingsKeys.rawValue.getter);
}

uint64_t sub_214C1D2D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_214C1D374(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1D19C(*a1, *a2);
}

uint64_t sub_214C1D380()
{
  return sub_214D1AD48();
}

uint64_t sub_214C1D424()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C1D4B4()
{
  return sub_214D1AD48();
}

uint64_t sub_214C1D554@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C1DB58();
  *a1 = result;
  return result;
}

void sub_214C1D584(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xEC0000004D415568;
  uint64_t v5 = 0x7469573635325345;
  if (v2 != 1)
  {
    uint64_t v5 = 0x453635325345;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x3635325345;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_214C1D5E8()
{
  unint64_t result = qword_26784E020;
  if (!qword_26784E020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E020);
  }
  return result;
}

unint64_t sub_214C1D640()
{
  unint64_t result = qword_26784E028;
  if (!qword_26784E028)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784E030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E028);
  }
  return result;
}

uint64_t sub_214C1D69C()
{
  return sub_214D1A228();
}

uint64_t sub_214C1D6FC()
{
  return sub_214D1A1D8();
}

uint64_t sub_214C1D74C(unsigned __int8 *a1, char *a2)
{
  return sub_214C1C45C(*a1, *a2);
}

uint64_t sub_214C1D758()
{
  return sub_214D1AD48();
}

uint64_t sub_214C1D808()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C1D8A0()
{
  return sub_214D1AD48();
}

uint64_t sub_214C1D94C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C1DBA4();
  *a1 = result;
  return result;
}

void sub_214C1D97C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 5260627;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 17747;
      goto LABEL_3;
    case 2:
      *a1 = 5653577;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 20559;
      a1[1] = 0xE200000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_214C1D9EC()
{
  return sub_214D1A228();
}

uint64_t sub_214C1DA4C()
{
  return sub_214D1A1D8();
}

void sub_214C1DA9C(void *a1@<X8>)
{
  *a1 = &unk_26C5A6D80;
}

unint64_t sub_214C1DAB0()
{
  unint64_t result = qword_26784E038;
  if (!qword_26784E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E038);
  }
  return result;
}

unint64_t sub_214C1DB04()
{
  unint64_t result = qword_26ACE3BF0;
  if (!qword_26ACE3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3BF0);
  }
  return result;
}

uint64_t sub_214C1DB58()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_214C1DBA4()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_214C1DBF0()
{
  unint64_t result = qword_26784E040[0];
  if (!qword_26784E040[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26784E040);
  }
  return result;
}

uint64_t sub_214C1DC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B6B4A4;
  return v9(a1, a2, a3);
}

uint64_t sub_214C1DD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_214B6A55C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214C1DE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 24) + **(int **)(a8 + 24));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  *uint64_t v17 = v8;
  v17[1] = sub_214B6A55C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_214C1DF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B6B4A4;
  return v9(a1, a2, a3);
}

uint64_t sub_214C1E098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B6B4A4;
  return v9(a1, a2, a3);
}

uint64_t sub_214C1E19C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a12 + 48) + **(int **)(a12 + 48));
  uint64_t v15 = a4 & 1;
  uint64_t v16 = a6 & 1;
  uint64_t v17 = a8 & 1;
  unsigned __int8 v18 = (void *)swift_task_alloc();
  *(void *)(v12 + 16) = v18;
  *unsigned __int8 v18 = v12;
  v18[1] = sub_214B6B4A4;
  return v20(a1, a2, a3, v15, a5, v16, a7, v17, a9, a10, a11, a12);
}

uint64_t sub_214C1E2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_214B6B4A4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214C1E3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for PregeneratedAssessment();
  uint64_t v9 = sub_214BFD2E8();
  uint64_t v11 = v10;
  char v12 = sub_214BA4DF0(*(void *)((char *)a3 + v8[7]), *(void *)((char *)a3 + v8[7] + 8));
  uint64_t v67 = v14;
  uint64_t v68 = v13;
  uint64_t v15 = sub_214D19AE8();
  uint64_t v71 = v9;
  uint64_t v72 = v11;
  char v70 = v12;
  uint64_t v66 = a4;
  if (v16 >> 60 == 15)
  {
    LOBYTE(v73) = 109;
    id v17 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, (unsigned __int8 *)&v73, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
    uint64_t v75 = 45;
    unint64_t v76 = 0xE100000000000000;
    unint64_t v73 = 0;
    unint64_t v74 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v73 = 0xD000000000000018;
    unint64_t v74 = 0x8000000214D35950;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v20 = v73;
    LOBYTE(v73) = 12;
    CoreODILogger.error(_:category:)(v20, v74, &v73);
    swift_bridgeObjectRelease();

    uint64_t v21 = 0;
    uint64_t v62 = 0;
    unint64_t v63 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v18 = v15;
    unint64_t v19 = v16;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA6410();
    sub_214D19748();
    swift_release();
    sub_214B59EAC(v18, v19);
    uint64_t v21 = v75;
    uint64_t v62 = v77;
    unint64_t v63 = v76;
    uint64_t v60 = v79;
    uint64_t v61 = v78;
    uint64_t v58 = v81;
    uint64_t v59 = v80;
    uint64_t v57 = v82;
  }
  uint64_t v22 = sub_214D19AE8();
  if (v23 >> 60 == 15)
  {
    LOBYTE(v73) = 109;
    id v24 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D304C0, 0, (unsigned __int8 *)&v73, 0, 0, 0xD000000000000074, 0x8000000214D304F0, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
    uint64_t v75 = 45;
    unint64_t v76 = 0xE100000000000000;
    unint64_t v73 = 0;
    unint64_t v74 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v73 = 0xD000000000000016;
    unint64_t v74 = 0x8000000214D35970;
    swift_getErrorValue();
    sub_214D1AC88();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v27 = v73;
    LOBYTE(v73) = 12;
    CoreODILogger.error(_:category:)(v27, v74, &v73);
    swift_bridgeObjectRelease();

    uint64_t v28 = 0;
    unint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v25 = v22;
    unint64_t v26 = v23;
    sub_214D19768();
    swift_allocObject();
    sub_214D19758();
    sub_214BA6410();
    sub_214D19748();
    swift_release();
    sub_214B59EAC(v25, v26);
    uint64_t v28 = v75;
    unint64_t v29 = v76;
    uint64_t v30 = v77;
    uint64_t v31 = v78;
    uint64_t v32 = v79;
    uint64_t v33 = v80;
    uint64_t v34 = v81;
    uint64_t v35 = v82;
  }
  uint64_t v36 = (unsigned char *)(a5 + 344);
  uint64_t v37 = a3[1];
  *(void *)a5 = *a3;
  *(void *)(a5 + 8) = v37;
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  uint64_t v38 = (void *)((char *)a3 + v8[8]);
  uint64_t v39 = v38[1];
  *(void *)(a5 + 32) = *v38;
  *(void *)(a5 + 40) = v39;
  *(void *)(a5 + 48) = v21;
  *(void *)(a5 + 56) = v63;
  *(void *)(a5 + 64) = v62;
  *(void *)(a5 + 72) = v61;
  *(void *)(a5 + 80) = v60;
  *(void *)(a5 + 88) = v59;
  *(void *)(a5 + 96) = v58;
  *(void *)(a5 + 104) = v57;
  uint64_t v40 = (void *)((char *)a3 + v8[10]);
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  *(void *)(a5 + 112) = *v40;
  *(void *)(a5 + 120) = v42;
  *(void *)(a5 + 128) = v28;
  *(void *)(a5 + 136) = v29;
  *(void *)(a5 + 144) = v30;
  *(void *)(a5 + 152) = v31;
  *(void *)(a5 + 160) = v32;
  *(void *)(a5 + 168) = v33;
  *(void *)(a5 + 176) = v34;
  *(void *)(a5 + 184) = v35;
  uint64_t v43 = (void *)((char *)a3 + v8[6]);
  uint64_t v44 = v43[1];
  *(void *)(a5 + 192) = *v43;
  *(void *)(a5 + 200) = v44;
  uint64_t v45 = (void *)((char *)a3 + v8[12]);
  uint64_t v46 = *v45;
  uint64_t v47 = v45[1];
  *(void *)(a5 + 208) = *v45;
  *(void *)(a5 + 216) = v47;
  *(void *)(a5 + 224) = v46;
  *(void *)(a5 + 232) = v47;
  *(void *)(a5 + 240) = v41;
  *(void *)(a5 + 248) = v42;
  *(void *)(a5 + 256) = v68;
  *(void *)(a5 + 264) = v67;
  unsigned int v69 = v8;
  uint64_t v48 = *(void *)((char *)a3 + v8[13]);
  *(void *)(a5 + 272) = v48;
  sub_214B6AC38(v66, a5 + 280, &qword_26784D308);
  *(unsigned char *)(a5 + 320) = v70 & 1;
  if (!v71)
  {
    *(void *)(a5 + 328) = 0;
    *(void *)(a5 + 336) = 0;
    *uint64_t v36 = 1;
    *(void *)(a5 + 352) = 0;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = 0;
LABEL_12:
    *(void *)(a5 + 360) = v50;
    *(unsigned char *)(a5 + 368) = v71 == 0;
    uint64_t v51 = (void *)((char *)a3 + v69[19]);
    uint64_t v52 = v51[1];
    *(void *)(a5 + 376) = *v51;
    *(void *)(a5 + 384) = v52;
    swift_bridgeObjectRetain();
    sub_214D19C18();
    double v54 = v53;
    uint64_t result = sub_214C22974(v71);
    if ((~COERCE__INT64(-v54) & 0x7FF0000000000000) != 0)
    {
      if (v54 < 9.22337204e18)
      {
        if (v54 > -9.22337204e18)
        {
          sub_214C225BC((uint64_t)a3, (uint64_t (*)(void))type metadata accessor for PregeneratedAssessment);
          *(void *)(a5 + 392) = (uint64_t)-v54;
          *(unsigned char *)(a5 + 400) = 0;
          uint64_t v55 = a5 + *(int *)(type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0) + 88);
          uint64_t v56 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
        }
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214C229B4(v71);
  uint64_t result = swift_release();
  *(void *)(a5 + 328) = v71;
  if (__OFADD__(v48, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)(a5 + 336) = v48 + 1;
  *uint64_t v36 = 0;
  *(void *)(a5 + 352) = v72;
  uint64_t v50 = v48 + 2;
  if (!__OFADD__(v48, 2))
  {
    swift_retain();
    goto LABEL_12;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_214C1EC70(uint64_t a1, char a2)
{
  *(void *)(v3 + 1968) = v2;
  *(unsigned char *)(v3 + 1377) = a2;
  *(void *)(v3 + 1960) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
  *(void *)(v3 + 1976) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
  *(void *)(v3 + 1984) = swift_task_alloc();
  *(void *)(v3 + 1992) = swift_task_alloc();
  *(void *)(v3 + 2000) = swift_task_alloc();
  *(void *)(v3 + 2008) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  *(void *)(v3 + 2016) = v4;
  *(void *)(v3 + 2024) = *(void *)(v4 - 8);
  *(void *)(v3 + 2032) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C1EDC0, v2, 0);
}

uint64_t sub_214C1EDC0()
{
  uint64_t v169 = v0;
  uint64_t v1 = *(void *)(v0 + 1968);
  uint64_t v2 = *(void **)(v0 + 1960);
  uint64_t v3 = (uint64_t *)(*(void *)(v1 + 672) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v4 = v3[1];
  uint64_t v164 = *v3;
  uint64_t v5 = v2[7];
  uint64_t v6 = v2[9];
  v150 = (void *)v2[8];
  uint64_t v152 = v2[6];
  uint64_t v7 = v2[10];
  uint64_t v8 = v2[11];
  uint64_t v10 = v2[12];
  uint64_t v9 = v2[13];
  v149 = (void *)(v1 + 680);
  sub_214B93DCC(v1 + 680, v0 + 1864);
  uint64_t v156 = *(void *)(v0 + 1896);
  uint64_t v158 = *(void *)(v0 + 1888);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 1864), v158);
  swift_bridgeObjectRetain();
  uint64_t v138 = v5;
  uint64_t v141 = v7;
  uint64_t v143 = v8;
  uint64_t v145 = v10;
  uint64_t v147 = v9;
  sub_214B79260(v152, v5);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v167 = 0xD00000000000002DLL;
  unint64_t v168 = 0x8000000214D35770;
  v165 = v2;
  if (v2[27]) {
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = *(void *)(v0 + 1968);
  sub_214D1A108();
  swift_bridgeObjectRelease();
  unint64_t v12 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t))(v156 + 16))(v12, v168, &v167, v158);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1864);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v11 + 664);
  swift_bridgeObjectRetain();
  LOBYTE(v11) = sub_214C20174(v164, v4, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 1968);
  if (v11)
  {
    sub_214B7902C(v152, v5);
    uint64_t v15 = *(void *)(v14 + 704);
    uint64_t v16 = *(void *)(v14 + 712);
    __swift_project_boxed_opaque_existential_1(v149, v15);
    unint64_t v167 = 0;
    unint64_t v168 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    unint64_t v17 = v167;
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v16 + 32))(v17, v168, &v167, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(v14 + 704);
    uint64_t v19 = *(void *)(v14 + 712);
    __swift_project_boxed_opaque_existential_1(v149, v18);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v19 + 16))(0xD000000000000049, 0x8000000214D35900, &v167, v18, v19);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v96 = *(uint64_t (**)(void))(v0 + 8);
    return v96();
  }
  uint64_t v20 = *(uint64_t **)(v0 + 1960);
  uint64_t v21 = v20[24];
  uint64_t v22 = v20[25];
  uint64_t v23 = *v20;
  uint64_t v24 = v20[1];
  uint64_t v25 = v20[47];
  uint64_t v26 = v20[48];
  uint64_t v157 = v20[35];
  __dsta = (void *)v20[36];
  uint64_t v27 = v20[37];
  uint64_t v28 = v20[38];
  char v29 = *((unsigned char *)v20 + 320);
  uint64_t v159 = v20[39];
  uint64_t v161 = v20[41];
  uint64_t v30 = v20[45];
  char v31 = *((unsigned char *)v20 + 368);
  uint64_t v32 = v20[49];
  char v33 = *((unsigned char *)v20 + 400);
  *(void *)(v0 + 1384) = v164;
  *(void *)(v0 + 1392) = v4;
  *(void *)(v0 + 1400) = v21;
  *(void *)(v0 + 1416) = v152;
  *(void *)(v0 + 1424) = v138;
  *(void *)(v0 + 1432) = v150;
  *(void *)(v0 + 1440) = v6;
  *(void *)(v0 + 1448) = v141;
  *(void *)(v0 + 1456) = v143;
  *(void *)(v0 + 1464) = v145;
  *(void *)(v0 + 1472) = v147;
  *(void *)(v0 + 1480) = v23;
  *(void *)(v0 + 1496) = v25;
  *(unsigned char *)(v0 + 1552) = v29;
  *(void *)(v0 + 1568) = v30;
  *(unsigned char *)(v0 + 1576) = v31;
  *(void *)(v0 + 1584) = v32;
  *(void *)(v0 + 1408) = v22;
  *(void *)(v0 + 1488) = v24;
  *(void *)(v0 + 1504) = v26;
  *(void *)(v0 + 1512) = v157;
  *(void *)(v0 + 1520) = __dsta;
  *(void *)(v0 + 1528) = v27;
  uint64_t v34 = v27;
  *(void *)(v0 + 1536) = v28;
  *(void *)(v0 + 1544) = v159;
  *(void *)(v0 + 1560) = v161;
  *(unsigned char *)(v0 + 1592) = v33;
  *(unsigned char *)(v0 + 1376) = *(unsigned char *)(v0 + 1592);
  long long v35 = *(_OWORD *)(v0 + 1480);
  long long v36 = *(_OWORD *)(v0 + 1496);
  long long v37 = *(_OWORD *)(v0 + 1528);
  *(_OWORD *)(v0 + 1296) = *(_OWORD *)(v0 + 1512);
  *(_OWORD *)(v0 + 1312) = v37;
  *(_OWORD *)(v0 + 1264) = v35;
  *(_OWORD *)(v0 + 1280) = v36;
  long long v38 = *(_OWORD *)(v0 + 1400);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 1384);
  *(_OWORD *)(v0 + 1184) = v38;
  long long v39 = *(_OWORD *)(v0 + 1416);
  long long v40 = *(_OWORD *)(v0 + 1432);
  long long v41 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 1448);
  *(_OWORD *)(v0 + 1248) = v41;
  *(_OWORD *)(v0 + 1200) = v39;
  *(_OWORD *)(v0 + 1216) = v40;
  long long v42 = *(_OWORD *)(v0 + 1544);
  long long v43 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 1344) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 1360) = v43;
  *(_OWORD *)(v0 + 1328) = v42;
  nullsub_1(v0 + 1168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B792C4(v157, (uint64_t)__dsta, v34, v28, v159);
  swift_retain();
  sub_214C222A8((void *)(v0 + 1384));
  sub_214B6AC38(v14 + 440, v0 + 1600, &qword_26784D710);
  sub_214B6AC38(v0 + 1168, v14 + 440, &qword_26784D710);
  sub_214C2209C(v0 + 1600, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
  sub_214D19798();
  swift_allocObject();
  sub_214D19788();
  uint64_t v44 = v2[26];
  uint64_t v45 = v2[27];
  uint64_t v46 = v165[28];
  uint64_t v47 = v165[29];
  uint64_t v49 = v165[30];
  uint64_t v48 = v165[31];
  *(void *)(v0 + 1816) = v44;
  *(void *)(v0 + 1824) = v45;
  *(void *)(v0 + 1832) = v46;
  *(void *)(v0 + 1840) = v47;
  *(void *)(v0 + 1848) = v49;
  *(void *)(v0 + 1856) = v48;
  sub_214C22398(v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0B0);
  sub_214C223E8();
  uint64_t v50 = sub_214D19778();
  unint64_t v163 = v51;
  uint64_t v162 = v50;
  sub_214C2245C(v44, v45);
  swift_release();
  if (!v45)
  {
    uint64_t v89 = v162;
    unint64_t v52 = v163;
    goto LABEL_15;
  }
  unint64_t v52 = v163;
  if (v163 >> 60 == 15 || (double v53 = *(uint64_t **)(v0 + 1960), (v54 = v53[33]) == 0))
  {
    uint64_t v89 = v162;
LABEL_15:
    uint64_t v90 = *(void *)(v0 + 1968);
    uint64_t v91 = *(void *)(v90 + 704);
    uint64_t v92 = *(void *)(v90 + 712);
    uint64_t v88 = v149;
    __swift_project_boxed_opaque_existential_1(v149, v91);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v92 + 16))(0xD000000000000056, 0x8000000214D357A0, &v167, v91, v92);
    goto LABEL_16;
  }
  __dst = (void *)(v0 + 16);
  v160 = (void *)(v0 + 304);
  v151 = (void *)(v0 + 592);
  uint64_t v153 = v0 + 880;
  uint64_t v148 = v53[32];
  swift_bridgeObjectRetain();
  sub_214B6A3F8(v162, v163);
  uint64_t v144 = sub_214D19B48();
  uint64_t v146 = v55;
  sub_214B59EAC(v162, v163);
  uint64_t v142 = v53[34];
  uint64_t v56 = v53[16];
  uint64_t v57 = v53[17];
  uint64_t v58 = v53[18];
  uint64_t v59 = v53[19];
  uint64_t v60 = v53[20];
  uint64_t v61 = v53[22];
  uint64_t v62 = v53[23];
  uint64_t v127 = *v53;
  uint64_t v63 = v20[1];
  char v134 = *((unsigned char *)v20 + 320);
  uint64_t v64 = v53[44];
  uint64_t v130 = v20[45];
  uint64_t v131 = v53[21];
  char v129 = *((unsigned char *)v20 + 368);
  uint64_t v65 = v20[35];
  uint64_t v66 = v20[36];
  uint64_t v67 = v20[37];
  uint64_t v68 = v20[38];
  uint64_t v69 = v20[39];
  uint64_t v139 = v57;
  uint64_t v140 = v56;
  uint64_t v137 = v58;
  uint64_t v136 = v59;
  uint64_t v133 = v60;
  uint64_t v128 = v61;
  sub_214B79260(v56, v57);
  uint64_t v135 = v64;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v132 = v65;
  sub_214B792C4(v65, v66, v67, v68, v69);
  if (qword_26ACE44D0 != -1) {
    swift_once();
  }
  uint64_t v70 = *(void *)(v0 + 1968);
  uint64_t v71 = qword_26ACEBAB8;
  uint64_t v72 = qword_26ACEBAC0;
  *(void *)(v0 + 304) = v144;
  *(void *)(v0 + 312) = v146;
  *(void *)(v0 + 320) = v142;
  *(void *)(v0 + 328) = v140;
  *(void *)(v0 + 336) = v139;
  *(void *)(v0 + 344) = v137;
  *(void *)(v0 + 352) = v136;
  *(void *)(v0 + 360) = v133;
  *(void *)(v0 + 368) = v131;
  *(void *)(v0 + 376) = v128;
  *(void *)(v0 + 384) = v62;
  *(void *)(v0 + 392) = v127;
  *(void *)(v0 + 400) = v63;
  *(void *)(v0 + 408) = v148;
  *(void *)(v0 + 416) = v54;
  *(void *)(v0 + 424) = 2;
  *(unsigned char *)(v0 + 432) = v134;
  *(void *)(v0 + 440) = v135;
  *(void *)(v0 + 448) = v130;
  *(unsigned char *)(v0 + 456) = v129;
  *(void *)(v0 + 464) = v132;
  *(void *)(v0 + 472) = v66;
  *(void *)(v0 + 480) = v67;
  *(void *)(v0 + 488) = v68;
  *(void *)(v0 + 496) = v69;
  *(void *)(v0 + 504) = 0;
  *(unsigned char *)(v0 + 512) = 1;
  *(_OWORD *)(v0 + 520) = 0u;
  *(void *)(v0 + 536) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 544) = 0;
  *(unsigned char *)(v0 + 552) = 1;
  *(void *)(v0 + 560) = 0;
  *(unsigned char *)(v0 + 568) = 1;
  *(void *)(v0 + 576) = v71;
  *(void *)(v0 + 584) = v72;
  memcpy(__dst, v160, 0x120uLL);
  memcpy(v151, v160, 0x120uLL);
  nullsub_1(v151);
  swift_bridgeObjectRetain();
  sub_214B939C0(v160);
  sub_214B6AC38(v70 + 152, v153, &qword_26784CEC8);
  sub_214B6AC38((uint64_t)v151, v70 + 152, &qword_26784CEC8);
  sub_214C22010(v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  if (v165[27])
  {
    uint64_t v73 = *(void *)(v0 + 1968);
    uint64_t v75 = v165[28];
    uint64_t v74 = v165[29];
    swift_bridgeObjectRetain();
    swift_beginAccess();
    sub_214B939C0(v160);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v167 = *(void *)(v73 + 656);
    *(void *)(v73 + 656) = 0x8000000000000000;
    sub_214B8E560(__dst, v75, v74, isUniquelyReferenced_nonNull_native);
    *(void *)(v73 + 656) = v167;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  uint64_t v77 = *(void **)(v0 + 1968);
  uint64_t v78 = *(void *)(v77[82] + 16);
  uint64_t v79 = v77[88];
  uint64_t v80 = v77[89];
  __swift_project_boxed_opaque_existential_1(v149, v79);
  unint64_t v167 = 0;
  unint64_t v168 = 0xE000000000000000;
  swift_bridgeObjectRetain_n();
  sub_214D1A7A8();
  sub_214D1A108();
  *(void *)(v0 + 1952) = v78;
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  unint64_t v81 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v80 + 16))(v81, v168, &v167, v79, v80);
  swift_bridgeObjectRelease();
  uint64_t v82 = v77[88];
  uint64_t v83 = v77[89];
  __swift_project_boxed_opaque_existential_1(v149, v82);
  unint64_t v167 = 0;
  unint64_t v168 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v167 = 0xD000000000000017;
  unint64_t v168 = 0x8000000214D35880;
  sub_214D19FC8();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  unint64_t v84 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v83 + 16))(v84, v168, &v167, v82, v83);
  swift_bridgeObjectRelease();
  uint64_t v85 = v77[88];
  uint64_t v86 = v77[89];
  __swift_project_boxed_opaque_existential_1(v149, v85);
  unint64_t v167 = 0;
  unint64_t v168 = 0xE000000000000000;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v167 = 0xD000000000000028;
  unint64_t v168 = 0x8000000214D358A0;
  sub_214D19FA8();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v87 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v86 + 16))(v87, v168, &v167, v85, v86);
  sub_214C2261C(v160);
  uint64_t v88 = v149;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v89 = v162;
  unint64_t v52 = v163;
LABEL_16:
  *(void *)(v0 + 2048) = v89;
  *(void *)(v0 + 2040) = v52;
  if (*(unsigned char *)(v0 + 1377) == 1)
  {
    uint64_t v93 = *(void *)(v0 + 1968);
    uint64_t v94 = *(void *)(v93 + 704);
    uint64_t v95 = *(void *)(v93 + 712);
    __swift_project_boxed_opaque_existential_1(v88, v94);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v95 + 16))(0xD000000000000048, 0x8000000214D35800, &v167, v94, v95);
    sub_214C224CC((void *)(v0 + 1384));
    sub_214B59EAC(v89, v52);
    goto LABEL_18;
  }
  uint64_t v98 = *(void *)(v0 + 2024);
  uint64_t v99 = *(void *)(v0 + 2016);
  uint64_t v100 = *(void *)(v0 + 2008);
  uint64_t v101 = *(void *)(v0 + 1960);
  uint64_t v102 = *(void *)(v101 + 24);
  uint64_t v166 = *(void *)(v101 + 16);
  uint64_t v103 = v101 + *(int *)(type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0) + 88);
  sub_214B95764(v103, v100, &qword_26784E0A8);
  uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
  int v105 = v104(v100, 1, v99);
  uint64_t v106 = *(void *)(v0 + 2008);
  if (v105 == 1)
  {
    swift_bridgeObjectRetain();
    sub_214B59CE0(v106, &qword_26784E0A8);
    uint64_t v107 = 0;
    uint64_t v108 = 0;
  }
  else
  {
    uint64_t v107 = *(void *)(v106 + 16);
    uint64_t v108 = *(void *)(v106 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214C225BC(v106, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  uint64_t v109 = *(void *)(v0 + 2016);
  uint64_t v110 = *(void *)(v0 + 2000);
  sub_214B95764(v103, v110, &qword_26784E0A8);
  if (v104(v110, 1, v109) == 1)
  {
    uint64_t v111 = *(void *)(v0 + 1976);
    sub_214B59CE0(*(void *)(v0 + 2000), &qword_26784E0A8);
    uint64_t v112 = type metadata accessor for AssessmentTiming();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 1, 1, v112);
  }
  else
  {
    uint64_t v113 = *(void *)(v0 + 2000);
    sub_214B95764(v113 + *(int *)(*(void *)(v0 + 2016) + 24), *(void *)(v0 + 1976), &qword_26784E098);
    sub_214C225BC(v113, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  uint64_t v114 = *(void *)(v0 + 2016);
  uint64_t v115 = *(void *)(v0 + 1992);
  sub_214B95764(v103, v115, &qword_26784E0A8);
  if (v104(v115, 1, v114) == 1)
  {
    sub_214B59CE0(*(void *)(v0 + 1992), &qword_26784E0A8);
    char v116 = 2;
  }
  else
  {
    uint64_t v117 = *(void *)(v0 + 1992);
    char v116 = *(unsigned char *)(v117 + *(int *)(*(void *)(v0 + 2016) + 28));
    sub_214C225BC(v117, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  uint64_t v118 = *(void *)(v0 + 2016);
  uint64_t v119 = *(void *)(v0 + 1984);
  sub_214B95764(v103, v119, &qword_26784E0A8);
  if (v104(v119, 1, v118) == 1)
  {
    sub_214B59CE0(*(void *)(v0 + 1984), &qword_26784E0A8);
    uint64_t v120 = 0;
  }
  else
  {
    uint64_t v121 = *(void *)(v0 + 1984);
    uint64_t v120 = *(void *)(v121 + *(int *)(*(void *)(v0 + 2016) + 32));
    swift_bridgeObjectRetain();
    sub_214C225BC(v121, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  char v122 = *(void **)(v0 + 2032);
  v123 = *(int **)(v0 + 2016);
  uint64_t v124 = *(void *)(v0 + 1976);
  *char v122 = v166;
  v122[1] = v102;
  v122[2] = v107;
  v122[3] = v108;
  sub_214B6AC38(v124, (uint64_t)v122 + v123[6], &qword_26784E098);
  *((unsigned char *)v122 + v123[7]) = v116;
  *(void *)((char *)v122 + v123[8]) = v120;
  v125 = (void *)swift_task_alloc();
  *(void *)(v0 + 2056) = v125;
  void *v125 = v0;
  v125[1] = sub_214C1FE70;
  uint64_t v126 = *(void *)(v0 + 2032);
  return sub_214C202AC(v126);
}

uint64_t sub_214C1FE70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2064) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1968);
  if (v0) {
    uint64_t v4 = sub_214C20084;
  }
  else {
    uint64_t v4 = sub_214C1FF9C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C1FF9C()
{
  uint64_t v1 = v0[254];
  sub_214B59EAC(v0[256], v0[255]);
  sub_214C224CC(v0 + 173);
  sub_214C225BC(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_214C20084()
{
  uint64_t v1 = v0[254];
  sub_214B59EAC(v0[256], v0[255]);
  sub_214C224CC(v0 + 173);
  sub_214C225BC(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_214C20174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_214D1AD08();
    sub_214D1A0D8();
    uint64_t v6 = sub_214D1AD48();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_214D1ABC8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_214D1ABC8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_214C202AC(uint64_t a1)
{
  v2[598] = v1;
  v2[597] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
  v2[599] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AssessmentTiming();
  v2[600] = v3;
  v2[601] = *(void *)(v3 - 8);
  v2[602] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C203A0, v1, 0);
}

uint64_t sub_214C203A0()
{
  uint64_t v84 = v0;
  uint64_t v79 = v0 + 4408;
  uint64_t v1 = *(void *)(v0 + 4776);
  uint64_t v2 = *(void *)(v0 + 4784) + 680;
  sub_214B93DCC(v2, v0 + 4624);
  uint64_t v3 = *(void *)(v0 + 4648);
  uint64_t v4 = *(void *)(v0 + 4656);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 4624), v3);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v82 = 0xD000000000000014;
  unint64_t v83 = 0x8000000214D35620;
  uint64_t v77 = (void *)v2;
  uint64_t v5 = *(uint64_t **)(v0 + 4776);
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  LOBYTE(v82) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v4 + 32))(0xD000000000000014, 0x8000000214D35620, &v82, v3, v4);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 4624);
  uint64_t v6 = v5[1];
  uint64_t v74 = *v5;
  uint64_t v7 = *(void *)(v1 + 24);
  if (v7)
  {
    uint64_t v8 = v5[1];
    uint64_t v9 = *(void *)(v1 + 16);
    uint64_t v10 = *(void *)(v0 + 4808);
    uint64_t v11 = *(void *)(v0 + 4800);
    uint64_t v12 = *(void *)(v0 + 4792);
    uint64_t v13 = *(void *)(v0 + 4776);
    uint64_t v14 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    sub_214B95764(v13 + *(int *)(v14 + 24), v12, &qword_26784E098);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
    {
      sub_214B59CE0(*(void *)(v0 + 4792), &qword_26784E098);
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 4776);
      sub_214C22244(*(void *)(v0 + 4792), *(void *)(v0 + 4816));
      int v16 = *(unsigned __int8 *)(v15 + *(int *)(v14 + 28));
      uint64_t v17 = *(void *)(v0 + 4816);
      if (v16 != 2)
      {
        uint64_t v73 = AssessmentTiming.assessmentReadyBeforeFeedbackDuration.getter();
        char v71 = v18 & 1;
        uint64_t v70 = AssessmentTiming.updateToAssessmentDuration.getter();
        char v69 = v19 & 1;
        uint64_t v68 = AssessmentTiming.requestToReturnDuration.getter();
        char v21 = v20 & 1;
        uint64_t v22 = v9;
        if (v16) {
          uint64_t v23 = 0x74756F656D6974;
        }
        else {
          uint64_t v23 = 0x6465747365676E69;
        }
        if (v16) {
          uint64_t v24 = 0xE700000000000000;
        }
        else {
          uint64_t v24 = 0xE800000000000000;
        }
        swift_beginAccess();
        sub_214B78664(v22, v7, v73, v71, v70, v69, v68, v21, v23, v24);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      sub_214C225BC(v17, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
    }
    uint64_t v6 = v8;
  }
  uint64_t v25 = *(void *)(v0 + 4784);
  swift_beginAccess();
  sub_214B6AC38(v25 + 440, v79, &qword_26784D710);
  int v26 = *(unsigned __int8 *)(v25 + 113);
  uint64_t v27 = *(void *)(v25 + 120);
  uint64_t v28 = *(void *)(v25 + 128);
  *(void *)(v0 + 4824) = v28;
  if (v26 != 1) {
    goto LABEL_21;
  }
  if (v28)
  {
    sub_214B6AC38(v79, v0 + 3976, &qword_26784D710);
    if (sub_214B78A5C(v0 + 3976) == 1)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
    if (v6)
    {
      long long v29 = *(_OWORD *)(v0 + 4152);
      *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 4136);
      *(_OWORD *)(v0 + 4368) = v29;
      *(_OWORD *)(v0 + 4384) = *(_OWORD *)(v0 + 4168);
      long long v30 = *(_OWORD *)(v0 + 4088);
      *(_OWORD *)(v0 + 4288) = *(_OWORD *)(v0 + 4072);
      *(_OWORD *)(v0 + 4304) = v30;
      long long v31 = *(_OWORD *)(v0 + 4120);
      *(_OWORD *)(v0 + 4320) = *(_OWORD *)(v0 + 4104);
      *(_OWORD *)(v0 + 4336) = v31;
      long long v32 = *(_OWORD *)(v0 + 4024);
      *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v0 + 4008);
      *(_OWORD *)(v0 + 4240) = v32;
      long long v33 = *(_OWORD *)(v0 + 4056);
      *(_OWORD *)(v0 + 4256) = *(_OWORD *)(v0 + 4040);
      *(_OWORD *)(v0 + 4272) = v33;
      long long v34 = *(_OWORD *)(v0 + 3992);
      *(_OWORD *)(v0 + 4192) = *(_OWORD *)(v0 + 3976);
      *(unsigned char *)(v0 + 4400) = *(unsigned char *)(v0 + 4184);
      *(_OWORD *)(v0 + 4208) = v34;
      sub_214C2209C(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C21EB0);
      swift_bridgeObjectRetain();
      long long v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 4832) = v35;
      *long long v35 = v0;
      v35[1] = sub_214C21018;
      return sub_214C2D670(v74, v6, v27, v28, v0 + 4192);
    }
LABEL_21:
    sub_214C2209C(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C21EB0);
    goto LABEL_22;
  }
  sub_214C2209C(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C21EB0);
LABEL_24:
  uint64_t v37 = *(void *)(v0 + 4784);
  uint64_t v38 = *(void *)(v37 + 704);
  uint64_t v39 = *(void *)(v37 + 712);
  __swift_project_boxed_opaque_existential_1(v77, v38);
  LOBYTE(v82) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v39 + 32))(0xD00000000000001ALL, 0x8000000214D35640, &v82, v38, v39);
  if (v26)
  {
    if (v28)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)(v37 + 704);
      uint64_t v41 = *(void *)(v37 + 712);
      __swift_project_boxed_opaque_existential_1(v77, v40);
      sub_214BD7608(&v82);
      Loggable.info(_:category:)(0xD00000000000003CLL, 0x8000000214D35730, (char *)&v82, v40, v41);
    }
    sub_214B6AC38(v79, v0 + 3760, &qword_26784D710);
    if (sub_214B78A5C(v0 + 3760) == 1)
    {
      sub_214C21FBC();
      swift_allocError();
      *long long v42 = 0x8000000000000010;
      swift_willThrow();
      goto LABEL_56;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = *(void *)(v0 + 4776);
  uint64_t v44 = *(void *)(v43 + 24);
  uint64_t v45 = *(void *)(v0 + 4784);
  if (v44)
  {
    uint64_t v46 = v0 + 3184;
    uint64_t v47 = *(void *)(v45 + 656);
    if (*(void *)(v47 + 16))
    {
      uint64_t v48 = *(void *)(v43 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_214B87FEC(v48, v44);
      if (v50)
      {
        unint64_t v51 = (const void *)(*(void *)(v47 + 56) + 288 * v49);
        memcpy((void *)(v0 + 304), v51, 0x120uLL);
        memmove((void *)(v0 + 592), v51, 0x120uLL);
        nullsub_1(v0 + 592);
        sub_214B939C0((void *)(v0 + 304));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = v0 + 592;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214B78DBC((_OWORD *)(v0 + 1456));
        uint64_t v52 = v0 + 1456;
      }
    }
    else
    {
      sub_214B78DBC((_OWORD *)(v0 + 3472));
      uint64_t v52 = v0 + 3472;
    }
    sub_214B6AC38(v52, v0 + 3184, &qword_26784CEC8);
  }
  else
  {
    uint64_t v46 = v0 + 1168;
    sub_214B6AC38(v45 + 152, v0 + 1168, &qword_26784CEC8);
    sub_214C22010(v0 + 1168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B79130);
  }
  sub_214B6AC38(v46, v0 + 880, &qword_26784CEC8);
  uint64_t v53 = *(void *)(v0 + 4784);
  int v54 = *(unsigned __int8 *)(v53 + 112);
  uint64_t v56 = *(void *)(v53 + 120);
  uint64_t v55 = *(void *)(v53 + 128);
  *(void *)(v0 + 4848) = v55;
  if (v54 != 1)
  {
    char v76 = v54;
    uint64_t v78 = v0 + 880;
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  if (!v55)
  {
    char v76 = 1;
    uint64_t v78 = v0 + 880;
    goto LABEL_45;
  }
  sub_214B6AC38(v0 + 880, v0 + 2320, &qword_26784CEC8);
  if (sub_214B78A5C(v0 + 2320) == 1)
  {
    char v76 = 1;
    uint64_t v78 = v0 + 880;
    swift_bridgeObjectRetain();
    uint64_t v53 = *(void *)(v0 + 4784);
LABEL_45:
    sub_214B93DCC(v53 + 680, v0 + 4664);
    uint64_t v75 = *(void *)(v0 + 4688);
    uint64_t v72 = *(void *)(v0 + 4696);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 4664), v75);
    unint64_t v82 = 0;
    unint64_t v83 = 0xE000000000000000;
    sub_214D1A7A8();
    unint64_t v80 = v82;
    unint64_t v81 = v83;
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214B6AC38(v78, v0 + 1744, &qword_26784CEC8);
    sub_214B78A5C(v0 + 1744);
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    LOBYTE(v82) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t))(v72 + 32))(v80, v81, &v82, v75);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 4664);
    if (v76)
    {
      if (v55)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v63 = *(void **)(v0 + 4784);
        uint64_t v64 = v63[88];
        uint64_t v65 = v63[89];
        __swift_project_boxed_opaque_existential_1(v63 + 85, v64);
        sub_214BD7608(&v82);
        Loggable.info(_:category:)(0xD00000000000003CLL, 0x8000000214D356F0, (char *)&v82, v64, v65);
      }
      sub_214B6AC38(v78, v0 + 2032, &qword_26784CEC8);
      if (sub_214B78A5C(v0 + 2032) != 1)
      {
        sub_214C22010(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
        sub_214C2209C(v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_57;
      }
      sub_214C21FBC();
      swift_allocError();
      *uint64_t v66 = 0x8000000000000018;
      swift_willThrow();
      uint64_t v61 = v0 + 4408;
    }
    else
    {
      uint64_t v57 = *(void **)(v0 + 4784);
      swift_bridgeObjectRelease();
      uint64_t v58 = v57[88];
      uint64_t v59 = v57[89];
      __swift_project_boxed_opaque_existential_1(v57 + 85, v58);
      LOBYTE(v82) = 12;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v59 + 32))(0xD00000000000001ALL, 0x8000000214D356D0, &v82, v58, v59);
      sub_214C21FBC();
      swift_allocError();
      *uint64_t v60 = 0x8000000000000008;
      swift_willThrow();
      sub_214C22010(v78, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
      uint64_t v61 = v0 + 4408;
    }
    sub_214C2209C(v61, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
LABEL_56:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
LABEL_57:
    return v67();
  }
  memcpy((void *)(v0 + 2608), (const void *)(v0 + 2320), 0x120uLL);
  swift_bridgeObjectRetain();
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B79130);
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 4856) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_214C21834;
  return sub_214C2DEFC((void *)(v0 + 2608), v56, v55);
}

uint64_t sub_214C21018()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 4840) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 4784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_214C21AEC;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 4784);
    uint64_t v4 = sub_214C21140;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_214C21140()
{
  uint64_t v31 = v0;
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 4776);
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = v0 + 3184;
    uint64_t v4 = *(void *)(*(void *)(v0 + 4784) + 656);
    if (*(void *)(v4 + 16))
    {
      uint64_t v5 = *(void *)(v1 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_214B87FEC(v5, v2);
      if (v7)
      {
        uint64_t v8 = (const void *)(*(void *)(v4 + 56) + 288 * v6);
        memcpy((void *)(v0 + 304), v8, 0x120uLL);
        memmove((void *)(v0 + 592), v8, 0x120uLL);
        nullsub_1(v0 + 592);
        sub_214B939C0((void *)(v0 + 304));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v0 + 592;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_214B78DBC((_OWORD *)(v0 + 1456));
        uint64_t v9 = v0 + 1456;
      }
    }
    else
    {
      sub_214B78DBC((_OWORD *)(v0 + 3472));
      uint64_t v9 = v0 + 3472;
    }
    sub_214B6AC38(v9, v0 + 3184, &qword_26784CEC8);
  }
  else
  {
    uint64_t v3 = v0 + 1168;
    sub_214B6AC38(*(void *)(v0 + 4784) + 152, v0 + 1168, &qword_26784CEC8);
    sub_214C22010(v0 + 1168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B79130);
  }
  sub_214B6AC38(v3, v0 + 880, &qword_26784CEC8);
  uint64_t v10 = *(void *)(v0 + 4784);
  int v11 = *(unsigned __int8 *)(v10 + 112);
  uint64_t v13 = *(void *)(v10 + 120);
  uint64_t v12 = *(void *)(v10 + 128);
  *(void *)(v0 + 4848) = v12;
  if (v11 != 1)
  {
    char v28 = v11;
    uint64_t v14 = v0 + 880;
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (!v12)
  {
    char v28 = 1;
    uint64_t v14 = v0 + 880;
LABEL_15:
    sub_214B93DCC(v10 + 680, v0 + 4664);
    uint64_t v29 = *(void *)(v0 + 4688);
    uint64_t v15 = *(void *)(v0 + 4696);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 4664), v29);
    v30[0] = 12;
    v30[1] = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214B6AC38(v14, v0 + 1744, &qword_26784CEC8);
    sub_214B78A5C(v0 + 1744);
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    (*(void (**)(void, unint64_t, void *, uint64_t, uint64_t))(v15 + 32))(0, 0xE000000000000000, v30, v29, v15);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 4664);
    if (v28)
    {
      if (v12)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void **)(v0 + 4784);
        uint64_t v24 = v23[88];
        uint64_t v25 = v23[89];
        __swift_project_boxed_opaque_existential_1(v23 + 85, v24);
        sub_214BD7608(v30);
        Loggable.info(_:category:)(0xD00000000000003CLL, 0x8000000214D356F0, (char *)v30, v24, v25);
      }
      sub_214B6AC38(v14, v0 + 2032, &qword_26784CEC8);
      if (sub_214B78A5C(v0 + 2032) != 1)
      {
        sub_214C22010(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
        sub_214C2209C(v0 + 4408, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_27;
      }
      sub_214C21FBC();
      swift_allocError();
      *int v26 = 0x8000000000000018;
      swift_willThrow();
      uint64_t v20 = v0 + 4408;
    }
    else
    {
      int v16 = *(void **)(v0 + 4784);
      swift_bridgeObjectRelease();
      uint64_t v17 = v16[88];
      uint64_t v18 = v16[89];
      __swift_project_boxed_opaque_existential_1(v16 + 85, v17);
      LOBYTE(v30[0]) = 12;
      (*(void (**)(unint64_t, unint64_t, void *, uint64_t, uint64_t))(v18 + 32))(0xD00000000000001ALL, 0x8000000214D356D0, v30, v17, v18);
      sub_214C21FBC();
      swift_allocError();
      *char v19 = 0x8000000000000008;
      swift_willThrow();
      sub_214C22010(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
      uint64_t v20 = v0 + 4408;
    }
    sub_214C2209C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
LABEL_27:
    return v27();
  }
  sub_214B6AC38(v0 + 880, v0 + 2320, &qword_26784CEC8);
  if (sub_214B78A5C(v0 + 2320) == 1)
  {
    char v28 = 1;
    uint64_t v14 = v0 + 880;
    swift_bridgeObjectRetain();
    uint64_t v10 = *(void *)(v0 + 4784);
    goto LABEL_15;
  }
  memcpy((void *)(v0 + 2608), (const void *)(v0 + 2320), 0x120uLL);
  swift_bridgeObjectRetain();
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B79130);
  char v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 4856) = v21;
  void *v21 = v0;
  v21[1] = sub_214C21834;
  return sub_214C2DEFC((void *)(v0 + 2608), v13, v12);
}

uint64_t sub_214C21834()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 4864) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 4784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_214C21BB8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 4784);
    uint64_t v4 = sub_214C2195C;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_214C2195C()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void *)(v0 + 4776);
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_214CDC8E8(&v7, v3, v2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + 4784);
  sub_214B78DBC((_OWORD *)(v0 + 16));
  v4 += 152;
  sub_214B6AC38(v4, v0 + 2896, &qword_26784CEC8);
  sub_214B6AC38(v0 + 16, v4, &qword_26784CEC8);
  sub_214C22010(v0 + 2896, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  swift_bridgeObjectRelease();
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  sub_214C2209C(v0 + 4408, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_214C21AEC()
{
  uint64_t v1 = *(void *)(v0 + 4840);
  sub_214C21FBC();
  swift_allocError();
  *uint64_t v2 = v1;
  swift_willThrow();
  sub_214C2209C(v0 + 4408, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214C21BB8()
{
  unint64_t v1 = *(void *)(v0 + 4864);
  sub_214C21FBC();
  swift_allocError();
  *uint64_t v2 = v1 | 0x4000000000000000;
  id v3 = (id)v1;
  swift_willThrow();
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);
  sub_214C2209C(v0 + 4408, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_214C22118);
  sub_214C22010(v0 + 880, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_214B78EFC);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214C21CD0(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 136) = a6;
  *(void *)(v7 + 144) = v6;
  *(void *)(v7 + 120) = a4;
  *(void *)(v7 + 128) = a5;
  *(void *)(v7 + 112) = a3;
  *(unsigned char *)(v7 + 153) = a2;
  *(unsigned char *)(v7 + 152) = a1;
  return MEMORY[0x270FA2498](sub_214C21D00, v6, 0);
}

uint64_t sub_214C21D00()
{
  int v1 = *(unsigned __int8 *)(v0 + 152);
  if (v1 != 2)
  {
    uint64_t v2 = *(void *)(v0 + 144);
    char v3 = v1 & 1;
    swift_beginAccess();
    *(unsigned char *)(v2 + 113) = v3;
  }
  int v4 = *(unsigned __int8 *)(v0 + 153);
  if (v4 != 2)
  {
    uint64_t v5 = *(void *)(v0 + 144);
    char v6 = v4 & 1;
    swift_beginAccess();
    *(unsigned char *)(v5 + 112) = v6;
  }
  uint64_t v7 = *(void *)(v0 + 120);
  if (v7)
  {
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 112);
    swift_beginAccess();
    *(void *)(v8 + 136) = v9;
    *(void *)(v8 + 144) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)(v0 + 136);
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 128);
    swift_beginAccess();
    *(void *)(v11 + 120) = v12;
    *(void *)(v11 + 128) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_214C21E30()
{
  memcpy(v2, (const void *)(v0 + 112), sizeof(v2));
  sub_214C22728((uint64_t)v2);

  __swift_destroy_boxed_opaque_existential_1(v0 + 680);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager()
{
  return self;
}

uint64_t sub_214C21EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214B79260(a5, a6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_214B792C4(a17, a18, a19, a20, a21);
    return swift_retain();
  }
  return result;
}

unint64_t sub_214C21FBC()
{
  unint64_t result = qword_26784E0A0;
  if (!qword_26784E0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E0A0);
  }
  return result;
}

uint64_t sub_214C22010(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    *(void *)(a1 + 272),
    *(void *)(a1 + 280));
  return a1;
}

uint64_t sub_214C2209C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4);
  return a1;
}

uint64_t sub_214C22118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B7902C(a5, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B79090(a17, a18, a19, a20, a21);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784E0D8);
}

uint64_t sub_214C22244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_214C222A8(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v8 = a1[17];
  uint64_t v9 = a1[16];
  uint64_t v6 = a1[19];
  uint64_t v7 = a1[18];
  uint64_t v5 = a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B79260(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214B792C4(v9, v8, v7, v6, v5);
  swift_retain();
  return a1;
}

uint64_t sub_214C22398(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_214C223E8()
{
  unint64_t result = qword_26784E0B8;
  if (!qword_26784E0B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784E0B0);
    sub_214BA53C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E0B8);
  }
  return result;
}

uint64_t sub_214C2245C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(uint64_t a1)
{
  return sub_214B794F8(a1, (uint64_t *)&unk_26784E0C0);
}

void *sub_214C224CC(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v8 = a1[17];
  uint64_t v9 = a1[16];
  uint64_t v6 = a1[19];
  uint64_t v7 = a1[18];
  uint64_t v5 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B7902C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B79090(v9, v8, v7, v6, v5);
  swift_release();
  return a1;
}

uint64_t sub_214C225BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_214C2261C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v8 = a1[21];
  uint64_t v9 = a1[20];
  uint64_t v6 = a1[23];
  uint64_t v7 = a1[22];
  uint64_t v5 = a1[24];
  swift_bridgeObjectRelease();
  sub_214B7902C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_214B79090(v9, v8, v7, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C22728(uint64_t a1)
{
  uint64_t v33 = *(void *)(a1 + 48);
  uint64_t v34 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a1 + 64);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v29 = *(void *)(a1 + 80);
  uint64_t v30 = *(void *)(a1 + 72);
  uint64_t v27 = *(void *)(a1 + 96);
  uint64_t v28 = *(void *)(a1 + 88);
  long long v19 = *(_OWORD *)(a1 + 104);
  long long v17 = *(_OWORD *)(a1 + 120);
  long long v15 = *(_OWORD *)(a1 + 136);
  long long v13 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 168);
  long long v9 = *(_OWORD *)(a1 + 184);
  long long v7 = *(_OWORD *)(a1 + 200);
  long long v5 = *(_OWORD *)(a1 + 216);
  long long v4 = *(_OWORD *)(a1 + 232);
  uint64_t v2 = *(void *)(a1 + 328);
  uint64_t v25 = *(void *)(a1 + 344);
  uint64_t v26 = *(void *)(a1 + 336);
  uint64_t v23 = *(void *)(a1 + 360);
  uint64_t v24 = *(void *)(a1 + 352);
  uint64_t v21 = *(void *)(a1 + 376);
  uint64_t v22 = *(void *)(a1 + 368);
  uint64_t v20 = *(void *)(a1 + 384);
  long long v18 = *(_OWORD *)(a1 + 392);
  long long v16 = *(_OWORD *)(a1 + 408);
  long long v14 = *(_OWORD *)(a1 + 424);
  long long v12 = *(_OWORD *)(a1 + 440);
  long long v10 = *(_OWORD *)(a1 + 456);
  long long v8 = *(_OWORD *)(a1 + 472);
  long long v6 = *(_OWORD *)(a1 + 488);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_214B78EFC(v34, v33, v32, v31, v30, v29, v28, v27, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v15, *((uint64_t *)&v15 + 1), v13, *((uint64_t *)&v13 + 1), v11, *((uint64_t *)&v11 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_214C22118(v2, v26, v25, v24, v23, v22, v21, v20, v18, *((uint64_t *)&v18 + 1), v16, *((uint64_t *)&v16 + 1), v14, *((uint64_t *)&v14 + 1), v12, *((uint64_t *)&v12 + 1), v10, *((uint64_t *)&v10 + 1), v8,
    *((uint64_t *)&v8 + 1),
    v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C22974(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_214C229B4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_214C229F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      uint64_t v11 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      uint64_t v12 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v12;
      uint64_t v13 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v15;
      long long v16 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v16;
    }
    uint64_t v17 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v17;
    uint64_t v18 = a2[17];
    swift_bridgeObjectRetain();
    if (v18)
    {
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v18;
      uint64_t v19 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v19;
      uint64_t v20 = a2[21];
      *(void *)(a1 + 160) = a2[20];
      *(void *)(a1 + 168) = v20;
      uint64_t v21 = a2[23];
      *(void *)(a1 + 176) = a2[22];
      *(void *)(a1 + 184) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v22;
      long long v23 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v23;
    }
    uint64_t v24 = a2[25];
    *(void *)(a1 + 192) = a2[24];
    *(void *)(a1 + 200) = v24;
    uint64_t v25 = a2[27];
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(void *)(a1 + 208) = a2[26];
      *(void *)(a1 + 216) = v25;
      uint64_t v26 = a2[29];
      *(void *)(a1 + 224) = a2[28];
      *(void *)(a1 + 232) = v26;
      uint64_t v27 = a2[31];
      *(void *)(a1 + 240) = a2[30];
      *(void *)(a1 + 248) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 224) = v28;
      *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    }
    uint64_t v29 = a2[33];
    *(void *)(a1 + 256) = a2[32];
    *(void *)(a1 + 264) = v29;
    *(void *)(a1 + 272) = a2[34];
    uint64_t v30 = a2[39];
    swift_bridgeObjectRetain();
    if (v30 == 1)
    {
      long long v31 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(a1 + 296) = v31;
      *(void *)(a1 + 312) = a2[39];
    }
    else
    {
      uint64_t v32 = a2[36];
      *(void *)(a1 + 280) = a2[35];
      *(void *)(a1 + 288) = v32;
      *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
      *(void *)(a1 + 304) = a2[38];
      *(void *)(a1 + 312) = v30;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 320) = *((unsigned char *)a2 + 320);
    uint64_t v33 = a2[42];
    *(void *)(a1 + 328) = a2[41];
    *(void *)(a1 + 336) = v33;
    *(unsigned char *)(a1 + 344) = *((unsigned char *)a2 + 344);
    uint64_t v34 = a2[45];
    *(void *)(a1 + 352) = a2[44];
    *(void *)(a1 + 360) = v34;
    *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
    uint64_t v35 = a2[48];
    *(void *)(a1 + 376) = a2[47];
    *(void *)(a1 + 384) = v35;
    *(void *)(a1 + 392) = a2[49];
    LOBYTE(v34) = *((unsigned char *)a2 + 400);
    uint64_t v36 = *(int *)(a3 + 88);
    uint64_t v37 = (uint64_t *)((char *)a2 + v36);
    uint64_t v38 = (void *)(a1 + v36);
    *(unsigned char *)(a1 + 400) = v34;
    uint64_t v39 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v41(v37, 1, v39))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
      memcpy(v38, v37, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v88 = v39;
      uint64_t v89 = v40;
      uint64_t v43 = v37[1];
      *uint64_t v38 = *v37;
      v38[1] = v43;
      uint64_t v44 = v37[3];
      _OWORD v38[2] = v37[2];
      v38[3] = v44;
      uint64_t v45 = *(int *)(v39 + 24);
      uint64_t v90 = v38;
      uint64_t v46 = (char *)v38 + v45;
      uint64_t v47 = (char *)v37 + v45;
      uint64_t v48 = (int *)type metadata accessor for AssessmentTiming();
      uint64_t v49 = *((void *)v48 - 1);
      char v50 = *(unsigned int (**)(char *, uint64_t, int *))(v49 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50(v47, 1, v48))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
        memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v52 = v88;
        uint64_t v53 = v40;
      }
      else
      {
        uint64_t v54 = sub_214D1A8C8();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
        v56(v46, v47, v54);
        v56(&v46[v48[5]], &v47[v48[5]], v54);
        uint64_t v57 = v48[6];
        __dst = &v46[v57];
        uint64_t v58 = &v47[v57];
        uint64_t v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        uint64_t v85 = v55;
        uint64_t v86 = v56;
        if (v91(&v47[v57], 1, v54))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(__dst, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          v56(__dst, v58, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v54);
        }
        uint64_t v60 = v48[7];
        uint64_t v61 = &v46[v60];
        uint64_t v62 = &v47[v60];
        if (v91(&v47[v60], 1, v54))
        {
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          v56(v61, v62, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v61, 0, 1, v54);
        }
        uint64_t v64 = v48[8];
        uint64_t v65 = &v46[v64];
        uint64_t v66 = &v47[v64];
        if (v91(&v47[v64], 1, v54))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          v56(v65, v66, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v54);
        }
        uint64_t v68 = v48[9];
        char v69 = &v46[v68];
        uint64_t v70 = &v47[v68];
        if (v91(&v47[v68], 1, v54))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          v56(v69, v70, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v69, 0, 1, v54);
        }
        uint64_t v72 = v48[10];
        uint64_t v73 = &v46[v72];
        uint64_t v74 = &v47[v72];
        unint64_t v87 = v48;
        if (v91(&v47[v72], 1, v54))
        {
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
          uint64_t v53 = v89;
          char v76 = v86;
        }
        else
        {
          uint64_t v77 = v74;
          char v76 = v56;
          v56(v73, v77, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v73, 0, 1, v54);
          uint64_t v53 = v89;
        }
        uint64_t v78 = v48[11];
        uint64_t v79 = &v46[v78];
        unint64_t v80 = &v47[v78];
        if (v91(&v47[v78], 1, v54))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          v76(v79, v80, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v79, 0, 1, v54);
        }
        uint64_t v52 = v88;
        (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v46, 0, 1, v87);
      }
      *((unsigned char *)v90 + *(int *)(v52 + 28)) = *((unsigned char *)v37 + *(int *)(v52 + 28));
      *(void *)((char *)v90 + *(int *)(v52 + 32)) = *(void *)((char *)v37 + *(int *)(v52 + 32));
      unint64_t v82 = *(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56);
      swift_bridgeObjectRetain();
      v82(v90, 0, 1, v52);
    }
  }
  return a1;
}

uint64_t sub_214C232E0(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[39] != 1) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v4 = (char *)a1 + *(int *)(a2 + 88);
  uint64_t v5 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = &v4[*(int *)(v5 + 24)];
    uint64_t v8 = (int *)type metadata accessor for AssessmentTiming();
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
    {
      uint64_t v9 = sub_214D1A8C8();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(char *, uint64_t))(v10 + 8);
      v11(v7, v9);
      v11(&v7[v8[5]], v9);
      uint64_t v12 = &v7[v8[6]];
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (!v13(v12, 1, v9)) {
        v11(v12, v9);
      }
      uint64_t v14 = &v7[v8[7]];
      if (!v13(v14, 1, v9)) {
        v11(v14, v9);
      }
      long long v15 = &v7[v8[8]];
      if (!v13(v15, 1, v9)) {
        v11(v15, v9);
      }
      long long v16 = &v7[v8[9]];
      if (!v13(v16, 1, v9)) {
        v11(v16, v9);
      }
      uint64_t v17 = &v7[v8[10]];
      if (!v13(v17, 1, v9)) {
        v11(v17, v9);
      }
      uint64_t v18 = &v7[v8[11]];
      if (!v13(v18, 1, v9)) {
        v11(v18, v9);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214C23690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v11;
    uint64_t v12 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    long long v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  uint64_t v16 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v16;
    uint64_t v17 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v17;
    uint64_t v18 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v18;
    uint64_t v19 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    long long v21 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v21;
  }
  uint64_t v22 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v22;
  uint64_t v23 = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v23;
    uint64_t v24 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v24;
    uint64_t v25 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v26;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  }
  uint64_t v27 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v27;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  uint64_t v28 = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    long long v29 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v29;
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
  }
  else
  {
    uint64_t v30 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v30;
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v28;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  uint64_t v31 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v31;
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  uint64_t v32 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v32;
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  uint64_t v33 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v33;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  LOBYTE(v32) = *(unsigned char *)(a2 + 400);
  uint64_t v34 = *(int *)(a3 + 88);
  uint64_t v35 = (void *)(a2 + v34);
  uint64_t v36 = (void *)(a1 + v34);
  *(unsigned char *)(a1 + 400) = v32;
  uint64_t v37 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v39(v35, 1, v37))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    memcpy(v36, v35, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    unint64_t v87 = v36;
    uint64_t v88 = v38;
    uint64_t v41 = v35[1];
    *uint64_t v36 = *v35;
    v36[1] = v41;
    uint64_t v42 = v35[3];
    _OWORD v36[2] = v35[2];
    void v36[3] = v42;
    uint64_t v86 = v37;
    uint64_t v43 = *(int *)(v37 + 24);
    uint64_t v44 = (char *)v36 + v43;
    uint64_t v45 = (char *)v35 + v43;
    uint64_t v46 = type metadata accessor for AssessmentTiming();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
      memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v38;
      uint64_t v51 = v86;
    }
    else
    {
      uint64_t v83 = v47;
      uint64_t v52 = sub_214D1A8C8();
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      v54(v44, v45, v52);
      v54(&v44[*(int *)(v46 + 20)], &v45[*(int *)(v46 + 20)], v52);
      uint64_t v85 = (int *)v46;
      uint64_t v55 = *(int *)(v46 + 24);
      uint64_t v56 = &v44[v55];
      uint64_t v57 = &v45[v55];
      uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      uint64_t v84 = v53;
      if (v89(&v45[v55], 1, v52))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        v54(v56, v57, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v56, 0, 1, v52);
      }
      uint64_t v59 = v85[7];
      uint64_t v60 = &v44[v59];
      uint64_t v61 = &v45[v59];
      if (v89(&v45[v59], 1, v52))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        v54(v60, v61, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v60, 0, 1, v52);
      }
      uint64_t v63 = v85[8];
      uint64_t v64 = &v44[v63];
      uint64_t v65 = &v45[v63];
      if (v89(&v45[v63], 1, v52))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        v54(v64, v65, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v64, 0, 1, v52);
      }
      uint64_t v67 = v85[9];
      uint64_t v68 = &v44[v67];
      char v69 = &v45[v67];
      if (v89(&v45[v67], 1, v52))
      {
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        v54(v68, v69, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v68, 0, 1, v52);
      }
      uint64_t v71 = v85[10];
      uint64_t v72 = &v44[v71];
      uint64_t v73 = &v45[v71];
      if (v89(&v45[v71], 1, v52))
      {
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        uint64_t v75 = v54;
      }
      else
      {
        char v76 = v73;
        uint64_t v75 = v54;
        v54(v72, v76, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v72, 0, 1, v52);
      }
      uint64_t v77 = v85[11];
      uint64_t v78 = &v44[v77];
      uint64_t v79 = &v45[v77];
      uint64_t v50 = v88;
      if (v89(&v45[v77], 1, v52))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        v75(v78, v79, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v78, 0, 1, v52);
      }
      uint64_t v51 = v86;
      (*(void (**)(char *, void, uint64_t, int *))(v83 + 56))(v44, 0, 1, v85);
    }
    *((unsigned char *)v87 + *(int *)(v51 + 28)) = *((unsigned char *)v35 + *(int *)(v51 + 28));
    *(void *)((char *)v87 + *(int *)(v51 + 32)) = *(void *)((char *)v35 + *(int *)(v51 + 32));
    uint64_t v81 = *(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56);
    swift_bridgeObjectRetain();
    v81(v87, 0, 1, v51);
  }
  return a1;
}

uint64_t sub_214C23F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 48);
  uint64_t v7 = (long long *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v8)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 48);
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v11 = *v7;
      long long v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *uint64_t v6 = v11;
      *(_OWORD *)(a1 + 64) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v7;
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *uint64_t v6 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (_OWORD *)(a1 + 128);
  uint64_t v16 = (long long *)(a2 + 128);
  uint64_t v17 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v17)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 128);
      long long v18 = *(_OWORD *)(a2 + 176);
      long long v20 = *v16;
      long long v19 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v18;
      *uint64_t v15 = v20;
      *(_OWORD *)(a1 + 144) = v19;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = *(_OWORD *)(a2 + 144);
    long long v23 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
    *uint64_t v15 = v21;
    *(_OWORD *)(a1 + 144) = v22;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (_OWORD *)(a1 + 208);
  uint64_t v25 = (_OWORD *)(a2 + 208);
  uint64_t v26 = *(void *)(a2 + 216);
  if (*(void *)(a1 + 216))
  {
    if (v26)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214C25930(a1 + 208);
      long long v28 = *(_OWORD *)(a2 + 224);
      long long v27 = *(_OWORD *)(a2 + 240);
      *uint64_t v24 = *v25;
      *(_OWORD *)(a1 + 224) = v28;
      *(_OWORD *)(a1 + 240) = v27;
    }
  }
  else if (v26)
  {
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v25;
    long long v30 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v30;
    *uint64_t v24 = v29;
  }
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  uint64_t v31 = (long long *)(a1 + 280);
  uint64_t v32 = (long long *)(a2 + 280);
  uint64_t v33 = *(void *)(a2 + 312);
  if (*(void *)(a1 + 312) == 1)
  {
    if (v33 == 1)
    {
      long long v34 = *v32;
      long long v35 = *(_OWORD *)(a2 + 296);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *uint64_t v31 = v34;
      *(_OWORD *)(a1 + 296) = v35;
    }
    else
    {
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      uint64_t v38 = *(void *)(a2 + 288);
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 288) = v38;
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      swift_bridgeObjectRetain();
    }
  }
  else if (v33 == 1)
  {
    sub_214B78054(a1 + 280);
    uint64_t v36 = *(void *)(a2 + 312);
    long long v37 = *(_OWORD *)(a2 + 296);
    *uint64_t v31 = *v32;
    *(_OWORD *)(a1 + 296) = v37;
    *(void *)(a1 + 312) = v36;
  }
  else
  {
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    uint64_t v39 = *(void *)(a2 + 288);
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 288) = v39;
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_retain();
  swift_release();
  uint64_t v40 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v40;
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_retain();
  swift_release();
  uint64_t v41 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 360) = v41;
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v42;
  uint64_t v43 = *(int *)(a3 + 88);
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  uint64_t v47 = *((void *)v46 - 1);
  uint64_t v48 = *(uint64_t (**)(void *, uint64_t, int *))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_214C225BC((uint64_t)v44, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
      goto LABEL_35;
    }
    *uint64_t v44 = *v45;
    v44[1] = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v44[2] = v45[2];
    v44[3] = v45[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v61 = v46[6];
    uint64_t v62 = (char *)v44 + v61;
    uint64_t v63 = (char *)v45 + v61;
    uint64_t v64 = (int *)type metadata accessor for AssessmentTiming();
    uint64_t v65 = *((void *)v64 - 1);
    uint64_t v66 = *(uint64_t (**)(char *, uint64_t, int *))(v65 + 48);
    uint64_t v199 = (uint64_t)v62;
    LODWORD(v62) = v66(v62, 1, v64);
    int v67 = v66(v63, 1, v64);
    if (v62)
    {
      if (!v67)
      {
        uint64_t v181 = v65;
        v197 = v45;
        uint64_t v78 = sub_214D1A8C8();
        uint64_t v79 = v63;
        uint64_t v80 = *(void *)(v78 - 8);
        uint64_t v81 = *(void (**)(uint64_t, char *, uint64_t))(v80 + 16);
        v81(v199, v79, v78);
        v81(v199 + v64[5], &v79[v64[5]], v78);
        uint64_t v82 = v64[6];
        uint64_t v83 = (void *)(v199 + v82);
        v183 = v79;
        uint64_t v84 = &v79[v82];
        v194 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
        uint64_t v191 = v80;
        if (v194(v84, 1, v78))
        {
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v83, v84, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v83, 0, 1, v78);
        }
        uint64_t v119 = v64[7];
        uint64_t v120 = (void *)(v199 + v119);
        uint64_t v121 = &v183[v119];
        if (v194(&v183[v119], 1, v78))
        {
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v120, v121, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v120, 0, 1, v78);
        }
        uint64_t v123 = v64[8];
        uint64_t v124 = (void *)(v199 + v123);
        v125 = &v183[v123];
        if (v194(&v183[v123], 1, v78))
        {
          uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v124, v125, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v124, 0, 1, v78);
        }
        uint64_t v127 = v64[9];
        uint64_t v128 = (void *)(v199 + v127);
        char v129 = &v183[v127];
        if (v194(&v183[v127], 1, v78))
        {
          uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v128, v129, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v128, 0, 1, v78);
        }
        uint64_t v131 = v64[10];
        uint64_t v132 = (void *)(v199 + v131);
        uint64_t v133 = &v183[v131];
        if (v194(&v183[v131], 1, v78))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v132, v133, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v132, 0, 1, v78);
        }
        uint64_t v135 = v64[11];
        uint64_t v136 = (void *)(v199 + v135);
        uint64_t v137 = &v183[v135];
        uint64_t v45 = v197;
        if (v194(&v183[v135], 1, v78))
        {
          uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          v81((uint64_t)v136, v137, v78);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v191 + 56))(v136, 0, 1, v78);
        }
        (*(void (**)(uint64_t, void, uint64_t, int *))(v181 + 56))(v199, 0, 1, v64);
        goto LABEL_85;
      }
      size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
      char v69 = (void *)v199;
      goto LABEL_43;
    }
    if (v67)
    {
      sub_214C225BC(v199, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
      size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
      char v69 = (void *)v199;
LABEL_43:
      uint64_t v77 = v63;
      goto LABEL_44;
    }
    v198 = v45;
    uint64_t v109 = sub_214D1A8C8();
    uint64_t v110 = *(void *)(v109 - 8);
    uint64_t v111 = *(void (**)(uint64_t, char *, uint64_t))(v110 + 24);
    v111(v199, v63, v109);
    v182 = (void (*)(void *, char *, uint64_t))v111;
    v111(v199 + v64[5], &v63[v64[5]], v109);
    uint64_t v112 = v64[6];
    uint64_t v113 = &v63[v112];
    uint64_t v192 = v110;
    uint64_t v114 = *(uint64_t (**)(void))(v110 + 48);
    v184 = (void *)(v199 + v112);
    int v115 = v114();
    v195 = v114;
    int v116 = ((uint64_t (*)(char *, uint64_t, uint64_t))v114)(v113, 1, v109);
    if (v115)
    {
      if (v116)
      {
        size_t v117 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v118 = v184;
LABEL_89:
        memcpy(v118, v113, v117);
        goto LABEL_92;
      }
      (*(void (**)(void *, char *, uint64_t))(v110 + 16))(v184, v113, v109);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v184, 0, 1, v109);
    }
    else
    {
      if (v116)
      {
        (*(void (**)(void *, uint64_t))(v110 + 8))(v184, v109);
        size_t v117 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v118 = v184;
        goto LABEL_89;
      }
      v182(v184, v113, v109);
    }
LABEL_92:
    uint64_t v140 = v64[7];
    uint64_t v141 = (void *)(v199 + v140);
    uint64_t v142 = &v63[v140];
    int v143 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v195)(v199 + v140, 1, v109);
    uint64_t v144 = v109;
    int v145 = v143;
    __srca = v142;
    uint64_t v146 = v144;
    int v147 = ((uint64_t (*)(char *, uint64_t))v195)(v142, 1);
    if (v145)
    {
      if (v147)
      {
        uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v141, v142, *(void *)(*(void *)(v148 - 8) + 64));
        uint64_t v149 = v146;
      }
      else
      {
        uint64_t v153 = v141;
        v154 = v141;
        uint64_t v149 = v146;
        (*(void (**)(void *, char *, uint64_t))(v192 + 16))(v153, __srca, v146);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v154, 0, 1, v146);
      }
    }
    else if (v147)
    {
      v150 = v141;
      v151 = v141;
      uint64_t v149 = v146;
      (*(void (**)(void *, uint64_t))(v192 + 8))(v150, v146);
      uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v151, __srca, *(void *)(*(void *)(v152 - 8) + 64));
    }
    else
    {
      v155 = v141;
      uint64_t v149 = v146;
      v182(v155, v142, v146);
    }
    uint64_t v156 = v64[8];
    uint64_t v157 = &v63[v156];
    v185 = (void *)(v199 + v156);
    int v158 = v195();
    int v159 = ((uint64_t (*)(char *, uint64_t, uint64_t))v195)(v157, 1, v149);
    if (v158)
    {
      if (v159)
      {
        size_t v160 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v161 = v185;
LABEL_104:
        memcpy(v161, v157, v160);
        goto LABEL_107;
      }
      (*(void (**)(void *, char *, uint64_t))(v192 + 16))(v185, v157, v149);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v185, 0, 1, v149);
    }
    else
    {
      if (v159)
      {
        (*(void (**)(void *, uint64_t))(v192 + 8))(v185, v149);
        size_t v160 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v161 = v185;
        goto LABEL_104;
      }
      v182(v185, v157, v149);
    }
LABEL_107:
    uint64_t v162 = v64[9];
    unint64_t v163 = &v63[v162];
    v186 = (void *)(v199 + v162);
    int v164 = v195();
    int v165 = ((uint64_t (*)(char *, uint64_t, uint64_t))v195)(v163, 1, v149);
    if (v164)
    {
      if (v165)
      {
        size_t v166 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        unint64_t v167 = v186;
LABEL_112:
        memcpy(v167, v163, v166);
        goto LABEL_115;
      }
      (*(void (**)(void *, char *, uint64_t))(v192 + 16))(v186, v163, v149);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v186, 0, 1, v149);
    }
    else
    {
      if (v165)
      {
        (*(void (**)(void *, uint64_t))(v192 + 8))(v186, v149);
        size_t v166 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        unint64_t v167 = v186;
        goto LABEL_112;
      }
      v182(v186, v163, v149);
    }
LABEL_115:
    uint64_t v168 = v64[10];
    uint64_t v169 = &v63[v168];
    v187 = (void *)(v199 + v168);
    int v170 = v195();
    int v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v195)(v169, 1, v149);
    if (v170)
    {
      if (!v171)
      {
        (*(void (**)(void *, char *, uint64_t))(v192 + 16))(v187, v169, v149);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v187, 0, 1, v149);
        goto LABEL_123;
      }
      size_t v172 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      v173 = v187;
    }
    else
    {
      if (!v171)
      {
        v182(v187, v169, v149);
        goto LABEL_123;
      }
      (*(void (**)(void *, uint64_t))(v192 + 8))(v187, v149);
      size_t v172 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      v173 = v187;
    }
    memcpy(v173, v169, v172);
LABEL_123:
    uint64_t v45 = v198;
    uint64_t v174 = v64[11];
    v175 = (void *)(v199 + v174);
    v176 = &v63[v174];
    int v177 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v195)(v199 + v174, 1, v149);
    int v178 = ((uint64_t (*)(char *, uint64_t, uint64_t))v195)(v176, 1, v149);
    if (v177)
    {
      if (!v178)
      {
        (*(void (**)(void *, char *, uint64_t))(v192 + 16))(v175, v176, v149);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v192 + 56))(v175, 0, 1, v149);
        goto LABEL_85;
      }
    }
    else
    {
      if (!v178)
      {
        v182(v175, v176, v149);
        goto LABEL_85;
      }
      (*(void (**)(void *, uint64_t))(v192 + 8))(v175, v149);
    }
    size_t v68 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
    char v69 = v175;
    uint64_t v77 = v176;
LABEL_44:
    memcpy(v69, v77, v68);
LABEL_85:
    *((unsigned char *)v44 + v46[7]) = *((unsigned char *)v45 + v46[7]);
    *(void *)((char *)v44 + v46[8]) = *(void *)((char *)v45 + v46[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v50)
  {
LABEL_35:
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    memcpy(v44, v45, *(void *)(*(void *)(v60 - 8) + 64));
    return a1;
  }
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  v44[2] = v45[2];
  v44[3] = v45[3];
  v190 = v46;
  v193 = v44;
  uint64_t v51 = v46[6];
  uint64_t v52 = (char *)v44 + v51;
  v196 = v45;
  uint64_t v53 = (char *)v45 + v51;
  uint64_t v54 = type metadata accessor for AssessmentTiming();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v53, 1, v54))
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
    uint64_t v58 = v193;
    uint64_t v59 = v45;
  }
  else
  {
    uint64_t v179 = v55;
    uint64_t v70 = sub_214D1A8C8();
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
    v72(v52, v53, v70);
    v72(&v52[*(int *)(v54 + 20)], &v53[*(int *)(v54 + 20)], v70);
    __src = (int *)v54;
    uint64_t v73 = *(int *)(v54 + 24);
    uint64_t v74 = &v52[v73];
    uint64_t v75 = &v53[v73];
    v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    uint64_t v180 = v71;
    if (v200(&v53[v73], 1, v70))
    {
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      v72(v74, v75, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v74, 0, 1, v70);
    }
    uint64_t v86 = __src[7];
    unint64_t v87 = &v52[v86];
    uint64_t v88 = &v53[v86];
    if (v200(&v53[v86], 1, v70))
    {
      uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      v72(v87, v88, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v87, 0, 1, v70);
    }
    uint64_t v90 = __src[8];
    uint64_t v91 = &v52[v90];
    uint64_t v92 = &v53[v90];
    if (v200(&v53[v90], 1, v70))
    {
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      v72(v91, v92, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v91, 0, 1, v70);
    }
    uint64_t v94 = __src[9];
    uint64_t v95 = &v52[v94];
    long long v96 = &v53[v94];
    if (v200(&v53[v94], 1, v70))
    {
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      v72(v95, v96, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v95, 0, 1, v70);
    }
    uint64_t v98 = __src[10];
    uint64_t v99 = &v52[v98];
    uint64_t v100 = &v53[v98];
    if (v200(&v53[v98], 1, v70))
    {
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
      uint64_t v102 = v72;
    }
    else
    {
      uint64_t v103 = v100;
      uint64_t v102 = v72;
      v72(v99, v103, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v99, 0, 1, v70);
    }
    uint64_t v104 = __src[11];
    int v105 = &v52[v104];
    uint64_t v106 = &v53[v104];
    uint64_t v59 = v196;
    if (v200(&v53[v104], 1, v70))
    {
      uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      v102(v105, v106, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v180 + 56))(v105, 0, 1, v70);
    }
    uint64_t v58 = v193;
    (*(void (**)(char *, void, uint64_t, int *))(v179 + 56))(v52, 0, 1, __src);
  }
  *((unsigned char *)v58 + v190[7]) = *((unsigned char *)v59 + v190[7]);
  *(void *)((char *)v58 + v190[8]) = *(void *)((char *)v59 + v190[8]);
  uint64_t v108 = *(void (**)(void *, void, uint64_t, int *))(v47 + 56);
  swift_bridgeObjectRetain();
  v108(v58, 0, 1, v190);
  return a1;
}

uint64_t sub_214C25930(uint64_t a1)
{
  return a1;
}

uint64_t sub_214C25984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  long long v9 = *(_OWORD *)(a2 + 144);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  long long v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  long long v13 = *(_OWORD *)(a2 + 280);
  long long v14 = *(_OWORD *)(a2 + 296);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(_OWORD *)(a1 + 280) = v13;
  *(_OWORD *)(a1 + 296) = v14;
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  uint64_t v15 = *(void *)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = v15;
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  uint64_t v16 = *(void *)(a2 + 360);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = v16;
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  uint64_t v17 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v18 = *(int *)(a3 + 88);
  long long v19 = (_OWORD *)(a1 + v18);
  long long v20 = (_OWORD *)(a2 + v18);
  *(void *)(a1 + 392) = v17;
  long long v21 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    long long v24 = v20[1];
    *long long v19 = *v20;
    v19[1] = v24;
    uint64_t v25 = v21[6];
    uint64_t v26 = (char *)v19 + v25;
    long long v27 = (char *)v20 + v25;
    long long v28 = (int *)type metadata accessor for AssessmentTiming();
    uint64_t v29 = *((void *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v60 = v22;
      uint64_t v62 = v29;
      uint64_t v31 = sub_214D1A8C8();
      uint64_t v64 = *(void *)(v31 - 8);
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      v32(v26, v27, v31);
      v32(&v26[v28[5]], &v27[v28[5]], v31);
      uint64_t v61 = v27;
      uint64_t v33 = v28[6];
      uint64_t v66 = v26;
      long long v34 = &v26[v33];
      long long v35 = &v27[v33];
      uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      uint64_t v63 = v32;
      if (v65(&v27[v33], 1, v31))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v32(v34, v35, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v34, 0, 1, v31);
      }
      uint64_t v37 = v31;
      uint64_t v38 = v28[7];
      uint64_t v39 = &v66[v38];
      uint64_t v40 = &v27[v38];
      unsigned int v41 = v65(&v27[v38], 1, v31);
      uint64_t v22 = v60;
      if (v41)
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v63(v39, v40, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v39, 0, 1, v37);
      }
      uint64_t v43 = v28[8];
      uint64_t v44 = &v66[v43];
      uint64_t v45 = &v27[v43];
      if (v65(&v27[v43], 1, v37))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v63(v44, v45, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v44, 0, 1, v37);
      }
      uint64_t v47 = v28[9];
      uint64_t v48 = &v66[v47];
      int v49 = &v27[v47];
      if (v65(&v27[v47], 1, v37))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        v63(v48, v49, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v48, 0, 1, v37);
      }
      uint64_t v51 = v28[10];
      uint64_t v52 = &v66[v51];
      uint64_t v53 = &v27[v51];
      if (v65(&v27[v51], 1, v37))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        v63(v52, v53, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v52, 0, 1, v37);
      }
      uint64_t v55 = v28[11];
      uint64_t v56 = &v66[v55];
      uint64_t v57 = &v27[v55];
      if (v65(&v61[v55], 1, v37))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        v63(v56, v57, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v56, 0, 1, v37);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v62 + 56))(v66, 0, 1, v28);
    }
    *((unsigned char *)v19 + v21[7]) = *((unsigned char *)v20 + v21[7]);
    *(void *)((char *)v19 + v21[8]) = *(void *)((char *)v20 + v21[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_214C26084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v9 = *(void *)(a2 + 56);
    if (v9)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214B78000(a1 + 48);
  }
  long long v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  long long v14 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v14;
LABEL_6:
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136))
  {
    uint64_t v16 = *(void *)(a2 + 136);
    if (v16)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214B78000(a1 + 128);
  }
  long long v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  long long v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v21;
LABEL_11:
  uint64_t v22 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v22;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 216))
  {
    uint64_t v23 = *(void *)(a2 + 216);
    if (v23)
    {
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 232);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_214C25930(a1 + 208);
  }
  long long v26 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v26;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_16:
  uint64_t v27 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v27;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  if (*(void *)(a1 + 312) == 1)
  {
LABEL_19:
    long long v29 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v29;
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    goto LABEL_21;
  }
  uint64_t v28 = *(void *)(a2 + 312);
  if (v28 == 1)
  {
    sub_214B78054(a1 + 280);
    goto LABEL_19;
  }
  uint64_t v30 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v30;
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v28;
  swift_bridgeObjectRelease();
LABEL_21:
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_release();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_release();
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  uint64_t v31 = *(void *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = v31;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  uint64_t v32 = *(int *)(a3 + 88);
  uint64_t v33 = (void *)(a1 + v32);
  long long v34 = (void *)(a2 + v32);
  long long v35 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(uint64_t (**)(void *, uint64_t, int *))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_214C225BC((uint64_t)v33, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
      goto LABEL_27;
    }
    uint64_t v48 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v48;
    swift_bridgeObjectRelease();
    uint64_t v49 = v34[3];
    long long v33[2] = v34[2];
    v33[3] = v49;
    swift_bridgeObjectRelease();
    uint64_t v50 = v35[6];
    uint64_t v51 = (char *)v33 + v50;
    uint64_t v52 = (char *)v34 + v50;
    uint64_t v53 = (int *)type metadata accessor for AssessmentTiming();
    uint64_t v54 = *((void *)v53 - 1);
    uint64_t v55 = *(uint64_t (**)(char *, uint64_t, int *))(v54 + 48);
    uint64_t v185 = (uint64_t)v51;
    LODWORD(v51) = v55(v51, 1, v53);
    int v56 = v55(v52, 1, v53);
    if (v51)
    {
      if (!v56)
      {
        uint64_t v167 = v54;
        uint64_t v180 = v34;
        uint64_t v67 = sub_214D1A8C8();
        size_t v68 = v52;
        uint64_t v69 = *(void *)(v67 - 8);
        uint64_t v70 = *(void (**)(uint64_t, char *, uint64_t))(v69 + 32);
        v70(v185, v68, v67);
        v70(v185 + v53[5], &v68[v53[5]], v67);
        uint64_t v71 = v53[6];
        uint64_t v72 = (void *)(v185 + v71);
        int v170 = v68;
        uint64_t v73 = &v68[v71];
        v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
        uint64_t v177 = v69;
        if (v183(v73, 1, v67))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v72, v73, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v72, 0, 1, v67);
        }
        uint64_t v105 = v53[7];
        uint64_t v106 = (void *)(v185 + v105);
        uint64_t v107 = &v170[v105];
        if (v183(&v170[v105], 1, v67))
        {
          uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v106, v107, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v106, 0, 1, v67);
        }
        uint64_t v109 = v53[8];
        uint64_t v110 = (void *)(v185 + v109);
        uint64_t v111 = &v170[v109];
        if (v183(&v170[v109], 1, v67))
        {
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v110, v111, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v110, 0, 1, v67);
        }
        uint64_t v113 = v53[9];
        uint64_t v114 = (void *)(v185 + v113);
        int v115 = &v170[v113];
        if (v183(&v170[v113], 1, v67))
        {
          uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v114, v115, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v114, 0, 1, v67);
        }
        uint64_t v117 = v53[10];
        uint64_t v118 = (void *)(v185 + v117);
        uint64_t v119 = &v170[v117];
        if (v183(&v170[v117], 1, v67))
        {
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v118, v119, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v118, 0, 1, v67);
        }
        uint64_t v121 = v53[11];
        uint64_t v122 = (void *)(v185 + v121);
        uint64_t v123 = &v170[v121];
        long long v34 = v180;
        if (v183(&v170[v121], 1, v67))
        {
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
          memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          v70((uint64_t)v122, v123, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v177 + 56))(v122, 0, 1, v67);
        }
        (*(void (**)(uint64_t, void, uint64_t, int *))(v167 + 56))(v185, 0, 1, v53);
        goto LABEL_77;
      }
      size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
      uint64_t v58 = (void *)v185;
      goto LABEL_35;
    }
    if (v56)
    {
      sub_214C225BC(v185, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
      size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
      uint64_t v58 = (void *)v185;
LABEL_35:
      uint64_t v66 = v52;
      goto LABEL_36;
    }
    uint64_t v181 = v34;
    uint64_t v95 = sub_214D1A8C8();
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t v97 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 40);
    v97(v185, v52, v95);
    uint64_t v168 = (void (*)(void *, char *, uint64_t))v97;
    v97(v185 + v53[5], &v52[v53[5]], v95);
    uint64_t v98 = v53[6];
    uint64_t v99 = &v52[v98];
    uint64_t v178 = v96;
    uint64_t v100 = *(uint64_t (**)(void))(v96 + 48);
    int v171 = (void *)(v185 + v98);
    int v101 = v100();
    v184 = v100;
    int v102 = ((uint64_t (*)(char *, uint64_t, uint64_t))v100)(v99, 1, v95);
    if (v101)
    {
      if (v102)
      {
        size_t v103 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v104 = v171;
LABEL_81:
        memcpy(v104, v99, v103);
        goto LABEL_84;
      }
      (*(void (**)(void *, char *, uint64_t))(v96 + 32))(v171, v99, v95);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v171, 0, 1, v95);
    }
    else
    {
      if (v102)
      {
        (*(void (**)(void *, uint64_t))(v96 + 8))(v171, v95);
        size_t v103 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v104 = v171;
        goto LABEL_81;
      }
      v168(v171, v99, v95);
    }
LABEL_84:
    uint64_t v126 = v53[7];
    uint64_t v127 = (void *)(v185 + v126);
    uint64_t v128 = &v52[v126];
    int v129 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v184)(v185 + v126, 1, v95);
    uint64_t v130 = v95;
    int v131 = v129;
    __src = v128;
    uint64_t v132 = v130;
    int v133 = ((uint64_t (*)(char *, uint64_t))v184)(v128, 1);
    if (v131)
    {
      if (v133)
      {
        uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v127, v128, *(void *)(*(void *)(v134 - 8) + 64));
        uint64_t v135 = v132;
      }
      else
      {
        uint64_t v139 = v127;
        uint64_t v140 = v127;
        uint64_t v135 = v132;
        (*(void (**)(void *, char *, uint64_t))(v178 + 32))(v139, __src, v132);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v140, 0, 1, v132);
      }
    }
    else if (v133)
    {
      uint64_t v136 = v127;
      uint64_t v137 = v127;
      uint64_t v135 = v132;
      (*(void (**)(void *, uint64_t))(v178 + 8))(v136, v132);
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v137, __src, *(void *)(*(void *)(v138 - 8) + 64));
    }
    else
    {
      uint64_t v141 = v127;
      uint64_t v135 = v132;
      v168(v141, v128, v132);
    }
    uint64_t v142 = v53[8];
    int v143 = &v52[v142];
    size_t v172 = (void *)(v185 + v142);
    int v144 = v184();
    int v145 = ((uint64_t (*)(char *, uint64_t, uint64_t))v184)(v143, 1, v135);
    if (v144)
    {
      if (v145)
      {
        size_t v146 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v147 = v172;
LABEL_96:
        memcpy(v147, v143, v146);
        goto LABEL_99;
      }
      (*(void (**)(void *, char *, uint64_t))(v178 + 32))(v172, v143, v135);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v172, 0, 1, v135);
    }
    else
    {
      if (v145)
      {
        (*(void (**)(void *, uint64_t))(v178 + 8))(v172, v135);
        size_t v146 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v147 = v172;
        goto LABEL_96;
      }
      v168(v172, v143, v135);
    }
LABEL_99:
    uint64_t v148 = v53[9];
    uint64_t v149 = &v52[v148];
    v173 = (void *)(v185 + v148);
    int v150 = v184();
    int v151 = ((uint64_t (*)(char *, uint64_t, uint64_t))v184)(v149, 1, v135);
    if (v150)
    {
      if (v151)
      {
        size_t v152 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v153 = v173;
LABEL_104:
        memcpy(v153, v149, v152);
        goto LABEL_107;
      }
      (*(void (**)(void *, char *, uint64_t))(v178 + 32))(v173, v149, v135);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v173, 0, 1, v135);
    }
    else
    {
      if (v151)
      {
        (*(void (**)(void *, uint64_t))(v178 + 8))(v173, v135);
        size_t v152 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v153 = v173;
        goto LABEL_104;
      }
      v168(v173, v149, v135);
    }
LABEL_107:
    uint64_t v154 = v53[10];
    v155 = &v52[v154];
    uint64_t v174 = (void *)(v185 + v154);
    int v156 = v184();
    int v157 = ((uint64_t (*)(char *, uint64_t, uint64_t))v184)(v155, 1, v135);
    if (v156)
    {
      if (!v157)
      {
        (*(void (**)(void *, char *, uint64_t))(v178 + 32))(v174, v155, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v174, 0, 1, v135);
        goto LABEL_115;
      }
      size_t v158 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      int v159 = v174;
    }
    else
    {
      if (!v157)
      {
        v168(v174, v155, v135);
        goto LABEL_115;
      }
      (*(void (**)(void *, uint64_t))(v178 + 8))(v174, v135);
      size_t v158 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      int v159 = v174;
    }
    memcpy(v159, v155, v158);
LABEL_115:
    long long v34 = v181;
    uint64_t v160 = v53[11];
    uint64_t v161 = (void *)(v185 + v160);
    uint64_t v162 = &v52[v160];
    int v163 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v184)(v185 + v160, 1, v135);
    int v164 = ((uint64_t (*)(char *, uint64_t, uint64_t))v184)(v162, 1, v135);
    if (v163)
    {
      if (!v164)
      {
        (*(void (**)(void *, char *, uint64_t))(v178 + 32))(v161, v162, v135);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v178 + 56))(v161, 0, 1, v135);
        goto LABEL_77;
      }
    }
    else
    {
      if (!v164)
      {
        v168(v161, v162, v135);
        goto LABEL_77;
      }
      (*(void (**)(void *, uint64_t))(v178 + 8))(v161, v135);
    }
    size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
    uint64_t v58 = v161;
    uint64_t v66 = v162;
LABEL_36:
    memcpy(v58, v66, v57);
LABEL_77:
    *((unsigned char *)v33 + v35[7]) = *((unsigned char *)v34 + v35[7]);
    *(void *)((char *)v33 + v35[8]) = *(void *)((char *)v34 + v35[8]);
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v39)
  {
LABEL_27:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    memcpy(v33, v34, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  long long v40 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v40;
  uint64_t v41 = v35[6];
  uint64_t v42 = (char *)v33 + v41;
  uint64_t v43 = (char *)v34 + v41;
  uint64_t v44 = (int *)type metadata accessor for AssessmentTiming();
  uint64_t v45 = *((void *)v44 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    int v165 = v35;
    uint64_t v169 = v45;
    uint64_t v179 = v34;
    uint64_t v59 = sub_214D1A8C8();
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
    v61(v42, v43, v59);
    v61(&v42[v44[5]], &v43[v44[5]], v59);
    uint64_t v62 = v44[6];
    size_t v166 = v42;
    uint64_t v63 = &v42[v62];
    uint64_t v64 = &v43[v62];
    v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    v176 = v61;
    if (v182(&v43[v62], 1, v59))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      v61(v63, v64, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v63, 0, 1, v59);
    }
    uint64_t v75 = v44[7];
    uint64_t v76 = &v166[v75];
    uint64_t v77 = &v43[v75];
    long long v35 = v165;
    if (v182(&v43[v75], 1, v59))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      v176(v76, v77, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v76, 0, 1, v59);
    }
    uint64_t v79 = v44[8];
    uint64_t v80 = &v166[v79];
    uint64_t v81 = &v43[v79];
    if (v182(&v43[v79], 1, v59))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      v176(v80, v81, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v80, 0, 1, v59);
    }
    uint64_t v83 = v44[9];
    uint64_t v84 = &v166[v83];
    uint64_t v85 = &v43[v83];
    if (v182(&v43[v83], 1, v59))
    {
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      v176(v84, v85, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v84, 0, 1, v59);
    }
    uint64_t v87 = v44[10];
    uint64_t v88 = &v166[v87];
    uint64_t v89 = &v43[v87];
    if (v182(&v43[v87], 1, v59))
    {
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      v176(v88, v89, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v88, 0, 1, v59);
    }
    uint64_t v91 = v44[11];
    uint64_t v92 = &v166[v91];
    uint64_t v93 = &v43[v91];
    long long v34 = v179;
    if (v182(v93, 1, v59))
    {
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      v176(v92, v93, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v92, 0, 1, v59);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v169 + 56))(v166, 0, 1, v44);
  }
  *((unsigned char *)v33 + v35[7]) = *((unsigned char *)v34 + v35[7]);
  *(void *)((char *)v33 + v35[8]) = *(void *)((char *)v34 + v35[8]);
  (*(void (**)(void *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
  return a1;
}

uint64_t sub_214C27714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214C27728);
}

uint64_t sub_214C27728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 384);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 88);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_214C277DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214C277F0);
}

uint64_t sub_214C277F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 384) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E0A8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 88);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_214C2789C()
{
  sub_214C2AB00(319, &qword_26784E0D0, (void (*)(uint64_t))type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_214C279B4(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (int *)type metadata accessor for AssessmentTiming();
    uint64_t v12 = *((void *)v11 - 1);
    long long v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v48 = v12;
      uint64_t v16 = sub_214D1A8C8();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v18(v9, v10, v16);
      v18(&v9[v11[5]], &v10[v11[5]], v16);
      uint64_t v19 = v11[6];
      uint64_t v51 = v9;
      long long v20 = &v9[v19];
      uint64_t v21 = v17;
      uint64_t v22 = &v10[v19];
      uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v50(&v10[v19], 1, v16))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v20, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v18(v20, v22, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v16);
      }
      uint64_t v24 = v11[7];
      uint64_t v25 = &v51[v24];
      long long v26 = &v10[v24];
      if (v50(&v10[v24], 1, v16))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        v18(v25, v26, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v25, 0, 1, v16);
      }
      uint64_t v28 = v11[8];
      long long v29 = &v51[v28];
      uint64_t v30 = &v10[v28];
      if (v50(&v10[v28], 1, v16))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        v18(v29, v30, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v29, 0, 1, v16);
      }
      uint64_t v32 = v11[9];
      uint64_t v33 = &v51[v32];
      long long v34 = &v10[v32];
      if (v50(&v10[v32], 1, v16))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v18(v33, v34, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v33, 0, 1, v16);
      }
      uint64_t v36 = v11[10];
      uint64_t v37 = &v51[v36];
      int v38 = &v10[v36];
      if (v50(&v10[v36], 1, v16))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        long long v40 = v18;
      }
      else
      {
        uint64_t v41 = v38;
        long long v40 = v18;
        v18(v37, v41, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v16);
      }
      uint64_t v42 = v11[11];
      uint64_t v43 = &v51[v42];
      uint64_t v44 = &v10[v42];
      if (v50(v44, 1, v16))
      {
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        v40(v43, v44, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v43, 0, 1, v16);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v51, 0, 1, v11);
    }
    uint64_t v46 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(void *)((char *)v4 + v46) = *(void *)((char *)a2 + v46);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_214C27FBC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  int v5 = (int *)type metadata accessor for AssessmentTiming();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_214D1A8C8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v4, v6);
    v8(v4 + v5[5], v6);
    uint64_t v9 = v4 + v5[6];
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v10(v9, 1, v6)) {
      v8(v9, v6);
    }
    uint64_t v11 = v4 + v5[7];
    if (!v10(v11, 1, v6)) {
      v8(v11, v6);
    }
    uint64_t v12 = v4 + v5[8];
    if (!v10(v12, 1, v6)) {
      v8(v12, v6);
    }
    uint64_t v13 = v4 + v5[9];
    if (!v10(v13, 1, v6)) {
      v8(v13, v6);
    }
    uint64_t v14 = v4 + v5[10];
    if (!v10(v14, 1, v6)) {
      v8(v14, v6);
    }
    uint64_t v15 = v4 + v5[11];
    if (!v10(v15, 1, v6)) {
      v8(v15, v6);
    }
  }
  return swift_bridgeObjectRelease();
}

void *sub_214C28248(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AssessmentTiming();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v11;
    uint64_t v46 = v3;
    uint64_t v14 = sub_214D1A8C8();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v16(v8, v9, v14);
    v16(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v14);
    uint64_t v47 = (int *)v10;
    uint64_t v17 = *(int *)(v10 + 24);
    uint64_t v18 = &v8[v17];
    uint64_t v19 = &v9[v17];
    long long v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v20(&v9[v17], 1, v14))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v16(v18, v19, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
    }
    uint64_t v22 = v47[7];
    uint64_t v23 = &v8[v22];
    uint64_t v24 = &v9[v22];
    uint64_t v25 = v20;
    if (v20(&v9[v22], 1, v14))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v16(v23, v24, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    uint64_t v27 = v47[8];
    uint64_t v28 = &v8[v27];
    long long v29 = &v9[v27];
    if (v20(&v9[v27], 1, v14))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v16(v28, v29, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
    }
    uint64_t v31 = v47[9];
    uint64_t v32 = &v8[v31];
    uint64_t v33 = &v9[v31];
    if (v20(&v9[v31], 1, v14))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v16(v32, v33, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v32, 0, 1, v14);
    }
    uint64_t v35 = v47[10];
    uint64_t v36 = &v8[v35];
    uint64_t v37 = &v9[v35];
    if (v20(&v9[v35], 1, v14))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      v16(v36, v37, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v36, 0, 1, v14);
    }
    uint64_t v39 = v47[11];
    long long v40 = &v8[v39];
    uint64_t v41 = &v9[v39];
    if (v25(&v9[v39], 1, v14))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v16(v40, v41, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v40, 0, 1, v14);
    }
    uint64_t v3 = v46;
    (*(void (**)(char *, void, uint64_t, int *))(v45 + 56))(v8, 0, 1, v47);
  }
  uint64_t v43 = *(int *)(v3 + 32);
  *((unsigned char *)a1 + *(int *)(v3 + 28)) = *((unsigned char *)a2 + *(int *)(v3 + 28));
  *(void *)((char *)a1 + v43) = *(void *)((char *)a2 + v43);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_214C28804(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for AssessmentTiming();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_214C225BC(v7, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
      goto LABEL_7;
    }
    uint64_t v97 = a3;
    uint64_t v25 = sub_214D1A8C8();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 24);
    v27(v7, v8, v25);
    uint64_t v89 = (void (*)(void *, char *, uint64_t))v27;
    v27(v7 + v9[5], &v8[v9[5]], v25);
    uint64_t v28 = v9[6];
    long long v29 = &v8[v28];
    uint64_t v30 = *(uint64_t (**)(void))(v26 + 48);
    uint64_t v90 = (void *)(v7 + v28);
    int v31 = v30();
    uint64_t v99 = v30;
    int v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)(v29, 1, v25);
    if (v31)
    {
      if (v32)
      {
        size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v34 = v90;
LABEL_32:
        memcpy(v34, v29, v33);
        goto LABEL_35;
      }
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v90, v29, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v90, 0, 1, v25);
    }
    else
    {
      if (v32)
      {
        (*(void (**)(void *, uint64_t))(v26 + 8))(v90, v25);
        size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v34 = v90;
        goto LABEL_32;
      }
      v89(v90, v29, v25);
    }
LABEL_35:
    uint64_t v58 = v25;
    uint64_t v59 = v9[7];
    uint64_t v60 = &v8[v59];
    uint64_t v91 = (void *)(v7 + v59);
    int v61 = v99();
    int v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v99)(v60, 1, v58);
    if (v61)
    {
      if (v62)
      {
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v64 = v91;
LABEL_40:
        memcpy(v64, v60, v63);
        goto LABEL_43;
      }
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v91, v60, v58);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v91, 0, 1, v58);
    }
    else
    {
      if (v62)
      {
        (*(void (**)(void *, uint64_t))(v26 + 8))(v91, v58);
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v64 = v91;
        goto LABEL_40;
      }
      v89(v91, v60, v58);
    }
LABEL_43:
    uint64_t v65 = v9[8];
    uint64_t v66 = &v8[v65];
    uint64_t v92 = (void *)(v7 + v65);
    int v67 = v99();
    int v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v99)(v66, 1, v58);
    if (v67)
    {
      if (v68)
      {
        size_t v69 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v70 = v92;
LABEL_48:
        memcpy(v70, v66, v69);
        goto LABEL_51;
      }
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v92, v66, v58);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v92, 0, 1, v58);
    }
    else
    {
      if (v68)
      {
        (*(void (**)(void *, uint64_t))(v26 + 8))(v92, v58);
        size_t v69 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v70 = v92;
        goto LABEL_48;
      }
      v89(v92, v66, v58);
    }
LABEL_51:
    uint64_t v71 = v9[9];
    uint64_t v72 = &v8[v71];
    uint64_t v93 = (void *)(v7 + v71);
    int v73 = v99();
    int v74 = ((uint64_t (*)(char *, uint64_t, uint64_t))v99)(v72, 1, v58);
    if (v73)
    {
      if (v74)
      {
        size_t v75 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v76 = v93;
LABEL_56:
        memcpy(v76, v72, v75);
        goto LABEL_59;
      }
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v93, v72, v58);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v93, 0, 1, v58);
    }
    else
    {
      if (v74)
      {
        (*(void (**)(void *, uint64_t))(v26 + 8))(v93, v58);
        size_t v75 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v76 = v93;
        goto LABEL_56;
      }
      v89(v93, v72, v58);
    }
LABEL_59:
    uint64_t v77 = v9[10];
    uint64_t v78 = &v8[v77];
    uint64_t v94 = (void *)(v7 + v77);
    int v79 = v99();
    int v80 = ((uint64_t (*)(char *, uint64_t, uint64_t))v99)(v78, 1, v58);
    if (v79)
    {
      if (!v80)
      {
        (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v94, v78, v58);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v94, 0, 1, v58);
        goto LABEL_67;
      }
      size_t v81 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      uint64_t v82 = v94;
    }
    else
    {
      if (!v80)
      {
        v89(v94, v78, v58);
        goto LABEL_67;
      }
      (*(void (**)(void *, uint64_t))(v26 + 8))(v94, v58);
      size_t v81 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      uint64_t v82 = v94;
    }
    memcpy(v82, v78, v81);
LABEL_67:
    a3 = v97;
    uint64_t v83 = v9[11];
    uint64_t v84 = (void *)(v7 + v83);
    uint64_t v85 = &v8[v83];
    int v86 = ((uint64_t (*)(void *, uint64_t, uint64_t))v99)(v84, 1, v58);
    int v87 = ((uint64_t (*)(char *, uint64_t, uint64_t))v99)(v85, 1, v58);
    if (v86)
    {
      if (!v87)
      {
        (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v84, v85, v58);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v84, 0, 1, v58);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v87)
      {
        v89(v84, v85, v58);
        goto LABEL_29;
      }
      (*(void (**)(void *, uint64_t))(v26 + 8))(v84, v58);
    }
    size_t v22 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
    uint64_t v23 = v84;
    uint64_t v24 = v85;
    goto LABEL_8;
  }
  if (v13)
  {
LABEL_7:
    size_t v22 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
    uint64_t v23 = (void *)v7;
    uint64_t v24 = v8;
LABEL_8:
    memcpy(v23, v24, v22);
    goto LABEL_29;
  }
  uint64_t v96 = a3;
  uint64_t v14 = sub_214D1A8C8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v8;
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
  v17(v7, v16, v14);
  v17(v7 + v9[5], &v16[v9[5]], v14);
  uint64_t v18 = v9[6];
  uint64_t v19 = (void *)(v7 + v18);
  uint64_t v88 = v16;
  long long v20 = &v16[v18];
  uint64_t v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v95 = v15;
  if (v98(v20, 1, v14))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v19, v20, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  uint64_t v35 = v9[7];
  uint64_t v36 = (void *)(v7 + v35);
  uint64_t v37 = &v88[v35];
  if (v98(&v88[v35], 1, v14))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    uint64_t v39 = (void (*)(void *, char *, uint64_t))v17;
  }
  else
  {
    uint64_t v39 = (void (*)(void *, char *, uint64_t))v17;
    v17((uint64_t)v36, v37, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v36, 0, 1, v14);
  }
  uint64_t v40 = v9[8];
  uint64_t v41 = (void *)(v7 + v40);
  uint64_t v42 = &v88[v40];
  if (v98(&v88[v40], 1, v14))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v39(v41, v42, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v41, 0, 1, v14);
  }
  uint64_t v44 = v9[9];
  uint64_t v45 = (void *)(v7 + v44);
  uint64_t v46 = &v88[v44];
  if (v98(&v88[v44], 1, v14))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    v39(v45, v46, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v45, 0, 1, v14);
  }
  uint64_t v48 = v9[10];
  uint64_t v49 = (void *)(v7 + v48);
  uint64_t v50 = &v88[v48];
  if (v98(&v88[v48], 1, v14))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    uint64_t v52 = v95;
  }
  else
  {
    v39(v49, v50, v14);
    uint64_t v52 = v95;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v49, 0, 1, v14);
  }
  uint64_t v53 = v9[11];
  uint64_t v54 = (void *)(v7 + v53);
  uint64_t v55 = &v88[v53];
  if (v98(&v88[v53], 1, v14))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v39(v54, v55, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v14);
  }
  a3 = v96;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_29:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_214C295B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for AssessmentTiming();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v3;
    uint64_t v46 = v11;
    uint64_t v13 = sub_214D1A8C8();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v15(v8, v9, v13);
    v15(&v8[v10[5]], &v9[v10[5]], v13);
    uint64_t v16 = v10[6];
    uint64_t v44 = v8;
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v47 = v14;
    if (v48(&v9[v16], 1, v13))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    uint64_t v20 = v10[7];
    uint64_t v21 = &v44[v20];
    size_t v22 = &v9[v20];
    if (v48(&v9[v20], 1, v13))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      uint64_t v24 = v15;
    }
    else
    {
      uint64_t v24 = v15;
      v15(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v21, 0, 1, v13);
    }
    uint64_t v25 = v10[8];
    uint64_t v26 = &v44[v25];
    uint64_t v27 = &v9[v25];
    if (v48(&v9[v25], 1, v13))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v24(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v26, 0, 1, v13);
    }
    uint64_t v29 = v10[9];
    uint64_t v30 = &v44[v29];
    int v31 = &v9[v29];
    if (v48(&v9[v29], 1, v13))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v24(v30, v31, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v13);
    }
    uint64_t v33 = v10[10];
    uint64_t v34 = &v44[v33];
    uint64_t v35 = &v9[v33];
    if (v48(&v9[v33], 1, v13))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      uint64_t v37 = v47;
    }
    else
    {
      v24(v34, v35, v13);
      uint64_t v37 = v47;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v13);
    }
    uint64_t v38 = v10[11];
    uint64_t v39 = &v44[v38];
    uint64_t v40 = &v9[v38];
    if (v48(v40, 1, v13))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      v24(v39, v40, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v13);
    }
    uint64_t v3 = v45;
    (*(void (**)(char *, void, uint64_t, int *))(v46 + 56))(v44, 0, 1, v10);
  }
  uint64_t v42 = *(int *)(v3 + 32);
  *((unsigned char *)a1 + *(int *)(v3 + 28)) = *((unsigned char *)a2 + *(int *)(v3 + 28));
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  return a1;
}

void *sub_214C29B20(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = (int *)type metadata accessor for AssessmentTiming();
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_214C225BC(v9, (uint64_t (*)(void))type metadata accessor for AssessmentTiming);
      goto LABEL_7;
    }
    uint64_t v100 = a3;
    uint64_t v27 = sub_214D1A8C8();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 40);
    v29(v9, v10, v27);
    uint64_t v92 = (void (*)(void *, char *, uint64_t))v29;
    v29(v9 + v11[5], &v10[v11[5]], v27);
    uint64_t v30 = v11[6];
    int v31 = &v10[v30];
    uint64_t v32 = *(uint64_t (**)(void))(v28 + 48);
    uint64_t v93 = (void *)(v9 + v30);
    int v33 = v32();
    int v102 = v32;
    int v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v31, 1, v27);
    if (v33)
    {
      if (v34)
      {
        size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v36 = v93;
LABEL_32:
        memcpy(v36, v31, v35);
        goto LABEL_35;
      }
      (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v93, v31, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v93, 0, 1, v27);
    }
    else
    {
      if (v34)
      {
        (*(void (**)(void *, uint64_t))(v28 + 8))(v93, v27);
        size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        uint64_t v36 = v93;
        goto LABEL_32;
      }
      v92(v93, v31, v27);
    }
LABEL_35:
    uint64_t v61 = v27;
    uint64_t v62 = v11[7];
    size_t v63 = &v10[v62];
    uint64_t v94 = (void *)(v9 + v62);
    int v64 = v102();
    int v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v63, 1, v61);
    if (v64)
    {
      if (v65)
      {
        size_t v66 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v67 = v94;
LABEL_40:
        memcpy(v67, v63, v66);
        goto LABEL_43;
      }
      (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v94, v63, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v94, 0, 1, v61);
    }
    else
    {
      if (v65)
      {
        (*(void (**)(void *, uint64_t))(v28 + 8))(v94, v61);
        size_t v66 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v67 = v94;
        goto LABEL_40;
      }
      v92(v94, v63, v61);
    }
LABEL_43:
    uint64_t v68 = v11[8];
    size_t v69 = &v10[v68];
    uint64_t v95 = (void *)(v9 + v68);
    int v70 = v102();
    int v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v69, 1, v61);
    if (v70)
    {
      if (v71)
      {
        size_t v72 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v73 = v95;
LABEL_48:
        memcpy(v73, v69, v72);
        goto LABEL_51;
      }
      (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v95, v69, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v95, 0, 1, v61);
    }
    else
    {
      if (v71)
      {
        (*(void (**)(void *, uint64_t))(v28 + 8))(v95, v61);
        size_t v72 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v73 = v95;
        goto LABEL_48;
      }
      v92(v95, v69, v61);
    }
LABEL_51:
    uint64_t v74 = v11[9];
    size_t v75 = &v10[v74];
    uint64_t v96 = (void *)(v9 + v74);
    int v76 = v102();
    int v77 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v75, 1, v61);
    if (v76)
    {
      if (v77)
      {
        size_t v78 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v79 = v96;
LABEL_56:
        memcpy(v79, v75, v78);
        goto LABEL_59;
      }
      (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v96, v75, v61);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v96, 0, 1, v61);
    }
    else
    {
      if (v77)
      {
        (*(void (**)(void *, uint64_t))(v28 + 8))(v96, v61);
        size_t v78 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
        int v79 = v96;
        goto LABEL_56;
      }
      v92(v96, v75, v61);
    }
LABEL_59:
    uint64_t v80 = v11[10];
    size_t v81 = &v10[v80];
    uint64_t v97 = (void *)(v9 + v80);
    int v82 = v102();
    int v83 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v81, 1, v61);
    if (v82)
    {
      if (!v83)
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v97, v81, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v97, 0, 1, v61);
        goto LABEL_67;
      }
      size_t v84 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      uint64_t v85 = v97;
    }
    else
    {
      if (!v83)
      {
        v92(v97, v81, v61);
        goto LABEL_67;
      }
      (*(void (**)(void *, uint64_t))(v28 + 8))(v97, v61);
      size_t v84 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
      uint64_t v85 = v97;
    }
    memcpy(v85, v81, v84);
LABEL_67:
    a3 = v100;
    uint64_t v86 = v11[11];
    int v87 = (void *)(v9 + v86);
    uint64_t v88 = &v10[v86];
    int v89 = ((uint64_t (*)(void *, uint64_t, uint64_t))v102)(v87, 1, v61);
    int v90 = ((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v88, 1, v61);
    if (v89)
    {
      if (!v90)
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v87, v88, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v87, 0, 1, v61);
        goto LABEL_29;
      }
    }
    else
    {
      if (!v90)
      {
        v92(v87, v88, v61);
        goto LABEL_29;
      }
      (*(void (**)(void *, uint64_t))(v28 + 8))(v87, v61);
    }
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0) - 8) + 64);
    uint64_t v25 = v87;
    uint64_t v26 = v88;
    goto LABEL_8;
  }
  if (v15)
  {
LABEL_7:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26784E098) - 8) + 64);
    uint64_t v25 = (void *)v9;
    uint64_t v26 = v10;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_29;
  }
  uint64_t v99 = a3;
  uint64_t v16 = sub_214D1A8C8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v10;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v19(v9, v18, v16);
  v19(v9 + v11[5], &v18[v11[5]], v16);
  uint64_t v20 = v11[6];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v91 = v18;
  size_t v22 = &v18[v20];
  int v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v98 = v17;
  if (v101(v22, 1, v16))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v21, v22, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  uint64_t v37 = v11[7];
  uint64_t v38 = (void *)(v9 + v37);
  uint64_t v39 = &v91[v37];
  if (v101(&v91[v37], 1, v16))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    uint64_t v41 = (void (*)(void *, char *, uint64_t))v19;
  }
  else
  {
    uint64_t v41 = (void (*)(void *, char *, uint64_t))v19;
    v19((uint64_t)v38, v39, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v38, 0, 1, v16);
  }
  uint64_t v42 = v11[8];
  uint64_t v43 = (void *)(v9 + v42);
  uint64_t v44 = &v91[v42];
  if (v101(&v91[v42], 1, v16))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v41(v43, v44, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v43, 0, 1, v16);
  }
  uint64_t v46 = v11[9];
  uint64_t v47 = (void *)(v9 + v46);
  uint64_t v48 = &v91[v46];
  if (v101(&v91[v46], 1, v16))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    v41(v47, v48, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v47, 0, 1, v16);
  }
  uint64_t v50 = v11[10];
  uint64_t v51 = (void *)(v9 + v50);
  uint64_t v52 = &v91[v50];
  if (v101(&v91[v50], 1, v16))
  {
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    uint64_t v54 = v98;
  }
  else
  {
    v41(v51, v52, v16);
    uint64_t v54 = v98;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v51, 0, 1, v16);
  }
  uint64_t v55 = v11[11];
  uint64_t v56 = (void *)(v9 + v55);
  size_t v57 = &v91[v55];
  if (v101(&v91[v55], 1, v16))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CED0);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    v41(v56, v57, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v16);
  }
  a3 = v99;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_29:
  uint64_t v59 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(void *)((char *)a1 + v59) = *(void *)((char *)a2 + v59);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C2A8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214C2A8B8);
}

uint64_t sub_214C2A8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_214C2A978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214C2A98C);
}

uint64_t sub_214C2A98C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E098);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_214C2AA38()
{
  sub_214C2AB00(319, &qword_26784E0E8, (void (*)(uint64_t))type metadata accessor for AssessmentTiming);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_214C2AB00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_214D1A5D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_214C2AB88(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_214C2AB88(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void destroy for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1)
{
}

unint64_t *assignWithCopy for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_214C2AB88(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_214BA621C(v4);
  return a1;
}

unint64_t *assignWithTake for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_214BA621C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_214C2ACC8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_214C2ACE4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_214C2ACF4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError()
{
  return &type metadata for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError;
}

uint64_t sub_214C2AD34()
{
  sub_214C2B95C();
  uint64_t result = sub_214D1A5B8();
  qword_267863600 = result;
  return result;
}

uint64_t sub_214C2AD8C()
{
  sub_214C2B95C();
  uint64_t result = sub_214D1A5B8();
  qword_26ACEBA48 = result;
  return result;
}

uint64_t sub_214C2ADEC()
{
  sub_214C2B95C();
  uint64_t result = sub_214D1A5B8();
  qword_26ACEBA40 = result;
  return result;
}

id sub_214C2AE4C()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863608 = (uint64_t)"LocationHelperInit";
  unk_267863610 = 18;
  byte_267863618 = 2;
  qword_267863620 = qword_26ACEBA40;
  byte_267863628 = 0;
  return v0;
}

id sub_214C2AED0()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863630 = (uint64_t)"LocationHelperRequest";
  *(void *)algn_267863638 = 21;
  byte_267863640 = 2;
  qword_267863648 = qword_26ACEBA40;
  byte_267863650 = 1;
  return v0;
}

id sub_214C2AF58()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863658 = (uint64_t)"LocationHelpergetLocationOrWait";
  unk_267863660 = 31;
  byte_267863668 = 2;
  qword_267863670 = qword_26ACEBA40;
  byte_267863678 = 0;
  return v0;
}

id sub_214C2AFDC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863680 = (uint64_t)"LocationHelperUpdateWaitingContinuations";
  *(void *)algn_267863688 = 40;
  byte_267863690 = 2;
  qword_267863698 = qword_26ACEBA40;
  byte_2678636A0 = 0;
  return v0;
}

id sub_214C2B060()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678636A8 = (uint64_t)"GeocoderFCMU";
  unk_2678636B0 = 12;
  byte_2678636B8 = 2;
  qword_2678636C0 = qword_26ACEBA40;
  byte_2678636C8 = 0;
  return v0;
}

id sub_214C2B0E4()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678636D0 = (uint64_t)"GeocoderFCMUMemCache";
  *(void *)algn_2678636D8 = 20;
  byte_2678636E0 = 2;
  qword_2678636E8 = qword_26ACEBA40;
  byte_2678636F0 = 0;
  return v0;
}

id sub_214C2B168()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678636F8 = (uint64_t)"GeocoderFCMUPersistentCache";
  unk_267863700 = 27;
  byte_267863708 = 2;
  qword_267863710 = qword_26ACEBA40;
  byte_267863718 = 0;
  return v0;
}

id sub_214C2B1EC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863720 = (uint64_t)"GeocoderFCMUTaskGroupTotal";
  *(void *)algn_267863728 = 26;
  byte_267863730 = 2;
  qword_267863738 = qword_26ACEBA40;
  byte_267863740 = 0;
  return v0;
}

id sub_214C2B270()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863748 = (uint64_t)"GeocoderFCMUGeocodeOp";
  unk_267863750 = 21;
  byte_267863758 = 2;
  qword_267863760 = qword_26ACEBA40;
  byte_267863768 = 0;
  return v0;
}

id sub_214C2B2F4()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863770 = (uint64_t)"GeocoderGetFromMemCache";
  *(void *)algn_267863778 = 23;
  byte_267863780 = 2;
  qword_267863788 = qword_26ACEBA40;
  byte_267863790 = 0;
  return v0;
}

id sub_214C2B378()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863798 = (uint64_t)"GeocoderGeocodeAddresses";
  unk_2678637A0 = 24;
  byte_2678637A8 = 2;
  qword_2678637B0 = qword_26ACEBA40;
  byte_2678637B8 = 0;
  return v0;
}

id sub_214C2B3FC()
{
  if (qword_26784C898 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_267863600;
  *(void *)&xmmword_26784E0F0 = "odiSessionInternalInit";
  *((void *)&xmmword_26784E0F0 + 1) = 22;
  byte_26784E100 = 2;
  qword_26784E108 = qword_267863600;
  byte_26784E110 = 1;
  return v0;
}

id static FrameworkSignposts.odiSessionInternalInit.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26784C8F8 != -1) {
    swift_once();
  }
  char v2 = byte_26784E100;
  unint64_t v3 = (void *)qword_26784E108;
  char v4 = byte_26784E110;
  *(_OWORD *)a1 = xmmword_26784E0F0;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return v3;
}

id sub_214C2B50C()
{
  if (qword_26784C898 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_267863600;
  *(void *)&xmmword_26784E118 = "odiSessionInternalUpdate";
  *((void *)&xmmword_26784E118 + 1) = 24;
  byte_26784E128 = 2;
  qword_26784E130 = qword_267863600;
  byte_26784E138 = 1;
  return v0;
}

id static FrameworkSignposts.odiSessionInternalUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26784C900 != -1) {
    swift_once();
  }
  char v2 = byte_26784E128;
  unint64_t v3 = (void *)qword_26784E130;
  char v4 = byte_26784E138;
  *(_OWORD *)a1 = xmmword_26784E118;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return v3;
}

id sub_214C2B61C()
{
  if (qword_26784C898 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_267863600;
  *(void *)&xmmword_26784E140 = "odiSessionInternalGetAssessment";
  *((void *)&xmmword_26784E140 + 1) = 31;
  byte_26784E150 = 2;
  qword_26784E158 = qword_267863600;
  byte_26784E160 = 1;
  return v0;
}

id static FrameworkSignposts.odiSessionInternalGetAssessment.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26784C908 != -1) {
    swift_once();
  }
  char v2 = byte_26784E150;
  unint64_t v3 = (void *)qword_26784E158;
  char v4 = byte_26784E160;
  *(_OWORD *)a1 = xmmword_26784E140;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return v3;
}

id sub_214C2B72C()
{
  if (qword_26784C898 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_267863600;
  *(void *)&xmmword_26784E168 = "odiSessionInternalGetDeviceData";
  *((void *)&xmmword_26784E168 + 1) = 31;
  byte_26784E178 = 2;
  qword_26784E180 = qword_267863600;
  byte_26784E188 = 1;
  return v0;
}

id static FrameworkSignposts.odiSessionInternalGetArmandDeviceData.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26784C910 != -1) {
    swift_once();
  }
  char v2 = byte_26784E178;
  unint64_t v3 = (void *)qword_26784E180;
  char v4 = byte_26784E188;
  *(_OWORD *)a1 = xmmword_26784E168;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return v3;
}

id sub_214C2B83C()
{
  if (qword_26784C898 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_267863600;
  *(void *)&xmmword_26784E190 = "odiSessionInternalGetBindingsData";
  *((void *)&xmmword_26784E190 + 1) = 33;
  byte_26784E1A0 = 2;
  qword_26784E1A8 = qword_267863600;
  byte_26784E1B0 = 1;
  return v0;
}

id static FrameworkSignposts.odiSessionInternalGetBindingsData.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26784C918 != -1) {
    swift_once();
  }
  char v2 = byte_26784E1A0;
  unint64_t v3 = (void *)qword_26784E1A8;
  char v4 = byte_26784E1B0;
  *(_OWORD *)a1 = xmmword_26784E190;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = v4;
  return v3;
}

ValueMetadata *type metadata accessor for FrameworkSignposts()
{
  return &type metadata for FrameworkSignposts;
}

unint64_t sub_214C2B95C()
{
  unint64_t result = qword_26ACE4398;
  if (!qword_26ACE4398)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE4398);
  }
  return result;
}

id sub_214C2B99C()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678637C0 = (uint64_t)"odiSessionInternalDDBAA";
  *(void *)algn_2678637C8 = 23;
  byte_2678637D0 = 2;
  qword_2678637D8 = qword_26ACEBA40;
  byte_2678637E0 = 0;
  return v0;
}

id sub_214C2BA20()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678637E8 = (uint64_t)"odiSessionInternalDDPac";
  unk_2678637F0 = 23;
  byte_2678637F8 = 2;
  qword_267863800 = qword_26ACEBA40;
  byte_267863808 = 0;
  return v0;
}

id sub_214C2BAA4()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863810 = (uint64_t)"odiSessionInternalDDOdiDeviceInfo";
  *(void *)algn_267863818 = 33;
  byte_267863820 = 2;
  qword_267863828 = qword_26ACEBA40;
  byte_267863830 = 0;
  return v0;
}

id sub_214C2BB28()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863838 = (uint64_t)"odiSessionInternalDDStatus";
  unk_267863840 = 26;
  byte_267863848 = 2;
  qword_267863850 = qword_26ACEBA40;
  byte_267863858 = 0;
  return v0;
}

id sub_214C2BBAC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863860 = (uint64_t)"odiSessionInternalDDDeviceInfo";
  *(void *)algn_267863868 = 30;
  byte_267863870 = 2;
  qword_267863878 = qword_26ACEBA40;
  byte_267863880 = 0;
  return v0;
}

id sub_214C2BC30()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863888 = (uint64_t)"odiSessionInternalDDLocation";
  unk_267863890 = 28;
  byte_267863898 = 2;
  qword_2678638A0 = qword_26ACEBA40;
  byte_2678638A8 = 0;
  return v0;
}

id sub_214C2BCB4()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678638B0 = (uint64_t)"odiSessionInternalDDsid";
  *(void *)algn_2678638B8 = 23;
  byte_2678638C0 = 2;
  qword_2678638C8 = qword_26ACEBA40;
  byte_2678638D0 = 0;
  return v0;
}

id sub_214C2BD38()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678638D8 = (uint64_t)"odiSessionInternalBindings";
  unk_2678638E0 = 26;
  byte_2678638E8 = 2;
  qword_2678638F0 = qword_26ACEBA40;
  byte_2678638F8 = 0;
  return v0;
}

id sub_214C2BDBC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863900 = (uint64_t)"odiSessionInternalParsedBindings";
  *(void *)algn_267863908 = 32;
  byte_267863910 = 2;
  qword_267863918 = qword_26ACEBA40;
  byte_267863920 = 0;
  return v0;
}

id sub_214C2BE40()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863928 = (uint64_t)"odiSessionInternalFormattedBindings";
  unk_267863930 = 35;
  byte_267863938 = 2;
  qword_267863940 = qword_26ACEBA40;
  byte_267863948 = 0;
  return v0;
}

id sub_214C2BEC4()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863950 = (uint64_t)"odiSessionInternalGeocodedBindings";
  *(void *)algn_267863958 = 34;
  byte_267863960 = 2;
  qword_267863968 = qword_26ACEBA40;
  byte_267863970 = 0;
  return v0;
}

id sub_214C2BF48()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863978 = (uint64_t)"odiSessionInternalConfigurationBindings";
  unk_267863980 = 39;
  byte_267863988 = 2;
  qword_267863990 = qword_26ACEBA40;
  byte_267863998 = 0;
  return v0;
}

id sub_214C2BFCC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678639A0 = (uint64_t)"odiSessionInternalDeviceSettings";
  *(void *)algn_2678639A8 = 32;
  byte_2678639B0 = 2;
  qword_2678639B8 = qword_26ACEBA40;
  byte_2678639C0 = 0;
  return v0;
}

id sub_214C2C050()
{
  if (qword_26ACE4160 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA48;
  qword_26ACEBA18 = (uint64_t)"getProfileRequest";
  unk_26ACEBA20 = 17;
  byte_26ACEBA28 = 2;
  qword_26ACEBA30 = qword_26ACEBA48;
  byte_26ACEBA38 = 0;
  return v0;
}

id sub_214C2C0D4()
{
  if (qword_26ACE4160 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA48;
  qword_26ACEBAC8 = (uint64_t)"getSTSRequest";
  unk_26ACEBAD0 = 13;
  byte_26ACEBAD8 = 2;
  qword_26ACEBAE0 = qword_26ACEBA48;
  byte_26ACEBAE8 = 0;
  return v0;
}

id sub_214C2C158()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678639C8 = (uint64_t)"fetchAssessment";
  unk_2678639D0 = 15;
  byte_2678639D8 = 2;
  qword_2678639E0 = qword_26ACEBA40;
  byte_2678639E8 = 1;
  return v0;
}

id sub_214C2C1E0()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_2678639F0 = (uint64_t)"odnMypg";
  *(void *)algn_2678639F8 = 7;
  byte_267863A00 = 2;
  qword_267863A08 = qword_26ACEBA40;
  byte_267863A10 = 1;
  return v0;
}

id sub_214C2C268()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_26ACEB9F0 = (uint64_t)"checkTrust";
  *(void *)algn_26ACEB9F8 = 10;
  byte_26ACEBA00 = 2;
  qword_26ACEBA08 = qword_26ACEBA40;
  byte_26ACEBA10 = 0;
  return v0;
}

id sub_214C2C2EC()
{
  if (qword_26ACE4158 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_26ACEBA40;
  qword_267863A18 = (uint64_t)"odnProxyInit";
  unk_267863A20 = 12;
  byte_267863A28 = 2;
  qword_267863A30 = qword_26ACEBA40;
  byte_267863A38 = 0;
  return v0;
}

BOOL sub_214C2C370(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = *a1;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  if (*(void *)(a4 + 16) && (uint64_t v6 = sub_214B87FEC(a2, a3), (v7 & 1) != 0))
  {
    uint64_t v8 = *(unsigned __int8 *)(*(void *)(a4 + 56) + v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return v5 && sub_214C2C7A4(0x64uLL) == 0;
  }
  return v8;
}

BOOL static FeatureSet.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeatureSet.hash(into:)()
{
  return sub_214D1AD18();
}

void *static FeatureSet.allCases.getter()
{
  return &unk_26C5AE3F0;
}

uint64_t FeatureSet.hashValue.getter()
{
  return sub_214D1AD48();
}

unint64_t sub_214C2C50C()
{
  unint64_t result = qword_26784E1B8;
  if (!qword_26784E1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E1B8);
  }
  return result;
}

unint64_t sub_214C2C564()
{
  unint64_t result = qword_26784E1C0;
  if (!qword_26784E1C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784E1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E1C0);
  }
  return result;
}

void sub_214C2C5C0(void *a1@<X8>)
{
  *a1 = &unk_26C5AE418;
}

unsigned char *storeEnumTagSinglePayload for FeatureSet(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C2C69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureSet()
{
  return &type metadata for FeatureSet;
}

uint64_t sub_214C2C6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_214C2C830((uint64_t)&unk_26C5AE440, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = 1 << v8;
      if (v8 >= 0x40) {
        uint64_t v10 = 0;
      }
      uint64_t v11 = v10 | v9;
      if (*(unsigned char *)(v6 + 32 + v8) == 1) {
        uint64_t v9 = v11;
      }
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_214C2C7A4(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x2166B1560](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x2166B1560](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_214C2C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_214B67F08(0, v4, 0);
    uint64_t v9 = 0;
    int64_t v16 = v4;
    uint64_t v5 = v20;
    do
    {
      int v10 = *(unsigned __int8 *)(a1 + 32 + v9);
      unint64_t v18 = a2;
      uint64_t v19 = a3;
      swift_bridgeObjectRetain();
      sub_214D1A108();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      if (*(void *)(a4 + 16) && (uint64_t v11 = sub_214B87FEC(v18, v19), (v12 & 1) != 0))
      {
        LOBYTE(v10) = *(unsigned char *)(*(void *)(a4 + 56) + v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v10)
        {
          do
          {
            unint64_t v18 = 0;
            MEMORY[0x2166B1560](&v18, 8);
          }
          while (((100 * v18) & 0xFFFFFFFFFFFFFFF0) == 0);
          LOBYTE(v10) = (v18 * (unsigned __int128)0x64uLL) >> 64 == 0;
        }
      }
      uint64_t v20 = v5;
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_214B67F08(v13 > 1, v14 + 1, 1);
        uint64_t v5 = v20;
      }
      ++v9;
      *(void *)(v5 + 16) = v14 + 1;
      *(unsigned char *)(v5 + v14 + 32) = v10;
    }
    while (v9 != v16);
  }
  return v5;
}

uint64_t sub_214C2CA08(uint64_t a1)
{
  *(void *)(v2 + 48) = v1;
  int64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v4;
  *int64_t v4 = v2;
  v4[1] = sub_214C2CAA4;
  return sub_214C2F5F0(a1, 1);
}

uint64_t sub_214C2CAA4()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_214C2CC8C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_214C2CBC4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214C2CBC4()
{
  uint64_t v7 = v0;
  uint64_t v1 = (void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  char v6 = 1;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 32))(0xD000000000000023, 0x8000000214D36360, &v6, v2, v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214C2CC8C()
{
  char v12 = v0;
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[6];
  LOBYTE(v10) = 0;
  id v3 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000214D36310, (char *)v1, (unsigned __int8 *)&v10, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD000000000000022, 0x8000000214D36330, 345);

  uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger + 24);
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v10 = 0x203A726F727245;
  unint64_t v11 = 0xE700000000000000;
  swift_getErrorValue();
  sub_214D1AC88();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  uint64_t v7 = v10;
  LOBYTE(v10) = 1;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v6 + 40))(v7, v11, &v10, v5, v6);
  swift_bridgeObjectRelease();
  swift_willThrow();

  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_214C2CE44(unsigned char *a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = type metadata accessor for ODISignpost();
  *(void *)(v2 + 32) = swift_task_alloc();
  *(void *)(v2 + 40) = swift_task_alloc();
  *(unsigned char *)(v2 + 81) = *a1;
  return MEMORY[0x270FA2498](sub_214C2CEF4, 0, 0);
}

uint64_t sub_214C2CEF4()
{
  if (qword_26ACE44C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = qword_26ACEBAC8;
  uint64_t v2 = unk_26ACEBAD0;
  char v4 = byte_26ACEBAD8;
  uint64_t v5 = (void *)qword_26ACEBAE0;
  int v6 = byte_26ACEBAE8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  char v8 = *(unsigned char *)(v0 + 81);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v10 = *(void *)(v0 + 40);

  sub_214B6A2A8(v9, v10);
  *(unsigned char *)(v0 + 80) = v8;
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_214C2D0C4;
  return sub_214C31CA4(0, (unsigned char *)(v0 + 80));
}

uint64_t sub_214C2D0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    id v7 = sub_214C2D340;
  }
  else
  {
    *(void *)(v6 + 64) = a2;
    *(void *)(v6 + 72) = a1;
    id v7 = sub_214C2D1F8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214C2D1F8()
{
  uint64_t v1 = v0[5];
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_214D1C1E0;
  uint64_t v3 = MEMORY[0x263F8D530];
  *(void *)(v2 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v2 + 64) = v3;
  *(unsigned char *)(v2 + 32) = 1;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  return v4(v5, v6);
}

uint64_t sub_214C2D340()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8D4F8];
  *(_OWORD *)(v2 + 16) = xmmword_214D1C1E0;
  uint64_t v4 = MEMORY[0x263F8D530];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_214B6A30C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

BOOL static ODIServerRepo.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ODIServerRepo.hash(into:)()
{
  return sub_214D1AD18();
}

uint64_t ODIServerRepo.hashValue.getter()
{
  return sub_214D1AD48();
}

unint64_t sub_214C2D518()
{
  unint64_t result = qword_26784E1D0;
  if (!qword_26784E1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E1D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ODIServerRepo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C2D638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIServerRepo()
{
  return &type metadata for ODIServerRepo;
}

uint64_t sub_214C2D670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 464) = a4;
  *(void *)(v6 + 472) = v5;
  *(void *)(v6 + 448) = a2;
  *(void *)(v6 + 456) = a3;
  *(void *)(v6 + 440) = a1;
  long long v7 = *(_OWORD *)(a5 + 176);
  *(_OWORD *)(v6 + 176) = *(_OWORD *)(a5 + 160);
  *(_OWORD *)(v6 + 192) = v7;
  *(_OWORD *)(v6 + 208) = *(_OWORD *)(a5 + 192);
  *(unsigned char *)(v6 + 224) = *(unsigned char *)(a5 + 208);
  long long v8 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v6 + 128) = v8;
  long long v9 = *(_OWORD *)(a5 + 144);
  *(_OWORD *)(v6 + 144) = *(_OWORD *)(a5 + 128);
  *(_OWORD *)(v6 + 160) = v9;
  long long v10 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v6 + 64) = v10;
  long long v11 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v6 + 96) = v11;
  long long v12 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v6 + 32) = v12;
  return MEMORY[0x270FA2498](sub_214C2D6D8, 0, 0);
}

uint64_t sub_214C2D6D8()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 464);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 448);
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = *(void *)(v0 + 440);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE5478);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0x692D656C646E7562;
    *(void *)(inited + 40) = 0xE900000000000064;
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_214B7F218(inited);
    *(void *)(v0 + 480) = v6;
    *(void *)(v0 + 432) = &type metadata for ORDRequest;
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 408) = v7;
    long long v8 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v7 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v7 + 96) = v8;
    long long v9 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v7 + 64) = v9;
    long long v10 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v7 + 144) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v7 + 160) = v10;
    long long v11 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v7 + 112) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v7 + 128) = v11;
    *(unsigned char *)(v7 + 224) = *(unsigned char *)(v0 + 224);
    long long v12 = *(_OWORD *)(v0 + 208);
    long long v13 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v7 + 192) = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v7 + 208) = v12;
    *(_OWORD *)(v7 + 176) = v13;
    long long v14 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v7 + 32) = v14;
    v20[0] = v3;
    v20[1] = v1;
    swift_bridgeObjectRetain();
    sub_214D1A108();
    *(void *)(v0 + 488) = v1;
    sub_214C222A8((void *)(v0 + 16));
    int v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v15;
    *int v15 = v0;
    v15[1] = sub_214C2D988;
    return sub_214C2E718(v0 + 408, v3, v1, v6);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 472);
    LOBYTE(v20[0]) = 78;
    unint64_t v18 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x8000000214D36040, 0, (unsigned __int8 *)v20, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002DLL, 0x8000000214D36110, 83);
    sub_214C2DDEC(v18, v17);

    swift_willThrow();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_214C2D988(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 504) = v3;
  swift_task_dealloc();
  if (v3)
  {
    long long v9 = sub_214C2DC68;
  }
  else
  {
    sub_214B58A4C(a1, a2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v8 + 408);
    long long v9 = sub_214C2DAFC;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_214C2DAFC()
{
  uint64_t v7 = v0;
  sub_214B93DCC(v0[59] + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, (uint64_t)(v0 + 46));
  __swift_project_boxed_opaque_existential_1(v0 + 46, v0[49]);
  char v4 = 6;
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v5 = 0xD000000000000019;
  unint64_t v6 = 0x8000000214D36140;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0xD000000000000019;
  v1._object = (void *)0x8000000214D36140;
  Loggable.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v4, v1, (Swift::String_optional)0, 0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 46));
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_214C2DC68()
{
  long long v12 = v0;
  Swift::String v1 = (void *)v0[63];
  uint64_t v3 = v0[58];
  uint64_t v2 = v0[59];
  uint64_t v4 = v0[57];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 51));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v3;
  id v6 = v1;
  unint64_t v7 = sub_214B7E71C(inited);
  v11[0] = 0;
  uint64_t v8 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v11, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002DLL, 0x8000000214D36110, 89);
  swift_bridgeObjectRelease();

  sub_214C2DDEC(v8, v2);
  swift_willThrow();

  long long v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

id sub_214C2DDEC(char *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 6;
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_214B7E71C(inited);
  unsigned __int8 v10 = 0;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x8000000214D36160, a1, &v10, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002DLL, 0x8000000214D36110, 78);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_214C2DEFC(void *__src, uint64_t a2, uint64_t a3)
{
  v4[58] = a3;
  v4[59] = v3;
  v4[56] = __src;
  v4[57] = a2;
  memcpy(v4 + 2, __src, 0x120uLL);
  return MEMORY[0x270FA2498](sub_214C2DF78, 0, 0);
}

uint64_t sub_214C2DF78()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[58];
  if (v1)
  {
    uint64_t v2 = (const void *)v0[56];
    uint64_t v3 = v0[57];
    v0[55] = &type metadata for OTDRequest;
    uint64_t v4 = swift_allocObject();
    v0[52] = v4;
    memcpy((void *)(v4 + 16), v2, 0x120uLL);
    v10[0] = v3;
    v10[1] = v1;
    swift_bridgeObjectRetain();
    sub_214D1A108();
    v0[60] = v1;
    swift_bridgeObjectRetain();
    sub_214B939C0(v0 + 2);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[61] = v5;
    void *v5 = v0;
    v5[1] = sub_214C2E18C;
    return sub_214C2E718((uint64_t)(v0 + 52), v3, v1, 0);
  }
  else
  {
    uint64_t v7 = v0[59];
    LOBYTE(v10[0]) = 11;
    id v8 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x8000000214D36040, 0, (unsigned __int8 *)v10, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001ELL, 0x8000000214D36080, 108);
    sub_214C2E608(v8, v7);

    swift_willThrow();
    long long v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_214C2E18C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 496) = v3;
  swift_task_dealloc();
  if (v3)
  {
    long long v9 = sub_214C2E490;
  }
  else
  {
    sub_214B58A4C(a1, a2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v8 + 416);
    long long v9 = sub_214C2E2F0;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_214C2E2F0()
{
  uint64_t v8 = v0;
  sub_214B93DCC(v0[59] + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, (uint64_t)(v0 + 47));
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[51];
  __swift_project_boxed_opaque_existential_1(v0 + 47, v1);
  char v5 = 7;
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_214D1A7A8();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  (*(void (**)(char *, void, unint64_t, void, void, void, uint64_t, uint64_t))(v2 + 80))(&v5, 0, 0xE000000000000000, v0[2], v0[3], 0, v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 47));
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_214C2E490()
{
  uint64_t v12 = v0;
  uint64_t v1 = (void *)v0[62];
  uint64_t v2 = v0[59];
  uint64_t v4 = v0[57];
  uint64_t v3 = v0[58];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 52));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v3;
  id v6 = v1;
  unint64_t v7 = sub_214B7E71C(inited);
  v11[0] = 0;
  uint64_t v8 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v11, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001ELL, 0x8000000214D36080, 114);
  swift_bridgeObjectRelease();

  sub_214C2E608(v8, v2);
  swift_willThrow();

  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

id sub_214C2E608(char *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 6;
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_214B7E71C(inited);
  unsigned __int8 v10 = 0;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D360F0, a1, &v10, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001ELL, 0x8000000214D36080, 102);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_214C2E718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[200] = v4;
  v5[199] = a4;
  v5[198] = a3;
  v5[197] = a2;
  v5[196] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  v5[201] = swift_task_alloc();
  uint64_t v6 = sub_214D19AA8();
  v5[202] = v6;
  v5[203] = *(void *)(v6 - 8);
  v5[204] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C2E818, 0, 0);
}

uint64_t sub_214C2E818()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void **)(v0 + 1568);
  uint64_t v2 = (void *)(*(void *)(v0 + 1600) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v48 = 0xD000000000000021;
  unint64_t v49 = 0x8000000214D35F00;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(void *)(v0 + 1560) = swift_getDynamicType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E218);
  sub_214D1A0B8();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  unint64_t v5 = v48;
  LOBYTE(v48) = 17;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v4 + 32))(v5, v49, &v48, v3, v4);
  swift_bridgeObjectRelease();
  sub_214B5EC30((uint64_t)v1, v0 + 1528);
  if (swift_dynamicCast())
  {
    long long v6 = *(_OWORD *)(v0 + 1056);
    *(_OWORD *)(v0 + 1472) = *(_OWORD *)(v0 + 1040);
    *(_OWORD *)(v0 + 1488) = v6;
    *(_OWORD *)(v0 + 1504) = *(_OWORD *)(v0 + 1072);
    long long v7 = *(_OWORD *)(v0 + 992);
    *(_OWORD *)(v0 + 1408) = *(_OWORD *)(v0 + 976);
    *(_OWORD *)(v0 + 1424) = v7;
    long long v8 = *(_OWORD *)(v0 + 1024);
    *(_OWORD *)(v0 + 1440) = *(_OWORD *)(v0 + 1008);
    *(_OWORD *)(v0 + 1456) = v8;
    long long v9 = *(_OWORD *)(v0 + 928);
    *(_OWORD *)(v0 + 1344) = *(_OWORD *)(v0 + 912);
    *(_OWORD *)(v0 + 1360) = v9;
    long long v10 = *(_OWORD *)(v0 + 960);
    *(_OWORD *)(v0 + 1376) = *(_OWORD *)(v0 + 944);
    *(_OWORD *)(v0 + 1392) = v10;
    long long v11 = *(_OWORD *)(v0 + 896);
    *(_OWORD *)(v0 + 1312) = *(_OWORD *)(v0 + 880);
    *(unsigned char *)(v0 + 1520) = *(unsigned char *)(v0 + 1088);
    *(_OWORD *)(v0 + 1328) = v11;
    sub_214D19798();
    swift_allocObject();
    sub_214D19788();
    long long v12 = *(_OWORD *)(v0 + 1488);
    *(_OWORD *)(v0 + 1256) = *(_OWORD *)(v0 + 1472);
    *(_OWORD *)(v0 + 1272) = v12;
    *(_OWORD *)(v0 + 1288) = *(_OWORD *)(v0 + 1504);
    *(unsigned char *)(v0 + 1304) = *(unsigned char *)(v0 + 1520);
    long long v13 = *(_OWORD *)(v0 + 1424);
    *(_OWORD *)(v0 + 1192) = *(_OWORD *)(v0 + 1408);
    *(_OWORD *)(v0 + 1208) = v13;
    long long v14 = *(_OWORD *)(v0 + 1456);
    *(_OWORD *)(v0 + 1224) = *(_OWORD *)(v0 + 1440);
    *(_OWORD *)(v0 + 1240) = v14;
    long long v15 = *(_OWORD *)(v0 + 1360);
    *(_OWORD *)(v0 + 1128) = *(_OWORD *)(v0 + 1344);
    *(_OWORD *)(v0 + 1144) = v15;
    long long v16 = *(_OWORD *)(v0 + 1392);
    *(_OWORD *)(v0 + 1160) = *(_OWORD *)(v0 + 1376);
    *(_OWORD *)(v0 + 1176) = v16;
    long long v17 = *(_OWORD *)(v0 + 1328);
    *(_OWORD *)(v0 + 1096) = *(_OWORD *)(v0 + 1312);
    *(_OWORD *)(v0 + 1112) = v17;
    sub_214C32DC8();
    uint64_t v18 = sub_214D19778();
    unint64_t v20 = v19;
    swift_release();
    sub_214C224CC((void *)(v0 + 1312));
  }
  else
  {
    if (!swift_dynamicCast())
    {
      uint64_t v29 = *(void *)(v0 + 1584);
      uint64_t v30 = *(void *)(v0 + 1576);
      int v31 = *(void **)(v0 + 1568);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      unint64_t v48 = 0xD000000000000015;
      unint64_t v49 = 0x8000000214D35F30;
      __swift_project_boxed_opaque_existential_1(v31, v1[3]);
      swift_getDynamicType();
      sub_214D1ADC8();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t v33 = v48;
      uint64_t v32 = v49;
      LOBYTE(v48) = 79;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_214D1C1E0;
      *(unsigned char *)(v34 + 32) = 2;
      *(void *)(v34 + 64) = MEMORY[0x263F8D310];
      *(void *)(v34 + 40) = v30;
      *(void *)(v34 + 48) = v29;
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_214B7E71C(v34);
      id v36 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(v33, v32, 0, (unsigned __int8 *)&v48, 0, v35, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001CLL, 0x8000000214D35FC0, 133);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();
      uint64_t v37 = *(void *)(v0 + 1584);
      uint64_t v38 = *(void *)(v0 + 1576);
      __swift_destroy_boxed_opaque_existential_1(v0 + 1528);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_214D1C1E0;
      *(unsigned char *)(v39 + 32) = 2;
      *(void *)(v39 + 64) = MEMORY[0x263F8D310];
      *(void *)(v39 + 40) = v38;
      *(void *)(v39 + 48) = v37;
      swift_bridgeObjectRetain();
      id v40 = v36;
      unint64_t v41 = sub_214B7E71C(v39);
      LOBYTE(v48) = 0;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D35FE0, (char *)v36, (unsigned __int8 *)&v48, 0, v41, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001CLL, 0x8000000214D35FC0, 136);
      swift_bridgeObjectRelease();

      swift_willThrow();
      goto LABEL_8;
    }
    memcpy((void *)(v0 + 16), (const void *)(v0 + 592), 0x120uLL);
    sub_214D19798();
    swift_allocObject();
    sub_214D19788();
    memcpy((void *)(v0 + 304), (const void *)(v0 + 16), 0x120uLL);
    sub_214C32D74();
    uint64_t v18 = sub_214D19778();
    unint64_t v20 = v21;
    swift_release();
    sub_214C2261C((void *)(v0 + 16));
  }
  uint64_t v22 = *(void *)(v0 + 1624);
  uint64_t v23 = *(void *)(v0 + 1616);
  uint64_t v24 = *(void *)(v0 + 1608);
  *(void *)(v0 + 1640) = v20;
  *(void *)(v0 + 1648) = v18;
  __swift_destroy_boxed_opaque_existential_1(v0 + 1528);
  sub_214D19A68();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v23) == 1)
  {
    uint64_t v25 = *(void *)(v0 + 1584);
    uint64_t v26 = *(void *)(v0 + 1576);
    sub_214B59CE0(*(void *)(v0 + 1608), (uint64_t *)&unk_26ACE3B00);
    LOBYTE(v48) = 79;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(v27 + 32) = 2;
    *(void *)(v27 + 64) = MEMORY[0x263F8D310];
    *(void *)(v27 + 40) = v26;
    *(void *)(v27 + 48) = v25;
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_214B7E71C(v27);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000013, 0x8000000214D36000, 0, (unsigned __int8 *)&v48, 0, v28, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000001CLL, 0x8000000214D35FC0, 140);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_214B58A4C(v18, v20);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  uint64_t v44 = *(void *)(v0 + 1600);
  (*(void (**)(void, void, void))(*(void *)(v0 + 1624) + 32))(*(void *)(v0 + 1632), *(void *)(v0 + 1608), *(void *)(v0 + 1616));
  *(void *)(v0 + 1656) = *(void *)(v44 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession);
  sub_214B6A3A0(v18, v20);
  uint64_t v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 1664) = v45;
  void *v45 = v0;
  v45[1] = sub_214C2EFD8;
  uint64_t v46 = *(void *)(v0 + 1632);
  uint64_t v47 = *(void *)(v0 + 1592);
  return sub_214BC7ED8(v46, v47, 0, 0);
}

uint64_t sub_214C2EFD8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1672) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C2F0D8, 0, 0);
}

uint64_t sub_214C2F0D8()
{
  uint64_t v1 = *(void **)(v0 + 1672);
  uint64_t v2 = *(void *)(v0 + 1648);
  unint64_t v3 = *(void *)(v0 + 1640);
  uint64_t v4 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_setHTTPMethod_, v4);

  unint64_t v5 = (void *)sub_214D1A028();
  long long v6 = (void *)sub_214D1A028();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v5, v6);

  sub_214B6A3A0(v2, v3);
  long long v7 = (void *)sub_214D19B38();
  objc_msgSend(v1, sel_setHTTPBody_, v7);

  sub_214B58A4C(v2, v3);
  sub_214B58A4C(v2, v3);
  *(unsigned char *)(v0 + 1089) = 14;
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 1680) = v8;
  void *v8 = v0;
  v8[1] = sub_214C2F288;
  uint64_t v9 = *(void *)(v0 + 1672);
  return sub_214BC961C(v9, 0, 0, (unsigned char *)(v0 + 1089));
}

uint64_t sub_214C2F288(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v10 = *v5;
  *(void *)(*v5 + 1688) = v4;
  swift_task_dealloc();
  if (v4)
  {
    uint64_t v11 = sub_214C2F4AC;
  }
  else
  {
    *(unsigned char *)(v10 + 1090) = a4 & 1;
    *(void *)(v10 + 1696) = a3;
    *(void *)(v10 + 1704) = a2;
    *(void *)(v10 + 1712) = a1;
    uint64_t v11 = sub_214C2F3DC;
  }
  return MEMORY[0x270FA2498](v11, 0, 0);
}

uint64_t sub_214C2F3DC()
{
  uint64_t v1 = *(void *)(v0 + 1648);
  unint64_t v2 = *(void *)(v0 + 1640);
  uint64_t v3 = *(void *)(v0 + 1632);
  uint64_t v4 = *(void *)(v0 + 1624);
  uint64_t v5 = *(void *)(v0 + 1616);

  sub_214B58A4C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v7 = *(void *)(v0 + 1712);
  uint64_t v8 = *(void *)(v0 + 1704);
  uint64_t v9 = *(void *)(v0 + 1696);
  uint64_t v10 = *(unsigned __int8 *)(v0 + 1090);
  return v6(v7, v8, v9, v10);
}

uint64_t sub_214C2F4AC()
{
  uint64_t v1 = *(void *)(v0 + 1648);
  unint64_t v2 = *(void *)(v0 + 1640);
  uint64_t v3 = *(void *)(v0 + 1632);
  uint64_t v4 = *(void *)(v0 + 1624);
  uint64_t v5 = *(void *)(v0 + 1616);

  sub_214B58A4C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C2F570()
{
  return sub_214C32CA0();
}

id sub_214C2F584()
{
  v2.id receiver = v0;
  v2.super_class = (Class)type metadata accessor for DIPAssessmentWebService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPAssessmentWebService()
{
  return self;
}

uint64_t sub_214C2F5F0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 410) = a2;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v2;
  *(void *)(v3 + 232) = swift_getObjectType();
  uint64_t v4 = sub_214D19738();
  *(void *)(v3 + 240) = v4;
  *(void *)(v3 + 248) = *(void *)(v4 - 8);
  *(void *)(v3 + 256) = swift_task_alloc();
  *(void *)(v3 + 264) = type metadata accessor for ODISignpost();
  *(void *)(v3 + 272) = swift_task_alloc();
  *(void *)(v3 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  *(void *)(v3 + 288) = swift_task_alloc();
  uint64_t v5 = sub_214D19AA8();
  *(void *)(v3 + 296) = v5;
  *(void *)(v3 + 304) = *(void *)(v5 - 8);
  *(void *)(v3 + 312) = swift_task_alloc();
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C2F7A8, 0, 0);
}

uint64_t sub_214C2F7A8()
{
  *(unsigned char *)(v0 + 408) = *(unsigned char *)(*(void *)(v0 + 224)
                                  + OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214C2F858;
  uint64_t v2 = *(void *)(v0 + 320);
  return sub_214C3097C(v2, (unsigned char *)(v0 + 408));
}

uint64_t sub_214C2F858()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C2F954, 0, 0);
}

uint64_t sub_214C2F954()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 288);
  sub_214D19A38();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 344) = v5;
  *(void *)(v0 + 352) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  sub_214C31910(v4);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 288);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 224);
    sub_214B59CE0(*(void *)(v0 + 288), (uint64_t *)&unk_26ACE3B00);
    v28[0] = 79;
    uint64_t v10 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D36180, 0, v28, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D361B0, 199);
    sub_214C3086C(v10, v9);

    swift_willThrow();
    (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 328), *(void *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 312), *(void *)(v0 + 288), *(void *)(v0 + 296));
    if (qword_26ACE4108 != -1) {
      swift_once();
    }
    uint64_t v13 = *(void *)(v0 + 272);
    uint64_t v15 = qword_26ACEBA18;
    uint64_t v14 = unk_26ACEBA20;
    char v16 = byte_26ACEBA28;
    long long v17 = (void *)qword_26ACEBA30;
    int v18 = byte_26ACEBA38;
    *(void *)(v13 + 32) = "enableTelemetry=YES";
    *(void *)(v13 + 40) = 19;
    *(unsigned char *)(v13 + 48) = 2;
    *(void *)uint64_t v13 = v15;
    *(void *)(v13 + 8) = v14;
    *(unsigned char *)(v13 + 16) = v16;
    *(void *)(v13 + 24) = v17;
    id v19 = v17;
    sub_214D19EA8();
    sub_214D1A588();
    if (v18 == 1) {
      sub_214D19E88();
    }
    else {
      sub_214D19E98();
    }
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v20 = *(void *)(v0 + 280);

    sub_214B6A2A8(v21, v20);
    id v22 = objc_allocWithZone(MEMORY[0x263F089E0]);
    uint64_t v23 = (void *)sub_214D19A28();
    id v24 = objc_msgSend(v22, sel_initWithURL_, v23);
    *(void *)(v0 + 360) = v24;

    objc_msgSend(v24, sel_setCachePolicy_, 1);
    uint64_t v25 = (void *)sub_214D1A028();
    objc_msgSend(v24, sel_setHTTPMethod_, v25);

    *(unsigned char *)(v0 + 409) = 1;
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_214C2FDF8;
    char v27 = *(unsigned char *)(v0 + 410);
    return sub_214BC961C((uint64_t)v24, v27, 0, (unsigned char *)(v0 + 409));
  }
}

uint64_t sub_214C2FDF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 376) = a1;
  *(void *)(v6 + 384) = a2;
  *(unsigned char *)(v6 + 411) = a4;
  *(void *)(v6 + 392) = a3;
  *(void *)(v6 + 400) = v4;
  swift_task_dealloc();
  if (v4) {
    uint64_t v7 = sub_214C30630;
  }
  else {
    uint64_t v7 = sub_214C2FF14;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214C2FF14()
{
  uint64_t v56 = v0;
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v2 = *(void **)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 376);
  unint64_t v3 = *(void *)(v0 + 384);
  sub_214D19768();
  swift_allocObject();
  sub_214B6A3A0(v4, v3);
  id v5 = v1;
  sub_214D19758();
  sub_214C32FA8();
  sub_214D19748();
  uint64_t v6 = v2;
  int v7 = *(unsigned __int8 *)(v0 + 411);
  if (v6)
  {

    swift_release();
    if (v7)
    {
      if (qword_26ACE3BD0 != -1) {
        swift_once();
      }
      objc_msgSend((id)qword_26ACEB9E0, sel_removeCachedResponseForRequest_, *(void *)(v0 + 360));
    }
    unint64_t v8 = *(void *)(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 376);
    unint64_t v48 = *(void **)(v0 + 392);
    unint64_t v49 = *(void **)(v0 + 360);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 304);
    uint64_t v12 = *(void *)(v0 + 296);
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v50 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 224);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(unsigned char *)(inited + 32) = 2;
    *(void *)(inited + 64) = v12;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v10, v12);
    id v17 = v6;
    unint64_t v18 = sub_214B7E71C(inited);
    LOBYTE(v55[0]) = 0;
    id v19 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v6, (unsigned __int8 *)v55, 0, v18, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D361B0, 233);
    swift_bridgeObjectRelease();

    sub_214C3086C(v19, v14);
    swift_willThrow();

    sub_214B58A4C(v9, v8);
    sub_214B58A4C(v9, v8);
    sub_214D1A578();
    sub_214D19E98();
    sub_214B6A30C(v13);
    v51(v50, v12);
    (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 328), *(void *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    swift_release();
    uint64_t v52 = *(void *)(v0 + 208);
    uint64_t v53 = *(void *)(v0 + 200);
    if (v7)
    {
    }
    else
    {
      if (qword_26ACE3BD0 != -1) {
        swift_once();
      }
      unint64_t v23 = *(void *)(v0 + 384);
      id v22 = *(void **)(v0 + 392);
      uint64_t v24 = *(void *)(v0 + 376);
      uint64_t v26 = *(void *)(v0 + 248);
      uint64_t v25 = *(void *)(v0 + 256);
      uint64_t v27 = *(void *)(v0 + 240);
      unint64_t v28 = (void *)qword_26ACEB9E0;
      sub_214D196E8();
      id v29 = objc_allocWithZone(MEMORY[0x263F086F8]);
      sub_214B6A3A0(v24, v23);
      id v30 = v22;
      int v31 = (void *)sub_214D19B38();
      id v32 = objc_msgSend(v29, sel_initWithResponse_data_, v30, v31);
      sub_214B58A4C(v24, v23);

      uint64_t v33 = (void *)sub_214D196C8();
      objc_msgSend(v28, sel_storeCachedResponse_forRequest_, v32, v33);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
    unint64_t v41 = *(void **)(v0 + 392);
    uint64_t v42 = *(void *)(v0 + 376);
    unint64_t v43 = *(void *)(v0 + 384);
    uint64_t v44 = *(void **)(v0 + 360);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v34 = *(void *)(v0 + 312);
    uint64_t v47 = *(void *)(v0 + 328);
    uint64_t v35 = *(void *)(v0 + 280);
    uint64_t v45 = *(void *)(v0 + 296);
    sub_214B93DCC(*(void *)(v0 + 224) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v0 + 160);
    uint64_t v36 = *(void *)(v0 + 184);
    uint64_t v37 = *(void *)(v0 + 192);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 160), v36);
    char v54 = 9;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v55[0] = 0xD00000000000001FLL;
    v55[1] = 0x8000000214D361E0;
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    uint64_t v38 = sub_214D199C8();
    (*(void (**)(char *, unint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v37 + 80))(&v54, 0xD00000000000001FLL, 0x8000000214D361E0, v38, v39, 0, v36, v37);

    sub_214B58A4C(v42, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B58A4C(v42, v43);
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    sub_214D1A578();
    sub_214D19E98();
    sub_214B6A30C(v35);
    v46(v34, v45);
    v46(v47, v45);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v40 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v40(v53, v52);
  }
}

uint64_t sub_214C30630()
{
  unint64_t v18 = v0;
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = (void *)v0[45];
  char v16 = (void (*)(uint64_t, uint64_t))v0[43];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[38];
  uint64_t v15 = v0[39];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[35];
  uint64_t v7 = v0[28];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 64) = v5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v3, v5);
  id v10 = v1;
  unint64_t v11 = sub_214B7E71C(inited);
  v17[0] = 0;
  uint64_t v12 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v17, 0, v11, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D361B0, 212);
  swift_bridgeObjectRelease();

  sub_214C3086C(v12, v7);
  swift_willThrow();

  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v6);
  v16(v15, v5);
  ((void (*)(void, void))v0[43])(v0[41], v0[37]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

id sub_214C3086C(char *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 6;
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_214B7E71C(inited);
  unsigned __int8 v10 = 0;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x8000000214D36280, a1, &v10, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D361B0, 193);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_214C3097C(uint64_t a1, unsigned char *a2)
{
  switch(*a2)
  {
    case 1:
      unint64_t v7 = (void *)swift_task_alloc();
      v2[5] = v7;
      void *v7 = v2;
      v7[1] = sub_214C31150;
      uint64_t v5 = a1;
      char v6 = 2;
      break;
    case 2:
      id v8 = (void *)swift_task_alloc();
      v2[6] = v8;
      void *v8 = v2;
      v8[1] = sub_214C31248;
      uint64_t v5 = a1;
      char v6 = 3;
      break;
    case 3:
      uint64_t v9 = (void *)swift_task_alloc();
      v2[3] = v9;
      *uint64_t v9 = v2;
      v9[1] = sub_214C30F60;
      uint64_t v5 = a1;
      char v6 = 5;
      break;
    case 4:
      unsigned __int8 v10 = (void *)swift_task_alloc();
      v2[7] = v10;
      *unsigned __int8 v10 = v2;
      v10[1] = sub_214C31340;
      uint64_t v5 = a1;
      char v6 = 6;
      break;
    case 5:
      unint64_t v11 = (void *)swift_task_alloc();
      v2[8] = v11;
      *unint64_t v11 = v2;
      v11[1] = sub_214C31438;
      uint64_t v5 = a1;
      char v6 = 1;
      break;
    case 6:
      uint64_t v12 = (void *)swift_task_alloc();
      v2[4] = v12;
      *uint64_t v12 = v2;
      v12[1] = sub_214C31058;
      uint64_t v5 = a1;
      char v6 = 7;
      break;
    case 7:
      uint64_t v13 = (void *)swift_task_alloc();
      v2[9] = v13;
      *uint64_t v13 = v2;
      v13[1] = sub_214C31530;
      uint64_t v5 = a1;
      char v6 = 8;
      break;
    case 8:
      char v16 = (void *)swift_task_alloc();
      v2[10] = v16;
      void *v16 = v2;
      v16[1] = sub_214C31628;
      uint64_t v5 = a1;
      char v6 = 9;
      break;
    case 9:
      uint64_t v14 = (void *)swift_task_alloc();
      v2[11] = v14;
      *uint64_t v14 = v2;
      v14[1] = sub_214C31720;
      uint64_t v5 = a1;
      char v6 = 10;
      break;
    case 0xA:
      uint64_t v15 = (void *)swift_task_alloc();
      v2[12] = v15;
      *uint64_t v15 = v2;
      v15[1] = sub_214C31818;
      uint64_t v5 = a1;
      char v6 = 11;
      break;
    default:
      uint64_t v4 = (void *)swift_task_alloc();
      v2[2] = v4;
      *uint64_t v4 = v2;
      v4[1] = sub_214C30E68;
      uint64_t v5 = a1;
      char v6 = 4;
      break;
  }
  return sub_214B98E08(v5, v6, 0xD00000000000001BLL, 0x8000000214D36260);
}

uint64_t sub_214C30E68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C30F60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31058()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31150()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31248()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31340()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31438()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31530()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31628()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31720()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31818()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C31910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3B00);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE3AF0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_214D19858();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214D19808();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_214B59CE0((uint64_t)v9, (uint64_t *)&unk_26ACE3AF0);
    unsigned __int8 v20 = 79;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x8000000214D36200, 0, &v20, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD000000000000023, 0x8000000214D36230, 331);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    sub_214C58B2C();
    sub_214D197F8();
    sub_214D19818();
    uint64_t v16 = sub_214D19AA8();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_214B59CE0((uint64_t)v5, (uint64_t *)&unk_26ACE3B00);
      unsigned __int8 v19 = 79;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D36180, 0, &v19, 0, 0, 0xD000000000000061, 0x8000000214D35F50, 0xD000000000000023, 0x8000000214D36230, 335);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v5, v16);
    }
  }
}

uint64_t sub_214C31CA4(char a1, unsigned char *a2)
{
  uint64_t v4 = v2;
  *(void *)(v3 + 288) = v4;
  *(unsigned char *)(v3 + 434) = a1;
  *(void *)(v3 + 296) = swift_getObjectType();
  uint64_t v6 = sub_214D19738();
  *(void *)(v3 + 304) = v6;
  *(void *)(v3 + 312) = *(void *)(v6 - 8);
  *(void *)(v3 + 320) = swift_task_alloc();
  uint64_t v7 = sub_214D19AA8();
  *(void *)(v3 + 328) = v7;
  *(void *)(v3 + 336) = *(void *)(v7 - 8);
  *(void *)(v3 + 344) = swift_task_alloc();
  *(void *)(v3 + 352) = swift_task_alloc();
  *(unsigned char *)(v3 + 435) = *a2;
  return MEMORY[0x270FA2498](sub_214C31DF0, 0, 0);
}

uint64_t sub_214C31DF0()
{
  *(unsigned char *)(v0 + 433) = *(unsigned char *)(*(void *)(v0 + 288)
                                  + OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214C31EA0;
  uint64_t v2 = *(void *)(v0 + 344);
  return sub_214C3097C(v2, (unsigned char *)(v0 + 433));
}

uint64_t sub_214C31EA0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C31F9C, 0, 0);
}

uint64_t sub_214C31F9C()
{
  char v1 = *(unsigned char *)(v0 + 435);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  sub_214D19A38();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 368) = v5;
  *(void *)(v0 + 376) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v3);
  id v6 = objc_allocWithZone(MEMORY[0x263F089E0]);
  uint64_t v7 = (void *)sub_214D19A28();
  id v8 = objc_msgSend(v6, sel_initWithURL_, v7);
  *(void *)(v0 + 384) = v8;

  objc_msgSend(v8, sel_setCachePolicy_, 1);
  uint64_t v9 = (void *)sub_214D1A028();
  objc_msgSend(v8, sel_setHTTPMethod_, v9);

  *(unsigned char *)(v0 + 432) = v1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_214C32130;
  char v11 = *(unsigned char *)(v0 + 434);
  return sub_214BC961C((uint64_t)v8, v11, 0, (unsigned char *)(v0 + 432));
}

uint64_t sub_214C32130(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 400) = a1;
  *(void *)(v6 + 408) = a2;
  *(unsigned char *)(v6 + 436) = a4;
  *(void *)(v6 + 416) = a3;
  *(void *)(v6 + 424) = v4;
  swift_task_dealloc();
  if (v4) {
    uint64_t v7 = sub_214C329C4;
  }
  else {
    uint64_t v7 = sub_214C3224C;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_214C3224C()
{
  uint64_t v60 = v0;
  unint64_t v1 = *(void *)(v0 + 408);
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v2 = *(void *)(v0 + 400);
      if ((int)v2 == v2 >> 32) {
        goto LABEL_13;
      }
      goto LABEL_5;
    case 2uLL:
      uint64_t v2 = *(void *)(v0 + 400);
      if (*(void *)(v2 + 16) == *(void *)(v2 + 24)) {
        goto LABEL_13;
      }
LABEL_5:
      sub_214B6A3A0(v2, *(void *)(v0 + 408));
      goto LABEL_6;
    case 3uLL:
      goto LABEL_3;
    default:
      if ((v1 & 0xFF000000000000) == 0)
      {
LABEL_3:
        sub_214B58A4C(*(void *)(v0 + 400), *(void *)(v0 + 408));
        uint64_t v2 = *(void *)(v0 + 400);
        unint64_t v1 = *(void *)(v0 + 408);
LABEL_13:
        unsigned __int8 v20 = *(void **)(v0 + 416);
        uint64_t v21 = *(void **)(v0 + 384);
        uint64_t v22 = *(void *)(v0 + 352);
        uint64_t v23 = *(void *)(v0 + 328);
        uint64_t v24 = *(void *)(v0 + 336);
        uint64_t v25 = *(void *)(v0 + 288);
        LOBYTE(v59[0]) = 12;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
        *(unsigned char *)(inited + 32) = 2;
        *(void *)(inited + 64) = v23;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v24 + 16))(boxed_opaque_existential_0, v22, v23);
        unint64_t v28 = sub_214B7E71C(inited);
        id v29 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D362F0, 0, (unsigned __int8 *)v59, 0, v28, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D362A0, 270);
        swift_bridgeObjectRelease();
        sub_214C32B78(v29, v25);
        swift_willThrow();

        uint64_t v19 = v2;
        goto LABEL_14;
      }
LABEL_6:
      uint64_t v4 = *(void **)(v0 + 416);
      uint64_t v3 = *(void **)(v0 + 424);
      sub_214D19768();
      swift_allocObject();
      id v5 = v4;
      sub_214D19758();
      sub_214C32FFC();
      sub_214D19748();
      int v6 = *(unsigned __int8 *)(v0 + 436);
      if (v3)
      {
        uint64_t v7 = v3;

        swift_release();
        if (v6)
        {
          if (qword_26ACE3BD0 != -1) {
            swift_once();
          }
          objc_msgSend((id)qword_26ACEB9E0, sel_removeCachedResponseForRequest_, *(void *)(v0 + 384));
        }
        unint64_t v1 = *(void *)(v0 + 408);
        uint64_t v56 = *(void **)(v0 + 416);
        uint64_t v8 = *(void *)(v0 + 400);
        uint64_t v9 = *(void **)(v0 + 384);
        uint64_t v10 = *(void *)(v0 + 352);
        uint64_t v11 = *(void *)(v0 + 328);
        uint64_t v12 = *(void *)(v0 + 336);
        uint64_t v13 = *(void *)(v0 + 288);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
        uint64_t v14 = swift_initStackObject();
        *(_OWORD *)(v14 + 16) = xmmword_214D1C1E0;
        *(unsigned char *)(v14 + 32) = 2;
        *(void *)(v14 + 64) = v11;
        uint64_t v15 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v14 + 40));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v15, v10, v11);
        id v16 = v7;
        unint64_t v17 = sub_214B7E71C(v14);
        LOBYTE(v59[0]) = 0;
        uint64_t v18 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v7, (unsigned __int8 *)v59, 0, v17, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D362A0, 288);
        swift_bridgeObjectRelease();

        sub_214C32B78(v18, v13);
        swift_willThrow();

        sub_214B58A4C(v8, v1);
        uint64_t v19 = v8;
LABEL_14:
        sub_214B58A4C(v19, v1);
        (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 352), *(void *)(v0 + 328));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        id v30 = *(uint64_t (**)(void))(v0 + 8);
        return v30();
      }
      swift_release();
      uint64_t v57 = *(void *)(v0 + 272);
      uint64_t v55 = *(void *)(v0 + 280);
      if (v6)
      {
      }
      else
      {
        if (qword_26ACE3BD0 != -1) {
          swift_once();
        }
        unint64_t v33 = *(void *)(v0 + 408);
        id v32 = *(void **)(v0 + 416);
        uint64_t v34 = *(void *)(v0 + 400);
        uint64_t v36 = *(void *)(v0 + 312);
        uint64_t v35 = *(void *)(v0 + 320);
        uint64_t v37 = *(void *)(v0 + 304);
        uint64_t v38 = (void *)qword_26ACEB9E0;
        sub_214D196E8();
        id v39 = objc_allocWithZone(MEMORY[0x263F086F8]);
        sub_214B6A3A0(v34, v33);
        id v40 = v32;
        unint64_t v41 = (void *)sub_214D19B38();
        id v42 = objc_msgSend(v39, sel_initWithResponse_data_, v40, v41);
        sub_214B58A4C(v34, v33);

        unint64_t v43 = (void *)sub_214D196C8();
        objc_msgSend(v38, sel_storeCachedResponse_forRequest_, v42, v43);

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      }
      unint64_t v50 = *(void *)(v0 + 408);
      uint64_t v51 = *(void **)(v0 + 416);
      unint64_t v48 = *(void **)(v0 + 384);
      uint64_t v49 = *(void *)(v0 + 400);
      char v54 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
      uint64_t v52 = *(void *)(v0 + 328);
      uint64_t v53 = *(void *)(v0 + 352);
      sub_214B93DCC(*(void *)(v0 + 288) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v0 + 232);
      uint64_t v44 = *(void *)(v0 + 256);
      uint64_t v45 = *(void *)(v0 + 264);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 232), v44);
      char v58 = 10;
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      v59[0] = 0xD000000000000011;
      v59[1] = 0x8000000214D362D0;
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      uint64_t v46 = *(void (**)(char *, unint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v45 + 80);
      swift_bridgeObjectRetain();
      v46(&v58, 0xD000000000000011, 0x8000000214D362D0, v57, v55, 0, v44, v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_214B58A4C(v49, v50);
      sub_214B58A4C(v49, v50);
      v54(v53, v52);
      __swift_destroy_boxed_opaque_existential_1(v0 + 232);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v47(v57, v55);
  }
}

uint64_t sub_214C329C4()
{
  uint64_t v15 = v0;
  unint64_t v1 = *(void **)(v0 + 424);
  uint64_t v2 = *(void **)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 288);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 2;
  *(void *)(inited + 64) = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v3, v4);
  id v9 = v1;
  unint64_t v10 = sub_214B7E71C(inited);
  v14[0] = 0;
  uint64_t v11 = (char *)ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v14, 0, v10, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D362A0, 266);
  swift_bridgeObjectRelease();

  sub_214C32B78(v11, v6);
  swift_willThrow();

  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 352), *(void *)(v0 + 328));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

id sub_214C32B78(char *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4450);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
  *(unsigned char *)(inited + 32) = 6;
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_214B7E71C(inited);
  unsigned __int8 v10 = 0;
  id v8 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x2073747320746567, 0xEE0064656C696166, a1, &v10, 0, v7, 0xD000000000000061, 0x8000000214D35F50, 0xD00000000000002BLL, 0x8000000214D362A0, 254);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_214C32C8C()
{
  return sub_214C32CA0();
}

uint64_t sub_214C32CA0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C32D00()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DIPAssessmentStaticWebService()
{
  return self;
}

unint64_t sub_214C32D74()
{
  unint64_t result = qword_26784E220;
  if (!qword_26784E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E220);
  }
  return result;
}

unint64_t sub_214C32DC8()
{
  unint64_t result = qword_26784E228;
  if (!qword_26784E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784E228);
  }
  return result;
}

uint64_t sub_214C32E1C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 208) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 304, 7);
}

uint64_t sub_214C32EB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 225, 7);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_214C32FA8()
{
  unint64_t result = qword_26ACE4128;
  if (!qword_26ACE4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4128);
  }
  return result;
}

unint64_t sub_214C32FFC()
{
  unint64_t result = qword_26ACE4058;
  if (!qword_26ACE4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4058);
  }
  return result;
}

void ODISignpost.init(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = (void *)a1[3];
  int v6 = *((unsigned __int8 *)a1 + 32);
  *(void *)(a2 + 32) = "enableTelemetry=YES";
  *(void *)(a2 + 40) = 19;
  *(unsigned char *)(a2 + 48) = 2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  type metadata accessor for ODISignpost();
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
}

uint64_t type metadata accessor for ODISignpost()
{
  uint64_t result = qword_26ACE3BD8;
  if (!qword_26ACE3BD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall ODISignpost.end(workflowID:isBackground:)(Swift::String_optional workflowID, Swift::Bool_optional isBackground)
{
  if (workflowID.value._object)
  {
    object = workflowID.value._object;
    uint64_t countAndFlagsBits = workflowID.value._countAndFlagsBits;
    if (isBackground.value == 2)
    {
      swift_bridgeObjectRetain();
      sub_214D1A578();
      type metadata accessor for ODISignpost();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_214D1C1E0;
      *(void *)(v4 + 56) = MEMORY[0x263F8D310];
      *(void *)(v4 + 64) = sub_214B5F3EC();
      *(void *)(v4 + 32) = countAndFlagsBits;
      *(void *)(v4 + 40) = object;
    }
    else
    {
      Swift::Bool value = isBackground.value;
      swift_bridgeObjectRetain();
      sub_214D1A578();
      type metadata accessor for ODISignpost();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_214D1C1F0;
      *(void *)(v6 + 56) = MEMORY[0x263F8D310];
      *(void *)(v6 + 64) = sub_214B5F3EC();
      uint64_t v7 = MEMORY[0x263F8D4F8];
      *(void *)(v6 + 32) = countAndFlagsBits;
      *(void *)(v6 + 40) = object;
      uint64_t v8 = MEMORY[0x263F8D530];
      *(void *)(v6 + 96) = v7;
      *(void *)(v6 + 104) = v8;
      *(unsigned char *)(v6 + 72) = value;
    }
    sub_214D19E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_214D1A578();
    type metadata accessor for ODISignpost();
    sub_214D19E98();
  }
}

Swift::Void __swiftcall ODISignpost.end(success:customResultString:)(Swift::Bool success, Swift::String_optional customResultString)
{
  if (customResultString.value._object)
  {
    object = customResultString.value._object;
    uint64_t countAndFlagsBits = customResultString.value._countAndFlagsBits;
    swift_bridgeObjectRetain();
    sub_214D1A578();
    type metadata accessor for ODISignpost();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_214D1C1F0;
    uint64_t v6 = MEMORY[0x263F8D530];
    *(void *)(v5 + 56) = MEMORY[0x263F8D4F8];
    *(void *)(v5 + 64) = v6;
    *(unsigned char *)(v5 + 32) = success;
    *(void *)(v5 + 96) = MEMORY[0x263F8D310];
    *(void *)(v5 + 104) = sub_214B5F3EC();
    *(void *)(v5 + 72) = countAndFlagsBits;
    *(void *)(v5 + 80) = object;
  }
  else
  {
    sub_214D1A578();
    type metadata accessor for ODISignpost();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_214D1C1E0;
    uint64_t v8 = MEMORY[0x263F8D530];
    *(void *)(v7 + 56) = MEMORY[0x263F8D4F8];
    *(void *)(v7 + 64) = v8;
    *(unsigned char *)(v7 + 32) = success;
  }
  sub_214D19E88();
  swift_bridgeObjectRelease();
}

uint64_t ODISignpost.Config.init(name:log:sendTelemetry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ODISignpost(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = (void *)a2[3];
    *(void *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = sub_214D19EB8();
    unsigned __int8 v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    id v11 = v5;
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ODISignpost(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_214D19EB8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_214D19EB8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  id v8 = v6;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_214D19EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_214D19EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_214D19EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214C33A2C);
}

uint64_t sub_214C33A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_214D19EB8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214C33AF0);
}

uint64_t sub_214C33AF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_214D19EB8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_214C33B98()
{
  uint64_t result = sub_214D19EB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for ODISignpost.Config(uint64_t a1)
{
}

uint64_t initializeWithCopy for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODISignpost.Config(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODISignpost.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODISignpost.Config()
{
  return &type metadata for ODISignpost.Config;
}

uint64_t sub_214C33DE0(uint64_t a1)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    swift_bridgeObjectRetain();
    sub_214BBD7FC();
    id v4 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v5 = *v4;
      v16[0] = *(v4 - 1);
      v16[1] = v5;
      swift_bridgeObjectRetain();
      sub_214D1A628();
      uint64_t v6 = sub_214D19AE8();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (v8 >> 60 == 15)
      {
        LOWORD(v16[0]) = 88;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D36420, 0, (unsigned __int16 *)v16, 0, 0, 0xD00000000000006CLL, 0x8000000214D36450, 0xD000000000000021, 0x8000000214D364C0, 132);
        swift_willThrow();
        goto LABEL_11;
      }
      CFDataRef v9 = (const __CFData *)sub_214D19B38();
      SecCertificateRef v10 = SecCertificateCreateWithData(allocator, v9);

      if (!v10) {
        break;
      }
      sub_214B59EAC(v6, v8);
      swift_bridgeObjectRelease();
      uint64_t v11 = v10;
      MEMORY[0x2166AFD10](v11, v12, v13, v14);
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_214D1A298();
      }
      v4 += 2;
      sub_214D1A2B8();
      sub_214D1A288();

      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    LOWORD(v16[0]) = 121;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x8000000214D364F0, 0, (unsigned __int16 *)v16, 0, 0, 0xD00000000000006CLL, 0x8000000214D36450, 0xD000000000000021, 0x8000000214D364C0, 135);
    swift_willThrow();
    sub_214B59EAC(v6, v8);
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_214C340B8()
{
  CFDataRef v1 = *(const __CFData **)(v0 + 16);
  BytePtr = (UInt8 *)CFDataGetBytePtr(v1);
  rsize_t Length = CFDataGetLength(v1);
  memset_s(BytePtr, Length, 0, Length);
  munlock(BytePtr, Length);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPSecureData()
{
  return self;
}

uint64_t *JWSSignedJSON.__allocating_init(payload:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_allocObject();
  id v4 = sub_214C39EDC(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(a1);
  return v4;
}

Swift::Void __swiftcall JWSSignedJSON.setNonce(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  v1[13] = countAndFlagsBits;
  v1[14] = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v1[12])
  {
    v1[12] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  id v4 = (void *)v1[12];
  if (v4)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[12] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v4 = sub_214B874BC(0, v4[2] + 1, 1, v4);
      v1[12] = v4;
    }
    unint64_t v7 = v4[2];
    unint64_t v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      id v4 = sub_214B874BC((void *)(v6 > 1), v7 + 1, 1, v4);
      v1[12] = v4;
    }
    v4[2] = v7 + 1;
    unint64_t v8 = &v4[2 * v7];
    v8[4] = 0x65636E6F6ELL;
    v8[5] = 0xE500000000000000;
  }
  swift_endAccess();
}

uint64_t sub_214C3430C()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_214C3435C(char a1)
{
  uint64_t result = 0x726564616568;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746365746F7270;
      break;
    case 2:
      uint64_t result = 0x64616F6C796170;
      break;
    case 3:
      uint64_t result = 0x727574616E676973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C343F8(char a1)
{
  uint64_t result = 0x726564616568;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746365746F7270;
      break;
    case 2:
      uint64_t result = 0x64616F6C796170;
      break;
    case 3:
      uint64_t result = 0x727574616E676973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C34494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34508(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C34574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C345E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34654@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_214C364D4(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_214C3430C, a3);
}

uint64_t sub_214C3466C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C35510(a1, (uint64_t (*)(void, void, void, void))sub_214C3435C, a2);
}

uint64_t sub_214C34684()
{
  return sub_214C343F8(*v0);
}

uint64_t sub_214C34694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_214C34358(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_214C346C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C3A0E0();
  *a1 = result;
  return result;
}

uint64_t sub_214C346FC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_214C34750(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t JWSSignedJSON.JWSType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_214C34A9C(a1);
}

uint64_t JWSSignedJSON.JWSType.rawValue.getter()
{
  return 0x4F534A2B45534F4ALL;
}

uint64_t sub_214C347CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34840(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C348AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C3491C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C3498C@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSType.init(rawValue:)(a1);
}

void sub_214C34998(void *a1@<X8>)
{
  *a1 = 0x4F534A2B45534F4ALL;
  a1[1] = 0xE90000000000004ELL;
}

uint64_t sub_214C349B8()
{
  return sub_214D1A228();
}

uint64_t sub_214C34A2C()
{
  return sub_214D1A1D8();
}

uint64_t JWSSignedJSON.JWSContentType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_214C34A9C(a1);
}

uint64_t sub_214C34A9C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t JWSSignedJSON.JWSContentType.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_214C34B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34B80(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C34BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34CCC@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSContentType.init(rawValue:)(a1);
}

void sub_214C34CD8(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x8000000214D2E140;
}

uint64_t sub_214C34CF8()
{
  return sub_214D1A228();
}

uint64_t sub_214C34D6C()
{
  return sub_214D1A1D8();
}

uint64_t JWSSignedJSON.JWSCritical.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t JWSSignedJSON.JWSCritical.rawValue.getter()
{
  uint64_t v1 = 0x64657461657263;
  if (*v0 != 1) {
    uint64_t v1 = 1953259891;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65636E6F6ELL;
  }
}

uint64_t sub_214C34E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34EF0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C34F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C34FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C3503C@<X0>(char *a1@<X8>)
{
  return JWSSignedJSON.JWSCritical.init(rawValue:)(a1);
}

uint64_t sub_214C35048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = JWSSignedJSON.JWSCritical.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C35070()
{
  return sub_214D1A228();
}

uint64_t sub_214C350E4()
{
  return sub_214D1A1D8();
}

uint64_t sub_214C35148()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_214C35198(char a1)
{
  uint64_t result = 6777953;
  switch(a1)
  {
    case 1:
      uint64_t result = 6580587;
      break;
    case 2:
      uint64_t result = 7371124;
      break;
    case 3:
      uint64_t result = 7959651;
      break;
    case 4:
      uint64_t result = 1953067619;
      break;
    case 5:
      uint64_t result = 0x65636E6F6ELL;
      break;
    case 6:
      uint64_t result = 0x64657461657263;
      break;
    case 7:
      uint64_t result = 1953259891;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C3525C(char a1)
{
  uint64_t result = 6777953;
  switch(a1)
  {
    case 1:
      uint64_t result = 6580587;
      break;
    case 2:
      uint64_t result = 7371124;
      break;
    case 3:
      uint64_t result = 7959651;
      break;
    case 4:
      uint64_t result = 1953067619;
      break;
    case 5:
      uint64_t result = 0x65636E6F6ELL;
      break;
    case 6:
      uint64_t result = 0x64657461657263;
      break;
    case 7:
      uint64_t result = 1953259891;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C35320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C35394(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C35400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C35470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C354E0@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_214C364D4(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_214C35148, a3);
}

uint64_t sub_214C354F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C35510(a1, (uint64_t (*)(void, void, void, void))sub_214C35198, a2);
}

uint64_t sub_214C35510@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, a1[2], a1[3], a1[4]);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_214C3554C()
{
  return sub_214C3525C(*v0);
}

uint64_t sub_214C3555C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_214C35194(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_214C35590@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C3A0E8();
  *a1 = result;
  return result;
}

uint64_t sub_214C355C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_214C35618(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_214C3566C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[8];
  swift_bridgeObjectRetain();
  JWSSignedJSON.JWSCritical.init(rawValue:)(&v5);
  uint64_t result = 0;
  switch(v5)
  {
    case 1:
      uint64_t v1 = v2;
      goto LABEL_4;
    case 2:
      uint64_t v1 = v3;
      goto LABEL_4;
    case 3:
      return result;
    default:
LABEL_4:
      swift_bridgeObjectRetain();
      return v1;
  }
}

double sub_214C35734@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(void *)(a2 + 72) = 0;
  return result;
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[4];
  uint64_t v23 = a2[3];
  uint64_t v24 = v4;
  uint64_t v22 = v5;
  type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_214D1AB48();
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v7);
  CFDataRef v9 = (char *)v18 - v8;
  char v10 = *v2;
  uint64_t v11 = *((void *)v2 + 1);
  uint64_t v20 = *((void *)v2 + 2);
  uint64_t v21 = v11;
  uint64_t v12 = *((void *)v2 + 3);
  uint64_t v13 = *((void *)v2 + 4);
  v18[6] = *((void *)v2 + 5);
  uint64_t v19 = v12;
  uint64_t v14 = *((void *)v2 + 6);
  v18[4] = *((void *)v2 + 7);
  v18[5] = v13;
  v18[2] = *((void *)v2 + 8);
  void v18[3] = v14;
  v18[1] = *((void *)v2 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD88();
  LOBYTE(v27) = v10;
  char v28 = 0;
  sub_214C3A008();
  uint64_t v15 = v26;
  sub_214D1AB38();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v6);
  }
  uint64_t v17 = v25;
  LOBYTE(v27) = 1;
  sub_214D1AAA8();
  LOBYTE(v27) = 2;
  type metadata accessor for JWSSignedJSON.JWSType();
  swift_getWitnessTable();
  sub_214D1AB38();
  LOBYTE(v27) = 3;
  type metadata accessor for JWSSignedJSON.JWSContentType();
  swift_getWitnessTable();
  sub_214D1AB38();
  uint64_t v27 = v19;
  char v28 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  sub_214B6FF58(&qword_26ACE3988);
  sub_214D1AAE8();
  LOBYTE(v27) = 5;
  sub_214D1AAA8();
  LOBYTE(v27) = 6;
  sub_214D1AAA8();
  LOBYTE(v27) = 7;
  sub_214D1AAA8();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v6);
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.init(from:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v33 = a2;
  type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_214D1AA88();
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v36 = a1;
  uint64_t v7 = (void *)a1;
  CFDataRef v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(v7, v6);
  sub_214D1AD78();
  if (!v2)
  {
    char v39 = 0;
    sub_214C3A08C();
    sub_214D1AA68();
    int v10 = v37;
    LOBYTE(v37) = 1;
    id v32 = v9;
    uint64_t v11 = sub_214D1A9D8();
    uint64_t v14 = v13;
    uint64_t v31 = v11;
    int v38 = v10;
    type metadata accessor for JWSSignedJSON.JWSType();
    LOBYTE(v37) = 2;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_214D1AA68();
    type metadata accessor for JWSSignedJSON.JWSContentType();
    LOBYTE(v37) = 3;
    swift_getWitnessTable();
    sub_214D1AA68();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    char v39 = 4;
    sub_214B6FF58(&qword_26ACE42E8);
    sub_214D1AA18();
    uint64_t v15 = v37;
    LOBYTE(v37) = 5;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_214D1A9D8();
    uint64_t v18 = v17;
    char v19 = v38;
    LOBYTE(v37) = 6;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_214D1A9D8();
    uint64_t v22 = v21;
    LOBYTE(v37) = 7;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_214D1A9D8();
    uint64_t v25 = v24;
    uint64_t v30 = v20;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v34 = v23;
    v26(v32, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v27 = v33;
    *unint64_t v33 = v19;
    v27[1] = v31;
    void v27[2] = v14;
    v27[3] = v15;
    v27[4] = v16;
    uint64_t v28 = v30;
    uint64_t v27[5] = v18;
    v27[6] = v28;
    uint64_t v29 = v34;
    v27[7] = v22;
    v27[8] = v29;
    v27[9] = v25;
  }
  __swift_destroy_boxed_opaque_existential_1(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C360A8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.init(from:)(a1, a2);
}

uint64_t sub_214C360CC(void *a1, void *a2)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(a1, a2);
}

uint64_t sub_214C360E4()
{
  sub_214C3A0F0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_214C3610C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_214C36154())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_214C361A8()
{
  uint64_t v0 = sub_214C3A124();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_214C361E0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_214C36234())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_214C36288()
{
  uint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_214C362DC(char a1)
{
  if (a1) {
    return 7168373;
  }
  else {
    return 6501752;
  }
}

uint64_t sub_214C362FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C36370(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_214C363DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C3644C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_214C364BC@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_214C364D4(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_214C36288, a3);
}

uint64_t sub_214C364D4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void, void, void, void, void)@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = a3(*a1, a1[1], a2[2], a2[3], a2[4]);
  *a4 = result;
  return result;
}

uint64_t sub_214C36518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_214C362DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_214C36550()
{
  return sub_214C362DC(*v0);
}

uint64_t sub_214C36564@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C36288();
  *a1 = result;
  return result;
}

uint64_t sub_214C36598(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_214C365EC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void *JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init()()
{
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *JWSSignedJSON.DIPJWSUnprotectedHeader.init()()
{
  uint64_t result = v0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  return result;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_214C366E4(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_214D1AB48();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD88();
  swift_beginAccess();
  v11[5] = *(void *)(v2 + 16);
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  sub_214B6FF58(&qword_26ACE3988);
  uint64_t v9 = v11[1];
  sub_214D1AAE8();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  swift_beginAccess();
  char v12 = 1;
  swift_bridgeObjectRetain();
  sub_214D1AAA8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return swift_bridgeObjectRelease();
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)(a1);
  return v2;
}

void *JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_214D1AA88();
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v18 - v6;
  v1[2] = 0;
  uint64_t v8 = v1 + 2;
  v1[3] = 0;
  v1[4] = 0;
  uint64_t v9 = a1[3];
  uint64_t v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v10 = v24;
  sub_214D1AD78();
  if (v10)
  {
    swift_release();
  }
  else
  {
    uint64_t v11 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    char v23 = 0;
    sub_214B6FF58(&qword_26ACE42E8);
    uint64_t v12 = v20;
    sub_214D1AA18();
    uint64_t v13 = v22;
    swift_beginAccess();
    void *v8 = v13;
    swift_bridgeObjectRelease();
    LOBYTE(v22) = 1;
    uint64_t v14 = sub_214D1A9D8();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v12);
    swift_beginAccess();
    v2[3] = v14;
    v2[4] = v16;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v2;
}

uint64_t sub_214C36C94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214C36CC0(void *a1)
{
  return sub_214C366E4(a1);
}

uint64_t JWSSignedJSON.unprotectedHeader.getter()
{
  return swift_retain();
}

uint64_t JWSSignedJSON.unprotectedHeader.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t (*JWSSignedJSON.unprotectedHeader.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t JWSSignedJSON.protectedHeader.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 144);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 72);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  long long v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 128);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JWSSignedJSON.protectedHeader.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 5);
  long long v9 = *((_OWORD *)a1 + 3);
  long long v10 = *(_OWORD *)(a1 + 24);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v6 = *((void *)a1 + 9);
  swift_beginAccess();
  *(unsigned char *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v4;
  *(_OWORD *)(v1 + 96) = v10;
  *(void *)(v1 + 112) = v5;
  *(_OWORD *)(v1 + 120) = v9;
  *(void *)(v1 + 136) = v7;
  *(void *)(v1 + 144) = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*JWSSignedJSON.protectedHeader.modify())()
{
  return j__swift_endAccess;
}

uint64_t JWSSignedJSON.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 144));
}

uint64_t *JWSSignedJSON.init(payload:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_214C39EDC(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t JWSSignedJSON.__allocating_init(_:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_214C3A170(a1);
  swift_release();
  return v2;
}

uint64_t JWSSignedJSON.init(_:)(uint64_t a1)
{
  uint64_t v1 = sub_214C3A170(a1);
  swift_release();
  return v1;
}

uint64_t JWSSignedJSON.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  JWSSignedJSON.init(from:)(a1);
  return v2;
}

void *JWSSignedJSON.init(from:)(void *a1)
{
  uint64_t v96 = (void *)*v1;
  uint64_t v3 = v96;
  uint64_t v95 = sub_214D1A7F8();
  unint64_t v92 = *(void *)(v95 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v95, v4);
  unint64_t v91 = (unint64_t)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5, v7);
  uint64_t v94 = (char *)v86 - v9;
  uint64_t v10 = v3[10];
  uint64_t v88 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v13 = (char *)v86 - v12;
  uint64_t v14 = v3[11];
  uint64_t v113 = v1;
  uint64_t v15 = v3[12];
  uint64_t v89 = v14;
  uint64_t v90 = v15;
  type metadata accessor for JWSSignedJSON.CodingKeys();
  swift_getWitnessTable();
  uint64_t v93 = sub_214D1AA88();
  uint64_t v16 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93, v17);
  uint64_t v19 = (char *)v86 - v18;
  uint64_t v20 = a1[3];
  uint64_t v97 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v21 = v98;
  sub_214D1AD78();
  if (v21)
  {
    id v103 = v21;
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    char v23 = v94;
    uint64_t v24 = v95;
    if (swift_dynamicCast())
    {

      unint64_t v25 = v92;
      unint64_t v26 = v91;
      (*(void (**)(unint64_t, char *, uint64_t))(v92 + 32))(v91, v23, v24);
      uint64_t v27 = (void *)swift_allocError();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16))(v28, v26, v24);
      LOWORD(v99) = 86;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x8000000214D365B0, v27, (unsigned __int16 *)&v99, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x6F72662874696E69, 0xEB00000000293A6DLL, 130);

      swift_willThrow();
      (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v26, v24);
      id v29 = v103;
    }
    else
    {

      LOWORD(v103) = 0;
      uint64_t v30 = v21;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D36520, v21, (unsigned __int16 *)&v103, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x6F72662874696E69, 0xEB00000000293A6DLL, 132);

      swift_willThrow();
      id v29 = v21;
    }

    uint64_t v31 = v113;
    goto LABEL_7;
  }
  uint64_t v98 = v13;
  type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader();
  LOBYTE(v99) = 0;
  swift_getWitnessTable();
  sub_214D1AA68();
  uint64_t v35 = v10;
  uint64_t v31 = v113;
  v113[8] = v103;
  LOBYTE(v103) = 1;
  long long v31[2] = sub_214D1AA28();
  v31[3] = v36;
  LOBYTE(v103) = 2;
  v31[4] = sub_214D1AA28();
  v31[5] = v37;
  LOBYTE(v103) = 3;
  uint64_t v38 = sub_214D1AA28();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v93);
  v31[6] = v38;
  v31[7] = v40;
  uint64_t v41 = v31[3];
  uint64_t v99 = v31[2];
  uint64_t v100 = v41;
  uint64_t v111 = 45;
  unint64_t v112 = 0xE100000000000000;
  uint64_t v109 = 43;
  unint64_t v110 = 0xE100000000000000;
  unint64_t v42 = sub_214BBD7FC();
  uint64_t v99 = sub_214D1A628();
  uint64_t v100 = v43;
  uint64_t v111 = 95;
  unint64_t v112 = 0xE100000000000000;
  uint64_t v109 = 47;
  unint64_t v110 = 0xE100000000000000;
  uint64_t v44 = (void *)sub_214D1A628();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  id v103 = v44;
  *(void *)&long long v104 = v46;
  swift_bridgeObjectRetain();
  if ((sub_214D1A0E8() & 3) != 0)
  {
    if ((sub_214D1A0E8() & 3) != 0)
    {
      uint64_t v47 = sub_214D1A0E8();
      swift_bridgeObjectRelease();
      uint64_t v48 = v47 & 3;
      if (v47 <= 0) {
        uint64_t v48 = -(-v47 & 3);
      }
      MEMORY[0x2166AFC60](61, 0xE100000000000000, 4 - v48);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_214D1A108();
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_214D19AE8();
  unint64_t v51 = v50;
  sub_214B6A3F8(v49, v50);
  swift_bridgeObjectRelease();
  if (v51 >> 60 == 15)
  {
    id v103 = 0;
    *(void *)&long long v104 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t)v103;
    LOWORD(v103) = 86;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v52, v104, 0, (unsigned __int16 *)&v103, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x6F72662874696E69, 0xEB00000000293A6DLL, 137);
    swift_bridgeObjectRelease();
    swift_willThrow();
    char v55 = 0;
    goto LABEL_19;
  }
  unint64_t v92 = v42;
  sub_214B59EAC(v49, v51);
  uint64_t v53 = sub_214D19768();
  swift_allocObject();
  sub_214D19758();
  uint64_t v54 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader();
  swift_getWitnessTable();
  sub_214D19748();
  uint64_t v56 = v49;
  uint64_t v94 = (char *)v54;
  uint64_t v90 = v53;
  unint64_t v91 = v51;
  swift_release();
  uint64_t v57 = v108;
  *((unsigned char *)v31 + 72) = (_BYTE)v103;
  *((_OWORD *)v31 + 5) = v104;
  uint64_t v58 = v105;
  long long v59 = v106;
  *((_OWORD *)v31 + 6) = v105;
  *((_OWORD *)v31 + 7) = v59;
  *((_OWORD *)v31 + 8) = v107;
  v31[18] = v57;
  uint64_t v60 = v58;
  if (v58)
  {
    uint64_t v61 = *(void *)(v58 + 16);
    if (v61)
    {
      uint64_t v87 = v49;
      v86[0] = v10;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v86[1] = v60;
      uint64_t v62 = v60 + 40;
      while (1)
      {
        uint64_t v63 = *(void *)(v62 - 8);
        uint64_t v64 = v113[10];
        uint64_t v65 = v113[11];
        uint64_t v66 = v113[18];
        LOBYTE(v103) = *((unsigned char *)v113 + 72);
        *(void *)&long long v104 = v64;
        *((void *)&v104 + 1) = v65;
        long long v67 = *((_OWORD *)v113 + 7);
        long long v105 = *((_OWORD *)v113 + 6);
        long long v106 = v67;
        long long v107 = *((_OWORD *)v113 + 8);
        uint64_t v95 = v105;
        uint64_t v108 = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v93 = v63;
        sub_214C3566C();
        uint64_t v69 = v68;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v69) {
          break;
        }
        v62 += 16;
        swift_bridgeObjectRelease();
        if (!--v61)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v86[0];
          uint64_t v56 = v87;
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      id v103 = 0;
      *(void *)&long long v104 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      uint64_t v79 = (uint64_t)v103;
      LOWORD(v103) = 86;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v79, v104, 0, (unsigned __int16 *)&v103, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x6F72662874696E69, 0xEB00000000293A6DLL, 145);
      swift_bridgeObjectRelease();
      swift_willThrow();
      sub_214B59EAC(v87, v91);
      char v55 = 1;
      uint64_t v31 = v113;
      goto LABEL_19;
    }
  }
LABEL_27:
  uint64_t v31 = v113;
  unint64_t v70 = v113[5];
  uint64_t v111 = v113[4];
  unint64_t v112 = v70;
  uint64_t v109 = 45;
  unint64_t v110 = 0xE100000000000000;
  uint64_t v101 = 43;
  unint64_t v102 = 0xE100000000000000;
  uint64_t v111 = sub_214D1A628();
  unint64_t v112 = v71;
  uint64_t v109 = 95;
  unint64_t v110 = 0xE100000000000000;
  uint64_t v101 = 47;
  unint64_t v102 = 0xE100000000000000;
  size_t v72 = (void *)sub_214D1A628();
  uint64_t v74 = v73;
  swift_bridgeObjectRelease();
  id v103 = v72;
  *(void *)&long long v104 = v74;
  swift_bridgeObjectRetain();
  if ((sub_214D1A0E8() & 3) != 0)
  {
    char v75 = sub_214D1A0E8();
    uint64_t v76 = v88;
    if ((v75 & 3) != 0)
    {
      uint64_t v77 = sub_214D1A0E8();
      swift_bridgeObjectRelease();
      uint64_t v78 = v77 & 3;
      if (v77 <= 0) {
        uint64_t v78 = -(-v77 & 3);
      }
      MEMORY[0x2166AFC60](61, 0xE100000000000000, 4 - v78);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_214D1A108();
  }
  else
  {
    uint64_t v76 = v88;
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = sub_214D19AE8();
  unint64_t v82 = v81;
  sub_214B6A3F8(v80, v81);
  swift_bridgeObjectRelease();
  if (v82 >> 60 == 15)
  {
    id v103 = 0;
    *(void *)&long long v104 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v83 = (uint64_t)v103;
    LOWORD(v103) = 86;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v83, v104, 0, (unsigned __int16 *)&v103, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x6F72662874696E69, 0xEB00000000293A6DLL, 152);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_214B59EAC(v56, v91);
    char v55 = 1;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v55)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_7:
    uint64_t v32 = (uint64_t)v97;
    swift_deallocPartialClassInstance();
    uint64_t v33 = v32;
    goto LABEL_8;
  }
  sub_214B59EAC(v80, v82);
  swift_allocObject();
  sub_214D19758();
  size_t v84 = v98;
  sub_214D19748();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))((char *)v31 + *(void *)(*v31 + 144), v84, v35);
  JWSSignedJSON.verify()();
  if (v85) {
    swift_release();
  }
  sub_214B59EAC(v80, v82);
  sub_214B59EAC(v56, v91);
  uint64_t v33 = (uint64_t)v97;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v33);
  return v31;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.verify()()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_214D1A0A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v0 + 64);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v0 + 64);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10 || !*(void *)(v10 + 16))
  {
    LOWORD(v72) = 73;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000214D366B0, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 249);
    swift_willThrow();
    return;
  }
  uint64_t v74 = v8;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_214B7F570(MEMORY[0x263F8EE78]);
  int v13 = sub_214C39948(v11, v12);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOWORD(v72) = 0;
    uint64_t v16 = v1;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x8000000214D366E0, v1, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 257);

    swift_willThrow();
    return;
  }
  int v14 = v13;
  unint64_t v15 = sub_214C33DE0(v10);
  uint64_t v17 = sub_214BC5EC0(v15, v14, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = SecTrustCopyKey(v17);
  if (!v18)
  {
    LOWORD(v72) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003BLL, 0x8000000214D36710, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 262);
    swift_willThrow();

    return;
  }
  uint64_t v64 = v18;
  uint64_t v65 = v17;
  uint64_t v19 = *(void *)(v2 + 24);
  uint64_t v72 = *(void *)(v2 + 16);
  uint64_t v73 = v19;
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A088();
  uint64_t v20 = sub_214D1A048();
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (v22 >> 60 == 15) {
    goto LABEL_19;
  }
  uint64_t v23 = *(void *)(v2 + 56);
  uint64_t v66 = *(void *)(v2 + 48);
  uint64_t v67 = v23;
  uint64_t v70 = 45;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 43;
  unint64_t v69 = 0xE100000000000000;
  uint64_t v24 = v20;
  sub_214B6A3F8(v20, v22);
  sub_214BBD7FC();
  uint64_t v66 = sub_214D1A628();
  uint64_t v67 = v25;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 47;
  unint64_t v69 = 0xE100000000000000;
  uint64_t v26 = sub_214D1A628();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v72 = v26;
  uint64_t v73 = v28;
  swift_bridgeObjectRetain();
  if ((sub_214D1A0E8() & 3) != 0)
  {
    if ((sub_214D1A0E8() & 3) != 0)
    {
      uint64_t v29 = sub_214D1A0E8();
      swift_bridgeObjectRelease();
      uint64_t v30 = v29 & 3;
      if (v29 <= 0) {
        uint64_t v30 = -(-v29 & 3);
      }
      MEMORY[0x2166AFC60](61, 0xE100000000000000, 4 - v30);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_214D1A108();
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_214D19AE8();
  unint64_t v33 = v32;
  sub_214B6A3F8(v31, v32);
  swift_bridgeObjectRelease();
  if (v33 >> 60 == 15)
  {
    sub_214B59EAC(v24, v22);
    sub_214B59EAC(v24, v22);
LABEL_19:
    LOWORD(v72) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000044, 0x8000000214D36750, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 267);
    swift_willThrow();
LABEL_20:

    return;
  }
  sub_214B59EAC(v31, v33);
  swift_beginAccess();
  uint64_t v34 = v24;
  if (*(unsigned char *)(v2 + 72))
  {
    if (*(unsigned char *)(v2 + 72) != 1)
    {
      sub_214B6A3A0(v31, v33);
      uint64_t v45 = (void *)sub_214D19B38();
      sub_214B59EAC(v24, v22);
      id v46 = DigestSha256(v45);

      uint64_t v47 = v65;
      if (!v46)
      {
        sub_214B59EAC(v31, v33);
        LOWORD(v72) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000041, 0x8000000214D367A0, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 288);
        swift_willThrow();
        sub_214B59EAC(v31, v33);
        sub_214B59EAC(v34, v22);

        return;
      }
      uint64_t v48 = sub_214D19B68();
      unint64_t v50 = v49;

      sub_214B59EAC(v34, v22);
      sub_214B6A3A0(v48, v50);
      unint64_t v51 = (void *)sub_214D19B38();
      sub_214B59EAC(v31, v33);
      id v52 = ECDSASHA256RawToDER(v51);

      if (!v52)
      {
        LOWORD(v72) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x8000000214D367F0, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 292);
        swift_willThrow();
        sub_214B58A4C(v48, v50);
        sub_214B59EAC(v31, v33);
        sub_214B58A4C(v48, v50);
        goto LABEL_20;
      }
      uint64_t v43 = sub_214D19B68();
      uint64_t v74 = v53;

      sub_214B59EAC(v31, v33);
      sub_214B58A4C(v48, v50);
      uint64_t v24 = v48;
      unint64_t v22 = v50;
      uint64_t v40 = v65;
      goto LABEL_32;
    }
    uint64_t v35 = *v74;
    swift_beginAccess();
    if (!*(void *)(v35 + 32))
    {
      sub_214B59EAC(v24, v22);
      uint64_t v39 = v65;
      goto LABEL_41;
    }
    sub_214B6A3F8(v31, v33);
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_214D19AE8();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v39 = v65;
    if (v38 >> 60 == 15)
    {
      sub_214B59EAC(v31, v33);
      sub_214B59EAC(v24, v22);
LABEL_41:
      LOWORD(v70) = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x8000000214D368A0, 0, (unsigned __int16 *)&v70, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 273);
      swift_willThrow();
      sub_214B59EAC(v31, v33);
      sub_214B59EAC(v24, v22);

      return;
    }
    uint64_t v70 = v36;
    unint64_t v71 = v38;
    uint64_t v58 = (void *)sub_214D19B38();
    sub_214B59EAC(v24, v22);
    id v59 = DigestSha256(v58);

    if (!v59)
    {
      sub_214B59EAC(v31, v33);
      LOWORD(v68) = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000041, 0x8000000214D367A0, 0, (unsigned __int16 *)&v68, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 276);
      swift_willThrow();
      sub_214B59EAC(v24, v22);
      sub_214B59EAC(v31, v33);

      sub_214B59EAC(v36, v38);
      return;
    }
    uint64_t v60 = sub_214D19B68();
    uint64_t v61 = v24;
    unint64_t v63 = v62;

    sub_214D19B78();
    sub_214B59EAC(v61, v22);
    sub_214B58A4C(v60, v63);
    uint64_t v24 = v70;
    unint64_t v22 = v71;
  }
  else
  {
    sub_214B6A3F8(v31, v33);
    sub_214B59EAC(v24, v22);
  }
  uint64_t v40 = v65;
  uint64_t v41 = (void *)sub_214D19B38();
  sub_214B59EAC(v31, v33);
  id v42 = ECDSASHA256RawToDER(v41);

  if (!v42)
  {
    LOWORD(v70) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x8000000214D367F0, 0, (unsigned __int16 *)&v70, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x2928796669726576, 0xE800000000000000, 283);
    swift_willThrow();
    sub_214B58A4C(v24, v22);
    sub_214B59EAC(v31, v33);

    return;
  }
  uint64_t v43 = sub_214D19B68();
  uint64_t v74 = v44;

  sub_214B59EAC(v31, v33);
LABEL_32:
  id v54 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 == 1)
  {
    char v55 = (void *)sub_214D1A028();
    unsigned __int8 v56 = objc_msgSend(v54, sel_BOOLForKey_, v55);

    if (v56)
    {
      sub_214B58A4C(v43, (unint64_t)v74);
      sub_214B58A4C(v24, v22);

      return;
    }
  }
  else
  {
  }
  uint64_t v57 = v64;
  sub_214B76C58(v43, (uint64_t)v74, v24, v22, v64, (const __CFString *)*MEMORY[0x263F172E8]);
  sub_214B58A4C(v43, (unint64_t)v74);

  sub_214B58A4C(v24, v22);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.setCertificateChain(_:)(Swift::OpaquePointer a1)
{
  if (*((void *)a1._rawValue + 2))
  {
    swift_beginAccess();
    uint64_t v3 = *(Swift::OpaquePointer **)(v1 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v3[2]._rawValue = a1._rawValue;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4[0] = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000214D368E0, 0, v4, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0xD000000000000017, 0x8000000214D36910, 163);
    swift_willThrow();
  }
}

Swift::Void __swiftcall JWSSignedJSON.setSalt(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  v1[17] = countAndFlagsBits;
  v1[18] = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v1[12])
  {
    v1[12] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)v1[12];
  if (v4)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[12] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v4 = sub_214B874BC(0, v4[2] + 1, 1, v4);
      v1[12] = v4;
    }
    unint64_t v7 = v4[2];
    unint64_t v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      uint64_t v4 = sub_214B874BC((void *)(v6 > 1), v7 + 1, 1, v4);
      v1[12] = v4;
    }
    v4[2] = v7 + 1;
    uint64_t v8 = &v4[2 * v7];
    v8[4] = 1953259891;
    v8[5] = 0xE400000000000000;
  }
  swift_endAccess();
}

void JWSSignedJSON.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_214D1A808();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4, v6);
  unint64_t v37 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v9);
  unint64_t v38 = (char *)&v33 - v10;
  type metadata accessor for JWSSignedJSON.CodingKeys();
  swift_getWitnessTable();
  uint64_t v40 = sub_214D1AB48();
  MEMORY[0x270FA5388](v40, v11);
  int v14 = (char *)&v33 - v13;
  unint64_t v15 = v2[5];
  uint64_t v16 = v2[4] & 0xFFFFFFFFFFFFLL;
  if ((v15 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v15) & 0xF;
  }
  if (!v16) {
    goto LABEL_12;
  }
  unint64_t v17 = v2[3];
  uint64_t v18 = v2[2] & 0xFFFFFFFFFFFFLL;
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v18 = HIBYTE(v17) & 0xF;
  }
  if (!v18) {
    goto LABEL_12;
  }
  unint64_t v19 = v2[7];
  uint64_t v20 = v2[6] & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v20 = HIBYTE(v19) & 0xF;
  }
  if (v20)
  {
    uint64_t v33 = v12;
    uint64_t v34 = v5;
    uint64_t v35 = v4;
    uint64_t v21 = a1[3];
    uint64_t v36 = a1[4];
    unint64_t v22 = v14;
    __swift_project_boxed_opaque_existential_1(a1, v21);
    sub_214D1AD88();
    swift_beginAccess();
    id v43 = (id)v2[8];
    LOBYTE(v41) = 0;
    type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader();
    swift_getWitnessTable();
    uint64_t v23 = v39;
    uint64_t v24 = v40;
    sub_214D1AB38();
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v24);
      uint64_t v26 = v34;
      uint64_t v25 = v35;
      uint64_t v27 = v38;
      id v43 = v23;
      uint64_t v28 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
      if (swift_dynamicCast())
      {

        uint64_t v29 = v37;
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v37, v27, v25);
        uint64_t v30 = (void *)swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v31, v29, v25);
        unsigned __int16 v41 = 87;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x8000000214D36970, v30, &v41, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x742865646F636E65, 0xEB00000000293A6FLL, 239);

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
      }
      else
      {

        LOWORD(v43) = 0;
        unint64_t v32 = v23;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x8000000214D36930, v23, (unsigned __int16 *)&v43, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x742865646F636E65, 0xEB00000000293A6FLL, 241);

        swift_willThrow();
      }
    }
    else
    {
      LOBYTE(v43) = 1;
      swift_bridgeObjectRetain();
      sub_214D1AAF8();
      swift_bridgeObjectRelease();
      LOBYTE(v43) = 2;
      swift_bridgeObjectRetain();
      sub_214D1AAF8();
      swift_bridgeObjectRelease();
      LOBYTE(v43) = 3;
      swift_bridgeObjectRetain();
      sub_214D1AAF8();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v24);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_12:
    v42[0] = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x8000000214D36990, 0, v42, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0x742865646F636E65, 0xEB00000000293A6FLL, 230);
    swift_willThrow();
  }
}

uint64_t sub_214C39948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v6 = (char *)v20 - v5;
  if (qword_26ACE4060 != -1) {
    swift_once();
  }
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  uint64_t v25 = v4;
  sub_214B5EC30((uint64_t)&v25, (uint64_t)v24);
  uint64_t v7 = sub_214D1A0B8();
  MEMORY[0x270FA5388](v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3BE8);
  sub_214D1A518();
  swift_bridgeObjectRelease();
  uint64_t v9 = v24[0];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  if (v9 == 17)
  {
    unsigned int v23 = 17;
    if (qword_26ACE41D8 != -1) {
      swift_once();
    }
    id v10 = (id)qword_26ACEBA50;
    v20[1] = sub_214D1A498();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_214D1C1E0;
    uint64_t v12 = v3 + *(void *)(*(void *)v3 + 144);
    uint64_t v13 = v28;
    uint64_t v21 = *(void (**)(char *))(v28 + 16);
    uint64_t v22 = v12;
    v21(v6);
    swift_getDynamicType();
    int v14 = *(void (**)(char *, uint64_t))(v13 + 8);
    v14(v6, v4);
    uint64_t v15 = sub_214D1ADC8();
    uint64_t v17 = v16;
    *(void *)(v11 + 56) = MEMORY[0x263F8D310];
    *(void *)(v11 + 64) = sub_214B5F3EC();
    *(void *)(v11 + 32) = v15;
    *(void *)(v11 + 40) = v17;
    sub_214D19E78();

    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
    uint64_t v26 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    ((void (*)(char *, uint64_t, uint64_t))v21)(v6, v22, v4);
    swift_getDynamicType();
    v14(v6, v4);
    sub_214D1ADC8();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v18 = v25;
    LOWORD(v25) = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v18, v26, 0, (unsigned __int16 *)&v25, 0, 0, 0xD00000000000006DLL, 0x8000000214D36540, 0xD000000000000015, 0x8000000214D36AA0, 310);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return v23;
  }
  return v9;
}

uint64_t *JWSSignedJSON.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  return v0;
}

uint64_t JWSSignedJSON.__deallocating_deinit()
{
  JWSSignedJSON.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_214C39E8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = JWSSignedJSON.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_214C39EB8(void *a1)
{
}

uint64_t *sub_214C39EDC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader();
  uint64_t v5 = (void *)swift_allocObject();
  v5[3] = 0;
  uint64_t v5[4] = 0;
  v5[2] = 0;
  v1[8] = (uint64_t)v5;
  *((unsigned char *)v1 + 72) = 0;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  v1[18] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))((uint64_t)v1 + *(void *)(v3 + 144), a1, v4);
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = 0;
  v1[7] = 0xE000000000000000;
  return v1;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSCritical()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_214C3A008()
{
  unint64_t result = qword_26784E258[0];
  if (!qword_26784E258[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26784E258);
  }
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for JWSSignedJSON.JWSContentType()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_214C3A08C()
{
  unint64_t result = qword_26ACE3BF8;
  if (!qword_26ACE3BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3BF8);
  }
  return result;
}

uint64_t sub_214C3A0E0()
{
  return 4;
}

uint64_t sub_214C3A0E8()
{
  return 8;
}

uint64_t sub_214C3A0F0()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_214C3A124()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_214C3A170(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(v1 + *(void *)(*(void *)v1 + 144), a1 + *(void *)(*(void *)a1 + 144));
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(v1 + 16) = *(void *)(a1 + 16);
  *(void *)(v1 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 40);
  *(void *)(v1 + 32) = *(void *)(a1 + 32);
  *(void *)(v1 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)(v1 + 48) = *(void *)(a1 + 48);
  *(void *)(v1 + 56) = v5;
  swift_beginAccess();
  *(void *)(v1 + 64) = *(void *)(a1 + 64);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 144);
  long long v9 = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 112);
  long long v11 = *(_OWORD *)(a1 + 128);
  *(unsigned char *)(v1 + 72) = *(unsigned char *)(a1 + 72);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = v7;
  *(_OWORD *)(v1 + 96) = v9;
  *(_OWORD *)(v1 + 112) = v10;
  *(_OWORD *)(v1 + 128) = v11;
  *(void *)(v1 + 144) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for JWSSignedJSON.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_214C3A334()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3A350()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3A36C()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3A388@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_214C3A0F0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_214C3A3C4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_214C3610C(v0);
}

uint64_t sub_214C3A3F0()
{
  return 24;
}

__n128 sub_214C3A3FC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_214C3A410@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_214C3A124();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_214C3A450(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_214C361E0(v1, v2);
}

uint64_t sub_214C3A490()
{
  return 24;
}

__n128 sub_214C3A49C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_214C3A4B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for JWSSignedJSON(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for JWSSignedJSON);
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(payload:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *sub_214C3A5F4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x214C3A690);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_214C3A6B8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C3A784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_214C3A7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_214C3A7B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C3A808(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214C3A890(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_214C3A97C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C3A9FC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_214C3AA58(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_214C3AAC0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for JWSSignedJSON.DIPJWSUnprotectedHeader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for JWSSignedJSON.DIPJWSUnprotectedHeader);
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unsigned char *sub_214C3AC70(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C3AD3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_214C3AD64(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C3AE30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ODIGeocoderBindingsName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_214C3AEE8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C3AFB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_214C3AFDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3AFF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B014()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B030()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B04C()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B068()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B084()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B0A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B0BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_214C3B0D8@<X0>(char *a1@<X8>)
{
  return sub_214BD65FC(v1[2], v1[3], v1[4], a1);
}

CoreODIEssentials::CoreODILogger __swiftcall CoreODILogger.init()()
{
  void *v0 = 45;
  v0[1] = 0xE100000000000000;
  return result;
}

uint64_t CoreODILogger.info(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90270]);
}

Swift::Void __swiftcall CoreODILogger.milestone(tag:description:value:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::String_optional value, Swift::Bool isSensitive)
{
  object = value.value._object;
  uint64_t countAndFlagsBits = value.value._countAndFlagsBits;
  BOOL v7 = description._object;
  uint64_t v8 = description._countAndFlagsBits;
  uint64_t v10 = *v4;
  unint64_t v9 = v4[1];
  if (!isSensitive
    || (id v11 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v12 = (void *)sub_214D1A028(),
        unsigned int v13 = objc_msgSend(v11, sel_BOOLForKey_, v12),
        v11,
        v12,
        v13))
  {
    if (object)
    {
      uint64_t v28 = v8;
      uint64_t v14 = qword_26ACE4210;
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_214D19EE8();
      __swift_project_value_buffer(v15, (uint64_t)qword_26ACEBAA0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_214D19EC8();
      os_log_type_t v17 = sub_214D1A498();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v27 = countAndFlagsBits;
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        uint64_t v29 = v19;
        *(_DWORD *)uint64_t v18 = 136315906;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v10, v9, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 2080;
        uint64_t v20 = MilestoneTag.rawValue.getter();
        sub_214C3D88C(v20, 0xE800000000000000, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v28, (unint64_t)v7, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 32) = 2080;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v27, (unint64_t)object, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_214B4E000, v16, v17, "[%s] (%s) %s ::: %s", (uint8_t *)v18, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v19, -1, -1);
        MEMORY[0x2166B1540](v18, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      if (qword_26ACE4210 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_214D19EE8();
      __swift_project_value_buffer(v21, (uint64_t)qword_26ACEBAA0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_214D19EC8();
      os_log_type_t v23 = sub_214D1A498();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v29 = v25;
        *(_DWORD *)uint64_t v24 = 136315650;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v10, v9, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        uint64_t v26 = MilestoneTag.rawValue.getter();
        sub_214C3D88C(v26, 0xE800000000000000, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v8, (unint64_t)v7, &v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_214B4E000, v22, v23, "[%s] (%s) %s", (uint8_t *)v24, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v25, -1, -1);
        MEMORY[0x2166B1540](v24, -1, -1);

        return;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t CoreODILogger.warning(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90280]);
}

id defaultLog()()
{
  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26ACEBA50;
  return v0;
}

uint64_t CoreODILogger.error(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90280]);
}

uint64_t CoreODILogger.debug(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90278]);
}

uint64_t CoreODILogger.fault(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90288]);
}

Swift::Void __swiftcall CoreODILogger.milestone(tag:description:dictionary:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::OpaquePointer dictionary, Swift::Bool isSensitive)
{
  object = description._object;
  uint64_t countAndFlagsBits = description._countAndFlagsBits;
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v8 - 8, v9);
  id v11 = *(void **)v4;
  unint64_t v10 = *(void *)(v4 + 8);
  if (!isSensitive
    || (id v12 = objc_msgSend(self, sel_standardUserDefaults),
        unsigned int v13 = (void *)sub_214D1A028(),
        unsigned int v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    uint64_t v15 = self;
    uint64_t v16 = (void *)sub_214D19F88();
    id v37 = 0;
    id v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 0, &v37);

    id v18 = v37;
    if (v17)
    {
      uint64_t v34 = countAndFlagsBits;
      uint64_t v19 = sub_214D19B68();
      unint64_t v21 = v20;

      sub_214D1A088();
      uint64_t v22 = sub_214D1A058();
      if (v23)
      {
        unint64_t v24 = v23;
        uint64_t v33 = v22;
        if (qword_26ACE4210 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_214D19EE8();
        __swift_project_value_buffer(v25, (uint64_t)qword_26ACEBAA0);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_214D19EC8();
        os_log_type_t v27 = sub_214D1A498();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          unint64_t v32 = (void *)swift_slowAlloc();
          id v37 = v32;
          *(_DWORD *)uint64_t v28 = 136315906;
          swift_bridgeObjectRetain();
          sub_214C3D88C((uint64_t)v11, v10, (uint64_t *)&v37);
          sub_214D1A5F8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v28 + 12) = 2080;
          uint64_t v29 = MilestoneTag.rawValue.getter();
          sub_214C3D88C(v29, 0xE800000000000000, (uint64_t *)&v37);
          sub_214D1A5F8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 22) = 2080;
          swift_bridgeObjectRetain();
          sub_214C3D88C(v34, (unint64_t)object, (uint64_t *)&v37);
          sub_214D1A5F8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v28 + 32) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_214C3D88C(v33, v24, (uint64_t *)&v37);
          sub_214D1A5F8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_214B4E000, v26, v27, "[%s] (%s) %s ::: %s", (uint8_t *)v28, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x2166B1540](v32, -1, -1);
          MEMORY[0x2166B1540](v28, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        sub_214B58A4C(v19, v21);
      }
      else
      {
        id v37 = v11;
        unint64_t v38 = v10;
        uint64_t v35 = 14;
        unint64_t v36 = 0xE000000000000000;
        sub_214D1A7A8();
        sub_214D1A108();
        MilestoneTag.rawValue.getter();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v35);
        sub_214B58A4C(v19, v21);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v30 = v18;
      uint64_t v31 = (void *)sub_214D199B8();

      swift_willThrow();
      id v37 = v11;
      unint64_t v38 = v10;
      uint64_t v35 = 14;
      unint64_t v36 = 0xE000000000000000;
      sub_214D1A7A8();
      sub_214D1A108();
      MilestoneTag.rawValue.getter();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      sub_214D1A108();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
      sub_214D1A908();
      CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v35);
      swift_bridgeObjectRelease();
    }
  }
}

id static Logger.coreODISensitiveLoggingEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  unint64_t v1 = (void *)sub_214D1A028();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t CoreODILogger.sensitive(_:category:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_214D19EE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a3;
  sub_214C3C4D0(&v11, (uint64_t)v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214C3DE8C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

CoreODIEssentials::CoreODILogger __swiftcall CoreODILogger.init(sessionIdentifier:)(CoreODIEssentials::CoreODILogger sessionIdentifier)
{
  *unint64_t v1 = sessionIdentifier;
  return sessionIdentifier;
}

void Logger.sensitive(_:)(uint64_t (*a1)(void))
{
  id v2 = objc_msgSend(self, sel_standardUserDefaults);
  int v3 = (void *)sub_214D1A028();
  unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  if (v4)
  {
    uint64_t v5 = a1();
    unint64_t v7 = v6;
    swift_bridgeObjectRetain();
    oslog = sub_214D19EC8();
    os_log_type_t v8 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_214C3D88C(v5, v7, &v12);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, oslog, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v10, -1, -1);
      MEMORY[0x2166B1540](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_214C3C0D0()
{
  sub_214C2B95C();
  uint64_t result = sub_214D1A5B8();
  qword_26ACEBA50 = result;
  return result;
}

uint64_t sub_214C3C12C(uint64_t a1)
{
  return sub_214C3C148(a1, qword_26ACEBA58);
}

uint64_t sub_214C3C13C(uint64_t a1)
{
  return sub_214C3C148(a1, qword_26ACE3AD0);
}

uint64_t sub_214C3C148(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_214D19EE8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_214D19ED8();
}

uint64_t _s17CoreODIEssentials13defaultLogger2os0D0VyF_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_26ACE3C08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_214D19EE8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26ACE3AD0);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

Swift::Void __swiftcall setProcessName(_:)(Swift::String a1)
{
  xmmword_26784E2E0 = (__int128)a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
}

Swift::String_optional __swiftcall processName()()
{
  unsigned long long v0 = xmmword_26784E2E0;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)(v0 >> 64);
  uint64_t v1 = v0;
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

CoreODIEssentials::MilestoneTag_optional __swiftcall MilestoneTag.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t MilestoneTag.rawValue.getter()
{
  return *(void *)&a20ac50d6780d07[8 * *v0];
}

uint64_t sub_214C3C35C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1D184(*a1, *a2);
}

uint64_t sub_214C3C368()
{
  return sub_214D1AD48();
}

uint64_t sub_214C3C3C8()
{
  MilestoneTag.rawValue.getter();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C3C424()
{
  return sub_214D1AD48();
}

CoreODIEssentials::MilestoneTag_optional sub_214C3C480(Swift::String *a1)
{
  return MilestoneTag.init(rawValue:)(*a1);
}

uint64_t sub_214C3C48C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MilestoneTag.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE800000000000000;
  return result;
}

uint64_t CoreODILogger.notice(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90290]);
}

uint64_t sub_214C3C4D0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      if (qword_26ACE41F8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEBA70;
      break;
    case 2:
      if (qword_26784C9C0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863A40;
      break;
    case 3:
      if (qword_26784C9C8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863A58;
      break;
    case 4:
      if (qword_26784C9D0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863A70;
      break;
    case 5:
      if (qword_26ACE3908 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEB968;
      break;
    case 6:
      if (qword_26ACE3920 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEB998;
      break;
    case 7:
      if (qword_26784C9D8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863A88;
      break;
    case 8:
      if (qword_26784C9E0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863AA0;
      break;
    case 9:
      if (qword_26784C9F0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863AD0;
      break;
    case 0xA:
      if (qword_26ACE3918 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEB980;
      break;
    case 0xB:
      if (qword_26784CA00 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863AE8;
      break;
    case 0xC:
      if (qword_26784CA08 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863B00;
      break;
    case 0xD:
      if (qword_26784C9E8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863AB8;
      break;
    case 0xE:
      if (qword_26ACE4208 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEBA88;
      break;
    case 0xF:
      if (qword_26ACE4210 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEBAA0;
      break;
    case 0x10:
      if (qword_26ACE3938 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEB9C8;
      break;
    case 0x11:
      if (qword_26784CA10 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_267863B18;
      break;
    default:
      if (qword_26ACE3930 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_214D19EE8();
      uint64_t v4 = v3;
      char v5 = qword_26ACEB9B0;
      break;
  }
  uint64_t v6 = __swift_project_value_buffer(v3, (uint64_t)v5);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v7(a2, v6, v4);
}

uint64_t CoreODILogger.critical(_:category:)(uint64_t a1, unint64_t a2, unsigned char *a3)
{
  return sub_214C3CAC4(a1, a2, a3, MEMORY[0x263F90288]);
}

uint64_t sub_214C3CAC4(uint64_t a1, unint64_t a2, unsigned char *a3, uint64_t (*a4)(void))
{
  uint64_t v9 = sub_214D19EE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  unsigned int v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v12) = *a3;
  uint64_t v15 = *v4;
  unint64_t v14 = v4[1];
  LOBYTE(v25) = v12;
  sub_214C3C4D0(&v25, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_214D19EC8();
  os_log_type_t v17 = a4();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v20 = v19;
    v26[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v24 = v9;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_214C3D88C(v15, v14, v26);
    sub_214D1A5F8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_214C3D88C(v23, a2, v26);
    sub_214D1A5F8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_214B4E000, v16, v17, "[%s] %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v20, -1, -1);
    MEMORY[0x2166B1540](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t CoreODILogger.fault(_:isPublic:category:)(uint64_t a1, unint64_t a2, char a3, char *a4)
{
  uint64_t v9 = sub_214D19EE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15);
  os_log_type_t v17 = (char *)&v34 - v16;
  char v18 = *a4;
  uint64_t v20 = *v4;
  unint64_t v19 = v4[1];
  if (a3)
  {
    LOBYTE(v37) = v18;
    sub_214C3C4D0(&v37, (uint64_t)&v34 - v16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v21 = sub_214D19EC8();
    os_log_type_t v22 = sub_214D1A4B8();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = a1;
      uint64_t v25 = v24;
      v38[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v36 = v9;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_214C3D88C(v20, v19, v38);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_214C3D88C(v35, a2, v38);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, v21, v22, "[%s] %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v25, -1, -1);
      MEMORY[0x2166B1540](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v33 = v17;
  }
  else
  {
    LOBYTE(v37) = v18;
    sub_214C3C4D0(&v37, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    os_log_type_t v27 = sub_214D19EC8();
    os_log_type_t v28 = sub_214D1A4B8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v35 = a1;
      uint64_t v31 = v30;
      v38[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315395;
      uint64_t v36 = v9;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_214C3D88C(v20, v19, v38);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_214C3D88C(v35, a2, v38);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, v27, v28, "[%s] %{private}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v31, -1, -1);
      MEMORY[0x2166B1540](v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v33 = v14;
  }
  return v32(v33, v9);
}

void CoreODILogger.milestone<A>(tag:description:encodableValue:isSensitive:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = *v5;
  unint64_t v10 = v5[1];
  if ((a5 & 1) == 0
    || (id v12 = objc_msgSend(self, sel_standardUserDefaults),
        uint64_t v13 = (void *)sub_214D1A028(),
        unsigned int v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    sub_214D19798();
    swift_allocObject();
    sub_214D19788();
    uint64_t v15 = sub_214D19778();
    unint64_t v17 = v16;
    swift_release();
    sub_214D1A088();
    uint64_t v18 = sub_214D1A058();
    unint64_t v20 = v19;
    sub_214B58A4C(v15, v17);
    if (v20)
    {
      if (qword_26ACE4210 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_214D19EE8();
      __swift_project_value_buffer(v21, (uint64_t)qword_26ACEBAA0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      os_log_type_t v22 = sub_214D19EC8();
      os_log_type_t v23 = sub_214D1A498();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        v29[0] = v25;
        *(_DWORD *)uint64_t v24 = 136315906;
        swift_bridgeObjectRetain();
        sub_214C3D88C(v11, v10, v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        uint64_t v26 = MilestoneTag.rawValue.getter();
        sub_214C3D88C(v26, 0xE800000000000000, v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_214C3D88C(a2, a3, v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 32) = 2080;
        swift_bridgeObjectRetain();
        v28[0] = sub_214C3D88C(v18, v20, v29);
        sub_214D1A5F8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_214B4E000, v22, v23, "[%s] (%s) %s ::: %s", (uint8_t *)v24, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x2166B1540](v25, -1, -1);
        MEMORY[0x2166B1540](v24, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      v29[0] = v11;
      v29[1] = v10;
      sub_214D1A7A8();
      swift_bridgeObjectRelease();
      v28[0] = 0xD00000000000000ELL;
      v28[1] = 0x8000000214D36B30;
      MilestoneTag.rawValue.getter();
      sub_214D1A108();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0xD000000000000025, 0x8000000214D36B30, v28);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_214C3D66C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_214D19EE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *a3;
  sub_214C3C4D0(&v11, (uint64_t)v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_214C3DE8C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_214C3D7A0(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_214C3D7B0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_214C3D7EC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_214C3D814(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_214C3D88C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_214D1A5F8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_214C3D88C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_214C3D960(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_214B5EC30((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_214B5EC30((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_214C3D960(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_214D1A608();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_214C3DB1C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_214D1A818();
  if (!v8)
  {
    sub_214D1A918();
    __break(1u);
LABEL_17:
    uint64_t result = sub_214D1A988();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_214C3DB1C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_214C3DBB4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_214C3DD2C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_214C3DD2C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_214C3DBB4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_214C6631C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_214D1A7B8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_214D1A918();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_214D1A128();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_214D1A988();
    __break(1u);
LABEL_14:
    uint64_t result = sub_214D1A918();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_214C3DD2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4480);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

unsigned char **sub_214C3DE7C(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_214C3DE8C()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_214D1A028();
  unsigned int v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if (v2)
  {
    v7[1] = 0xE000000000000000;
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    oslog = sub_214D19EC8();
    os_log_type_t v3 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v7[0] = v5;
      *(_DWORD *)unint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_214C3D88C(0, 0xE000000000000000, v7);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, oslog, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v5, -1, -1);
      MEMORY[0x2166B1540](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

unint64_t sub_214C3E0EC()
{
  unint64_t result = qword_26784E2F0;
  if (!qword_26784E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E2F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MilestoneTag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C3E20CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MilestoneTag()
{
  return &type metadata for MilestoneTag;
}

ValueMetadata *type metadata accessor for CoreODILogger()
{
  return &type metadata for CoreODILogger;
}

void sub_214C3E254()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_214D1A028();
  unsigned int v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if (v2)
  {
    v7[1] = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    oslog = sub_214D19EC8();
    os_log_type_t v3 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v3))
    {
      unsigned int v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v7[0] = v5;
      *(_DWORD *)unsigned int v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_214C3D88C(0, 0xE000000000000000, v7);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, oslog, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v5, -1, -1);
      MEMORY[0x2166B1540](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_214C3E4AC(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  unsigned int v4 = (void *)sub_214D1A028();
  unsigned int v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  if (v5)
  {
    v11[1] = 0xE000000000000000;
    sub_214D1A108();
    id v6 = objc_msgSend(a2, sel_description);
    sub_214D1A038();

    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    swift_bridgeObjectRetain();
    oslog = sub_214D19EC8();
    os_log_type_t v7 = sub_214D1A498();
    if (os_log_type_enabled(oslog, v7))
    {
      int64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v11[0] = v9;
      *(_DWORD *)int64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_214C3D88C(0, 0xE000000000000000, v11);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_214B4E000, oslog, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v9, -1, -1);
      MEMORY[0x2166B1540](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

id sub_214C3E720()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession;
  uint64_t v3 = MEMORY[0x2166B1650](*(void *)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession]+ OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_owner);
  if (!v3) {
    goto LABEL_5;
  }
  unsigned int v4 = (void *)v3;
  if ((char *)v3 == v0)
  {

LABEL_5:
    sub_214B93DCC((uint64_t)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], (uint64_t)v18);
    uint64_t v8 = v19;
    uint64_t v9 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    id v10 = objc_msgSend(v0, sel_description);
    sub_214D1A038();

    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214BD7608(&v16);
    Loggable.debug(_:category:)(0, 0xE000000000000000, (char *)&v16, v8, v9);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    id v11 = *(id *)&v1[v2];
    id v12 = sub_214BC7314();
    objc_msgSend(v12, sel_invalidateAndCancel);

    id v13 = sub_214BC7340();
    objc_msgSend(v13, sel_invalidateAndCancel);

    goto LABEL_6;
  }
  sub_214B93DCC((uint64_t)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], (uint64_t)v18);
  uint64_t v5 = v19;
  uint64_t v6 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  sub_214D1A7A8();
  swift_bridgeObjectRelease();
  unint64_t v16 = 0xD00000000000001BLL;
  unint64_t v17 = 0x8000000214D36E10;
  id v7 = objc_msgSend(v4, sel_description);
  sub_214D1A038();

  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214BD7608(&v16);
  Loggable.debug(_:category:)(0xD00000000000001BLL, 0x8000000214D36E10, (char *)&v16, v5, v6);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
LABEL_6:
  v15.id receiver = v1;
  v15.super_class = (Class)type metadata accessor for DIPWebService();
  return objc_msgSendSuper2(&v15, sel_dealloc);
}

uint64_t type metadata accessor for DIPWebService()
{
  return self;
}

ValueMetadata *type metadata accessor for DIPConversation()
{
  return &type metadata for DIPConversation;
}

id sub_214C3EAE4(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_214D19CC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession] = a1;
  id v10 = v2;
  id v11 = a1;
  sub_214D19CB8();
  uint64_t v12 = sub_214D19C88();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  objc_super v15 = (uint64_t *)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID];
  *objc_super v15 = v12;
  v15[1] = v14;
  sub_214B93DCC(a2, (uint64_t)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger]);

  unint64_t v16 = (objc_class *)type metadata accessor for DIPWebService();
  v19.id receiver = v10;
  v19.super_class = v16;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_214BC7464();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v17;
}

uint64_t sub_214C3EC54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_214B67F28(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_214C5023C(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v22 = v3 + 80;
  int64_t v23 = v1;
  int v24 = v5;
  uint64_t v25 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    char v26 = *(unsigned char *)(*(void *)(v3 + 48) + v6);
    uint64_t result = (uint64_t)sub_214C45300();
    uint64_t v12 = result;
    uint64_t v13 = v3;
    unint64_t v15 = *(void *)(v27 + 16);
    unint64_t v14 = *(void *)(v27 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_214B67F28(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v27 + 16) = v15 + 1;
    uint64_t v16 = v27 + 16 * v15;
    *(unsigned char *)(v16 + 32) = v26;
    *(void *)(v16 + 40) = v12;
    int64_t v9 = 1 << *(unsigned char *)(v13 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v25;
    uint64_t v17 = *(void *)(v25 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v13;
    int v5 = v24;
    if (*(_DWORD *)(v13 + 36) != v24) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v23;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v23;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v25 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(v22 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_214C3EE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E450);
  MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E458);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  unint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E460);
  uint64_t v21 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v23(v22, 1, 1, v16);
  int v24 = (void *)(v21 + *(void *)(*(void *)v21 + 104));
  *int v24 = 0;
  v24[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v20, v16);
  v23((uint64_t)v15, 0, 1, v16);
  swift_beginAccess();
  sub_214BF8750((uint64_t)v15, v22, &qword_26784E450);
  swift_endAccess();
  uint64_t v25 = sub_214D1A368();
  char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 1, 1, v25);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = 0;
  v27[3] = 0;
  v27[4] = v36;
  uint64_t v27[5] = v21;
  swift_retain();
  uint64_t v28 = sub_214BD7480((uint64_t)v11, (uint64_t)&unk_26784E470, (uint64_t)v27);
  v26(v11, 1, 1, v25);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  uint64_t v29[3] = 0;
  v29[4] = v37;
  v29[5] = a4;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v29[6] = v21;
  v29[7] = v30;
  v29[8] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E480, (uint64_t)v29);
  v26(v11, 1, 1, v25);
  uint64_t v33 = (void *)swift_allocObject();
  long long v33[2] = 0;
  v33[3] = 0;
  v33[4] = v21;
  v33[5] = v28;
  v33[6] = v32;
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E490, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_214C3F278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4328);
  MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4320);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  unint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE36B8);
  uint64_t v21 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v23(v22, 1, 1, v16);
  int v24 = (void *)(v21 + *(void *)(*(void *)v21 + 104));
  *int v24 = 0;
  v24[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v20, v16);
  v23((uint64_t)v15, 0, 1, v16);
  swift_beginAccess();
  sub_214BF8750((uint64_t)v15, v22, &qword_26ACE4328);
  swift_endAccess();
  uint64_t v25 = sub_214D1A368();
  char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 1, 1, v25);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = 0;
  v27[3] = 0;
  v27[4] = v36;
  uint64_t v27[5] = v21;
  swift_retain();
  uint64_t v28 = sub_214BD7480((uint64_t)v11, (uint64_t)&unk_26784E428, (uint64_t)v27);
  v26(v11, 1, 1, v25);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  uint64_t v29[3] = 0;
  v29[4] = v37;
  v29[5] = a4;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v29[6] = v21;
  v29[7] = v30;
  v29[8] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E438, (uint64_t)v29);
  v26(v11, 1, 1, v25);
  uint64_t v33 = (void *)swift_allocObject();
  long long v33[2] = 0;
  v33[3] = 0;
  v33[4] = v21;
  v33[5] = v28;
  v33[6] = v32;
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E448, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_214C3F654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  unint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E4A0);
  uint64_t v21 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v23(v22, 1, 1, v16);
  int v24 = (void *)(v21 + *(void *)(*(void *)v21 + 104));
  *int v24 = 0;
  v24[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v20, v16);
  v23((uint64_t)v15, 0, 1, v16);
  swift_beginAccess();
  sub_214BF8750((uint64_t)v15, v22, &qword_26784DD60);
  swift_endAccess();
  uint64_t v25 = sub_214D1A368();
  char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 1, 1, v25);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = 0;
  v27[3] = 0;
  v27[4] = v36;
  uint64_t v27[5] = v21;
  swift_retain();
  uint64_t v28 = sub_214BD7480((uint64_t)v11, (uint64_t)&unk_26784E4B0, (uint64_t)v27);
  v26(v11, 1, 1, v25);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  uint64_t v29[3] = 0;
  v29[4] = v37;
  v29[5] = a4;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v29[6] = v21;
  v29[7] = v30;
  v29[8] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E4C0, (uint64_t)v29);
  v26(v11, 1, 1, v25);
  uint64_t v33 = (void *)swift_allocObject();
  long long v33[2] = 0;
  v33[3] = 0;
  v33[4] = v21;
  v33[5] = v28;
  v33[6] = v32;
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E4D0, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_214C3FA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E398);
  MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E3A0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  unint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E3A8);
  uint64_t v21 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v23(v22, 1, 1, v16);
  int v24 = (void *)(v21 + *(void *)(*(void *)v21 + 104));
  *int v24 = 0;
  v24[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v20, v16);
  v23((uint64_t)v15, 0, 1, v16);
  swift_beginAccess();
  sub_214BF8750((uint64_t)v15, v22, &qword_26784E398);
  swift_endAccess();
  uint64_t v25 = sub_214D1A368();
  char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 1, 1, v25);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = 0;
  v27[3] = 0;
  v27[4] = v36;
  uint64_t v27[5] = v21;
  swift_retain();
  uint64_t v28 = sub_214BD7480((uint64_t)v11, (uint64_t)&unk_26784E3B8, (uint64_t)v27);
  v26(v11, 1, 1, v25);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  uint64_t v29[3] = 0;
  v29[4] = v37;
  v29[5] = a4;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v29[6] = v21;
  v29[7] = v30;
  v29[8] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E3C8, (uint64_t)v29);
  v26(v11, 1, 1, v25);
  uint64_t v33 = (void *)swift_allocObject();
  long long v33[2] = 0;
  v33[3] = 0;
  v33[4] = v21;
  v33[5] = v28;
  v33[6] = v32;
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E3D8, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_214C3FE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E4D8);
  MEMORY[0x270FA5388](v12 - 8, v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD78);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  unint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E4E0);
  uint64_t v21 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 96);
  int64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v23(v22, 1, 1, v16);
  int v24 = (void *)(v21 + *(void *)(*(void *)v21 + 104));
  *int v24 = 0;
  v24[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v20, v16);
  v23((uint64_t)v15, 0, 1, v16);
  swift_beginAccess();
  sub_214BF8750((uint64_t)v15, v22, &qword_26784E4D8);
  swift_endAccess();
  uint64_t v25 = sub_214D1A368();
  char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v11, 1, 1, v25);
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = 0;
  v27[3] = 0;
  v27[4] = v36;
  uint64_t v27[5] = v21;
  swift_retain();
  uint64_t v28 = sub_214BD7480((uint64_t)v11, (uint64_t)&unk_26784E4F0, (uint64_t)v27);
  v26(v11, 1, 1, v25);
  uint64_t v29 = (void *)swift_allocObject();
  _OWORD v29[2] = 0;
  uint64_t v29[3] = 0;
  v29[4] = v37;
  v29[5] = a4;
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  v29[6] = v21;
  v29[7] = v30;
  v29[8] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E500, (uint64_t)v29);
  v26(v11, 1, 1, v25);
  uint64_t v33 = (void *)swift_allocObject();
  long long v33[2] = 0;
  v33[3] = 0;
  v33[4] = v21;
  v33[5] = v28;
  v33[6] = v32;
  sub_214BF1024((uint64_t)v11, (uint64_t)&unk_26784E510, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_214C401E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E450);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  void *v7 = v5;
  v7[1] = sub_214C402C4;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214C402C4()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[9];
    return MEMORY[0x270FA2498](sub_214C40408, v5, 0);
  }
}

uint64_t sub_214C40408()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 96);
  swift_beginAccess();
  sub_214B95764(v4, v1, &qword_26784E450);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E458);
  v0[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_214BF8750(v2, v4, &qword_26784E450);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C40594, 0, 0);
}

uint64_t sub_214C40594()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_214B59CE0(v3, &qword_26784E450);
  }
  else
  {
    sub_214B74FB0();
    v0[8] = swift_allocError();
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_214D1A3A8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C406A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4328);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  void *v7 = v5;
  v7[1] = sub_214C40784;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214C40784()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[9];
    return MEMORY[0x270FA2498](sub_214C408C8, v5, 0);
  }
}

uint64_t sub_214C408C8()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 96);
  swift_beginAccess();
  sub_214B95764(v4, v1, &qword_26ACE4328);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4320);
  v0[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_214BF8750(v2, v4, &qword_26ACE4328);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C40A54, 0, 0);
}

uint64_t sub_214C40A54()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_214B59CE0(v3, &qword_26ACE4328);
  }
  else
  {
    sub_214B74FB0();
    v0[8] = swift_allocError();
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_214D1A3A8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C40B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  void *v7 = v5;
  v7[1] = sub_214C40C44;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214C40C44()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[9];
    return MEMORY[0x270FA2498](sub_214C40D88, v5, 0);
  }
}

uint64_t sub_214C40D88()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 96);
  swift_beginAccess();
  sub_214B95764(v4, v1, &qword_26784DD60);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  v0[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_214BF8750(v2, v4, &qword_26784DD60);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C40F14, 0, 0);
}

uint64_t sub_214C40F14()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_214B59CE0(v3, &qword_26784DD60);
  }
  else
  {
    sub_214B74FB0();
    v0[8] = swift_allocError();
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_214D1A3A8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C41028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E398);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  void *v7 = v5;
  v7[1] = sub_214C41104;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214C41104()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[9];
    return MEMORY[0x270FA2498](sub_214C41248, v5, 0);
  }
}

uint64_t sub_214C41248()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 96);
  swift_beginAccess();
  sub_214B95764(v4, v1, &qword_26784E398);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E3A0);
  v0[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_214BF8750(v2, v4, &qword_26784E398);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C413D4, 0, 0);
}

uint64_t sub_214C413D4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_214B59CE0(v3, &qword_26784E398);
  }
  else
  {
    sub_214B74FB0();
    v0[8] = swift_allocError();
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_214D1A3A8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C414E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E4D8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[12] = v7;
  void *v7 = v5;
  v7[1] = sub_214C415C4;
  return MEMORY[0x270FA1FF0](a4);
}

uint64_t sub_214C415C4()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[9];
    return MEMORY[0x270FA2498](sub_214C41708, v5, 0);
  }
}

uint64_t sub_214C41708()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 96);
  swift_beginAccess();
  sub_214B95764(v4, v1, &qword_26784E4D8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD78);
  v0[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_214BF8750(v2, v4, &qword_26784E4D8);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C41894, 0, 0);
}

uint64_t sub_214C41894()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_214B59CE0(v3, &qword_26784E4D8);
  }
  else
  {
    sub_214B74FB0();
    v0[8] = swift_allocError();
    sub_214D1A2E8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_214D1A3A8();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C419A8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[35] = a8;
  v8[33] = a6;
  v8[34] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E450);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E458);
  v8[39] = v10;
  v8[40] = *(void *)(v10 - 8);
  v8[41] = swift_task_alloc();
  uint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  unint64_t v11 = (void *)swift_task_alloc();
  v8[42] = v11;
  *unint64_t v11 = v8;
  v11[1] = sub_214C41B48;
  return v13(v8 + 2);
}

uint64_t sub_214C41B48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C42020;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 264);
    uint64_t v3 = sub_214C41C64;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C41C64()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v4 = v0[37];
  uint64_t v3 = v0[38];
  uint64_t v5 = v0[33];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v3, &qword_26784E450);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v4, v6, &qword_26784E450);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C41DBC, 0, 0);
}

uint64_t sub_214C41DBC()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = *(int **)(v0 + 272);
    sub_214B59CE0(v3, &qword_26784E450);
    uint64_t v22 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v5;
    void *v5 = v0;
    v5[1] = sub_214C422B0;
    return v22(v0 + 16);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 328);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    uint64_t v8 = *(void *)(v0 + 16);
    unint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 32);
    unint64_t v11 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    unint64_t v13 = *(void *)(v0 + 56);
    int v14 = *(_DWORD *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    char v16 = *(unsigned char *)(v0 + 80);
    *(void *)(v0 + 88) = v8;
    *(void *)(v0 + 96) = v9;
    *(void *)(v0 + 104) = v10;
    *(void *)(v0 + 112) = v11;
    *(void *)(v0 + 120) = v12;
    *(void *)(v0 + 128) = v13;
    *(_DWORD *)(v0 + 136) = v14;
    *(void *)(v0 + 144) = v15;
    *(unsigned char *)(v0 + 152) = v16;
    sub_214B6A3F8(v8, v9);
    sub_214B6A3A0(v10, v11);
    sub_214B6A3F8(v12, v13);
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    uint64_t v18 = *(void *)(v0 + 32);
    unint64_t v17 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    unint64_t v20 = *(void *)(v0 + 56);
    sub_214B59EAC(*(void *)(v0 + 16), *(void *)(v0 + 24));
    sub_214B58A4C(v18, v17);
    sub_214B59EAC(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_214C42020()
{
  return MEMORY[0x270FA2498](sub_214C4203C, *(void *)(v0 + 264), 0);
}

uint64_t sub_214C4203C()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v4 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[33];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v4, &qword_26784E450);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v3, v6, &qword_26784E450);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C42194, 0, 0);
}

uint64_t sub_214C42194()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_214B59CE0(v3, &qword_26784E450);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 344);
    *(void *)(v0 + 256) = v4;
    id v5 = v4;
    sub_214D1A2E8();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C422B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C423AC, 0, 0);
}

uint64_t sub_214C423AC()
{
  uint64_t v2 = v0[4];
  unint64_t v1 = v0[5];
  uint64_t v3 = v0[6];
  unint64_t v4 = v0[7];
  sub_214B59EAC(v0[2], v0[3]);
  sub_214B58A4C(v2, v1);
  sub_214B59EAC(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214C4245C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a8;
  v8[19] = a6;
  v8[20] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4328);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4320);
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  unint64_t v11 = (void *)swift_task_alloc();
  v8[28] = v11;
  *unint64_t v11 = v8;
  v11[1] = sub_214C425FC;
  return v13(v8 + 16);
}

uint64_t sub_214C425FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C42A5C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v3 = sub_214C42718;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C42718()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v3, &qword_26ACE4328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v4, v6, &qword_26ACE4328);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C42870, 0, 0);
}

uint64_t sub_214C42870()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (int *)v0[20];
    sub_214B59CE0(v3, &qword_26ACE4328);
    uint64_t v10 = (uint64_t (*)(void *))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[30] = v5;
    void *v5 = v0;
    v5[1] = sub_214C42CEC;
    return v10(v0 + 16);
  }
  else
  {
    uint64_t v7 = v0[27];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    uint64_t v8 = v0[17];
    v0[14] = v0[16];
    v0[15] = v8;
    swift_bridgeObjectRetain();
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_214C42A5C()
{
  return MEMORY[0x270FA2498](sub_214C42A78, *(void *)(v0 + 152), 0);
}

uint64_t sub_214C42A78()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[19];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v4, &qword_26ACE4328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v3, v6, &qword_26ACE4328);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C42BD0, 0, 0);
}

uint64_t sub_214C42BD0()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_214B59CE0(v3, &qword_26ACE4328);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 232);
    *(void *)(v0 + 144) = v4;
    id v5 = v4;
    sub_214D1A2E8();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C42CEC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C42DE8, 0, 0);
}

uint64_t sub_214C42DE8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C42E78(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a7;
  v8[17] = a8;
  v8[15] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784DD60);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD68);
  v8[21] = v10;
  v8[22] = *(void *)(v10 - 8);
  v8[23] = swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[24] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_214C43004;
  return v13();
}

uint64_t sub_214C43004()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C4343C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v3 = sub_214C43120;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C43120()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[15];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v3, &qword_26784DD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v4, v6, &qword_26784DD60);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C43278, 0, 0);
}

uint64_t sub_214C43278()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (int *)v0[16];
    sub_214B59CE0(v3, &qword_26784DD60);
    unint64_t v9 = (uint64_t (*)(void))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[26] = v5;
    void *v5 = v0;
    v5[1] = sub_214C436CC;
    return v9();
  }
  else
  {
    uint64_t v7 = v0[23];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_214C4343C()
{
  return MEMORY[0x270FA2498](sub_214C43458, *(void *)(v0 + 120), 0);
}

uint64_t sub_214C43458()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[15];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v4, &qword_26784DD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v3, v6, &qword_26784DD60);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C435B0, 0, 0);
}

uint64_t sub_214C435B0()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_214B59CE0(v3, &qword_26784DD60);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 200);
    *(void *)(v0 + 112) = v4;
    id v5 = v4;
    sub_214D1A2E8();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C436CC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C437C8, 0, 0);
}

uint64_t sub_214C437C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C43850(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a8;
  v8[17] = a6;
  v8[18] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E398);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E3A0);
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[26] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_214C439F0;
  return v13(v8 + 15);
}

uint64_t sub_214C439F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C43E4C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v3 = sub_214C43B0C;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C43B0C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[17];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v3, &qword_26784E398);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v4, v6, &qword_26784E398);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C43C64, 0, 0);
}

uint64_t sub_214C43C64()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (int *)v0[18];
    sub_214B59CE0(v3, &qword_26784E398);
    unint64_t v9 = (uint64_t (*)(void *))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[28] = v5;
    void *v5 = v0;
    v5[1] = sub_214C440DC;
    return v9(v0 + 15);
  }
  else
  {
    uint64_t v7 = v0[25];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    v0[16] = v0[15];
    swift_bridgeObjectRetain();
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_214C43E4C()
{
  return MEMORY[0x270FA2498](sub_214C43E68, *(void *)(v0 + 136), 0);
}

uint64_t sub_214C43E68()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[20];
  uint64_t v3 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v4, &qword_26784E398);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v3, v6, &qword_26784E398);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C43FC0, 0, 0);
}

uint64_t sub_214C43FC0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_214B59CE0(v3, &qword_26784E398);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 216);
    *(void *)(v0 + 112) = v4;
    id v5 = v4;
    sub_214D1A2E8();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C440DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C441D8, 0, 0);
}

uint64_t sub_214C441D8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_214C44268(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a8;
  v8[19] = a6;
  v8[20] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E4D8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD78);
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  unint64_t v13 = (uint64_t (*)(void *))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[28] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_214C44408;
  return v13(v8 + 16);
}

uint64_t sub_214C44408()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C44868;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v3 = sub_214C44524;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C44524()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v3, &qword_26784E4D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v4, v6, &qword_26784E4D8);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C4467C, 0, 0);
}

uint64_t sub_214C4467C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = (int *)v0[20];
    sub_214B59CE0(v3, &qword_26784E4D8);
    uint64_t v11 = (uint64_t (*)(void *))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[30] = v5;
    void *v5 = v0;
    v5[1] = sub_214C44AF8;
    return v11(v0 + 16);
  }
  else
  {
    uint64_t v7 = v0[27];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    uint64_t v8 = v0[16];
    unint64_t v9 = v0[17];
    v0[14] = v8;
    v0[15] = v9;
    sub_214B6A3A0(v8, v9);
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    sub_214B58A4C(v0[16], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_214C44868()
{
  return MEMORY[0x270FA2498](sub_214C44884, *(void *)(v0 + 152), 0);
}

uint64_t sub_214C44884()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[19];
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 96);
  swift_beginAccess();
  sub_214B95764(v6, v4, &qword_26784E4D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_214BF8750(v3, v6, &qword_26784E4D8);
  swift_endAccess();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 104));
  if (v7)
  {
    uint64_t v8 = swift_retain();
    v7(v8);
    sub_214B6A660((uint64_t)v7);
  }
  return MEMORY[0x270FA2498](sub_214C449DC, 0, 0);
}

uint64_t sub_214C449DC()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_214B59CE0(v3, &qword_26784E4D8);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 232);
    *(void *)(v0 + 144) = v4;
    id v5 = v4;
    sub_214D1A2E8();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_214C44AF8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C44BF4, 0, 0);
}

uint64_t sub_214C44BF4()
{
  sub_214B58A4C(v0[16], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_214C44C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214C44CA8, 0, 0);
}

uint64_t sub_214C44CA8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214C44D48, v3, 0);
}

uint64_t sub_214C44D48()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)(v0[2] + *(void *)(*(void *)v0[2] + 104));
  uint64_t v3 = *v2;
  *uint64_t v2 = (uint64_t)sub_214C525AC;
  v2[1] = v1;
  sub_214B6A660(v3);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C44DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214C44E00, 0, 0);
}

uint64_t sub_214C44E00()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214C44D48, v3, 0);
}

uint64_t sub_214C44EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214C44EC4, 0, 0);
}

uint64_t sub_214C44EC4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214C44D48, v3, 0);
}

uint64_t sub_214C44F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214C44F88, 0, 0);
}

uint64_t sub_214C44F88()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214C45028, v3, 0);
}

uint64_t sub_214C45028()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)(v0[2] + *(void *)(*(void *)v0[2] + 104));
  uint64_t v3 = *v2;
  *uint64_t v2 = (uint64_t)sub_214B74FA8;
  v2[1] = v1;
  sub_214B6A660(v3);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C450BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x270FA2498](sub_214C450E0, 0, 0);
}

uint64_t sub_214C450E0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  swift_retain();
  return MEMORY[0x270FA2498](sub_214C44D48, v3, 0);
}

uint64_t GeoCoderStats.addressesRequested.getter()
{
  return *(void *)v0;
}

uint64_t GeoCoderStats.addressesRequested.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GeoCoderStats.addressesRequested.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.resultFoundInMemoryCache.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t GeoCoderStats.resultFoundInMemoryCache.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*GeoCoderStats.resultFoundInMemoryCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressFoundInPersistentCache.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t GeoCoderStats.addressFoundInPersistentCache.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressFoundInPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressAddedToPersistentCache.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t GeoCoderStats.addressAddedToPersistentCache.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressAddedToPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.coreLocationAPICalls.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t GeoCoderStats.coreLocationAPICalls.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*GeoCoderStats.coreLocationAPICalls.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressNotFoundResultFoundInPersistentCache.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t GeoCoderStats.addressNotFoundResultFoundInPersistentCache.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressNotFoundResultFoundInPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressNotFoundResultAddedToPersistentCache.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t GeoCoderStats.addressNotFoundResultAddedToPersistentCache.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressNotFoundResultAddedToPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.otherErrorResult.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t GeoCoderStats.otherErrorResult.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*GeoCoderStats.otherErrorResult.modify())()
{
  return nullsub_1;
}

id sub_214C45300()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[9];
  uint64_t v25 = v0[6];
  uint64_t v26 = v0[8];
  uint64_t v27 = v0[10];
  uint64_t v28 = v0[12];
  uint64_t v29 = v0[11];
  uint64_t v30 = v0[13];
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB18]), sel_init);
  if (v2)
  {
    sub_214C45554(v1, v2);
    if (v10)
    {
      uint64_t v11 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setStreet_, v11, v25, v26, v27, v28);
    }
  }
  if (v4)
  {
    sub_214C45554(v3, v4);
    if (v12)
    {
      unint64_t v13 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setSubLocality_, v13);
    }
  }
  if (v5)
  {
    sub_214C45554(v6, v5);
    if (v14)
    {
      uint64_t v15 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setCity_, v15);
    }
  }
  if (v7)
  {
    sub_214C45554(v25, v7);
    if (v16)
    {
      unint64_t v17 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setState_, v17);
    }
  }
  if (v8)
  {
    sub_214C45554(v26, v8);
    if (v18)
    {
      uint64_t v19 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setPostalCode_, v19);
    }
  }
  if (v29)
  {
    sub_214C45554(v27, v29);
    if (v20)
    {
      uint64_t v21 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setCountry_, v21);
    }
  }
  if (v30)
  {
    sub_214C45554(v28, v30);
    if (v22)
    {
      uint64_t v23 = (void *)sub_214D1A028();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setISOCountryCode_, v23);
    }
  }
  return v9;
}

uint64_t sub_214C45554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_214D197B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  sub_214D197A8();
  sub_214BBD7FC();
  uint64_t v9 = sub_214D1A618();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t GeoCoderAddress.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[13];
  if (v0[1])
  {
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_214D1AD28();
    if (v1)
    {
LABEL_3:
      sub_214D1AD28();
      swift_bridgeObjectRetain();
      sub_214D1A0D8();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  sub_214D1AD28();
  if (v2)
  {
LABEL_4:
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  sub_214D1AD28();
  if (v3)
  {
LABEL_5:
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  sub_214D1AD28();
  if (v4)
  {
LABEL_6:
    sub_214D1AD28();
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_7;
    }
LABEL_16:
    sub_214D1AD28();
    if (v6) {
      goto LABEL_8;
    }
    return sub_214D1AD28();
  }
LABEL_15:
  sub_214D1AD28();
  if (!v5) {
    goto LABEL_16;
  }
LABEL_7:
  sub_214D1AD28();
  swift_bridgeObjectRetain();
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  if (!v6) {
    return sub_214D1AD28();
  }
LABEL_8:
  sub_214D1AD28();
  swift_bridgeObjectRetain();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t GeoCoderAddress.hashValue.getter()
{
  return sub_214D1AD48();
}

uint64_t sub_214C45910()
{
  return sub_214D1AD48();
}

uint64_t sub_214C4597C()
{
  return sub_214D1AD48();
}

uint64_t sub_214C459E4()
{
  type metadata accessor for GeoCoder.SharedCoordinateMap();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  qword_26784E310 = v0;
  return result;
}

__n128 sub_214C45A30@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  long long v4 = *(_OWORD *)(v3 + 184);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 168);
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = *(__n128 *)(v3 + 200);
  long long v6 = *(_OWORD *)(v3 + 216);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v6;
  return result;
}

__n128 sub_214C45A88(long long *a1, uint64_t *a2)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v6 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v4 + 168) = v8;
  *(_OWORD *)(v4 + 184) = v7;
  __n128 result = v6;
  *(__n128 *)(v4 + 200) = v6;
  *(void *)(v4 + 216) = v2;
  *(void *)(v4 + 224) = v3;
  return result;
}

__n128 sub_214C45B00@<Q0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = *(__n128 *)(v1 + 200);
  long long v5 = *(_OWORD *)(v1 + 216);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v5;
  return result;
}

uint64_t GeoCoder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  if (qword_26784C858 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26784CC78;
  *(void *)(v0 + 136) = type metadata accessor for DIPODNHelper();
  *(void *)(v0 + 144) = &off_26C5A9850;
  *(void *)(v0 + 112) = v1;
  swift_retain();
  return v0;
}

uint64_t GeoCoder.init()()
{
  swift_defaultActor_initialize();
  *(unsigned char *)(v0 + 152) = 0;
  *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  if (qword_26784C858 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26784CC78;
  *(void *)(v0 + 136) = type metadata accessor for DIPODNHelper();
  *(void *)(v0 + 144) = &off_26C5A9850;
  *(void *)(v0 + 112) = v1;
  swift_retain();
  return v0;
}

uint64_t sub_214C45CAC(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  v2[11] = type metadata accessor for ODISignpost();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C45D50, v1, 0);
}

uint64_t sub_214C45D50()
{
  uint64_t v22 = v0;
  if (qword_26784C8F0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = qword_267863798;
  uint64_t v3 = unk_2678637A0;
  char v4 = byte_2678637A8;
  long long v5 = (void *)qword_2678637B0;
  int v6 = byte_2678637B8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v10 = v0[9];

  sub_214B6A2A8(v9, v8);
  if (*(void *)(sub_214C3EC54(v10) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF88);
    uint64_t v11 = sub_214D1A978();
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE80];
  }
  uint64_t v21 = v11;
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_214C4F040(v12, 1, &v21);
  swift_bridgeObjectRelease();
  v0[14] = v21;
  uint64_t v13 = swift_retain();
  sub_214C892A0(v13);
  uint64_t v15 = v14;
  v0[15] = v14;
  if ((v14 & 0xC000000000000001) != 0)
  {
    if (sub_214D1A6B8())
    {
LABEL_11:
      uint64_t v16 = (void *)swift_task_alloc();
      v0[16] = v16;
      void *v16 = v0;
      v16[1] = sub_214C460B8;
      return sub_214C4693C(v15);
    }
  }
  else if (*(void *)(v14 + 16))
  {
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v18 = sub_214B918FC(MEMORY[0x263F8EE78]);
  uint64_t v19 = v0[13];
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v19);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(unint64_t))v0[1];
  return v20(v18);
}

uint64_t sub_214C460B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214C461E4, v1, 0);
}

uint64_t sub_214C461E4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  char v2 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 176) = v2;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << v2;
  uint64_t v5 = *(void *)(v1 + 64);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  *(void *)(v0 + 136) = MEMORY[0x263F8EE80];
  unint64_t v6 = v3 & v5;
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = __clz(__rbit64(v6));
    uint64_t v9 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 144) = v7;
    *(void *)(v0 + 152) = v9;
    *(unsigned char *)(v0 + 177) = *(unsigned char *)(*(void *)(v1 + 48) + v8);
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v8);
    *(void *)(v0 + 160) = v10;
    id v11 = v10;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_214C46430;
    return sub_214C4CD50((uint64_t)v11);
  }
  unint64_t v14 = 63 - v4;
  if (v14 > 0x7F)
  {
    unint64_t v15 = *(void *)(v1 + 72);
    if (v15)
    {
      uint64_t v7 = 1;
LABEL_11:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v8 = __clz(__rbit64(v15)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v14 >= 0xC0)
    {
      unint64_t v15 = *(void *)(v1 + 80);
      if (v15)
      {
        uint64_t v7 = 2;
        goto LABEL_11;
      }
      if (v14 >= 0x100)
      {
        unint64_t v15 = *(void *)(v1 + 88);
        if (v15)
        {
          uint64_t v7 = 3;
          goto LABEL_11;
        }
        if (v14 >= 0x140)
        {
          unint64_t v15 = *(void *)(v1 + 96);
          if (v15)
          {
            uint64_t v7 = 4;
            goto LABEL_11;
          }
          uint64_t v16 = 0;
          uint64_t v17 = v14 >> 6;
          if (v17 <= 5) {
            uint64_t v17 = 5;
          }
          uint64_t v18 = v17 - 5;
          while (v18 != v16)
          {
            unint64_t v15 = *(void *)(v1 + 104 + 8 * v16++);
            if (v15)
            {
              uint64_t v7 = v16 + 4;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  swift_release();
  uint64_t v19 = *(void *)(v0 + 136);
  uint64_t v20 = *(void *)(v0 + 104);
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v20);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v19);
}

uint64_t sub_214C46430(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(unsigned char *)(v5 + 40) = a3;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 16) = v3;
  uint64_t v6 = *(void *)(v4 + 80);
  *(unsigned char *)(v5 + 178) = a3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C46550, v6, 0);
}

unint64_t sub_214C46550()
{
  if (*(unsigned char *)(v1 + 178))
  {
    unint64_t v15 = (uint64_t *)(v1 + 136);
    uint64_t v4 = *(uint64_t **)(v1 + 136);
    unint64_t v16 = sub_214B88378(*(unsigned char *)(v1 + 177));
    if (v17)
    {
      unint64_t v0 = v16;
      uint64_t v4 = (uint64_t *)(v1 + 56);
      uint64_t v18 = *v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v1 + 56) = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_10;
    }

    int64_t v21 = *(void *)(v1 + 144);
    unint64_t v22 = *(void *)(v1 + 152);
    if (!v22) {
      goto LABEL_12;
    }
LABEL_40:
    uint64_t v27 = (v22 - 1) & v22;
    unint64_t v28 = __clz(__rbit64(v22)) | (v21 << 6);
    unint64_t result = *(void *)(v1 + 112);
LABEL_41:
    *(void *)(v1 + 144) = v21;
    *(void *)(v1 + 152) = v27;
    *(unsigned char *)(v1 + 177) = *(unsigned char *)(*(void *)(result + 48) + v28);
    uint64_t v39 = *(void **)(*(void *)(result + 56) + 8 * v28);
    *(void *)(v1 + 160) = v39;
    id v40 = v39;
    unsigned __int16 v41 = (void *)swift_task_alloc();
    *(void *)(v1 + 168) = v41;
    *unsigned __int16 v41 = v1;
    v41[1] = sub_214C46430;
    return sub_214C4CD50((uint64_t)v40);
  }
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v4 = *(uint64_t **)(v1 + 136);
  unint64_t v0 = *(unsigned __int8 *)(v1 + 177);
  char v5 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 64) = v4;
  unint64_t result = sub_214B88378(v0);
  uint64_t v8 = v4[2];
  BOOL v9 = (v7 & 1) == 0;
  BOOL v10 = __OFADD__(v8, v9);
  uint64_t v11 = v8 + v9;
  if (v10)
  {
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v0 = v7;
  uint64_t v12 = (uint64_t **)(v1 + 64);
  if (*(void *)(*(void *)(v1 + 136) + 24) >= v11)
  {
    if ((v5 & 1) == 0)
    {
      unint64_t v34 = result;
      sub_214B90E64();
      unint64_t result = v34;
      uint64_t v4 = *v12;
      if (v0) {
        goto LABEL_18;
      }
LABEL_36:
      char v35 = *(unsigned char *)(v1 + 177);
      v4[(result >> 6) + 8] |= 1 << result;
      *(unsigned char *)(v4[6] + result) = v35;
      uint64_t v36 = (void *)(v4[7] + 16 * result);
      *uint64_t v36 = v3;
      v36[1] = v2;
      uint64_t v37 = v4[2];
      BOOL v10 = __OFADD__(v37, 1);
      uint64_t v38 = v37 + 1;
      if (v10)
      {
        __break(1u);
        goto LABEL_45;
      }
      v4[2] = v38;
      goto LABEL_38;
    }
  }
  else
  {
    unsigned __int8 v13 = *(unsigned char *)(v1 + 177);
    sub_214B8D290(v11, v5);
    unint64_t result = sub_214B88378(v13);
    if ((v0 & 1) != (v14 & 1))
    {
      return sub_214D1AC58();
    }
  }
  uint64_t v4 = *v12;
  if ((v0 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_18:
  uint64_t v29 = (void *)(v4[7] + 16 * result);
  void *v29 = v3;
  v29[1] = v2;
LABEL_38:
  uint64_t v20 = *(void **)(v1 + 160);
  while (1)
  {

    swift_bridgeObjectRelease();
    int64_t v21 = *(void *)(v1 + 144);
    unint64_t v22 = *(void *)(v1 + 152);
    *(void *)(v1 + 136) = v4;
    if (v22) {
      goto LABEL_40;
    }
LABEL_12:
    int64_t v23 = v21 + 1;
    if (!__OFADD__(v21, 1)) {
      break;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    sub_214B90E64();
    unint64_t v15 = v4;
LABEL_10:
    uint64_t v4 = (uint64_t *)*v15;
    uint64_t v20 = *(void **)(v1 + 160);
    sub_214CDBF68(v0, *v15);
  }
  int64_t v24 = (unint64_t)((1 << *(unsigned char *)(v1 + 176)) + 63) >> 6;
  unint64_t result = *(void *)(v1 + 112);
  if (v23 < v24)
  {
    unint64_t v25 = result + 64;
    unint64_t v26 = *(void *)(result + 64 + 8 * v23);
    ++v21;
    if (v26)
    {
LABEL_15:
      uint64_t v27 = (v26 - 1) & v26;
      unint64_t v28 = __clz(__rbit64(v26)) + (v21 << 6);
      goto LABEL_41;
    }
    int64_t v21 = v23 + 1;
    if (v23 + 1 < v24)
    {
      unint64_t v26 = *(void *)(v25 + 8 * v21);
      if (v26) {
        goto LABEL_15;
      }
      int64_t v21 = v23 + 2;
      if (v23 + 2 < v24)
      {
        unint64_t v26 = *(void *)(v25 + 8 * v21);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v30 = v23 + 3;
        if (v30 < v24)
        {
          unint64_t v26 = *(void *)(v25 + 8 * v30);
          if (v26)
          {
            int64_t v21 = v30;
            goto LABEL_15;
          }
          while (1)
          {
            int64_t v21 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              break;
            }
            if (v21 >= v24) {
              goto LABEL_29;
            }
            unint64_t v26 = *(void *)(v25 + 8 * v21);
            ++v30;
            if (v26) {
              goto LABEL_15;
            }
          }
LABEL_45:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_29:
  swift_release();
  uint64_t v31 = *(void *)(v1 + 136);
  uint64_t v32 = *(void *)(v1 + 104);
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v32);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return v33(v31);
}

uint64_t sub_214C4693C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C46A00, v1, 0);
}

uint64_t sub_214C46A00()
{
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = sub_214C50F64();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214C46AE0;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2318](v3, v1, v2, 0xD000000000000020, 0x8000000214D37050, sub_214C51608, v4, v5);
}

uint64_t sub_214C46AE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C46BF0, v1, 0);
}

uint64_t sub_214C46BF0()
{
  *(unsigned char *)(v0[9] + 152) = 1;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214C46C90;
  uint64_t v2 = v0[8];
  return sub_214C4708C(v2);
}

uint64_t sub_214C46C90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C46DA0, v1, 0);
}

uint64_t sub_214C46DA0()
{
  uint64_t v1 = v0[9];
  *(unsigned char *)(v1 + 152) = 0;
  uint64_t v2 = v1 + 160;
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 160) + 16))
  {
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)v2 + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = v0[11];
    uint64_t v4 = v0[12];
    uint64_t v6 = v0[10];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v4, *(void *)v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v6);
    sub_214C5191C(0, 1);
    swift_endAccess();
    sub_214D1A2F8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_214C46ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 152) != 1) {
    return sub_214D1A2F8();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  BOOL v9 = (unint64_t *)(a2 + 160);
  swift_beginAccess();
  unint64_t v10 = *(void *)(a2 + 160);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 160) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_214B877EC(0, *(void *)(v10 + 16) + 1, 1, v10);
    *BOOL v9 = v10;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_214B877EC(v12 > 1, v13 + 1, 1, v10);
    *BOOL v9 = v10;
  }
  *(void *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

uint64_t sub_214C4708C(uint64_t a1)
{
  v2[54] = a1;
  v2[55] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784CCE0);
  v2[56] = v3;
  v2[57] = *(void *)(v3 - 8);
  v2[58] = swift_task_alloc();
  uint64_t v4 = sub_214D19C78();
  v2[59] = v4;
  v2[60] = *(void *)(v4 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = type metadata accessor for ODISignpost();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C47268, v1, 0);
}

uint64_t sub_214C47268()
{
  if (qword_26784C8C0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[73];
  uint64_t v2 = qword_2678636A8;
  uint64_t v3 = unk_2678636B0;
  char v4 = byte_2678636B8;
  uint64_t v5 = (void *)qword_2678636C0;
  int v6 = byte_2678636C8;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[74];
  uint64_t v9 = v0[73];
  uint64_t v10 = v0[54];

  sub_214B6A2A8(v9, v8);
  if ((v10 & 0xC000000000000001) != 0) {
    uint64_t v11 = sub_214D1A6B8();
  }
  else {
    uint64_t v11 = *(void *)(v0[54] + 16);
  }
  uint64_t v12 = v0[55];
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 168);
  BOOL v14 = __OFADD__(v13, v11);
  uint64_t v15 = v13 + v11;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v12 + 168) = v15;
    if (qword_26784C8C8 == -1) {
      goto LABEL_11;
    }
  }
  swift_once();
LABEL_11:
  uint64_t v16 = v0[71];
  uint64_t v18 = qword_2678636D0;
  uint64_t v17 = *(void *)algn_2678636D8;
  char v19 = byte_2678636E0;
  uint64_t v20 = (void *)qword_2678636E8;
  int v21 = byte_2678636F0;
  *(void *)(v16 + 40) = 19;
  *(unsigned char *)(v16 + 48) = 2;
  *(void *)uint64_t v16 = v18;
  *(void *)(v16 + 8) = v17;
  *(unsigned char *)(v16 + 16) = v19;
  *(void *)(v16 + 24) = v20;
  *(void *)(v16 + 32) = "enableTelemetry=YES";
  id v22 = v20;
  sub_214D19EA8();
  sub_214D1A588();
  if (v21 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v23 = v0[72];
  uint64_t v24 = v0[71];

  sub_214B6A2A8(v24, v23);
  if (qword_26784C9B0 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_26784E310;
  v0[75] = qword_26784E310;
  return MEMORY[0x270FA2498](sub_214C475B4, v25, 0);
}

uint64_t sub_214C475B4()
{
  uint64_t v1 = v0[75];
  unint64_t v2 = v0[54] & 0xC000000000000001;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = v0[54];
  if (v2)
  {
    if (v4 < 0) {
      uint64_t v5 = v0[54];
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_214D1A6B8();
    uint64_t v4 = sub_214C4E080(v5, v6);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = v0[55];
  v0[76] = sub_214C4F3A4(v3, v4);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_214C476AC, v7, 0);
}

uint64_t sub_214C476AC()
{
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 432;
  uint64_t v2 = sub_214D19EE8();
  *(void *)(v0 + 616) = __swift_project_value_buffer(v2, (uint64_t)qword_26ACEBA58);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v3 = sub_214D19EC8();
  os_log_type_t v4 = sub_214D1A498();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 608);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134349312;
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v8 = sub_214D1A6B8();
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v0 + 608) + 16);
    }
    unint64_t v9 = *(void *)v1 & 0xC000000000000001;
    *(void *)(v0 + 416) = v8;
    sub_214D1A5F8();
    swift_release();
    *(_WORD *)(v7 + 12) = 2050;
    if (v9) {
      uint64_t v10 = sub_214D1A6B8();
    }
    else {
      uint64_t v10 = *(void *)(*(void *)v1 + 16);
    }
    *(void *)(v0 + 424) = v10;
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v3, v4, "fillCoordinateMap - %{public}ld of %{public}ld addresses need looking up", (uint8_t *)v7, 0x16u);
    MEMORY[0x2166B1540](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  unint64_t v11 = *(void *)(v0 + 432) & 0xC000000000000001;
  sub_214D1A578();
  sub_214D19E98();
  if (v11) {
    uint64_t v12 = sub_214D1A6B8();
  }
  else {
    uint64_t v12 = *(void *)(*(void *)(v0 + 432) + 16);
  }
  uint64_t v13 = *(void *)(v0 + 608);
  unint64_t v14 = v13 & 0xC000000000000001;
  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = sub_214D1A6B8();
    uint64_t v16 = v12 - v15;
    if (!__OFSUB__(v12, v15)) {
      goto LABEL_17;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v22 = *(void *)(v13 + 16);
  uint64_t v16 = v12 - v22;
  if (__OFSUB__(v12, v22)) {
    goto LABEL_23;
  }
LABEL_17:
  uint64_t v17 = *(void *)(v0 + 440);
  uint64_t v18 = *(void *)(v17 + 176);
  BOOL v19 = __OFADD__(v18, v16);
  uint64_t v20 = v18 + v16;
  if (v19)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(void *)(v17 + 176) = v20;
  uint64_t v12 = *(void *)(v0 + 608);
  if (v14)
  {
    if (sub_214D1A6B8())
    {
      uint64_t v21 = sub_214D1A6B8();
      goto LABEL_25;
    }
    goto LABEL_28;
  }
LABEL_24:
  uint64_t v21 = *(void *)(v12 + 16);
  if (v21)
  {
LABEL_25:
    *(void *)(v0 + 624) = v21;
    *(void *)(v0 + 632) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
    if (qword_26784C8D0 == -1)
    {
LABEL_26:
      uint64_t v23 = *(void *)(v0 + 552);
      uint64_t v25 = qword_2678636F8;
      uint64_t v24 = unk_267863700;
      char v26 = byte_267863708;
      uint64_t v27 = (void *)qword_267863710;
      int v28 = byte_267863718;
      *(void *)(v23 + 32) = "enableTelemetry=YES";
      *(void *)(v23 + 40) = 19;
      *(unsigned char *)(v23 + 48) = 2;
      *(void *)uint64_t v23 = v25;
      *(void *)(v23 + 8) = v24;
      *(unsigned char *)(v23 + 16) = v26;
      *(void *)(v23 + 24) = v27;
      id v29 = v27;
      sub_214D19EA8();
      sub_214D1A588();
      if (v28 == 1) {
        sub_214D19E88();
      }
      else {
        sub_214D19E98();
      }
      uint64_t v33 = *(void *)(v0 + 608);
      uint64_t v34 = *(void *)(v0 + 560);
      uint64_t v35 = *(void *)(v0 + 552);
      uint64_t v36 = *(void *)(v0 + 440);

      sub_214B6A2A8(v35, v34);
      sub_214B93DCC(v36 + 112, v0 + 144);
      sub_214B93DCC(v0 + 144, v0 + 184);
      uint64_t v37 = swift_allocObject();
      *(void *)(v0 + 640) = v37;
      sub_214B59EC0((long long *)(v0 + 184), v37 + 16);
      *(void *)(v37 + 56) = v33;
      swift_retain_n();
      return MEMORY[0x270FA2498](sub_214C47C48, 0, 0);
    }
LABEL_36:
    swift_once();
    goto LABEL_26;
  }
LABEL_28:
  sub_214B6A30C(*(void *)(v0 + 576));
  swift_release();
  uint64_t v30 = *(void *)(v0 + 592);
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_214C47C48()
{
  uint64_t v1 = v0[80];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[81] = v2;
  v2[2] = 100000000;
  v2[3] = &unk_26784E368;
  v2[4] = v1;
  v2[5] = &unk_26784E370;
  v2[6] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[82] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E390);
  *uint64_t v3 = v0;
  v3[1] = sub_214C47D7C;
  return MEMORY[0x270FA2360](v0 + 45, 0, 0, 0xD000000000000038, 0x8000000214D2EE70, sub_214C5107C, v2, v4);
}

uint64_t sub_214C47D7C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_214C487EC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v2[55];
    swift_release();
    swift_release();
    swift_task_dealloc();
    v2[84] = v2[45];
    uint64_t v3 = sub_214C47ECC;
    uint64_t v4 = v5;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_214C47ECC()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_214D19EC8();
  os_log_type_t v2 = sub_214D1A498();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 672);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134349056;
    *(void *)(v0 + 408) = *(void *)(v3 + 16);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_214B4E000, v1, v2, "%{public}ld results from asd cache", v4, 0xCu);
    MEMORY[0x2166B1540](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v5 = *(void *)(v0 + 672);
  *(void *)(v0 + 680) = v5;
  uint64_t v6 = *(void *)(v0 + 608);
  uint64_t v7 = *(void *)(v0 + 512);
  uint64_t v8 = *(void *)(v0 + 472);
  uint64_t v9 = *(void *)(v0 + 480);
  *(void *)(v0 + 688) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  *(void *)(v0 + 368) = v6;
  sub_214D19C58();
  sub_214D19C08();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 696) = v10;
  *(void *)(v0 + 704) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v7, v8);
  sub_214D19C58();
  sub_214D19C08();
  v10(v7, v8);
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_214D19EC8();
  os_log_type_t v12 = sub_214D1A498();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = *(void *)(v0 + 624);
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134349312;
    *(void *)(v0 + 392) = *(void *)(v5 + 16);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2050;
    *(void *)(v0 + 400) = v13;
    sub_214D1A5F8();
    _os_log_impl(&dword_214B4E000, v11, v12, "fillCoordinateMap - %{public}ld of %{public}ld found in asd cache", (uint8_t *)v14, 0x16u);
    MEMORY[0x2166B1540](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v15 = *(void *)(v5 + 16);
  *(void *)(v0 + 712) = v15;
  if (v15)
  {
    uint64_t v16 = *(void *)(v0 + 472);
    uint64_t v17 = *(void *)(v0 + 480);
    uint64_t v18 = *(void *)(v0 + 456);
    uint64_t v19 = *(int *)(*(void *)(v0 + 448) + 64);
    *(_DWORD *)(v0 + 832) = v19;
    int v20 = *(_DWORD *)(v18 + 80);
    *(_DWORD *)(v0 + 836) = v20;
    *(void *)(v0 + 720) = *(void *)(v18 + 72);
    *(_OWORD *)(v0 + 728) = 0u;
    *(_OWORD *)(v0 + 744) = 0u;
    uint64_t v21 = *(void *)(v0 + 496);
    uint64_t v22 = *(void **)(v0 + 464);
    uint64_t v23 = (char *)v22 + v19;
    sub_214B95764(*(void *)(v0 + 680) + ((v20 + 32) & ~(unint64_t)v20), (uint64_t)v22, &qword_26784CCE0);
    *(void *)(v0 + 760) = *v22;
    uint64_t v24 = (void *)v22[1];
    *(void *)(v0 + 768) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v23, v16);
    uint64_t v25 = qword_26784E310;
    *(void *)(v0 + 776) = qword_26784E310;
    if (v24)
    {
      objc_msgSend(v24, sel_coordinate);
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
    *(void *)(v0 + 792) = v27;
    *(void *)(v0 + 784) = v26;
    return MEMORY[0x270FA2498](sub_214C49158, v25, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v0 + 688);
    uint64_t v29 = *(void *)(v0 + 632);
    uint64_t v30 = *(void *)(v0 + 624);
    uint64_t v31 = (void *)sub_214D1A028();
    uint64_t v32 = (void *)swift_allocObject();
    long long v32[2] = 0;
    long long v32[3] = v30;
    v32[4] = 0;
    v32[5] = 0;
    v32[6] = v28;
    v32[7] = v29;
    *(void *)(v0 + 48) = sub_214C50F3C;
    *(void *)(v0 + 56) = v32;
    *(void *)(v0 + 16) = MEMORY[0x263EF8330];
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_214BF1534;
    *(void *)(v0 + 40) = &block_descriptor_14;
    uint64_t v33 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v33);

    sub_214D1A578();
    sub_214D19E98();
    if (qword_26784C8D8 != -1) {
      swift_once();
    }
    uint64_t v63 = v0 + 368;
    uint64_t v34 = *(void *)(v0 + 536);
    uint64_t v35 = qword_267863720;
    uint64_t v36 = *(void *)algn_267863728;
    char v37 = byte_267863730;
    uint64_t v38 = (void *)qword_267863738;
    int v39 = byte_267863740;
    *(void *)(v34 + 32) = "enableTelemetry=YES";
    *(void *)(v34 + 40) = 19;
    *(unsigned char *)(v34 + 48) = 2;
    *(void *)uint64_t v34 = v35;
    *(void *)(v34 + 8) = v36;
    *(unsigned char *)(v34 + 16) = v37;
    *(void *)(v34 + 24) = v38;
    id v40 = v38;
    sub_214D19EA8();
    sub_214D1A588();
    if (v39 == 1) {
      sub_214D19E88();
    }
    else {
      sub_214D19E98();
    }
    uint64_t v41 = *(void *)(v0 + 544);
    uint64_t v42 = *(void *)(v0 + 536);

    sub_214B6A2A8(v42, v41);
    id v43 = sub_214D19EC8();
    os_log_type_t v44 = sub_214D1A498();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 134349056;
      swift_beginAccess();
      if ((*(void *)v63 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_214D1A6B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)v63 + 16);
      }
      *(void *)(v0 + 384) = v46;
      sub_214D1A5F8();
      _os_log_impl(&dword_214B4E000, v43, v44, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v45, 0xCu);
      MEMORY[0x2166B1540](v45, -1, -1);
    }
    uint64_t v61 = *(void *)(v0 + 440);

    sub_214B93DCC(v0 + 144, v0 + 64);
    uint64_t v47 = *(void *)(v0 + 88);
    uint64_t v48 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 64, v47);
    uint64_t v49 = *(void *)(v47 - 8);
    unint64_t v50 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v50, v48, v47);
    uint64_t v51 = *v50;
    uint64_t v52 = type metadata accessor for DIPODNHelper();
    *(void *)(v0 + 248) = v52;
    *(void *)(v0 + 256) = &off_26C5A9850;
    *(void *)(v0 + 224) = v51;
    type metadata accessor for GeoCoder.GeocodeCompletionState();
    uint64_t v53 = swift_allocObject();
    *(void *)(v0 + 800) = v53;
    uint64_t v54 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 224, v52);
    uint64_t v55 = *(void *)(v52 - 8);
    unsigned __int8 v56 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16))(v56, v54, v52);
    uint64_t v57 = *v56;
    *(void *)(v0 + 128) = v52;
    *(void *)(v0 + 136) = &off_26C5A9850;
    *(void *)(v0 + 104) = v57;
    swift_defaultActor_initialize();
    *(void *)(v53 + 112) = MEMORY[0x263F8EE78];
    *(unsigned char *)(v53 + 120) = 0;
    sub_214B59EC0((long long *)(v0 + 104), v53 + 128);
    __swift_destroy_boxed_opaque_existential_1(v0 + 224);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    swift_task_dealloc();
    sub_214C50F64();
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v58;
    uint64_t v58[2] = v63;
    v58[3] = v61;
    v58[4] = v53;
    id v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v59;
    *id v59 = v0;
    v59[1] = sub_214C49C58;
    return MEMORY[0x270FA2158]();
  }
}

uint64_t sub_214C487EC()
{
  uint64_t v1 = *(void *)(v0 + 440);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C48858, v1, 0);
}

uint64_t sub_214C48858()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_214D19EC8();
  os_log_type_t v2 = sub_214D1A4A8();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_214B4E000, v1, v2, "Gecode cache fetch timeout", v3, 2u);
    MEMORY[0x2166B1540](v3, -1, -1);
  }
  uint64_t v4 = *(void **)(v0 + 664);

  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 680) = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(v0 + 608);
  uint64_t v7 = *(void *)(v0 + 512);
  uint64_t v8 = *(void *)(v0 + 472);
  uint64_t v9 = *(void *)(v0 + 480);
  *(void *)(v0 + 688) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  *(void *)(v0 + 368) = v6;
  sub_214D19C58();
  sub_214D19C08();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(void *)(v0 + 696) = v10;
  *(void *)(v0 + 704) = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v7, v8);
  sub_214D19C58();
  sub_214D19C08();
  v10(v7, v8);
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_214D19EC8();
  os_log_type_t v12 = sub_214D1A498();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = *(void *)(v0 + 624);
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134349312;
    *(void *)(v0 + 392) = *(void *)(v5 + 16);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2050;
    *(void *)(v0 + 400) = v13;
    sub_214D1A5F8();
    _os_log_impl(&dword_214B4E000, v11, v12, "fillCoordinateMap - %{public}ld of %{public}ld found in asd cache", (uint8_t *)v14, 0x16u);
    MEMORY[0x2166B1540](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v15 = *(void *)(v5 + 16);
  *(void *)(v0 + 712) = v15;
  if (v15)
  {
    uint64_t v16 = *(void *)(v0 + 472);
    uint64_t v17 = *(void *)(v0 + 480);
    uint64_t v18 = *(void *)(v0 + 456);
    uint64_t v19 = *(int *)(*(void *)(v0 + 448) + 64);
    *(_DWORD *)(v0 + 832) = v19;
    int v20 = *(_DWORD *)(v18 + 80);
    *(_DWORD *)(v0 + 836) = v20;
    *(void *)(v0 + 720) = *(void *)(v18 + 72);
    *(_OWORD *)(v0 + 728) = 0u;
    *(_OWORD *)(v0 + 744) = 0u;
    uint64_t v21 = *(void *)(v0 + 496);
    uint64_t v22 = *(void **)(v0 + 464);
    uint64_t v23 = (char *)v22 + v19;
    sub_214B95764(*(void *)(v0 + 680) + ((v20 + 32) & ~(unint64_t)v20), (uint64_t)v22, &qword_26784CCE0);
    *(void *)(v0 + 760) = *v22;
    uint64_t v24 = (void *)v22[1];
    *(void *)(v0 + 768) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v23, v16);
    uint64_t v25 = qword_26784E310;
    *(void *)(v0 + 776) = qword_26784E310;
    if (v24)
    {
      objc_msgSend(v24, sel_coordinate);
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
    *(void *)(v0 + 792) = v27;
    *(void *)(v0 + 784) = v26;
    return MEMORY[0x270FA2498](sub_214C49158, v25, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v0 + 688);
    uint64_t v29 = *(void *)(v0 + 632);
    uint64_t v30 = *(void *)(v0 + 624);
    uint64_t v31 = (void *)sub_214D1A028();
    uint64_t v32 = (void *)swift_allocObject();
    long long v32[2] = 0;
    long long v32[3] = v30;
    v32[4] = 0;
    v32[5] = 0;
    v32[6] = v28;
    v32[7] = v29;
    *(void *)(v0 + 48) = sub_214C50F3C;
    *(void *)(v0 + 56) = v32;
    *(void *)(v0 + 16) = MEMORY[0x263EF8330];
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_214BF1534;
    *(void *)(v0 + 40) = &block_descriptor_14;
    uint64_t v33 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v33);

    sub_214D1A578();
    sub_214D19E98();
    if (qword_26784C8D8 != -1) {
      swift_once();
    }
    uint64_t v63 = v0 + 368;
    uint64_t v34 = *(void *)(v0 + 536);
    uint64_t v35 = qword_267863720;
    uint64_t v36 = *(void *)algn_267863728;
    char v37 = byte_267863730;
    uint64_t v38 = (void *)qword_267863738;
    int v39 = byte_267863740;
    *(void *)(v34 + 32) = "enableTelemetry=YES";
    *(void *)(v34 + 40) = 19;
    *(unsigned char *)(v34 + 48) = 2;
    *(void *)uint64_t v34 = v35;
    *(void *)(v34 + 8) = v36;
    *(unsigned char *)(v34 + 16) = v37;
    *(void *)(v34 + 24) = v38;
    id v40 = v38;
    sub_214D19EA8();
    sub_214D1A588();
    if (v39 == 1) {
      sub_214D19E88();
    }
    else {
      sub_214D19E98();
    }
    uint64_t v41 = *(void *)(v0 + 544);
    uint64_t v42 = *(void *)(v0 + 536);

    sub_214B6A2A8(v42, v41);
    id v43 = sub_214D19EC8();
    os_log_type_t v44 = sub_214D1A498();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 134349056;
      swift_beginAccess();
      if ((*(void *)v63 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_214D1A6B8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v46 = *(void *)(*(void *)v63 + 16);
      }
      *(void *)(v0 + 384) = v46;
      sub_214D1A5F8();
      _os_log_impl(&dword_214B4E000, v43, v44, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v45, 0xCu);
      MEMORY[0x2166B1540](v45, -1, -1);
    }
    uint64_t v61 = *(void *)(v0 + 440);

    sub_214B93DCC(v0 + 144, v0 + 64);
    uint64_t v47 = *(void *)(v0 + 88);
    uint64_t v48 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 64, v47);
    uint64_t v49 = *(void *)(v47 - 8);
    unint64_t v50 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v50, v48, v47);
    uint64_t v51 = *v50;
    uint64_t v52 = type metadata accessor for DIPODNHelper();
    *(void *)(v0 + 248) = v52;
    *(void *)(v0 + 256) = &off_26C5A9850;
    *(void *)(v0 + 224) = v51;
    type metadata accessor for GeoCoder.GeocodeCompletionState();
    uint64_t v53 = swift_allocObject();
    *(void *)(v0 + 800) = v53;
    uint64_t v54 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 224, v52);
    uint64_t v55 = *(void *)(v52 - 8);
    unsigned __int8 v56 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16))(v56, v54, v52);
    uint64_t v57 = *v56;
    *(void *)(v0 + 128) = v52;
    *(void *)(v0 + 136) = &off_26C5A9850;
    *(void *)(v0 + 104) = v57;
    swift_defaultActor_initialize();
    *(void *)(v53 + 112) = MEMORY[0x263F8EE78];
    *(unsigned char *)(v53 + 120) = 0;
    sub_214B59EC0((long long *)(v0 + 104), v53 + 128);
    __swift_destroy_boxed_opaque_existential_1(v0 + 224);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    swift_task_dealloc();
    sub_214C50F64();
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v58;
    uint64_t v58[2] = v63;
    v58[3] = v61;
    v58[4] = v53;
    id v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v59;
    *id v59 = v0;
    v59[1] = sub_214C49C58;
    return MEMORY[0x270FA2158]();
  }
}

uint64_t sub_214C49158()
{
  uint64_t v1 = (void *)v0[95];
  os_log_type_t v2 = (uint64_t *)(v0[97] + 112);
  swift_beginAccess();
  id v3 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *v2;
  v0[47] = *v2;
  *os_log_type_t v2 = 0x8000000000000000;
  unint64_t v8 = sub_214B88328((uint64_t)v3);
  uint64_t v9 = *(void *)(v5 + 16);
  BOOL v10 = (v6 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v12 = v6;
  if (*(void *)(v5 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = (uint64_t)sub_214B90CA8();
    }
    goto LABEL_10;
  }
  uint64_t v13 = v0[95];
  sub_214B8CF9C(v11, isUniquelyReferenced_nonNull_native);
  uint64_t v11 = sub_214B88328(v13);
  if ((v12 & 1) == (v6 & 1))
  {
    unint64_t v8 = v11;
LABEL_10:
    uint64_t v15 = (void *)v0[47];
    uint64_t v16 = v0[99];
    uint64_t v17 = v0[98];
    uint64_t v18 = v0[96];
    if (v12)
    {
      uint64_t v19 = v15[7] + 24 * v8;
      *(void *)uint64_t v19 = v17;
      *(void *)(v19 + 8) = v16;
      *(unsigned char *)(v19 + 16) = v18 == 0;
      goto LABEL_14;
    }
    uint64_t v20 = v0[95];
    v15[(v8 >> 6) + 8] |= 1 << v8;
    *(void *)(v15[6] + 8 * v8) = v20;
    uint64_t v21 = v15[7] + 24 * v8;
    *(void *)uint64_t v21 = v17;
    *(void *)(v21 + 8) = v16;
    *(unsigned char *)(v21 + 16) = v18 == 0;
    uint64_t v22 = v15[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      uint64_t v25 = (void *)v0[95];
      uint64_t v15[2] = v24;
      id v26 = v25;
LABEL_14:
      uint64_t v27 = (void *)v0[95];
      uint64_t v28 = v0[55];
      *os_log_type_t v2 = (uint64_t)v15;

      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v11 = (uint64_t)sub_214C49380;
      uint64_t v6 = v28;
      uint64_t v7 = 0;
      return MEMORY[0x270FA2498](v11, v6, v7);
    }
LABEL_18:
    __break(1u);
    return MEMORY[0x270FA2498](v11, v6, v7);
  }
  sub_214B6A264(0, &qword_26784CD00);
  return sub_214D1AC58();
}

uint64_t sub_214C49380()
{
  if (v0[96]) {
    uint64_t v1 = v0 + 65;
  }
  else {
    uint64_t v1 = v0 + 63;
  }
  (*(void (**)(void, void, void))(v0[60] + 16))(v0[61], *v1, v0[59]);
  char v2 = sub_214D19BF8();
  id v3 = sub_214D19EC8();
  os_log_type_t v4 = sub_214D1A498();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v2 & 1;
    _os_log_impl(&dword_214B4E000, v3, v4, "fillCoordinateMap address needs refresh - %{BOOL,public}d", (uint8_t *)v5, 8u);
    MEMORY[0x2166B1540](v5, -1, -1);
  }

  uint64_t v6 = (void *)v0[96];
  uint64_t v7 = (void *)v0[95];
  if (v2)
  {
    uint64_t v8 = v0[93];
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[87];
    uint64_t v11 = v0[61];
    uint64_t v10 = v0[62];
    uint64_t v12 = v0[59];

    v9(v11, v12);
    v9(v10, v12);
    uint64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v14 = v0[92];
    goto LABEL_13;
  }

  uint64_t v15 = v0[55];
  if (v6)
  {
    uint64_t v16 = *(void *)(v15 + 184);
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = (void *)v0[96];
      uint64_t v20 = (void *)v0[95];
      uint64_t v21 = v0[92];
      uint64_t v22 = (void (*)(uint64_t, uint64_t))v0[87];
      uint64_t v24 = v0[61];
      uint64_t v23 = v0[62];
      uint64_t v25 = v0[59];
      *(void *)(v15 + 184) = v18;

      v22(v24, v25);
      v22(v23, v25);
      BOOL v17 = __OFADD__(v21, 1);
      uint64_t v14 = v21 + 1;
      if (!v17)
      {
        uint64_t v13 = v0[93];
LABEL_13:
        uint64_t v26 = v0[91];
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v56 = *(void *)(v15 + 208);
  BOOL v17 = __OFADD__(v56, 1);
  uint64_t v57 = v56 + 1;
  if (v17)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v58 = (void *)v0[95];
  uint64_t v59 = v0[91];
  uint64_t v60 = (void (*)(uint64_t, uint64_t))v0[87];
  uint64_t v62 = v0[61];
  uint64_t v61 = v0[62];
  uint64_t v63 = v0[59];
  *(void *)(v15 + 208) = v57;

  v60(v62, v63);
  v60(v61, v63);
  BOOL v17 = __OFADD__(v59, 1);
  uint64_t v26 = v59 + 1;
  if (v17)
  {
LABEL_41:
    __break(1u);
    return MEMORY[0x270FA2158]();
  }
  uint64_t v13 = v0[93];
  uint64_t v14 = v0[92];
LABEL_14:
  uint64_t v27 = v0[94] + 1;
  if (v27 == v0[89])
  {
    uint64_t v80 = v0 + 46;
    swift_bridgeObjectRelease();
    uint64_t v28 = v0[86];
    uint64_t v29 = v0[79];
    uint64_t v30 = v0[78];
    uint64_t v31 = (void *)sub_214D1A028();
    uint64_t v32 = (void *)swift_allocObject();
    long long v32[2] = v13;
    long long v32[3] = v30;
    v32[4] = v14;
    v32[5] = v26;
    v32[6] = v28;
    v32[7] = v29;
    v0[6] = sub_214C50F3C;
    v0[7] = v32;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_214BF1534;
    v0[5] = &block_descriptor_14;
    uint64_t v33 = _Block_copy(v0 + 2);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v33);

    sub_214D1A578();
    sub_214D19E98();
    if (qword_26784C8D8 == -1)
    {
LABEL_16:
      uint64_t v34 = v0[67];
      uint64_t v35 = qword_267863720;
      uint64_t v36 = *(void *)algn_267863728;
      char v37 = byte_267863730;
      uint64_t v38 = (void *)qword_267863738;
      int v39 = byte_267863740;
      *(void *)(v34 + 32) = "enableTelemetry=YES";
      *(void *)(v34 + 40) = 19;
      *(unsigned char *)(v34 + 48) = 2;
      *(void *)uint64_t v34 = v35;
      *(void *)(v34 + 8) = v36;
      *(unsigned char *)(v34 + 16) = v37;
      *(void *)(v34 + 24) = v38;
      id v40 = v38;
      sub_214D19EA8();
      sub_214D1A588();
      if (v39 == 1) {
        sub_214D19E88();
      }
      else {
        sub_214D19E98();
      }
      uint64_t v50 = v0[68];
      uint64_t v51 = v0[67];

      sub_214B6A2A8(v51, v50);
      uint64_t v52 = sub_214D19EC8();
      os_log_type_t v53 = sub_214D1A498();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 134349056;
        swift_beginAccess();
        if ((*v80 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v55 = sub_214D1A6B8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = *(void *)(*v80 + 16);
        }
        v0[48] = v55;
        sub_214D1A5F8();
        _os_log_impl(&dword_214B4E000, v52, v53, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v54, 0xCu);
        MEMORY[0x2166B1540](v54, -1, -1);
      }
      uint64_t v78 = v0[55];

      sub_214B93DCC((uint64_t)(v0 + 18), (uint64_t)(v0 + 8));
      uint64_t v64 = v0[11];
      uint64_t v65 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 8), v64);
      uint64_t v66 = *(void *)(v64 - 8);
      uint64_t v67 = (uint64_t *)swift_task_alloc();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v66 + 16))(v67, v65, v64);
      uint64_t v68 = *v67;
      uint64_t v69 = type metadata accessor for DIPODNHelper();
      v0[31] = v69;
      v0[32] = &off_26C5A9850;
      v0[28] = v68;
      type metadata accessor for GeoCoder.GeocodeCompletionState();
      uint64_t v70 = swift_allocObject();
      v0[100] = v70;
      uint64_t v71 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 28), v69);
      uint64_t v72 = *(void *)(v69 - 8);
      uint64_t v73 = (uint64_t *)swift_task_alloc();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v72 + 16))(v73, v71, v69);
      uint64_t v74 = *v73;
      v0[16] = v69;
      v0[17] = &off_26C5A9850;
      v0[13] = v74;
      swift_defaultActor_initialize();
      *(void *)(v70 + 112) = MEMORY[0x263F8EE78];
      *(unsigned char *)(v70 + 120) = 0;
      sub_214B59EC0((long long *)(v0 + 13), v70 + 128);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 28));
      swift_task_dealloc();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
      swift_task_dealloc();
      sub_214C50F64();
      char v75 = (void *)swift_task_alloc();
      v0[101] = v75;
      v75[2] = v80;
      v75[3] = v78;
      v75[4] = v70;
      uint64_t v76 = (void *)swift_task_alloc();
      v0[102] = v76;
      *uint64_t v76 = v0;
      v76[1] = sub_214C49C58;
      return MEMORY[0x270FA2158]();
    }
LABEL_37:
    swift_once();
    goto LABEL_16;
  }
  v0[94] = v27;
  v0[93] = v13;
  v0[92] = v14;
  v0[91] = v26;
  uint64_t v41 = v0[62];
  uint64_t v42 = v0[59];
  uint64_t v43 = v0[60];
  os_log_type_t v44 = (void *)v0[58];
  uint64_t v45 = (char *)v44 + *((int *)v0 + 208);
  sub_214B95764(v0[85]+ ((*((unsigned __int8 *)v0 + 836) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 836))+ v0[90] * v27, (uint64_t)v44, &qword_26784CCE0);
  v0[95] = *v44;
  uint64_t v46 = (void *)v44[1];
  v0[96] = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v41, v45, v42);
  uint64_t v47 = qword_26784E310;
  v0[97] = qword_26784E310;
  if (v46)
  {
    objc_msgSend(v46, sel_coordinate);
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  v0[99] = v49;
  v0[98] = v48;
  return MEMORY[0x270FA2498](sub_214C49158, v47, 0);
}

uint64_t sub_214C49C58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 440);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C49D84, v1, 0);
}

uint64_t sub_214C49D84()
{
  sub_214D1A578();
  sub_214D19E98();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 824) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214C49E58;
  uint64_t v2 = *(void *)(v0 + 800);
  v1[11] = v2;
  return MEMORY[0x270FA2498](sub_214C4D270, v2, 0);
}

uint64_t sub_214C49E58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 440);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C49F68, v1, 0);
}

uint64_t sub_214C49F68()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[87];
  uint64_t v2 = v0[72];
  uint64_t v3 = v0[70];
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[65];
  uint64_t v6 = v0[63];
  uint64_t v7 = v0[59];
  swift_release();
  sub_214B6A30C(v4);
  v1(v6, v7);
  v1(v5, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 18));
  sub_214B6A30C(v3);
  sub_214B6A30C(v2);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0[74];
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_214C4A130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x270FA2498](sub_214C4A150, 0, 0);
}

uint64_t sub_214C4A150()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_214CDC718(v1);
  *(void *)(v0 + 32) = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_26784CCD8 + dword_26784CCD8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_214C4A218;
  return v5(v2);
}

uint64_t sub_214C4A218(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_214C4A36C;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_214C4A348;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_214C4A348()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_214C4A36C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_214C4A3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1EB90;
  strcpy((char *)(inited + 32), "expiredCount");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  *(void *)(inited + 56) = 0xD000000000000012;
  *(void *)(inited + 64) = 0x8000000214D37030;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a2);
  *(void *)(inited + 80) = 0x6F4C646568636163;
  *(void *)(inited + 88) = 0xEF736E6F69746163;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a3);
  *(void *)(inited + 104) = 0x6F4E646568636163;
  *(void *)(inited + 112) = 0xEF73646E756F4674;
  id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a4);
  *(void *)(inited + 120) = result;
  *(void *)(inited + 128) = 0x6E6F697461727564;
  *(void *)(inited + 136) = 0xE800000000000000;
  if (a5 < a6)
  {
    __break(1u);
  }
  else
  {
    id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, (double)(a5 - a6) / 1000000000.0);
    *(void *)(inited + 144) = result;
    strcpy((char *)(inited + 152), "isAllResolved");
    *(_WORD *)(inited + 166) = -4864;
    if (!__OFADD__(a3, a4))
    {
      uint64_t v14 = a3 + a4;
      *(void *)(inited + 168) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v14 == a2);
      return (id)sub_214B7F6B8(inited);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_214C4A5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C4A6A0, a4, 0);
}

uint64_t sub_214C4A6A0()
{
  uint64_t v1 = (uint64_t *)v0[20];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_214D1A6A8();
    sub_214B6A264(0, &qword_26784CD00);
    sub_214C512EC();
    uint64_t result = sub_214D1A448();
    uint64_t v2 = v0[2];
    uint64_t v39 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v5 = v0[5];
    unint64_t v6 = v0[6];
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v39 = v2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  id v40 = v0 + 7;
  uint64_t v36 = v0 + 18;
  char v37 = (id *)(v0 + 17);
  int64_t v38 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v41 = v2;
  os_log_type_t v44 = v0;
  while (v2 < 0)
  {
    uint64_t v14 = sub_214D1A6D8();
    if (!v14) {
      goto LABEL_37;
    }
    *uint64_t v36 = v14;
    sub_214B6A264(0, &qword_26784CD00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = *v37;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v6;
    if (!v15) {
      goto LABEL_37;
    }
LABEL_30:
    unint64_t v42 = v11;
    uint64_t v43 = v13;
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[24];
    uint64_t v21 = v44[22];
    uint64_t v22 = v44[21];
    uint64_t v23 = sub_214D1A368();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v20, 1, 1, v23);
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = 0;
    uint64_t v26 = v25 + 2;
    v25[3] = 0;
    void v25[4] = v15;
    v25[5] = v22;
    void v25[6] = v21;
    sub_214B95764(v20, v19, (uint64_t *)&unk_26ACE4338);
    LODWORD(v19) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23);
    id v27 = v15;
    swift_retain();
    swift_retain();
    uint64_t v28 = v44[23];
    if (v19 == 1)
    {
      sub_214B59CE0(v44[23], (uint64_t *)&unk_26ACE4338);
      if (*v26) {
        goto LABEL_32;
      }
    }
    else
    {
      sub_214D1A358();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v23);
      if (*v26)
      {
LABEL_32:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v29 = sub_214D1A2D8();
        uint64_t v31 = v30;
        swift_unknownObjectRelease();
        goto LABEL_35;
      }
    }
    uint64_t v29 = 0;
    uint64_t v31 = 0;
LABEL_35:
    uint64_t v2 = v41;
    uint64_t v0 = v44;
    uint64_t v32 = *(void *)v44[19];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = &unk_26784E3F0;
    *(void *)(v33 + 24) = v25;
    uint64_t v34 = (void *)(v31 | v29);
    if (v31 | v29)
    {
      uint64_t v34 = v40;
      *id v40 = 0;
      v40[1] = 0;
      v44[9] = v29;
      v44[10] = v31;
    }
    uint64_t v5 = v43;
    uint64_t v10 = v44[24];
    v44[14] = 1;
    v44[15] = v34;
    v44[16] = v32;
    swift_task_create();

    swift_release();
    uint64_t result = sub_214B59CE0(v10, (uint64_t *)&unk_26ACE4338);
    unint64_t v6 = v42;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v13 = v5;
    goto LABEL_29;
  }
  int64_t v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  if (v16 >= v38) {
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v39 + 8 * v16);
  uint64_t v13 = v5 + 1;
  if (v17) {
    goto LABEL_28;
  }
  uint64_t v13 = v5 + 2;
  if (v5 + 2 >= v38) {
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v39 + 8 * v13);
  if (v17) {
    goto LABEL_28;
  }
  uint64_t v13 = v5 + 3;
  if (v5 + 3 >= v38) {
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v39 + 8 * v13);
  if (v17) {
    goto LABEL_28;
  }
  uint64_t v13 = v5 + 4;
  if (v5 + 4 >= v38) {
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v39 + 8 * v13);
  if (v17)
  {
LABEL_28:
    uint64_t v11 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_29:
    id v15 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
  uint64_t v18 = v5 + 5;
  while (v38 != v18)
  {
    unint64_t v17 = *(void *)(v39 + 8 * v18++);
    if (v17)
    {
      uint64_t v13 = v18 - 1;
      goto LABEL_28;
    }
  }
LABEL_37:
  sub_214BB7994();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_214C4AC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[56] = a5;
  v6[57] = a6;
  v6[55] = a4;
  v6[58] = type metadata accessor for ODISignpost();
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C4ACBC, 0, 0);
}

uint64_t sub_214C4ACBC()
{
  if (qword_26784C8E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[59];
  uint64_t v3 = qword_267863748;
  uint64_t v2 = unk_267863750;
  char v4 = byte_267863758;
  uint64_t v5 = (void *)qword_267863760;
  int v6 = byte_267863768;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[59];
  uint64_t v9 = v0[60];

  sub_214B6A2A8(v8, v9);
  v0[61] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00A40]), sel_init);
  if (qword_26ACE41E0 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)v0[55];
  uint64_t v10 = v0[56];
  uint64_t v12 = sub_214D19EE8();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_26ACEBA58);
  v0[62] = v13;
  id v14 = v11;
  sub_214C3E4AC(v13, v14);

  return MEMORY[0x270FA2498](sub_214C4AECC, v10, 0);
}

uint64_t sub_214C4AECC()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 200);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 200) = v7;
    uint64_t v2 = (uint64_t)sub_214C4AF58;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_214C4AF58()
{
  uint64_t v1 = sub_214D19EC8();
  os_log_type_t v2 = sub_214D1A498();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_214B4E000, v1, v2, "Requesting geocode", v3, 2u);
    MEMORY[0x2166B1540](v3, -1, -1);
  }
  uint64_t v4 = (void *)v0[61];
  uint64_t v5 = v0[55];

  v0[63] = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  v0[2] = v0;
  v0[7] = v0 + 53;
  v0[3] = sub_214C4B0E0;
  uint64_t v6 = swift_continuation_init();
  v0[28] = MEMORY[0x263EF8330];
  v0[29] = 0x40000000;
  v0[30] = sub_214C4CA50;
  v0[31] = &block_descriptor_95;
  v0[32] = v6;
  objc_msgSend(v4, sel_geocodePostalAddress_completionHandler_, v5, v0 + 28);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214C4B0E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 512) = v1;
  if (v1) {
    os_log_type_t v2 = sub_214C4C4A4;
  }
  else {
    os_log_type_t v2 = sub_214C4B1F0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214C4B1F0()
{
  char v37 = v1;
  uint64_t v5 = v1[63];
  unint64_t v6 = v1[53];
  __uint64_t v7 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (v7 < (unint64_t)v5)
  {
    __break(1u);
  }
  else
  {
    v1[65] = v7 - (void)v5;
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_214D19EC8();
    os_log_type_t v2 = sub_214D1A498();
    unint64_t v3 = v6 >> 62;
    if (!os_log_type_enabled(v5, v2))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    uint64_t v0 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v36 = v4;
    *(_DWORD *)uint64_t v0 = 136315138;
    if (!v3)
    {
      uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v35 = v4;
      if (v8) {
        goto LABEL_5;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      id v14 = 0;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_214D1A948();
  uint64_t v35 = v4;
  if (!v9) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0) {
    goto LABEL_37;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v6 + 32); ; id i = (id)MEMORY[0x2166B0290](0, v6))
    {
      uint64_t v13 = i;
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v13, sel_location);

      if (v14)
      {
        id v15 = objc_msgSend(v14, sel_description);

        id v14 = (id)sub_214D1A038();
        unint64_t v17 = v16;
      }
      else
      {
LABEL_14:
        unint64_t v17 = 0xE000000000000000;
      }
      v1[54] = sub_214C3D88C((uint64_t)v14, v17, &v36);
      sub_214D1A5F8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_214B4E000, v5, v2, "Geocode Result %s", v0, 0xCu);
      os_log_type_t v2 = v35;
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v35, -1, -1);
      MEMORY[0x2166B1540](v0, -1, -1);

LABEL_16:
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_214D1A948();
        swift_bridgeObjectRelease();
        if (!v5)
        {
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v5 = *(NSObject **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v5) {
          goto LABEL_29;
        }
      }
      if ((v6 & 0xC000000000000001) != 0) {
        break;
      }
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v18 = *(id *)(v6 + 32);
        goto LABEL_21;
      }
      __break(1u);
LABEL_37:
      ;
    }
    id v18 = (id)MEMORY[0x2166B0290](0, v6);
LABEL_21:
    uint64_t v19 = v18;
    v1[66] = v18;
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v19, sel_location);
    v1[67] = v20;
    if (v20)
    {
      uint64_t v21 = sub_214D19EC8();
      os_log_type_t v22 = sub_214D1A498();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_214B4E000, v21, v22, "fillCoordinateMap - geo coded address", v23, 2u);
        MEMORY[0x2166B1540](v23, -1, -1);
      }
      uint64_t v24 = v1[56];

      uint64_t v9 = (uint64_t)sub_214C4B730;
      uint64_t v10 = v24;
      uint64_t v11 = 0;
      return MEMORY[0x270FA2498](v9, v10, v11);
    }

LABEL_30:
    uint64_t v25 = sub_214D19EC8();
    os_log_type_t v26 = sub_214D1A4A8();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl(&dword_214B4E000, v25, v26, "fillCoordinateMap - no geo coded address found but no error", v27, 2u);
      MEMORY[0x2166B1540](v27, -1, -1);
    }
    uint64_t v28 = (void *)v1[61];

    sub_214D1A578();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = MEMORY[0x263F8D4F8];
    uint64_t v31 = MEMORY[0x263F8D530];
    *(_OWORD *)(v29 + 16) = xmmword_214D1C1E0;
    *(void *)(v29 + 56) = v30;
    *(void *)(v29 + 64) = v31;
    uint64_t v32 = v1[60];
    *(unsigned char *)(v29 + 32) = 0;
    sub_214D19E88();
    swift_bridgeObjectRelease();
    sub_214B6A30C(v32);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v1[1];
    return v33();
  }
  else
  {
    __break(1u);
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
}

uint64_t sub_214C4B730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 448);
  uint64_t v5 = *(void *)(v4 + 192);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  else
  {
    *(void *)(v4 + 192) = v7;
    return MEMORY[0x270FA2498](sub_214C4B764, 0, 0);
  }
}

uint64_t sub_214C4B764()
{
  if (qword_26784C9B0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[67];
  uint64_t v2 = qword_26784E310;
  v0[68] = qword_26784E310;
  objc_msgSend(v1, sel_coordinate);
  v0[69] = v3;
  v0[70] = v4;
  return MEMORY[0x270FA2498](sub_214C4B818, v2, 0);
}

uint64_t sub_214C4B818()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[68];
  uint64_t v4 = (void *)v0[67];
  uint64_t v5 = (void *)v0[55];
  swift_beginAccess();
  id v6 = v5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v3 + 112);
  *(void *)(v3 + 112) = 0x8000000000000000;
  sub_214B8EBFC(v2, v1, 0, v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 112) = v13;
  swift_bridgeObjectRelease();

  swift_endAccess();
  id v8 = v4;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[71] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_214C4B970;
  uint64_t v10 = v0[57];
  uint64_t v11 = v0[55];
  v9[18] = v8;
  v9[19] = v10;
  v9[17] = v11;
  return MEMORY[0x270FA2498](sub_214C4D7D4, v10, 0);
}

uint64_t sub_214C4B970(char a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 536);
  *(unsigned char *)(*(void *)v1 + 608) = a1;
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_214C4BA8C, 0, 0);
}

uint64_t sub_214C4BA8C()
{
  char v1 = *((unsigned char *)v0 + 608);
  uint64_t v2 = (void *)v0[67];
  uint64_t v3 = (void *)v0[66];
  uint64_t v4 = (void *)v0[61];
  double v5 = (double)(unint64_t)v0[65] / 1000000000.0;
  id v6 = (void *)sub_214D1A028();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(double *)(v7 + 24) = v5;
  v0[20] = sub_214C515E4;
  v0[21] = v7;
  v0[16] = MEMORY[0x263EF8330];
  v0[17] = 1107296256;
  v0[18] = sub_214BF1534;
  v0[19] = &block_descriptor_115;
  id v8 = _Block_copy(v0 + 16);
  swift_release();
  AnalyticsSendEventLazy();

  _Block_release(v8);
  LOBYTE(v8) = v0[64] == 0;
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8D4F8];
  uint64_t v11 = MEMORY[0x263F8D530];
  *(_OWORD *)(v9 + 16) = xmmword_214D1C1E0;
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = v11;
  uint64_t v12 = v0[60];
  *(unsigned char *)(v9 + 32) = (_BYTE)v8;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_214C4BCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 448);
  uint64_t v5 = *(void *)(v4 + 216);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  else
  {
    *(void *)(v4 + 216) = v7;
    return MEMORY[0x270FA2498](sub_214C4BD0C, 0, 0);
  }
}

uint64_t sub_214C4BD0C()
{
  if (qword_26784C9B0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26784E310;
  *(void *)(v0 + 592) = qword_26784E310;
  return MEMORY[0x270FA2498](sub_214C4BDA4, v1, 0);
}

uint64_t sub_214C4BDA4()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = (void *)v0[55];
  swift_beginAccess();
  id v3 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *(void *)(v1 + 112);
  *(void *)(v1 + 112) = 0x8000000000000000;
  sub_214B8EBFC(0, 0, 1, v3, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();

  swift_endAccess();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[75] = v5;
  void *v5 = v0;
  v5[1] = sub_214C4BEDC;
  uint64_t v6 = v0[57];
  uint64_t v7 = v0[55];
  v5[18] = 0;
  v5[19] = v6;
  v5[17] = v7;
  return MEMORY[0x270FA2498](sub_214C4D7D4, v6, 0);
}

uint64_t sub_214C4BEDC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 609) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C4BFDC, 0, 0);
}

uint64_t sub_214C4BFDC()
{
  char v1 = *((unsigned char *)v0 + 609);
  uint64_t v2 = (void *)v0[73];
  uint64_t v3 = (void *)v0[64];
  uint64_t v4 = (void *)v0[61];
  double v5 = (double)(unint64_t)v0[72] / 1000000000.0;
  uint64_t v6 = (void *)sub_214D1A028();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(double *)(v7 + 24) = v5;
  v0[14] = sub_214C515B0;
  v0[15] = v7;
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_214BF1534;
  v0[13] = &block_descriptor_108_0;
  id v8 = _Block_copy(v0 + 10);
  swift_release();
  AnalyticsSendEventLazy();

  _Block_release(v8);
  LOBYTE(v6) = v0[64] == 0;
  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8D4F8];
  uint64_t v11 = MEMORY[0x263F8D530];
  *(_OWORD *)(v9 + 16) = xmmword_214D1C1E0;
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = v11;
  uint64_t v12 = v0[60];
  *(unsigned char *)(v9 + 32) = (_BYTE)v6;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_214C4C22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 448);
  uint64_t v5 = *(void *)(v4 + 224);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  else
  {
    *(void *)(v4 + 224) = v7;
    return MEMORY[0x270FA2498](sub_214C4C260, 0, 0);
  }
}

uint64_t sub_214C4C260()
{
  char v1 = (void *)v0[73];
  uint64_t v2 = (void *)v0[64];
  uint64_t v3 = (void *)v0[61];
  double v4 = (double)(unint64_t)v0[72] / 1000000000.0;
  uint64_t v5 = (void *)sub_214D1A028();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(double *)(v6 + 24) = v4;
  v0[26] = sub_214C51594;
  v0[27] = v6;
  v0[22] = MEMORY[0x263EF8330];
  v0[23] = 1107296256;
  v0[24] = sub_214BF1534;
  v0[25] = &block_descriptor_101;
  uint64_t v7 = _Block_copy(v0 + 22);
  id v8 = v2;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

  sub_214D1A578();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8D4F8];
  uint64_t v11 = MEMORY[0x263F8D530];
  *(_OWORD *)(v9 + 16) = xmmword_214D1C1E0;
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = v11;
  uint64_t v12 = v0[60];
  *(unsigned char *)(v9 + 32) = 0;
  sub_214D19E88();
  swift_bridgeObjectRelease();
  sub_214B6A30C(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_214C4C4A4()
{
  uint64_t v48 = v0;
  char v1 = *(void **)(v0 + 512);
  swift_willThrow();
  id v2 = v1;
  id v3 = v1;
  double v4 = sub_214D19EC8();
  os_log_type_t v5 = sub_214D1A498();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 512);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v47[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_214D1AC88();
    *(void *)(v0 + 408) = sub_214C3D88C(v9, v10, v47);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v4, v5, "Geocode error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v8, -1, -1);
    MEMORY[0x2166B1540](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 512);
  }
  __uint64_t v12 = *(void *)(v0 + 504);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if ((unint64_t)v13 < v12)
  {
    __break(1u);
    return MEMORY[0x270FA2498](v13, v14, v15);
  }
  *(void *)(v0 + 576) = (char *)v13 - v12;
  unint64_t v16 = (void *)sub_214D199A8();
  *(void *)(v0 + 584) = v16;
  id v17 = objc_msgSend(v16, sel_domain);
  uint64_t v18 = sub_214D1A038();
  uint64_t v20 = v19;

  if (v18 == sub_214D1A038() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_13;
    }
  }
  if (objc_msgSend(v16, sel_code) == (id)8)
  {
    uint64_t v23 = sub_214D19EC8();
    os_log_type_t v24 = sub_214D1A498();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_214B4E000, v23, v24, "fillCoordinateMap - address not found - caching as not found", v25, 2u);
      MEMORY[0x2166B1540](v25, -1, -1);
    }
    uint64_t v26 = *(void *)(v0 + 448);

    uint64_t v13 = sub_214C4BCD8;
    uint64_t v14 = v26;
    goto LABEL_20;
  }
LABEL_13:
  id v27 = *(id *)(v0 + 440);
  uint64_t v28 = sub_214D19EC8();
  os_log_type_t v29 = sub_214D1A4A8();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 440);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138477827;
    *(void *)(v0 + 384) = v31;
    id v34 = v31;
    sub_214D1A5F8();
    *uint64_t v33 = v31;

    _os_log_impl(&dword_214B4E000, v28, v29, "Ignoring error occurred in geocoding address: %{private}@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784D580);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v33, -1, -1);
    MEMORY[0x2166B1540](v32, -1, -1);
  }
  else
  {

    uint64_t v28 = *(NSObject **)(v0 + 440);
  }
  uint64_t v35 = *(void **)(v0 + 512);

  id v36 = v35;
  id v37 = v35;
  uint64_t v38 = sub_214D19EC8();
  os_log_type_t v39 = sub_214D1A4A8();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v41 = *(void **)(v0 + 512);
  if (v40)
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v47[0] = v43;
    *(_DWORD *)unint64_t v42 = 136315138;
    swift_getErrorValue();
    uint64_t v44 = sub_214D1AC88();
    *(void *)(v0 + 400) = sub_214C3D88C(v44, v45, v47);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v38, v39, "    ignored : %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v43, -1, -1);
    MEMORY[0x2166B1540](v42, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v13 = sub_214C4C22C;
LABEL_20:
  uint64_t v15 = 0;
  return MEMORY[0x270FA2498](v13, v14, v15);
}

uint64_t sub_214C4CA50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    sub_214B6A264(0, &qword_26784E408);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_214D1A268();
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_214C4CB2C(double a1)
{
  id v2 = (void *)sub_214D199A8();
  id v3 = objc_msgSend(v2, sel_code);
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
  *(void *)(inited + 32) = 0x646F43726F727265;
  *(void *)(inited + 40) = 0xE900000000000065;
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 56) = 0x6E6F697461727564;
  *(void *)(inited + 64) = 0xE800000000000000;
  id v6 = objc_allocWithZone(NSNumber);
  id v7 = v4;
  *(void *)(inited + 72) = objc_msgSend(v6, sel_initWithDouble_, a1);
  unint64_t v8 = sub_214B7F6B8(inited);

  return v8;
}

unint64_t sub_214C4CC3C(char a1, char a2, double a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_214D1EB80;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x8000000214D37010;
  *(void *)(inited + 48) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a2 & 1);
  *(void *)(inited + 56) = 0x656D69546E4F7369;
  *(void *)(inited + 64) = 0xE800000000000000;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, (a1 & 1) == 0);
  *(void *)(inited + 80) = 0x6E6F697461727564;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a3);
  return sub_214B7F6B8(inited);
}

uint64_t sub_214C4CD50(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for ODISignpost();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C4CDF4, v1, 0);
}

uint64_t sub_214C4CDF4()
{
  if (qword_26784C8E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v3 = qword_267863770;
  uint64_t v2 = *(void *)algn_267863778;
  char v4 = byte_267863780;
  uint64_t v5 = (void *)qword_267863788;
  int v6 = byte_267863790;
  *(void *)(v1 + 32) = "enableTelemetry=YES";
  *(void *)(v1 + 40) = 19;
  *(unsigned char *)(v1 + 48) = 2;
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  id v7 = v5;
  sub_214D19EA8();
  sub_214D1A588();
  if (v6 == 1) {
    sub_214D19E88();
  }
  else {
    sub_214D19E98();
  }
  uint64_t v8 = v0[8];
  uint64_t v9 = v0[9];

  sub_214B6A2A8(v8, v9);
  if (qword_26784C9B0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26784E310;
  v0[10] = qword_26784E310;
  return MEMORY[0x270FA2498](sub_214C4CFB8, v10, 0);
}

uint64_t sub_214C4CFB8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    id v3 = *(id *)(v0 + 40);
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_214B88328((uint64_t)v3);
    int v6 = *(void **)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    if (v7)
    {
      uint64_t v8 = *(void *)(v2 + 56) + 24 * v4;
      *(void *)(v0 + 88) = *(void *)v8;
      *(void *)(v0 + 96) = *(void *)(v8 + 8);
      *(unsigned char *)(v0 + 104) = *(unsigned char *)(v8 + 16);
      swift_bridgeObjectRelease();

      uint64_t v9 = sub_214C4D180;
    }
    else
    {
      swift_bridgeObjectRelease();

      uint64_t v9 = sub_214C525A8;
    }
    uint64_t v11 = v9;
    uint64_t v10 = v5;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = sub_214C4D0D0;
  }
  return MEMORY[0x270FA2498](v11, v10, 0);
}

uint64_t sub_214C4D0D0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void, void, uint64_t))(v0 + 8);
  return v2(0, 0, 1);
}

uint64_t sub_214C4D180()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
  }
  uint64_t v4 = *(void *)(v0 + 72);
  sub_214D1A578();
  sub_214D19E98();
  sub_214B6A30C(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v3, v1);
}

uint64_t sub_214C4D250()
{
  *(void *)(v1 + 88) = v0;
  return MEMORY[0x270FA2498](sub_214C4D270, v0, 0);
}

uint64_t sub_214C4D270()
{
  uint64_t v1 = v0[11];
  *(unsigned char *)(v1 + 120) = 1;
  uint64_t v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  uint64_t v3 = *(void *)(*(void *)(v1 + 112) + 16);
  if (v3)
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_214D19EE8();
    v0[12] = __swift_project_value_buffer(v4, (uint64_t)qword_26ACEBA58);
    uint64_t v5 = sub_214D19EC8();
    os_log_type_t v6 = sub_214D1A498();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134349056;
      v0[10] = v3;
      sub_214D1A5F8();
      _os_log_impl(&dword_214B4E000, v5, v6, "fillCoordinateMap - %{public}ld new/updated addresses to store to cache", v7, 0xCu);
      MEMORY[0x2166B1540](v7, -1, -1);
    }
    uint64_t v8 = v0[11];

    __swift_project_boxed_opaque_existential_1((void *)(v8 + 128), *(void *)(v8 + 152));
    uint64_t v9 = *v2;
    v0[13] = v9;
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[14] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_214C4D490;
    return sub_214B619CC(v9);
  }
  else
  {
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_214C4D490()
{
  uint64_t v2 = (void *)*v1;
  v2[15] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    return MEMORY[0x270FA2498](sub_214C4D5CC, v3, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_214C4D5CC()
{
  uint64_t v15 = v0;
  uint64_t v1 = (void *)v0[15];
  swift_bridgeObjectRelease();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_214D19EC8();
  os_log_type_t v5 = sub_214D1A4A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_214D1AC88();
    v0[9] = sub_214C3D88C(v9, v10, &v14);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v4, v5, "Error thrown trying to cache geocodes to asd: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v8, -1, -1);
    MEMORY[0x2166B1540](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[15];
  }
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_214C4D7B0(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return MEMORY[0x270FA2498](sub_214C4D7D4, v2, 0);
}

uint64_t sub_214C4D7D4()
{
  uint64_t v35 = v0;
  uint64_t v1 = *(void *)(v0 + 152);
  int v2 = *(unsigned __int8 *)(v1 + 120);
  *(unsigned char *)(v0 + 192) = v2;
  if (v2 == 1)
  {
    if (qword_26ACE41E0 != -1) {
      swift_once();
    }
    id v3 = *(void **)(v0 + 144);
    uint64_t v4 = sub_214D19EE8();
    *(void *)(v0 + 160) = __swift_project_value_buffer(v4, (uint64_t)qword_26ACEBA58);
    id v5 = v3;
    uint64_t v6 = sub_214D19EC8();
    os_log_type_t v7 = sub_214D1A498();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v34 = v10;
      if (v8) {
        uint64_t v11 = 0x746C75736572;
      }
      else {
        uint64_t v11 = 0x6E756F6620746F6ELL;
      }
      if (v8) {
        unint64_t v12 = 0xE600000000000000;
      }
      else {
        unint64_t v12 = 0xE900000000000064;
      }
      *(void *)(v0 + 128) = sub_214C3D88C(v11, v12, &v34);
      sub_214D1A5F8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_214B4E000, v6, v7, "Send late geocode %s to asd cache", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2166B1540](v10, -1, -1);
      MEMORY[0x2166B1540](v9, -1, -1);
    }
    else
    {
    }
    uint64_t v28 = *(void *)(v0 + 144);
    os_log_type_t v29 = *(void **)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 152) + 128), *(void *)(*(void *)(v0 + 152) + 152));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF60);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 168) = inited;
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 40) = v28;
    id v31 = v5;
    id v32 = v29;
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_214C4DB74;
    return sub_214B619CC(inited);
  }
  else
  {
    uint64_t v14 = *(void **)(v0 + 136);
    uint64_t v13 = *(void **)(v0 + 144);
    uint64_t v15 = (void *)(v1 + 112);
    swift_beginAccess();
    uint64_t v16 = *(void **)(v1 + 112);
    id v17 = v13;
    id v18 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 112) = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v16 = sub_214B87CBC(0, v16[2] + 1, 1, v16);
      *uint64_t v15 = v16;
    }
    unint64_t v21 = v16[2];
    unint64_t v20 = v16[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t v16 = sub_214B87CBC((void *)(v20 > 1), v21 + 1, 1, v16);
      *uint64_t v15 = v16;
    }
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 144);
    void v16[2] = v21 + 1;
    os_log_type_t v24 = &v16[2 * v21];
    v24[4] = v23;
    v24[5] = v22;
    swift_endAccess();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v26 = *(unsigned __int8 *)(v0 + 192);
    return v25(v26);
  }
}

uint64_t sub_214C4DB74()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    return MEMORY[0x270FA2498](sub_214C4DCD4, v3, 0);
  }
  else
  {
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF68);
    swift_arrayDestroy();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
    uint64_t v5 = *(unsigned __int8 *)(v2 + 192);
    return v4(v5);
  }
}

uint64_t sub_214C4DCD4()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784CF68);
  swift_arrayDestroy();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_214D19EC8();
  os_log_type_t v5 = sub_214D1A4A8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 184);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_214D1AC88();
    *(void *)(v0 + 120) = sub_214C3D88C(v9, v10, &v15);
    sub_214D1A5F8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_214B4E000, v4, v5, "Error storing result to geocode cache: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2166B1540](v8, -1, -1);
    MEMORY[0x2166B1540](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 184);
  }
  unint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v13 = *(unsigned __int8 *)(v0 + 192);
  return v12(v13);
}

uint64_t sub_214C4DEE4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t GeoCoder.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t GeoCoder.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t GeoCoder.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214C4DFA0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_214C4DFC8(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_214D1A5F8();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_214C4E080(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784E410);
    uint64_t v2 = sub_214D1A758();
    uint64_t v14 = v2;
    sub_214D1A6A8();
    if (sub_214D1A6D8())
    {
      sub_214B6A264(0, &qword_26784CD00);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_214C4E558();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_214D1A598();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_214D1A6D8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_214C4E278()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E418);
  uint64_t v3 = sub_214D1A748();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_214D1AD08();
      sub_214D1A0D8();
      uint64_t result = sub_214D1AD48();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_214C4E558()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E410);
  uint64_t v3 = sub_214D1A748();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_214D1A598();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_214C4E7F8(uint64_t a1)
{
  return sub_214C4E810(a1, &qword_26784E498);
}

uint64_t sub_214C4E804(uint64_t a1)
{
  return sub_214C4E810(a1, &qword_26784E518);
}

uint64_t sub_214C4E810(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_214D1A748();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    unint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_214D1AD08();
      sub_214D1AD18();
      uint64_t result = sub_214D1AD48();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_214C4EAB8(uint64_t a1, uint64_t a2)
{
  sub_214D1A598();
  unint64_t result = sub_214D1A698();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void *sub_214C4EB3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E418);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A738();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_214C4ECF0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E410);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_214D1A738();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_214C4EE9C()
{
  return sub_214C4EEB4(&qword_26784E498);
}

void *sub_214C4EEA8()
{
  return sub_214C4EEB4(&qword_26784E518);
}

void *sub_214C4EEB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_214D1A738();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_214C4F040(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unsigned __int8 v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  swift_bridgeObjectRetain();
  unint64_t v8 = (void *)*a3;
  unint64_t v9 = sub_214B88378(v6);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12)) {
    goto LABEL_24;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  uint64_t v16 = v8[3];
  id v17 = v7;
  if (v16 >= v13)
  {
    if (a2)
    {
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_214B90FF4();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    int64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    *(unsigned char *)(v22[6] + v14) = v6;
    *(void *)(v22[7] + 8 * v14) = v17;
    uint64_t v23 = v22[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v22[2] = v25;
    uint64_t v26 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (void **)(a1 + 56);
    while (1)
    {
      unsigned __int8 v28 = *((unsigned char *)v27 - 8);
      uint64_t v29 = *v27;
      BOOL v30 = (void *)*a3;
      unint64_t v31 = sub_214B88378(v28);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      unint64_t v36 = v31;
      char v37 = v32;
      uint64_t v38 = v30[3];
      id v17 = v29;
      if (v38 < v35)
      {
        sub_214B8D564(v35, 1);
        unint64_t v39 = sub_214B88378(v28);
        if ((v37 & 1) != (v40 & 1)) {
          goto LABEL_26;
        }
        unint64_t v36 = v39;
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v41 = (void *)*a3;
      *(void *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(unsigned char *)(v41[6] + v36) = v28;
      *(void *)(v41[7] + 8 * v36) = v17;
      uint64_t v42 = v41[2];
      BOOL v24 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v24) {
        goto LABEL_25;
      }
      v41[2] = v43;
      v27 += 2;
      if (!--v26) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_214B8D564(v13, a2 & 1);
  unint64_t v18 = sub_214B88378(v6);
  if ((v15 & 1) == (v19 & 1))
  {
    unint64_t v14 = v18;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    int64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_214D1AC58();
  __break(1u);
LABEL_27:
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A908();
  sub_214D1A108();
  sub_214D1A928();
  __break(1u);
}

uint64_t sub_214C4F3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v39[5] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v35 = ~v5;
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v36 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a2 + 56;
  swift_bridgeObjectRetain();
  int64_t v38 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v38 << 6);
    }
    else
    {
      int64_t v11 = v38 + 1;
      if (__OFADD__(v38, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v11 >= v36) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v37 + 8 * v11);
      int64_t v13 = v38 + 1;
      if (!v12)
      {
        int64_t v13 = v38 + 2;
        if (v38 + 2 >= v36) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v37 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v38 + 3;
          if (v38 + 3 >= v36) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v37 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v38 + 4;
            if (v38 + 4 >= v36) {
              goto LABEL_37;
            }
            unint64_t v12 = *(void *)(v37 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v38 + 5;
              if (v38 + 5 >= v36)
              {
LABEL_37:
                sub_214BB7994();
                return v2;
              }
              unint64_t v12 = *(void *)(v37 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    break;
                  }
                  if (v13 >= v36) {
                    goto LABEL_37;
                  }
                  unint64_t v12 = *(void *)(v37 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_24;
                  }
                }
LABEL_39:
                __break(1u);
              }
              int64_t v13 = v38 + 5;
            }
          }
        }
      }
LABEL_24:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
      int64_t v38 = v13;
    }
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v16 = sub_214D1A598();
    uint64_t v17 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18)) {
      break;
    }
LABEL_6:
  }
  sub_214B6A264(0, &qword_26784CD00);
  id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v18);
  char v20 = sub_214D1A5A8();

  if ((v20 & 1) == 0)
  {
    uint64_t v21 = ~v17;
    do
    {
      unint64_t v18 = (v18 + 1) & v21;
      if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_6;
      }
      id v22 = *(id *)(*(void *)(v2 + 48) + 8 * v18);
      char v23 = sub_214D1A5A8();
    }
    while ((v23 & 1) == 0);
  }

  v39[0] = a1;
  v39[1] = v37;
  void v39[2] = v35;
  v39[3] = v38;
  v39[4] = v7;
  char v26 = *(unsigned char *)(v2 + 32);
  unint64_t v27 = (unint64_t)((1 << v26) + 63) >> 6;
  size_t v28 = 8 * v27;
  if ((v26 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe, v25);
    memcpy((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v28);
    sub_214C4F7EC((unint64_t *)((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0)), v27, v2, v18, v39);
    uint64_t v30 = v29;
    swift_release();
    sub_214BB7994();
  }
  else
  {
    unint64_t v31 = (void *)swift_slowAlloc();
    memcpy(v31, (const void *)(v2 + 56), v28);
    sub_214C4F7EC((unint64_t *)v31, v27, v2, v18, v39);
    uint64_t v30 = v32;
    swift_release();
    sub_214BB7994();
    MEMORY[0x2166B1540](v31, -1, -1);
  }
  return v30;
}

void sub_214C4F7EC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v36 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v7;
    do
    {
      while (1)
      {
        int64_t v8 = a5[3];
        unint64_t v9 = a5[4];
        if (v9)
        {
          uint64_t v10 = (v9 - 1) & v9;
          unint64_t v11 = __clz(__rbit64(v9)) | (v8 << 6);
        }
        else
        {
          int64_t v12 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          int64_t v13 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v14 = a5[3];
          if (v12 >= v13) {
            goto LABEL_34;
          }
          uint64_t v15 = a5[1];
          unint64_t v16 = *(void *)(v15 + 8 * v12);
          if (!v16)
          {
            int64_t v14 = v8 + 1;
            if (v8 + 2 >= v13) {
              goto LABEL_34;
            }
            unint64_t v16 = *(void *)(v15 + 8 * (v8 + 2));
            if (v16)
            {
              int64_t v12 = v8 + 2;
            }
            else
            {
              int64_t v14 = v8 + 2;
              if (v8 + 3 >= v13) {
                goto LABEL_34;
              }
              unint64_t v16 = *(void *)(v15 + 8 * (v8 + 3));
              if (v16)
              {
                int64_t v12 = v8 + 3;
              }
              else
              {
                int64_t v12 = v8 + 4;
                int64_t v14 = v8 + 3;
                if (v8 + 4 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v16 = *(void *)(v15 + 8 * v12);
                if (!v16)
                {
                  int64_t v14 = v13 - 1;
                  int64_t v17 = v8 + 5;
                  while (v13 != v17)
                  {
                    unint64_t v16 = *(void *)(v15 + 8 * v17++);
                    if (v16)
                    {
                      int64_t v12 = v17 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_34:
                  a5[3] = v14;
                  a5[4] = 0;
                  swift_retain();
                  sub_214C4FAC0(a1, a2, v34, a3);
                  return;
                }
              }
            }
          }
LABEL_21:
          uint64_t v10 = (v16 - 1) & v16;
          unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
          int64_t v8 = v12;
        }
        unint64_t v18 = *(void **)(*(void *)(*a5 + 48) + 8 * v11);
        a5[3] = v8;
        a5[4] = v10;
        id v19 = v18;
        uint64_t v20 = sub_214D1A598();
        uint64_t v21 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v36 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_3:
      }
      sub_214B6A264(0, &qword_26784CD00);
      id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v22);
      char v26 = sub_214D1A5A8();

      if ((v26 & 1) == 0)
      {
        uint64_t v27 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v29 + 1)
        {
          unint64_t v29 = i & v27;
          if (((*(void *)(v36 + (((i & v27) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v27)) & 1) == 0) {
            break;
          }
          id v30 = *(id *)(*(void *)(a3 + 48) + 8 * v29);
          char v31 = sub_214D1A5A8();

          if (v31)
          {

            unint64_t v23 = v29 >> 6;
            uint64_t v24 = 1 << v29;
            goto LABEL_30;
          }
        }
        goto LABEL_3;
      }

LABEL_30:
      unint64_t v32 = a1[v23];
      a1[v23] = v32 & ~v24;
    }
    while ((v24 & v32) == 0);
    uint64_t v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_36:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_214C4FAC0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E410);
  uint64_t result = sub_214D1A768();
  uint64_t v9 = result;
  size_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_214D1A598();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_214C4FD20(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_214D1A6E8();

    if (v5)
    {
      uint64_t v6 = sub_214C4FEF8();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_214D1A598();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_214B6A264(0, &qword_26784CD00);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_214D1A5A8();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_214D1A5A8();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_214C4ECF0();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_214C50094(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_214C4FEF8()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_214D1A6B8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_214C4E080(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_214D1A598();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_214B6A264(0, &qword_26784CD00);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_214D1A5A8();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_214C50094(v7);
      if (sub_214D1A5A8())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_214D1A5A8();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_214C50094(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_214D1A688();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_214D1A598();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_214C5023C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s17CoreODIEssentials15GeoCoderAddressV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v76 = a1[10];
  uint64_t v79 = a1[11];
  uint64_t v12 = a1[12];
  uint64_t v13 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v20 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v21 = a2[10];
  uint64_t v23 = a2[11];
  uint64_t v75 = a2[12];
  uint64_t v77 = a2[13];
  uint64_t v78 = a1[13];
  if (!v3)
  {
    if (v13) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v13) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v13) {
    goto LABEL_8;
  }
  uint64_t v70 = a1[4];
  uint64_t v72 = a2[6];
  uint64_t v63 = a2[11];
  uint64_t v64 = a2[10];
  uint64_t v60 = a2[2];
  uint64_t v61 = a1[2];
  uint64_t v24 = a1[12];
  uint64_t v25 = a1[8];
  uint64_t v26 = a1[9];
  uint64_t v62 = a2[8];
  uint64_t v66 = a2[4];
  uint64_t v68 = a2[5];
  uint64_t v27 = a2[7];
  uint64_t v28 = a1[5];
  char v29 = sub_214D1ABC8();
  uint64_t v18 = v68;
  uint64_t v5 = v70;
  uint64_t v7 = v28;
  uint64_t v4 = v61;
  uint64_t v19 = v62;
  uint64_t v17 = v72;
  uint64_t v20 = v27;
  uint64_t v11 = v26;
  uint64_t v9 = v25;
  uint64_t v12 = v24;
  uint64_t v14 = v60;
  uint64_t v23 = v63;
  uint64_t v21 = v64;
  uint64_t v15 = v66;
  char v30 = v29;
  uint64_t result = 0;
  if (v30)
  {
LABEL_8:
    if (v6)
    {
      if (!v16) {
        return 0;
      }
      if (v4 != v14 || v6 != v16)
      {
        uint64_t v71 = v5;
        uint64_t v73 = v17;
        uint64_t v65 = v12;
        uint64_t v67 = v15;
        uint64_t v32 = v9;
        uint64_t v33 = v11;
        uint64_t v34 = v22;
        uint64_t v35 = v19;
        uint64_t v36 = v20;
        uint64_t v37 = v7;
        uint64_t v69 = v18;
        char v38 = sub_214D1ABC8();
        uint64_t v18 = v69;
        uint64_t v5 = v71;
        uint64_t v7 = v37;
        uint64_t v17 = v73;
        uint64_t v20 = v36;
        uint64_t v19 = v35;
        uint64_t v22 = v34;
        uint64_t v11 = v33;
        uint64_t v9 = v32;
        uint64_t v12 = v65;
        uint64_t v15 = v67;
        char v39 = v38;
        uint64_t result = 0;
        if ((v39 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v7)
    {
      if (!v18) {
        return 0;
      }
      if (v5 != v15 || v7 != v18)
      {
        uint64_t v74 = v17;
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        uint64_t v42 = v11;
        uint64_t v43 = v22;
        uint64_t v44 = v19;
        uint64_t v45 = v20;
        char v46 = sub_214D1ABC8();
        uint64_t v17 = v74;
        uint64_t v20 = v45;
        uint64_t v19 = v44;
        uint64_t v22 = v43;
        uint64_t v11 = v42;
        uint64_t v9 = v41;
        uint64_t v12 = v40;
        char v47 = v46;
        uint64_t result = 0;
        if ((v47 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v10)
    {
      if (!v20) {
        return 0;
      }
      if (v8 != v17 || v10 != v20)
      {
        uint64_t v48 = v12;
        uint64_t v49 = v9;
        uint64_t v50 = v11;
        uint64_t v51 = v19;
        char v52 = sub_214D1ABC8();
        uint64_t v19 = v51;
        uint64_t v11 = v50;
        uint64_t v9 = v49;
        uint64_t v12 = v48;
        char v53 = v52;
        uint64_t result = 0;
        if ((v53 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22) {
        return 0;
      }
      if (v9 != v19 || v11 != v22)
      {
        uint64_t v54 = v12;
        char v55 = sub_214D1ABC8();
        uint64_t v12 = v54;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v79)
    {
      if (!v23) {
        return 0;
      }
      if (v76 != v21 || v79 != v23)
      {
        uint64_t v57 = v12;
        char v58 = sub_214D1ABC8();
        uint64_t v12 = v57;
        char v59 = v58;
        uint64_t result = 0;
        if ((v59 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v78)
    {
      if (v77 && (v12 == v75 && v78 == v77 || (sub_214D1ABC8() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v77)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_214C5064C()
{
  unint64_t result = qword_26784E318[0];
  if (!qword_26784E318[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26784E318);
  }
  return result;
}

uint64_t sub_214C506A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_214C506BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B69F08;
  return v9(a1, a2, a3);
}

uint64_t sub_214C507C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_214B6B4A4;
  return v9(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for GeoCoderStats(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GeoCoderStats(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoCoderStats()
{
  return &type metadata for GeoCoderStats;
}

uint64_t destroy for GeoCoderAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GeoCoderAddress(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GeoCoderAddress(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for GeoCoderAddress(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoCoderAddress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoCoderAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoCoderAddress()
{
  return &type metadata for GeoCoderAddress;
}

uint64_t type metadata accessor for GeoCoder()
{
  return self;
}

uint64_t method lookup function for GeoCoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GeoCoder);
}

uint64_t dispatch thunk of GeoCoder.stats.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of GeoCoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t type metadata accessor for GeoCoder.SharedCoordinateMap()
{
  return self;
}

uint64_t type metadata accessor for GeoCoder.GeocodeCompletionState()
{
  return self;
}

uint64_t getEnumTagSinglePayload for GeoCoder.LocationResult(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GeoCoder.LocationResult(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_214C50DF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_214C50E0C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoCoder.LocationResult()
{
  return &type metadata for GeoCoder.LocationResult;
}

uint64_t sub_214C50E3C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_214C50E7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_214B6B4A4;
  return MEMORY[0x270FA2498](sub_214C4A150, 0, 0);
}

uint64_t sub_214C50F2C()
{
  return MEMORY[0x270FA0238](v0, 64, 7);
}

id sub_214C50F3C()
{
  return sub_214C4A3D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_214C50F64()
{
  unint64_t result = qword_26784E378;
  if (!qword_26784E378)
  {
    type metadata accessor for GeoCoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784E378);
  }
  return result;
}

uint64_t sub_214C50FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_214B6B4A4;
  return sub_214C4A5F4(a1, a2, v6, v7, v8);
}

uint64_t sub_214C5107C(uint64_t a1)
{
  return sub_214C3FA30(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_214C51090(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_214B6B4A4;
  return sub_214C41028(a1, v4, v5, v7, v6);
}

uint64_t sub_214C51154(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214C43850(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214C51234()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214C44F88, 0, 0);
}

unint64_t sub_214C512EC()
{
  unint64_t result = qword_26784E3E0;
  if (!qword_26784E3E0)
  {
    sub_214B6A264(255, &qword_26784CD00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784E3E0);
  }
  return result;
}

uint64_t sub_214C51354()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214C513A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_214B6B4A4;
  return sub_214C4AC14(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_214C5146C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214C514A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214B6B4A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26784E3F8 + dword_26784E3F8);
  return v6(a1, v4);
}

uint64_t sub_214C5155C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_214C51594()
{
  return sub_214C4CB2C(*(double *)(v0 + 24));
}

uint64_t sub_214C515A0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_214C515B0()
{
  return sub_214C4CC3C(*(unsigned char *)(v0 + 16), 1, *(double *)(v0 + 24));
}

uint64_t sub_214C515D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_214C515E4()
{
  return sub_214C4CC3C(*(unsigned char *)(v0 + 16), 0, *(double *)(v0 + 24));
}

uint64_t sub_214C51608(uint64_t a1)
{
  return sub_214C46ED0(a1, v1);
}

uint64_t sub_214C51610(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_214D1A948();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_214D1A948();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_214D1A948();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x2166B02A0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for ODNRequestTask();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_214D1A948();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_214D1A988();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_214D1A948();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_214D1A288();
}

uint64_t sub_214C5191C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_214B877EC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4330) - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_214D1A988();
  __break(1u);
  return result;
}

uint64_t sub_214C51B0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_214B6B4A4;
  return sub_214C406A8(a1, v4, v5, v7, v6);
}

uint64_t sub_214C51BD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214C4245C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214C51CB0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214C44E00, 0, 0);
}

uint64_t sub_214C51D6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_214B6B4A4;
  return sub_214C401E8(a1, v4, v5, v7, v6);
}

uint64_t sub_214C51E30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214C419A8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214C51F10()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214C44CA8, 0, 0);
}

uint64_t sub_214C51FCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_214B6B4A4;
  return sub_214C40B68(a1, v4, v5, v7, v6);
}

uint64_t sub_214C52090(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_214B6B4A4;
  return sub_214C42E78(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_214C52170()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214C44EC4, 0, 0);
}

uint64_t objectdestroy_68Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_214C5226C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_214B6A55C;
  return sub_214C414E8(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_72Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_214C52380(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *int64_t v11 = v2;
  v11[1] = sub_214B6A55C;
  return sub_214C44268(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_76Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_214C524B0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_214B6B4A4;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x270FA2498](sub_214C450E0, 0, 0);
}

uint64_t objectdestroy_80Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_214C525C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2[36];
  uint64_t v7 = v2[37];
  __swift_project_boxed_opaque_existential_1(v2 + 33, v6);
  (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(0xD00000000000001ALL, 0x8000000214D370E0, v6, v7);
  if (!v8 || (uint64_t v9 = sub_214C52B4C(), v9 == 5))
  {
    if (v2[31])
    {
      unint64_t v10 = v2[31];
      int v11 = *((unsigned __int8 *)v2 + 304);
      if (*((unsigned char *)v2 + 304)) {
        goto LABEL_5;
      }
    }
    else
    {
      unint64_t v10 = sub_214B7F0DC(MEMORY[0x263F8EE78]);
      int v11 = *((unsigned __int8 *)v2 + 304);
      if (*((unsigned char *)v2 + 304))
      {
LABEL_5:
        if (v11 == 1)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v12 = 3;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v12 = 4;
        }
        goto LABEL_11;
      }
    }
    LOBYTE(v23) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    BOOL v17 = sub_214C2C370((unsigned __int8 *)&v23, a1, a2, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = !v17;
LABEL_11:
    uint64_t v18 = *v3;
    uint64_t v19 = v3[1];
    uint64_t v23 = v18;
    uint64_t v24 = v19;
    swift_bridgeObjectRetain();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v21 = 0xD00000000000001BLL;
    unint64_t v22 = 0x8000000214D37100;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0xD00000000000001BLL;
    unint64_t v15 = 0x8000000214D37100;
    char v16 = 1;
    goto LABEL_12;
  }
  uint64_t v12 = v9;
  uint64_t v13 = v2[1];
  uint64_t v23 = *v2;
  uint64_t v24 = v13;
  unint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_214D1A7A8();
  sub_214D1A108();
  sub_214D1A908();
  sub_214D1A108();
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  char v16 = 14;
LABEL_12:
  LOBYTE(v21) = v16;
  CoreODILogger.debug(_:category:)(v14, v15, &v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_214C5284C(char *a1, char *a2)
{
  return sub_214C1BB8C(*a1, *a2);
}

uint64_t sub_214C52858()
{
  return sub_214D1AD48();
}

uint64_t sub_214C528AC()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C528E4()
{
  return sub_214D1AD48();
}

uint64_t sub_214C52934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C52B4C();
  *a1 = result;
  return result;
}

void sub_214C52964(void *a1@<X8>)
{
  *a1 = *v1 + 48;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_214C52978()
{
  uint64_t result = os_variant_allows_internal_security_policies();
  char v1 = result;
  if (result)
  {
    uint64_t v3 = 0x657261685369646FLL;
    unint64_t v4 = 0xEF726567676F4C64;
    char v2 = 0;
    uint64_t result = CoreODILogger.debug(_:category:)(0xD000000000000017, 0x8000000214D37180, &v2);
  }
  byte_26ACEB960 = v1;
  return result;
}

void sub_214C52A04()
{
  if (qword_26ACE38D8 != -1) {
    swift_once();
  }
  if (byte_26ACEB960 != 1) {
    goto LABEL_8;
  }
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  char v1 = (void *)sub_214D1A028();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2) {
    goto LABEL_8;
  }
  id v3 = v2;
  unint64_t v4 = (void *)sub_214D1A028();
  id v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (!v5)
  {

LABEL_8:
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    goto LABEL_9;
  }
  uint64_t v6 = sub_214D1A038();
  uint64_t v8 = v7;

LABEL_9:
  qword_26ACEBAB8 = v6;
  qword_26ACEBAC0 = v8;
}

uint64_t sub_214C52B4C()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unsigned char *storeEnumTagSinglePayload for Profile.Bucket(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C52C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Profile.Bucket()
{
  return &type metadata for Profile.Bucket;
}

uint64_t destroy for BucketSelector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 224) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 264);
}

uint64_t initializeWithCopy for BucketSelector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v7;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    long long v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    long long v9 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v9;
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v12 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v12;
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v13;
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v14;
    uint64_t v15 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v15;
    uint64_t v16 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v16;
    uint64_t v17 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v17;
    uint64_t v18 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v18;
    uint64_t v19 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v19;
    uint64_t v20 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v20;
    uint64_t v21 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  unint64_t v22 = (_OWORD *)(a1 + 208);
  uint64_t v23 = (_OWORD *)(a2 + 208);
  uint64_t v24 = *(void *)(a2 + 224);
  if (v24 == 1)
  {
    long long v25 = *(_OWORD *)(a2 + 224);
    *unint64_t v22 = *v23;
    *(_OWORD *)(a1 + 224) = v25;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  }
  else
  {
    *(void *)unint64_t v22 = *(void *)v23;
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    uint64_t v26 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = v24;
    *(void *)(a1 + 232) = v26;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  long long v27 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 288) = v27;
  uint64_t v28 = v27;
  char v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  swift_bridgeObjectRetain();
  v29(a1 + 264, a2 + 264, v28);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  return a1;
}

uint64_t assignWithCopy for BucketSelector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 32);
  uint64_t v5 = (long long *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *uint64_t v4 = v7;
      long long v9 = *(_OWORD *)(a2 + 80);
      long long v10 = *(_OWORD *)(a2 + 96);
      long long v11 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 80) = v9;
      *(_OWORD *)(a1 + 96) = v10;
      long long v12 = *(_OWORD *)(a2 + 144);
      long long v13 = *(_OWORD *)(a2 + 160);
      long long v14 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v14;
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = v13;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_214C1442C(a1 + 32);
    long long v16 = *(_OWORD *)(a2 + 48);
    long long v15 = *(_OWORD *)(a2 + 64);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 64) = v15;
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v19 = *(_OWORD *)(a2 + 80);
    long long v18 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 96) = v18;
    long long v20 = *(_OWORD *)(a2 + 192);
    long long v22 = *(_OWORD *)(a2 + 144);
    long long v21 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v20;
    *(_OWORD *)(a1 + 144) = v22;
    *(_OWORD *)(a1 + 160) = v21;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (long long *)(a1 + 208);
  uint64_t v24 = (long long *)(a2 + 208);
  uint64_t v25 = *(void *)(a2 + 224);
  if (*(void *)(a1 + 224) == 1)
  {
    if (v25 == 1)
    {
      long long v26 = *v24;
      long long v27 = *(_OWORD *)(a2 + 224);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *uint64_t v23 = v26;
      *(_OWORD *)(a1 + 224) = v27;
    }
    else
    {
      uint64_t v30 = *(void *)v24;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)uint64_t v23 = v30;
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      uint64_t v31 = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 232) = v31;
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 1)
  {
    sub_214C1445C(a1 + 208);
    char v28 = *(unsigned char *)(a2 + 240);
    long long v29 = *(_OWORD *)(a2 + 224);
    *uint64_t v23 = *v24;
    *(_OWORD *)(a1 + 224) = v29;
    *(unsigned char *)(a1 + 240) = v28;
  }
  else
  {
    uint64_t v32 = *(void *)v24;
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(void *)uint64_t v23 = v32;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v33;
  }
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 264), (uint64_t *)(a2 + 264));
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  return a1;
}

void *__swift_memcpy305_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x131uLL);
}

uint64_t assignWithTake for BucketSelector(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (v6 == 1)
  {
    sub_214C1442C(a1 + 32);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v7;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    long long v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    long long v9 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v9;
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  long long v22 = (void *)(a1 + 208);
  uint64_t v23 = (void *)(a2 + 208);
  if (*(void *)(a1 + 224) != 1)
  {
    uint64_t v24 = *(void *)(a2 + 224);
    if (v24 != 1)
    {
      *long long v22 = *v23;
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = v24;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      goto LABEL_11;
    }
    sub_214C1445C(a1 + 208);
  }
  long long v25 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 224) = v25;
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
LABEL_11:
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  __swift_destroy_boxed_opaque_existential_1(a1 + 264);
  long long v26 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v26;
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for BucketSelector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 305)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BucketSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 304) = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 305) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 305) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BucketSelector()
{
  return &type metadata for BucketSelector;
}

unint64_t sub_214C536F0()
{
  unint64_t result = qword_26784E520;
  if (!qword_26784E520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E520);
  }
  return result;
}

ValueMetadata *type metadata accessor for Profile()
{
  return &type metadata for Profile;
}

unsigned char *storeEnumTagSinglePayload for Profile.Population(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C53820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Profile.Population()
{
  return &type metadata for Profile.Population;
}

unint64_t sub_214C5385C()
{
  unint64_t result = qword_26784E528;
  if (!qword_26784E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26784E528);
  }
  return result;
}

uint64_t *sub_214C538B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_214D19AA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    uint64_t v10 = a3[6];
    long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    uint64_t v12 = a3[7];
    long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_214C53A84(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_214D19AA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C53B20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_214D19AA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  long long v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  uint64_t v11 = a3[7];
  long long v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_214C53CA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_214D19AA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  uint64_t v7 = a3[8];
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C53D70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_214D19AA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_214C53E38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_214D19AA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  __swift_destroy_boxed_opaque_existential_1(a1 + v11);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_214C53F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_214C53F4C);
}

uint64_t sub_214C53F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_214D19AA8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_214C54010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_214C54024);
}

uint64_t sub_214C54024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_214D19AA8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RavioliRequestFactory()
{
  uint64_t result = qword_26ACE5450;
  if (!qword_26ACE5450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_214C54130()
{
  uint64_t result = sub_214D19AA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_214C541D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_214D19738();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_214D19AA8();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  unsigned __int16 v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_214C54304, 0, 0);
}

uint64_t sub_214C54304()
{
  uint64_t v1 = v0[5];
  (*(void (**)(void, uint64_t, void))(v0[10] + 16))(v0[12], v1, v0[9]);
  uint64_t v2 = type metadata accessor for RavioliRequestFactory();
  v0[13] = v2;
  if (*(void *)(v1 + *(int *)(v2 + 32) + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4430);
    sub_214D197D8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_214D1C1E0;
    sub_214D197C8();
    sub_214D19A58();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v0[5];
  sub_214D19A38();
  sub_214D196F8();
  sub_214D19718();
  uint64_t v4 = (void *)(v3 + *(int *)(v2 + 20));
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_214C54590;
  return v9(v5, v6);
}

uint64_t sub_214C54590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a2;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C54690, 0, 0);
}

uint64_t sub_214C54690()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[5];
  sub_214D19718();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)(v2 + *(int *)(v1 + 24));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_214C547E0;
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[2];
  return v10(v8, v7, v4, v5);
}

uint64_t sub_214C547E0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_214C549B4;
  }
  else {
    uint64_t v2 = sub_214C548F4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_214C548F4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C549B4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C54A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_214C54A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_214C54AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_214C54AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t sub_214C54B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_214C54B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t sub_214C54B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t destroy for ODNAssessmentConfiguration(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_214B58A4C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = (_OWORD *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    uint64_t v6 = *(void *)v4;
    sub_214B6A3A0(v6, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v5;
  }
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_214B6A3A0(*v4, *(void *)(a2 + 24));
      uint64_t v8 = *(void *)(a1 + 16);
      unint64_t v9 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v5;
      sub_214B58A4C(v8, v9);
      goto LABEL_8;
    }
    sub_214B6B27C(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_214B6A3A0(*v4, *(void *)(a2 + 24));
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
LABEL_8:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  if (v5 >> 60 != 15)
  {
    unint64_t v6 = *(void *)(a2 + 24);
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v4;
      *(void *)(a1 + 24) = v6;
      sub_214B58A4C(v7, v5);
      goto LABEL_6;
    }
    sub_214B6B27C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentConfiguration()
{
  return &type metadata for ODNAssessmentConfiguration;
}

unsigned char *storeEnumTagSinglePayload for ODNAssessmentConfiguration.ODNAssessmentMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C54F6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentConfiguration.ODNAssessmentMode()
{
  return &type metadata for ODNAssessmentConfiguration.ODNAssessmentMode;
}

unint64_t sub_214C54FA8()
{
  unint64_t result = qword_26784E538;
  if (!qword_26784E538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E538);
  }
  return result;
}

void *sub_214C55000()
{
  type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler();
  swift_allocObject();
  unint64_t result = sub_214C55040();
  qword_26ACE41B0 = (uint64_t)result;
  return result;
}

void *sub_214C55040()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08958]), sel_init);
  uint64_t v2 = MEMORY[0x263F8EE80];
  v0[2] = v1;
  v0[3] = v2;
  v0[4] = 0;
  uint64_t v5[4] = sub_214C56618;
  unsigned int v6 = v0;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_214C55300;
  v5[3] = &block_descriptor_15;
  int v3 = _Block_copy(v5);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.distnoted.matching", 0, v3);
  _Block_release(v3);
  return v0;
}

id sub_214C5512C(uint64_t a1)
{
  int v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = MEMORY[0x263F8EE80];
  id result = objc_msgSend(v3, sel_unlock);
  int64_t v6 = 0;
  uint64_t v7 = v4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    if (v17)
    {
      uint64_t v19 = a1;
      uint64_t v18 = *(void *)(*(void *)(v17 + 64) + 40);
      swift_unknownObjectRetain();
      sub_214C56634((uint64_t)&v19, v18);
      id result = (id)swift_continuation_resume();
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v11) {
    return (id)swift_release();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v6 = v14 + 1;
  if (v14 + 1 >= v11) {
    return (id)swift_release();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v6 = v14 + 2;
  if (v14 + 2 >= v11) {
    return (id)swift_release();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v6 = v14 + 3;
  if (v14 + 3 >= v11) {
    return (id)swift_release();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v11) {
    return (id)swift_release();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return (id)swift_release();
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_214C55300(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

id sub_214C55360(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  int64_t v6 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 24);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_214B883E4(a2), (v9 & 1) != 0) && !*(void *)(*(void *)(v7 + 56) + 8 * v8))
  {
    swift_endAccess();
    swift_beginAccess();
    sub_214C0EC98(a2);
    swift_endAccess();
    objc_msgSend(v5, sel_unlock);
    v13[0] = 0;
    sub_214C56634((uint64_t)v13, *(void *)(*(void *)(a1 + 64) + 40));
    return (id)swift_continuation_resume();
  }
  else
  {
    swift_endAccess();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v6;
    *int64_t v6 = 0x8000000000000000;
    sub_214B8ED5C(a1, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v6 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return objc_msgSend(v5, sel_unlock);
  }
}

id sub_214C554CC(uint64_t a1)
{
  int v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  uint64_t v4 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  uint64_t v5 = sub_214C0EC98(a1);
  swift_endAccess();
  if (v5 == 1)
  {
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_214B8ED5C(0, a1, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v8;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return objc_msgSend(v3, sel_unlock);
  }
  else
  {
    id result = objc_msgSend(v3, sel_unlock);
    if (v5)
    {
      v9[0] = 0;
      sub_214C56634((uint64_t)v9, *(void *)(*(void *)(v5 + 64) + 40));
      return (id)swift_continuation_resume();
    }
  }
  return result;
}

uint64_t sub_214C555F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DistributedNotificationsAsyncSequence.Iterator.next()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_214C55654, 0, 0);
}

uint64_t sub_214C55654()
{
  if (sub_214D1A398())
  {
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1(0);
  }
  else
  {
    uint64_t v3 = **(void **)(v0 + 24);
    *(void *)(v0 + 32) = v3;
    uint64_t v4 = *(void **)(v3 + 16);
    id v5 = objc_msgSend(v4, sel_lock);
    uint64_t v13 = *(void *)(v3 + 32);
    if (__OFADD__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v3 + 32) = v13 + 1;
      objc_msgSend(v4, sel_unlock);
      uint64_t v14 = swift_task_alloc();
      *(void *)(v0 + 40) = v14;
      *(void *)(v14 + 16) = v3;
      *(void *)(v14 + 24) = v13;
      uint64_t v15 = swift_task_alloc();
      *(void *)(v0 + 48) = v15;
      *(void *)(v15 + 16) = v3;
      *(void *)(v15 + 24) = v13;
      swift_retain();
      int64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 56) = v16;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4360);
      void *v16 = v0;
      v16[1] = sub_214C55804;
      int64_t v6 = &unk_26784E558;
      uint64_t v8 = sub_214C55C0C;
      id v5 = (id)(v0 + 16);
      uint64_t v7 = v14;
      uint64_t v9 = v15;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
    return MEMORY[0x270FA2338](v5, v6, v7, v8, v9, v10, v11, v12);
  }
}

uint64_t sub_214C55804()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C5595C, 0, 0);
}

uint64_t sub_214C5595C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_214C55974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_214C55998, 0, 0);
}

uint64_t sub_214C55998()
{
  uint64_t v1 = v0[13];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_214C55A40;
  uint64_t v2 = swift_continuation_init();
  sub_214C55360(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_214C55A40()
{
  uint64_t v3 = *v0;
  **(void **)(*v0 + 88) = *(void *)(*v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_214C55B50(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  int64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *int64_t v6 = v2;
  v6[1] = sub_214B6B4A4;
  v6[12] = v5;
  v6[13] = v4;
  v6[11] = a1;
  return MEMORY[0x270FA2498](sub_214C55998, 0, 0);
}

id sub_214C55C0C()
{
  return sub_214C554CC(*(void *)(v0 + 24));
}

uint64_t sub_214C55C34(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_214C55CE0;
  v3[3] = v1;
  return MEMORY[0x270FA2498](sub_214C55654, 0, 0);
}

uint64_t sub_214C55CE0(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_214C55DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26784E580 + dword_26784E580);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_214C55EBC;
  return v8(a2, a3, v3 + 16);
}

uint64_t sub_214C55EBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 24) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_214C55FE0()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_214C56000, 0, 0);
}

uint64_t sub_214C56000()
{
  if (sub_214D1A398())
  {
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1(0);
  }
  else
  {
    uint64_t v3 = **(void **)(v0 + 24);
    *(void *)(v0 + 32) = v3;
    uint64_t v4 = *(void **)(v3 + 16);
    id v5 = objc_msgSend(v4, sel_lock);
    uint64_t v13 = *(void *)(v3 + 32);
    if (__OFADD__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      *(void *)(v3 + 32) = v13 + 1;
      objc_msgSend(v4, sel_unlock);
      uint64_t v14 = swift_task_alloc();
      *(void *)(v0 + 40) = v14;
      *(void *)(v14 + 16) = v3;
      *(void *)(v14 + 24) = v13;
      uint64_t v15 = swift_task_alloc();
      *(void *)(v0 + 48) = v15;
      *(void *)(v15 + 16) = v3;
      *(void *)(v15 + 24) = v13;
      swift_retain();
      int64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 56) = v16;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4360);
      void *v16 = v0;
      v16[1] = sub_214C561B4;
      uint64_t v6 = &unk_26784E588;
      uint64_t v8 = sub_214C5669C;
      id v5 = (id)(v0 + 16);
      uint64_t v7 = v14;
      uint64_t v9 = v15;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
    return MEMORY[0x270FA2338](v5, v6, v7, v8, v9, v10, v11, v12);
  }
}

uint64_t sub_214C561B4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_214C5630C, 0, 0);
}

uint64_t sub_214C5630C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t DistributedNotificationsAsyncSequence.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  if (qword_26ACE41B8 != -1) {
    swift_once();
  }
  *a1 = qword_26ACE41B0;
  return swift_retain();
}

uint64_t sub_214C56394()
{
  return MEMORY[0x263F8E658];
}

unint64_t sub_214C563A4()
{
  unint64_t result = qword_26ACE41C8;
  if (!qword_26ACE41C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE41C8);
  }
  return result;
}

uint64_t sub_214C563F8@<X0>(void *a1@<X8>)
{
  if (qword_26ACE41B8 != -1) {
    swift_once();
  }
  *a1 = qword_26ACE41B0;
  return swift_retain();
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence()
{
  return &type metadata for DistributedNotificationsAsyncSequence;
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence.Iterator()
{
  return &type metadata for DistributedNotificationsAsyncSequence.Iterator;
}

uint64_t type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DistributedNotificationsAsyncSequence.Iterator.Handler.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DistributedNotificationsAsyncSequence.Iterator.Handler.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler.State()
{
  return &type metadata for DistributedNotificationsAsyncSequence.Iterator.Handler.State;
}

uint64_t sub_214C5655C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_214B6A55C;
  v6[12] = v5;
  v6[13] = v4;
  v6[11] = a1;
  return MEMORY[0x270FA2498](sub_214C55998, 0, 0);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_214C56634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t ODIAnalyticsEvent.name.getter()
{
  if (*v0 < 0) {
    return 0xD000000000000049;
  }
  else {
    return 0xD00000000000003ELL;
  }
}

unint64_t ODIAnalyticsEvent.fields.getter()
{
  if ((*v0 & 0x8000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000214D32C50;
    *(void *)(inited + 48) = sub_214D1A428();
    *(void *)(inited + 56) = 0x646F43726F727265;
    *(void *)(inited + 64) = 0xE900000000000065;
    *(void *)(inited + 72) = sub_214D1A458();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784D600);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_214D1C1E0;
    *(void *)(inited + 32) = 0xD000000000000012;
    *(void *)(inited + 40) = 0x8000000214D32C50;
    *(void *)(inited + 48) = sub_214D1A428();
  }
  return sub_214B7F6B8(inited);
}

unint64_t sub_214C567EC()
{
  if (*v0 < 0) {
    return 0xD000000000000049;
  }
  else {
    return 0xD00000000000003ELL;
  }
}

uint64_t dispatch thunk of Event.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Event.fields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for ODIAnalyticsEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 31;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIAnalyticsEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)unint64_t result = (unint64_t)(v3 >> 1) << 32;
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_214C568EC(void *a1)
{
  return *a1 >> 63;
}

void *sub_214C568F8(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t sub_214C56908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2 << 31;
  return result;
}

ValueMetadata *type metadata accessor for ODIAnalyticsEvent()
{
  return &type metadata for ODIAnalyticsEvent;
}

uint64_t sub_214C56924()
{
  return sub_214D1AD48();
}

uint64_t sub_214C56A50()
{
  return sub_214D1AD48();
}

uint64_t sub_214C56B48()
{
  return sub_214D1AD48();
}

uint64_t sub_214C56BF4()
{
  return sub_214D1AD48();
}

uint64_t sub_214C56D10()
{
  return sub_214D1AD48();
}

uint64_t sub_214C56E14()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C56EA8()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C56FB0()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C57094()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C571D8()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C572F0()
{
  return sub_214D1AD48();
}

uint64_t sub_214C57398()
{
  return sub_214D1AD48();
}

uint64_t sub_214C574B0()
{
  return sub_214D1AD48();
}

uint64_t sub_214C575B0()
{
  return sub_214D1AD48();
}

uint64_t sub_214C57704()
{
  return sub_214D1AD48();
}

uint64_t sub_214C5782C()
{
  return sub_214D1AD48();
}

uint64_t sub_214C57920()
{
  return sub_214D1AD48();
}

uint64_t DsidType.rawValue.getter()
{
  uint64_t result = 0x64756F6C4369;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73656E755469;
      break;
    case 2:
      uint64_t result = 1684628325;
      break;
    case 3:
      uint64_t result = 1869903201;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C57AD0()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  char v27 = *(unsigned char *)(v0 + 56);
  int v6 = *(unsigned __int8 *)(v0 + 57);
  swift_bridgeObjectRetain();
  uint64_t v7 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8E388(v1, v2, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v3 = ArmandDeviceDataFieldName.rawValue.getter();
    uint64_t v4 = v9;
  }
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8E388(v3, v4, 0x6D614E646C656966, 0xE900000000000065, v10);
  swift_bridgeObjectRelease();
  unint64_t v11 = ArmandDataSource.rawValue.getter();
  uint64_t v13 = v12;
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8E388(v11, v13, 0x656372756F73, 0xE600000000000000, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_214D1AB78();
  uint64_t v17 = v16;
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8E388(v15, v17, 0x797469726F697270, 0xE800000000000000, v18);
  swift_bridgeObjectRelease();
  if (v6) {
    uint64_t v19 = 1702195828;
  }
  else {
    uint64_t v19 = 0x65736C6166;
  }
  if (v6) {
    uint64_t v20 = 0xE400000000000000;
  }
  else {
    uint64_t v20 = 0xE500000000000000;
  }
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_214B8E388(v19, v20, 0x67656C6976697270, 0xEA00000000006465, v21);
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    uint64_t v22 = sub_214D1AB78();
    uint64_t v24 = v23;
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_214B8E388(v22, v24, 0x4D74756F656D6974, 0xEC000000696C6C69, v25);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t DeviceDataField.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = sub_214C63384(0, a1);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v7 = v5;
  uint64_t v8 = v6;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_214C63384(1, a1);
  unint64_t v11 = v10;
  v12._uint64_t countAndFlagsBits = sub_214C63384(2, a1);
  ArmandDataSource.init(rawValue:)(v12);
  if (LOBYTE(v57[0]) == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v57[0]) = -102;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000042, 0x8000000214D37280, 0, (unsigned __int8 *)v57, 0, 0, 0xD00000000000005ALL, 0x8000000214D372D0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 591);
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  int v59 = LOBYTE(v57[0]);
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = v9;
  v14._object = v11;
  ArmandDeviceDataFieldName.init(rawValue:)(v14);
  if (v9 == 1145652037 && v11 == (void *)0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = 0;
    char v58 = 0;
    unint64_t v9 = 4;
  }
  else if (LOBYTE(v57[0]) == 18)
  {
    char v58 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = 0;
    char v58 = 0;
    unint64_t v9 = LOBYTE(v57[0]);
  }
  unint64_t result = sub_214C63384(3, a1);
  uint64_t v16 = v15;
  uint64_t v17 = HIBYTE(v15) & 0xF;
  uint64_t v18 = result & 0xFFFFFFFFFFFFLL;
  if ((v16 & 0x2000000000000000) != 0) {
    uint64_t v19 = v17;
  }
  else {
    uint64_t v19 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  uint64_t v56 = v9;
  if ((v16 & 0x1000000000000000) != 0)
  {
    uint64_t v21 = (uint64_t)sub_214C6639C(result, v16, 10);
    char v23 = v53;
    goto LABEL_56;
  }
  if ((v16 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v20 = (unsigned __int8 *)sub_214D1A818();
    }
    uint64_t v21 = (uint64_t)sub_214C665D4(v20, v18, 10);
    char v23 = v22 & 1;
    goto LABEL_56;
  }
  v57[0] = result;
  v57[1] = v16 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v17) {
      goto LABEL_86;
    }
    if (v17 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v21 = (BYTE1(result) - 48);
    if (v17 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v21 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v24 = v17 - 3;
      if (v24)
      {
        char v25 = (unsigned __int8 *)v57 + 3;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_43;
          }
          uint64_t v27 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
            goto LABEL_43;
          }
          uint64_t v21 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_43;
          }
          char v23 = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_55:
    char v23 = 0;
    goto LABEL_56;
  }
  if (result != 45)
  {
    if (!v17 || (result - 48) > 9u) {
      goto LABEL_43;
    }
    uint64_t v21 = (result - 48);
    if (v17 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_43;
      }
      uint64_t v21 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v28 = v17 - 2;
      if (v28)
      {
        long long v29 = (unsigned __int8 *)v57 + 2;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            goto LABEL_43;
          }
          uint64_t v31 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
            goto LABEL_43;
          }
          uint64_t v21 = v31 + v30;
          if (__OFADD__(v31, v30)) {
            goto LABEL_43;
          }
          char v23 = 0;
          ++v29;
          if (!--v28) {
            goto LABEL_56;
          }
        }
      }
    }
    goto LABEL_55;
  }
  if (v17)
  {
    if (v17 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v17 == 2)
      {
        char v23 = 0;
        uint64_t v21 = -(uint64_t)(BYTE1(result) - 48);
LABEL_56:
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          unint64_t v33 = sub_214C63384(5, a1);
          unint64_t v38 = v33;
          uint64_t v39 = v34;
          uint64_t v55 = v21;
          if (v33 == 1702195828 && v34 == 0xE400000000000000 || (sub_214D1ABC8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            char v40 = 1;
            goto LABEL_66;
          }
          if (v38 == 0x65736C6166 && v39 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            char v40 = 0;
            goto LABEL_66;
          }
          char v49 = sub_214D1ABC8();
          swift_bridgeObjectRelease();
          char v40 = 0;
          if (v49)
          {
LABEL_66:
            if (*(void *)(a1 + 16)
              && (uint64_t v41 = sub_214B87FEC(0x4D74756F656D6974, 0xEC000000696C6C69), (v42 & 1) != 0))
            {
              uint64_t v43 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v41);
              uint64_t v44 = *v43;
              unint64_t v45 = v43[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v54 = sub_214C585B8(v44, v45);
              char v47 = v46 & 1;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v54 = 0;
              char v47 = 1;
            }
            char v48 = v58;
            swift_bridgeObjectRetain();
            sub_214B6F6CC(v56, (uint64_t)v11, v48);
            swift_bridgeObjectRelease();
            *(void *)a2 = v7;
            *(void *)(a2 + 8) = v8;
            *(void *)(a2 + 16) = v56;
            *(void *)(a2 + 24) = v11;
            *(unsigned char *)(a2 + 32) = v48;
            *(unsigned char *)(a2 + 33) = v59;
            *(void *)(a2 + 40) = v55;
            *(void *)(a2 + 48) = v54;
            *(unsigned char *)(a2 + 56) = v47;
            *(unsigned char *)(a2 + 57) = v40;
            swift_bridgeObjectRelease();
            uint64_t v36 = v56;
            uint64_t v37 = (uint64_t)v11;
            char v35 = v48;
            return sub_214B6F6DC(v36, v37, v35);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v57[0]) = -102;
          ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000042, 0x8000000214D37380, 0, (unsigned __int8 *)v57, 0, 0, 0xD00000000000005ALL, 0x8000000214D372D0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 612);
          swift_willThrow();
          unint64_t v9 = v56;
LABEL_60:
          swift_bridgeObjectRelease();
          char v35 = v58;
          uint64_t v36 = v9;
          uint64_t v37 = (uint64_t)v11;
          return sub_214B6F6DC(v36, v37, v35);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v9 = v56;
LABEL_59:
        LOBYTE(v57[0]) = -102;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000040, 0x8000000214D37330, 0, (unsigned __int8 *)v57, 0, 0, 0xD00000000000005ALL, 0x8000000214D372D0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 607);
        swift_willThrow();
        goto LABEL_60;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v21 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v32 = v17 - 3;
        if (!v32) {
          goto LABEL_55;
        }
        uint64_t v50 = (unsigned __int8 *)v57 + 3;
        while (1)
        {
          unsigned int v51 = *v50 - 48;
          if (v51 > 9) {
            break;
          }
          uint64_t v52 = 10 * v21;
          if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
            break;
          }
          uint64_t v21 = v52 - v51;
          if (__OFSUB__(v52, v51)) {
            break;
          }
          char v23 = 0;
          ++v50;
          if (!--v32) {
            goto LABEL_56;
          }
        }
      }
    }
LABEL_43:
    uint64_t v21 = 0;
    char v23 = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t sub_214C585B8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_214D1A818();
      }
      uint64_t v7 = (uint64_t)sub_214C665D4(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        unint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_214C6639C(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_214C58808@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v12 = *a7;
  uint64_t v13 = (int *)type metadata accessor for PregeneratedAssessment();
  uint64_t v14 = sub_214BFD2E8();
  char v31 = sub_214BA4DF0(*(uint64_t *)((char *)a1 + v13[7]), *(uint64_t *)((char *)a1 + v13[7] + 8));
  swift_bridgeObjectRelease();
  uint64_t v15 = a1[1];
  unsigned int v16 = (uint64_t *)((char *)a1 + v13[19]);
  uint64_t v17 = v16[1];
  uint64_t v29 = *v16;
  uint64_t v30 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    sub_214C229B4(v14);
    swift_release();
  }
  uint64_t v18 = *(uint64_t *)((char *)a1 + v13[13]);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = v20;
    uint64_t v27 = a5;
    char v28 = v12;
    if (qword_26ACE44D0 == -1) {
      goto LABEL_5;
    }
  }
  swift_once();
LABEL_5:
  uint64_t v22 = qword_26ACEBAB8;
  uint64_t v21 = qword_26ACEBAC0;
  swift_bridgeObjectRetain();
  sub_214D19C18();
  double v24 = v23;
  uint64_t result = sub_214C22974(v14);
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v24 < 9.22337204e18)
  {
    uint64_t result = sub_214BD4880((uint64_t)a1);
    *(void *)a8 = v30;
    *(void *)(a8 + 8) = v15;
    *(void *)(a8 + 16) = v29;
    *(void *)(a8 + 24) = v17;
    *(void *)(a8 + 32) = a2;
    *(void *)(a8 + 40) = a3;
    *(void *)(a8 + 48) = a4;
    *(void *)(a8 + 56) = v27;
    *(void *)(a8 + 64) = v14;
    *(void *)(a8 + 72) = v26;
    *(unsigned char *)(a8 + 80) = 0;
    *(void *)(a8 + 88) = a6;
    *(void *)(a8 + 96) = v22;
    *(void *)(a8 + 104) = v21;
    *(unsigned char *)(a8 + 112) = v28;
    *(void *)(a8 + 120) = (uint64_t)v24;
    *(unsigned char *)(a8 + 128) = v31 & 1;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

void __swiftcall TSID.init(tsid:session_id:ts_nonce:)(CoreODIEssentials::TSID *__return_ptr retstr, Swift::String tsid, Swift::String session_id, Swift::String_optional ts_nonce)
{
  retstr->tsid = tsid;
  retstr->session_id = session_id;
  retstr->ts_nonce = ts_nonce;
}

unint64_t sub_214C58A34(void *a1, unsigned int a2)
{
  unint64_t v5 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD68();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_214D1ABE8();
    unsigned int v7 = sub_214C6E8CC();
    if (v7 == 5) {
      unint64_t v5 = a2;
    }
    else {
      unint64_t v5 = v7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v5;
}

uint64_t sub_214C58B2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4430);
  sub_214D197D8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_214D24200;
  sub_214D197C8();
  sub_214D197C8();
  sub_214D197C8();
  sub_214D197C8();
  sub_214D197C8();
  sub_214D197C8();
  sub_214D197C8();
  return v0;
}

uint64_t sub_214C58CE8()
{
  if (*v0) {
    return 0x4974736575716572;
  }
  else {
    return 0x61737265766E6F63;
  }
}

uint64_t sub_214C58D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6C214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C58D5C(uint64_t a1)
{
  unint64_t v2 = sub_214C6F790();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C58D98(uint64_t a1)
{
  unint64_t v2 = sub_214C6F790();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C58DD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_214C58E14(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E840);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  unsigned int v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F790();
  sub_214D1AD88();
  v9[15] = 0;
  swift_bridgeObjectRetain();
  sub_214D1AAF8();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_214D1AAF8();
  }
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C58FC4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E6F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F790();
  sub_214D1AD78();
  if (v2)
  {
    type metadata accessor for RequestHeader();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v17 = 0;
    *(void *)(v1 + 16) = sub_214D1AA28();
    *(void *)(v1 + 24) = v10;
    char v16 = 1;
    uint64_t v12 = sub_214D1AA28();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(void *)(v3 + 32) = v12;
    *(void *)(v3 + 40) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_214C591A4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E740);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F8E0();
  sub_214D1AD88();
  v9[15] = 0;
  sub_214D1AAA8();
  if (!v1)
  {
    v9[14] = 1;
    sub_214D1AAF8();
    v9[13] = 2;
    sub_214D1AAF8();
    v9[12] = 3;
    sub_214D1AAF8();
    _OWORD v9[11] = 4;
    sub_214D1AAA8();
    v9[10] = 5;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214C593A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5A828(a1, (void (*)(void))type metadata accessor for RequestHeader, (uint64_t (*)(uint64_t))sub_214C58FC4, a2);
}

uint64_t sub_214C593E8(void *a1)
{
  return sub_214C58E14(a1);
}

uint64_t sub_214C5940C()
{
  uint64_t result = 0x61737265766E6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4974736575716572;
      break;
    case 2:
      uint64_t result = 0x65736E6F70736572;
      break;
    case 3:
      uint64_t result = 0x6F43737574617473;
      break;
    case 4:
      uint64_t result = 0x7574617453627573;
      break;
    case 5:
      uint64_t result = 0x654D737574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C59508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6C338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C59530(uint64_t a1)
{
  unint64_t v2 = sub_214C6F8E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5956C(uint64_t a1)
{
  unint64_t v2 = sub_214C6F8E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_214C595A8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_214C6C644(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_214C595F4(void *a1)
{
  return sub_214C591A4(a1);
}

uint64_t sub_214C5960C(char *a1, char *a2)
{
  return sub_214C1CE80(*a1, *a2);
}

uint64_t sub_214C59618()
{
  return sub_214D1AD48();
}

uint64_t sub_214C596B0()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C59734()
{
  return sub_214D1AD48();
}

uint64_t sub_214C597C8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_214C59828(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65736E6F70736572;
  if (*v1) {
    uint64_t v2 = 0x45656D69746E7572;
  }
  unint64_t v3 = 0xEE00726564616548;
  if (*v1) {
    unint64_t v3 = 0xEC000000726F7272;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_214C5987C()
{
  if (*v0) {
    return 0x45656D69746E7572;
  }
  else {
    return 0x65736E6F70736572;
  }
}

uint64_t sub_214C598CC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_214C59930(uint64_t a1)
{
  unint64_t v2 = sub_214C6F7E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5996C(uint64_t a1)
{
  unint64_t v2 = sub_214C6F7E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C599A8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E708);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F7E4();
  sub_214D1AD78();
  if (v2)
  {
    type metadata accessor for GenericResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v24 = 0;
    sub_214C6F838();
    sub_214D1AA68();
    long long v11 = v19[1];
    long long v10 = v19[2];
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    *(_OWORD *)(v1 + 16) = v19[0];
    *(_OWORD *)(v1 + 32) = v11;
    *(_OWORD *)(v1 + 48) = v10;
    *(void *)(v1 + 64) = v12;
    *(void *)(v1 + 72) = v13;
    long long v14 = v23;
    *(_OWORD *)(v1 + 80) = v22;
    *(_OWORD *)(v1 + 96) = v14;
    LOBYTE(v19[0]) = 1;
    uint64_t v16 = sub_214D1A9D8();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(void *)(v3 + 112) = v16;
    *(void *)(v3 + 120) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_214C59BFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_214C59C90(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F7E4();
  sub_214D1AD88();
  long long v11 = *(_OWORD *)(v3 + 32);
  long long v10 = *(_OWORD *)(v3 + 48);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  long long v17 = *(_OWORD *)(v3 + 16);
  long long v18 = v11;
  long long v19 = v10;
  uint64_t v20 = v12;
  uint64_t v21 = v13;
  long long v14 = *(_OWORD *)(v3 + 96);
  long long v22 = *(_OWORD *)(v3 + 80);
  long long v23 = v14;
  v16[15] = 0;
  sub_214C6FE6C();
  sub_214D1AB38();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_214C59E20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5A828(a1, (void (*)(void))type metadata accessor for GenericResponse, (uint64_t (*)(uint64_t))sub_214C599A8, a2);
}

uint64_t sub_214C59E64(void *a1)
{
  return sub_214C59C90(a1);
}

uint64_t sub_214C59E88()
{
  return sub_214C5A8D8();
}

uint64_t sub_214C59EAC()
{
  return sub_214D1A0D8();
}

uint64_t sub_214C59ED0()
{
  return sub_214C5A960();
}

uint64_t sub_214C59EF4@<X0>(BOOL *a1@<X8>)
{
  return sub_214C5A9B8(a1);
}

void sub_214C59F00(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_214C59F28()
{
  return 0x4874736575716572;
}

uint64_t sub_214C59F4C@<X0>(BOOL *a1@<X8>)
{
  return sub_214C5AA50(a1);
}

void sub_214C59F58(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_214C59F64(uint64_t a1)
{
  unint64_t v2 = sub_214C6FDD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C59FA0(uint64_t a1)
{
  unint64_t v2 = sub_214C6FDD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_214C59FDC(uint64_t a1)
{
}

uint64_t sub_214C5A03C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E818);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6FDD4();
  sub_214D1AD88();
  v10[1] = *(void *)(v2 + 16);
  type metadata accessor for RequestHeader();
  sub_214C6FE28(&qword_26784E828, (void (*)(void))type metadata accessor for RequestHeader);
  sub_214D1AB38();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_214C5A1B8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_214C5A1F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 96))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_214C5A22C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 104))();
}

uint64_t sub_214C5A270()
{
  uint64_t v1 = 0x6449656369766564;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E49746E65696C63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7A69726F68747561;
  }
}

uint64_t sub_214C5A2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6CAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5A304(uint64_t a1)
{
  unint64_t v2 = sub_214C6F88C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5A340(uint64_t a1)
{
  unint64_t v2 = sub_214C6F88C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5A37C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_214C5A3C4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E810);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F88C();
  sub_214D1AD88();
  v9[15] = 0;
  swift_bridgeObjectRetain();
  sub_214D1AAF8();
  if (v1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_214D1AAF8();
    swift_bridgeObjectRelease();
    v9[13] = 2;
    swift_bridgeObjectRetain();
    sub_214D1AAF8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return swift_bridgeObjectRelease();
}

void *sub_214C5A5B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E720);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F88C();
  sub_214D1AD78();
  if (v2)
  {
    type metadata accessor for AppleCredentials();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v19 = 0;
    v1[2] = sub_214D1AA28();
    v1[3] = v10;
    char v18 = 1;
    v1[4] = sub_214D1AA28();
    v1[5] = v11;
    char v17 = 2;
    uint64_t v13 = sub_214D1AA28();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v3[6] = v13;
    v3[7] = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_214C5A7E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5A828(a1, (void (*)(void))type metadata accessor for AppleCredentials, (uint64_t (*)(uint64_t))sub_214C5A5B4, a2);
}

uint64_t sub_214C5A828@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  a2();
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_214C5A898(void *a1)
{
  return sub_214C5A3C4(a1);
}

uint64_t sub_214C5A8BC()
{
  return sub_214C5A8D8();
}

uint64_t sub_214C5A8D8()
{
  return sub_214D1AD48();
}

uint64_t sub_214C5A928()
{
  return sub_214D1A0D8();
}

uint64_t sub_214C5A944()
{
  return sub_214C5A960();
}

uint64_t sub_214C5A960()
{
  return sub_214D1AD48();
}

uint64_t sub_214C5A9AC@<X0>(BOOL *a1@<X8>)
{
  return sub_214C5A9B8(a1);
}

uint64_t sub_214C5A9B8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_214C5AA08(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000214D2E250;
}

unint64_t sub_214C5AA28()
{
  return 0xD000000000000010;
}

uint64_t sub_214C5AA44@<X0>(BOOL *a1@<X8>)
{
  return sub_214C5AA50(a1);
}

uint64_t sub_214C5AA50@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_214C5AAA4(uint64_t a1)
{
  unint64_t v2 = sub_214C6FCDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5AAE0(uint64_t a1)
{
  unint64_t v2 = sub_214C6FCDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_214C5AB1C(uint64_t a1)
{
  uint64_t inited = swift_initStackObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(inited + 24) = 0;
  swift_release();
  sub_214D1A928();
  __break(1u);
}

uint64_t sub_214C5ABA4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7E8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + 24)) {
    return sub_214C5A03C(a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6FCDC();
  sub_214D1AD88();
  v10[1] = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7F8);
  sub_214C6FD30();
  sub_214D1AB38();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v2) {
    return sub_214C5A03C(a1);
  }
  return result;
}

uint64_t sub_214C5AD1C()
{
  return swift_release();
}

uint64_t sub_214C5AD24()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_214C5AD64()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_214C5ADA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6CC58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5ADCC(uint64_t a1)
{
  unint64_t v2 = sub_214C66484();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5AE08(uint64_t a1)
{
  unint64_t v2 = sub_214C66484();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrainingSignalId.encode(to:)(void *a1)
{
  return sub_214C5B010(a1, &qword_26ACE3A78, (void (*)(void))sub_214C66484);
}

uint64_t TrainingSignalId.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5B1CC(a1, &qword_26784E590, (void (*)(void))sub_214C66484, a2);
}

uint64_t sub_214C5AEBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrainingSignalId.init(from:)(a1, a2);
}

uint64_t sub_214C5AED4(void *a1)
{
  return TrainingSignalId.encode(to:)(a1);
}

uint64_t sub_214C5AEEC()
{
  if (*v0) {
    return 0x656D737365737361;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_214C5AF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6CD48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5AF5C(uint64_t a1)
{
  unint64_t v2 = sub_214C664D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5AF98(uint64_t a1)
{
  unint64_t v2 = sub_214C664D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssessmentGUIDContainer.encode(to:)(void *a1)
{
  return sub_214C5B010(a1, &qword_26ACE3A90, (void (*)(void))sub_214C664D8);
}

uint64_t sub_214C5B010(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v14 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  void v13[2] = v3[2];
  void v13[3] = v10;
  v13[1] = v3[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14();
  sub_214D1AD88();
  char v17 = 0;
  uint64_t v11 = v15;
  sub_214D1AAF8();
  if (!v11)
  {
    char v16 = 1;
    sub_214D1AAF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t AssessmentGUIDContainer.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5B1CC(a1, &qword_26784E598, (void (*)(void))sub_214C664D8, a2);
}

uint64_t sub_214C5B1CC@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  long long v22 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_214D1AD78();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v12 = v21;
    uint64_t v11 = v22;
    char v24 = 0;
    uint64_t v13 = sub_214D1AA28();
    uint64_t v15 = v14;
    char v23 = 1;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_214D1AA28();
    uint64_t v19 = v18;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v21 = v16;
    v20(v10, v7);
    *uint64_t v11 = v13;
    v11[1] = v15;
    uint64_t v11[2] = v21;
    v11[3] = v19;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C5B3DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentGUIDContainer.init(from:)(a1, a2);
}

uint64_t sub_214C5B3F4(void *a1)
{
  return AssessmentGUIDContainer.encode(to:)(a1);
}

unint64_t sub_214C5B40C(char a1)
{
  unint64_t result = 0x776F6C666B726F77;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x49656C69666F7270;
      break;
    case 2:
      unint64_t result = 0x6E65674172657375;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 6:
      unint64_t result = 0x42676E697373696DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0x6567416568636163;
      break;
    case 10:
      unint64_t result = 0x6563697665447369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C5B58C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v31 = *(void *)(v1 + 24);
  uint64_t v32 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v29 = *(void *)(v1 + 40);
  uint64_t v30 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v27 = *(void *)(v1 + 56);
  uint64_t v28 = v10;
  uint64_t v11 = *(void *)(v1 + 64);
  uint64_t v25 = *(void *)(v1 + 72);
  uint64_t v26 = v11;
  int v24 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v21 = *(void *)(v1 + 96);
  uint64_t v22 = *(void *)(v1 + 104);
  uint64_t v23 = v12;
  int v20 = *(unsigned __int8 *)(v1 + 112);
  uint64_t v19 = *(void *)(v1 + 120);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_214C6FB80();
  sub_214D1AD88();
  LOBYTE(v35) = 0;
  uint64_t v17 = v33;
  sub_214D1AAF8();
  if (!v17)
  {
    LOBYTE(v35) = 1;
    sub_214D1AAA8();
    LOBYTE(v35) = 2;
    sub_214D1AAF8();
    LOBYTE(v35) = 3;
    sub_214D1AAF8();
    uint64_t v35 = v26;
    char v34 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
    sub_214B5A118(&qword_26784D2B0, &qword_26ACE3868);
    sub_214D1AAE8();
    LOBYTE(v35) = 5;
    sub_214D1AAD8();
    uint64_t v35 = v23;
    char v34 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
    sub_214C6FC28(&qword_26ACE3988, &qword_26ACE42E0);
    sub_214D1AAE8();
    LOBYTE(v35) = 7;
    sub_214D1AAA8();
    LOBYTE(v35) = v20;
    char v34 = 8;
    sub_214C6FC88();
    sub_214D1AAE8();
    LOBYTE(v35) = 9;
    sub_214D1AB28();
    LOBYTE(v35) = 10;
    sub_214D1AB08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v16);
}

uint64_t sub_214C5B960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  unint64_t v82 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_214C6FB80();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  }
  uint64_t v11 = v6;
  uint64_t v55 = a2;
  LOBYTE(v68[0]) = 0;
  uint64_t v12 = sub_214D1AA28();
  uint64_t v14 = v13;
  LOBYTE(v68[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_214D1A9D8();
  LOBYTE(v68[0]) = 2;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_214D1AA28();
  uint64_t v58 = v16;
  uint64_t v53 = v17;
  LOBYTE(v68[0]) = 3;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_214D1AA28();
  uint64_t v57 = v19;
  uint64_t v52 = v20;
  uint64_t v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
  LOBYTE(v59) = 4;
  sub_214B5A118(&qword_26784D298, &qword_26ACE3868);
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v56 = v22;
  uint64_t v23 = v68[0];
  LOBYTE(v68[0]) = 5;
  swift_retain();
  uint64_t v51 = sub_214D1AA08();
  char v81 = v24 & 1;
  int v50 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  LOBYTE(v59) = 6;
  sub_214C6FC28(&qword_26ACE42E8, &qword_26ACE42E0);
  sub_214D1AA18();
  uint64_t v48 = v12;
  uint64_t v25 = v68[0];
  LOBYTE(v68[0]) = 7;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_214D1A9D8();
  uint64_t v49 = v27;
  uint64_t v45 = v26;
  uint64_t v47 = v25;
  LOBYTE(v59) = 8;
  sub_214C6FBD4();
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  sub_214D1AA18();
  int v44 = LOBYTE(v68[0]);
  LOBYTE(v68[0]) = 9;
  uint64_t v28 = sub_214D1AA58();
  char v78 = 10;
  char v29 = sub_214D1AA38();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v5);
  LODWORD(v46) = v29 & 1;
  *(void *)&long long v59 = v48;
  *((void *)&v59 + 1) = v14;
  uint64_t v30 = v57;
  uint64_t v31 = v58;
  *(void *)&long long v60 = v54;
  *((void *)&v60 + 1) = v58;
  *(void *)&long long v61 = v53;
  *((void *)&v61 + 1) = v57;
  uint64_t v32 = v56;
  *(void *)&long long v62 = v52;
  *((void *)&v62 + 1) = v56;
  *(void *)&long long v63 = v23;
  *((void *)&v63 + 1) = v51;
  LOBYTE(v64) = v50 & 1;
  uint64_t v33 = v47;
  *((void *)&v64 + 1) = v47;
  *(void *)&long long v65 = v45;
  *((void *)&v65 + 1) = v49;
  LOBYTE(v66) = v44;
  uint64_t v43 = v28;
  *((void *)&v66 + 1) = v28;
  char v67 = v46;
  sub_214BA57B0((uint64_t)&v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v49;
  swift_bridgeObjectRelease();
  long long v36 = v66;
  uint64_t v37 = v55;
  *(_OWORD *)(v55 + 96) = v65;
  *(_OWORD *)(v37 + 112) = v36;
  *(unsigned char *)(v37 + 128) = v67;
  long long v38 = v62;
  *(_OWORD *)(v37 + 32) = v61;
  *(_OWORD *)(v37 + 48) = v38;
  long long v39 = v64;
  *(_OWORD *)(v37 + 64) = v63;
  *(_OWORD *)(v37 + 80) = v39;
  long long v40 = v60;
  *(_OWORD *)uint64_t v37 = v59;
  *(_OWORD *)(v37 + 16) = v40;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  v68[0] = v48;
  v68[1] = v14;
  v68[2] = v54;
  v68[3] = v31;
  v68[4] = v53;
  v68[5] = v34;
  void v68[6] = v52;
  v68[7] = v32;
  v68[8] = v23;
  v68[9] = v51;
  char v69 = v81;
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v80;
  *(_DWORD *)&v70[3] = *(_DWORD *)&v80[3];
  uint64_t v71 = v33;
  uint64_t v72 = v45;
  uint64_t v73 = v35;
  char v74 = v44;
  *(_DWORD *)&v75[3] = *(_DWORD *)&v79[3];
  *(_DWORD *)uint64_t v75 = *(_DWORD *)v79;
  uint64_t v76 = v43;
  char v77 = v46;
  return sub_214BA5898((uint64_t)v68);
}

unint64_t sub_214C5C228()
{
  return sub_214C5B40C(*v0);
}

uint64_t sub_214C5C230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6CE60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5C258(uint64_t a1)
{
  unint64_t v2 = sub_214C6FB80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5C294(uint64_t a1)
{
  unint64_t v2 = sub_214C6FB80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5C2D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C5B960(a1, a2);
}

uint64_t sub_214C5C2E8(void *a1)
{
  return sub_214C5B58C(a1);
}

uint64_t sub_214C5C300(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E970);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v32 = v1[2];
  uint64_t v33 = v8;
  uint64_t v9 = v1[3];
  uint64_t v30 = v1[4];
  uint64_t v31 = v9;
  uint64_t v10 = v1[5];
  uint64_t v28 = v1[6];
  uint64_t v29 = v10;
  uint64_t v11 = v1[7];
  uint64_t v26 = v1[8];
  uint64_t v27 = v11;
  uint64_t v12 = v1[9];
  uint64_t v24 = v1[10];
  uint64_t v25 = v12;
  uint64_t v13 = v1[11];
  uint64_t v22 = v1[12];
  uint64_t v23 = v13;
  uint64_t v14 = v1[13];
  uint64_t v20 = v1[14];
  uint64_t v21 = v14;
  sub_214B964D0((uint64_t)(v1 + 15), (uint64_t)v43);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C71F1C();
  sub_214D1AD88();
  LOBYTE(v35) = 0;
  uint64_t v15 = v34;
  sub_214D1AAA8();
  if (!v15)
  {
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    uint64_t v35 = v32;
    uint64_t v36 = v31;
    uint64_t v37 = v30;
    uint64_t v38 = v29;
    uint64_t v39 = v28;
    uint64_t v40 = v27;
    uint64_t v18 = v24;
    uint64_t v41 = v26;
    uint64_t v42 = v25;
    char v44 = 1;
    sub_214C6F988();
    sub_214D1AAE8();
    uint64_t v35 = v18;
    uint64_t v36 = v17;
    uint64_t v37 = v16;
    uint64_t v38 = v21;
    uint64_t v39 = v20;
    char v44 = 2;
    sub_214BBD754();
    sub_214D1AAE8();
    sub_214B964D0((uint64_t)v43, (uint64_t)&v35);
    char v44 = 3;
    sub_214C71F70();
    sub_214D1AAE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void *sub_214C5C59C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E9C8);
  uint64_t v4 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C71F1C();
  sub_214D1AD78();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v41 = a1;
  uint64_t v8 = v4;
  LOBYTE(v53) = 0;
  uint64_t v9 = v79;
  uint64_t v10 = v7;
  uint64_t v11 = sub_214D1A9D8();
  uint64_t v13 = v12;
  *(void *)&long long v70 = v11;
  *((void *)&v70 + 1) = v12;
  LOBYTE(v44) = 1;
  sub_214BA6410();
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v33 = v13;
  long long v14 = v54;
  uint64_t v15 = v55;
  long long v71 = v53;
  long long v72 = v54;
  long long v73 = v55;
  long long v74 = v56;
  LOBYTE(v44) = 2;
  long long v39 = v53;
  uint64_t v34 = *((void *)&v55 + 1);
  uint64_t v38 = *((void *)&v56 + 1);
  uint64_t v35 = v56;
  sub_214B79260(v53, *((uint64_t *)&v53 + 1));
  sub_214BBD490();
  uint64_t v32 = 0;
  sub_214D1AA18();
  long long v36 = v14;
  uint64_t v31 = v15;
  uint64_t v16 = *((void *)&v53 + 1);
  long long v17 = v54;
  long long v75 = v53;
  long long v76 = v54;
  *(void *)&v77[0] = v55;
  char v68 = 3;
  uint64_t v40 = v53;
  uint64_t v30 = v55;
  sub_214B792C4(v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55);
  sub_214C72210();
  sub_214D1AA18();
  uint64_t v37 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v9);
  sub_214B964D0((uint64_t)&v69, (uint64_t)v43);
  sub_214B964D0((uint64_t)v43, (uint64_t)v77 + 8);
  *(void *)&long long v44 = v11;
  *((void *)&v44 + 1) = v33;
  uint64_t v18 = v40;
  long long v45 = v39;
  uint64_t v19 = v37;
  long long v46 = v36;
  *(void *)&long long v47 = v31;
  *((void *)&v47 + 1) = v34;
  *(void *)&long long v48 = v35;
  *((void *)&v48 + 1) = v38;
  *(void *)&long long v49 = v40;
  *((void *)&v49 + 1) = v37;
  long long v50 = v17;
  uint64_t v20 = v30;
  *(void *)&v51[0] = v30;
  sub_214B964D0((uint64_t)v43, (uint64_t)v51 + 8);
  sub_214C72264(&v44);
  sub_214B79090(v18, v19, v17, *((uint64_t *)&v17 + 1), v20);
  sub_214B7902C(v39, *((uint64_t *)&v39 + 1));
  swift_bridgeObjectRelease();
  long long v21 = v51[6];
  uint64_t v22 = v42;
  unsigned __int16 v42[12] = v51[5];
  v22[13] = v21;
  v22[14] = v52[0];
  *(_OWORD *)((char *)v22 + 233) = *(_OWORD *)((char *)v52 + 9);
  long long v23 = v51[2];
  v22[8] = v51[1];
  v22[9] = v23;
  long long v24 = v51[4];
  v22[10] = v51[3];
  v22[11] = v24;
  long long v25 = v49;
  v22[4] = v48;
  v22[5] = v25;
  long long v26 = v51[0];
  v22[6] = v50;
  v22[7] = v26;
  long long v27 = v45;
  *uint64_t v22 = v44;
  v22[1] = v27;
  long long v28 = v47;
  void v22[2] = v46;
  id v22[3] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  long long v65 = v77[5];
  long long v66 = v77[6];
  v67[0] = v78[0];
  *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v78 + 9);
  long long v61 = v77[1];
  long long v62 = v77[2];
  long long v63 = v77[3];
  long long v64 = v77[4];
  long long v57 = v74;
  long long v58 = v75;
  long long v59 = v76;
  long long v60 = v77[0];
  long long v53 = v70;
  long long v54 = v71;
  long long v55 = v72;
  long long v56 = v73;
  return sub_214BAE770(&v53);
}

unint64_t sub_214C5CB48(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617461645F617564;
      break;
    case 2:
      unint64_t result = 0x7364656573;
      break;
    case 3:
      unint64_t result = 0x776F6C666B726F77;
      break;
    case 4:
      unint64_t result = 0x5F656C69666F7270;
      break;
    case 5:
      unint64_t result = 0x726F727265;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000026;
      break;
    case 8:
      unint64_t result = 0xD000000000000033;
      break;
    case 9:
      unint64_t result = 0x5F64616F6C796170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C5CC98(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E758);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v45 = *(void *)(v1 + 24);
  uint64_t v46 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v43 = *(void *)(v1 + 40);
  uint64_t v44 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v41 = *(void *)(v1 + 56);
  uint64_t v42 = v10;
  uint64_t v11 = *(void *)(v1 + 64);
  uint64_t v38 = *(void *)(v1 + 72);
  uint64_t v39 = v11;
  uint64_t v12 = *(void *)(v1 + 80);
  uint64_t v36 = *(void *)(v1 + 88);
  uint64_t v37 = v12;
  uint64_t v34 = *(void *)(v1 + 96);
  uint64_t v35 = *(void *)(v1 + 104);
  uint64_t v32 = *(void *)(v1 + 112);
  uint64_t v33 = *(void *)(v1 + 120);
  uint64_t v27 = *(void *)(v1 + 128);
  uint64_t v28 = *(void *)(v1 + 136);
  uint64_t v29 = *(void *)(v1 + 144);
  uint64_t v30 = *(void *)(v1 + 152);
  uint64_t v31 = *(void *)(v1 + 160);
  int v56 = *(unsigned __int8 *)(v1 + 168);
  uint64_t v26 = *(void *)(v1 + 176);
  v24[1] = *(void *)(v1 + 184);
  int v25 = *(unsigned __int8 *)(v1 + 192);
  uint64_t v40 = *(void *)(v1 + 200);
  int v13 = *(unsigned __int8 *)(v1 + 208);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1;
  uint64_t v17 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_214C6F934();
  sub_214D1AD88();
  LOBYTE(v48) = 0;
  uint64_t v18 = v47;
  sub_214D1AAF8();
  if (!v18)
  {
    uint64_t v20 = v41;
    uint64_t v19 = v42;
    uint64_t v22 = v43;
    uint64_t v21 = v44;
    LODWORD(v47) = v13;
    LOBYTE(v48) = 1;
    sub_214D1AAA8();
    uint64_t v48 = v21;
    uint64_t v49 = v22;
    uint64_t v50 = v19;
    uint64_t v51 = v20;
    uint64_t v52 = v39;
    uint64_t v53 = v38;
    uint64_t v54 = v37;
    uint64_t v55 = v36;
    char v57 = 2;
    sub_214C6F988();
    sub_214D1AAE8();
    LOBYTE(v48) = 3;
    sub_214D1AAA8();
    LOBYTE(v48) = 4;
    sub_214D1AAA8();
    uint64_t v48 = v27;
    uint64_t v49 = v28;
    uint64_t v50 = v29;
    uint64_t v51 = v30;
    uint64_t v52 = v31;
    char v57 = 5;
    sub_214BBD754();
    sub_214D1AAE8();
    LOBYTE(v48) = 6;
    sub_214D1AAB8();
    uint64_t v48 = v26;
    char v57 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
    sub_214B5A118(&qword_26784D2B0, &qword_26ACE3868);
    sub_214D1AAE8();
    LOBYTE(v48) = 8;
    sub_214D1AAD8();
    LOBYTE(v48) = 9;
    sub_214D1AAD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v17);
}

void *sub_214C5D0F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E748);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v123 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_214C6F934();
  sub_214D1AD78();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v123);
  }
  uint64_t v74 = v6;
  LOBYTE(v90) = 0;
  uint64_t v11 = sub_214D1AA28();
  LOBYTE(v90) = 1;
  unint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_214D1A9D8();
  unint64_t v73 = v13;
  uint64_t v67 = v14;
  LOBYTE(v76) = 2;
  uint64_t v16 = v15;
  sub_214BA6410();
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v72 = v16;
  uint64_t v17 = v90;
  uint64_t v18 = v93;
  uint64_t v19 = v94;
  LOBYTE(v90) = 3;
  unsigned long long v71 = __PAIR128__(v91, v17);
  uint64_t v75 = v92;
  uint64_t v65 = v95;
  uint64_t v66 = *((void *)&v94 + 1);
  uint64_t v70 = v96;
  sub_214B79260(v17, v91);
  uint64_t v20 = sub_214D1A9D8();
  uint64_t v69 = v18;
  uint64_t v64 = v20;
  uint64_t v21 = v19;
  LOBYTE(v90) = 4;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_214D1A9D8();
  uint64_t v68 = v23;
  uint64_t v57 = v24;
  LOBYTE(v76) = 5;
  uint64_t v26 = v25;
  sub_214BBD490();
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v27 = v90;
  LOBYTE(v90) = 6;
  uint64_t v62 = v27;
  uint64_t v63 = v26;
  uint64_t v60 = v92;
  unint64_t v61 = v91;
  uint64_t v58 = v94;
  uint64_t v59 = v93;
  sub_214B792C4(v27, v91, v92, v93, v94);
  int v55 = sub_214D1A9E8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3868);
  LOBYTE(v76) = 7;
  sub_214B5A118(&qword_26784D298, &qword_26ACE3868);
  sub_214D1AA18();
  uint64_t v28 = v90;
  LOBYTE(v90) = 8;
  uint64_t v56 = v28;
  swift_retain();
  uint64_t v54 = sub_214D1AA08();
  uint64_t v29 = v56;
  int v52 = v30 & 1;
  char v121 = v30 & 1;
  char v118 = 9;
  uint64_t v53 = sub_214D1AA08();
  char v32 = v31;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v5);
  char v33 = v32 & 1;
  char v119 = v32 & 1;
  *(void *)&long long v76 = v11;
  *((void *)&v76 + 1) = v73;
  *(void *)&long long v77 = v67;
  *((void *)&v77 + 1) = v72;
  unsigned long long v78 = v71;
  *(void *)&long long v79 = v75;
  *((void *)&v79 + 1) = v69;
  uint64_t v51 = v21;
  *(void *)&long long v80 = v21;
  *((void *)&v80 + 1) = v66;
  *(void *)&long long v81 = v65;
  *((void *)&v81 + 1) = v70;
  *(void *)&long long v82 = v64;
  *((void *)&v82 + 1) = v68;
  uint64_t v34 = v58;
  *(void *)&long long v83 = v57;
  *((void *)&v83 + 1) = v63;
  uint64_t v35 = v61;
  *(void *)&long long v84 = v62;
  *((void *)&v84 + 1) = v61;
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  *(void *)&long long v85 = v60;
  *((void *)&v85 + 1) = v59;
  *(void *)&long long v86 = v58;
  BYTE8(v86) = v55;
  *(void *)&long long v87 = v29;
  *((void *)&v87 + 1) = v54;
  LOBYTE(v88) = v52;
  *((void *)&v88 + 1) = v53;
  char v89 = v33;
  sub_214C222A8(&v76);
  swift_release();
  sub_214B79090(v62, v35, v36, v37, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v70;
  uint64_t v39 = v51;
  uint64_t v40 = v65;
  sub_214B7902C(v71, *((uint64_t *)&v71 + 1));
  unint64_t v41 = v73;
  swift_bridgeObjectRelease();
  uint64_t v42 = v72;
  swift_bridgeObjectRelease();
  long long v43 = v87;
  *(_OWORD *)(a2 + 160) = v86;
  *(_OWORD *)(a2 + 176) = v43;
  *(_OWORD *)(a2 + 192) = v88;
  *(unsigned char *)(a2 + 208) = v89;
  long long v44 = v83;
  *(_OWORD *)(a2 + 96) = v82;
  *(_OWORD *)(a2 + 112) = v44;
  long long v45 = v85;
  *(_OWORD *)(a2 + 128) = v84;
  *(_OWORD *)(a2 + 144) = v45;
  long long v46 = v79;
  *(_OWORD *)(a2 + 32) = v78;
  *(_OWORD *)(a2 + 48) = v46;
  long long v47 = v81;
  *(_OWORD *)(a2 + 64) = v80;
  *(_OWORD *)(a2 + 80) = v47;
  long long v48 = v77;
  *(_OWORD *)a2 = v76;
  *(_OWORD *)(a2 + 16) = v48;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v123);
  uint64_t v90 = v11;
  unint64_t v91 = v41;
  uint64_t v92 = v67;
  uint64_t v93 = v42;
  unsigned long long v94 = v71;
  uint64_t v95 = v75;
  uint64_t v96 = v69;
  uint64_t v97 = v39;
  uint64_t v98 = v66;
  uint64_t v99 = v40;
  uint64_t v100 = v38;
  uint64_t v101 = v64;
  uint64_t v102 = v68;
  uint64_t v103 = v57;
  uint64_t v104 = v63;
  uint64_t v105 = v62;
  unint64_t v106 = v61;
  uint64_t v107 = v60;
  uint64_t v108 = v59;
  uint64_t v109 = v58;
  char v110 = v55;
  *(_DWORD *)&v111[3] = *(_DWORD *)((char *)v122 + 3);
  *(_DWORD *)uint64_t v111 = v122[0];
  uint64_t v112 = v56;
  uint64_t v113 = v54;
  char v114 = v121;
  *(_DWORD *)&v115[3] = *(_DWORD *)&v120[3];
  *(_DWORD *)int v115 = *(_DWORD *)v120;
  uint64_t v116 = v53;
  char v117 = v119;
  return sub_214C224CC(&v90);
}

uint64_t sub_214C5DB70(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6FAD8();
  sub_214D1AD88();
  v9[15] = 0;
  sub_214D1AB28();
  if (!v1)
  {
    v9[14] = 1;
    sub_214D1AAD8();
    v9[13] = 2;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214C5DCFC()
{
  uint64_t result = 0x6F6C79615069646FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7364656573;
      break;
    case 2:
      uint64_t result = 0x666E49726F727265;
      break;
    case 3:
      uint64_t result = 0x6E6F697469646461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C5DD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6D300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5DDC4(uint64_t a1)
{
  unint64_t v2 = sub_214C71F1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5DE00(uint64_t a1)
{
  unint64_t v2 = sub_214C71F1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_214C5DE3C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_214C5C59C(a1, a2);
}

uint64_t sub_214C5DE54(void *a1)
{
  return sub_214C5C300(a1);
}

unint64_t sub_214C5DE6C()
{
  return sub_214C5CB48(*v0);
}

uint64_t sub_214C5DE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6D4F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_214C5DE9C(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_214C5DEA8(uint64_t a1)
{
  unint64_t v2 = sub_214C6F934();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5DEE4(uint64_t a1)
{
  unint64_t v2 = sub_214C6F934();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_214C5DF20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C5D0F4(a1, a2);
}

uint64_t sub_214C5DF38(void *a1)
{
  return sub_214C5CC98(a1);
}

uint64_t sub_214C5DF50()
{
  uint64_t v1 = 0x6F7272655F6E646FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x776F6C666B726F77;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F7272655F766469;
  }
}

uint64_t sub_214C5DFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6D918(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5DFDC(uint64_t a1)
{
  unint64_t v2 = sub_214C6FAD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5E018(uint64_t a1)
{
  unint64_t v2 = sub_214C6FAD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_214C5E054@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_214C6DAA0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_214C5E09C(void *a1)
{
  return sub_214C5DB70(a1);
}

uint64_t sub_214C5E0BC()
{
  return 0x666F72705F617564;
}

uint64_t sub_214C5E0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x666F72705F617564 && a2 == 0xEB00000000656C69)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214C5E18C(uint64_t a1)
{
  unint64_t v2 = sub_214C72168();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5E1C8(uint64_t a1)
{
  unint64_t v2 = sub_214C72168();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5E204@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5E3D4(a1, &qword_26ACE4420, (void (*)(void))sub_214C72168, a2);
}

uint64_t sub_214C5E240(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_214C5E598(a1, a2, a3, &qword_26784E9C0, (void (*)(void))sub_214C72168);
}

uint64_t sub_214C5E27C()
{
  return 0x656D697473;
}

uint64_t sub_214C5E290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656D697473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214C5E320(uint64_t a1)
{
  unint64_t v2 = sub_214C721BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5E35C(uint64_t a1)
{
  unint64_t v2 = sub_214C721BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5E398@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_214C5E3D4(a1, &qword_26ACE4400, (void (*)(void))sub_214C721BC, a2);
}

uint64_t sub_214C5E3D4@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v18 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_214D1AD78();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v11 = v18;
  unint64_t v12 = v19;
  uint64_t v13 = sub_214D1AA28();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *unint64_t v12 = v13;
  v12[1] = v15;
  return result;
}

uint64_t sub_214C5E55C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_214C5E598(a1, a2, a3, &qword_26784E9B8, (void (*)(void))sub_214C721BC);
}

uint64_t sub_214C5E598(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v14 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14();
  sub_214D1AD88();
  sub_214D1AAF8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t static TSID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_214D1ABC8();
  }
}

uint64_t sub_214C5E710()
{
  uint64_t v1 = 0x5F6E6F6973736573;
  if (*v0 != 1) {
    uint64_t v1 = 0x65636E6F6E5F7374;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1684632436;
  }
}

uint64_t sub_214C5E768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6DC84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5E790(uint64_t a1)
{
  unint64_t v2 = sub_214C6652C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5E7CC(uint64_t a1)
{
  unint64_t v2 = sub_214C6652C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TSID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  uint64_t v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  uint64_t v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6652C();
  sub_214D1AD88();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_214D1AAF8();
  if (!v10)
  {
    char v14 = 1;
    sub_214D1AAF8();
    char v13 = 2;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t TSID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6652C();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_214D1AA28();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_214D1A9D8();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C5EC4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E998);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C72018();
  sub_214D1AD88();
  char v14 = 0;
  sub_214D1AAF8();
  if (!v4)
  {
    char v13 = 1;
    sub_214D1AB28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_214C5EDC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TSID.init(from:)(a1, a2);
}

uint64_t sub_214C5EDD8(void *a1)
{
  return TSID.encode(to:)(a1);
}

uint64_t sub_214C5EDF0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_214D1ABC8();
  }
}

uint64_t sub_214C5EE20()
{
  if (*v0) {
    return 0x695F747365676964;
  }
  else {
    return 0x64616F6C796170;
  }
}

uint64_t sub_214C5EE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6DDD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5EE8C(uint64_t a1)
{
  unint64_t v2 = sub_214C72018();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5EEC8(uint64_t a1)
{
  unint64_t v2 = sub_214C72018();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5EF04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_214C6DEE4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_214C5EF34(void *a1)
{
  return sub_214C5EC4C(a1, *v1, v1[1], v1[2]);
}

CoreODIEssentials::DUATaskType_optional __swiftcall DUATaskType.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (CoreODIEssentials::DUATaskType_optional)rawValue;
}

uint64_t DUATaskType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_214C5EF78(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3A68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v1 + 24);
  void v12[2] = *(unsigned __int8 *)(v1 + 25);
  int v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C7206C();
  sub_214D1AD88();
  char v19 = 0;
  uint64_t v9 = v14;
  sub_214D1AAF8();
  if (!v9)
  {
    char v10 = v13;
    char v18 = 1;
    sub_214D1AB18();
    char v17 = v10;
    char v16 = 2;
    sub_214C72114();
    sub_214D1AB38();
    char v15 = 3;
    sub_214D1AAB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_214C5F168@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E9A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C7206C();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v12 = v11;
  char v21 = 1;
  swift_bridgeObjectRetain();
  sub_214D1AA48();
  uint64_t v14 = v13;
  char v19 = 2;
  sub_214C720C0();
  sub_214D1AA68();
  HIDWORD(v17) = v20;
  char v18 = 3;
  char v16 = sub_214D1A9E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 24) = BYTE4(v17);
  *(unsigned char *)(a2 + 25) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C5F3EC()
{
  return sub_214D1A238();
}

uint64_t sub_214C5F44C()
{
  return sub_214D1A1E8();
}

unint64_t sub_214C5F49C()
{
  unint64_t result = 0x617461645F617564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E6F697461727564;
      break;
    case 2:
      unint64_t result = 0x7079745F6B736174;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C5F530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6E0D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C5F558(uint64_t a1)
{
  unint64_t v2 = sub_214C7206C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5F594(uint64_t a1)
{
  unint64_t v2 = sub_214C7206C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5F5D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_214C5F168(a1, a2);
}

uint64_t sub_214C5F5E8(void *a1)
{
  return sub_214C5EF78(a1);
}

unint64_t sub_214C5F600(char a1)
{
  unint64_t result = 0x6E6F635F64697374;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7364656573;
      break;
    case 2:
      unint64_t result = 0x776F6C666B726F77;
      break;
    case 3:
      unint64_t result = 0x617461645F617564;
      break;
    case 4:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 5:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000023;
      break;
    case 7:
      unint64_t result = 0xD000000000000030;
      break;
    case 8:
      unint64_t result = 0x726F727265;
      break;
    case 9:
    case 10:
      unint64_t result = 0x6B63616264656566;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C5F7E4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E768);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v51 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  uint64_t v49 = *((void *)v1 + 4);
  uint64_t v50 = v8;
  uint64_t v10 = *((void *)v1 + 5);
  uint64_t v47 = *((void *)v1 + 6);
  uint64_t v48 = v10;
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v45 = *((void *)v1 + 8);
  uint64_t v46 = v11;
  uint64_t v12 = *((void *)v1 + 9);
  uint64_t v43 = *((void *)v1 + 10);
  uint64_t v44 = v12;
  uint64_t v13 = *((void *)v1 + 11);
  uint64_t v41 = *((void *)v1 + 12);
  uint64_t v42 = v13;
  uint64_t v39 = *((void *)v1 + 13);
  uint64_t v40 = *((void *)v1 + 14);
  uint64_t v38 = *((void *)v1 + 15);
  int v60 = *((unsigned __int8 *)v1 + 128);
  uint64_t v37 = *((void *)v1 + 17);
  uint64_t v35 = *((void *)v1 + 18);
  int v36 = *((unsigned __int8 *)v1 + 152);
  uint64_t v30 = *((void *)v1 + 20);
  uint64_t v34 = *((void *)v1 + 21);
  uint64_t v33 = *((void *)v1 + 22);
  uint64_t v32 = *((void *)v1 + 23);
  uint64_t v31 = *((void *)v1 + 24);
  uint64_t v28 = *((void *)v1 + 25);
  int v29 = *((unsigned __int8 *)v1 + 208);
  uint64_t v26 = *((void *)v1 + 27);
  uint64_t v27 = *((void *)v1 + 28);
  uint64_t v25 = *((void *)v1 + 29);
  uint64_t v23 = *((void *)v1 + 30);
  int v22 = *((unsigned __int8 *)v1 + 264);
  int v24 = *((unsigned __int8 *)v1 + 248);
  uint64_t v21 = *((void *)v1 + 32);
  uint64_t v14 = *((void *)v1 + 35);
  uint64_t v15 = a1[3];
  char v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_214C6F9DC();
  sub_214D1AD88();
  long long v53 = v51;
  uint64_t v54 = v9;
  char v61 = 0;
  sub_214C6FA30();
  uint64_t v19 = v52;
  sub_214D1AB38();
  if (!v19)
  {
    uint64_t v52 = v14;
    *(void *)&long long v53 = v50;
    *((void *)&v53 + 1) = v49;
    uint64_t v54 = v48;
    uint64_t v55 = v47;
    uint64_t v56 = v46;
    uint64_t v57 = v45;
    uint64_t v58 = v44;
    uint64_t v59 = v43;
    char v61 = 1;
    sub_214C6F988();
    sub_214D1AAE8();
    LOBYTE(v53) = 2;
    sub_214D1AAA8();
    LOBYTE(v53) = 3;
    sub_214D1AAF8();
    LOBYTE(v53) = 4;
    sub_214D1AB28();
    LOBYTE(v53) = 5;
    sub_214D1AAB8();
    *(void *)&long long v53 = v37;
    char v61 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE3870);
    sub_214B5A118(&qword_26784E780, &qword_26ACE3870);
    sub_214D1AAE8();
    LOBYTE(v53) = 7;
    sub_214D1AAD8();
    *(void *)&long long v53 = v30;
    *((void *)&v53 + 1) = v34;
    uint64_t v54 = v33;
    uint64_t v55 = v32;
    uint64_t v56 = v31;
    char v61 = 8;
    sub_214BBD754();
    sub_214D1AAE8();
    LOBYTE(v53) = 9;
    sub_214D1AAC8();
    LOBYTE(v53) = 10;
    sub_214D1AAA8();
    *(void *)&long long v53 = v25;
    char v61 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784E788);
    sub_214C67630(&qword_26784E790, &qword_26784E788, (void (*)(void))sub_214C6FA84);
    sub_214D1AB38();
    LOBYTE(v53) = 12;
    sub_214D1AAC8();
    LOBYTE(v53) = 13;
    sub_214D1AAC8();
    LOBYTE(v53) = 14;
    sub_214D1AAA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v18);
}

unint64_t sub_214C5FE80()
{
  return sub_214C5F600(*v0);
}

uint64_t sub_214C5FE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6E294(a1, a2);
  *a3 = result;
  return result;
}

void sub_214C5FEB0(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_214C5FEBC(uint64_t a1)
{
  unint64_t v2 = sub_214C6F9DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C5FEF8(uint64_t a1)
{
  unint64_t v2 = sub_214C6F9DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C5FF34(void *a1)
{
  return sub_214C5F7E4(a1);
}

uint64_t AugmentedProfile.assessmentConfig.getter()
{
  return swift_retain();
}

uint64_t AugmentedProfile.profile.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AugmentedProfile.profileInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AugmentedProfile.profileID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_214C5FFE4(unsigned __int8 *a1, char *a2)
{
  return sub_214C1C874(*a1, *a2);
}

uint64_t sub_214C5FFF0()
{
  return sub_214C56A50();
}

uint64_t sub_214C5FFF8()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C600D8()
{
  return sub_214C5782C();
}

uint64_t sub_214C600E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C6E8CC();
  *a1 = result;
  return result;
}

void sub_214C60118(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x8000000214D2E270;
  unint64_t v3 = 0xD000000000000010;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x656C69666F7270;
      goto LABEL_3;
    case 2:
      unint64_t v4 = 0xEB000000006F666ELL;
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0xE900000000000064;
LABEL_6:
      *a1 = 0x49656C69666F7270;
      a1[1] = v4;
      break;
    case 4:
      *a1 = 0x6E6F6973726576;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_214C601D0()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C69666F7270;
      break;
    case 2:
    case 3:
      unint64_t result = 0x49656C69666F7270;
      break;
    case 4:
      unint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C6027C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C6E8CC();
  *a1 = result;
  return result;
}

uint64_t sub_214C602AC(uint64_t a1)
{
  unint64_t v2 = sub_214C66580();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C602E8(uint64_t a1)
{
  unint64_t v2 = sub_214C66580();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AugmentedProfile.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4418);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C66580();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4020);
  char v37 = 0;
  sub_214B5A118(&qword_26ACE4018, (uint64_t *)&unk_26ACE4020);
  sub_214D1AA18();
  uint64_t v10 = v38;
  char v36 = 1;
  swift_retain();
  uint64_t v11 = sub_214D1AA28();
  uint64_t v32 = v12;
  uint64_t v29 = v11;
  uint64_t v31 = v10;
  char v35 = 2;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_214D1A9D8();
  char v34 = 3;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_214D1AA28();
  uint64_t v30 = v14;
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  char v33 = 4;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_214D1AA58();
  uint64_t v18 = v31;
  uint64_t v19 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v20 = v29;
  uint64_t v21 = v30;
  *a2 = v18;
  a2[1] = v20;
  uint64_t v23 = v27;
  uint64_t v22 = v28;
  a2[2] = v32;
  a2[3] = v22;
  uint64_t v24 = v26;
  a2[4] = v21;
  a2[5] = v24;
  a2[6] = v23;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t AugmentedProfile.armandDataFields.getter()
{
  if (*v0) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t AugmentedProfile.bindingsDefFields.getter()
{
  if (*v0) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t AugmentedProfile.slaMilli.getter()
{
  if (*(void *)v0) {
    return *(void *)(*(void *)v0 + 272);
  }
  else {
    return 0;
  }
}

uint64_t AugmentedProfile.generateFallback.getter()
{
  if (*(void *)v0) {
    return *(unsigned __int8 *)(*(void *)v0 + 281);
  }
  else {
    return 2;
  }
}

uint64_t sub_214C607D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AugmentedProfile.init(from:)(a1, a2);
}

CoreODIEssentials::DsidType_optional __swiftcall DsidType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_214C60848(unsigned __int8 *a1, char *a2)
{
  return sub_214C1BA34(*a1, *a2);
}

uint64_t sub_214C60854()
{
  return sub_214D1AD48();
}

uint64_t sub_214C60914()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C609BC()
{
  return sub_214D1AD48();
}

CoreODIEssentials::DsidType_optional sub_214C60A78(Swift::String *a1)
{
  return DsidType.init(rawValue:)(*a1);
}

void sub_214C60A84(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64756F6C4369;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x73656E755469;
      goto LABEL_3;
    case 2:
      *a1 = 1684628325;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 1869903201;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE600000000000000;
      break;
  }
}

uint64_t sub_214C60B04@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return DsidType.init(from:)(a1, a2);
}

uint64_t sub_214C60B1C()
{
  return sub_214D1A1D8();
}

CoreODIEssentials::ArmandDataSource_optional __swiftcall ArmandDataSource.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 15;
  if (v3 < 0xF) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t ArmandDataSource.rawValue.getter()
{
  unint64_t result = 0x73746E756F636341;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6547656C69626F4DLL;
      break;
    case 2:
      unint64_t result = 0x6974726543616162;
      break;
    case 3:
      unint64_t result = 0x6C6569467261654ELL;
      break;
    case 4:
      unint64_t result = 5456969;
      break;
    case 5:
      unint64_t result = 0x656C655465726F43;
      break;
    case 6:
      unint64_t result = 0x61636F4C65726F43;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x656E6F5A656D6954;
      break;
    case 9:
      unint64_t result = 0x6C4372656C6C6143;
      break;
    case 0xA:
      unint64_t result = 0x614E646573726150;
      break;
    case 0xB:
      unint64_t result = 0x7265646F636F6547;
      break;
    case 0xC:
      unint64_t result = 0x657474616D726F46;
      break;
    case 0xD:
      unint64_t result = 0x6553656369766544;
      break;
    case 0xE:
      unint64_t result = 0x72756769666E6F43;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C60DE0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1CE68(*a1, *a2);
}

uint64_t sub_214C60DEC(uint64_t a1, uint64_t a2)
{
  return sub_214C620F4(a1, a2, (void (*)(uint64_t))ArmandDataSource.rawValue.getter);
}

uint64_t sub_214C60E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C6217C(a1, a2, a3, (void (*)(void))ArmandDataSource.rawValue.getter);
}

uint64_t sub_214C60E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C621FC(a1, a2, a3, (void (*)(uint64_t))ArmandDataSource.rawValue.getter);
}

CoreODIEssentials::ArmandDataSource_optional sub_214C60E34(Swift::String *a1)
{
  return ArmandDataSource.init(rawValue:)(*a1);
}

unint64_t sub_214C60E40@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ArmandDataSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C60E68()
{
  return sub_214D1A228();
}

uint64_t sub_214C60EC8()
{
  return sub_214D1A1D8();
}

uint64_t AssessmentConfigFieldName.description.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "BindingsField(");
    HIBYTE(v2[1]) = -18;
    sub_214D1A108();
  }
  else
  {
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    v2[0] = 0xD000000000000010;
    v2[1] = 0x8000000214D373D0;
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A108();
    swift_bridgeObjectRelease();
  }
  sub_214D1A108();
  return v2[0];
}

unint64_t ArmandDeviceDataFieldName.rawValue.getter()
{
  unint64_t result = 0x726556646C697542;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1684628851;
      break;
    case 2:
      unint64_t result = 0x754E6C6169726553;
      break;
    case 3:
      unint64_t result = 0x6544657571696E55;
      break;
    case 4:
      unint64_t result = 0x6843657571696E55;
      break;
    case 5:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 6:
      unint64_t result = 0x7265626D756ELL;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0x746E6564494D4953;
      break;
    case 0xA:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xC:
      unint64_t result = 0x6E69726168537369;
      break;
    case 0xD:
      unint64_t result = 0x696669746E656469;
      break;
    case 0xE:
      unint64_t result = 0x736572705F6D6973;
      break;
    case 0xF:
      unint64_t result = 0x6F737265705F6161;
      break;
    case 0x10:
      unint64_t result = 0x7A696C616D726F6ELL;
      break;
    case 0x11:
      unint64_t result = 0x6469656C707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AssessmentConfigFieldName.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_214D1AD18();
    return sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD18();
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_214C61340()
{
  return 12383;
}

uint64_t sub_214C61350(uint64_t a1)
{
  unint64_t v2 = sub_214C670E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C6138C(uint64_t a1)
{
  unint64_t v2 = sub_214C670E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C613C8()
{
  if (*v0) {
    return 0x73676E69646E6962;
  }
  else {
    return 0x6144656369766564;
  }
}

uint64_t sub_214C6141C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6E914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C61444(uint64_t a1)
{
  unint64_t v2 = sub_214C67094();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C61480(uint64_t a1)
{
  unint64_t v2 = sub_214C67094();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_214C614BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_214C6153C(uint64_t a1)
{
  unint64_t v2 = sub_214C6713C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C61578(uint64_t a1)
{
  unint64_t v2 = sub_214C6713C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssessmentConfigFieldName.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_214D1AD08();
  sub_214D1AD18();
  if (v1)
  {
    sub_214D1A0D8();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  return sub_214D1AD48();
}

uint64_t AssessmentConfigFieldName.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5A8);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5B0);
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5B8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_214C67094();
  uint64_t v17 = v43;
  sub_214D1AD78();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  uint64_t v37 = v7;
  uint64_t v18 = v41;
  uint64_t v43 = v12;
  uint64_t v19 = v15;
  uint64_t v20 = sub_214D1AA78();
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v26 = sub_214D1A7F8();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5C8);
    *uint64_t v28 = &type metadata for AssessmentConfigFieldName;
    sub_214D1A9C8();
    sub_214D1A7E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  uint64_t v36 = v20;
  char v21 = *(unsigned char *)(v20 + 32);
  if (v21)
  {
    char v46 = 1;
    sub_214C670E8();
    uint64_t v22 = v6;
    uint64_t v23 = v19;
    sub_214D1A9B8();
    uint64_t v24 = sub_214D1AA28();
    uint64_t v25 = v43;
    uint64_t v31 = v24;
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v11);
    uint64_t v34 = v33;
  }
  else
  {
    char v45 = 0;
    sub_214C6713C();
    sub_214D1A9B8();
    sub_214C67190();
    uint64_t v30 = v37;
    sub_214D1AA68();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v11);
    uint64_t v34 = 0;
    uint64_t v31 = v44;
  }
  char v35 = v38;
  *uint64_t v38 = v31;
  v35[1] = v34;
  *((unsigned char *)v35 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_214C61B74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentConfigFieldName.init(from:)(a1, a2);
}

uint64_t sub_214C61B8C()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_214D1AD08();
  sub_214D1AD18();
  if (v1)
  {
    sub_214D1A0D8();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  return sub_214D1AD48();
}

uint64_t sub_214C61C30()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_214D1AD18();
    return sub_214D1A0D8();
  }
  else
  {
    sub_214D1AD18();
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_214C61CF0()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_214D1AD08();
  sub_214D1AD18();
  if (v1)
  {
    sub_214D1A0D8();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  return sub_214D1AD48();
}

CoreODIEssentials::ArmandDeviceDataFieldName_optional __swiftcall ArmandDeviceDataFieldName.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_214D1AC28();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_214C61DFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1C040(*a1, *a2);
}

uint64_t sub_214C61E08(uint64_t a1, uint64_t a2)
{
  return sub_214C620F4(a1, a2, (void (*)(uint64_t))ArmandDeviceDataFieldName.rawValue.getter);
}

uint64_t sub_214C61E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C6217C(a1, a2, a3, (void (*)(void))ArmandDeviceDataFieldName.rawValue.getter);
}

uint64_t sub_214C61E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C621FC(a1, a2, a3, (void (*)(uint64_t))ArmandDeviceDataFieldName.rawValue.getter);
}

CoreODIEssentials::ArmandDeviceDataFieldName_optional sub_214C61E50(Swift::String *a1)
{
  return ArmandDeviceDataFieldName.init(rawValue:)(*a1);
}

unint64_t sub_214C61E5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ArmandDeviceDataFieldName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C61E84()
{
  return sub_214D1A228();
}

uint64_t sub_214C61EE4()
{
  return sub_214D1A1D8();
}

CoreODIEssentials::ODIComputableBindingsName_optional __swiftcall ODIComputableBindingsName.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t ODIComputableBindingsName.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6947646573726170;
      break;
    case 5:
      unint64_t result = 0x694E646573726170;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C620D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1C028(*a1, *a2);
}

uint64_t sub_214C620DC(uint64_t a1, uint64_t a2)
{
  return sub_214C620F4(a1, a2, (void (*)(uint64_t))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_214C620F4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_214D1AD08();
  a3(v4);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C62164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C6217C(a1, a2, a3, (void (*)(void))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_214C6217C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C621E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_214C621FC(a1, a2, a3, (void (*)(uint64_t))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_214C621FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_214D1AD08();
  a4(v5);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

CoreODIEssentials::ODIComputableBindingsName_optional sub_214C62268(Swift::String *a1)
{
  return ODIComputableBindingsName.init(rawValue:)(*a1);
}

unint64_t sub_214C62274@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODIComputableBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C6229C()
{
  return sub_214D1A228();
}

CoreODIEssentials::ODIFormattedPhoneNumberBindings_optional __swiftcall ODIFormattedPhoneNumberBindings.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t ODIFormattedPhoneNumberBindings.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000018;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_214C623B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1BD14(*a1, *a2);
}

uint64_t sub_214C623C4()
{
  return sub_214C56B48();
}

uint64_t sub_214C623CC()
{
  return sub_214C56E14();
}

uint64_t sub_214C623D4()
{
  return sub_214C572F0();
}

CoreODIEssentials::ODIFormattedPhoneNumberBindings_optional sub_214C623DC(Swift::String *a1)
{
  return ODIFormattedPhoneNumberBindings.init(rawValue:)(*a1);
}

unint64_t sub_214C623E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODIFormattedPhoneNumberBindings.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C62410()
{
  return sub_214D1A228();
}

CoreODIEssentials::ODIGeocoderBindingsName_optional __swiftcall ODIGeocoderBindingsName.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t ODIGeocoderBindingsName.rawValue.getter()
{
  unint64_t result = 0x4C73736572646461;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C625D8(unsigned __int8 *a1, char *a2)
{
  return sub_214C1C224(*a1, *a2);
}

uint64_t sub_214C625E4()
{
  return sub_214C575B0();
}

uint64_t sub_214C625F0()
{
  return sub_214C57094();
}

uint64_t sub_214C625F8()
{
  return sub_214C575B0();
}

CoreODIEssentials::ODIGeocoderBindingsName_optional sub_214C62600(Swift::String *a1)
{
  return ODIGeocoderBindingsName.init(rawValue:)(*a1);
}

unint64_t sub_214C6260C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODIGeocoderBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C62634()
{
  return sub_214D1A228();
}

CoreODIEssentials::ODIDeviceSettingsBindingsName_optional __swiftcall ODIDeviceSettingsBindingsName.init(rawValue:)(Swift::String rawValue)
{
  return (CoreODIEssentials::ODIDeviceSettingsBindingsName_optional)sub_214C62834(v1);
}

unint64_t ODIDeviceSettingsBindingsName.rawValue.getter()
{
  unint64_t result = 0x6563697665447369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x614C656E6F687069;
      break;
    case 4:
      unint64_t result = 0x7365727574616566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C62770(unsigned __int8 *a1, char *a2)
{
  return sub_214C1BE14(*a1, *a2);
}

uint64_t sub_214C6277C()
{
  return sub_214C56BF4();
}

uint64_t sub_214C62784()
{
  return sub_214C56EA8();
}

uint64_t sub_214C6278C()
{
  return sub_214C57398();
}

CoreODIEssentials::ODIDeviceSettingsBindingsName_optional sub_214C62794(Swift::String *a1)
{
  return ODIDeviceSettingsBindingsName.init(rawValue:)(*a1);
}

unint64_t sub_214C627A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODIDeviceSettingsBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C627C8()
{
  return sub_214D1A228();
}

CoreODIEssentials::ODILocationBindingsName_optional __swiftcall ODILocationBindingsName.init(rawValue:)(Swift::String rawValue)
{
  return (CoreODIEssentials::ODILocationBindingsName_optional)sub_214C62834(v1);
}

uint64_t sub_214C62834@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_214D1A998();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 5;
  if (v2 < 5) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t ODILocationBindingsName.rawValue.getter()
{
  unint64_t result = 0x656475746974616CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6564757469746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C62938(unsigned __int8 *a1, char *a2)
{
  return sub_214C1C058(*a1, *a2);
}

uint64_t sub_214C62944()
{
  return sub_214C56D10();
}

uint64_t sub_214C6294C()
{
  return sub_214C56FB0();
}

uint64_t sub_214C62954()
{
  return sub_214C574B0();
}

CoreODIEssentials::ODILocationBindingsName_optional sub_214C6295C(Swift::String *a1)
{
  return ODILocationBindingsName.init(rawValue:)(*a1);
}

unint64_t sub_214C62968@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ODILocationBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_214C62990()
{
  return sub_214D1A228();
}

uint64_t DeviceDataField.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDataField.fieldName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_214B6F6CC(v2, v3, v4);
}

void DeviceDataField.source.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

uint64_t DeviceDataField.priority.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t DeviceDataField.timeout.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t DeviceDataField.requiresEntitlements.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_214C62A5C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D614E646C656966;
      break;
    case 2:
      uint64_t result = 0x656372756F73;
      break;
    case 3:
      uint64_t result = 0x797469726F697270;
      break;
    case 4:
      uint64_t result = 0x4D74756F656D6974;
      break;
    case 5:
      uint64_t result = 0x67656C6976697270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C62B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6EA50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C62B60(uint64_t a1)
{
  unint64_t v2 = sub_214C671E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C62B9C(uint64_t a1)
{
  unint64_t v2 = sub_214C671E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeviceDataField.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4408);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C671E4();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v44 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v13 = v12;
  uint64_t v32 = v10;
  char v42 = 1;
  sub_214C67190();
  uint64_t v35 = v13;
  swift_bridgeObjectRetain();
  sub_214D1AA68();
  int v31 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = v43;
  char v38 = 0;
  char v40 = 2;
  sub_214C67238();
  sub_214D1AA68();
  char v14 = v41;
  char v39 = 3;
  uint64_t v15 = sub_214D1AA08();
  if (v16) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = v15;
  }
  char v37 = 4;
  uint64_t v18 = sub_214D1AA08();
  int v29 = v19;
  uint64_t v30 = v18;
  char v36 = 5;
  char v20 = sub_214D1A9E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  int v28 = v20 & 1;
  uint64_t v21 = v17;
  uint64_t v22 = v35;
  swift_bridgeObjectRetain();
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  char v25 = v31;
  sub_214B6F6CC(v34, v33, v31);
  swift_bridgeObjectRelease();
  *(void *)a2 = v32;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v23;
  *(unsigned char *)(a2 + 32) = v25;
  *(unsigned char *)(a2 + 33) = v14;
  uint64_t v26 = v30;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 56) = v29 & 1;
  *(unsigned char *)(a2 + 57) = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  char v27 = v38;
  swift_bridgeObjectRelease();
  return sub_214B6F6DC(v24, v23, v27);
}

uint64_t DeviceDataField.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = v8;
  int v25 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 33);
  uint64_t v21 = *(void *)(v1 + 40);
  uint64_t v18 = *(void *)(v1 + 48);
  LODWORD(v6) = *(unsigned __int8 *)(v1 + 56);
  int v16 = v8;
  int v17 = v6;
  v15[3] = *(unsigned __int8 *)(v1 + 57);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C671E4();
  sub_214D1AD88();
  LOBYTE(v23) = 0;
  uint64_t v9 = v22;
  sub_214D1AAF8();
  if (!v9)
  {
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    char v13 = v17;
    uint64_t v14 = v18;
    if (v25)
    {
      LOBYTE(v23) = 1;
      swift_bridgeObjectRetain();
      sub_214D1AAF8();
      sub_214B6F6DC(v12, v11, 1);
    }
    else
    {
      LOBYTE(v23) = v20;
      char v26 = 1;
      sub_214C672E0();
      sub_214D1AB38();
    }
    LOBYTE(v23) = v16;
    char v26 = 2;
    sub_214C6728C();
    sub_214D1AB38();
    LOBYTE(v23) = 3;
    sub_214D1AB28();
    uint64_t v23 = v14;
    char v24 = v13;
    char v26 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE39C8);
    sub_214C6FC28(&qword_26784E5F0, &qword_26ACE39C8);
    sub_214D1AB38();
    LOBYTE(v23) = 5;
    sub_214D1AB08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_214C63384(char a1, uint64_t a2)
{
  uint64_t v3 = 0xEA00000000007265;
  uint64_t v4 = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0xE900000000000065;
      uint64_t v4 = 0x6D614E646C656966;
      if (*(void *)(a2 + 16)) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x656372756F73;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 3:
      uint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x797469726F697270;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    case 4:
      uint64_t v3 = 0xEC000000696C6C69;
      uint64_t v4 = 0x4D74756F656D6974;
      goto LABEL_9;
    case 5:
      uint64_t v4 = 0x67656C6976697270;
      uint64_t v3 = 0xEA00000000006465;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
      goto LABEL_10;
    default:
LABEL_9:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_13;
      }
LABEL_10:
      uint64_t v6 = sub_214B87FEC(v4, v3);
      if (v7)
      {
        unint64_t v8 = *(void *)(*(void *)(a2 + 56) + 16 * v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_13:
        swift_bridgeObjectRelease();
        v10[0] = 154;
        v10[1] = 0xE000000000000000;
        sub_214D1A7A8();
        sub_214D1A108();
        sub_214C6B0AC();
        sub_214D1AB78();
        sub_214D1A108();
        swift_bridgeObjectRelease();
        unint64_t v8 = 0xE000000000000000;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)v10, 0, 0, 0xD00000000000005ALL, 0x8000000214D372D0, 0xD000000000000017, 0x8000000214D37710, 583);
        swift_bridgeObjectRelease();
        swift_willThrow();
      }
      return v8;
  }
}

uint64_t DeviceDataField.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 56);
  sub_214D1A7A8();
  sub_214D1A108();
  swift_bridgeObjectRetain();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214B6F6CC(v1, v2, v3);
  AssessmentConfigFieldName.description.getter();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214B6F6DC(v1, v2, v3);
  sub_214D1A108();
  sub_214D1A908();
  sub_214D1A108();
  sub_214D1AB78();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  if ((v4 & 1) == 0)
  {
    sub_214BB9438();
    sub_214D1A658();
  }
  sub_214D1A108();
  swift_bridgeObjectRelease();
  sub_214D1A108();
  sub_214D1A108();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t DeviceDataField.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  int v4 = *(unsigned __int8 *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  sub_214D1AD18();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_214D1A0D8();
    sub_214B6F6DC(v1, v2, 1);
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_214D1A0D8();
    swift_bridgeObjectRelease();
  }
  ArmandDataSource.rawValue.getter();
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  sub_214D1AD18();
  sub_214D1AD28();
  if (!v4) {
    sub_214D1AD18();
  }
  return sub_214D1AD28();
}

uint64_t DeviceDataField.hashValue.getter()
{
  return sub_214D1AD48();
}

uint64_t sub_214C63A40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceDataField.init(from:)(a1, a2);
}

uint64_t sub_214C63A58(void *a1)
{
  return DeviceDataField.encode(to:)(a1);
}

uint64_t sub_214C63A74()
{
  return sub_214D1AD48();
}

uint64_t sub_214C63AF4()
{
  return sub_214D1AD48();
}

uint64_t sub_214C63B70()
{
  uint64_t v1 = 0x6D614E646C656966;
  if (*v0 != 1) {
    uint64_t v1 = 0x656372756F73;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_214C63BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6ED04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C63BF8(uint64_t a1)
{
  unint64_t v2 = sub_214C71FC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C63C34(uint64_t a1)
{
  unint64_t v2 = sub_214C71FC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_214C63C70@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_214C6EE6C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

void *sub_214C63CB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  double result = sub_214C6F104(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_214C63CE0(unsigned __int8 *a1, char *a2)
{
  return sub_214C1CA54(*a1, *a2);
}

uint64_t sub_214C63CEC()
{
  return sub_214D1AD48();
}

uint64_t sub_214C63DE0()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C63EBC()
{
  return sub_214D1AD48();
}

uint64_t sub_214C63FAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C6E8CC();
  *a1 = result;
  return result;
}

void sub_214C63FE4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64756F6C4369;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x73656E755469;
      goto LABEL_3;
    case 2:
      *a1 = 0x64726143656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6D754E656E6F6870;
      a1[1] = 0xEB00000000726562;
      break;
    case 4:
      *a1 = 0x726F707075736E75;
      a1[1] = 0xEB00000000646574;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE600000000000000;
      break;
  }
}

uint64_t sub_214C6409C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_214B93DCC(a1, (uint64_t)v7);
  char v5 = sub_214C58A34(v7, 4u);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_214C64108()
{
  return sub_214D1A1D8();
}

uint64_t AssessmentConfig.Sources.init(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_214B93DCC(a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_214D1AD68();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_214D1ABE8();
    AssessmentConfig.Sources.init(rawValue:)(v8);
    if (v7 == 7) {
      char v6 = 6;
    }
    else {
      char v6 = v7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
  }
  return result;
}

CoreODIEssentials::AssessmentConfig::Sources_optional __swiftcall AssessmentConfig.Sources.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_214D1A998();
  result.Swift::Bool value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AssessmentConfig.Sources.rawValue.getter()
{
  uint64_t result = 0x73746E756F636341;
  switch(*v0)
  {
    case 3:
      uint64_t result = 0x656C655465726F43;
      break;
    case 4:
      uint64_t result = 0x797469746E656449;
      break;
    case 5:
      uint64_t result = 0x64726143654DLL;
      break;
    case 6:
      uint64_t result = 0x726F707075736E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_214C643B0(char a1)
{
  unint64_t result = 0x74616E6974736564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x5468736572666572;
      break;
    case 5:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 6:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 7:
      unint64_t result = 0x447972616D697270;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x696C6C694D616C73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_214C64548(char a1)
{
  unint64_t result = 0x74616E6974736564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x5468736572666572;
      break;
    case 5:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 6:
      unint64_t result = 0x4F646E6553657375;
      break;
    case 7:
      unint64_t result = 0x447972616D697270;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0x696C6C694D616C73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C646E0(unsigned __int8 *a1, char *a2)
{
  return sub_214C1CC14(*a1, *a2);
}

uint64_t sub_214C646EC()
{
  return sub_214C57920();
}

uint64_t sub_214C646F8()
{
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C64814()
{
  return sub_214C57920();
}

CoreODIEssentials::AssessmentConfig::Sources_optional sub_214C6481C(Swift::String *a1)
{
  return AssessmentConfig.Sources.init(rawValue:)(*a1);
}

void sub_214C64828(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF64756F6C43692ELL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x73746E756F636341;
      *(void *)(a1 + 8) = 0xEF73656E7554692ELL;
      break;
    case 3:
      strcpy((char *)a1, "CoreTelephony");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0x797469746E656449;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x64726143654DLL;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 6:
      *(void *)a1 = 0x726F707075736E75;
      *(void *)(a1 + 8) = 0xEB00000000646574;
      break;
    default:
LABEL_3:
      *(void *)a1 = 0x73746E756F636341;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_214C64928@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return AssessmentConfig.Sources.init(from:)(a1, a2);
}

uint64_t sub_214C64940()
{
  return sub_214D1A1D8();
}

uint64_t sub_214C64990(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_214C643B0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_214C643B0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_214D1ABC8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_214C64A1C()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214C643B0(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C64A80()
{
  sub_214C643B0(*v0);
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C64AD4()
{
  char v1 = *v0;
  sub_214D1AD08();
  sub_214C643B0(v1);
  sub_214D1A0D8();
  swift_bridgeObjectRelease();
  return sub_214D1AD48();
}

uint64_t sub_214C64B34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C6F524();
  *a1 = result;
  return result;
}

unint64_t sub_214C64B64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_214C643B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_214C64B90()
{
  return sub_214C64548(*v0);
}

uint64_t sub_214C64B98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_214C6F524();
  *a1 = result;
  return result;
}

void sub_214C64BC0(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_214C64BCC(uint64_t a1)
{
  unint64_t v2 = sub_214C674D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C64C08(uint64_t a1)
{
  unint64_t v2 = sub_214C674D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssessmentConfig.destinations.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_214B79260(v2, v3);
}

uint64_t AssessmentConfig.bindingsDictSource.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssessmentConfig.bindingsToCompare.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssessmentConfig.refreshTtl.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t AssessmentConfig.useSendOTD.getter()
{
  return *(unsigned __int8 *)(v0 + 97);
}

void AssessmentConfig.primaryDSID.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 98);
}

uint64_t *AssessmentConfig.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4410);
  uint64_t v6 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140, v7);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C674D4();
  sub_214D1AD78();
  if (v2) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v6;
  uint64_t v105 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42A8);
  LOBYTE(v106) = 1;
  sub_214C67630((unint64_t *)&unk_26ACE42B0, &qword_26ACE42A8, (void (*)(void))sub_214C67528);
  char v11 = v140;
  sub_214D1AA68();
  uint64_t v13 = v115;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4260);
  LOBYTE(v106) = 2;
  sub_214C6757C();
  swift_bridgeObjectRetain();
  sub_214D1AA68();
  uint64_t v101 = v10;
  uint64_t v102 = a1;
  LOBYTE(a1) = v11;
  uint64_t v14 = v115;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE42E0);
  uint64_t v103 = v9;
  LOBYTE(v106) = 3;
  sub_214C6FC28(&qword_26ACE42E8, &qword_26ACE42E0);
  swift_bridgeObjectRetain();
  sub_214D1AA18();
  uint64_t v15 = (void *)v115;
  if (!v115)
  {
    uint64_t v93 = v13;
    unint64_t v94 = 0;
    uint64_t v13 = v14 + 64;
    uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
    uint64_t v17 = -1;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    unint64_t v18 = v17 & *(void *)(v14 + 64);
    int64_t v104 = (unint64_t)(v16 + 63) >> 6;
    LODWORD(v19) = swift_bridgeObjectRetain_n();
    int64_t v20 = 0;
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    if (!v18) {
      goto LABEL_9;
    }
LABEL_8:
    unint64_t v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
    {
      a1 = (void *)v14;
      char v26 = (uint64_t *)(*(void *)(v14 + 48) + 16 * i);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      swift_bridgeObjectRetain();
      LODWORD(v19) = swift_isUniquelyReferenced_nonNull_native();
      if ((v19 & 1) == 0)
      {
        uint64_t v19 = sub_214B874BC(0, v15[2] + 1, 1, v15);
        uint64_t v15 = v19;
      }
      unint64_t v3 = v15[2];
      unint64_t v29 = v15[3];
      uint64_t v30 = v15;
      if (v3 >= v29 >> 1)
      {
        uint64_t v19 = sub_214B874BC((void *)(v29 > 1), v3 + 1, 1, v15);
        uint64_t v30 = v19;
      }
      _OWORD v30[2] = v3 + 1;
      uint64_t v15 = v30;
      int v31 = &v30[2 * v3];
      v31[4] = v28;
      v31[5] = v27;
      uint64_t v14 = (uint64_t)a1;
      if (v18) {
        goto LABEL_8;
      }
LABEL_9:
      int64_t v23 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v23 >= v104) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v13 + 8 * v23);
      ++v20;
      if (!v24)
      {
        int64_t v20 = v23 + 1;
        if (v23 + 1 >= v104) {
          goto LABEL_33;
        }
        unint64_t v24 = *(void *)(v13 + 8 * v20);
        if (!v24)
        {
          int64_t v20 = v23 + 2;
          if (v23 + 2 >= v104) {
            goto LABEL_33;
          }
          unint64_t v24 = *(void *)(v13 + 8 * v20);
          if (!v24)
          {
            int64_t v20 = v23 + 3;
            if (v23 + 3 >= v104) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v13 + 8 * v20);
            if (!v24)
            {
              int64_t v20 = v23 + 4;
              if (v23 + 4 >= v104) {
                goto LABEL_33;
              }
              unint64_t v24 = *(void *)(v13 + 8 * v20);
              if (!v24)
              {
                int64_t v25 = v23 + 5;
                if (v25 >= v104)
                {
LABEL_33:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v13 = v93;
                  unint64_t v3 = v94;
                  break;
                }
                unint64_t v24 = *(void *)(v13 + 8 * v25);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v20 = v25 + 1;
                    if (__OFADD__(v25, 1)) {
                      break;
                    }
                    if (v20 >= v104) {
                      goto LABEL_33;
                    }
                    unint64_t v24 = *(void *)(v13 + 8 * v20);
                    ++v25;
                    if (v24) {
                      goto LABEL_26;
                    }
                  }
                  __break(1u);
LABEL_82:
                  int v65 = (int)v19;
                  unsigned __int8 v66 = (v87 | v88) & 1;
                  int v87 = v66;
                  int v88 = (v85 | v18) & 1;
                  (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v140);
                  uint64_t v67 = v95;
                  *(void *)&long long v106 = v96;
                  *((void *)&v106 + 1) = v95;
                  *(void *)&long long v107 = v90;
                  *((void *)&v107 + 1) = v104;
                  *(void *)&long long v108 = v100;
                  *((void *)&v108 + 1) = v99;
                  *(void *)&long long v109 = v98;
                  *((void *)&v109 + 1) = v97;
                  *(void *)&long long v110 = v13;
                  *((void *)&v110 + 1) = v14;
                  uint64_t v93 = v13;
                  uint64_t v82 = v14;
                  long long v111 = v89;
                  LOBYTE(v112) = v66;
                  BYTE1(v112) = v88;
                  BYTE2(v112) = v86;
                  *((void *)&v112 + 1) = v92;
                  *(void *)&long long v113 = v91;
                  long long v84 = v15;
                  *((void *)&v113 + 1) = v15;
                  LOBYTE(v114) = (_BYTE)a1;
                  int v83 = v65;
                  HIBYTE(v114) = v65;
                  swift_bridgeObjectRetain();
                  sub_214C678A4((uint64_t *)&v106);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v68 = v96;
                  uint64_t v69 = v97;
                  uint64_t v70 = v67;
                  unint64_t v71 = v90;
                  int64_t v72 = v104;
                  uint64_t v74 = v99;
                  uint64_t v73 = v100;
                  uint64_t v75 = v98;
                  sub_214B7902C(v96, v70);
                  long long v76 = v113;
                  uint64_t v77 = v105;
                  *(_OWORD *)(v105 + 96) = v112;
                  *(_OWORD *)(v77 + 112) = v76;
                  *(_WORD *)(v77 + 128) = v114;
                  long long v78 = v109;
                  *(_OWORD *)(v77 + 32) = v108;
                  *(_OWORD *)(v77 + 48) = v78;
                  long long v79 = v111;
                  *(_OWORD *)(v77 + 64) = v110;
                  *(_OWORD *)(v77 + 80) = v79;
                  long long v80 = v107;
                  *(_OWORD *)uint64_t v77 = v106;
                  *(_OWORD *)(v77 + 16) = v80;
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
                  uint64_t v115 = v68;
                  uint64_t v116 = v95;
                  unint64_t v117 = v71;
                  int64_t v118 = v72;
                  uint64_t v119 = v73;
                  uint64_t v120 = v74;
                  uint64_t v121 = v75;
                  uint64_t v122 = v69;
                  uint64_t v123 = v93;
                  uint64_t v124 = v82;
                  long long v125 = v89;
                  char v126 = v87;
                  char v127 = v88;
                  char v128 = v86;
                  int v129 = v138;
                  char v130 = v139;
                  uint64_t v131 = v92;
                  uint64_t v132 = v91;
                  int v133 = v84;
                  char v134 = v137;
                  char v135 = v83;
                  return sub_214C67920(&v115);
                }
                int64_t v20 = v25;
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v18 = (v24 - 1) & v24;
    }
  }
  LOBYTE(v106) = 0;
  sub_214C6772C();
  uint64_t v32 = v140;
  uint64_t v33 = v103;
  sub_214D1AA18();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v101 + 8))(v33, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    char v34 = 0;
  }
  else
  {
    uint64_t v35 = v115;
    unint64_t v18 = v117;
    LOBYTE(v115) = 4;
    uint64_t v95 = v116;
    int64_t v104 = v118;
    uint64_t v99 = v120;
    uint64_t v100 = v119;
    uint64_t v97 = v122;
    uint64_t v98 = v121;
    sub_214B79260(v35, v116);
    uint64_t v36 = sub_214D1AA58();
    uint64_t v96 = v35;
    *((void *)&v89 + 1) = v36;
    unint64_t v90 = v18;
    LOBYTE(v115) = 5;
    int v37 = sub_214D1A9E8();
    unint64_t v3 = 0;
    *(void *)&long long v89 = v15;
    BOOL v38 = v37 == 2;
    LOBYTE(v115) = 6;
    LODWORD(v18) = v37;
    char v39 = sub_214D1A9E8();
    int v87 = v38;
    int v88 = v18;
    LOBYTE(v18) = v39;
    BOOL v40 = v39 == 2;
    LOBYTE(v106) = 7;
    sub_214C67780();
    sub_214D1AA18();
    int v41 = v115;
    if (v115 == 4) {
      int v41 = 0;
    }
    BOOL v85 = v40;
    int v86 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4250);
    LOBYTE(v106) = 8;
    sub_214C677D4();
    sub_214D1AA18();
LABEL_44:
    unint64_t v42 = v115;
    if (!v115) {
      unint64_t v42 = sub_214B7FC34(MEMORY[0x263F8EE78]);
    }
    uint64_t v43 = sub_214C66D3C(v42);
    swift_bridgeObjectRelease();
    LOBYTE(v106) = 9;
    uint64_t v92 = v43;
    swift_retain();
    uint64_t result = (uint64_t *)sub_214D1AA18();
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v140);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v44 = v95;
      sub_214B7902C(v96, v95);
    }
    else
    {
      if (!v115)
      {
        uint64_t v91 = 0;
LABEL_80:
        LOBYTE(v115) = 10;
        swift_bridgeObjectRetain();
        uint64_t v15 = (void *)sub_214D1AA08();
        LOBYTE(a1) = v64 & 1;
        char v137 = v64 & 1;
        char v136 = 11;
        LODWORD(v19) = sub_214D1A9E8();
        unint64_t v94 = 0;
        goto LABEL_82;
      }
      int64_t v45 = 0;
      uint64_t v46 = v115 + 64;
      uint64_t v47 = 1 << *(unsigned char *)(v115 + 32);
      uint64_t v48 = -1;
      if (v47 < 64) {
        uint64_t v48 = ~(-1 << v47);
      }
      unint64_t v49 = v48 & *(void *)(v115 + 64);
      int64_t v50 = (unint64_t)(v47 + 63) >> 6;
      do
      {
LABEL_52:
        if (v49)
        {
          unint64_t v51 = __clz(__rbit64(v49));
          v49 &= v49 - 1;
          unint64_t v52 = v51 | (v45 << 6);
        }
        else
        {
          int64_t v53 = v45 + 1;
          if (__OFADD__(v45, 1))
          {
            __break(1u);
LABEL_85:
            __break(1u);
            return result;
          }
          if (v53 >= v50) {
            goto LABEL_83;
          }
          unint64_t v54 = *(void *)(v46 + 8 * v53);
          ++v45;
          if (!v54)
          {
            int64_t v45 = v53 + 1;
            if (v53 + 1 >= v50) {
              goto LABEL_83;
            }
            unint64_t v54 = *(void *)(v46 + 8 * v45);
            if (!v54)
            {
              int64_t v45 = v53 + 2;
              if (v53 + 2 >= v50) {
                goto LABEL_83;
              }
              unint64_t v54 = *(void *)(v46 + 8 * v45);
              if (!v54)
              {
                int64_t v45 = v53 + 3;
                if (v53 + 3 >= v50) {
                  goto LABEL_83;
                }
                unint64_t v54 = *(void *)(v46 + 8 * v45);
                if (!v54)
                {
                  int64_t v45 = v53 + 4;
                  if (v53 + 4 >= v50) {
                    goto LABEL_83;
                  }
                  unint64_t v54 = *(void *)(v46 + 8 * v45);
                  if (!v54)
                  {
                    int64_t v55 = v53 + 5;
                    if (v55 >= v50)
                    {
LABEL_83:
                      uint64_t v91 = sub_214C66D3C(v115);
                      swift_bridgeObjectRelease();
                      goto LABEL_80;
                    }
                    unint64_t v54 = *(void *)(v46 + 8 * v55);
                    if (!v54)
                    {
                      while (1)
                      {
                        int64_t v45 = v55 + 1;
                        if (__OFADD__(v55, 1)) {
                          goto LABEL_85;
                        }
                        if (v45 >= v50) {
                          goto LABEL_83;
                        }
                        unint64_t v54 = *(void *)(v46 + 8 * v45);
                        ++v55;
                        if (v54) {
                          goto LABEL_71;
                        }
                      }
                    }
                    int64_t v45 = v55;
                  }
                }
              }
            }
          }
LABEL_71:
          unint64_t v49 = (v54 - 1) & v54;
          unint64_t v52 = __clz(__rbit64(v54)) + (v45 << 6);
        }
        uint64_t v56 = *(void *)(*(void *)(v115 + 56) + 8 * v52);
        uint64_t v57 = *(void *)(v56 + 16);
      }
      while (!v57);
      uint64_t v58 = (unsigned char *)(v56 + 88);
      while ((*v58 & 1) == 0)
      {
        v58 += 64;
        if (!--v57) {
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v59 = v95;
      sub_214B7902C(v96, v95);
      uint64_t v60 = sub_214D1A7F8();
      swift_allocError();
      uint64_t v62 = v61;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26784E5C8);
      *uint64_t v62 = MEMORY[0x263F8D310];
      sub_214D1A7E8();
      uint64_t v63 = v62;
      uint64_t v44 = v59;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v60 - 8) + 104))(v63, *MEMORY[0x263F8DCB0], v60);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v140);
    }
    char v34 = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    sub_214B7902C(v96, v44);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
  if (v34) {
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AssessmentConfig.encode(to:)()
{
  unsigned __int8 v1 = 80;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000034, 0x8000000214D37440, 0, &v1, 0, 0, 0xD00000000000005ALL, 0x8000000214D372D0, 0x742865646F636E65, 0xEB00000000293A6FLL, 794);
  return swift_willThrow();
}

uint64_t *sub_214C65C14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssessmentConfig.init(from:)(a1, a2);
}

uint64_t sub_214C65C2C()
{
  return AssessmentConfig.encode(to:)();
}

uint64_t AssessmentServerDestinations.otd.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssessmentServerDestinations.tsidEncryptionCert.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_214C65CA4()
{
  unint64_t result = 6582895;
  switch(*v0)
  {
    case 1:
      unint64_t result = 6583407;
      break;
    case 2:
      unint64_t result = 6581359;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C65D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_214C6F618(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_214C65D40(uint64_t a1)
{
  unint64_t v2 = sub_214C6799C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_214C65D7C(uint64_t a1)
{
  unint64_t v2 = sub_214C6799C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssessmentServerDestinations.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E600);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[2];
  v13[5] = v1[3];
  v13[6] = v8;
  uint64_t v9 = v1[4];
  void v13[3] = v1[5];
  void v13[4] = v9;
  uint64_t v10 = v1[6];
  v13[1] = v1[7];
  void v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6799C();
  sub_214D1AD88();
  char v17 = 0;
  uint64_t v11 = v13[7];
  sub_214D1AAF8();
  if (!v11)
  {
    char v16 = 1;
    sub_214D1AAF8();
    char v15 = 2;
    sub_214D1AAF8();
    char v14 = 3;
    sub_214D1AAF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t AssessmentServerDestinations.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4428);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6799C();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v32 = 0;
  uint64_t v10 = sub_214D1AA28();
  uint64_t v12 = v11;
  uint64_t v27 = v10;
  char v31 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_214D1AA28();
  uint64_t v28 = v14;
  uint64_t v26 = v13;
  char v30 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_214D1AA28();
  uint64_t v25 = v15;
  char v29 = 3;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_214D1AA28();
  uint64_t v19 = v18;
  int64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v16;
  v20(v9, v5);
  swift_bridgeObjectRetain();
  uint64_t v21 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v12;
  uint64_t v22 = v25;
  a2[2] = v26;
  a2[3] = v21;
  a2[4] = v24;
  a2[5] = v22;
  a2[6] = v23;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C662EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentServerDestinations.init(from:)(a1, a2);
}

uint64_t sub_214C66304(void *a1)
{
  return AssessmentServerDestinations.encode(to:)(a1);
}

void *sub_214C6631C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4480);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_214C66384(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_214C665D4(a1, a2, a3);
}

unsigned __int8 *sub_214C6639C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_214D1A1B8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_214C66850();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_214D1A818();
  }
LABEL_7:
  uint64_t v11 = sub_214C665D4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_214C66484()
{
  unint64_t result = qword_26ACE36E0;
  if (!qword_26ACE36E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36E0);
  }
  return result;
}

unint64_t sub_214C664D8()
{
  unint64_t result = qword_26ACE3878;
  if (!qword_26ACE3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3878);
  }
  return result;
}

unint64_t sub_214C6652C()
{
  unint64_t result = qword_26ACE38C0;
  if (!qword_26ACE38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38C0);
  }
  return result;
}

unint64_t sub_214C66580()
{
  unint64_t result = qword_26ACE40C8;
  if (!qword_26ACE40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40C8);
  }
  return result;
}

unsigned __int8 *sub_214C665D4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_214C66850()
{
  unint64_t v0 = sub_214D1A1C8();
  uint64_t v4 = sub_214C668D0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_214C668D0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_214C66A28(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_214C6631C(v9, 0);
      unint64_t v12 = sub_214C66B28((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_214D1A818();
LABEL_4:
        JUMPOUT(0x2166AFB90);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2166AFB90](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2166AFB90]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_214C66A28(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_214B57CF0(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_214B57CF0(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_214C66B28(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    void v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_214B57CF0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_214D1A168();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_214D1A818();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_214B57CF0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_214D1A138();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_214C66D3C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE43C8);
  uint64_t result = sub_214D1A958();
  unint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = 8 * i;
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    uint64_t v19 = *v16;
    uint64_t result = v16[1];
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v20 = (void *)(v3[6] + 16 * i);
    *char v20 = v19;
    v20[1] = result;
    *(void *)(v3[7] + v17) = v18;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s17CoreODIEssentials25AssessmentConfigFieldNameO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 16))
    {
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_214D1ABC8();
      }
      sub_214B6F6CC(v6, v5, 1);
      sub_214B6F6CC(v3, v2, 1);
      sub_214B6F6DC(v3, v2, 1);
      uint64_t v14 = v6;
      uint64_t v15 = v5;
      char v16 = 1;
LABEL_18:
      sub_214B6F6DC(v14, v15, v16);
      return v9 & 1;
    }
    swift_bridgeObjectRetain();
  }
  else if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    unint64_t v10 = ArmandDeviceDataFieldName.rawValue.getter();
    uint64_t v12 = v11;
    if (v10 == ArmandDeviceDataFieldName.rawValue.getter() && v12 == v13) {
      char v9 = 1;
    }
    else {
      char v9 = sub_214D1ABC8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_214B6F6DC(v3, v2, 0);
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    char v16 = 0;
    goto LABEL_18;
  }
  sub_214B6F6CC(v6, v5, v7);
  sub_214B6F6DC(v3, v2, v4);
  sub_214B6F6DC(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

unint64_t sub_214C67094()
{
  unint64_t result = qword_26784E5C0;
  if (!qword_26784E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E5C0);
  }
  return result;
}

unint64_t sub_214C670E8()
{
  unint64_t result = qword_26784E5D0;
  if (!qword_26784E5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E5D0);
  }
  return result;
}

unint64_t sub_214C6713C()
{
  unint64_t result = qword_26784E5D8;
  if (!qword_26784E5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E5D8);
  }
  return result;
}

unint64_t sub_214C67190()
{
  unint64_t result = qword_26ACE4180;
  if (!qword_26ACE4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4180);
  }
  return result;
}

unint64_t sub_214C671E4()
{
  unint64_t result = qword_26ACE4068;
  if (!qword_26ACE4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4068);
  }
  return result;
}

unint64_t sub_214C67238()
{
  unint64_t result = qword_26ACE4090;
  if (!qword_26ACE4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4090);
  }
  return result;
}

unint64_t sub_214C6728C()
{
  unint64_t result = qword_26784E5E8;
  if (!qword_26784E5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E5E8);
  }
  return result;
}

unint64_t sub_214C672E0()
{
  unint64_t result = qword_26784E5F8;
  if (!qword_26784E5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E5F8);
  }
  return result;
}

uint64_t _s17CoreODIEssentials15DeviceDataFieldV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 32);
  char v5 = *((unsigned char *)a1 + 33);
  uint64_t v6 = a1[5];
  char v23 = *((unsigned char *)a1 + 56);
  int v7 = *((unsigned __int8 *)a1 + 57);
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  char v10 = *((unsigned char *)a2 + 32);
  char v11 = *((unsigned char *)a2 + 33);
  uint64_t v12 = a2[5];
  uint64_t v21 = a2[6];
  uint64_t v22 = a1[6];
  unsigned int v24 = *((unsigned __int8 *)a2 + 56);
  int v13 = *((unsigned __int8 *)a2 + 57);
  long long v27 = *((_OWORD *)a1 + 1);
  char v28 = v4;
  long long v25 = *((_OWORD *)a2 + 1);
  char v26 = v10;
  if ((_s17CoreODIEssentials25AssessmentConfigFieldNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v27, (uint64_t)&v25) & 1) == 0) {
    return 0;
  }
  if (v2 == v8 && v3 == v9)
  {
    uint64_t result = 0;
  }
  else
  {
    char v15 = sub_214D1ABC8();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  if (v6 == v12 && ((v7 ^ v13) & 1) == 0)
  {
    LOBYTE(v27) = v5;
    LOBYTE(v25) = v11;
    unint64_t v16 = ArmandDataSource.rawValue.getter();
    uint64_t v18 = v17;
    if (v16 == ArmandDataSource.rawValue.getter() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
      uint64_t result = v24;
      if (v23) {
        return result;
      }
    }
    else
    {
      int v20 = sub_214D1ABC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23 & 1 | ((v20 & 1) == 0)) {
        return v20 & v24;
      }
    }
    return (v22 == v21) & ~v24;
  }
  return result;
}

unint64_t sub_214C674D4()
{
  unint64_t result = qword_26ACE4098;
  if (!qword_26ACE4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4098);
  }
  return result;
}

unint64_t sub_214C67528()
{
  unint64_t result = qword_26ACE40B8;
  if (!qword_26ACE40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40B8);
  }
  return result;
}

unint64_t sub_214C6757C()
{
  unint64_t result = qword_26ACE4268;
  if (!qword_26ACE4268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4260);
    sub_214C67630(&qword_26ACE42F8, &qword_26ACE42F0, (void (*)(void))sub_214C6769C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4268);
  }
  return result;
}

uint64_t sub_214C67630(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_214C6769C()
{
  return sub_214C67630(&qword_26ACE42A0, &qword_26ACE4298, (void (*)(void))sub_214C676D8);
}

unint64_t sub_214C676D8()
{
  unint64_t result = qword_26ACE40B0;
  if (!qword_26ACE40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40B0);
  }
  return result;
}

unint64_t sub_214C6772C()
{
  unint64_t result = qword_26ACE41A0;
  if (!qword_26ACE41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE41A0);
  }
  return result;
}

unint64_t sub_214C67780()
{
  unint64_t result = qword_26ACE41E8;
  if (!qword_26ACE41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE41E8);
  }
  return result;
}

unint64_t sub_214C677D4()
{
  unint64_t result = qword_26ACE4258;
  if (!qword_26ACE4258)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26ACE4250);
    sub_214C67850();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4258);
  }
  return result;
}

unint64_t sub_214C67850()
{
  unint64_t result = qword_26ACE40E8;
  if (!qword_26ACE40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40E8);
  }
  return result;
}

uint64_t *sub_214C678A4(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_214C67920(uint64_t *a1)
{
  return a1;
}

unint64_t sub_214C6799C()
{
  unint64_t result = qword_26ACE4188;
  if (!qword_26ACE4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4188);
  }
  return result;
}

unint64_t sub_214C679F4()
{
  unint64_t result = qword_26784E608;
  if (!qword_26784E608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E608);
  }
  return result;
}

unint64_t sub_214C67A4C()
{
  unint64_t result = qword_26784E610;
  if (!qword_26784E610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E610);
  }
  return result;
}

unint64_t sub_214C67AA4()
{
  unint64_t result = qword_26784E618;
  if (!qword_26784E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E618);
  }
  return result;
}

unint64_t sub_214C67AFC()
{
  unint64_t result = qword_26784E620;
  if (!qword_26784E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E620);
  }
  return result;
}

unint64_t sub_214C67B54()
{
  unint64_t result = qword_26784E628;
  if (!qword_26784E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E628);
  }
  return result;
}

unint64_t sub_214C67BAC()
{
  unint64_t result = qword_26784E630;
  if (!qword_26784E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E630);
  }
  return result;
}

unint64_t sub_214C67C04()
{
  unint64_t result = qword_26784E638;
  if (!qword_26784E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E638);
  }
  return result;
}

unint64_t sub_214C67C5C()
{
  unint64_t result = qword_26784E640;
  if (!qword_26784E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E640);
  }
  return result;
}

unint64_t sub_214C67CB4()
{
  unint64_t result = qword_26784E648;
  if (!qword_26784E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E648);
  }
  return result;
}

unint64_t sub_214C67D0C()
{
  unint64_t result = qword_26784E650;
  if (!qword_26784E650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E650);
  }
  return result;
}

unint64_t sub_214C67D64()
{
  unint64_t result = qword_26784E658;
  if (!qword_26784E658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E658);
  }
  return result;
}

unint64_t sub_214C67DBC()
{
  unint64_t result = qword_26784E660;
  if (!qword_26784E660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E660);
  }
  return result;
}

uint64_t type metadata accessor for RequestHeader()
{
  return self;
}

uint64_t type metadata accessor for GenericResponse()
{
  return self;
}

uint64_t type metadata accessor for DIPWebRequest()
{
  return self;
}

uint64_t type metadata accessor for AppleCredentials()
{
  return self;
}

uint64_t type metadata accessor for DIPAppleWebRequest()
{
  return self;
}

ValueMetadata *type metadata accessor for TrainingSignalId()
{
  return &type metadata for TrainingSignalId;
}

ValueMetadata *type metadata accessor for AssessmentGUIDContainer()
{
  return &type metadata for AssessmentGUIDContainer;
}

ValueMetadata *type metadata accessor for TSID()
{
  return &type metadata for TSID;
}

ValueMetadata *type metadata accessor for DUATaskType()
{
  return &type metadata for DUATaskType;
}

uint64_t destroy for AugmentedProfile()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AugmentedProfile(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AugmentedProfile(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

void *assignWithTake for AugmentedProfile(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

uint64_t getEnumTagSinglePayload for AugmentedProfile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AugmentedProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AugmentedProfile()
{
  return &type metadata for AugmentedProfile;
}

ValueMetadata *type metadata accessor for DsidType()
{
  return &type metadata for DsidType;
}

ValueMetadata *type metadata accessor for ArmandDataSource()
{
  return &type metadata for ArmandDataSource;
}

uint64_t destroy for AssessmentConfigFieldName(uint64_t a1)
{
  return sub_214B6F6DC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s17CoreODIEssentials25AssessmentConfigFieldNameOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214B6F6CC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AssessmentConfigFieldName(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_214B6F6CC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_214B6F6DC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AssessmentConfigFieldName(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_214B6F6DC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentConfigFieldName(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentConfigFieldName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_214C68358(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_214C68360(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName()
{
  return &type metadata for AssessmentConfigFieldName;
}

uint64_t getEnumTagSinglePayload for ArmandDeviceDataFieldName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArmandDeviceDataFieldName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C684D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataFieldName()
{
  return &type metadata for ArmandDeviceDataFieldName;
}

ValueMetadata *type metadata accessor for ODIComputableBindingsName()
{
  return &type metadata for ODIComputableBindingsName;
}

ValueMetadata *type metadata accessor for ODIFormattedPhoneNumberBindings()
{
  return &type metadata for ODIFormattedPhoneNumberBindings;
}

unsigned char *storeEnumTagSinglePayload for ODIGeocoderBindingsName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C68608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIGeocoderBindingsName()
{
  return &type metadata for ODIGeocoderBindingsName;
}

ValueMetadata *type metadata accessor for ODIDeviceSettingsBindingsName()
{
  return &type metadata for ODIDeviceSettingsBindingsName;
}

ValueMetadata *type metadata accessor for ODILocationBindingsName()
{
  return &type metadata for ODILocationBindingsName;
}

uint64_t destroy for DeviceDataField(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  return sub_214B6F6DC(v2, v3, v4);
}

uint64_t initializeWithCopy for DeviceDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_214B6F6CC(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for DeviceDataField(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_214B6F6CC(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_214B6F6DC(v7, v8, v9);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_214B6F6DC(v6, v7, v8);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDataField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 58)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDataField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 58) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDataField()
{
  return &type metadata for DeviceDataField;
}

uint64_t destroy for AssessmentConfig(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v13;
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentConfig(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214C68C7C(a1);
      long long v5 = a2[3];
      long long v7 = *a2;
      long long v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(unsigned char *)(a1 + 97) = *((unsigned char *)a2 + 97);
  *(unsigned char *)(a1 + 98) = *((unsigned char *)a2 + 98);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)a2 + 15);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
  return a1;
}

uint64_t sub_214C68C7C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy130_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for AssessmentConfig(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_214C68C7C(a1);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 130)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 130) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 130) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfig()
{
  return &type metadata for AssessmentConfig;
}

uint64_t getEnumTagSinglePayload for AssessmentConfig.Sources(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssessmentConfig.Sources(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C69008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfig.Sources()
{
  return &type metadata for AssessmentConfig.Sources;
}

ValueMetadata *type metadata accessor for AssessmentServerDestinations()
{
  return &type metadata for AssessmentServerDestinations;
}

uint64_t destroy for ResponseHeader()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResponseHeader(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResponseHeader(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ResponseHeader(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseHeader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseHeader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseHeader()
{
  return &type metadata for ResponseHeader;
}

uint64_t destroy for ORDRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160) != 1) {
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t initializeWithCopy for ORDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v16;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v14;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v17 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v17;
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ORDRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (long long *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 32);
      long long v7 = *(_OWORD *)(a2 + 80);
      long long v9 = *v5;
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v7;
      *uint64_t v4 = v9;
      *(_OWORD *)(a1 + 48) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 48);
    long long v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *uint64_t v4 = v10;
    *(_OWORD *)(a1 + 48) = v11;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (long long *)(a1 + 128);
  uint64_t v14 = (long long *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 144);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *uint64_t v13 = v16;
      *(_OWORD *)(a1 + 144) = v17;
    }
    else
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      uint64_t v20 = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 136) = v20;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_214B78054(a1 + 128);
    uint64_t v18 = *(void *)(a2 + 160);
    long long v19 = *(_OWORD *)(a2 + 144);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 144) = v19;
    *(void *)(a1 + 160) = v18;
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    uint64_t v21 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  uint64_t v22 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v22;
  uint64_t v23 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v23;
  return a1;
}

__n128 __swift_memcpy209_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for ORDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214B78000(a1 + 32);
  }
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
LABEL_6:
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 160) != 1)
  {
    uint64_t v14 = *(void *)(a2 + 160);
    if (v14 != 1)
    {
      uint64_t v16 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v16;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214B78054(a1 + 128);
  }
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_11:
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for ORDRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 209)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ORDRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ORDRequest()
{
  return &type metadata for ORDRequest;
}

uint64_t destroy for OTDRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 192) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OTDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  uint64_t v14 = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v14 == 1)
  {
    long long v15 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v15;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v16;
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v14;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  uint64_t v18 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v18;
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  uint64_t v19 = *(void *)(a2 + 272);
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = v19;
  *(void *)(a1 + 280) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OTDRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (long long *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 24);
      long long v7 = *(_OWORD *)(a2 + 72);
      long long v9 = *v5;
      long long v8 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v7;
      *uint64_t v4 = v9;
      *(_OWORD *)(a1 + 40) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 40);
    long long v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    *uint64_t v4 = v10;
    *(_OWORD *)(a1 + 40) = v11;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  uint64_t v13 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = (long long *)(a1 + 160);
  long long v15 = (long long *)(a2 + 160);
  uint64_t v16 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192) == 1)
  {
    if (v16 == 1)
    {
      long long v17 = *v15;
      long long v18 = *(_OWORD *)(a2 + 176);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *uint64_t v14 = v17;
      *(_OWORD *)(a1 + 176) = v18;
    }
    else
    {
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      uint64_t v21 = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 168) = v21;
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_214B78054(a1 + 160);
    uint64_t v19 = *(void *)(a2 + 192);
    long long v20 = *(_OWORD *)(a2 + 176);
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 176) = v20;
    *(void *)(a1 + 192) = v19;
  }
  else
  {
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    uint64_t v22 = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 168) = v22;
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(void *)(a1 + 200) = v23;
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v24;
  uint64_t v25 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v25;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for OTDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (*(void *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a2 + 32);
    if (v5)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214B78000(a1 + 24);
  }
  long long v9 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v9;
  long long v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v10;
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  if (*(void *)(a1 + 192) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 192);
    if (v13 != 1)
    {
      uint64_t v15 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v15;
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_214B78054(a1 + 160);
  }
  long long v14 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v14;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
LABEL_11:
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v17 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OTDRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OTDRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OTDRequest()
{
  return &type metadata for OTDRequest;
}

uint64_t destroy for ODNErrorInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNErrorInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNErrorInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNErrorInfo()
{
  return &type metadata for ODNErrorInfo;
}

ValueMetadata *type metadata accessor for AssessmentServerDestinations.CodingKeys()
{
  return &type metadata for AssessmentServerDestinations.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceFieldsList()
{
  return &type metadata for DeviceFieldsList;
}

ValueMetadata *type metadata accessor for AssessmentConfig.Triggers()
{
  return &type metadata for AssessmentConfig.Triggers;
}

unsigned char *_s17CoreODIEssentials25ODIComputableBindingsNameOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C6A56CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfig.CodingKeys()
{
  return &type metadata for AssessmentConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceDataField.CodingKeys()
{
  return &type metadata for DeviceDataField.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.CodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.DeviceDataFieldCodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.BindingsFieldCodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys;
}

unsigned char *_s17CoreODIEssentials16AssessmentConfigV8TriggersOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C6A6BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AugmentedProfile.CodingKeys()
{
  return &type metadata for AugmentedProfile.CodingKeys;
}

ValueMetadata *type metadata accessor for TSID.CodingKeys()
{
  return &type metadata for TSID.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentGUIDContainer.CodingKeys()
{
  return &type metadata for AssessmentGUIDContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for TrainingSignalId.CodingKeys()
{
  return &type metadata for TrainingSignalId.CodingKeys;
}

uint64_t destroy for AssessmentAdditionalInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v7;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentAdditionalInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentAdditionalInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentAdditionalInfo()
{
  return &type metadata for AssessmentAdditionalInfo;
}

unint64_t sub_214C6AB2C()
{
  unint64_t result = qword_26784E668;
  if (!qword_26784E668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E668);
  }
  return result;
}

unint64_t sub_214C6AB84()
{
  unint64_t result = qword_26784E670;
  if (!qword_26784E670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E670);
  }
  return result;
}

unint64_t sub_214C6ABDC()
{
  unint64_t result = qword_26784E678;
  if (!qword_26784E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E678);
  }
  return result;
}

unint64_t sub_214C6AC34()
{
  unint64_t result = qword_26784E680;
  if (!qword_26784E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E680);
  }
  return result;
}

unint64_t sub_214C6AC8C()
{
  unint64_t result = qword_26784E688;
  if (!qword_26784E688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E688);
  }
  return result;
}

unint64_t sub_214C6ACE4()
{
  unint64_t result = qword_26784E690;
  if (!qword_26784E690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E690);
  }
  return result;
}

unint64_t sub_214C6AD3C()
{
  unint64_t result = qword_26784E698;
  if (!qword_26784E698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E698);
  }
  return result;
}

unint64_t sub_214C6AD94()
{
  unint64_t result = qword_26784E6A0;
  if (!qword_26784E6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6A0);
  }
  return result;
}

unint64_t sub_214C6ADEC()
{
  unint64_t result = qword_26784E6A8;
  if (!qword_26784E6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6A8);
  }
  return result;
}

unint64_t sub_214C6AE44()
{
  unint64_t result = qword_26784E6B0;
  if (!qword_26784E6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6B0);
  }
  return result;
}

unint64_t sub_214C6AE9C()
{
  unint64_t result = qword_26784E6B8;
  if (!qword_26784E6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6B8);
  }
  return result;
}

unint64_t sub_214C6AEF4()
{
  unint64_t result = qword_26ACE4198;
  if (!qword_26ACE4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4198);
  }
  return result;
}

unint64_t sub_214C6AF4C()
{
  unint64_t result = qword_26ACE4190;
  if (!qword_26ACE4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4190);
  }
  return result;
}

unint64_t sub_214C6AFA4()
{
  unint64_t result = qword_26ACE40A8;
  if (!qword_26ACE40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40A8);
  }
  return result;
}

unint64_t sub_214C6AFFC()
{
  unint64_t result = qword_26ACE40A0;
  if (!qword_26ACE40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40A0);
  }
  return result;
}

unint64_t sub_214C6B054()
{
  unint64_t result = qword_26ACE4078;
  if (!qword_26ACE4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4078);
  }
  return result;
}

unint64_t sub_214C6B0AC()
{
  unint64_t result = qword_26ACE4070;
  if (!qword_26ACE4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4070);
  }
  return result;
}

unint64_t sub_214C6B104()
{
  unint64_t result = qword_26784E6C0;
  if (!qword_26784E6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6C0);
  }
  return result;
}

unint64_t sub_214C6B15C()
{
  unint64_t result = qword_26784E6C8;
  if (!qword_26784E6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6C8);
  }
  return result;
}

unint64_t sub_214C6B1B4()
{
  unint64_t result = qword_26784E6D0;
  if (!qword_26784E6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6D0);
  }
  return result;
}

unint64_t sub_214C6B20C()
{
  unint64_t result = qword_26784E6D8;
  if (!qword_26784E6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6D8);
  }
  return result;
}

unint64_t sub_214C6B264()
{
  unint64_t result = qword_26784E6E0;
  if (!qword_26784E6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6E0);
  }
  return result;
}

unint64_t sub_214C6B2BC()
{
  unint64_t result = qword_26784E6E8;
  if (!qword_26784E6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6E8);
  }
  return result;
}

unint64_t sub_214C6B314()
{
  unint64_t result = qword_26ACE40D8;
  if (!qword_26ACE40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40D8);
  }
  return result;
}

unint64_t sub_214C6B36C()
{
  unint64_t result = qword_26ACE40D0;
  if (!qword_26ACE40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE40D0);
  }
  return result;
}

unint64_t sub_214C6B3C4()
{
  unint64_t result = qword_26ACE38D0;
  if (!qword_26ACE38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38D0);
  }
  return result;
}

unint64_t sub_214C6B41C()
{
  unint64_t result = qword_26ACE38C8;
  if (!qword_26ACE38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE38C8);
  }
  return result;
}

unint64_t sub_214C6B474()
{
  unint64_t result = qword_26ACE3888;
  if (!qword_26ACE3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3888);
  }
  return result;
}

unint64_t sub_214C6B4CC()
{
  unint64_t result = qword_26ACE3880;
  if (!qword_26ACE3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3880);
  }
  return result;
}

unint64_t sub_214C6B524()
{
  unint64_t result = qword_26ACE36F0;
  if (!qword_26ACE36F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36F0);
  }
  return result;
}

unint64_t sub_214C6B57C()
{
  unint64_t result = qword_26ACE36E8;
  if (!qword_26ACE36E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE36E8);
  }
  return result;
}

uint64_t sub_214C6B5D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_214B93298();
  uint64_t v7 = (void *)sub_214D199A8();
  id v8 = objc_msgSend(v7, sel_domain);
  uint64_t v9 = sub_214D1A038();
  uint64_t v11 = v10;

  if (v9 == 0x726F72724549444FLL && v11 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    id v15 = objc_msgSend(v7, sel_code);

    ODIErrorCode.init(rawValue:)((Swift::Int)v15);
    if (v23 == 209) {
      int v14 = 0;
    }
    else {
      int v14 = v23;
    }
    if (!v6) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  char v13 = sub_214D1ABC8();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_9;
  }

  int v14 = 0;
  if (!v6)
  {
LABEL_7:
    long long v23 = 0u;
    long long v24 = 0u;
    goto LABEL_20;
  }
LABEL_13:
  if (!*(void *)(v6 + 16) || (uint64_t v16 = sub_214B88018(13), (v17 & 1) == 0))
  {
    long long v23 = 0u;
    long long v24 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_214B5EC30(*(void *)(v6 + 56) + 32 * v16, (uint64_t)&v23);
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1))
  {
LABEL_20:
    uint64_t result = sub_214B5ECF4((uint64_t)&v23);
    uint64_t v19 = 0;
    char v20 = 1;
    goto LABEL_21;
  }
  uint64_t result = swift_dynamicCast();
  uint64_t v19 = v22;
  if (!result) {
    uint64_t v19 = 0;
  }
  char v20 = result ^ 1;
LABEL_21:
  uint64_t v21 = -1;
  switch(v14)
  {
    case 1:
      uint64_t v21 = -2;
      break;
    case 2:
      uint64_t v21 = -3;
      break;
    case 3:
      uint64_t v21 = -4;
      break;
    case 4:
      uint64_t v21 = -5;
      break;
    case 5:
      uint64_t v21 = -6;
      break;
    case 6:
      uint64_t v21 = -7;
      break;
    case 7:
      uint64_t v21 = -8;
      break;
    case 8:
      uint64_t v21 = -9;
      break;
    case 9:
      uint64_t v21 = -10;
      break;
    case 10:
      uint64_t v21 = -11;
      break;
    case 11:
      uint64_t v21 = -12;
      break;
    case 12:
      uint64_t v21 = -13;
      break;
    case 13:
      uint64_t v21 = -14;
      break;
    case 14:
      uint64_t v21 = -15;
      break;
    case 15:
      uint64_t v21 = -16;
      break;
    case 16:
      uint64_t v21 = -17;
      break;
    case 17:
      uint64_t v21 = -18;
      break;
    case 18:
      uint64_t v21 = -19;
      break;
    case 19:
      uint64_t v21 = -20;
      break;
    case 20:
      uint64_t v21 = -21;
      break;
    case 21:
      uint64_t v21 = -22;
      break;
    case 22:
      uint64_t v21 = -28;
      break;
    case 23:
      uint64_t v21 = -29;
      break;
    case 24:
      uint64_t v21 = 200;
      break;
    case 25:
      uint64_t v21 = 20000;
      break;
    case 26:
      uint64_t v21 = 20001;
      break;
    case 27:
      uint64_t v21 = 20100;
      break;
    case 28:
      uint64_t v21 = 40000;
      break;
    case 29:
      uint64_t v21 = 40010;
      break;
    case 30:
      uint64_t v21 = 40011;
      break;
    case 31:
      uint64_t v21 = 40012;
      break;
    case 32:
      uint64_t v21 = 40013;
      break;
    case 33:
      uint64_t v21 = 40014;
      break;
    case 34:
      uint64_t v21 = 40015;
      break;
    case 35:
      uint64_t v21 = 40020;
      break;
    case 36:
      uint64_t v21 = 40021;
      break;
    case 37:
      uint64_t v21 = 40022;
      break;
    case 38:
      uint64_t v21 = 40023;
      break;
    case 39:
      uint64_t v21 = 40024;
      break;
    case 40:
      uint64_t v21 = 40025;
      break;
    case 41:
      uint64_t v21 = 40026;
      break;
    case 42:
      uint64_t v21 = 40027;
      break;
    case 43:
      uint64_t v21 = 40028;
      break;
    case 44:
      uint64_t v21 = 40029;
      break;
    case 45:
      uint64_t v21 = 40030;
      break;
    case 46:
      uint64_t v21 = 40101;
      break;
    case 47:
      uint64_t v21 = 40102;
      break;
    case 48:
      uint64_t v21 = 40200;
      break;
    case 49:
      uint64_t v21 = 40201;
      break;
    case 50:
      uint64_t v21 = 40205;
      break;
    case 51:
      uint64_t v21 = 40401;
      break;
    case 52:
      uint64_t v21 = 40402;
      break;
    case 53:
      uint64_t v21 = 40403;
      break;
    case 54:
      uint64_t v21 = 40404;
      break;
    case 55:
      uint64_t v21 = 40500;
      break;
    case 56:
      uint64_t v21 = 40600;
      break;
    case 57:
      uint64_t v21 = 40601;
      break;
    case 58:
      uint64_t v21 = 50000;
      break;
    case 59:
      uint64_t v21 = 50001;
      break;
    case 60:
      uint64_t v21 = 50002;
      break;
    case 61:
      uint64_t v21 = 99991;
      break;
    case 62:
      uint64_t v21 = 99992;
      break;
    case 63:
      uint64_t v21 = 99993;
      break;
    case 64:
      uint64_t v21 = -1101;
      break;
    case 65:
      uint64_t v21 = -1102;
      break;
    case 66:
      uint64_t v21 = -1103;
      break;
    case 67:
      uint64_t v21 = -1104;
      break;
    case 68:
      uint64_t v21 = -1110;
      break;
    case 69:
      uint64_t v21 = -1111;
      break;
    case 70:
      uint64_t v21 = -1112;
      break;
    case 71:
      uint64_t v21 = -1113;
      break;
    case 72:
      uint64_t v21 = -1114;
      break;
    case 73:
      uint64_t v21 = -1115;
      break;
    case 74:
      uint64_t v21 = -1116;
      break;
    case 75:
      uint64_t v21 = -1117;
      break;
    case 76:
      uint64_t v21 = -1118;
      break;
    case 77:
      uint64_t v21 = -1119;
      break;
    case 78:
      uint64_t v21 = -1201;
      break;
    case 79:
      uint64_t v21 = -1202;
      break;
    case 80:
      uint64_t v21 = -1203;
      break;
    case 81:
      uint64_t v21 = -1204;
      break;
    case 82:
      uint64_t v21 = -1402;
      break;
    case 83:
      uint64_t v21 = -1403;
      break;
    case 84:
      uint64_t v21 = -1404;
      break;
    case 85:
      uint64_t v21 = -1301;
      break;
    case 86:
      uint64_t v21 = -1302;
      break;
    case 87:
      uint64_t v21 = -1303;
      break;
    case 88:
      uint64_t v21 = -1304;
      break;
    case 89:
      uint64_t v21 = -1305;
      break;
    case 90:
      uint64_t v21 = -1306;
      break;
    case 91:
      uint64_t v21 = -1307;
      break;
    case 92:
      uint64_t v21 = -1308;
      break;
    case 93:
      uint64_t v21 = -1309;
      break;
    case 94:
      uint64_t v21 = -1310;
      break;
    case 95:
      uint64_t v21 = -1315;
      break;
    case 96:
      uint64_t v21 = -1316;
      break;
    case 97:
      uint64_t v21 = -1317;
      break;
    case 98:
      uint64_t v21 = -131600;
      break;
    case 99:
      uint64_t v21 = -2103;
      break;
    case 100:
      uint64_t v21 = -2104;
      break;
    case 101:
      uint64_t v21 = -2107;
      break;
    case 102:
      uint64_t v21 = -2110;
      break;
    case 103:
      uint64_t v21 = -2111;
      break;
    case 104:
      uint64_t v21 = -2112;
      break;
    case 105:
      uint64_t v21 = -2123;
      break;
    case 106:
      uint64_t v21 = -2124;
      break;
    case 107:
      uint64_t v21 = -2125;
      break;
    case 108:
      uint64_t v21 = -2126;
      break;
    case 109:
      uint64_t v21 = -2127;
      break;
    case 110:
      uint64_t v21 = -3101;
      break;
    case 111:
      uint64_t v21 = -3102;
      break;
    case 112:
      uint64_t v21 = -3103;
      break;
    case 113:
      uint64_t v21 = -3104;
      break;
    case 114:
      uint64_t v21 = -3105;
      break;
    case 115:
      uint64_t v21 = -3106;
      break;
    case 116:
      uint64_t v21 = -3107;
      break;
    case 117:
      uint64_t v21 = -3108;
      break;
    case 118:
      uint64_t v21 = -3109;
      break;
    case 119:
      uint64_t v21 = -3110;
      break;
    case 120:
      uint64_t v21 = -3111;
      break;
    case 121:
      uint64_t v21 = -3112;
      break;
    case 122:
      uint64_t v21 = -3113;
      break;
    case 123:
      uint64_t v21 = -3151;
      break;
    case 124:
      uint64_t v21 = -3152;
      break;
    case 125:
      uint64_t v21 = -3153;
      break;
    case 126:
      uint64_t v21 = -3154;
      break;
    case 127:
      uint64_t v21 = -3155;
      break;
    case 128:
      uint64_t v21 = -3156;
      break;
    case 129:
      uint64_t v21 = -3157;
      break;
    case 130:
      uint64_t v21 = -3158;
      break;
    case 131:
      uint64_t v21 = -3159;
      break;
    case 132:
      uint64_t v21 = -3161;
      break;
    case 133:
      uint64_t v21 = -3162;
      break;
    case 134:
      uint64_t v21 = -3163;
      break;
    case 135:
      uint64_t v21 = -3164;
      break;
    case 136:
      uint64_t v21 = -3165;
      break;
    case 137:
      uint64_t v21 = -3166;
      break;
    case 138:
      uint64_t v21 = -3167;
      break;
    case 139:
      uint64_t v21 = -3168;
      break;
    case 140:
      uint64_t v21 = -3169;
      break;
    case 141:
      uint64_t v21 = -3170;
      break;
    case 142:
      uint64_t v21 = -3171;
      break;
    case 143:
      uint64_t v21 = -3172;
      break;
    case 144:
      uint64_t v21 = -3173;
      break;
    case 145:
      uint64_t v21 = -3174;
      break;
    case 146:
      uint64_t v21 = -3175;
      break;
    case 147:
      uint64_t v21 = -3176;
      break;
    case 148:
      uint64_t v21 = -3177;
      break;
    case 149:
      uint64_t v21 = -3178;
      break;
    case 150:
      uint64_t v21 = -3179;
      break;
    case 151:
      uint64_t v21 = -3180;
      break;
    case 152:
      uint64_t v21 = -3181;
      break;
    case 153:
      uint64_t v21 = -3182;
      break;
    case 154:
      uint64_t v21 = -3183;
      break;
    case 155:
      uint64_t v21 = -3184;
      break;
    case 156:
      uint64_t v21 = -3185;
      break;
    case 157:
      uint64_t v21 = -3186;
      break;
    case 158:
      uint64_t v21 = -3187;
      break;
    case 159:
      uint64_t v21 = -3188;
      break;
    case 160:
      uint64_t v21 = -3189;
      break;
    case 161:
      uint64_t v21 = -3300;
      break;
    case 162:
      uint64_t v21 = -5108;
      break;
    case 163:
      uint64_t v21 = -6009;
      break;
    case 164:
      uint64_t v21 = -6010;
      break;
    case 165:
      uint64_t v21 = -6102;
      break;
    case 166:
      uint64_t v21 = -6103;
      break;
    case 167:
      uint64_t v21 = -6104;
      break;
    case 168:
      uint64_t v21 = -6105;
      break;
    case 169:
      uint64_t v21 = -8001;
      break;
    case 170:
      uint64_t v21 = -8301;
      break;
    case 171:
      uint64_t v21 = -8304;
      break;
    case 172:
      uint64_t v21 = -8400;
      break;
    case 173:
      uint64_t v21 = -8401;
      break;
    case 174:
      uint64_t v21 = -8403;
      break;
    case 175:
      uint64_t v21 = -8404;
      break;
    case 176:
      uint64_t v21 = -8428;
      break;
    case 177:
      uint64_t v21 = -8429;
      break;
    case 178:
      uint64_t v21 = -8433;
      break;
    case 179:
      uint64_t v21 = -8434;
      break;
    case 180:
      uint64_t v21 = -8500;
      break;
    case 181:
      uint64_t v21 = -8501;
      break;
    case 182:
      uint64_t v21 = -8502;
      break;
    case 183:
      uint64_t v21 = -8503;
      break;
    case 184:
      uint64_t v21 = -8504;
      break;
    case 185:
      uint64_t v21 = -22200;
      break;
    case 186:
      uint64_t v21 = -22201;
      break;
    case 187:
      uint64_t v21 = -22202;
      break;
    case 188:
      uint64_t v21 = -22203;
      break;
    case 189:
      uint64_t v21 = -22204;
      break;
    case 190:
      uint64_t v21 = -22205;
      break;
    case 191:
      uint64_t v21 = -22206;
      break;
    case 192:
      uint64_t v21 = -22207;
      break;
    case 193:
      uint64_t v21 = -22208;
      break;
    case 194:
      uint64_t v21 = -72200;
      break;
    case 195:
      uint64_t v21 = -72201;
      break;
    case 196:
      uint64_t v21 = -72202;
      break;
    case 197:
      uint64_t v21 = -72203;
      break;
    case 198:
      uint64_t v21 = -72204;
      break;
    case 199:
      uint64_t v21 = -72205;
      break;
    case 200:
      uint64_t v21 = -72206;
      break;
    case 201:
      uint64_t v21 = -72207;
      break;
    case 202:
      uint64_t v21 = -72208;
      break;
    case 203:
      uint64_t v21 = -72209;
      break;
    case 204:
      uint64_t v21 = -72210;
      break;
    case 205:
      uint64_t v21 = -72211;
      break;
    case 206:
      uint64_t v21 = -72780;
      break;
    case 207:
      uint64_t v21 = -72781;
      break;
    case 208:
      uint64_t v21 = -72782;
      break;
    default:
      break;
  }
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v19;
  *(unsigned char *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = a1;
  *(void *)(a3 + 32) = a2;
  return result;
}

uint64_t sub_214C6C214(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214C6C338(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xE900000000000064 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEA00000000006449 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7574617453627573 && a2 == 0xED000065646F4373 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x654D737574617473 && a2 == 0xED00006567617373)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_214C6C644@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E730);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6F8E0();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v42 = 0;
  uint64_t v10 = sub_214D1A9D8();
  uint64_t v12 = v11;
  char v41 = 1;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_214D1AA28();
  char v40 = 2;
  uint64_t v36 = v13;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_214D1AA28();
  uint64_t v35 = v15;
  uint64_t v31 = v14;
  char v39 = 3;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v30 = sub_214D1AA28();
  char v38 = 4;
  uint64_t v33 = v16;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_214D1A9D8();
  uint64_t v29 = v17;
  char v37 = 5;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_214D1A9D8();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v32 = v18;
  v21(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v22 = v29;
  swift_bridgeObjectRelease();
  uint64_t v23 = v33;
  swift_bridgeObjectRelease();
  uint64_t v24 = v35;
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v34;
  a2[3] = v25;
  a2[4] = v31;
  a2[5] = v24;
  a2[6] = v30;
  a2[7] = v23;
  a2[8] = v28;
  a2[9] = v22;
  a2[10] = v32;
  a2[11] = v20;
  return result;
}

uint64_t sub_214C6CAD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7A69726F68747561 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E49746E65696C63 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214C6CC58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D375D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214C6CD48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D737365737361 && a2 == 0xEF646975675F746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214C6CE60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x776F6C666B726F77 && a2 == 0xEA00000000006449;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000064 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65674172657375 && a2 == 0xE900000000000074 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D2D880 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000214D37840 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x8000000214D37870 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x42676E697373696DLL && a2 == 0xEF73676E69646E69 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000214D378A0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000214D378C0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6567416568636163 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6563697665447369 && a2 == 0xEE0064656B636F4CLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_214C6D300(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6C79615069646FLL && a2 == 0xEA00000000006461;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214C6D4F0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000214D37730 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461645F617564 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5F656C69666F7270 && a2 == 0xEA00000000006469 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D2D7C0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x8000000214D2D820 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x8000000214D2D7E0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x5F64616F6C796170 && a2 == 0xEE006572756E6574)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_214C6D918(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F7272655F766469 && a2 == 0xE900000000000072;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7272655F6E646FLL && a2 == 0xE900000000000072 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214C6DAA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E7A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C6FAD8();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v10 = sub_214D1AA58();
  char v21 = 1;
  uint64_t v11 = sub_214D1AA08();
  int v19 = v12;
  char v20 = 2;
  uint64_t v13 = sub_214D1A9D8();
  uint64_t v14 = v9;
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v19 & 1;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_214C6DC84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632436 && a2 == 0xE400000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F6E6F6973736573 && a2 == 0xEA00000000006469 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6F6E5F7374 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214C6DDD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x695F747365676964 && a2 == 0xEC0000007865646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214C6DEE4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E9D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C72018();
  sub_214D1AD78();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    uint64_t v8 = sub_214D1AA28();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_214D1AA58();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_214C6E0D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461645F617564 && a2 == 0xE800000000000000;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079745F6B736174 && a2 == 0xE900000000000065 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D2D7C0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_214C6E294(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F635F64697374 && a2 == 0xEE0072656E696174;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461645F617564 && a2 == 0xEC0000006775615FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D2D7C0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000214D37750 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x8000000214D37780 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xEF676E696D69745FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xED0000657079745FLL || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000214D377C0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D377E0 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000214D37800 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D37820)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_214C6E8CC()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_214C6E914(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144656369766564 && a2 == 0xEF646C6569466174;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73676E69646E6962 && a2 == 0xED0000646C656946)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_214C6EA50(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4D74756F656D6974 && a2 == 0xEC000000696C6C69 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67656C6976697270 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_214C6ED04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_214C6EE6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26784E988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214C71FC4();
  sub_214D1AD78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_214D1A9D8();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_214D1A9D8();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_214D1A9D8();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

void *sub_214C6F104(void *a1)
{
  uint64_t v2 = (uint64_t)a1;
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_214D1AD58();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v35, v36);
    char v4 = sub_214D1ABA8();
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    if ((v4 & 1) == 0)
    {
      uint64_t v23 = v2;
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
        sub_214C6F570();
        sub_214D1AB98();
        uint64_t v5 = v25;
        uint64_t v6 = v26;
        uint64_t v7 = v27;
        uint64_t v8 = v28;
        char v9 = v29;
        int v10 = v30;
        uint64_t v11 = v31;
        uint64_t v22 = v32;
        char v20 = v34;
        char v21 = v33;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        LODWORD(v37) = v10;
        char v24 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v3 = sub_214B87144(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        uint64_t v15 = v3;
        uint64_t v16 = v11;
        if (v14 >= v13 >> 1) {
          uint64_t v15 = sub_214B87144((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        uint64_t v17 = v15;
        uint64_t v15[2] = v14 + 1;
        uint64_t v18 = &v15[8 * v14];
        v18[4] = v5;
        v18[5] = v6;
        v18[6] = v7;
        void v18[7] = v8;
        *((unsigned char *)v18 + 64) = v24;
        *((unsigned char *)v18 + 65) = v37;
        v18[9] = v16;
        v18[10] = v22;
        *((unsigned char *)v18 + 88) = v21;
        *((unsigned char *)v18 + 89) = v20;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        uint64_t v3 = v17;
        uint64_t v2 = v23;
      }
      while ((sub_214D1ABA8() & 1) == 0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  return v3;
}

uint64_t sub_214C6F524()
{
  unint64_t v0 = sub_214D1A998();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

unint64_t sub_214C6F570()
{
  unint64_t result = qword_26ACE4080;
  if (!qword_26ACE4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4080);
  }
  return result;
}

unint64_t sub_214C6F5C4()
{
  unint64_t result = qword_26784E6F0;
  if (!qword_26784E6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E6F0);
  }
  return result;
}

uint64_t sub_214C6F618(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 6582895 && a2 == 0xE300000000000000;
  if (v3 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6583407 && a2 == 0xE300000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6581359 && a2 == 0xE300000000000000 || (sub_214D1ABC8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000214D37650)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_214D1ABC8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_214C6F790()
{
  unint64_t result = qword_26784E700;
  if (!qword_26784E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E700);
  }
  return result;
}

unint64_t sub_214C6F7E4()
{
  unint64_t result = qword_26784E710;
  if (!qword_26784E710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E710);
  }
  return result;
}

unint64_t sub_214C6F838()
{
  unint64_t result = qword_26784E718;
  if (!qword_26784E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E718);
  }
  return result;
}

unint64_t sub_214C6F88C()
{
  unint64_t result = qword_26784E728;
  if (!qword_26784E728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E728);
  }
  return result;
}

unint64_t sub_214C6F8E0()
{
  unint64_t result = qword_26784E738;
  if (!qword_26784E738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E738);
  }
  return result;
}

unint64_t sub_214C6F934()
{
  unint64_t result = qword_26784E750;
  if (!qword_26784E750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E750);
  }
  return result;
}

unint64_t sub_214C6F988()
{
  unint64_t result = qword_26784E760;
  if (!qword_26784E760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E760);
  }
  return result;
}

unint64_t sub_214C6F9DC()
{
  unint64_t result = qword_26784E770;
  if (!qword_26784E770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E770);
  }
  return result;
}

unint64_t sub_214C6FA30()
{
  unint64_t result = qword_26784E778;
  if (!qword_26784E778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E778);
  }
  return result;
}

unint64_t sub_214C6FA84()
{
  unint64_t result = qword_26784E798;
  if (!qword_26784E798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E798);
  }
  return result;
}

unint64_t sub_214C6FAD8()
{
  unint64_t result = qword_26784E7A8;
  if (!qword_26784E7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7A8);
  }
  return result;
}

unint64_t sub_214C6FB2C()
{
  unint64_t result = qword_26784E7B8;
  if (!qword_26784E7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7B8);
  }
  return result;
}

unint64_t sub_214C6FB80()
{
  unint64_t result = qword_26784E7C8;
  if (!qword_26784E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7C8);
  }
  return result;
}

unint64_t sub_214C6FBD4()
{
  unint64_t result = qword_26784E7D0;
  if (!qword_26784E7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7D0);
  }
  return result;
}

uint64_t sub_214C6FC28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214C6FC88()
{
  unint64_t result = qword_26784E7E0;
  if (!qword_26784E7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7E0);
  }
  return result;
}

unint64_t sub_214C6FCDC()
{
  unint64_t result = qword_26784E7F0;
  if (!qword_26784E7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E7F0);
  }
  return result;
}

unint64_t sub_214C6FD30()
{
  unint64_t result = qword_26784E800;
  if (!qword_26784E800)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26784E7F8);
    sub_214C6FE28(&qword_26784E808, (void (*)(void))type metadata accessor for AppleCredentials);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E800);
  }
  return result;
}

unint64_t sub_214C6FDD4()
{
  unint64_t result = qword_26784E820;
  if (!qword_26784E820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E820);
  }
  return result;
}

uint64_t sub_214C6FE28(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_214C6FE6C()
{
  unint64_t result = qword_26784E838;
  if (!qword_26784E838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E838);
  }
  return result;
}

unint64_t sub_214C6FEC0()
{
  unint64_t result = qword_26784E848;
  if (!qword_26784E848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E848);
  }
  return result;
}

unint64_t sub_214C6FF14()
{
  unint64_t result = qword_26784E850;
  if (!qword_26784E850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E850);
  }
  return result;
}

unint64_t sub_214C6FF68()
{
  unint64_t result = qword_26784E858;
  if (!qword_26784E858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E858);
  }
  return result;
}

unint64_t sub_214C6FFBC()
{
  unint64_t result = qword_26784E860;
  if (!qword_26784E860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E860);
  }
  return result;
}

unint64_t sub_214C70010()
{
  unint64_t result = qword_26784E868;
  if (!qword_26784E868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E868);
  }
  return result;
}

unint64_t sub_214C70064()
{
  unint64_t result = qword_26784E870;
  if (!qword_26784E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E870);
  }
  return result;
}

unint64_t sub_214C700B8()
{
  unint64_t result = qword_26ACE4178;
  if (!qword_26ACE4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4178);
  }
  return result;
}

unint64_t sub_214C7010C()
{
  unint64_t result = qword_26ACE4088;
  if (!qword_26ACE4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4088);
  }
  return result;
}

unint64_t sub_214C70160()
{
  unint64_t result = qword_26784E878;
  if (!qword_26784E878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E878);
  }
  return result;
}

unint64_t sub_214C701B4()
{
  unint64_t result = qword_26ACE3608;
  if (!qword_26ACE3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3608);
  }
  return result;
}

ValueMetadata *type metadata accessor for GetSTSResponse()
{
  return &type metadata for GetSTSResponse;
}

ValueMetadata *type metadata accessor for GetProfileResponse()
{
  return &type metadata for GetProfileResponse;
}

uint64_t initializeWithCopy for DUADataAug(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DUADataAug(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DUADataAug(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DUADataAug(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DUADataAug(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DUADataAug()
{
  return &type metadata for DUADataAug;
}

ValueMetadata *type metadata accessor for DIPWebRequest.CodingKeys()
{
  return &type metadata for DIPWebRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for DIPAppleWebRequest.CodingKeys()
{
  return &type metadata for DIPAppleWebRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AssessmentAdditionalInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C704D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentAdditionalInfo.CodingKeys()
{
  return &type metadata for AssessmentAdditionalInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for ODNErrorInfo.CodingKeys()
{
  return &type metadata for ODNErrorInfo.CodingKeys;
}

unsigned char *_s17CoreODIEssentials16ArmandDataSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *__n128 result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C705E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OTDRequest.CodingKeys()
{
  return &type metadata for OTDRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ORDRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ORDRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C70778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ORDRequest.CodingKeys()
{
  return &type metadata for ORDRequest.CodingKeys;
}

unsigned char *_s17CoreODIEssentials15DeviceDataFieldV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C7087CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseHeader.CodingKeys()
{
  return &type metadata for ResponseHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleCredentials.CodingKeys()
{
  return &type metadata for AppleCredentials.CodingKeys;
}

ValueMetadata *type metadata accessor for GenericResponse.CodingKeys()
{
  return &type metadata for GenericResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestHeader.CodingKeys()
{
  return &type metadata for RequestHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceFieldsList.RelaxedDeviceDataField()
{
  return &type metadata for DeviceFieldsList.RelaxedDeviceDataField;
}

uint64_t destroy for ODIWrappedAssessment(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[14] != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[16];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 112);
  if (v11 != 1)
  {
    uint64_t v20 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v20;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = *(void *)(a2 + 128);
    if (v13) {
      goto LABEL_6;
    }
LABEL_8:
    long long v21 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v21;
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    long long v22 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v22;
    long long v23 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v23;
    long long v24 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v24;
    return a1;
  }
  long long v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 128);
  if (!v13) {
    goto LABEL_8;
  }
LABEL_6:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  uint64_t v18 = *(void *)(a2 + 184);
  uint64_t v17 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 184) = v18;
  *(void *)(a1 + 192) = v17;
  uint64_t v19 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v19;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (long long *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_214B78000(a1 + 16);
      long long v7 = *(_OWORD *)(a2 + 64);
      long long v9 = *v5;
      long long v8 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *uint64_t v4 = v9;
      *(_OWORD *)(a1 + 32) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v12;
    *uint64_t v4 = v10;
    *(_OWORD *)(a1 + 32) = v11;
  }
  uint64_t v13 = (long long *)(a1 + 80);
  uint64_t v14 = (long long *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 96);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *uint64_t v13 = v16;
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v20 = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 88) = v20;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_214B78054(a1 + 80);
    uint64_t v18 = *(void *)(a2 + 112);
    long long v19 = *(_OWORD *)(a2 + 96);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 96) = v19;
    *(void *)(a1 + 112) = v18;
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v21 = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 88) = v21;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  long long v22 = (_OWORD *)(a1 + 120);
  long long v23 = (_OWORD *)(a2 + 120);
  uint64_t v24 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v24)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_retain();
      swift_release();
      uint64_t v25 = *(void *)(a2 + 192);
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 192) = v25;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    }
    else
    {
      sub_214C70FE8(a1 + 120);
      *long long v22 = *v23;
      long long v27 = *(_OWORD *)(a2 + 184);
      long long v29 = *(_OWORD *)(a2 + 136);
      long long v28 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v27;
      *(_OWORD *)(a1 + 136) = v29;
      *(_OWORD *)(a1 + 152) = v28;
      long long v31 = *(_OWORD *)(a2 + 216);
      long long v30 = *(_OWORD *)(a2 + 232);
      long long v32 = *(_OWORD *)(a2 + 200);
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v31;
      *(_OWORD *)(a1 + 232) = v30;
      *(_OWORD *)(a1 + 200) = v32;
    }
  }
  else if (v24)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v26 = *(void *)(a2 + 192);
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)(a1 + 192) = v26;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v22 = *v23;
    long long v33 = *(_OWORD *)(a2 + 136);
    long long v34 = *(_OWORD *)(a2 + 152);
    long long v35 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v35;
    *(_OWORD *)(a1 + 136) = v33;
    *(_OWORD *)(a1 + 152) = v34;
    long long v36 = *(_OWORD *)(a2 + 200);
    long long v37 = *(_OWORD *)(a2 + 216);
    long long v38 = *(_OWORD *)(a2 + 232);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 232) = v38;
    *(_OWORD *)(a1 + 200) = v36;
  }
  return a1;
}

uint64_t sub_214C70FE8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy249_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(_OWORD *)(a1 + 233) = *(long long *)((char *)a2 + 233);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_214B78000(a1 + 16);
  }
  long long v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v9;
  long long v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
LABEL_6:
  if (*(void *)(a1 + 112) == 1)
  {
LABEL_9:
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    goto LABEL_11;
  }
  uint64_t v11 = *(void *)(a2 + 112);
  if (v11 == 1)
  {
    sub_214B78054(a1 + 80);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
LABEL_11:
  if (!*(void *)(a1 + 128))
  {
LABEL_15:
    long long v19 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v19;
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    long long v20 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v20;
    long long v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v21;
    long long v22 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v22;
    return a1;
  }
  uint64_t v14 = *(void *)(a2 + 128);
  if (!v14)
  {
    sub_214C70FE8(a1 + 120);
    goto LABEL_15;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIWrappedAssessment(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 249)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIWrappedAssessment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 248) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 249) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 249) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIWrappedAssessment()
{
  return &type metadata for ODIWrappedAssessment;
}

void *sub_214C71350(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TSIDContainer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for TSIDContainer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TSIDContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TSIDContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TSIDContainer()
{
  return &type metadata for TSIDContainer;
}

unint64_t sub_214C714D0()
{
  unint64_t result = qword_26784E880;
  if (!qword_26784E880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E880);
  }
  return result;
}

unint64_t sub_214C71528()
{
  unint64_t result = qword_26784E888;
  if (!qword_26784E888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E888);
  }
  return result;
}

unint64_t sub_214C71580()
{
  unint64_t result = qword_26784E890;
  if (!qword_26784E890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E890);
  }
  return result;
}

unint64_t sub_214C715D8()
{
  unint64_t result = qword_26784E898;
  if (!qword_26784E898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E898);
  }
  return result;
}

unint64_t sub_214C71630()
{
  unint64_t result = qword_26784E8A0;
  if (!qword_26784E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8A0);
  }
  return result;
}

unint64_t sub_214C71688()
{
  unint64_t result = qword_26784E8A8;
  if (!qword_26784E8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8A8);
  }
  return result;
}

unint64_t sub_214C716E0()
{
  unint64_t result = qword_26784E8B0;
  if (!qword_26784E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8B0);
  }
  return result;
}

unint64_t sub_214C71738()
{
  unint64_t result = qword_26784E8B8;
  if (!qword_26784E8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8B8);
  }
  return result;
}

unint64_t sub_214C71790()
{
  unint64_t result = qword_26784E8C0;
  if (!qword_26784E8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8C0);
  }
  return result;
}

unint64_t sub_214C717E8()
{
  unint64_t result = qword_26784E8C8;
  if (!qword_26784E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8C8);
  }
  return result;
}

unint64_t sub_214C71840()
{
  unint64_t result = qword_26784E8D0;
  if (!qword_26784E8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8D0);
  }
  return result;
}

unint64_t sub_214C71898()
{
  unint64_t result = qword_26784E8D8;
  if (!qword_26784E8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8D8);
  }
  return result;
}

unint64_t sub_214C718F0()
{
  unint64_t result = qword_26784E8E0;
  if (!qword_26784E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8E0);
  }
  return result;
}

unint64_t sub_214C71948()
{
  unint64_t result = qword_26784E8E8;
  if (!qword_26784E8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8E8);
  }
  return result;
}

unint64_t sub_214C719A0()
{
  unint64_t result = qword_26784E8F0;
  if (!qword_26784E8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8F0);
  }
  return result;
}

unint64_t sub_214C719F8()
{
  unint64_t result = qword_26784E8F8;
  if (!qword_26784E8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E8F8);
  }
  return result;
}

unint64_t sub_214C71A50()
{
  unint64_t result = qword_26784E900;
  if (!qword_26784E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E900);
  }
  return result;
}

unint64_t sub_214C71AA8()
{
  unint64_t result = qword_26784E908;
  if (!qword_26784E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E908);
  }
  return result;
}

unint64_t sub_214C71B00()
{
  unint64_t result = qword_26784E910;
  if (!qword_26784E910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E910);
  }
  return result;
}

unint64_t sub_214C71B58()
{
  unint64_t result = qword_26784E918;
  if (!qword_26784E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E918);
  }
  return result;
}

unint64_t sub_214C71BB0()
{
  unint64_t result = qword_26784E920;
  if (!qword_26784E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E920);
  }
  return result;
}

unint64_t sub_214C71C08()
{
  unint64_t result = qword_26784E928;
  if (!qword_26784E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E928);
  }
  return result;
}

unint64_t sub_214C71C60()
{
  unint64_t result = qword_26784E930;
  if (!qword_26784E930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E930);
  }
  return result;
}

unint64_t sub_214C71CB8()
{
  unint64_t result = qword_26784E938;
  if (!qword_26784E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E938);
  }
  return result;
}

unint64_t sub_214C71D10()
{
  unint64_t result = qword_26784E940;
  if (!qword_26784E940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E940);
  }
  return result;
}

unint64_t sub_214C71D68()
{
  unint64_t result = qword_26784E948;
  if (!qword_26784E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E948);
  }
  return result;
}

unint64_t sub_214C71DC0()
{
  unint64_t result = qword_26784E950;
  if (!qword_26784E950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E950);
  }
  return result;
}

unint64_t sub_214C71E18()
{
  unint64_t result = qword_26784E958;
  if (!qword_26784E958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E958);
  }
  return result;
}

unint64_t sub_214C71E70()
{
  unint64_t result = qword_26784E960;
  if (!qword_26784E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E960);
  }
  return result;
}

unint64_t sub_214C71EC8()
{
  unint64_t result = qword_26784E968;
  if (!qword_26784E968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E968);
  }
  return result;
}

unint64_t sub_214C71F1C()
{
  unint64_t result = qword_26784E978;
  if (!qword_26784E978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E978);
  }
  return result;
}

unint64_t sub_214C71F70()
{
  unint64_t result = qword_26784E980;
  if (!qword_26784E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E980);
  }
  return result;
}

unint64_t sub_214C71FC4()
{
  unint64_t result = qword_26784E990;
  if (!qword_26784E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E990);
  }
  return result;
}

unint64_t sub_214C72018()
{
  unint64_t result = qword_26784E9A0;
  if (!qword_26784E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9A0);
  }
  return result;
}

unint64_t sub_214C7206C()
{
  unint64_t result = qword_26ACE35C0;
  if (!qword_26ACE35C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE35C0);
  }
  return result;
}

unint64_t sub_214C720C0()
{
  unint64_t result = qword_26784E9B0;
  if (!qword_26784E9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9B0);
  }
  return result;
}

unint64_t sub_214C72114()
{
  unint64_t result = qword_26ACE3600;
  if (!qword_26ACE3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE3600);
  }
  return result;
}

unint64_t sub_214C72168()
{
  unint64_t result = qword_26ACE4110;
  if (!qword_26ACE4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4110);
  }
  return result;
}

unint64_t sub_214C721BC()
{
  unint64_t result = qword_26ACE4040;
  if (!qword_26ACE4040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4040);
  }
  return result;
}

unint64_t sub_214C72210()
{
  unint64_t result = qword_26784E9D0;
  if (!qword_26784E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9D0);
  }
  return result;
}

void *sub_214C72264(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[2];
  uint64_t v8 = a1[11];
  uint64_t v9 = a1[10];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v5 = a1[14];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[15];
  swift_bridgeObjectRetain();
  sub_214B79260(v4, v3);
  sub_214B792C4(v9, v8, v7, v6, v5);
  sub_214C7239C(v11, v10);
  return a1;
}

uint64_t sub_214C7239C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for GetSTSResponse.CodingKeys()
{
  return &type metadata for GetSTSResponse.CodingKeys;
}

unsigned char *_s17CoreODIEssentials25AssessmentConfigFieldNameO25DeviceDataFieldCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x214C724D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GetProfileResponse.CodingKeys()
{
  return &type metadata for GetProfileResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for DUADataAug.CodingKeys()
{
  return &type metadata for DUADataAug.CodingKeys;
}

unsigned char *_s17CoreODIEssentials11DUATaskTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C725ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TSIDContainer.CodingKeys()
{
  return &type metadata for TSIDContainer.CodingKeys;
}

unsigned char *_s17CoreODIEssentials31ODIFormattedPhoneNumberBindingsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C726F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys()
{
  return &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys;
}

unsigned char *_s17CoreODIEssentials8DsidTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C727F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIWrappedAssessment.CodingKeys()
{
  return &type metadata for ODIWrappedAssessment.CodingKeys;
}

unint64_t sub_214C72830()
{
  unint64_t result = qword_26784E9E0;
  if (!qword_26784E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9E0);
  }
  return result;
}

unint64_t sub_214C72888()
{
  unint64_t result = qword_26784E9E8;
  if (!qword_26784E9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9E8);
  }
  return result;
}

unint64_t sub_214C728E0()
{
  unint64_t result = qword_26784E9F0;
  if (!qword_26784E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9F0);
  }
  return result;
}

unint64_t sub_214C72938()
{
  unint64_t result = qword_26784E9F8;
  if (!qword_26784E9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784E9F8);
  }
  return result;
}

unint64_t sub_214C72990()
{
  unint64_t result = qword_26784EA00;
  if (!qword_26784EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA00);
  }
  return result;
}

unint64_t sub_214C729E8()
{
  unint64_t result = qword_26784EA08;
  if (!qword_26784EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA08);
  }
  return result;
}

unint64_t sub_214C72A40()
{
  unint64_t result = qword_26ACE4050;
  if (!qword_26ACE4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4050);
  }
  return result;
}

unint64_t sub_214C72A98()
{
  unint64_t result = qword_26ACE4048;
  if (!qword_26ACE4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4048);
  }
  return result;
}

unint64_t sub_214C72AF0()
{
  unint64_t result = qword_26ACE4120;
  if (!qword_26ACE4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4120);
  }
  return result;
}

unint64_t sub_214C72B48()
{
  unint64_t result = qword_26ACE4118;
  if (!qword_26ACE4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE4118);
  }
  return result;
}

unint64_t sub_214C72BA0()
{
  unint64_t result = qword_26ACE35D0;
  if (!qword_26ACE35D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE35D0);
  }
  return result;
}

unint64_t sub_214C72BF8()
{
  unint64_t result = qword_26ACE35C8;
  if (!qword_26ACE35C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ACE35C8);
  }
  return result;
}

unint64_t sub_214C72C50()
{
  unint64_t result = qword_26784EA10;
  if (!qword_26784EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA10);
  }
  return result;
}

unint64_t sub_214C72CA8()
{
  unint64_t result = qword_26784EA18;
  if (!qword_26784EA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA18);
  }
  return result;
}

unint64_t sub_214C72D00()
{
  unint64_t result = qword_26784EA20;
  if (!qword_26784EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA20);
  }
  return result;
}

unint64_t sub_214C72D58()
{
  unint64_t result = qword_26784EA28;
  if (!qword_26784EA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA28);
  }
  return result;
}

unint64_t sub_214C72DB0()
{
  unint64_t result = qword_26784EA30;
  if (!qword_26784EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA30);
  }
  return result;
}

unint64_t sub_214C72E08()
{
  unint64_t result = qword_26784EA38;
  if (!qword_26784EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA38);
  }
  return result;
}

uint64_t Logger.LogCategory.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_214D1AC28();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 18;
  if (v2 < 0x12) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t Logger.LogCategory.rawValue.getter()
{
  unint64_t result = 0xD000000000000014;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x52656C69666F7250;
      break;
    case 2:
      unint64_t result = 0x7265746E49495041;
      break;
    case 3:
      unint64_t result = 0x63614D6574617453;
      break;
    case 4:
      unint64_t result = 0x6E6F697461636F4CLL;
      break;
    case 5:
      unint64_t result = 0x6C6C6F4361746144;
      break;
    case 6:
    case 0xB:
    case 0xC:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xA:
      unint64_t result = 0x656E654764697547;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xE:
      unint64_t result = 0x746C7561666544;
      break;
    case 0xF:
      unint64_t result = 0x6E6F7473656C694DLL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x11:
      unint64_t result = 0x6976726573626557;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_214C73100(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_214C1BA1C(*a1, *a2);
}

unint64_t sub_214C73110()
{
  unint64_t result = qword_26784EA40;
  if (!qword_26784EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EA40);
  }
  return result;
}

uint64_t sub_214C73164()
{
  return sub_214D1AD48();
}

uint64_t sub_214C731CC()
{
  Logger.LogCategory.rawValue.getter();
  sub_214D1A0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_214C73230()
{
  return sub_214D1AD48();
}

uint64_t sub_214C73294@<X0>(char *a1@<X8>)
{
  return Logger.LogCategory.init(rawValue:)(a1);
}

unint64_t sub_214C732A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Logger.LogCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *_s11LogCategoryOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x214C73394);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Logger.LogCategory()
{
  return &type metadata for Logger.LogCategory;
}

uint64_t sub_214C733CC(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEB9B0);
}

uint64_t sub_214C733F0(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEBA70);
}

uint64_t sub_214C7341C(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863A40);
}

uint64_t sub_214C73444(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863A58);
}

uint64_t sub_214C7346C(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863A70);
}

uint64_t sub_214C7348C(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEB968);
}

uint64_t sub_214C734B8(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEB998);
}

uint64_t sub_214C734DC(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863A88);
}

uint64_t sub_214C73500(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863AA0);
}

uint64_t sub_214C73524(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863AB8);
}

uint64_t sub_214C73548(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863AD0);
}

uint64_t sub_214C7356C(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEB980);
}

uint64_t sub_214C73598(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863AE8);
}

uint64_t sub_214C735BC(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863B00);
}

uint64_t sub_214C735E0(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEBAA0);
}

uint64_t sub_214C73604(uint64_t a1)
{
  return sub_214C7364C(a1, qword_26ACEB9C8);
}

uint64_t sub_214C73628(uint64_t a1)
{
  return sub_214C7364C(a1, qword_267863B18);
}

uint64_t sub_214C7364C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_214D19EE8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_214D19ED8();
}

uint64_t sub_214C736C4()
{
  uint64_t v0 = sub_214D19EE8();
  __swift_allocate_value_buffer(v0, qword_26ACEBA88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26ACEBA88);
  if (qword_26ACE3C08 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26ACE3AD0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static ODIAccountManager.shared.getter@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26ACE3710 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26ACE3700;
  a1[3] = type metadata accessor for ODIAccountManager();
  a1[4] = (uint64_t)&protocol witness table for ODIAccountManager;
  *a1 = v2;
  return swift_retain();
}

void sub_214C7380C()
{
  type metadata accessor for ODIAccountManager();
  uint64_t v0 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000015;
  v0[15] = 0x8000000214D2D430;
  v0[17] = 0;
  id v1 = objc_msgSend(self, sel_defaultStore);
  if (!v1) {
    id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFB210]), sel_init);
  }
  v0[16] = v1;
  id v2 = objc_msgSend(v1, sel_aa_primaryAppleAccount);
  uint64_t v3 = (void *)v0[17];
  v0[17] = v2;

  qword_26ACE3700 = (uint64_t)v0;
}

uint64_t type metadata accessor for ODIAccountManager()
{
  return self;
}

uint64_t sub_214C738E8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4498);
    uint64_t v5 = swift_allocError();
    *unsigned int v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_214B6AC38((uint64_t)&v11, v8, &qword_26784EAC8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_214C739B4()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_26784EA50 + dword_26784EA50);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_214C73A54;
  return v3();
}

uint64_t sub_214C73A54(void *a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v8 = *(uint64_t (**)(void *))(v4 + 8);
    id v7 = a1;
    return v8(a1);
  }
}

uint64_t sub_214C73B98()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_26784EA50 + dword_26784EA50);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_214C73C3C;
  return v4();
}

uint64_t sub_214C73C3C(void *a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unsigned int v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 16);
    *(void *)(v4 + 32) = a1;
    id v9 = a1;
    return MEMORY[0x270FA2498](sub_214C73D94, v8, 0);
  }
}

uint64_t sub_214C73D94()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_appleID);
    uint64_t v3 = *(void **)(v0 + 32);
    if (v2)
    {
      uint64_t v4 = v2;
      uint64_t v5 = sub_214D1A038();
      uint64_t v7 = v6;

      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v8(v5, v7);
    }
    v12[0] = -69;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000016, 0x8000000214D37970, 0, v12, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0x284449656C707061, 0xE900000000000029, 112);
    swift_willThrow();
  }
  else
  {
    unsigned __int8 v11 = -71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D378E0, 0, &v11, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0x284449656C707061, 0xE900000000000029, 109);
    swift_willThrow();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_214C73F84()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_26784EA50 + dword_26784EA50);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_214C74028;
  return v4();
}

uint64_t sub_214C74028(void *a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 16);
    *(void *)(v4 + 32) = a1;
    id v9 = a1;
    return MEMORY[0x270FA2498](sub_214C74180, v8, 0);
  }
}

uint64_t sub_214C74180()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_aa_personID);
    uint64_t v3 = *(void **)(v0 + 32);
    if (v2)
    {
      uint64_t v4 = v2;
      uint64_t v5 = sub_214D1A038();
      uint64_t v7 = v6;

      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v8(v5, v7);
    }
    v12[0] = -68;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x8000000214D37C10, 0, v12, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000019, 0x8000000214D37C30, 126);
    swift_willThrow();
  }
  else
  {
    unsigned __int8 v11 = -71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D378E0, 0, &v11, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000019, 0x8000000214D37C30, 123);
    swift_willThrow();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_214C74360()
{
  uint64_t v0 = (__objc2_prot **)sub_214D1A038();
  uint64_t v2 = (uint64_t)v1;
  uint64_t v3 = sub_214C75A3C(v0, v1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_normalizedDSID);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v2 = sub_214D1A038();

      if (qword_26ACE3C08 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_214D19EE8();
      __swift_project_value_buffer(v6, (uint64_t)qword_26ACE3AD0);
      swift_bridgeObjectRetain();
      sub_214C3E254();

      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v8 = -66;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x8000000214D37C10, 0, &v8, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000013, 0x8000000214D37BF0, 147);
      swift_willThrow();
    }
  }
  else
  {
    unsigned __int8 v9 = -70;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x8000000214D37BD0, 0, &v9, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000013, 0x8000000214D37BF0, 144);
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_214C74564(uint64_t a1, uint64_t a2)
{
  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  return MEMORY[0x270FA2498](sub_214C74588, v2, 0);
}

uint64_t sub_214C74588()
{
  long long v27 = v0;
  uint64_t v1 = v0 + 31;
  uint64_t v2 = v0[34];
  if (!v0[33])
  {
    uint64_t v3 = *(void **)(v2 + 128);
    v0[35] = v3;
    id v12 = objc_msgSend(v3, sel_aida_accountForPrimaryiCloudAccount);
    if (!v12)
    {
      unsigned __int8 v8 = v0 + 10;
      v0[10] = v0;
      v0[15] = v1;
      v0[11] = sub_214C74D2C;
      uint64_t v20 = swift_continuation_init();
      v0[26] = MEMORY[0x263EF8330];
      v0[27] = 0x40000000;
      v0[28] = sub_214C738E8;
      v0[29] = &block_descriptor_3;
      v0[30] = v20;
      objc_msgSend(v3, sel_aa_primaryAppleAccountWithCompletion_, v0 + 26);
      goto LABEL_8;
    }
    id v5 = v12;
    goto LABEL_7;
  }
  uint64_t v3 = *(void **)(v2 + 128);
  id v4 = (void *)sub_214D1A028();
  id v5 = objc_msgSend(v3, sel_aida_accountForAltDSID_, v4);

  if (v5)
  {
LABEL_7:
    unsigned __int8 v8 = v0 + 18;
    v0[36] = v5;
    uint64_t v13 = v0[34];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26784CD70);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_214D1C1E0;
    uint64_t v15 = *(void *)(v13 + 112);
    uint64_t v16 = *(void *)(v13 + 120);
    *(void *)(v14 + 56) = MEMORY[0x263F8D310];
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v16;
    id v17 = v5;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_214D1A258();
    v0[37] = v18;
    swift_bridgeObjectRelease();
    v0[18] = v0;
    v0[23] = v1;
    v0[19] = sub_214C74A50;
    uint64_t v19 = swift_continuation_init();
    v0[26] = MEMORY[0x263EF8330];
    v0[27] = 0x40000000;
    v0[28] = sub_214B712A4;
    v0[29] = &block_descriptor_30;
    v0[30] = v19;
    objc_msgSend(v3, sel_aida_renewCredentialsForAccount_services_force_completion_, v17, v18, 1, v0 + 26);
    goto LABEL_8;
  }
  uint64_t v6 = (void *)sub_214D1A028();
  id v7 = objc_msgSend(v3, sel_aa_appleAccountWithAltDSID_, v6);

  v0[40] = v7;
  if (v7)
  {
    unsigned __int8 v8 = v0 + 2;
    id v9 = v7;
    uint64_t v10 = sub_214D1A028();
    v0[41] = v10;
    v0[2] = v0;
    v0[7] = v1;
    v0[3] = sub_214C750B8;
    uint64_t v11 = swift_continuation_init();
    v0[26] = MEMORY[0x263EF8330];
    v0[27] = 0x40000000;
    v0[28] = sub_214B712A4;
    v0[29] = &block_descriptor_28;
    v0[30] = v11;
    objc_msgSend(v3, sel_renewCredentialsForAccount_force_reason_completion_, v9, 0, v10, v0 + 26);
LABEL_8:
    return MEMORY[0x270FA23F0](v8);
  }
  v26[0] = -71;
  id v21 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D378E0, 0, v26, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 194);
  swift_willThrow();
  unsigned __int8 v25 = 67;
  id v22 = v21;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D37B10, (char *)v21, &v25, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 199);

  swift_willThrow();
  long long v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_214C74A50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  *(void *)(*v0 + 304) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  if (v2) {
    id v4 = sub_214C75390;
  }
  else {
    id v4 = sub_214C74B70;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C74B70()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void **)(v0 + 296);

  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void **)(v0 + 288);
  if (v2)
  {
    if (v2 == 2)
    {
      unsigned __int8 v7 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D37B80, 0, &v7, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 210);
    }
    else if (v2 == 1)
    {
      v8[0] = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x8000000214D37BA0, 0, v8, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 207);
    }
    else
    {
      unsigned __int8 v6 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000214D37B50, 0, &v6, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 213);
    }
    swift_willThrow();
  }

  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_214C74D2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 312) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  if (v2) {
    id v4 = sub_214C754AC;
  }
  else {
    id v4 = sub_214C74E4C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C74E4C()
{
  id v12 = v0;
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[35];
  v0[40] = v1;
  if (v1)
  {
    id v3 = v1;
    uint64_t v4 = sub_214D1A028();
    v0[41] = v4;
    v0[2] = v0;
    v0[7] = v0 + 31;
    v0[3] = sub_214C750B8;
    uint64_t v5 = swift_continuation_init();
    v0[26] = MEMORY[0x263EF8330];
    v0[27] = 0x40000000;
    v0[28] = sub_214B712A4;
    v0[29] = &block_descriptor_28;
    v0[30] = v5;
    objc_msgSend(v2, sel_renewCredentialsForAccount_force_reason_completion_, v3, 0, v4, v0 + 26);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    v11[0] = -71;
    id v6 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D378E0, 0, v11, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 194);
    swift_willThrow();
    unsigned __int8 v10 = 67;
    id v7 = v6;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D37B10, (char *)v6, &v10, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 199);

    swift_willThrow();
    unsigned __int8 v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_214C750B8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 336) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  if (v2) {
    uint64_t v4 = sub_214C755AC;
  }
  else {
    uint64_t v4 = sub_214C751D8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C751D8()
{
  uint64_t v9 = v0;
  uint64_t v2 = (void *)v0[40];
  uint64_t v1 = (void *)v0[41];

  uint64_t v3 = v0[31];
  if (v3)
  {
    if (v3 == 2)
    {
      unsigned __int8 v7 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x8000000214D37B80, 0, &v7, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 210);
    }
    else if (v3 == 1)
    {
      v8[0] = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x8000000214D37BA0, 0, v8, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 207);
    }
    else
    {
      unsigned __int8 v6 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x8000000214D37B50, 0, &v6, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 213);
    }
    swift_willThrow();
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_214C75390()
{
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = (void *)v0[36];
  swift_willThrow();

  uint64_t v3 = (void *)v0[38];
  uint64_t v4 = (void *)v0[36];
  v8[0] = 67;
  id v5 = v3;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D37B10, (char *)v3, v8, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 199);

  swift_willThrow();
  unsigned __int8 v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_214C754AC()
{
  uint64_t v6 = v0;
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 312);
  v5[0] = 67;
  id v2 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D37B10, (char *)v1, v5, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 199);

  swift_willThrow();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_214C755AC()
{
  unsigned __int8 v8 = v0;
  uint64_t v1 = (void *)v0[41];
  id v2 = (void *)v0[40];
  swift_willThrow();

  uint64_t v3 = (void *)v0[42];
  v7[0] = 67;
  id v4 = v3;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x8000000214D37B10, (char *)v3, v7, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000017, 0x8000000214D37B30, 199);

  swift_willThrow();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_214C756BC(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v5 = objc_msgSend(*(id *)(v2 + 128), sel_aida_accountForPrimaryiCloudAccount);
    if (v5) {
      goto LABEL_5;
    }
LABEL_9:
    unsigned __int8 v27 = -65;
    id v22 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x8000000214D378E0, 0, &v27, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000013, 0x8000000214D37A60, 231);
    swift_willThrow();
LABEL_13:

    return 0;
  }
  uint64_t v3 = *(void **)(v2 + 128);
  id v4 = (void *)sub_214D1A028();
  id v5 = objc_msgSend(v3, sel_aida_accountForAltDSID_, v4);

  if (qword_26ACE41D8 != -1) {
    swift_once();
  }
  id v6 = (id)qword_26ACEBA50;
  sub_214D1A4C8();
  sub_214D19E78();

  if (!v5) {
    goto LABEL_9;
  }
LABEL_5:
  id v7 = v5;
  id v8 = objc_msgSend(v7, sel_aida_alternateDSID);
  if (!v8)
  {
    v26[0] = -64;
    id v23 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x8000000214D37A80, 0, v26, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000013, 0x8000000214D37A60, 234);
LABEL_12:
    id v22 = v23;
    swift_willThrow();

    goto LABEL_13;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_214D1A038();
  uint64_t v12 = v11;

  uint64_t v13 = (void *)sub_214D1A028();
  id v14 = objc_msgSend(v7, sel_aida_tokenForService_, v13);

  if (!v14)
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v25 = -63;
    id v23 = ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x8000000214D37AB0, 0, &v25, 0, 0, 0xD00000000000005FLL, 0x8000000214D37910, 0xD000000000000013, 0x8000000214D37A60, 237);
    goto LABEL_12;
  }
  uint64_t v15 = sub_214D1A038();
  uint64_t v17 = v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_214D1C1F0;
  uint64_t v19 = MEMORY[0x263F8D310];
  *(void *)(v18 + 56) = MEMORY[0x263F8D310];
  unint64_t v20 = sub_214B5F3EC();
  *(void *)(v18 + 32) = v10;
  *(void *)(v18 + 40) = v12;
  *(void *)(v18 + 96) = v19;
  *(void *)(v18 + 104) = v20;
  *(void *)(v18 + 64) = v20;
  *(void *)(v18 + 72) = v15;
  *(void *)(v18 + 80) = v17;
  uint64_t v21 = sub_214D1A078();

  return v21;
}

void *sub_214C75A3C(__objc2_prot **a1, __objc2_prot **a2)
{
  id v5 = *(void **)(v2 + 128);
  id v6 = (void *)sub_214D1A028();
  id v7 = objc_msgSend(v5, sel_accountTypeWithAccountTypeIdentifier_, v6);

  id v8 = objc_msgSend(v5, sel_accountsWithAccountType_, v7);
  uint64_t v9 = (__objc2_prot **)MEMORY[0x263F8EE58];
  if (v8)
  {
    uint64_t v10 = v8;
    uint64_t v11 = sub_214D1A268();
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (qword_26ACE41D8 != -1) {
LABEL_29:
  }
    swift_once();
  id v12 = (id)qword_26ACEBA50;
  sub_214D1A498();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26ACE4490);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_214D1C1F0;
  if (v11) {
    uint64_t v15 = *(void *)(v11 + 16);
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = MEMORY[0x263F8D750];
  *(void *)(v13 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v13 + 64) = v16;
  *(void *)(v13 + 32) = v15;
  *(void *)(v13 + 96) = MEMORY[0x263F8D310];
  *(void *)(v13 + 104) = sub_214B5F3EC();
  *(void *)(v14 + 72) = a1;
  *(void *)(v14 + 80) = a2;
  swift_bridgeObjectRetain();
  sub_214D19E78();

  swift_bridgeObjectRelease();
  if (v11)
  {
    unsigned __int8 v25 = v7;
    id v7 = *(id *)(v11 + 16);
    uint64_t v17 = v11 + 32;
    swift_bridgeObjectRetain();
    unint64_t v18 = 0;
    a2 = v9 + 1;
    a1 = &_OBJC_LABEL_PROTOCOL___NNHzG8lq6aMxZpXq;
    uint64_t v9 = &_OBJC_LABEL_PROTOCOL___NNHzG8lq6aMxZpXq;
    uint64_t v26 = v11;
    while (1)
    {
      if ((id)v18 == v7)
      {
        memset(v32, 0, 32);
        unint64_t v18 = (unint64_t)v7;
      }
      else
      {
        if (v18 >= *(void *)(v11 + 16))
        {
          __break(1u);
          goto LABEL_29;
        }
        sub_214B5EC30(v17 + 32 * v18++, (uint64_t)v32);
      }
      sub_214B6AC38((uint64_t)v32, (uint64_t)&v30, (uint64_t *)&unk_26ACE44A0);
      if (!v31)
      {
        swift_bridgeObjectRelease_n();
        id v7 = v25;
        break;
      }
      sub_214B5EC20(&v30, v29);
      sub_214B5EC30((uint64_t)v29, (uint64_t)v27);
      sub_214C763B8();
      if (swift_dynamicCast())
      {
        uint64_t v19 = v28;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        if (v19)
        {
          if (objc_msgSend(v19, sel_isAuthenticated)
            && (objc_msgSend(v19, sel_isActive) & 1) != 0
            && (id v20 = objc_msgSend(v19, sel_normalizedDSID)) != 0)
          {
            uint64_t v21 = v20;
            sub_214D1A038();

            uint64_t v22 = sub_214D1A0E8();
            swift_bridgeObjectRelease();
            if (v22 > 3)
            {

              swift_bridgeObjectRelease_n();
              return v19;
            }

            uint64_t v11 = v26;
          }
          else
          {
          }
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
    }
  }
  id v23 = (id)qword_26ACEBA50;
  sub_214D1A488();
  sub_214D19E78();

  return 0;
}

uint64_t ODIAccountManager.deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIAccountManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODIAccountManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_214C75E6C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_26784EA50 + dword_26784EA50);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_214C76D00;
  return v3();
}

uint64_t sub_214C75F10(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  uint64_t v4 = *v2;
  v3[4] = *v2;
  return MEMORY[0x270FA2498](sub_214C75F34, v4, 0);
}

uint64_t sub_214C75F34()
{
  uint64_t v1 = sub_214C75A3C(*(__objc2_prot ***)(v0 + 16), *(__objc2_prot ***)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void *))(v0 + 8);
  return v2(v1);
}

uint64_t sub_214C75F98()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x270FA2498](sub_214C75FB8, v0, 0);
}

uint64_t sub_214C75FB8()
{
  if (*(void *)(v0[16] + 136))
  {
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    if (qword_26ACE3C08 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_214D19EE8();
    __swift_project_value_buffer(v3, (uint64_t)qword_26ACE3AD0);
    uint64_t v4 = sub_214D19EC8();
    os_log_type_t v5 = sub_214D1A498();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_214B4E000, v4, v5, "Primary account is nil. Will attempt to reload", v6, 2u);
      MEMORY[0x2166B1540](v6, -1, -1);
    }
    uint64_t v7 = v0[16];

    id v8 = *(void **)(v7 + 128);
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_214C761BC;
    uint64_t v9 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_214C738E8;
    v0[13] = &block_descriptor_33;
    v0[14] = v9;
    objc_msgSend(v8, sel_aa_primaryAppleAccountWithCompletion_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
}

uint64_t sub_214C761BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 136) = v2;
  uint64_t v3 = *(void *)(v1 + 128);
  if (v2) {
    uint64_t v4 = sub_214C7634C;
  }
  else {
    uint64_t v4 = sub_214C762DC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_214C762DC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = *(void **)(v1 + 136);
  *(void *)(v1 + 136) = v0[15];

  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_214C7634C()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_214C763B8()
{
  unint64_t result = qword_26ACE3A28;
  if (!qword_26ACE3A28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26ACE3A28);
  }
  return result;
}

uint64_t dispatch thunk of ODIAccountManagerProtocol.primaryAppleAccount()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214C76D04;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIAccountManagerProtocol.getAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_214BB2C3C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214C765F4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214C76D08;
  return v7(a1, a2);
}

uint64_t sub_214C766E4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214C76D08;
  return v7(a1, a2);
}

uint64_t sub_214C767D4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_214C76D08;
  return v7(a1, a2);
}

uint64_t sub_214C768C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_214B72738;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_214C769D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_214B6A55C;
  return v11(a1, a2, a3, a4);
}

uint64_t method lookup function for ODIAccountManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ODIAccountManager);
}

uint64_t dispatch thunk of ODIAccountManager.primaryAppleAccount()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214B69F08;
  return v4();
}

uint64_t dispatch thunk of ODIAccountManager.appleID()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 168) + **(int **)(*(void *)v0 + 168));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_214BA6744;
  return v4();
}

uint64_t dispatch thunk of ODIAccountManager.getAccount(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_214C76D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for AMPAssessmentPayloadAdapter()
{
  return &type metadata for AMPAssessmentPayloadAdapter;
}

unint64_t sub_214C76D30(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v4 - 8, v5);
  v48[1] = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v70 = a1[1];
  uint64_t v71 = v9;
  uint64_t v11 = a1[5];
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[7];
  uint64_t v14 = a1[8];
  uint64_t v16 = a1[9];
  uint64_t v15 = a1[10];
  uint64_t v68 = a1[11];
  uint64_t v69 = v15;
  uint64_t v67 = a1[12];
  uint64_t v17 = a1[13];
  uint64_t v65 = v7;
  uint64_t v66 = v17;
  uint64_t v64 = a1[14];
  sub_214B964D0((uint64_t)(a1 + 15), (uint64_t)v86);
  uint64_t v18 = v2[1];
  unint64_t v49 = (void *)*v2;
  uint64_t v50 = v18;
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v71;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v11 = 0;
    uint64_t v14 = 0;
    uint64_t v16 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v59 = v10;
  uint64_t v60 = v14;
  uint64_t v61 = v13;
  uint64_t v62 = v12;
  uint64_t v63 = v11;
  sub_214B964D0((uint64_t)v86, (uint64_t)v85);
  int v20 = sub_214B78A5C((uint64_t)v85);
  uint64_t v71 = v19;
  if (v20 == 1)
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v21 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    uint64_t v22 = 0;
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    uint64_t v23 = 0;
    uint64_t v58 = 0;
    uint64_t v24 = 0;
    unint64_t v25 = 0xE200000000000000;
    uint64_t v51 = 12589;
  }
  else
  {
    uint64_t v24 = v85[3];
    uint64_t v58 = v85[2];
    sub_214B964D0((uint64_t)v86, (uint64_t)&v74);
    uint64_t v21 = v75;
    uint64_t v56 = v84;
    uint64_t v57 = v74;
    uint64_t v55 = v80;
    uint64_t v22 = v78;
    uint64_t v53 = v83;
    uint64_t v54 = v79;
    uint64_t v23 = v82;
    unint64_t v25 = v77;
    uint64_t v51 = v76;
    uint64_t v52 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  type metadata accessor for AMPCristalPayloadData();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v63;
  uint64_t v26[2] = v71;
  v26[3] = v27;
  v26[4] = v60;
  v26[5] = v16;
  uint64_t v28 = v61;
  v26[6] = v62;
  void v26[7] = v28;
  uint64_t v29 = v59;
  v26[8] = v8;
  unsigned __int8 v26[9] = v29;
  v26[10] = v58;
  v26[11] = v24;
  uint64_t v31 = v69;
  uint64_t v30 = v70;
  v26[12] = v65;
  v26[13] = v30;
  v26[14] = v57;
  v26[15] = v21;
  uint64_t v32 = v54;
  unsigned __int8 v26[16] = v56;
  v26[17] = v32;
  v26[18] = v55;
  uint64_t v26[19] = v22;
  uint64_t v33 = v52;
  v26[20] = v53;
  v26[21] = v33;
  v26[22] = v23;
  v26[23] = v31;
  uint64_t v35 = v67;
  uint64_t v34 = v68;
  unsigned __int8 v26[24] = v68;
  v26[25] = v35;
  uint64_t v36 = v66;
  uint64_t v37 = v64;
  v26[26] = v66;
  v26[27] = v37;
  v26[28] = v51;
  v26[29] = v25;
  sub_214D19798();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_214B792C4(v31, v34, v35, v36, v37);
  sub_214D19788();
  uint64_t v74 = v26;
  sub_214C77234();
  uint64_t v41 = sub_214D19778();
  unint64_t v43 = v42;
  swift_release();
  sub_214D1A088();
  uint64_t v44 = sub_214D1A058();
  uint64_t v46 = v45;
  sub_214B58A4C(v41, v43);
  if (v46)
  {
    swift_release();
  }
  else
  {
    uint64_t v74 = v49;
    uint64_t v75 = v50;
    LOBYTE(v72) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(0xD00000000000001BLL, 0x8000000214D2FD20, &v72);
    swift_bridgeObjectRelease();
    sub_214B964D0((uint64_t)v86, (uint64_t)&v74);
    if (sub_214B78A5C((uint64_t)&v74) != 1) {
      swift_bridgeObjectRetain();
    }
    unint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_214D1A7A8();
    sub_214D1A108();
    sub_214D1A108();
    sub_214D1A108();
    uint64_t v38 = sub_214B57050(v72, v73);
    unint64_t v40 = v39;
    sub_214D19B48();
    sub_214B58A4C(v38, v40);
    swift_bridgeObjectRelease();
    unint64_t v72 = 0;
    unint64_t v73 = 0xE000000000000000;
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v72 = 0x737365737361227BLL;
    unint64_t v73 = 0xEF223A22746E656DLL;
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    swift_release();
    return v72;
  }
  return v44;
}

unint64_t sub_214C77234()
{
  unint64_t result = qword_26784EAD0;
  if (!qword_26784EAD0)
  {
    type metadata accessor for AMPCristalPayloadData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26784EAD0);
  }
  return result;
}

BOOL ArmandDeviceData.hasValidData.getter()
{
  uint64_t v1 = *v0;
  uint64_t v123 = v0[1];
  uint64_t v122 = v0[2];
  char v121 = *((unsigned char *)v0 + 24);
  uint64_t v120 = v0[4];
  uint64_t v119 = v0[5];
  char v118 = *((unsigned char *)v0 + 48);
  uint64_t v117 = v0[7];
  uint64_t v116 = v0[8];
  char v115 = *((unsigned char *)v0 + 72);
  uint64_t v114 = v0[10];
  uint64_t v113 = v0[11];
  char v112 = *((unsigned char *)v0 + 96);
  uint64_t v111 = v0[13];
  uint64_t v110 = v0[14];
  char v109 = *((unsigned char *)v0 + 120);
  uint64_t v108 = v0[16];
  uint64_t v107 = v0[17];
  char v106 = *((unsigned char *)v0 + 144);
  uint64_t v105 = v0[19];
  char v104 = *((unsigned char *)v0 + 160);
  char v103 = *((unsigned char *)v0 + 161);
  uint64_t v102 = v0[21];
  uint64_t v101 = v0[22];
  char v100 = *((unsigned char *)v0 + 184);
  char v99 = *((unsigned char *)v0 + 424);
  char v98 = *((unsigned char *)v0 + 440);
  char v97 = *((unsigned char *)v0 + 456);
  char v96 = *((unsigned char *)v0 + 472);
  uint64_t v95 = v0[24];
  char v94 = *((unsigned char *)v0 + 200);
  char v93 = *((unsigned char *)v0 + 201);
  uint64_t v91 = v0[27];
  uint64_t v92 = v0[26];
  char v90 = *((unsigned char *)v0 + 224);
  uint64_t v88 = v0[30];
  uint64_t v89 = v0[29];
  char v87 = *((unsigned char *)v0 + 248);
  uint64_t v85 = v0[33];
  uint64_t v86 = v0[32];
  char v84 = *((unsigned char *)v0 + 272);
  uint64_t v82 = v0[36];
  uint64_t v83 = v0[35];
  char v81 = *((unsigned char *)v0 + 296);
  uint64_t v79 = v0[39];
  uint64_t v80 = v0[38];
  char v78 = *((unsigned char *)v0 + 320);
  char v77 = *((unsigned char *)v0 + 321);
  char v76 = *((unsigned char *)v0 + 322);
  uint64_t v74 = v0[42];
  uint64_t v75 = v0[41];
  char v73 = *((unsigned char *)v0 + 344);
  char v72 = *((unsigned char *)v0 + 345);
  char v71 = *((unsigned char *)v0 + 346);
  uint64_t v69 = v0[45];
  uint64_t v70 = v0[44];
  char v68 = *((unsigned char *)v0 + 368);
  uint64_t v66 = v0[48];
  uint64_t v67 = v0[47];
  char v65 = *((unsigned char *)v0 + 392);
  char v64 = *((unsigned char *)v0 + 393);
  char v63 = *((unsigned char *)v0 + 394);
  uint64_t v62 = v0[50];
  char v60 = *((unsigned char *)v0 + 409);
  char v61 = *((unsigned char *)v0 + 408);
  uint64_t v59 = v0[52];
  char v58 = *((unsigned char *)v0 + 425);
  uint64_t v57 = v0[54];
  char v56 = *((unsigned char *)v0 + 441);
  uint64_t v55 = v0[56];
  char v54 = *((unsigned char *)v0 + 457);
  uint64_t v53 = v0[58];
  char v52 = *((unsigned char *)v0 + 473);
  uint64_t v51 = v0[60];
  char v50 = *((unsigned char *)v0 + 488);
  memcpy(__dst, v0 + 62, 0x119uLL);
  v2.i32[0] = *((_DWORD *)v0 + 196);
  uint64_t v49 = v0[99];
  char v47 = *((unsigned char *)v0 + 801);
  char v48 = *((unsigned char *)v0 + 800);
  uint64_t v46 = v0[101];
  char v44 = *((unsigned char *)v0 + 817);
  char v45 = *((unsigned char *)v0 + 816);
  long long v3 = *(_OWORD *)(v0 + 113);
  long long v139 = *(_OWORD *)(v0 + 111);
  long long v140 = v3;
  v141[0] = *(_OWORD *)(v0 + 115);
  *(_OWORD *)((char *)v141 + 10) = *(_OWORD *)((char *)v0 + 930);
  long long v4 = *(_OWORD *)(v0 + 105);
  long long v135 = *(_OWORD *)(v0 + 103);
  long long v136 = v4;
  long long v5 = *(_OWORD *)(v0 + 109);
  long long v137 = *(_OWORD *)(v0 + 107);
  long long v138 = v5;
  if (!v1) {
    return 0;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  if (!v6) {
    return 0;
  }
  int16x8_t v124 = (int16x8_t)vmovl_u8(v2);
  uint64_t v42 = v0[120];
  uint64_t v43 = v0[119];
  char v41 = *((unsigned char *)v0 + 968);
  uint64_t v39 = v0[123];
  uint64_t v40 = v0[122];
  char v38 = *((unsigned char *)v0 + 992);
  uint64_t v36 = v0[126];
  uint64_t v37 = v0[125];
  char v35 = *((unsigned char *)v0 + 1016);
  uint64_t v34 = v0[128];
  char v32 = *((unsigned char *)v0 + 1033);
  char v33 = *((unsigned char *)v0 + 1032);
  swift_bridgeObjectRetain();
  uint64_t v7 = v6 - 1;
  uint64_t v8 = (unsigned char *)(v1 + 65);
  unsigned __int32 v31 = vmovn_s16(v124).u32[0];
  while (2)
  {
    uint64_t v9 = *(void *)(v8 - 17);
    uint64_t v10 = *(void *)(v8 - 9);
    char v11 = *(v8 - 1);
    uint64_t v125 = v7;
    switch(*v8)
    {
      case 1:
        uint64_t v12 = &type metadata for MobileGestaltSource;
        uint64_t v132 = &type metadata for MobileGestaltSource;
        uint64_t v13 = &off_26C5AC070;
        int v133 = &off_26C5AC070;
        uint64_t v16 = swift_allocObject();
        uint64_t v129 = v16;
        *(void *)(v16 + 16) = v114;
        *(void *)(v16 + 24) = v113;
        *(unsigned char *)(v16 + 32) = v112;
        *(void *)(v16 + 40) = v111;
        *(void *)(v16 + 48) = v110;
        *(unsigned char *)(v16 + 56) = v109;
        *(void *)(v16 + 64) = v108;
        *(void *)(v16 + 72) = v107;
        *(unsigned char *)(v16 + 80) = v106;
        *(void *)(v16 + 88) = v105;
        *(unsigned char *)(v16 + 96) = v104;
        *(unsigned char *)(v16 + 97) = v103;
        goto LABEL_20;
      case 2:
        uint64_t v12 = &type metadata for BaaSource;
        uint64_t v132 = &type metadata for BaaSource;
        int v133 = &off_26C5AD810;
        uint64_t v17 = swift_allocObject();
        uint64_t v129 = v17;
        *(void *)(v17 + 16) = v95;
        *(unsigned char *)(v17 + 24) = v94;
        *(unsigned char *)(v17 + 25) = v93;
        *(void *)(v17 + 32) = v92;
        *(void *)(v17 + 40) = v91;
        *(unsigned char *)(v17 + 48) = v90;
        *(void *)(v17 + 56) = v89;
        *(void *)(v17 + 64) = v88;
        *(unsigned char *)(v17 + 72) = v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = &off_26C5AD810;
        goto LABEL_23;
      case 3:
        uint64_t v12 = &type metadata for NearFieldSource;
        uint64_t v132 = &type metadata for NearFieldSource;
        uint64_t v18 = &off_26C5AADF8;
        int v133 = &off_26C5AADF8;
        uint64_t v129 = v102;
        uint64_t v130 = v101;
        char v19 = v100;
        goto LABEL_14;
      case 4:
        uint64_t v12 = &type metadata for IDSSource;
        uint64_t v132 = &type metadata for IDSSource;
        uint64_t v18 = &off_26C5AD948;
        int v133 = &off_26C5AD948;
        uint64_t v129 = v75;
        uint64_t v130 = v74;
        char v19 = v73;
        goto LABEL_14;
      case 5:
        uint64_t v12 = &type metadata for CoreTelephonySource;
        uint64_t v132 = &type metadata for CoreTelephonySource;
        uint64_t v13 = &off_26C5A87A8;
        int v133 = &off_26C5A87A8;
        uint64_t v20 = swift_allocObject();
        uint64_t v129 = v20;
        *(void *)(v20 + 16) = v86;
        *(void *)(v20 + 24) = v85;
        *(unsigned char *)(v20 + 32) = v84;
        *(void *)(v20 + 40) = v83;
        *(void *)(v20 + 48) = v82;
        *(unsigned char *)(v20 + 56) = v81;
        *(void *)(v20 + 64) = v80;
        *(void *)(v20 + 72) = v79;
        *(unsigned char *)(v20 + 80) = v78;
        *(unsigned char *)(v20 + 81) = v77;
        *(unsigned char *)(v20 + 82) = v76;
        goto LABEL_20;
      case 6:
        uint64_t v12 = &type metadata for LocationSource;
        uint64_t v132 = &type metadata for LocationSource;
        uint64_t v18 = &off_26C5AA768;
        int v133 = &off_26C5AA768;
        uint64_t v21 = swift_allocObject();
        uint64_t v129 = v21;
        *(void *)(v21 + 16) = v67;
        *(void *)(v21 + 24) = v66;
        *(unsigned char *)(v21 + 32) = v65;
        *(unsigned char *)(v21 + 33) = v64;
        *(unsigned char *)(v21 + 34) = v63;
        *(void *)(v21 + 40) = v62;
        *(unsigned char *)(v21 + 48) = v61;
        *(unsigned char *)(v21 + 49) = v60;
        *(void *)(v21 + 56) = v59;
        *(unsigned char *)(v21 + 64) = v99;
        *(unsigned char *)(v21 + 65) = v58;
        *(void *)(v21 + 72) = v57;
        *(unsigned char *)(v21 + 80) = v98;
        *(unsigned char *)(v21 + 81) = v56;
        *(void *)(v21 + 88) = v55;
        *(unsigned char *)(v21 + 96) = v97;
        *(unsigned char *)(v21 + 97) = v54;
        *(void *)(v21 + 104) = v53;
        *(unsigned char *)(v21 + 112) = v96;
        *(unsigned char *)(v21 + 113) = v52;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 7:
        uint64_t v12 = &type metadata for TelephonyUtilitiesSource;
        uint64_t v132 = &type metadata for TelephonyUtilitiesSource;
        uint64_t v18 = &off_26C5ACFA8;
        int v133 = &off_26C5ACFA8;
        LOBYTE(v129) = v72;
        BYTE1(v129) = v71;
        goto LABEL_23;
      case 8:
        uint64_t v12 = &type metadata for TimeZoneSource;
        uint64_t v132 = &type metadata for TimeZoneSource;
        uint64_t v18 = &off_26C5AAA18;
        int v133 = &off_26C5AAA18;
        uint64_t v129 = v70;
        uint64_t v130 = v69;
        char v19 = v68;
LABEL_14:
        char v131 = v19;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 9:
        uint64_t v12 = &type metadata for CallerClientSource;
        uint64_t v132 = &type metadata for CallerClientSource;
        uint64_t v18 = &off_26C5A5A98;
        int v133 = &off_26C5A5A98;
        uint64_t v129 = v51;
        LOBYTE(v130) = v50;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      case 0xA:
        uint64_t v132 = &type metadata for NameParserSource;
        int v133 = &off_26C5A5770;
        uint64_t v129 = swift_allocObject();
        memcpy((void *)(v129 + 16), __dst, 0x119uLL);
        sub_214BB7724((uint64_t)__dst);
        uint64_t v12 = v132;
        uint64_t v18 = v133;
        goto LABEL_23;
      case 0xB:
        uint64_t v12 = &type metadata for GeocoderSource;
        uint64_t v132 = &type metadata for GeocoderSource;
        uint64_t v18 = &off_26C5A4AE8;
        int v133 = &off_26C5A4AE8;
        uint64_t v22 = (_OWORD *)swift_allocObject();
        uint64_t v129 = (uint64_t)v22;
        long long v23 = v140;
        v22[5] = v139;
        v22[6] = v23;
        v22[7] = v141[0];
        *(_OWORD *)((char *)v22 + 122) = *(_OWORD *)((char *)v141 + 10);
        long long v24 = v136;
        v22[1] = v135;
        void v22[2] = v24;
        long long v25 = v138;
        id v22[3] = v137;
        v22[4] = v25;
        goto LABEL_23;
      case 0xC:
        uint64_t v12 = &type metadata for PhoneFormatterSource;
        uint64_t v132 = &type metadata for PhoneFormatterSource;
        uint64_t v13 = &off_26C5A6290;
        int v133 = &off_26C5A6290;
        uint64_t v14 = swift_allocObject();
        uint64_t v129 = v14;
        *(void *)(v14 + 16) = v43;
        *(void *)(v14 + 24) = v42;
        *(unsigned char *)(v14 + 32) = v41;
        *(void *)(v14 + 40) = v40;
        *(void *)(v14 + 48) = v39;
        *(unsigned char *)(v14 + 56) = v38;
        *(void *)(v14 + 64) = v37;
        *(void *)(v14 + 72) = v36;
        char v15 = v35;
        goto LABEL_19;
      case 0xD:
        uint64_t v12 = &type metadata for DeviceSettingsSource;
        uint64_t v132 = &type metadata for DeviceSettingsSource;
        uint64_t v18 = &off_26C5A6048;
        int v133 = &off_26C5A6048;
        uint64_t v26 = swift_allocObject();
        uint64_t v129 = v26;
        *(_DWORD *)(v26 + 16) = v31;
        *(void *)(v26 + 24) = v49;
        *(unsigned char *)(v26 + 32) = v48;
        *(unsigned char *)(v26 + 33) = v47;
        *(void *)(v26 + 40) = v46;
        *(unsigned char *)(v26 + 48) = v45;
        *(unsigned char *)(v26 + 49) = v44;
        goto LABEL_23;
      case 0xE:
        uint64_t v12 = &type metadata for ConfigurationSource;
        uint64_t v132 = &type metadata for ConfigurationSource;
        uint64_t v18 = &off_26C5AF978;
        int v133 = &off_26C5AF978;
        uint64_t v129 = v34;
        LOBYTE(v130) = v33;
        BYTE1(v130) = v32;
        goto LABEL_23;
      default:
        uint64_t v12 = &type metadata for AccountsSource;
        uint64_t v132 = &type metadata for AccountsSource;
        uint64_t v13 = &off_26C5AA3F8;
        int v133 = &off_26C5AA3F8;
        uint64_t v14 = swift_allocObject();
        uint64_t v129 = v14;
        *(void *)(v14 + 16) = v123;
        *(void *)(v14 + 24) = v122;
        *(unsigned char *)(v14 + 32) = v121;
        *(void *)(v14 + 40) = v120;
        *(void *)(v14 + 48) = v119;
        *(unsigned char *)(v14 + 56) = v118;
        *(void *)(v14 + 64) = v117;
        *(void *)(v14 + 72) = v116;
        char v15 = v115;
LABEL_19:
        *(unsigned char *)(v14 + 80) = v15;
LABEL_20:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = v13;
LABEL_23:
        __swift_project_boxed_opaque_existential_1(&v129, (uint64_t)v12);
        v126[0] = v9;
        v126[1] = v10;
        char v127 = v11;
        uint64_t v27 = (void (*)(unsigned __int8 *@<X0>, char *@<X8>))v18[1];
        swift_bridgeObjectRetain();
        sub_214B6F6CC(v9, v10, v11);
        v27((unsigned __int8 *)v126, (char *)&v128);
        int v28 = v128;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v129);
        swift_bridgeObjectRelease();
        sub_214B6F6DC(v9, v10, v11);
        BOOL v29 = v28 == 209;
        if (v28 != 209)
        {
          uint64_t v7 = v125 - 1;
          v8 += 64;
          if (v125) {
            continue;
          }
        }
        swift_bridgeObjectRelease();
        break;
    }
    return v29;
  }
}

BOOL static ArmandDeviceData.isLessComplete(lhs:than:)(uint64_t a1, uint64_t a2)
{
  uint64_t v154 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v153 = *(unsigned __int8 *)(a1 + 48);
  long long v4 = (unsigned __int8 *)(a2 + 408);
  char v152 = *(unsigned char *)(a1 + 72);
  uint64_t v148 = *(void *)(a1 + 80);
  uint64_t v147 = *(void *)(a1 + 88);
  uint64_t v151 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v146 = *(void *)(a1 + 104);
  uint64_t v145 = *(void *)(a1 + 112);
  uint64_t v150 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v144 = *(void *)(a1 + 128);
  uint64_t v143 = *(void *)(a1 + 136);
  uint64_t v149 = *(unsigned __int8 *)(a1 + 144);
  uint64_t v142 = *(void *)(a1 + 152);
  __int16 v141 = *(unsigned __int8 *)(a1 + 160);
  __int16 v140 = *(unsigned __int8 *)(a1 + 161);
  uint64_t v130 = *(void *)(a1 + 168);
  uint64_t v131 = *(void *)(a1 + 176);
  unsigned __int8 v129 = *(unsigned char *)(a1 + 184);
  uint64_t v125 = *(void *)(a1 + 192);
  uint64_t v124 = *(unsigned __int8 *)(a1 + 200);
  uint64_t v123 = *(unsigned __int8 *)(a1 + 201);
  uint64_t v96 = *(unsigned __int8 *)(a1 + 424);
  uint64_t v95 = *(unsigned __int8 *)(a1 + 440);
  uint64_t v98 = *(unsigned __int8 *)(a1 + 456);
  __int16 v97 = *(unsigned __int8 *)(a1 + 472);
  long long v119 = *(_OWORD *)(a1 + 208);
  *(void *)&long long v120 = *(unsigned __int8 *)(a1 + 224);
  *((void *)&v120 + 1) = *(void *)(a1 + 232);
  uint64_t v121 = *(void *)(a1 + 240);
  char v122 = *(unsigned char *)(a1 + 248);
  long long v108 = *(_OWORD *)(a1 + 256);
  *(void *)&long long v109 = *(unsigned __int8 *)(a1 + 272);
  *((void *)&v109 + 1) = *(void *)(a1 + 280);
  *(void *)&long long v110 = *(void *)(a1 + 288);
  *((void *)&v110 + 1) = *(unsigned __int8 *)(a1 + 296);
  long long v112 = *(_OWORD *)(a1 + 304);
  __int16 v107 = *(unsigned __int8 *)(a1 + 320);
  __int16 v106 = *(unsigned __int8 *)(a1 + 321);
  char v111 = *(unsigned char *)(a1 + 322);
  uint64_t v57 = *(void *)(a1 + 328);
  uint64_t v59 = *(void *)(a1 + 336);
  unsigned __int8 v58 = *(unsigned char *)(a1 + 344);
  __int16 v52 = *(unsigned __int8 *)(a1 + 346);
  __int16 v53 = *(unsigned __int8 *)(a1 + 345);
  uint64_t v47 = *(void *)(a1 + 352);
  uint64_t v49 = *(void *)(a1 + 360);
  unsigned __int8 v48 = *(unsigned char *)(a1 + 368);
  uint64_t v88 = *(void *)(a1 + 384);
  uint64_t v89 = *(void *)(a1 + 376);
  uint64_t v85 = *(unsigned __int8 *)(a1 + 392);
  uint64_t v82 = *(unsigned __int8 *)(a1 + 393);
  uint64_t v84 = *(unsigned __int8 *)(a1 + 394);
  uint64_t v83 = *(unsigned __int8 *)(a1 + 408);
  uint64_t v81 = *(unsigned __int8 *)(a1 + 409);
  uint64_t v86 = *(void *)(a1 + 416);
  uint64_t v87 = *(void *)(a1 + 400);
  uint64_t v80 = *(unsigned __int8 *)(a1 + 425);
  uint64_t v79 = *(unsigned __int8 *)(a1 + 441);
  uint64_t v93 = *(void *)(a1 + 448);
  uint64_t v91 = *(void *)(a1 + 432);
  uint64_t v92 = *(unsigned __int8 *)(a1 + 457);
  uint64_t v94 = *(void *)(a1 + 464);
  __int16 v90 = *(unsigned __int8 *)(a1 + 473);
  uint64_t v43 = *(void *)(a1 + 480);
  char v42 = *(unsigned char *)(a1 + 488);
  memcpy(__dst, (const void *)(a1 + 496), sizeof(__dst));
  uint64_t v34 = *(unsigned int *)(a1 + 784);
  uint64_t v36 = *(void *)(a1 + 792);
  uint64_t v37 = *(unsigned __int8 *)(a1 + 800);
  uint64_t v33 = *(unsigned __int8 *)(a1 + 801);
  uint64_t v39 = *(void *)(a1 + 808);
  __int16 v38 = *(unsigned __int8 *)(a1 + 816);
  __int16 v35 = *(unsigned __int8 *)(a1 + 817);
  long long v5 = *(_OWORD *)(a1 + 904);
  long long v178 = *(_OWORD *)(a1 + 888);
  long long v179 = v5;
  v180[0] = *(_OWORD *)(a1 + 920);
  *(_OWORD *)((char *)v180 + 10) = *(_OWORD *)(a1 + 930);
  long long v6 = *(_OWORD *)(a1 + 840);
  long long v174 = *(_OWORD *)(a1 + 824);
  long long v175 = v6;
  long long v7 = *(_OWORD *)(a1 + 872);
  long long v176 = *(_OWORD *)(a1 + 856);
  long long v177 = v7;
  uint64_t v8 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 72);
  uint64_t v138 = *(void *)(a2 + 80);
  uint64_t v137 = *(void *)(a2 + 88);
  uint64_t v139 = *(unsigned __int8 *)(a2 + 96);
  uint64_t v136 = *(void *)(a2 + 104);
  uint64_t v135 = *(void *)(a2 + 112);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 120);
  uint64_t v134 = *(void *)(a2 + 128);
  uint64_t v133 = *(void *)(a2 + 136);
  uint64_t v12 = *(unsigned __int8 *)(a2 + 144);
  uint64_t v132 = *(void *)(a2 + 152);
  __int16 v13 = *(unsigned __int8 *)(a2 + 160);
  __int16 v14 = *(unsigned __int8 *)(a2 + 161);
  uint64_t v127 = *(void *)(a2 + 168);
  uint64_t v128 = *(void *)(a2 + 176);
  unsigned __int8 v126 = *(unsigned char *)(a2 + 184);
  uint64_t v118 = *(void *)(a2 + 192);
  uint64_t v117 = *(unsigned __int8 *)(a2 + 200);
  uint64_t v78 = v4[16];
  uint64_t v77 = v4[32];
  uint64_t v76 = v4[48];
  __int16 v75 = v4[64];
  uint64_t v15 = *(unsigned __int8 *)(a2 + 201);
  long long v113 = *(_OWORD *)(a2 + 208);
  *(void *)&long long v114 = *(unsigned __int8 *)(a2 + 224);
  *((void *)&v114 + 1) = *(void *)(a2 + 232);
  uint64_t v115 = *(void *)(a2 + 240);
  char v116 = *(unsigned char *)(a2 + 248);
  long long v101 = *(_OWORD *)(a2 + 256);
  *(void *)&long long v102 = *(unsigned __int8 *)(a2 + 272);
  *((void *)&v102 + 1) = *(void *)(a2 + 280);
  *(void *)&long long v103 = *(void *)(a2 + 288);
  *((void *)&v103 + 1) = *(unsigned __int8 *)(a2 + 296);
  long long v105 = *(_OWORD *)(a2 + 304);
  __int16 v100 = *(unsigned __int8 *)(a2 + 320);
  __int16 v99 = *(unsigned __int8 *)(a2 + 321);
  char v104 = *(unsigned char *)(a2 + 322);
  uint64_t v54 = *(void *)(a2 + 328);
  uint64_t v56 = *(void *)(a2 + 336);
  unsigned __int8 v55 = *(unsigned char *)(a2 + 344);
  __int16 v50 = *(unsigned __int8 *)(a2 + 346);
  __int16 v51 = *(unsigned __int8 *)(a2 + 345);
  uint64_t v44 = *(void *)(a2 + 352);
  uint64_t v46 = *(void *)(a2 + 360);
  unsigned __int8 v45 = *(unsigned char *)(a2 + 368);
  uint64_t v61 = *(unsigned __int8 *)(a2 + 392);
  uint64_t v60 = *(unsigned __int8 *)(a2 + 393);
  uint64_t v62 = *(unsigned __int8 *)(a2 + 394);
  uint64_t v63 = *(void *)(a2 + 376);
  uint64_t v65 = *(void *)(a2 + 400);
  uint64_t v66 = *(void *)(a2 + 384);
  *(void *)&long long v67 = *(unsigned __int8 *)(a2 + 408);
  uint64_t v64 = *(unsigned __int8 *)(a2 + 409);
  *((void *)&v67 + 1) = *(void *)(a2 + 416);
  uint64_t v68 = *(unsigned __int8 *)(a2 + 425);
  uint64_t v69 = *(void *)(a2 + 432);
  uint64_t v70 = *(unsigned __int8 *)(a2 + 441);
  uint64_t v71 = *(void *)(a2 + 448);
  uint64_t v72 = *(unsigned __int8 *)(a2 + 457);
  uint64_t v74 = *(void *)(a2 + 464);
  __int16 v73 = *(unsigned __int8 *)(a2 + 473);
  uint64_t v41 = *(void *)(a2 + 480);
  char v40 = *(unsigned char *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  *(void *)&long long v32 = *(unsigned int *)(a2 + 784);
  *((void *)&v32 + 1) = *(void *)(a2 + 792);
  long long v16 = *(_OWORD *)(a1 + 8);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v18 = *(_OWORD *)(a1 + 56);
  uint64_t v28 = *(unsigned __int8 *)(a2 + 800);
  uint64_t v19 = *(unsigned __int8 *)(a2 + 801);
  uint64_t v31 = *(void *)(a2 + 808);
  __int16 v29 = *(unsigned __int8 *)(a2 + 817);
  __int16 v30 = *(unsigned __int8 *)(a2 + 816);
  long long v20 = *(_OWORD *)(a2 + 904);
  long long v186 = *(_OWORD *)(a2 + 888);
  long long v187 = v20;
  v188[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v188 + 10) = *(_OWORD *)(a2 + 930);
  long long v21 = *(_OWORD *)(a2 + 840);
  long long v182 = *(_OWORD *)(a2 + 824);
  long long v183 = v21;
  long long v22 = *(_OWORD *)(a2 + 872);
  long long v184 = *(_OWORD *)(a2 + 856);
  long long v185 = v22;
  v172[0] = v16;
  *(void *)&v172[1] = v154;
  *(_OWORD *)((char *)&v172[1] + 8) = v17;
  *((void *)&v172[2] + 1) = v153;
  v172[3] = v18;
  LOBYTE(v172[4]) = v152;
  v171[0] = *(_OWORD *)(a2 + 8);
  *(void *)&v171[1] = v8;
  *(_OWORD *)((char *)&v171[1] + 8) = *(_OWORD *)(a2 + 32);
  *((void *)&v171[2] + 1) = v9;
  v171[3] = *(_OWORD *)(a2 + 56);
  LOBYTE(v171[4]) = v10;
  if (sub_214CF8F60((uint64_t)v172, (uint64_t)v171)) {
    return 0;
  }
  *(void *)&v172[0] = v148;
  *((void *)&v172[0] + 1) = v147;
  *(void *)&v172[1] = v151;
  *((void *)&v172[1] + 1) = v146;
  *(void *)&v172[2] = v145;
  *((void *)&v172[2] + 1) = v150;
  *(void *)&v172[3] = v144;
  *((void *)&v172[3] + 1) = v143;
  *(void *)&v172[4] = v149;
  *((void *)&v172[4] + 1) = v142;
  LOWORD(v172[5]) = v141 | (v140 << 8);
  *(void *)&v171[0] = v138;
  *((void *)&v171[0] + 1) = v137;
  *(void *)&v171[1] = v139;
  *((void *)&v171[1] + 1) = v136;
  *(void *)&v171[2] = v135;
  *((void *)&v171[2] + 1) = v11;
  *(void *)&v171[3] = v134;
  *((void *)&v171[3] + 1) = v133;
  *(void *)&v171[4] = v12;
  *((void *)&v171[4] + 1) = v132;
  LOWORD(v171[5]) = v13 | (v14 << 8);
  if (sub_214CF91AC((uint64_t)v172, (uint64_t)v171)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v23 = sub_214C8391C(v127, v128, v126, v130, v131, v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    return 0;
  }
  *(void *)&v172[0] = v125;
  *((void *)&v172[0] + 1) = v124 | (v123 << 8);
  v172[1] = v119;
  v172[2] = v120;
  *(void *)&v172[3] = v121;
  BYTE8(v172[3]) = v122;
  *(void *)&v171[0] = v118;
  *((void *)&v171[0] + 1) = v117 | (v15 << 8);
  v171[1] = v113;
  v171[2] = v114;
  *(void *)&v171[3] = v115;
  BYTE8(v171[3]) = v116;
  if (sub_214CF9450((uint64_t)v172, (uint64_t)v171)) {
    return 0;
  }
  v172[0] = v108;
  v172[1] = v109;
  v172[2] = v110;
  v172[3] = v112;
  BYTE2(v172[4]) = v111;
  LOWORD(v172[4]) = v107 | (v106 << 8);
  v171[0] = v101;
  v171[1] = v102;
  v171[2] = v103;
  v171[3] = v105;
  BYTE2(v171[4]) = v104;
  LOWORD(v171[4]) = v100 | (v99 << 8);
  if (sub_214CF962C((uint64_t)v172, (uint64_t)v171)) {
    return 0;
  }
  *(void *)&v172[0] = v89;
  *((void *)&v172[0] + 1) = v88;
  *(void *)&v172[1] = v85 | (v82 << 8) | (v84 << 16);
  *((void *)&v172[1] + 1) = v87;
  *(void *)&v172[2] = v83 | (v81 << 8);
  *((void *)&v172[2] + 1) = v86;
  *(void *)&v172[3] = v96 | (v80 << 8);
  *((void *)&v172[3] + 1) = v91;
  *(void *)&v172[4] = v95 | (v79 << 8);
  *((void *)&v172[4] + 1) = v93;
  *(void *)&v172[5] = v98 | (v92 << 8);
  *((void *)&v172[5] + 1) = v94;
  LOWORD(v172[6]) = v97 | (v90 << 8);
  *(void *)&v171[0] = v63;
  *((void *)&v171[0] + 1) = v66;
  *(void *)&v171[1] = v61 | (v60 << 8) | (v62 << 16);
  *((void *)&v171[1] + 1) = v65;
  v171[2] = v67 | (unint64_t)(v64 << 8);
  *(void *)&v171[3] = v78 | (v68 << 8);
  *((void *)&v171[3] + 1) = v69;
  *(void *)&v171[4] = v77 | (v70 << 8);
  *((void *)&v171[4] + 1) = v71;
  *(void *)&v171[5] = v76 | (v72 << 8);
  *((void *)&v171[5] + 1) = v74;
  LOWORD(v171[6]) = v75 | (v73 << 8);
  if (sub_214CF98CC((uint64_t)v172, (uint64_t)v171)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v24 = sub_214C8391C(v54, v56, v55, v57, v59, v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0) {
    return 0;
  }
  if ((sub_214C865E8(v51 | (unsigned __int16)(v50 << 8), v53 | (unsigned __int16)(v52 << 8)) & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v25 = sub_214C8391C(v44, v46, v45, v47, v49, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0) {
    return 0;
  }
  *(void *)&v172[0] = v43;
  BYTE8(v172[0]) = v42;
  *(void *)&v171[0] = v41;
  BYTE8(v171[0]) = v40;
  if (sub_214CF9CA0((uint64_t *)v172, (uint64_t *)v171)) {
    return 0;
  }
  memcpy(v171, __dst, 0x119uLL);
  nullsub_1(v171);
  sub_214B6AC38((uint64_t)v171, (uint64_t)&v164, &qword_26784EAD8);
  memcpy(v172, __src, 0x119uLL);
  nullsub_1(v172);
  sub_214B6AC38((uint64_t)v172, (uint64_t)&v157, &qword_26784EAD8);
  if (sub_214CFA4F4((uint64_t)&v164, (uint64_t)&v157)) {
    return 0;
  }
  *(void *)&long long v164 = v34;
  *((void *)&v164 + 1) = v36;
  *(void *)&long long v165 = v37 | (v33 << 8);
  *((void *)&v165 + 1) = v39;
  LOWORD(v166) = v38 | (v35 << 8);
  long long v157 = v32;
  *(void *)&long long v158 = v28 | (v19 << 8);
  *((void *)&v158 + 1) = v31;
  LOWORD(v159) = v30 | (v29 << 8);
  if (sub_214CFB024((uint64_t *)&v164, (uint64_t *)&v157))
  {
    return 0;
  }
  else
  {
    long long v161 = v178;
    long long v162 = v179;
    v163[0] = v180[0];
    *(_OWORD *)((char *)v163 + 10) = *(_OWORD *)((char *)v180 + 10);
    long long v157 = v174;
    long long v158 = v175;
    long long v159 = v176;
    long long v160 = v177;
    nullsub_1(&v157);
    sub_214B6AC38((uint64_t)&v157, (uint64_t)v156, &qword_26784EAE0);
    long long v168 = v186;
    long long v169 = v187;
    v170[0] = v188[0];
    *(_OWORD *)((char *)v170 + 10) = *(_OWORD *)((char *)v188 + 10);
    long long v164 = v182;
    long long v165 = v183;
    long long v166 = v184;
    long long v167 = v185;
    nullsub_1(&v164);
    sub_214B6AC38((uint64_t)&v164, (uint64_t)v155, &qword_26784EAE0);
    return !sub_214CFB13C((uint64_t)v156, (uint64_t)v155);
  }
}

unint64_t ArmandDeviceData.description.getter()
{
  uint64_t v0 = sub_214D1A0A8();
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v2 = sub_214C78B10();
  unint64_t v4 = v3;
  sub_214D1A088();
  sub_214D1A058();
  uint64_t v6 = v5;
  sub_214B58A4C(v2, v4);
  if (!v6) {
    return 0xD00000000000001FLL;
  }
  swift_bridgeObjectRetain();
  sub_214D1A188();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v8 = (void *)sub_214D1A028();
  unsigned int v9 = objc_msgSend(v7, sel_BOOLForKey_, v8);

  if (v9)
  {
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v11 = 0x6144656369766544;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
    sub_214D1A108();
    swift_bridgeObjectRelease();
    sub_214D1A108();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_214D1A7A8();
    swift_bridgeObjectRelease();
    unint64_t v11 = 0xD000000000000011;
    sub_214D1AB78();
    sub_214D1A108();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_214C78B10()
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v1 = *v0;
  memcpy(__dst, v0 + 1, sizeof(__dst));
  if (v1) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = MEMORY[0x263F8EE78];
  }
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    unint64_t v4 = (void *)swift_bridgeObjectRetain();
    uint64_t v5 = (unsigned char *)(v2 + 89);
    uint64_t v44 = (void *)MEMORY[0x263F8EE80];
    uint64_t v39 = v4;
    while (1)
    {
      uint64_t v41 = v3;
      id v7 = *(void **)(v5 - 57);
      uint64_t v42 = *(void *)(v5 - 49);
      uint64_t v8 = *(void *)(v5 - 41);
      uint64_t v45 = *(void *)(v5 - 33);
      uint64_t v46 = v8;
      char v9 = *(v5 - 25);
      char v47 = *v5;
      char v10 = *(v5 - 1);
      uint64_t v11 = *(void *)(v5 - 9);
      uint64_t v12 = *(void *)(v5 - 17);
      char v40 = v5;
      char v13 = *(v5 - 24);
      unsigned __int8 v55 = v4;
      memcpy(v56, __dst, 0x402uLL);
      v48[0] = v7;
      v48[1] = v42;
      void v48[2] = v8;
      v48[3] = v45;
      char v49 = v9;
      char v50 = v13;
      uint64_t v51 = v12;
      uint64_t v52 = v11;
      char v53 = v10;
      char v54 = v47;
      sub_214CC0658((uint64_t)v48, (uint64_t)v57);
      uint64_t v43 = v58;
      uint64_t v14 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      unsigned __int8 v55 = v7;
      v56[0] = v42;
      v56[1] = v46;
      v56[2] = v45;
      char v15 = v9;
      LOBYTE(v56[3]) = v9;
      BYTE1(v56[3]) = v13;
      v56[4] = v12;
      v56[5] = v11;
      LOBYTE(v56[6]) = v10;
      BYTE1(v56[6]) = v47;
      long long v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v14 + 24);
      swift_bridgeObjectRetain();
      sub_214B6F6CC(v46, v45, v9);
      swift_bridgeObjectRetain();
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = v16(&v55, v43, v14);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unsigned __int8 v55 = v44;
      unint64_t v21 = sub_214B87FEC((uint64_t)v7, v42);
      uint64_t v22 = v44[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_24:
        __break(1u);
      }
      char v25 = v20;
      if (v44[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_214B8F2F4();
        }
      }
      else
      {
        sub_214B8A38C(v24, isUniquelyReferenced_nonNull_native);
        uint64_t v26 = sub_214B87FEC(v17, v42);
        if ((v25 & 1) != (v27 & 1))
        {
          uint64_t result = sub_214D1AC58();
          __break(1u);
          return result;
        }
        unint64_t v21 = v26;
      }
      uint64_t v28 = v55;
      uint64_t v44 = v55;
      if (v25)
      {
        uint64_t v6 = v55[7];
        swift_bridgeObjectRelease();
        *(void *)(v6 + 8 * v21) = v18;
      }
      else
      {
        v55[(v21 >> 6) + 8] |= 1 << v21;
        __int16 v29 = (uint64_t *)(v28[6] + 16 * v21);
        uint64_t *v29 = v17;
        v29[1] = v42;
        *(void *)(v28[7] + 8 * v21) = v18;
        uint64_t v30 = v28[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_24;
        }
        void v28[2] = v32;
        swift_bridgeObjectRetain();
      }
      uint64_t v5 = v40 + 64;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_214B6F6DC(v46, v45, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      uint64_t v3 = v41 - 1;
      unint64_t v4 = v39;
      if (v41 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v33 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26784D0F8);
  uint64_t v34 = (void *)sub_214D19F88();
  swift_bridgeObjectRelease();
  unsigned __int8 v55 = 0;
  id v35 = objc_msgSend(v33, sel_dataWithJSONObject_options_error_, v34, 0, &v55);

  uint64_t v36 = v55;
  if (v35)
  {
    uint64_t v37 = (void *)sub_214D19B68();
  }
  else
  {
    uint64_t v37 = v36;
    sub_214D199B8();

    swift_willThrow();
  }
  return (uint64_t)v37;
}

uint64_t sub_214C78F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26ACE4338);
  MEMORY[0x270FA5388](v7 - 8, v8);
  char v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_214B95764(a1, (uint64_t)v10, (uint64_t *)&unk_26ACE4338);
  uint64_t v11 = sub_214D1A368();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_214B59CE0((uint64_t)v10, (uint64_t *)&unk_26ACE4338);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_214D1A2D8();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_214D1A358();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    uint64_t v17 = v20;
    _DWORD v20[2] = v13;
    void v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  _OWORD v19[3] = v16;
  swift_task_create();
  return swift_release();
}

unint64_t sub_214C79114(uint64_t a1, uint64_t a2, char a3)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t inited = swift_initStackObject();
    uint64_t v7 = inited;
    *(void *)(inited + 32) = 0x65756C6176;
    *(void *)(inited + 40) = 0xE500000000000000;
    uint64_t v8 = MEMORY[0x263F8D310];
    uint64_t v9 = MEMORY[0x263F8D320];
    *(_OWORD *)(inited + 16) = xmmword_214D1C1F0;
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = v9;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = a2;
    *(void *)(inited + 88) = 0x646F43726F727265;
    *(void *)(inited + 96) = 0xE900000000000065;
    if ((a3 + 47) >= 9u)
    {
      uint64_t v10 = -1;
      switch(a3)
      {
        case 1:
          uint64_t v10 = -2;
          break;
        case 2:
          uint64_t v10 = -3;
          break;
        case 3:
          uint64_t v10 = -4;
          break;
        case 4:
          uint64_t v10 = -5;
          break;
        case 5:
          uint64_t v10 = -6;
          break;
        case 6:
          uint64_t v10 = -7;
          break;
        case 7:
          uint64_t v10 = -8;
          break;
        case 8:
          uint64_t v10 = -9;
          break;
        case 9:
          uint64_t v10 = -10;
          break;
        case 10:
          uint64_t v10 = -11;
          break;
        case 11:
          uint64_t v10 = -12;
          break;
        case 12:
          uint64_t v10 = -13;
          break;
        case 13:
          uint64_t v10 = -14;
          break;
        case 14:
          uint64_t v10 = -15;
          break;
        case 15:
          uint64_t v10 = -16;
          break;
        case 16:
          uint64_t v10 = -17;
          break;
        case 17:
          uint64_t v10 = -18;
          break;
        case 18:
          uint64_t v10 = -19;
          break;
        case 19:
          uint64_t v10 = -20;
          break;
        case 20:
          uint64_t v10 = -21;
          break;
        case 21:
          uint64_t v10 = -22;
          break;
        case 22:
          uint64_t v10 = -28;
          break;
        case 23:
          uint64_t v10 = -29;
          break;
        case 24:
          uint64_t v10 = 200;
          break;
        case 25:
          uint64_t v10 = 20000;
          break;
        case 26:
          uint64_t v10 = 20001;
          break;
        case 27:
          uint64_t v10 = 20100;
          break;
        case 28:
          uint64_t v10 = 40000;
          break;
        case 29:
          uint64_t v10 = 40010;
          break;
        case 30:
          uint64_t v10 = 40011;
          break;
        case 31:
          uint64_t v10 = 40012;
          break;
        case 32:
          uint64_t v10 = 40013;
          break;
        case 33:
          uint64_t v10 = 40014;
          break;
        case 34:
          uint64_t v10 = 40015;
          break;
        case 35:
          uint64_t v10 = 40020;
          break;
        case 36:
          uint64_t v10 = 40021;
          break;
        case 37:
          uint64_t v10 = 40022;
          break;
        case 38:
          uint64_t v10 = 40023;
          break;
        case 39:
          uint64_t v10 = 40024;
          break;
        case 40:
          uint64_t v10 = 40025;
          break;
        case 41:
          uint64_t v10 = 40026;
          break;
        case 42:
          uint64_t v10 = 40027;
          break;
        case 43:
          uint64_t v10 = 40028;
          break;
        case 44:
          uint64_t v10 = 40029;
          break;
        case 45:
          uint64_t v10 = 40030;
          break;
        case 46:
          uint64_t v10 = 40101;
          break;
        case 47:
          uint64_t v10 = 40102;
          break;
        case 48:
          uint64_t v10 = 40200;
          break;
        case 49:
          uint64_t v10 = 40201;
          break;
        case 50:
          uint64_t v10 = 40205;
          break;
        case 51:
          uint64_t v10 = 40401;
          break;
        case 52:
          uint64_t v10 = 40402;
          break;
        case 53:
          uint64_t v10 = 40403;
          break;
        case 54:
          uint64_t v10 = 40404;
          break;
        case 55:
          uint64_t v10 = 40500;
          break;
        case 56:
          uint64_t v10 = 40600;
          break;
        case 57:
          uint64_t v10 = 40601;
          break;
        case 58:
          uint64_t v10 = 50000;
          break;
        case 59:
          uint64_t v10 = 50001;
          break;
        case 60:
          uint64_t v10 = 50002;
          break;
        case 61:
          uint64_t v10 = 99991;
          break;
        case 62:
          uint64_t v10 = 99992;
          break;
        case 63:
          uint64_t v10 = 99993;
          break;
        case 64:
          uint64_t v10 = -1101;
          break;
        case 65:
          uint64_t v10 = -1102;
          break;
        case 66:
          uint64_t v10 = -1103;
          break;
        case 67:
          uint64_t v10 = -1104;
          break;
        case 68:
          uint64_t v10 = -1110;
          break;
        case 69:
          uint64_t v10 = -1111;
          break;
        case 70:
          uint64_t v10 = -1112;
          break;
        case 71:
          uint64_t v10 = -1113;
          break;
        case 72:
          uint64_t v10 = -1114;
          break;
        case 73:
          uint64_t v10 = -1115;
          break;
        case 74:
          uint64_t v10 = -1116;
          break;
        case 75:
          uint64_t v10 = -1117;
          break;
        case 76:
          uint64_t v10 = -1118;
          break;
        case 77:
          uint64_t v10 = -1119;
          break;
        case 78:
          uint64_t v10 = -1201;
          break;
        case 79:
          uint64_t v10 = -1202;
          break;
        case 80:
          uint64_t v10 = -1203;
          break;
        case 81:
          uint64_t v10 = -1204;
          break;
        case 82:
          uint64_t v10 = -1402;
          break;
        case 83:
          uint64_t v10 = -1403;
          break;
        case 84:
          uint64_t v10 = -1404;
          break;
        case 85:
          uint64_t v10 = -1301;
          break;
        case 86:
          uint64_t v10 = -1302;
          break;
        case 87:
          uint64_t v10 = -1303;
          break;
        case 88:
          uint64_t v10 = -1304;
          break;
        case 89:
          uint64_t v10 = -1305;
          break;
        case 90:
          uint64_t v10 = -1306;
          break;
        case 91:
          uint64_t v10 = -1307;
          break;
        case 92:
          uint64_t v10 = -1308;
          break;
        case 93:
          uint64_t v10 = -1309;
          break;
        case 94:
          uint64_t v10 = -1310;
          break;
        case 95:
          uint64_t v10 = -1315;
          break;
        case 96:
          uint64_t v10 = -1316;
          break;
        case 97:
          uint64_t v10 = -1317;
          break;
        case 98:
          uint64_t v10 = -131600;
          break;
        case 99:
          uint64_t v10 = -2103;
          break;
        case 100:
          uint64_t v10 = -2104;
          break;
        case 101:
          uint64_t v10 = -2107;
          break;
        case 102:
          uint64_t v10 = -2110;
          break;
        case 103:
          uint64_t v10 = -2111;
          break;
        case 104:
          uint64_t v10 = -2112;
          break;
        case 105:
          uint64_t v10 = -2123;
          break;
        case 106:
          uint64_t v10 = -2124;
          break;
        case 107:
          uint64_t v10 = -2125;
          break;
        case 108:
          uint64_t v10 = -2126;
          break;
        case 109:
          uint64_t v10 = -2127;
          break;
        case 110:
          uint64_t v10 = -3101;
          break;
        case 111:
          uint64_t v10 = -3102;
          break;
        case 112:
          uint64_t v10 = -3103;
          break;
        case 113:
          uint64_t v10 = -3104;
          break;
        case 114:
          uint64_t v10 = -3105;
          break;
        case 115:
          uint64_t v10 = -3106;
          break;
        case 116:
          uint64_t v10 = -3107;
          break;
        case 117:
          uint64_t v10 = -3108;
          break;
        case 118:
          uint64_t v10 = -3109;
          break;
        case 119:
          uint64_t v10 = -3110;
          break;
        case 120:
          uint64_t v10 = -3111;
          break;
        case 121:
          uint64_t v10 = -3112;
          break;
        case 122:
          uint64_t v10 = -3113;
          break;
        case 123:
          uint64_t v10 = -3151;
          break;
        case 124:
          uint64_t v10 = -3152;
          break;
        case 125:
          uint64_t v10 = -3153;
          break;
        case 126:
          uint64_t v10 = -3154;
          break;
        case 127:
          uint64_t v10 = -3155;
          break;
        case -128:
          uint64_t v10 = -3156;
          break;
        case -127:
          uint64_t v10 = -3157;
          break;
        case -126:
          uint64_t v10 = -3158;
          break;
        case -125:
          uint64_t v10 = -3159;
          break;
        case -124:
          uint64_t v10 = -3161;
          break;
        case -123:
          uint64_t v10 = -3162;
          break;
        case -122:
          uint64_t v10 = -3163;
          break;
        case -121:
          uint64_t v10 = -3164;
          break;
        case -120:
          uint64_t v10 = -3165;
          break;
        case -119:
          uint64_t v10 = -3166;
          break;
        case -118:
          uint64_t v10 = -3167;
          break;
        case -117:
          uint64_t v10 = -3168;
          break;
        case -116:
          uint64_t v10 = -3169;
          break;
        case -115:
          uint64_t v10 = -3170;
          break;
        case -114:
          uint64_t v10 = -3171;
          break;
        case -113:
          uint64_t v10 = -3172;
          break;
        case -112:
          uint64_t v10 = -3173;
          break;
        case -111:
          uint64_t v10 = -3174;
          break;
        case -110:
          uint64_t v10 = -3175;
          break;
        case -109:
          uint64_t v10 = -3176;
          break;
        case -108:
          uint64_t v10 = -3177;
          break;
        case -107:
          uint64_t v10 = -3178;
          break;
        case -106:
          uint64_t v10 = -3179;
          break;
        case -105:
          uint64_t v10 = -3180;
          break;
        case -104:
          uint64_t v10 = -3181;
          break;
        case -103:
          uint64_t v10 = -3182;
          break;
        case -102:
          uint64_t v10 = -3183;
          break;
        case -101:
          uint64_t v10 = -3184;
          break;
        case -100:
          uint64_t v10 = -3185;
          break;
        case -99:
          uint64_t v10 = -3186;
          break;
        case -98:
          uint64_t v10 = -3187;
          break;
        case -97:
          uint64_t v10 = -3188;
          break;
        case -96:
          uint64_t v10 = -3189;
          break;
        case -95:
          uint64_t v10 = -3300;
          break;
        case -94:
          uint64_t v10 = -5108;
          break;
        case -93:
          uint64_t v10 = -6009;
          break;
        case -92:
          uint64_t v10 = -6010;
          break;
        case -91:
          uint64_t v10 = -6102;
          break;
        case -90:
          uint64_t v10 = -6103;
          break;
        case -89:
          uint64_t v10 = -6104;
          break;
        case -88:
          uint64_t v10 = -6105;
          break;
        case -87:
          uint64_t v10 = -8001;
          break;
        case -86:
          uint64_t v10 = -8301;
          break;
        case -85:
          uint64_t v10 = -8304;
          break;
        case -84:
          uint64_t v10 = -8400;
          break;
        case -83:
          uint64_t v10 = -8401;
          break;
        case -82:
          uint64_t v10 = -8403;
          break;
        case -81:
          uint64_t v10 = -8404;
          break;
        case -80:
          uint64_t v10 = -8428;
          break;
        case -79:
          uint64_t v10 = -8429;
          break;
        case -78:
          uint64_t v10 = -8433;
          break;
        case -77:
          uint64_t v10 = -8434;
          break;
        case -76:
          uint64_t v10 = -8500;
          break;
        case -75:
          uint64_t v10 = -8501;
          break;
        case -74:
          uint64_t v10 = -8502;
          break;
        case -73:
          uint64_t v10 = -8503;
          break;
        case -72:
          uint64_t v10 = -8504;
          break;
        case -71:
          uint64_t v10 = -22200;
          break;
        case -70:
          uint64_t v10 = -22201;
          break;
        case -69:
          uint64_t v10 = -22202;
          break;
        case -68:
          uint64_t v10 = -22203;
          break;
        case -67:
          uint64_t v10 = -22204;
          break;
        case -66:
          uint64_t v10 = -22205;
          break;
        case -65:
          uint64_t v10 = -22206;
          break;
        case -64:
          uint64_t v10 = -22207;
          break;
        case -63:
          uint64_t v10 = -22208;
          break;
        case -62:
          uint64_t v10 = -72200;
          break;
        case -61:
          uint64_t v10 = -72201;
          break;
        case -60:
          uint64_t v10 = -72202;
          break;
        case -59:
          uint64_t v10 = -72203;
          break;
        case -58:
          uint64_t v10 = -72204;
          break;
        case -57:
          uint64_t v10 = -72205;
          break;
        case -56:
          uint64_t v10 = -72206;
          break;
        case -55:
          uint64_t v10 = -72207;
          break;
        case -54:
          uint64_t v10 = -72208;
          break;
        case -53:
          uint64_t v10 = -72209;
          break;
        case -52:
          uint64_t v10 = -72210;
          break;
        case -51:
          uint64_t v10 = -72211;
          break;
        case -50:
          uint64_t v10 = -72780;
          break;
        case -49:
          uint64_t v10 = -72781;
          break;
        case -48:
          uint64_t v10 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v10 = -(uint64_t)(a3 + 47);
    }
    uint64_t v11 = MEMORY[0x263F8D6D8];
    *(void *)(inited + 128) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 136) = v11;
    *(void *)(inited + 104) = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26784D880);
    uint64_t v12 = swift_initStackObject();
    uint64_t v7 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_214D1C1E0;
    *(void *)(v12 + 32) = 0x646F43726F727265;
    *(void *)(v12 + 40) = 0xE900000000000065;
    if ((a3 + 47) >= 9u)
    {
      uint64_t v13 = -1;
      switch(a3)
      {
        case 1:
          uint64_t v13 = -2;
          break;
        case 2:
          uint64_t v13 = -3;
          break;
        case 3:
          uint64_t v13 = -4;
          break;
        case 4:
          uint64_t v13 = -5;
          break;
        case 5:
          uint64_t v13 = -6;
          break;
        case 6:
          uint64_t v13 = -7;
          break;
        case 7:
          uint64_t v13 = -8;
          break;
        case 8:
          uint64_t v13 = -9;
          break;
        case 9:
          uint64_t v13 = -10;
          break;
        case 10:
          uint64_t v13 = -11;
          break;
        case 11:
          uint64_t v13 = -12;
          break;
        case 12:
          uint64_t v13 = -13;
          break;
        case 13:
          uint64_t v13 = -14;
          break;
        case 14:
          uint64_t v13 = -15;
          break;
        case 15:
          uint64_t v13 = -16;
          break;
        case 16:
          uint64_t v13 = -17;
          break;
        case 17:
          uint64_t v13 = -18;
          break;
        case 18:
          uint64_t v13 = -19;
          break;
        case 19:
          uint64_t v13 = -20;
          break;
        case 20:
          uint64_t v13 = -21;
          break;
        case 21:
          uint64_t v13 = -22;
          break;
        case 22:
          uint64_t v13 = -28;
          break;
        case 23:
          uint64_t v13 = -29;
          break;
        case 24:
          uint64_t v13 = 200;
          break;
        case 25:
          uint64_t v13 = 20000;
          break;
        case 26:
          uint64_t v13 = 20001;
          break;
        case 27:
          uint64_t v13 = 20100;
          break;
        case 28:
          uint64_t v13 = 40000;
          break;
        case 29:
          uint64_t v13 = 40010;
          break;
        case 30:
          uint64_t v13 = 40011;
          break;
        case 31:
          uint64_t v13 = 40012;
          break;
        case 32:
          uint64_t v13 = 40013;
          break;
        case 33:
          uint64_t v13 = 40014;
          break;
        case 34:
          uint64_t v13 = 40015;
          break;
        case 35:
          uint64_t v13 = 40020;
          break;
        case 36:
          uint64_t v13 = 40021;
          break;
        case 37:
          uint64_t v13 = 40022;
          break;
        case 38:
          uint64_t v13 = 40023;
          break;
        case 39:
          uint64_t v13 = 40024;
          break;
        case 40:
          uint64_t v13 = 40025;
          break;
        case 41:
          uint64_t v13 = 40026;
          break;
        case 42:
          uint64_t v13 = 40027;
          break;
        case 43:
          uint64_t v13 = 40028;
          break;
        case 44:
          uint64_t v13 = 40029;
          break;
        case 45:
          uint64_t v13 = 40030;
          break;
        case 46:
          uint64_t v13 = 40101;
          break;
        case 47:
          uint64_t v13 = 40102;
          break;
        case 48:
          uint64_t v13 = 40200;
          break;
        case 49:
          uint64_t v13 = 40201;
          break;
        case 50:
          uint64_t v13 = 40205;
          break;
        case 51:
          uint64_t v13 = 40401;
          break;
        case 52:
          uint64_t v13 = 40402;
          break;
        case 53:
          uint64_t v13 = 40403;
          break;
        case 54:
          uint64_t v13 = 40404;
          break;
        case 55:
          uint64_t v13 = 40500;
          break;
        case 56:
          uint64_t v13 = 40600;
          break;
        case 57:
          uint64_t v13 = 40601;
          break;
        case 58:
          uint64_t v13 = 50000;
          break;
        case 59:
          uint64_t v13 = 50001;
          break;
        case 60:
          uint64_t v13 = 50002;
          break;
        case 61:
          uint64_t v13 = 99991;
          break;
        case 62:
          uint64_t v13 = 99992;
          break;
        case 63:
          uint64_t v13 = 99993;
          break;
        case 64:
          uint64_t v13 = -1101;
          break;
        case 65:
          uint64_t v13 = -1102;
          break;
        case 66:
          uint64_t v13 = -1103;
          break;
        case 67:
          uint64_t v13 = -1104;
          break;
        case 68:
          uint64_t v13 = -1110;
          break;
        case 69:
          uint64_t v13 = -1111;
          break;
        case 70:
          uint64_t v13 = -1112;
          break;
        case 71:
          uint64_t v13 = -1113;
          break;
        case 72:
          uint64_t v13 = -1114;
          break;
        case 73:
          uint64_t v13 = -1115;
          break;
        case 74:
          uint64_t v13 = -1116;
          break;
        case 75:
          uint64_t v13 = -1117;
          break;
        case 76:
          uint64_t v13 = -1118;
          break;
        case 77:
          uint64_t v13 = -1119;
          break;
        case 78:
          uint64_t v13 = -1201;
          break;
        case 79:
          uint64_t v13 = -1202;
          break;
        case 80:
          uint64_t v13 = -1203;
          break;
        case 81:
          uint64_t v13 = -1204;
          break;
        case 82:
          uint64_t v13 = -1402;
          break;
        case 83:
          uint64_t v13 = -1403;
          break;
        case 84:
          uint64_t v13 = -1404;
          break;
        case 85:
          uint64_t v13 = -1301;
          break;
        case 86:
          uint64_t v13 = -1302;
          break;
        case 87:
          uint64_t v13 = -1303;
          break;
        case 88:
          uint64_t v13 = -1304;
          break;
        case 89:
          uint64_t v13 = -1305;
          break;
        case 90:
          uint64_t v13 = -1306;
          break;
        case 91:
          uint64_t v13 = -1307;
          break;
        case 92:
          uint64_t v13 = -1308;
          break;
        case 93:
          uint64_t v13 = -1309;
          break;
        case 94:
          uint64_t v13 = -1310;
          break;
        case 95:
          uint64_t v13 = -1315;
          break;
        case 96:
          uint64_t v13 = -1316;
          break;
        case 97:
          uint64_t v13 = -1317;
          break;
        case 98:
          uint64_t v13 = -131600;
          break;
        case 99:
          uint64_t v13 = -2103;
          break;
        case 100:
          uint64_t v13 = -2104;
          break;
        case 101:
          uint64_t v13 = -2107;
          break;
        case 102:
          uint64_t v13 = -2110;
          break;
        case 103:
          uint64_t v13 = -2111;
          break;
        case 104:
          uint64_t v13 = -2112;
          break;
        case 105:
          uint64_t v13 = -2123;
          break;
        case 106:
          uint64_t v13 = -2124;
          break;
        case 107:
          uint64_t v13 = -2125;
          break;
        case 108:
          uint64_t v13 = -2126;
          break;
        case 109:
          uint64_t v13 = -2127;
          break;
        case 110:
          uint64_t v13 = -3101;
          break;
        case 111:
          uint64_t v13 = -3102;
          break;
        case 112:
          uint64_t v13 = -3103;
          break;
        case 113:
          uint64_t v13 = -3104;
          break;
        case 114:
          uint64_t v13 = -3105;
          break;
        case 115:
          uint64_t v13 = -3106;
          break;
        case 116:
          uint64_t v13 = -3107;
          break;
        case 117:
          uint64_t v13 = -3108;
          break;
        case 118:
          uint64_t v13 = -3109;
          break;
        case 119:
          uint64_t v13 = -3110;
          break;
        case 120:
          uint64_t v13 = -3111;
          break;
        case 121:
          uint64_t v13 = -3112;
          break;
        case 122:
          uint64_t v13 = -3113;
          break;
        case 123:
          uint64_t v13 = -3151;
          break;
        case 124:
          uint64_t v13 = -3152;
          break;
        case 125:
          uint64_t v13 = -3153;
          break;
        case 126:
          uint64_t v13 = -3154;
          break;
        case 127:
          uint64_t v13 = -3155;
          break;
        case -128:
          uint64_t v13 = -3156;
          break;
        case -127:
          uint64_t v13 = -3157;
          break;
        case -126:
          uint64_t v13 = -3158;
          break;
        case -125:
          uint64_t v13 = -3159;
          break;
        case -124:
          uint64_t v13 = -3161;
          break;
        case -123:
          uint64_t v13 = -3162;
          break;
        case -122:
          uint64_t v13 = -3163;
          break;
        case -121:
          uint64_t v13 = -3164;
          break;
        case -120:
          uint64_t v13 = -3165;
          break;
        case -119:
          uint64_t v13 = -3166;
          break;
        case -118:
          uint64_t v13 = -3167;
          break;
        case -117:
          uint64_t v13 = -3168;
          break;
        case -116:
          uint64_t v13 = -3169;
          break;
        case -115:
          uint64_t v13 = -3170;
          break;
        case -114:
          uint64_t v13 = -3171;
          break;
        case -113:
          uint64_t v13 = -3172;
          break;
        case -112:
          uint64_t v13 = -3173;
          break;
        case -111:
          uint64_t v13 = -3174;
          break;
        case -110:
          uint64_t v13 = -3175;
          break;
        case -109:
          uint64_t v13 = -3176;
          break;
        case -108:
          uint64_t v13 = -3177;
          break;
        case -107:
          uint64_t v13 = -3178;
          break;
        case -106:
          uint64_t v13 = -3179;
          break;
        case -105:
          uint64_t v13 = -3180;
          break;
        case -104:
          uint64_t v13 = -3181;
          break;
        case -103:
          uint64_t v13 = -3182;
          break;
        case -102:
          uint64_t v13 = -3183;
          break;
        case -101:
          uint64_t v13 = -3184;
          break;
        case -100:
          uint64_t v13 = -3185;
          break;
        case -99:
          uint64_t v13 = -3186;
          break;
        case -98:
          uint64_t v13 = -3187;
          break;
        case -97:
          uint64_t v13 = -3188;
          break;
        case -96:
          uint64_t v13 = -3189;
          break;
        case -95:
          uint64_t v13 = -3300;
          break;
        case -94:
          uint64_t v13 = -5108;
          break;
        case -93:
          uint64_t v13 = -6009;
          break;
        case -92:
          uint64_t v13 = -6010;
          break;
        case -91:
          uint64_t v13 = -6102;
          break;
        case -90:
          uint64_t v13 = -6103;
          break;
        case -89:
          uint64_t v13 = -6104;
          break;
        case -88:
          uint64_t v13 = -6105;
          break;
        case -87:
          uint64_t v13 = -8001;
          break;
        case -86:
          uint64_t v13 = -8301;
          break;
        case -85:
          uint64_t v13 = -8304;
          break;
        case -84:
          uint64_t v13 = -8400;
          break;
        case -83:
          uint64_t v13 = -8401;
          break;
        case -82:
          uint64_t v13 = -8403;
          break;
        case -81:
          uint64_t v13 = -8404;
          break;
        case -80:
          uint64_t v13 = -8428;
          break;
        case -79:
          uint64_t v13 = -8429;
          break;
        case -78:
          uint64_t v13 = -8433;
          break;
        case -77:
          uint64_t v13 = -8434;
          break;
        case -76:
          uint64_t v13 = -8500;
          break;
        case -75:
          uint64_t v13 = -8501;
          break;
        case -74:
          uint64_t v13 = -8502;
          break;
        case -73:
          uint64_t v13 = -8503;
          break;
        case -72:
          uint64_t v13 = -8504;
          break;
        case -71:
          uint64_t v13 = -22200;
          break;
        case -70:
          uint64_t v13 = -22201;
          break;
        case -69:
          uint64_t v13 = -22202;
          break;
        case -68:
          uint64_t v13 = -22203;
          break;
        case -67:
          uint64_t v13 = -22204;
          break;
        case -66:
          uint64_t v13 = -22205;
          break;
        case -65:
          uint64_t v13 = -22206;
          break;
        case -64:
          uint64_t v13 = -22207;
          break;
        case -63:
          uint64_t v13 = -22208;
          break;
        case -62:
          uint64_t v13 = -72200;
          break;
        case -61:
          uint64_t v13 = -72201;
          break;
        case -60:
          uint64_t v13 = -72202;
          break;
        case -59:
          uint64_t v13 = -72203;
          break;
        case -58:
          uint64_t v13 = -72204;
          break;
        case -57:
          uint64_t v13 = -72205;
          break;
        case -56:
          uint64_t v13 = -72206;
          break;
        case -55:
          uint64_t v13 = -72207;
          break;
        case -54:
          uint64_t v13 = -72208;
          break;
        case -53:
          uint64_t v13 = -72209;
          break;
        case -52:
          uint64_t v13 = -72210;
          break;
        case -51:
          uint64_t v13 = -72211;
          break;
        case -50:
          uint64_t v13 = -72780;
          break;
        case -49:
          uint64_t v13 = -72781;
          break;
        case -48:
          uint64_t v13 = -72782;
          break;
        default:
          break;
      }
    }
    else
    {
      uint64_t v13 = -(uint64_t)(a3 + 47);
    }
    uint64_t v14 = MEMORY[0x263F8D6D8];
    *(void *)(v12 + 72) = MEMORY[0x263F8D6C8];
    *(void *)(v12 + 80) = v14;
    *(void *)(v12 + 48) = v13;
  }
  return sub_214B7E450(v7);
}