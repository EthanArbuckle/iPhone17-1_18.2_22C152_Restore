uint64_t sub_21F29CC80()
{
  uint64_t result;

  type metadata accessor for TimeBasedPlayMediaStitcher();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7460);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  result = sub_21F4201A8();
  qword_267EC7168 = 91;
  unk_267EC7170 = 0xE100000000000000;
  return result;
}

uint64_t TimeBasedPlayMediaStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:)(double a1)
{
  uint64_t result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t TimeBasedPlayMediaStitcher.init(maximumTimeDeltaBetweenTurns:)(double a1)
{
  uint64_t result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_21F29CD44(unint64_t *a1, uint64_t *a2)
{
  v97 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v106 = (uint64_t)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v101 = (uint64_t)v96 - v5;
  uint64_t v6 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v103 = (uint64_t)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v98 = (uint64_t)v96 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v13 = (char *)v96 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v104 = (uint64_t)v96 - v15;
  unint64_t v16 = *a1;
  v17 = *(void (**)(void, void, void, void))(*a1 + 16);
  uint64_t v107 = v6;
  uint64_t v105 = v14;
  unint64_t v102 = v16;
  if (!v17)
  {
    swift_bridgeObjectRetain();
LABEL_29:
    uint64_t v32 = v105;
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
    uint64_t v31 = v101;
    v33(v101, 1, 1, v6);
    goto LABEL_30;
  }
  unint64_t v18 = v16 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v109 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  v110 = "essages.SendMessageIntent";
  unint64_t v108 = 0x800000021F431DE0;
  v100 = v17;
  unint64_t v99 = v18;
  while (1)
  {
    sub_21F29F8BC(v18 + v109 * v19, (uint64_t)v13);
    uint64_t v20 = *(void *)&v13[*(int *)(v6 + 24)];
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = v20 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(v22, (uint64_t)&v112);
        sub_21F29F920((uint64_t)&v112, (uint64_t)v111);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        sub_21F41F868();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v112);
        v22 += 40;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v112, (uint64_t)&v114);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_9:
      uint64_t v116 = 0;
      long long v114 = 0u;
      long long v115 = 0u;
    }
    sub_21F29F984((uint64_t)&v114, (uint64_t)&v112);
    if (!v113)
    {
      sub_21F29FA48((uint64_t)&v112, &qword_26AD3A880);
LABEL_22:
      sub_21F29FA48((uint64_t)&v114, &qword_26AD3A880);
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    sub_21F41F868();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_22;
    }
    swift_retain();
    sub_21F41FAB8();
    swift_release_n();
    uint64_t v23 = v112;
    sub_21F29FA48((uint64_t)&v114, &qword_26AD3A880);
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v23 + 16);
    if (!v24) {
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v25 = sub_21F29FAA4();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_27;
    }
    if (v24 != 1) {
      break;
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v107;
    v17 = v100;
    unint64_t v18 = v99;
LABEL_24:
    ++v19;
    sub_21F29F9EC((uint64_t)v13);
    if ((void (*)(void, void, void, void))v19 == v17) {
      goto LABEL_29;
    }
  }
  uint64_t v26 = v23 + 56;
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_97;
    }
    swift_bridgeObjectRetain();
    char v29 = sub_21F29FAA4();
    swift_bridgeObjectRelease();
    if (v29) {
      break;
    }
    ++v27;
    v26 += 16;
    if (v28 == v24) {
      goto LABEL_20;
    }
  }
LABEL_27:
  swift_bridgeObjectRelease_n();
  uint64_t v30 = (uint64_t)v13;
  uint64_t v31 = v101;
  sub_21F2A08C4(v30, v101);
  uint64_t v32 = v105;
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
  uint64_t v6 = v107;
  v33(v31, 0, 1, v107);
LABEL_30:
  swift_bridgeObjectRelease();
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  int v35 = v34(v31, 1, v6);
  uint64_t v36 = v106;
  if (v35 == 1)
  {
    uint64_t v36 = v31;
    goto LABEL_63;
  }
  sub_21F2A08C4(v31, v104);
  uint64_t v37 = *v97;
  unint64_t v108 = *(void *)(*v97 + 16);
  if (!v108)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = 1;
LABEL_61:
    v33(v36, v53, 1, v6);
    swift_bridgeObjectRelease();
    if (v34(v36, 1, v6) == 1)
    {
      sub_21F29F9EC(v104);
LABEL_63:
      sub_21F29FA48(v36, &qword_26AD3A8C0);
      if (qword_26AD38998 != -1) {
        goto LABEL_98;
      }
      goto LABEL_64;
    }
    sub_21F2A08C4(v36, v98);
    uint64_t v61 = swift_bridgeObjectRetain();
    double v62 = COERCE_DOUBLE(sub_21F29DE34(v61, MEMORY[0x263F74038]));
    char v64 = v63;
    swift_bridgeObjectRelease();
    if ((v64 & 1) != 0
      || (uint64_t v65 = swift_bridgeObjectRetain(),
          double v66 = COERCE_DOUBLE(sub_21F29DE34(v65, MEMORY[0x263F74048])),
          char v68 = v67,
          swift_bridgeObjectRelease(),
          (v68 & 1) != 0))
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_21F41FF28();
      __swift_project_value_buffer(v83, (uint64_t)qword_26AD3C910);
      v72 = sub_21F41FF08();
      os_log_type_t v84 = sub_21F420678();
      if (!os_log_type_enabled(v72, v84)) {
        goto LABEL_85;
      }
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(void *)&long long v114 = v75;
      *(_DWORD *)uint64_t v74 = 136315138;
      if (qword_267EC7160 != -1) {
        swift_once();
      }
      uint64_t v85 = qword_267EC7168;
      unint64_t v86 = unk_267EC7170;
      swift_bridgeObjectRetain();
      *(void *)&long long v112 = sub_21F2A02C4(v85, v86, (uint64_t *)&v114);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      os_log_type_t v78 = v84;
      v79 = "%s Failed to measure time between turns";
      v80 = v72;
      v81 = (uint8_t *)v74;
      uint32_t v82 = 12;
    }
    else
    {
      double v69 = v66 - v62;
      double v70 = *(double *)(v96[2] + 16);
      if (v66 - v62 <= v70)
      {
        if (qword_26AD38998 != -1) {
          swift_once();
        }
        uint64_t v89 = sub_21F41FF28();
        __swift_project_value_buffer(v89, (uint64_t)qword_26AD3C910);
        v90 = sub_21F41FF08();
        os_log_type_t v91 = sub_21F420668();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = (uint8_t *)swift_slowAlloc();
          uint64_t v93 = swift_slowAlloc();
          *(void *)&long long v114 = v93;
          *(_DWORD *)v92 = 136315138;
          if (qword_267EC7160 != -1) {
            swift_once();
          }
          uint64_t v94 = qword_267EC7168;
          unint64_t v95 = unk_267EC7170;
          swift_bridgeObjectRetain();
          *(void *)&long long v112 = sub_21F2A02C4(v94, v95, (uint64_t *)&v114);
          sub_21F4207D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21F29A000, v90, v91, "%s Validation passed, stitching two relevant sessions together", v92, 0xCu);
          uint64_t v87 = 1;
          swift_arrayDestroy();
          MEMORY[0x223C4B440](v93, -1, -1);
          MEMORY[0x223C4B440](v92, -1, -1);

          sub_21F29F9EC(v98);
          sub_21F29F9EC(v104);
        }
        else
        {

          sub_21F29F9EC(v98);
          sub_21F29F9EC(v104);
          return 1;
        }
        return v87;
      }
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v71 = sub_21F41FF28();
      __swift_project_value_buffer(v71, (uint64_t)qword_26AD3C910);
      swift_retain_n();
      v72 = sub_21F41FF08();
      os_log_type_t v73 = sub_21F420668();
      if (!os_log_type_enabled(v72, v73))
      {
        swift_release_n();
        goto LABEL_85;
      }
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(void *)&long long v114 = v75;
      *(_DWORD *)uint64_t v74 = 136315650;
      if (qword_267EC7160 != -1) {
        swift_once();
      }
      uint64_t v76 = qword_267EC7168;
      unint64_t v77 = unk_267EC7170;
      swift_bridgeObjectRetain();
      *(void *)&long long v112 = sub_21F2A02C4(v76, v77, (uint64_t *)&v114);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2048;
      *(double *)&long long v112 = v69;
      sub_21F4207D8();
      *(_WORD *)(v74 + 22) = 2048;
      *(double *)&long long v112 = v70;
      sub_21F4207D8();
      swift_release_n();
      os_log_type_t v78 = v73;
      v79 = "%s Turns too far apart for sessions to be stitched (%fs, max: %fs)";
      v80 = v72;
      v81 = (uint8_t *)v74;
      uint32_t v82 = 32;
    }
    _os_log_impl(&dword_21F29A000, v80, v78, v79, v81, v82);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v75, -1, -1);
    MEMORY[0x223C4B440](v74, -1, -1);
LABEL_85:

    sub_21F29F9EC(v98);
    sub_21F29F9EC(v104);
    return 0;
  }
  v97 = (uint64_t *)v34;
  unint64_t v99 = v32 + 48;
  v100 = v33;
  uint64_t v38 = v37 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v109 = *(void *)(v32 + 72);
  v96[1] = v37;
  swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  v40 = &qword_26AD3A880;
  v110 = "essages.SendMessageIntent";
  unint64_t v102 = 0x800000021F431DE0;
  uint64_t v41 = v103;
  uint64_t v101 = v38;
  while (1)
  {
    v42 = v40;
    sub_21F29F8BC(v38 + v109 * v39, v41);
    uint64_t v43 = *(void *)(v41 + *(int *)(v6 + 24));
    uint64_t v44 = *(void *)(v43 + 16);
    if (v44)
    {
      uint64_t v45 = v43 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(v45, (uint64_t)&v112);
        sub_21F29F920((uint64_t)&v112, (uint64_t)v111);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        sub_21F41F868();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v112);
        v45 += 40;
        if (!--v44)
        {
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v112, (uint64_t)&v114);
      v40 = v42;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_43:
      v40 = v42;
      uint64_t v116 = 0;
      long long v114 = 0u;
      long long v115 = 0u;
    }
    sub_21F29F984((uint64_t)&v114, (uint64_t)&v112);
    if (v113) {
      break;
    }
    sub_21F29FA48((uint64_t)&v112, v40);
LABEL_35:
    sub_21F29FA48((uint64_t)&v114, v40);
    swift_bridgeObjectRelease();
LABEL_36:
    ++v39;
    sub_21F29F9EC(v41);
    if (v39 == v108)
    {
      uint64_t v53 = 1;
      uint64_t v36 = v106;
      goto LABEL_60;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  sub_21F41F868();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_35;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v46 = v112;
  sub_21F29FA48((uint64_t)&v114, v40);
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v46 + 16);
  if (!v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v48 = sub_21F29FAA4();
  swift_bridgeObjectRelease();
  if (v48)
  {
LABEL_57:
    swift_bridgeObjectRelease_n();
    uint64_t v36 = v106;
    sub_21F2A08C4(v103, v106);
    uint64_t v53 = 0;
    uint64_t v6 = v107;
LABEL_60:
    v33 = v100;
    v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v97;
    goto LABEL_61;
  }
  if (v47 == 1)
  {
LABEL_54:
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v107;
    uint64_t v41 = v103;
    uint64_t v38 = v101;
LABEL_56:
    v40 = v42;
    goto LABEL_36;
  }
  uint64_t v49 = v46 + 56;
  uint64_t v50 = 1;
  while (1)
  {
    uint64_t v51 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    char v52 = sub_21F29FAA4();
    swift_bridgeObjectRelease();
    if (v52) {
      goto LABEL_57;
    }
    ++v50;
    v49 += 16;
    if (v51 == v47) {
      goto LABEL_54;
    }
  }
LABEL_97:
  __break(1u);
LABEL_98:
  swift_once();
LABEL_64:
  uint64_t v54 = sub_21F41FF28();
  __swift_project_value_buffer(v54, (uint64_t)qword_26AD3C910);
  v55 = sub_21F41FF08();
  os_log_type_t v56 = sub_21F420678();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(void *)&long long v114 = v58;
    *(_DWORD *)v57 = 136315138;
    if (qword_267EC7160 != -1) {
      swift_once();
    }
    uint64_t v59 = qword_267EC7168;
    unint64_t v60 = unk_267EC7170;
    swift_bridgeObjectRetain();
    *(void *)&long long v112 = sub_21F2A02C4(v59, v60, (uint64_t *)&v114);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v55, v56, "%s No adjacent play media turns", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v58, -1, -1);
    MEMORY[0x223C4B440](v57, -1, -1);
  }

  return 0;
}

uint64_t TimeBasedPlayMediaStitcher.deinit()
{
  return v0;
}

uint64_t TimeBasedPlayMediaStitcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F29DDDC(unint64_t *a1, uint64_t *a2)
{
  return sub_21F29CD44(a1, a2) & 1;
}

uint64_t sub_21F29DE04(uint64_t a1)
{
  return sub_21F29DE34(a1, MEMORY[0x263F74038]);
}

uint64_t sub_21F29DE1C(uint64_t a1)
{
  return sub_21F29DE34(a1, MEMORY[0x263F74048]);
}

uint64_t sub_21F29DE34(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v7);
      sub_21F29F920((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_21F29F984((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_21F29FA48((uint64_t)&v7, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v5 = v7;
LABEL_13:
  sub_21F29FA48((uint64_t)v9, &qword_26AD3A880);
  return v5;
}

uint64_t sub_21F29DFC8(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73EE8]);
}

uint64_t sub_21F29DFE0(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for CommonContactFeature.RecipientContactReferences);
}

uint64_t sub_21F29DFF8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v7);
      sub_21F29F920((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_21F29F984((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_21F29FA48((uint64_t)&v7, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v5 = v7;
LABEL_13:
  sub_21F29FA48((uint64_t)v9, &qword_26AD3A880);
  return v5;
}

uint64_t sub_21F29E180(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73FA8]);
}

uint64_t sub_21F29E198(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F74068]);
}

uint64_t sub_21F29E1B0(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for CommonFeature.BundleID);
}

double sub_21F29E1C8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v6);
      sub_21F29F920((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_21F29F984((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
      return result;
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v6, &qword_26AD3A880);
  }
  sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
  double result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *(_OWORD *)((char *)a2 + 41) = 0u;
  return result;
}

uint64_t sub_21F29E35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v6);
      sub_21F29F920((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_21F29F984((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      return sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v6, &qword_26AD3A880);
  }
  uint64_t result = sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 768;
  return result;
}

uint64_t sub_21F29E4EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v2, (uint64_t)&v5);
      sub_21F29F920((uint64_t)&v5, (uint64_t)v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v5);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v5, (uint64_t)v7);
  }
  else
  {
LABEL_6:
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
  }
  sub_21F29F984((uint64_t)v7, (uint64_t)&v5);
  if (!v6)
  {
    sub_21F29FA48((uint64_t)&v5, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v3 = v5;
LABEL_13:
  sub_21F29FA48((uint64_t)v7, &qword_26AD3A880);
  return v3;
}

uint64_t sub_21F29E668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F29E6C0(a1, MEMORY[0x263F73EE0], MEMORY[0x263F07508], a2);
}

uint64_t sub_21F29E694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F29E6C0(a1, (void (*)(void))type metadata accessor for CommonFeature.OrderingTimestamp, MEMORY[0x263F07490], a2);
}

uint64_t sub_21F29E6C0@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v8, (uint64_t)&v12);
      sub_21F29F920((uint64_t)&v12, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v12, (uint64_t)v14);
  }
  else
  {
LABEL_6:
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
  }
  sub_21F29F984((uint64_t)v14, (uint64_t)&v12);
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    a2(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      sub_21F29FA48((uint64_t)v14, &qword_26AD3A880);
      uint64_t v9 = a3(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a4, 0, 1, v9);
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v12, &qword_26AD3A880);
  }
  sub_21F29FA48((uint64_t)v14, &qword_26AD3A880);
  uint64_t v11 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 1, 1, v11);
}

uint64_t sub_21F29E8D4(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t sub_21F29E8EC(uint64_t a1)
{
  return sub_21F29EEDC(a1, (void (*)(void))type metadata accessor for CommonFeature.DonatedBySiri);
}

uint64_t sub_21F29E904@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_21F29F2E8(a1, (void (*)(void))type metadata accessor for PlayMediaFeature.EventOrigin, 2, a2);
}

uint64_t sub_21F29E920(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for SendMessageUSOFeature.RecipientNames);
}

uint64_t sub_21F29E938(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for USOTaskSummaryFeature);
}

uint64_t sub_21F29E950(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v7);
      sub_21F29F920((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_21F29F984((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_21F29FA48((uint64_t)&v7, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v5 = v7;
LABEL_13:
  sub_21F29FA48((uint64_t)v9, &qword_26AD3A880);
  return v5;
}

uint64_t sub_21F29EAE0(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73FC8]);
}

uint64_t sub_21F29EAF8(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73FF0]);
}

uint64_t sub_21F29EB10(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for UsoPersonRecipients);
}

uint64_t sub_21F29EB28(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
}

uint64_t sub_21F29EB40(uint64_t a1)
{
  return sub_21F29F4D0(a1, (void (*)(void))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t sub_21F29EB58(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.CallDuration);
}

uint64_t sub_21F29EB70(uint64_t a1)
{
  return sub_21F29DE34(a1, MEMORY[0x263F73FF8]);
}

uint64_t sub_21F29EB88(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.CallEndTimestamp);
}

uint64_t sub_21F29EBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F29E6C0(a1, (void (*)(void))type metadata accessor for PlusClientEventIdFeature, MEMORY[0x263F07508], a2);
}

unint64_t sub_21F29EBCC(uint64_t a1)
{
  return sub_21F29F694(a1, MEMORY[0x263F73FA0]);
}

uint64_t sub_21F29EBE4(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73ED8]);
}

uint64_t sub_21F29EBFC(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73F68]);
}

uint64_t sub_21F29EC14(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_21F29EC2C(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for CommonFeature.UniqueIdentifier);
}

double sub_21F29EC44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v6);
      sub_21F29F920((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_21F29F984((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
      return result;
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v6, &qword_26AD3A880);
  }
  sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_21F29EDD4(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.ITunesStoreIdentifier);
}

uint64_t sub_21F29EDEC(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.TotalPlayLength);
}

uint64_t sub_21F29EE04(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F78]);
}

uint64_t sub_21F29EE1C(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F70]);
}

uint64_t sub_21F29EE34(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F50]);
}

uint64_t sub_21F29EE4C(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F48]);
}

uint64_t sub_21F29EE64(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73F80]);
}

uint64_t sub_21F29EE7C(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F90]);
}

uint64_t sub_21F29EE94(uint64_t a1)
{
  return sub_21F29E950(a1, MEMORY[0x263F73F88]);
}

uint64_t sub_21F29EEAC(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t sub_21F29EEC4(uint64_t a1)
{
  return sub_21F29EEDC(a1, (void (*)(void))type metadata accessor for PlusForcePrompted);
}

uint64_t sub_21F29EEDC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v7);
      sub_21F29F920((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_21F29F984((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_21F29FA48((uint64_t)&v7, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v5 = 2;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v5 = v7;
LABEL_13:
  sub_21F29FA48((uint64_t)v9, &qword_26AD3A880);
  return v5;
}

double sub_21F29F064@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v6);
      sub_21F29F920((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for NowPlayingFeatures.MediaType(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_21F29F984((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    type metadata accessor for NowPlayingFeatures.MediaType(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
      return result;
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v6, &qword_26AD3A880);
  }
  sub_21F29FA48((uint64_t)v8, &qword_26AD3A880);
  double result = 0.0;
  *a2 = xmmword_21F421A60;
  return result;
}

uint64_t sub_21F29F1F4(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.Duration);
}

uint64_t sub_21F29F20C(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.Genre);
}

uint64_t sub_21F29F224(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.Album);
}

uint64_t sub_21F29F23C(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.Artist);
}

uint64_t sub_21F29F254(uint64_t a1)
{
  return sub_21F29E950(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.Title);
}

uint64_t sub_21F29F26C(uint64_t a1)
{
  return sub_21F29EEDC(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.CallAnswered);
}

uint64_t sub_21F29F284(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F74040]);
}

uint64_t sub_21F29F29C(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F74070]);
}

uint64_t sub_21F29F2B4(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F73F98]);
}

uint64_t sub_21F29F2CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_21F29F2E8(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.PlaybackState, 6, a2);
}

uint64_t sub_21F29F2E8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, char a3@<W2>, unsigned char *a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v8, (uint64_t)&v10);
      sub_21F29F920((uint64_t)&v10, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v10, (uint64_t)v12);
  }
  else
  {
LABEL_6:
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
  }
  sub_21F29F984((uint64_t)v12, (uint64_t)&v10);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    a2(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      return sub_21F29FA48((uint64_t)v12, &qword_26AD3A880);
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v10, &qword_26AD3A880);
  }
  uint64_t result = sub_21F29FA48((uint64_t)v12, &qword_26AD3A880);
  *a4 = a3;
  return result;
}

uint64_t sub_21F29F488(uint64_t a1)
{
  return sub_21F29DFF8(a1, (void (*)(void))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_21F29F4A0(uint64_t a1)
{
  return sub_21F29EEDC(a1, (void (*)(void))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_21F29F4B8(uint64_t a1)
{
  return sub_21F29F4D0(a1, (void (*)(void))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t sub_21F29F4D0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v7);
      sub_21F29F920((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_21F29F984((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_21F29FA48((uint64_t)&v7, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v5 = v7;
LABEL_13:
  sub_21F29FA48((uint64_t)v9, &qword_26AD3A880);
  return v5;
}

uint64_t sub_21F29F664(uint64_t a1)
{
  return sub_21F29DE34(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.CallStartTimestamp);
}

unint64_t sub_21F29F67C(uint64_t a1)
{
  return sub_21F29F694(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.AudioCallRoute);
}

unint64_t sub_21F29F694(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v4, (uint64_t)&v8);
      sub_21F29F920((uint64_t)&v8, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      a2(0);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v8, (uint64_t)v10);
  }
  else
  {
LABEL_6:
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_21F29F984((uint64_t)v10, (uint64_t)&v8);
  if (!v9)
  {
    sub_21F29FA48((uint64_t)&v8, &qword_26AD3A880);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v6 = 0;
    unsigned __int8 v5 = 1;
    goto LABEL_13;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  unsigned __int8 v5 = 0;
  uint64_t v6 = v8;
LABEL_13:
  sub_21F29FA48((uint64_t)v10, &qword_26AD3A880);
  return v6 | ((unint64_t)v5 << 32);
}

unint64_t sub_21F29F82C(uint64_t a1)
{
  return sub_21F29F694(a1, (void (*)(void))type metadata accessor for PhoneCallEventFeature.CallCapability);
}

uint64_t sub_21F29F844(uint64_t a1)
{
  return sub_21F29DFF8(a1, MEMORY[0x263F740E0]);
}

uint64_t sub_21F29F85C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_21F29F2E8(a1, (void (*)(void))type metadata accessor for NowPlayingFeatures.EndReason, 6, a2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_21F29F8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F29F920(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21F29F984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F29F9EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F29FA48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F29FAA4()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_21F4201B8();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_21F4201B8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_21F420DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      uint64_t v2 = sub_21F4201B8();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_21F4201B8();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9) {
    return 1;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_21F29FC38(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_21F29FC44(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

id sub_21F29FC58()
{
  return *v0;
}

uint64_t sub_21F29FC60@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *sub_21F29FC68@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_21F29FC78(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_21F29FC84(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void sub_21F29FC90(_WORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21F29FC98()
{
  return sub_21F420F48();
}

uint64_t sub_21F29FCE0()
{
  return sub_21F420F28();
}

uint64_t sub_21F29FD0C()
{
  return sub_21F420F48();
}

uint64_t sub_21F29FD50()
{
  return sub_21F4200B8();
}

uint64_t sub_21F29FD60(uint64_t a1)
{
  uint64_t v2 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  return MEMORY[0x270EEF7E8](a1, v2);
}

uint64_t sub_21F29FDCC(uint64_t a1)
{
  uint64_t v2 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  return MEMORY[0x270EEF7A0](a1, v2);
}

uint64_t sub_21F29FE38(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  id v5 = a1;
  return MEMORY[0x270EEF790](v5, a2, v4);
}

uint64_t sub_21F29FEC8()
{
  id v1 = *v0;
  uint64_t v2 = sub_21F420778();

  return v2;
}

uint64_t sub_21F29FF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  return MEMORY[0x270EEF7D0](a1, a2, v4);
}

uint64_t sub_21F29FF7C()
{
  return sub_21F420F48();
}

_WORD *sub_21F29FFDC@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_21F29FFE8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_21F29FFF8(uint64_t a1)
{
  uint64_t v2 = sub_21F2A0C28(&qword_267EC74A0, type metadata accessor for CNError);
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_21F2A0064(uint64_t a1)
{
  uint64_t v2 = sub_21F2A0C28(&qword_267EC74A0, type metadata accessor for CNError);
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_21F2A00D4(uint64_t a1)
{
  uint64_t v2 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  return MEMORY[0x270EEF788](a1, v2);
}

uint64_t sub_21F2A0140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
  return MEMORY[0x270EEF7B8](a1, a2, a3, v6);
}

BOOL sub_21F2A01C4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21F2A01D8(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_21F2A01E8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_21F2A0224(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21F2A024C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_21F2A02C4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_21F4207D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_21F2A02C4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_21F2A0398(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_21F2A0AE8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_21F2A0AE8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_21F2A0398(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21F4207E8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_21F2A0554(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_21F420A08();
  if (!v8)
  {
    sub_21F420B68();
    __break(1u);
LABEL_17:
    uint64_t result = sub_21F420BE8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_21F2A0554(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_21F2A05EC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_21F2A0764(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_21F2A0764(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21F2A05EC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_21F3BF7F4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_21F420958();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_21F420B68();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_21F4201C8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_21F420BE8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_21F420B68();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_21F2A0764(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF48);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

unsigned char **sub_21F2A08B4(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_21F2A08C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2A0928(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21F2A0950(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_21F4207D8();
  *a1 = v5;
  return result;
}

uint64_t sub_21F2A09A8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for TimeBasedPlayMediaStitcher()
{
  return self;
}

uint64_t method lookup function for TimeBasedPlayMediaStitcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TimeBasedPlayMediaStitcher);
}

uint64_t dispatch thunk of TimeBasedPlayMediaStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of TimeBasedPlayMediaStitcher.identifyCrossSessionRestatement(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

void type metadata accessor for INMediaConfidenceLevel(uint64_t a1)
{
}

void type metadata accessor for INPlaybackQueueLocation(uint64_t a1)
{
}

void type metadata accessor for INIntentHandlingStatus(uint64_t a1)
{
}

void type metadata accessor for INInteractionDirection(uint64_t a1)
{
}

void type metadata accessor for INMediaItemType(uint64_t a1)
{
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_21F2A0AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CNError(uint64_t a1)
{
}

void type metadata accessor for PLUSSchemaPLUSContactGroundTruthSource(uint64_t a1)
{
}

void type metadata accessor for PLUSSchemaPLUSSuggestionOutcome(uint64_t a1)
{
}

void type metadata accessor for PLUSSchemaPLUSContactSuggestionOutcome(uint64_t a1)
{
}

uint64_t sub_21F2A0B98()
{
  return sub_21F2A0C28(&qword_267EC7488, type metadata accessor for PLUSSchemaPLUSContactGroundTruthSource);
}

uint64_t sub_21F2A0BE0()
{
  return sub_21F2A0C28(&qword_267EC7490, type metadata accessor for CNError);
}

uint64_t sub_21F2A0C28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F2A0C70()
{
  return sub_21F2A0C28(&qword_267EC7498, type metadata accessor for CNError);
}

uint64_t sub_21F2A0CB8()
{
  return sub_21F2A0C28(&qword_267EC74A0, type metadata accessor for CNError);
}

uint64_t sub_21F2A0D00()
{
  return sub_21F2A0C28(&qword_267EC74A8, type metadata accessor for CNError);
}

uint64_t sub_21F2A0D48()
{
  return sub_21F2A0C28(&qword_267EC74B0, type metadata accessor for CNError);
}

uint64_t sub_21F2A0D90()
{
  return sub_21F2A0C28(&qword_267EC74B8, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_21F2A0DEC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_21F2A0E34()
{
  return sub_21F2A0C28(&qword_267EC74C0, type metadata accessor for Code);
}

unint64_t sub_21F2A0E80()
{
  unint64_t result = qword_267EC74C8;
  if (!qword_267EC74C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC74C8);
  }
  return result;
}

uint64_t sub_21F2A0ED4()
{
  return sub_21F2A0C28(&qword_267EC74D0, type metadata accessor for Code);
}

uint64_t sub_21F2A0F1C()
{
  return sub_21F2A0C28(&qword_267EC74D8, type metadata accessor for CNError);
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.init()()
{
  return v0;
}

uint64_t sub_21F2A0F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v50 = a6;
  uint64_t v52 = a3;
  uint64_t v51 = a1;
  uint64_t v53 = a7;
  uint64_t v10 = sub_21F41F228();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for QuickHangupClassification();
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a4[1];
  uint64_t v48 = *a4;
  uint64_t v47 = a4[2];
  uint64_t v46 = a4[3];
  uint64_t v18 = a5[1];
  uint64_t v55 = *a5;
  uint64_t v19 = a5[2];
  uint64_t v20 = a5[3];
  uint64_t v54 = v19;
  sub_21F29F920(a2, (uint64_t)v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7670);
  if (swift_dynamicCast())
  {
    sub_21F2A1978((uint64_t)v16);
    char v21 = 0;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
    uint64_t v49 = v18;
    sub_21F2A1528(v55, v18, v50, &qword_267EC7688, v58);
    uint64_t v22 = v58[0];
    uint64_t v23 = v58[1];
    uint64_t v24 = v58[2];
    uint64_t v25 = v58[3];
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v51, v10);
    if (v17)
    {
      uint64_t v51 = v11;
      uint64_t v26 = v13;
      uint64_t v27 = v10;
      uint64_t v28 = v20;
      char v29 = v21;
      uint64_t v30 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F2A1934(v22, v23);
      uint64_t v22 = v48;
      uint64_t v24 = v47;
      uint64_t v25 = v30;
      char v21 = v29;
      uint64_t v20 = v28;
      uint64_t v10 = v27;
      uint64_t v13 = v26;
      uint64_t v11 = v51;
    }
    else
    {
      uint64_t v17 = v23;
    }
    uint64_t v31 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v53, v13, v10);
    uint64_t v32 = (int *)type metadata accessor for PhoneCallGroundTruth();
    *(unsigned char *)(v31 + v32[5]) = v21;
    *(void *)(v31 + v32[6]) = v52;
    v33 = (uint64_t *)(v31 + v32[7]);
    uint64_t *v33 = v22;
    v33[1] = v17;
    v33[2] = v24;
    v33[3] = v25;
    v34 = (void *)(v31 + v32[8]);
    uint64_t v35 = v49;
    void *v34 = v55;
    v34[1] = v35;
    v34[2] = v54;
    v34[3] = v20;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v32 - 1) + 56))(v31, 0, 1, v32);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    char v21 = 1;
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_21F41FF28();
  __swift_project_value_buffer(v37, (uint64_t)qword_26AD3C910);
  sub_21F2A1884(a2, (uint64_t)v58);
  uint64_t v38 = sub_21F41FF08();
  os_log_type_t v39 = sub_21F420678();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v57 = v41;
    *(_DWORD *)v40 = 136315138;
    sub_21F2A1884((uint64_t)v58, (uint64_t)&v56);
    uint64_t v42 = sub_21F420108();
    uint64_t v56 = sub_21F2A02C4(v42, v43, &v57);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2A18E0((uint64_t)v58);
    _os_log_impl(&dword_21F29A000, v38, v39, "Failed to derive ground truth type from followup event for classification=%s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v41, -1, -1);
    MEMORY[0x223C4B440](v40, -1, -1);
  }
  else
  {
    sub_21F2A18E0((uint64_t)v58);
  }

  uint64_t v44 = type metadata accessor for PhoneCallGroundTruth();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v53, 1, 1, v44);
}

void sub_21F2A151C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void *a4@<X8>)
{
}

void sub_21F2A1528(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X5>, void *a5@<X8>)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(type metadata accessor for EntityPromptClassification() - 8);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    unint64_t v14 = v12 + 32;
    do
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_21F2A5908(v15);
      v14 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v9 = v26;
  }
  uint64_t v16 = *(void *)(v9 + 16);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(v9 + 40);
    while (1)
    {
      uint64_t v18 = *(v17 - 1);
      uint64_t v19 = *v17;
      if (v18 == a1 && v19 == a2) {
        break;
      }
      if (sub_21F420DF8()) {
        goto LABEL_15;
      }
      v17 += 2;
      if (!--v16) {
        goto LABEL_13;
      }
    }
    uint64_t v18 = a1;
    uint64_t v19 = a2;
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_21F41FF28();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AD3C910);
    swift_retain_n();
    uint64_t v22 = sub_21F41FF08();
    os_log_type_t v23 = sub_21F420678();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v27 = v25;
      __swift_instantiateConcreteTypeFromMangledName(a4);
      sub_21F420108();
      sub_21F4201A8();
      swift_bridgeObjectRelease();
      sub_21F4201A8();
      sub_21F2A02C4(91, 0xE100000000000000, &v27);
      sub_21F4207D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v22, v23, "%s Found circular entity reference - adding to ground truth", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v25, -1, -1);
      MEMORY[0x223C4B440](v24, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *a5 = v18;
    a5[1] = v19;
    a5[2] = 0;
    a5[3] = 0;
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(_OWORD *)a5 = 0u;
    *((_OWORD *)a5 + 1) = 0u;
  }
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.deinit()
{
  return v0;
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F2A1884(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F2A18E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F2A1934(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2A1978(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuickHangupClassification();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F2A19D4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_21F2A1A9C(&qword_267EC7678, a2, (void (*)(uint64_t))type metadata accessor for PhoneCallInAppFollowupGroundTruthGenerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PhoneCallInAppFollowupGroundTruthGenerator()
{
  return self;
}

uint64_t sub_21F2A1A50()
{
  return sub_21F2A1A9C((unint64_t *)&qword_26AD38AE0, 255, (void (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth);
}

uint64_t sub_21F2A1A9C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PhoneCallInAppFollowupGroundTruthGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PhoneCallInAppFollowupGroundTruthGenerator);
}

uint64_t dispatch thunk of PhoneCallInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PhoneCallInAppFollowupGroundTruthGenerator.buildGroundTruth(id:followup:contactUSOPerson:originalContactReference:correctedContactReference:abandonedPrompts:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_21F2A1B34()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC76A0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC7690 = 91;
  *(void *)algn_267EC7698 = 0xE100000000000000;
  return result;
}

BOOL sub_21F2A1BC0()
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E180(v0);
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_6;
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_21F29E198(v2);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_21F41FF28();
    __swift_project_value_buffer(v8, (uint64_t)qword_26AD3C910);
    uint64_t v9 = sub_21F41FF08();
    os_log_type_t v10 = sub_21F420678();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      if (qword_267EC7178 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_267EC7690;
      unint64_t v14 = *(void *)algn_267EC7698;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(v13, v14, &v15);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v9, v10, "%s Missing ASR turns when identifying wake word only turn", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v12, -1, -1);
      MEMORY[0x223C4B440](v11, -1, -1);
    }

    return 0;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  if (v4 < v5)
  {
    uint64_t v6 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    return v6 == 0;
  }
  swift_bridgeObjectRelease();
  return 0;
}

ValueMetadata *type metadata accessor for NoOpTurnIdentifier()
{
  return &type metadata for NoOpTurnIdentifier;
}

uint64_t sub_21F2A1E14()
{
  type metadata accessor for FirstPartyEventStreamProcessor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AC68);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_26AD3AC48 = 91;
  *(void *)algn_26AD3AC50 = 0xE100000000000000;
  return result;
}

uint64_t FirstPartyEventStreamProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FirstPartyEventStreamProcessor.init()()
{
  return v0;
}

uint64_t FirstPartyEventStreamProcessor.deinit()
{
  return v0;
}

uint64_t FirstPartyEventStreamProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F2A1ECC(uint64_t a1)
{
  uint64_t v2 = sub_21F2A256C(a1);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_21F2A290C(v3, v1, v2);
}

uint64_t sub_21F2A1F50(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_21F29E1B0(v6);
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    char v10 = sub_21F29FAA4();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_21F41FF28();
    __swift_project_value_buffer(v11, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F41FF08();
    os_log_type_t v28 = sub_21F420668();
    if (os_log_type_enabled(v12, v28))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v31[0] = v27;
      *(_DWORD *)uint64_t v13 = 136315906;
      if (qword_26AD3AC60 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_26AD3AC48;
      unint64_t v15 = *(void *)algn_26AD3AC50;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_21F2A02C4(v14, v15, v31);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      if (v10) {
        uint64_t v16 = 1953523019;
      }
      else {
        uint64_t v16 = 0x6465766F6D6552;
      }
      if (v10) {
        unint64_t v17 = 0xE400000000000000;
      }
      else {
        unint64_t v17 = 0xE700000000000000;
      }
      uint64_t v32 = sub_21F2A02C4(v16, v17, v31);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_21F2A02C4(v2, v1, v31);
      sub_21F4207D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_21F2A02C4(v7, v9, v31);
      sub_21F4207D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F29A000, v12, v28, "%s %s %s with bundleID '%s'", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v27, -1, -1);
      MEMORY[0x223C4B440](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_21F41FF28();
    __swift_project_value_buffer(v18, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_21F41FF08();
    os_log_type_t v20 = sub_21F420678();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v30 = v5;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v32 = v29;
      *(_DWORD *)uint64_t v21 = 136315394;
      if (qword_26AD3AC60 != -1) {
        swift_once();
      }
      uint64_t v22 = qword_26AD3AC48;
      unint64_t v23 = *(void *)algn_26AD3AC50;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(v22, v23, &v32);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v31[1] = v1;
      v31[2] = v3;
      v31[3] = v4;
      v31[4] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_21F420108();
      v31[0] = sub_21F2A02C4(v24, v25, &v32);
      sub_21F4207D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v19, v20, "%s Removed event due to missing bundleID %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v29, -1, -1);
      MEMORY[0x223C4B440](v21, -1, -1);

      char v10 = 0;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      char v10 = 0;
    }
  }
  return v10 & 1;
}

uint64_t sub_21F2A256C(uint64_t a1)
{
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21F41FF28();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AD3C910);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_21F41FF08();
  os_log_type_t v4 = sub_21F420668();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v21 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    if (qword_26AD3AC60 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_26AD3AC48;
    unint64_t v8 = *(void *)algn_26AD3AC50;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_21F2A02C4(v7, v8, &v21);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t v25 = *(void *)(a1 + 16);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v3, v4, "%s Processing %ld events", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v6, -1, -1);
    MEMORY[0x223C4B440](v5, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    char v10 = (uint64_t *)(a1 + 64);
    uint64_t v11 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v12 = *(v10 - 4);
      long long v20 = *(_OWORD *)(v10 - 3);
      uint64_t v13 = *(v10 - 1);
      uint64_t v14 = *v10;
      uint64_t v21 = v12;
      long long v22 = v20;
      uint64_t v23 = v13;
      uint64_t v24 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_21F2A1F50(&v21))
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21F2C3184(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v25;
        }
        unint64_t v17 = *(void *)(v11 + 16);
        unint64_t v16 = *(void *)(v11 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_21F2C3184(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v25;
        }
        *(void *)(v11 + 16) = v17 + 1;
        unint64_t v18 = v11 + 40 * v17;
        *(void *)(v18 + 32) = v12;
        *(_OWORD *)(v18 + 40) = v20;
        *(void *)(v18 + 56) = v13;
        *(void *)(v18 + 64) = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v10 += 5;
      --v9;
    }
    while (v9);
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t type metadata accessor for FirstPartyEventStreamProcessor()
{
  return self;
}

uint64_t method lookup function for FirstPartyEventStreamProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FirstPartyEventStreamProcessor);
}

uint64_t dispatch thunk of FirstPartyEventStreamProcessor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FirstPartyEventStreamProcessor.process(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_21F2A290C(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_21F2A2920()
{
  type metadata accessor for INPlayMediaIntentFeatureExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79B8);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC76B0 = 91;
  *(void *)algn_267EC76B8 = 0xE100000000000000;
  return result;
}

void *INPlayMediaIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = type metadata accessor for AdamIdExtractor();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 1;
  v0[5] = v1;
  v0[6] = &off_26D0D2090;
  v0[2] = v2;
  return v0;
}

void *INPlayMediaIntentFeatureExtractor.init()()
{
  uint64_t v1 = type metadata accessor for AdamIdExtractor();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 1;
  v0[5] = v1;
  v0[6] = &off_26D0D2090;
  v0[2] = v2;
  return v0;
}

void *INPlayMediaIntentFeatureExtractor.__allocating_init(adamIdExtractor:)(long long *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = type metadata accessor for AdamIdExtractor();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 1;
  v2[5] = v3;
  v2[6] = &off_26D0D2090;
  v2[2] = v4;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v2 + 2));
  sub_21F2A09A8(a1, (uint64_t)(v2 + 2));
  swift_endAccess();
  return v2;
}

void *INPlayMediaIntentFeatureExtractor.init(adamIdExtractor:)(long long *a1)
{
  uint64_t v3 = type metadata accessor for AdamIdExtractor();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 1;
  v1[5] = v3;
  v1[6] = &off_26D0D2090;
  v1[2] = v4;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v1 + 2));
  sub_21F2A09A8(a1, (uint64_t)(v1 + 2));
  swift_endAccess();
  return v1;
}

uint64_t sub_21F2A2B9C(uint64_t a1)
{
  *(void *)(v2 + 248) = a1;
  *(void *)(v2 + 256) = v1;
  return MEMORY[0x270FA2498](sub_21F2A2BBC, 0, 0);
}

uint64_t sub_21F2A2BBC()
{
  uint64_t v26 = v0;
  sub_21F2A9D38(*(void **)(v0 + 248), (uint64_t *)&v23);
  uint64_t v1 = v23;
  *(void *)(v0 + 264) = v23;
  long long v2 = v25;
  *(_OWORD *)(v0 + 272) = v24;
  *(_OWORD *)(v0 + 288) = v2;
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 248);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8CF0);
    uint64_t v4 = swift_allocObject();
    *(void *)(v0 + 304) = v4;
    *(_OWORD *)(v4 + 16) = xmmword_21F422300;
    uint64_t v5 = type metadata accessor for CommonFeature.EventType(0);
    swift_allocObject();
    *(void *)(v0 + 184) = 0xD000000000000011;
    *(void *)(v0 + 192) = 0x800000021F431F50;
    id v6 = v1;
    uint64_t v7 = sub_21F41FAA8();
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = sub_21F2AA138(&qword_267EC8D00, (void (*)(uint64_t))type metadata accessor for CommonFeature.EventType);
    *(void *)(v4 + 32) = v7;
    id v8 = objc_msgSend(v3, sel_playbackQueueLocation);
    uint64_t v9 = type metadata accessor for PlayMediaFeature.PlaybackQueueLocation(0);
    swift_allocObject();
    *(void *)(v0 + 216) = v8;
    uint64_t v10 = sub_21F41FAA8();
    *(void *)(v4 + 96) = v9;
    *(void *)(v4 + 104) = sub_21F2AA138(&qword_267EC76C8, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.PlaybackQueueLocation);
    *(void *)(v4 + 72) = v10;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_21F2A2F7C;
    uint64_t v12 = *(void *)(v0 + 248);
    return sub_21F2A4038((uint64_t)v6, v12);
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_21F41FF28();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
    unint64_t v15 = sub_21F41FF08();
    os_log_type_t v16 = sub_21F420668();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = (void *)v18;
      *(_DWORD *)unint64_t v17 = 136315138;
      if (qword_267EC7188 != -1) {
        swift_once();
      }
      uint64_t v19 = qword_267EC76B0;
      unint64_t v20 = *(void *)algn_267EC76B8;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_21F2A02C4(v19, v20, (uint64_t *)&v23);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v15, v16, "%s No media item found", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v18, -1, -1);
      MEMORY[0x223C4B440](v17, -1, -1);
    }

    swift_unknownObjectRelease();
    uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v22 = MEMORY[0x263F8EE78];
    return v21(v22);
  }
}

uint64_t sub_21F2A2F7C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 320) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F2A307C, 0, 0);
}

uint64_t sub_21F2A307C()
{
  uint64_t v52 = v0;
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v51 = *(void **)(v0 + 304);
  id v6 = &v51;
  sub_21F2A62CC(v4, &qword_267EC8CF0, &qword_26AD3A878);
  uint64_t v7 = v51;
  *(void *)(v0 + 328) = v51;
  if (!v5)
  {
    uint64_t v22 = *(void **)(v0 + 264);

    goto LABEL_24;
  }
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 296) >> 1;
  if (v8 == v9)
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
    uint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
    swift_unknownObjectRetain();
    if (v11)
    {
      uint64_t v42 = v0;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_21F2A7364(0, 1, 1, v10);
      uint64_t v13 = 0;
      unint64_t v14 = v12[2];
      uint64_t v43 = 11 * v14;
      do
      {
        uint64_t v16 = v10[v13 + 4];
        uint64_t v15 = v10[v13 + 5];
        uint64_t v17 = v10[v13 + 8];
        uint64_t v48 = v10[v13 + 7];
        uint64_t v49 = v10[v13 + 6];
        uint64_t v18 = v10[v13 + 10];
        uint64_t v47 = v10[v13 + 9];
        char v46 = v10[v13 + 11];
        uint64_t v44 = v10[v13 + 13];
        uint64_t v45 = v10[v13 + 12];
        __int16 v50 = v10[v13 + 14];
        uint64_t v19 = v12;
        unint64_t v20 = v12[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14 >= v20 >> 1) {
          uint64_t v12 = sub_21F2A7364((void *)(v20 > 1), v14 + 1, 1, v19);
        }
        else {
          uint64_t v12 = v19;
        }
        _OWORD v12[2] = v14 + 1;
        uint64_t v21 = &v12[v43 + v13];
        v21[4] = v16;
        v21[5] = v15;
        v21[6] = v49;
        v21[7] = v48;
        v21[8] = v17;
        v21[9] = v47;
        v21[10] = v18;
        *((unsigned char *)v21 + 88) = v46;
        v21[12] = v45;
        v21[13] = v44;
        v13 += 11;
        ++v14;
        *((_WORD *)v21 + 56) = v50;
        --v11;
        uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      }
      while (v11);
      uint64_t v10 = v12;
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v42;
    }
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      long long v2 = (long long *)(v0 + 144);
      uint64_t v1 = swift_bridgeObjectRetain();
      uint64_t v29 = sub_21F2A3E28(v1);
      uint64_t v3 = type metadata accessor for PlayMediaFeature.AlternateMediaItems(0);
      swift_allocObject();
      *(void *)(v0 + 240) = v29;
      id v6 = (void *)sub_21F41FAA8();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v7 = *(void **)(v0 + 328);
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_18:
        unint64_t v32 = v7[2];
        unint64_t v31 = v7[3];
        if (v32 >= v31 >> 1) {
          uint64_t v7 = sub_21F2A7550((void *)(v31 > 1), v32 + 1, 1, v7, &qword_267EC8CF0, &qword_26AD3A878);
        }
        *(void *)(v0 + 168) = v3;
        *(void *)(v0 + 176) = sub_21F2AA138(&qword_267EC76E0, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
        *(void *)(v0 + 144) = v6;
        _OWORD v7[2] = v32 + 1;
        sub_21F2A09A8(v2, (uint64_t)&v7[5 * v32 + 4]);
        uint64_t v33 = sub_21F2A3F58(v1);
        swift_bridgeObjectRelease_n();
        uint64_t v34 = type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata(0);
        swift_allocObject();
        *(void *)(v0 + 232) = v33;
        uint64_t v35 = sub_21F41FAA8();
        unint64_t v37 = v7[2];
        unint64_t v36 = v7[3];
        if (v37 >= v36 >> 1) {
          uint64_t v7 = sub_21F2A7550((void *)(v36 > 1), v37 + 1, 1, v7, &qword_267EC8CF0, &qword_26AD3A878);
        }
        uint64_t v38 = *(void **)(v0 + 264);
        *(void *)(v0 + 128) = v34;
        *(void *)(v0 + 136) = sub_21F2AA138(&qword_267EC76E8, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata);
        *(void *)(v0 + 104) = v35;
        _OWORD v7[2] = v37 + 1;
        sub_21F2A09A8((long long *)(v0 + 104), (uint64_t)&v7[5 * v37 + 4]);

        swift_unknownObjectRelease_n();
        goto LABEL_24;
      }
LABEL_27:
      uint64_t v7 = sub_21F2A7550(0, v7[2] + 1, 1, v7, &qword_267EC8CF0, &qword_26AD3A878);
      goto LABEL_18;
    }
    os_log_type_t v39 = *(void **)(v0 + 264);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease_n();
    uint64_t v7 = *(void **)(v0 + 328);
LABEL_24:
    v40 = *(uint64_t (**)(void *))(v0 + 8);
    return v40(v7);
  }
  if (v8 >= v9)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v24 = *(void *)(v0 + 280);
  *(void *)(v0 + 336) = v8;
  *(void *)(v0 + 344) = v23;
  long long v25 = *(void **)(v24 + 8 * v8);
  *(void *)(v0 + 352) = v25;
  swift_unknownObjectRetain();
  id v26 = v25;
  uint64_t v27 = swift_task_alloc();
  *(void *)(v0 + 360) = v27;
  *(void *)uint64_t v27 = v0;
  *(void *)(v27 + 8) = sub_21F2A35CC;
  long long v28 = *(_OWORD *)(v0 + 248);
  *(unsigned char *)(v27 + 66) = 0;
  *(_OWORD *)(v27 + 488) = v28;
  *(void *)(v27 + 472) = v0 + 16;
  *(void *)(v27 + 480) = v26;
  return MEMORY[0x270FA2498](sub_21F2A4810, 0, 0);
}

uint64_t sub_21F2A35CC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F2A36C8, 0, 0);
}

uint64_t sub_21F2A36C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v0 + 16;
  if (v2)
  {
    long long v60 = *(_OWORD *)(v0 + 32);
    long long v62 = *(_OWORD *)(v0 + 56);
    long long v64 = *(_OWORD *)(v0 + 80);
    __int16 v4 = *(_WORD *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *(void **)(v0 + 344);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v8 = sub_21F2A7364(0, v8[2] + 1, 1, v8);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    uint64_t v11 = v8;
    if (v10 >= v9 >> 1) {
      uint64_t v11 = sub_21F2A7364((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    uint64_t v12 = *(void **)(v0 + 352);
    v11[2] = v10 + 1;
    uint64_t v13 = v11;
    unint64_t v14 = &v11[11 * v10];
    v14[4] = v1;
    v14[5] = v2;
    *((_OWORD *)v14 + 3) = v60;
    v14[8] = v6;
    *(_OWORD *)(v14 + 9) = v62;
    *((unsigned char *)v14 + 88) = v5 & 1;
    *((_OWORD *)v14 + 6) = v64;
    *((_WORD *)v14 + 56) = v4;
  }
  else
  {

    uint64_t v13 = *(void **)(v0 + 344);
  }
  uint64_t v15 = *(void *)(v0 + 336) + 1;
  if (v15 == *(void *)(v0 + 296) >> 1)
  {
    uint64_t v16 = v13[2];
    if (v16)
    {
      uint64_t v52 = v0 + 16;
      uint64_t v53 = v0;
      swift_bridgeObjectRetain_n();
      uint64_t v17 = sub_21F2A7364(0, 1, 1, MEMORY[0x263F8EE78]);
      uint64_t v18 = 0;
      unint64_t v19 = v17[2];
      uint64_t v54 = 11 * v19;
      uint64_t v55 = v13;
      do
      {
        uint64_t v20 = v13[v18 + 5];
        uint64_t v63 = v13[v18 + 4];
        uint64_t v21 = v13[v18 + 6];
        uint64_t v22 = v13[v18 + 8];
        uint64_t v59 = v13[v18 + 9];
        uint64_t v61 = v13[v18 + 7];
        uint64_t v23 = v13[v18 + 10];
        char v58 = v13[v18 + 11];
        uint64_t v56 = v13[v18 + 13];
        uint64_t v57 = v13[v18 + 12];
        __int16 v65 = v13[v18 + 14];
        uint64_t v24 = v17;
        unint64_t v25 = v17[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 >= v25 >> 1) {
          uint64_t v17 = sub_21F2A7364((void *)(v25 > 1), v19 + 1, 1, v24);
        }
        else {
          uint64_t v17 = v24;
        }
        v17[2] = v19 + 1;
        id v26 = &v17[v54 + v18];
        v26[4] = v63;
        v26[5] = v20;
        v26[6] = v21;
        v26[7] = v61;
        v26[8] = v22;
        v26[9] = v59;
        v26[10] = v23;
        *((unsigned char *)v26 + 88) = v58;
        uint64_t v13 = v55;
        v26[12] = v57;
        v26[13] = v56;
        v18 += 11;
        ++v19;
        *((_WORD *)v26 + 56) = v65;
        --v16;
      }
      while (v16);
      unint64_t v31 = v17;
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v52;
      uint64_t v0 = v53;
    }
    else
    {
      unint64_t v31 = (void *)MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    if (v31[2])
    {
      unint64_t v32 = (long long *)(v3 + 128);
      uint64_t v33 = v3;
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = sub_21F2A3E28(v34);
      uint64_t v36 = type metadata accessor for PlayMediaFeature.AlternateMediaItems(0);
      swift_allocObject();
      *(void *)(v0 + 240) = v35;
      uint64_t v37 = sub_21F41FAA8();
      char v38 = swift_isUniquelyReferenced_nonNull_native();
      os_log_type_t v39 = *(void **)(v0 + 328);
      if ((v38 & 1) == 0) {
        os_log_type_t v39 = sub_21F2A7550(0, v39[2] + 1, 1, *(void **)(v0 + 328), &qword_267EC8CF0, &qword_26AD3A878);
      }
      v40 = (long long *)(v33 + 88);
      unint64_t v42 = v39[2];
      unint64_t v41 = v39[3];
      if (v42 >= v41 >> 1) {
        os_log_type_t v39 = sub_21F2A7550((void *)(v41 > 1), v42 + 1, 1, v39, &qword_267EC8CF0, &qword_26AD3A878);
      }
      *(void *)(v0 + 168) = v36;
      *(void *)(v0 + 176) = sub_21F2AA138(&qword_267EC76E0, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
      *(void *)(v0 + 144) = v37;
      v39[2] = v42 + 1;
      sub_21F2A09A8(v32, (uint64_t)&v39[5 * v42 + 4]);
      uint64_t v43 = sub_21F2A3F58(v34);
      swift_bridgeObjectRelease_n();
      uint64_t v44 = type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata(0);
      swift_allocObject();
      *(void *)(v0 + 232) = v43;
      uint64_t v45 = sub_21F41FAA8();
      unint64_t v47 = v39[2];
      unint64_t v46 = v39[3];
      if (v47 >= v46 >> 1) {
        os_log_type_t v39 = sub_21F2A7550((void *)(v46 > 1), v47 + 1, 1, v39, &qword_267EC8CF0, &qword_26AD3A878);
      }
      uint64_t v48 = *(void **)(v0 + 264);
      *(void *)(v0 + 128) = v44;
      *(void *)(v0 + 136) = sub_21F2AA138(&qword_267EC76E8, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata);
      *(void *)(v0 + 104) = v45;
      v39[2] = v47 + 1;
      sub_21F2A09A8(v40, (uint64_t)&v39[5 * v47 + 4]);

      swift_unknownObjectRelease_n();
    }
    else
    {
      uint64_t v49 = *(void **)(v0 + 264);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease_n();
      os_log_type_t v39 = *(void **)(v0 + 328);
    }
    __int16 v50 = *(uint64_t (**)(void *))(v0 + 8);
    return v50(v39);
  }
  else
  {
    *(void *)(v0 + 336) = v15;
    *(void *)(v0 + 344) = v13;
    uint64_t v27 = *(void **)(*(void *)(v0 + 280) + 8 * v15);
    *(void *)(v0 + 352) = v27;
    id v28 = v27;
    uint64_t v29 = swift_task_alloc();
    *(void *)(v0 + 360) = v29;
    *(void *)uint64_t v29 = v0;
    *(void *)(v29 + 8) = sub_21F2A35CC;
    long long v30 = *(_OWORD *)(v0 + 248);
    *(unsigned char *)(v29 + 66) = 0;
    *(_OWORD *)(v29 + 488) = v30;
    *(void *)(v29 + 472) = v3;
    *(void *)(v29 + 480) = v28;
    return MEMORY[0x270FA2498](sub_21F2A4810, 0, 0);
  }
}

void *sub_21F2A3C90(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_21F420B98())
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x223C4A6D0](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_identifier);
      if (v8)
      {
        unint64_t v9 = v8;
        uint64_t v10 = sub_21F4200B8();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_21F2A6E2C(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_21F2A6E2C((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21F2A3E28(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_21F2C31C4(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v15 = *v4;
      uint64_t v16 = *(v4 - 2);
      uint64_t v6 = v4[2];
      uint64_t v7 = v4[4];
      uint64_t v13 = v4[3];
      uint64_t v14 = v4[1];
      char v8 = *((unsigned char *)v4 + 40);
      unint64_t v9 = *(void *)(v17 + 16);
      unint64_t v10 = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_21F2C31C4(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v17 + 16) = v9 + 1;
      uint64_t v11 = v17 + (v9 << 6);
      *(void *)(v11 + 32) = v16;
      *(void *)(v11 + 40) = v5;
      *(void *)(v11 + 48) = v15;
      *(void *)(v11 + 56) = v14;
      *(void *)(v11 + 64) = v6;
      *(void *)(v11 + 72) = v13;
      *(void *)(v11 + 80) = v7;
      v4 += 11;
      *(unsigned char *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_21F2A3F58(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F2C31A4(0, v2, 0);
    uint64_t result = v11;
    uint64_t v4 = (_WORD *)(a1 + 112);
    do
    {
      long long v5 = *((_OWORD *)v4 - 1);
      __int16 v6 = *v4;
      uint64_t v12 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        long long v10 = *((_OWORD *)v4 - 1);
        sub_21F2C31A4(v7 > 1, v8 + 1, 1);
        long long v5 = v10;
        uint64_t result = v12;
      }
      v4 += 44;
      *(void *)(result + 16) = v8 + 1;
      uint64_t v9 = result + 24 * v8;
      *(_OWORD *)(v9 + 32) = v5;
      *(_WORD *)(v9 + 48) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_21F2A4038(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 600) = a1;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 608) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_21F2A4104;
  *(unsigned char *)(v6 + 66) = 1;
  *(void *)(v6 + 488) = a2;
  *(void *)(v6 + 496) = v2;
  *(void *)(v6 + 472) = v3 + 248;
  *(void *)(v6 + 480) = a1;
  return MEMORY[0x270FA2498](sub_21F2A4810, 0, 0);
}

uint64_t sub_21F2A4104()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F2A4200, 0, 0);
}

uint64_t sub_21F2A4200()
{
  uint64_t v50 = v0;
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  if (v1)
  {
    uint64_t v44 = *(void *)(v0 + 272);
    uint64_t v45 = *(void *)(v0 + 264);
    uint64_t v42 = *(void *)(v0 + 288);
    uint64_t v43 = *(void *)(v0 + 280);
    uint64_t v41 = *(void *)(v0 + 296);
    uint64_t v46 = *(void *)(v0 + 304);
    uint64_t v39 = *(void *)(v0 + 320);
    uint64_t v40 = *(void *)(v0 + 312);
    __int16 v38 = *(_WORD *)(v0 + 328);
    id v3 = objc_msgSend(*(id *)(v0 + 600), sel_privateMediaItemValueData);
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
    uint64_t v37 = v2;
    if (v3)
    {
      long long v5 = v3;
      id v6 = objc_msgSend(v3, sel_mediaSubItems);

      if (v6)
      {
        sub_21F2ABFB4(0, &qword_267EC7718);
        unint64_t v7 = v4;
        unint64_t v8 = sub_21F420348();

        uint64_t v9 = sub_21F2A3C90(v8);
        uint64_t v4 = v7;
        uint64_t v2 = v37;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      }
    }
    else
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    }
    *(_OWORD *)(v0 + 32) = xmmword_21F422310;
    uint64_t v11 = type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
    swift_allocObject();
    *(void *)(v0 + 336) = v2;
    *(void *)(v0 + 344) = v1;
    *(void *)(v0 + 352) = v45;
    *(void *)(v0 + 360) = v44;
    *(void *)(v0 + 368) = v43;
    *(void *)(v0 + 376) = v42;
    *(void *)(v0 + 384) = v41;
    *(unsigned char *)(v0 + 392) = v46 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F41FAA8();
    *(void *)(v0 + 72) = v11;
    uint64_t v13 = sub_21F2AA138(&qword_267EC76F0, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.PrimaryMediaItem);
    *(void *)(v0 + 48) = v12;
    *(void *)(v0 + 80) = v13;
    uint64_t v14 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
    swift_allocObject();
    *(void *)(v0 + 560) = v40;
    *(void *)(v0 + 568) = v39;
    *(_WORD *)(v0 + 576) = v38;
    uint64_t v15 = sub_21F41FA98();
    uint64_t v16 = v15;
    if (v15)
    {
      uint64_t v15 = sub_21F2AA138(&qword_267EC7710, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata);
    }
    else
    {
      uint64_t v14 = 0;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
    }
    *(void *)(v0 + 88) = v16;
    *(void *)(v0 + 112) = v14;
    *(void *)(v0 + 120) = v15;
    if (!v9[2])
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = 0;
    }
    uint64_t v17 = v0 + 400;
    unint64_t v47 = (long long *)(v0 + 520);
    uint64_t v48 = v0 + 440;
    uint64_t v18 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers(0);
    swift_allocObject();
    *(void *)(v0 + 584) = v9;
    uint64_t v19 = sub_21F41FA98();
    uint64_t v20 = v19;
    if (v19)
    {
      uint64_t v19 = sub_21F2AA138(&qword_267EC7708, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers);
    }
    else
    {
      uint64_t v18 = 0;
      *(void *)(v0 + 136) = 0;
      *(void *)(v0 + 144) = 0;
    }
    *(void *)(v0 + 128) = v20;
    *(void *)(v0 + 152) = v18;
    *(void *)(v0 + 160) = v19;
    uint64_t v21 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemType(0);
    swift_allocObject();
    *(void *)(v0 + 592) = v45;
    uint64_t v22 = sub_21F41FAA8();
    *(void *)(v0 + 192) = v21;
    *(void *)(v0 + 200) = sub_21F2AA138(&qword_267EC76F8, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.PrimaryMediaItemType);
    *(void *)(v0 + 168) = v22;
    sub_21F2A9FD0(v37, v1);
    uint64_t v23 = type metadata accessor for PlayMediaFeature.EventOrigin(0);
    swift_allocObject();
    *(unsigned char *)(v0 + 330) = v46 & 1;
    uint64_t v24 = sub_21F41FAA8();
    *(void *)(v0 + 232) = v23;
    *(void *)(v0 + 240) = sub_21F2AA138(&qword_267EC7700, (void (*)(uint64_t))type metadata accessor for PlayMediaFeature.EventOrigin);
    *(void *)(v0 + 208) = v24;
    uint64_t v49 = v4;
    for (uint64_t i = 48; i != 248; i += 40)
    {
      sub_21F29F984(v0 + i, v48);
      sub_21F2AA020(v48, v0 + 480);
      if (*(void *)(v0 + 504))
      {
        sub_21F2A09A8((long long *)(v0 + 480), (uint64_t)v47);
        sub_21F2A09A8(v47, v17);
        id v26 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          id v26 = sub_21F2A7550(0, v26[2] + 1, 1, v26, &qword_267EC8CF0, &qword_26AD3A878);
          uint64_t v49 = v26;
        }
        unint64_t v28 = v26[2];
        unint64_t v27 = v26[3];
        if (v28 >= v27 >> 1) {
          uint64_t v49 = sub_21F2A7550((void *)(v27 > 1), v28 + 1, 1, v26, &qword_267EC8CF0, &qword_26AD3A878);
        }
        uint64_t v30 = *(void *)(v0 + 424);
        uint64_t v29 = *(void *)(v0 + 432);
        uint64_t v31 = __swift_mutable_project_boxed_opaque_existential_1(v17, v30);
        uint64_t v32 = v17;
        uint64_t v33 = *(void *)(v30 - 8);
        uint64_t v34 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v31, v30);
        uint64_t v17 = v32;
        sub_21F2A9AB8(v28, v34, (uint64_t *)&v49, v30, v29);
        __swift_destroy_boxed_opaque_existential_1Tm(v32);
        swift_task_dealloc();
      }
      else
      {
        sub_21F2AA088(v0 + 480);
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A880);
    swift_arrayDestroy();
    long long v10 = v49;
  }
  else
  {
    long long v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v35 = *(uint64_t (**)(void *))(v0 + 8);
  return v35(v10);
}

uint64_t sub_21F2A47E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 66) = a4;
  *(void *)(v5 + 488) = a3;
  *(void *)(v5 + 496) = v4;
  *(void *)(v5 + 472) = a1;
  *(void *)(v5 + 480) = a2;
  return MEMORY[0x270FA2498](sub_21F2A4810, 0, 0);
}

uint64_t sub_21F2A4810()
{
  void (*v33)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  __int16 v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int16 v96;
  uint64_t v97;
  uint64_t v98;

  v97 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 480), sel_identifier);
  if (!v1) {
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  id v3 = *(void **)(v0 + 480);
  uint64_t v4 = sub_21F4200B8();
  uint64_t v6 = v5;

  *(void *)(v0 + 384) = v4;
  *(void *)(v0 + 392) = v6;
  id v7 = objc_msgSend(v3, sel_title);
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v28 = *(void *)(v0 + 472);
    *(_WORD *)(v28 + 80) = 0;
    *(_OWORD *)(v28 + 48) = 0u;
    *(_OWORD *)(v28 + 64) = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)uint64_t v28 = 0u;
LABEL_37:
    os_log_type_t v78 = *(uint64_t (**)(void))(v0 + 8);
    return v78();
  }
  unint64_t v8 = v7;
  uint64_t v9 = *(void *)(v0 + 496);
  uint64_t v10 = sub_21F4200B8();
  uint64_t v12 = v11;

  *(void *)(v0 + 504) = v10;
  *(void *)(v0 + 512) = v12;
  uint64_t v13 = v9 + 16;
  swift_beginAccess();
  sub_21F29F920(v9 + 16, v0 + 72);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 72), v14);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(v4, v6, v14, v15);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21F41FF28();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_21F41FF08();
    os_log_type_t v22 = sub_21F420668();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v86 = v17;
      uint64_t v23 = swift_slowAlloc();
      os_log_type_t v84 = swift_slowAlloc();
      v90 = v84;
      *(_DWORD *)uint64_t v23 = 136315650;
      if (qword_267EC7188 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_267EC76B0;
      unint64_t v24 = *(void *)algn_267EC76B8;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 440) = sub_21F2A02C4(v25, v24, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_beginAccess();
      uint64_t v26 = *(void *)(v0 + 384);
      unint64_t v27 = *(void *)(v0 + 392);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 456) = sub_21F2A02C4(v26, v27, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v17 = v86;
      *(void *)(v0 + 464) = sub_21F2A02C4(v86, v19, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F29A000, v21, v22, "%s ID %s is SiriSyncId. Mapped AdamId will be used: %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v84, -1, -1);
      MEMORY[0x223C4B440](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    *(void *)(v0 + 384) = v17;
    *(void *)(v0 + 392) = v19;
    swift_bridgeObjectRelease();
    uint64_t v89 = 0;
    uint64_t v50 = 256;
LABEL_26:
    uint64_t v57 = objc_msgSend(*(id *)(v0 + 480), sel_privateMediaItemValueData, v79, v80);
    if (v57)
    {
      char v58 = v57;
      uint64_t v59 = objc_msgSend(v57, sel_ampConfidenceLevel);
    }
    else
    {
      uint64_t v59 = 0;
    }
    long long v60 = objc_msgSend(*(id *)(v0 + 480), sel_privateMediaItemValueData);
    uint64_t v61 = 0;
    if (v60
      && (long long v62 = v60,
          uint64_t v63 = objc_msgSend(v60, sel_ampConfidenceScore),
          v62,
          v63))
    {
      objc_msgSend(v63, sel_doubleValue);
      uint64_t v61 = v64;

      __int16 v65 = 0;
    }
    else
    {
      __int16 v65 = 1;
    }
    uint64_t v66 = *(void **)(v0 + 480);
    swift_beginAccess();
    char v68 = *(void *)(v0 + 384);
    char v67 = *(void *)(v0 + 392);
    swift_bridgeObjectRetain();
    double v69 = objc_msgSend(v66, sel_type);
    double v70 = objc_msgSend(v66, sel_artist);
    if (v70)
    {
      uint64_t v71 = v70;
      v72 = sub_21F4200B8();
      uint64_t v74 = v73;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v72 = 0;
      uint64_t v74 = 0;
    }
    uint64_t v76 = *(void *)(v0 + 504);
    uint64_t v75 = *(void *)(v0 + 512);
    unint64_t v77 = *(void *)(v0 + 472);
    *(void *)unint64_t v77 = v68;
    *(void *)(v77 + 8) = v67;
    *(void *)(v77 + 16) = v69;
    *(void *)(v77 + 24) = v76;
    *(void *)(v77 + 32) = v75;
    *(void *)(v77 + 40) = v72;
    *(void *)(v77 + 48) = v74;
    *(void *)(v77 + 56) = v89;
    *(void *)(v77 + 64) = v59;
    *(void *)(v77 + 72) = v61;
    *(_WORD *)(v77 + 80) = v50 | v65;
    goto LABEL_37;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  sub_21F29F920(v13, v0 + 152);
  uint64_t v29 = *(void *)(v0 + 176);
  uint64_t v30 = *(void *)(v0 + 184);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 152), v29);
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 392);
  uint64_t v33 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 16);
  swift_bridgeObjectRetain();
  v33(&v90, v31, v32, v29, v30);
  swift_bridgeObjectRelease();
  uint64_t v34 = v91;
  if (v91)
  {
    uint64_t v87 = v90;
    uint64_t v35 = v92;
    uint64_t v36 = v93;
    uint64_t v37 = v94;
    __int16 v38 = v95;
    uint64_t v39 = v96;
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 152);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_21F41FF28();
    __swift_project_value_buffer(v40, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v35, v36);
    uint64_t v41 = sub_21F41FF08();
    uint64_t v42 = sub_21F420668();
    if (os_log_type_enabled(v41, v42))
    {
      v79 = v37;
      v80 = v38;
      uint32_t v82 = v39;
      uint64_t v83 = v36;
      uint64_t v85 = v35;
      uint64_t v43 = swift_slowAlloc();
      v81 = swift_slowAlloc();
      v90 = v81;
      *(_DWORD *)uint64_t v43 = 136315650;
      if (qword_267EC7188 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_267EC76B0;
      uint64_t v45 = *(void *)algn_267EC76B8;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 400) = sub_21F2A02C4(v44, v45, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_beginAccess();
      uint64_t v46 = *(void *)(v0 + 384);
      unint64_t v47 = *(void *)(v0 + 392);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 416) = sub_21F2A02C4(v46, v47, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 424) = sub_21F2A02C4(v87, v34, &v90);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      uint64_t v36 = v83;
      uint64_t v35 = v85;
      sub_21F2AA218(v87, v34, v85, v83);
      _os_log_impl(&dword_21F29A000, v41, v42, "%s ID %s is MPC Identifier. Extracted AdamId will be used: %s", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v81, -1, -1);
      uint64_t v48 = v43;
      uint64_t v39 = v82;
      uint64_t v49 = v87;
      MEMORY[0x223C4B440](v48, -1, -1);
    }
    else
    {
      uint64_t v49 = v87;
      sub_21F2AA218(v87, v34, v35, v36);
    }
    uint64_t v89 = 1;
    swift_beginAccess();
    *(void *)(v0 + 384) = v49;
    *(void *)(v0 + 392) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21F2AA218(v49, v34, v35, v36);
    uint64_t v50 = ((v39 & 0xFF00) == 256) << 8;
    goto LABEL_26;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 152);
  sub_21F29F920(v13, v0 + 112);
  uint64_t v51 = *(void *)(v0 + 136);
  uint64_t v52 = *(void *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v51);
  v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 + 24)
                                                                            + **(int **)(v52 + 24));
  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_21F2A5270;
  uint64_t v54 = *(unsigned __int8 *)(v0 + 66);
  uint64_t v55 = *(void *)(v0 + 488);
  return v88(v0 + 16, v55, v54, v51, v52);
}

uint64_t sub_21F2A5270()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_21F2A536C, 0, 0);
}

uint64_t sub_21F2A536C()
{
  uint64_t v52 = v0;
  uint64_t v1 = v0;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + 16;
  uint64_t v2 = v4;
  uint64_t v5 = v3 + 96;
  unint64_t v6 = *(void *)(v3 + 8);
  if (v6)
  {
    uint64_t v49 = v2;
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v8 = *(void *)(v3 + 24);
    __int16 v9 = *(_WORD *)(v3 + 48);
    __swift_destroy_boxed_opaque_existential_1Tm(v5);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_21F41FF28();
    __swift_project_value_buffer(v10, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v7, v8);
    uint64_t v11 = sub_21F41FF08();
    os_log_type_t v12 = sub_21F420668();
    if (os_log_type_enabled(v11, v12))
    {
      log = v11;
      os_log_type_t v45 = v12;
      uint64_t v46 = v8;
      uint64_t v47 = v7;
      uint64_t v43 = v3 + 392;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v51 = v44;
      *(_DWORD *)uint64_t v13 = 136315650;
      if (qword_267EC7188 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_267EC76B0;
      unint64_t v15 = *(void *)algn_267EC76B8;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 448) = sub_21F2A02C4(v14, v15, &v51);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      swift_beginAccess();
      uint64_t v16 = *(void *)(v1 + 384);
      unint64_t v17 = *(void *)(v1 + 392);
      swift_bridgeObjectRetain();
      *(void *)(v1 + 432) = sub_21F2A02C4(v16, v17, &v51);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v18 = v49;
      *(void *)(v1 + 408) = sub_21F2A02C4(v49, v6, &v51);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      uint64_t v8 = v46;
      uint64_t v7 = v47;
      sub_21F2AA218(v49, v6, v47, v46);
      _os_log_impl(&dword_21F29A000, log, v45, "%s ID %s is MusicKit Identifier. Extracted AdamId will be used: %s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v44, -1, -1);
      MEMORY[0x223C4B440](v13, -1, -1);
    }
    else
    {
      uint64_t v18 = v49;
      sub_21F2AA218(v49, v6, v7, v8);
    }
    uint64_t v50 = 1;
    swift_beginAccess();
    *(void *)(v1 + 384) = v18;
    *(void *)(v1 + 392) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21F2AA218(v18, v6, v7, v8);
    __int16 v19 = ((v9 & 0xFF00) == 256) << 8;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v5);
    uint64_t v50 = 0;
    __int16 v19 = 0;
  }
  id v20 = objc_msgSend(*(id *)(v1 + 480), sel_privateMediaItemValueData, v43);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, sel_ampConfidenceLevel);
  }
  else
  {
    id v22 = 0;
  }
  id v23 = objc_msgSend(*(id *)(v1 + 480), sel_privateMediaItemValueData);
  uint64_t v24 = 0;
  if (v23
    && (uint64_t v25 = v23,
        id v26 = objc_msgSend(v23, sel_ampConfidenceScore),
        v25,
        v26))
  {
    objc_msgSend(v26, sel_doubleValue);
    uint64_t v24 = v27;

    __int16 v28 = 0;
  }
  else
  {
    __int16 v28 = 1;
  }
  uint64_t v29 = *(void **)(v1 + 480);
  swift_beginAccess();
  uint64_t v31 = *(void *)(v1 + 384);
  uint64_t v30 = *(void *)(v1 + 392);
  swift_bridgeObjectRetain();
  id v32 = objc_msgSend(v29, sel_type);
  id v33 = objc_msgSend(v29, sel_artist);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = sub_21F4200B8();
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = 0;
    uint64_t v37 = 0;
  }
  uint64_t v39 = *(void *)(v1 + 504);
  uint64_t v38 = *(void *)(v1 + 512);
  uint64_t v40 = *(void *)(v1 + 472);
  *(void *)uint64_t v40 = v31;
  *(void *)(v40 + 8) = v30;
  *(void *)(v40 + 16) = v32;
  *(void *)(v40 + 24) = v39;
  *(void *)(v40 + 32) = v38;
  *(void *)(v40 + 40) = v35;
  *(void *)(v40 + 48) = v37;
  *(void *)(v40 + 56) = v50;
  *(void *)(v40 + 64) = v22;
  *(void *)(v40 + 72) = v24;
  *(_WORD *)(v40 + 80) = v19 | v28;
  uint64_t v41 = *(uint64_t (**)(void))(v1 + 8);
  return v41();
}

uint64_t INPlayMediaIntentFeatureExtractor.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t INPlayMediaIntentFeatureExtractor.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_21F2A5908(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_21F2A6E2C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A5A5C(uint64_t a1)
{
  return sub_21F2A62CC(a1, &qword_267EC8CF0, &qword_26AD3A878);
}

uint64_t sub_21F2A5A70(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC7998, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
}

uint64_t sub_21F2A5AB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_21F2A7900(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A5C14(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_21F2A7694(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_26AD3AF28, &qword_26AD3AEB0);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A5DD8(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC7830, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification);
}

uint64_t sub_21F2A5E20(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC7918, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
}

uint64_t sub_21F2A5E68(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC7750, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth);
}

uint64_t sub_21F2A5EB0(unint64_t a1)
{
  return sub_21F2A64D0(a1, MEMORY[0x263F72A98], &qword_267EC7968, &qword_267EC7960, (uint64_t *)sub_21F2E5EDC);
}

uint64_t sub_21F2A5EEC(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_21F2A6E2C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_21F300AB4(v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_21F2ABEF8();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  __int16 v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_21F2A6E2C((void *)(v22 > 1), v2 + 1, 1, v4);
  int64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v24 = &v4[2 * v2 + 4];
    *uint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_21F2A62B8(uint64_t a1)
{
  return sub_21F2A62CC(a1, &qword_267EC7790, &qword_26AD3A8A0);
}

uint64_t sub_21F2A62CC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  int64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v6 <= v7) {
    int64_t v18 = v6 + v4;
  }
  else {
    int64_t v18 = v6;
  }
  int64_t v5 = sub_21F2A7550(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v4) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (unint64_t)&v5[5 * v12 + 4];
  if (a1 + 32 < v13 + 40 * v4 && v13 < a1 + 32 + 40 * v4) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v5;
    return result;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFADD__(v15, v4);
  uint64_t v17 = v15 + v4;
  if (!v16)
  {
    v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A644C(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC7980, MEMORY[0x263F07508], MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

uint64_t sub_21F2A6494(unint64_t a1)
{
  return sub_21F2A64D0(a1, MEMORY[0x263F74098], &qword_267EC78D0, &qword_267EC78C8, (uint64_t *)sub_21F2E6018);
}

uint64_t sub_21F2A64D0(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21F420B98();
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + v11;
    if (!__OFADD__(v13, v11)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v12 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v12;
  uint64_t v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v13 = 1;
  }
  uint64_t v23 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14) {
      uint64_t v17 = v14;
    }
    swift_bridgeObjectRetain();
    unint64_t v12 = MEMORY[0x223C4A6E0](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *int64_t v5 = v12;
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v23;
LABEL_15:
    uint64_t result = sub_21F2A9234(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();
  return sub_21F420368();
}

uint64_t sub_21F2A66F4(unint64_t a1)
{
  return sub_21F2A6B04(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_21F2A9458);
}

uint64_t sub_21F2A670C(unint64_t a1)
{
  return sub_21F2A6B04(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_21F2A9678);
}

uint64_t sub_21F2A6724(uint64_t a1)
{
  return sub_21F2A676C(a1, &qword_267EC78A0, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion);
}

uint64_t sub_21F2A676C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_21F2A70D0(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A6940(uint64_t a1)
{
  return sub_21F2A6968(a1, qword_26AD38EC0, &qword_26AD3ABA8);
}

uint64_t sub_21F2A6954(uint64_t a1)
{
  return sub_21F2A6968(a1, &qword_267EC7890, &qword_26AD3A9E8);
}

uint64_t sub_21F2A6968(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    unint64_t v12 = *(void *)(a1 + 16);
    if (v12) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v4) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v6 <= v7) {
    int64_t v19 = v6 + v4;
  }
  else {
    int64_t v19 = v6;
  }
  int64_t v5 = sub_21F2A7550(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  unint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v14 = (unint64_t)&v5[5 * v13 + 4];
  if (a1 + 32 < v14 + 40 * v12 && v14 < a1 + 32 + 40 * v12) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFADD__(v16, v12);
  uint64_t v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A6AEC(unint64_t a1)
{
  return sub_21F2A6B04(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_21F2A9898);
}

uint64_t sub_21F2A6B04(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21F420B98();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x223C4A6E0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *int64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_21F420368();
}

uint64_t sub_21F2A6CD8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_21F2A8F98(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[3 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[3 * v8] && (unint64_t)v10 < a1 + 32 + 24 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 24 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

void *sub_21F2A6E2C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      BOOL v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      BOOL v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2A9B50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A6F3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7930, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
}

void *sub_21F2A6F70(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2A9C44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A709C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7800, (uint64_t (*)(void))type metadata accessor for PhoneCallGroundTruth, (uint64_t (*)(void))type metadata accessor for PhoneCallGroundTruth);
}

uint64_t sub_21F2A70D0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_21F420B68();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_21F2ABA8C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_21F2A7350(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A7550(a1, a2, a3, a4, &qword_267EC8CF0, &qword_26AD3A878);
}

void *sub_21F2A7364(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AA850(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A748C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7908, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
}

uint64_t sub_21F2A74C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7998, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
}

uint64_t sub_21F2A74F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7980, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

uint64_t sub_21F2A7528(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A7694(a1, a2, a3, a4, &qword_267EC7840, &qword_26AD3A8B0);
}

void *sub_21F2A753C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A7550(a1, a2, a3, a4, &qword_267EC7790, &qword_26AD3A8A0);
}

void *sub_21F2A7550(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2ABDEC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A7680(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A7694(a1, a2, a3, a4, &qword_267EC7988, &qword_267EC7990);
}

uint64_t sub_21F2A7694(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_21F420B68();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_21F2AB30C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_21F2A7900(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7900);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AB214(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A7A24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7758);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AA95C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A7B48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77E0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AAA54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A7C70(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7830, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification);
}

void *sub_21F2A7CA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A8250(a1, a2, a3, a4, &qword_267EC7798, &qword_267EC77A0);
}

uint64_t sub_21F2A7CB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_26AD3AF18, type metadata accessor for FeaturisedSession, type metadata accessor for FeaturisedSession);
}

void *sub_21F2A7CEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB56C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A7DFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7918, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
}

void *sub_21F2A7E30(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A7E48(a1, a2, a3, a4, &qword_267EC7910);
}

void *sub_21F2A7E3C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A7E48(a1, a2, a3, a4, &qword_267EC78C0);
}

void *sub_21F2A7E48(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AAB64(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A7F54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7750, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth);
}

void *sub_21F2A7F88(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A838C(a1, a2, a3, a4, &qword_267EC7970, &qword_267EC7978);
}

uint64_t sub_21F2A7F9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7768, (uint64_t (*)(void))type metadata accessor for MediaGroundTruth, (uint64_t (*)(void))type metadata accessor for MediaGroundTruth);
}

void *sub_21F2A7FD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AB11C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A80F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7760, (uint64_t (*)(void))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t (*)(void))type metadata accessor for MediaFeedbackGroundTruth);
}

void *sub_21F2A812C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7738);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB030(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A823C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A8250(a1, a2, a3, a4, &qword_267EC7920, &qword_267EC7928);
}

void *sub_21F2A8250(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB464(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_21F2A836C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F2A8A24(a1, a2, a3, a4, &qword_26AD3AF48);
}

void *sub_21F2A8378(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A838C(a1, a2, a3, a4, &qword_267EC7950, &qword_267EC7958);
}

void *sub_21F2A838C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4]) {
          memmove(v15, a4 + 4, 48 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2ABBE8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A84C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC78A0, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion);
}

char *sub_21F2A84F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77D0);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AAC50(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A85F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A8250(a1, a2, a3, a4, &qword_267EC77C0, &qword_267EC77C8);
}

void *sub_21F2A8604(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7948);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB750(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A8714(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7740, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion);
}

uint64_t sub_21F2A8748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7940, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
}

uint64_t sub_21F2A877C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7938, type metadata accessor for PlusGenericSuggestionRuntimeSummary, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
}

void *sub_21F2A87B0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AAD38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A88C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB85C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A89D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A7694(a1, a2, a3, a4, &qword_267EC7870, &qword_267EC7878);
}

uint64_t sub_21F2A89E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC77F8, (uint64_t (*)(void))type metadata accessor for MessagesGroundTruth, (uint64_t (*)(void))type metadata accessor for MessagesGroundTruth);
}

char *sub_21F2A8A18(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F2A8A24(a1, a2, a3, a4, &qword_267EC77B0);
}

char *sub_21F2A8A24(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AAC50(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_21F2A8B1C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_21F2A8A24(a1, a2, a3, a4, &qword_267EC7748);
}

void *sub_21F2A8B28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78B8);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AB998(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A8C38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A7694(a1, a2, a3, a4, &qword_267EC7850, &qword_26AD3A830);
}

uint64_t sub_21F2A8C4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC77A8, (uint64_t (*)(void))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary, (uint64_t (*)(void))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
}

uint64_t sub_21F2A8C80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC78A8, (uint64_t (*)(void))type metadata accessor for MediaInAppFollowupClassification, (uint64_t (*)(void))type metadata accessor for MediaInAppFollowupClassification);
}

void *sub_21F2A8CB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7898);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F2AAF3C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A8DC4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7808);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AAE44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A8EE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_26AD3AF20, (uint64_t (*)(void))type metadata accessor for SessionGroundTruths, (uint64_t (*)(void))type metadata accessor for SessionGroundTruths);
}

void *sub_21F2A8F1C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A838C(a1, a2, a3, a4, &qword_267EC7880, &qword_267EC7888);
}

uint64_t sub_21F2A8F30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7788, type metadata accessor for PlusContactSuggestionRuntimeSummary, type metadata accessor for PlusContactSuggestionRuntimeSummary);
}

uint64_t sub_21F2A8F64(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7848, (uint64_t (*)(void))type metadata accessor for ContactPromptGroundTruth, (uint64_t (*)(void))type metadata accessor for ContactPromptGroundTruth);
}

void *sub_21F2A8F98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7810);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2AB660(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2A90C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21F2A70D0(a1, a2, a3, a4, &qword_267EC7838, (uint64_t (*)(void))type metadata accessor for ContactSuggestionOutcomeGroundTruth, (uint64_t (*)(void))type metadata accessor for ContactSuggestionOutcomeGroundTruth);
}

void *sub_21F2A90F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7828);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_21F2ABCF4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_21F2A9220(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2A7550(a1, a2, a3, a4, &qword_267EC7818, &qword_267EC7820);
}

uint64_t sub_21F2A9234(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_21F2ABF00(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          unint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9458(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21F2ABF00(&qword_267EC78E8, &qword_267EC78E0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78E0);
          uint64_t v12 = sub_21F2E5FB0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21F2ABFB4(0, &qword_267EC78D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9678(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21F2ABF00(&qword_267EC7780, &qword_267EC7778);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7778);
          uint64_t v12 = sub_21F2E5F48(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21F2ABFB4(0, (unint64_t *)&qword_267EC7770);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9898(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21F2ABF00(&qword_267EC7868, &qword_267EC7860);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7860);
          uint64_t v12 = sub_21F2E5F48(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21F2ABFB4(0, (unint64_t *)&qword_267EC7858);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9AB8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_21F2A09A8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_21F2A9B50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9C44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2A9D38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_mediaItems);
  if (!v4) {
    goto LABEL_27;
  }
  unint64_t v5 = v4;
  sub_21F2ABFB4(0, (unint64_t *)&qword_267EC79C0);
  unint64_t v6 = sub_21F420348();

  unint64_t v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_21F420B98();
  uint64_t v8 = result;
  if (!result)
  {
LABEL_26:
    swift_bridgeObjectRelease_n();
LABEL_27:
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_mediaContainer);
    uint64_t v11 = result;
    goto LABEL_28;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x223C4A6D0](0, v6);
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    id v10 = *(id *)(v6 + 32);
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F420B98();
    uint64_t result = swift_bridgeObjectRelease();
    if (v12 < 2) {
      goto LABEL_9;
    }
  }
  else if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_28:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
LABEL_29:
    *a2 = v11;
    a2[1] = v16;
    a2[2] = v17;
    a2[3] = v18;
    a2[4] = v19;
    return result;
  }
  if (v8 < 1) {
    goto LABEL_32;
  }
  if (!v7)
  {
    uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_17;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_21F420B98();
  uint64_t result = swift_bridgeObjectRelease();
  if (v14 >= 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_21F420B98();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_17:
    if (v13 >= v8)
    {
      if ((v6 & 0xC000000000000001) != 0 && v8 != 1)
      {
        uint64_t result = 1;
        do
        {
          uint64_t v15 = result + 1;
          sub_21F4209A8();
          uint64_t result = v15;
        }
        while (v8 != v15);
      }
      if (v7)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_21F420BA8();
        uint64_t v17 = v20;
        uint64_t v18 = v21;
        uint64_t v19 = v22;
        uint64_t result = swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
        uint64_t v17 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v18 = 1;
        uint64_t v19 = (2 * v8) | 1;
      }
      goto LABEL_29;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_21F2A9FD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2AA020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2AA088(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A880);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21F2AA138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21F2AA1D0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_21F2AA218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_21F2AA27C(a3, a4);
  }
}

uint64_t sub_21F2AA27C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for INPlayMediaIntentFeatureExtractor()
{
  return self;
}

uint64_t method lookup function for INPlayMediaIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for INPlayMediaIntentFeatureExtractor);
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.__allocating_init(adamIdExtractor:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.extract(from:)(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_21F2ABFF0;
  return v6(a1);
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.extractMediaItemFeatures(from:intent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_21F2AA538;
  return v8(a1, a2);
}

uint64_t sub_21F2AA538(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.buildMediaItem(_:intent:isPrimaryItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 160)
                                                                   + **(int **)(*(void *)v4 + 160));
  id v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *id v10 = v5;
  v10[1] = sub_21F2AA75C;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_21F2AA75C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_21F2AA850(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AA95C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AAA54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

char *sub_21F2AAB64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_21F420BE8();
  __break(1u);
  return result;
}

char *sub_21F2AAC50(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AAD38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AAE44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AAF3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

char *sub_21F2AB030(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB11C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB214(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB30C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB464(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB56C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

char *sub_21F2AB660(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB750(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38E10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2AB85C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_21F2AB998(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2ABA8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2ABBE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 48 * a1 + 32;
    unint64_t v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2ABCF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2ABDEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2ABEF8()
{
  return swift_release();
}

uint64_t sub_21F2ABF00(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21F2ABFB4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t static SiriKitTaskType.startCall.getter()
{
  return 0xD000000000000023;
}

unint64_t static SiriKitTaskType.sendMessage.getter()
{
  return 0xD000000000000029;
}

unint64_t static SiriKitTaskType.playMedia.getter()
{
  return 0xD000000000000024;
}

ValueMetadata *type metadata accessor for SiriKitTaskType()
{
  return &type metadata for SiriKitTaskType;
}

uint64_t sub_21F2AC058(uint64_t a1)
{
  return a1;
}

uint64_t OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OneShotSuccessfulGroundTruthGenerator.init(_:)(a1);
  return v2;
}

char *OneShotSuccessfulGroundTruthGenerator.init(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  type metadata accessor for OneShotSuccessfulGroundTruthGenerator();
  *((void *)v1 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((void *)v1 + 3) = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(&v1[*(void *)(*(void *)v1 + 104)], a1, v3);
  return v1;
}

uint64_t type metadata accessor for OneShotSuccessfulGroundTruthGenerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F2AC194(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_21F420798();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v17 - v11;
  sub_21F2AC3E8(a1, a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return sub_21F4203B8();
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v14(v12, v9, AssociatedTypeWitness);
    sub_21F2ADBD8(AssociatedTypeWitness, AssociatedTypeWitness);
    swift_allocObject();
    uint64_t v13 = sub_21F420378();
    v14(v15, v12, AssociatedTypeWitness);
    sub_21F420428();
  }
  return v13;
}

uint64_t sub_21F2AC3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v146 = a2;
  uint64_t v140 = a1;
  uint64_t v143 = a3;
  uint64_t v4 = (void *)*v3;
  uint64_t v130 = sub_21F41F228();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  v128 = (char *)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v4[11];
  uint64_t v7 = v4[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v126 = sub_21F420798();
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v126);
  v131 = (char *)&v122 - v10;
  uint64_t v135 = AssociatedTypeWitness;
  uint64_t v139 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  v132 = (char *)&v122 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v134 = sub_21F420798();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v134);
  v127 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v152 = (char *)&v122 - v16;
  uint64_t v138 = v12;
  uint64_t v137 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v15);
  v141 = (char *)&v122 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD3ACD0);
  MEMORY[0x270FA5388](v18 - 8);
  v151 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for TurnPairRestatementClassification();
  uint64_t v150 = *(void *)(v158 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v158);
  uint64_t v156 = (uint64_t)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v148 = (uint64_t)&v122 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v25 = (char *)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for EntityPromptClassification();
  uint64_t v149 = *(void *)(v157 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v157);
  uint64_t v155 = (uint64_t)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v147 = (uint64_t)&v122 - v28;
  uint64_t v29 = swift_getAssociatedTypeWitness();
  unint64_t v159 = sub_21F420798();
  uint64_t v30 = *(void *)(v159 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v159);
  unint64_t v33 = (char *)&v122 - v32;
  uint64_t v34 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v31);
  int64_t v36 = (char *)&v122 - v35;
  uint64_t v161 = v146;
  uint64_t v37 = v4[13];
  v142 = v3;
  v153 = (char *)v3 + v37;
  uint64_t v144 = v7;
  uint64_t v145 = v6;
  sub_21F2AD9BC((uint64_t)v3 + v37, v7, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB8);
  sub_21F2ADD58();
  uint64_t v38 = sub_21F420298();
  swift_release();
  uint64_t v161 = v38;
  sub_21F420428();
  swift_getWitnessTable();
  sub_21F4205F8();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, v29) != 1)
  {
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v136 = v36;
    v49(v36, v33, v29);
    uint64_t v50 = *(void *)(v146 + 16);
    uint64_t v124 = v29;
    uint64_t v123 = v34;
    if (v50)
    {
      uint64_t v51 = v146 + 32;
      uint64_t v52 = (void (**)(char *, void, uint64_t, uint64_t))(v149 + 56);
      uint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
      swift_bridgeObjectRetain();
      unint64_t v159 = MEMORY[0x263F8EE78];
      uint64_t v54 = (uint64_t *)&unk_26AD3A8A0;
      uint64_t v55 = v51;
      uint64_t v56 = v50;
      do
      {
        sub_21F29F920(v55, (uint64_t)&v161);
        sub_21F29F920((uint64_t)&v161, (uint64_t)&v160);
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(v54);
        uint64_t v58 = v157;
        int v59 = swift_dynamicCast();
        (*v52)(v25, v59 ^ 1u, 1, v58);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v161);
        if ((*v53)(v25, 1, v58) == 1)
        {
          sub_21F29FA48((uint64_t)v25, &qword_26AD3AB78);
        }
        else
        {
          uint64_t v154 = v57;
          long long v60 = v54;
          uint64_t v61 = v147;
          sub_21F2ADDB4((uint64_t)v25, v147, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
          sub_21F2ADDB4(v61, v155, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v62 = v159;
          }
          else {
            unint64_t v62 = sub_21F2A6F3C(0, *(void *)(v159 + 16) + 1, 1, v159);
          }
          unint64_t v64 = *(void *)(v62 + 16);
          unint64_t v63 = *(void *)(v62 + 24);
          if (v64 >= v63 >> 1) {
            unint64_t v62 = sub_21F2A6F3C(v63 > 1, v64 + 1, 1, v62);
          }
          *(void *)(v62 + 16) = v64 + 1;
          unint64_t v65 = (*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
          unint64_t v159 = v62;
          sub_21F2ADDB4(v155, v62 + v65 + *(void *)(v149 + 72) * v64, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
          uint64_t v54 = v60;
        }
        v55 += 40;
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
      uint64_t v66 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v150 + 56);
      char v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48);
      swift_bridgeObjectRetain();
      unint64_t v68 = MEMORY[0x263F8EE78];
      double v69 = v152;
      uint64_t v70 = (uint64_t)v151;
      uint64_t v71 = v158;
      do
      {
        sub_21F29F920(v51, (uint64_t)&v161);
        sub_21F29F920((uint64_t)&v161, (uint64_t)&v160);
        int v72 = swift_dynamicCast();
        (*v66)(v70, v72 ^ 1u, 1, v71);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v161);
        if ((*v67)(v70, 1, v71) == 1)
        {
          sub_21F29FA48(v70, qword_26AD3ACD0);
        }
        else
        {
          uint64_t v73 = v148;
          sub_21F2ADDB4(v70, v148, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
          sub_21F2ADDB4(v73, v156, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v68 = sub_21F2A74C0(0, *(void *)(v68 + 16) + 1, 1, v68);
          }
          unint64_t v75 = *(void *)(v68 + 16);
          unint64_t v74 = *(void *)(v68 + 24);
          if (v75 >= v74 >> 1) {
            unint64_t v68 = sub_21F2A74C0(v74 > 1, v75 + 1, 1, v68);
          }
          *(void *)(v68 + 16) = v75 + 1;
          sub_21F2ADDB4(v156, v68+ ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80))+ *(void *)(v150 + 72) * v75, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
          double v69 = v152;
          uint64_t v70 = (uint64_t)v151;
        }
        v51 += 40;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
      uint64_t v76 = v143;
      uint64_t v77 = v145;
      unint64_t v78 = v159;
    }
    else
    {
      unint64_t v68 = MEMORY[0x263F8EE78];
      unint64_t v78 = MEMORY[0x263F8EE78];
      uint64_t v77 = v145;
      uint64_t v76 = v143;
      double v69 = v152;
    }
    uint64_t v81 = *(void *)(v78 + 16);
    swift_bridgeObjectRelease();
    uint32_t v82 = v142;
    uint64_t v83 = v141;
    uint64_t v84 = v140;
    uint64_t v85 = v139;
    if (v81)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v86 = *(void *)(v68 + 16);
      swift_bridgeObjectRelease();
      if (!v86)
      {
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v77 + 80))(v84, v136, v144, v77);
        uint64_t v96 = v137;
        uint64_t v97 = v138;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v69, 1, v138) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v83, v69, v97);
          uint64_t v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 88);
          uint64_t v105 = v131;
          uint64_t v106 = v77;
          uint64_t v107 = v96;
          v104(v84, v144, v106);
          uint64_t v108 = v135;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v105, 1, v135) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v132, v105, v108);
            type metadata accessor for SuccessfulTaskMetadata();
            uint64_t v117 = swift_allocObject();
            *(void *)(v117 + 16) = v84;
            *(void *)(v117 + 24) = v146;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v118 = v128;
            sub_21F41F218();
            v119 = v127;
            uint64_t v120 = v138;
            (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v127, v83, v138);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v119, 0, 1, v120);
            v121 = v132;
            (*(void (**)(char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(v106 + 96))(v118, v132, v119, v83, v117, v144, v106);
            swift_release();
            (*(void (**)(char *, uint64_t))(v133 + 8))(v119, v134);
            (*(void (**)(char *, uint64_t))(v129 + 8))(v118, v130);
            (*(void (**)(char *, uint64_t))(v85 + 8))(v121, v135);
            (*(void (**)(char *, uint64_t))(v107 + 8))(v83, v120);
            return (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v136, v124);
          }
          (*(void (**)(char *, uint64_t))(v125 + 8))(v105, v126);
          if (qword_26AD38998 != -1) {
            swift_once();
          }
          uint64_t v109 = sub_21F41FF28();
          __swift_project_value_buffer(v109, (uint64_t)qword_26AD3C910);
          swift_retain_n();
          v110 = sub_21F41FF08();
          os_log_type_t v111 = sub_21F420668();
          if (os_log_type_enabled(v110, v111))
          {
            long long v112 = (uint8_t *)swift_slowAlloc();
            uint64_t v113 = swift_slowAlloc();
            uint64_t v161 = v113;
            *(_DWORD *)long long v112 = 136315138;
            long long v114 = v83;
            uint64_t v115 = v82[2];
            unint64_t v116 = v82[3];
            swift_bridgeObjectRetain();
            uint64_t v160 = sub_21F2A02C4(v115, v116, &v161);
            sub_21F4207D8();
            swift_release_n();
            uint64_t v76 = v143;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_21F29A000, v110, v111, "%s Could not extract exactly one uso entity. Skipping positive ground truth generation.", v112, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x223C4B440](v113, -1, -1);
            MEMORY[0x223C4B440](v112, -1, -1);

            (*(void (**)(char *, uint64_t))(v137 + 8))(v114, v138);
          }
          else
          {
            swift_release_n();

            (*(void (**)(char *, uint64_t))(v137 + 8))(v83, v138);
          }
          (*(void (**)(char *, uint64_t))(v123 + 8))(v136, v124);
LABEL_45:
          uint64_t v103 = swift_getAssociatedTypeWitness();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v76, 1, 1, v103);
        }
        (*(void (**)(char *, uint64_t))(v133 + 8))(v69, v134);
        if (qword_26AD38998 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_21F41FF28();
        __swift_project_value_buffer(v98, (uint64_t)qword_26AD3C910);
        swift_retain_n();
        v88 = sub_21F41FF08();
        os_log_type_t v99 = sub_21F420668();
        if (os_log_type_enabled(v88, v99))
        {
          v90 = (uint8_t *)swift_slowAlloc();
          uint64_t v100 = swift_slowAlloc();
          uint64_t v161 = v100;
          *(_DWORD *)v90 = 136315138;
          uint64_t v101 = v82[2];
          unint64_t v102 = v82[3];
          swift_bridgeObjectRetain();
          uint64_t v160 = sub_21F2A02C4(v101, v102, &v161);
          sub_21F4207D8();
          swift_release_n();
          uint64_t v76 = v143;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21F29A000, v88, v99, "%s Could not extract exactly one entity reference. Skipping positive ground truth generation.", v90, 0xCu);
          swift_arrayDestroy();
          uint64_t v95 = v100;
          goto LABEL_37;
        }
LABEL_43:
        swift_release_n();
        goto LABEL_44;
      }
    }
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v87 = sub_21F41FF28();
    __swift_project_value_buffer(v87, (uint64_t)qword_26AD3C910);
    swift_retain_n();
    v88 = sub_21F41FF08();
    os_log_type_t v89 = sub_21F420668();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      uint64_t v161 = v91;
      *(_DWORD *)v90 = 136315138;
      uint64_t v92 = v76;
      uint64_t v93 = v82[2];
      unint64_t v94 = v82[3];
      swift_bridgeObjectRetain();
      uint64_t v160 = sub_21F2A02C4(v93, v94, &v161);
      sub_21F4207D8();
      swift_release_n();
      uint64_t v76 = v92;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v88, v89, "%s Prompt or restatement present in conversation. Skipping positive ground truth generation.", v90, 0xCu);
      swift_arrayDestroy();
      uint64_t v95 = v91;
LABEL_37:
      MEMORY[0x223C4B440](v95, -1, -1);
      MEMORY[0x223C4B440](v90, -1, -1);
LABEL_44:

      (*(void (**)(char *, uint64_t))(v123 + 8))(v136, v124);
      goto LABEL_45;
    }
    goto LABEL_43;
  }
  (*(void (**)(char *, unint64_t))(v30 + 8))(v33, v159);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_21F41FF28();
  __swift_project_value_buffer(v39, (uint64_t)qword_26AD3C910);
  int64_t v40 = v142;
  swift_retain();
  unint64_t v41 = sub_21F41FF08();
  os_log_type_t v42 = sub_21F420668();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = v143;
  if (v43)
  {
    os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v161 = v46;
    *(_DWORD *)os_log_type_t v45 = 136315138;
    uint64_t v47 = v40[2];
    unint64_t v48 = v40[3];
    swift_bridgeObjectRetain();
    uint64_t v160 = sub_21F2A02C4(v47, v48, &v161);
    sub_21F4207D8();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v41, v42, "%s No successful event associated with session. Skipping one shot successful event GT generation.", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v46, -1, -1);
    MEMORY[0x223C4B440](v45, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v79 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v44, 1, 1, v79);
}

uint64_t (*sub_21F2AD9BC(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_21F2ADEA4;
}

uint64_t *OneShotSuccessfulGroundTruthGenerator.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t OneShotSuccessfulGroundTruthGenerator.__deallocating_deinit()
{
  OneShotSuccessfulGroundTruthGenerator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F2ADBB4(uint64_t a1, uint64_t a2)
{
  return sub_21F2AC194(a1, a2);
}

uint64_t sub_21F2ADBD8(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AD38E00);
  }
  else
  {
    return sub_21F420DB8();
  }
}

uint64_t sub_21F2ADC48()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_21F2ADC68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OneShotSuccessfulGroundTruthGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OneShotSuccessfulGroundTruthGenerator);
}

uint64_t dispatch thunk of OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of OneShotSuccessfulGroundTruthGenerator.generate(session:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

unint64_t sub_21F2ADD58()
{
  unint64_t result = qword_26AD3AEC0;
  if (!qword_26AD3AEC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD3AEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD3AEC0);
  }
  return result;
}

uint64_t sub_21F2ADDB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2ADE1C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_21F2ADEA4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 64))();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

BOOL static MediaGroundTruthSource.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

BOOL static MediaCorrectionGroundTruthSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MediaGroundTruthSource.hash(into:)()
{
  return sub_21F420F08();
}

BOOL sub_21F2ADFC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s28SiriPrivateLearningInference23SuggestionSurfacedStateO9hashValueSivg_0()
{
  return sub_21F420F48();
}

uint64_t sub_21F2AE024()
{
  return sub_21F420F08();
}

uint64_t sub_21F2AE050()
{
  return sub_21F420F48();
}

uint64_t sub_21F2AE094()
{
  if (*v0) {
    return 0x6B63616264656566;
  }
  else {
    return 0x6974636572726F63;
  }
}

uint64_t sub_21F2AE0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2B4010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F2AE0FC()
{
  return 0;
}

void sub_21F2AE108(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21F2AE114(uint64_t a1)
{
  unint64_t v2 = sub_21F2B0F40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AE150(uint64_t a1)
{
  unint64_t v2 = sub_21F2B0F40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AE18C()
{
  return 1;
}

uint64_t sub_21F2AE19C()
{
  return 12383;
}

void sub_21F2AE1AC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21F2AE1B8(uint64_t a1)
{
  unint64_t v2 = sub_21F2B103C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AE1F4(uint64_t a1)
{
  unint64_t v2 = sub_21F2B103C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AE230()
{
  return sub_21F420F48();
}

uint64_t sub_21F2AE274()
{
  return sub_21F420F08();
}

uint64_t sub_21F2AE29C()
{
  return sub_21F420F48();
}

uint64_t sub_21F2AE2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_21F420DF8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_21F2AE35C(uint64_t a1)
{
  unint64_t v2 = sub_21F2B0F94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AE398(uint64_t a1)
{
  unint64_t v2 = sub_21F2B0F94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaGroundTruthSource.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79C8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79D0);
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79D8);
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B0F40();
  sub_21F420F68();
  if (v11 < 0)
  {
    char v14 = v11 & 0x7F;
    char v26 = 1;
    sub_21F2B0F94();
    uint64_t v15 = v18;
    uint64_t v16 = v22;
    sub_21F420CE8();
    char v25 = v14;
    sub_21F2B0FE8();
    uint64_t v17 = v20;
    sub_21F420D58();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  }
  else
  {
    char v24 = 0;
    sub_21F2B103C();
    uint64_t v12 = v22;
    sub_21F420CE8();
    char v23 = v11;
    sub_21F2B1090();
    sub_21F420D58();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v12);
  }
}

uint64_t MediaGroundTruthSource.hashValue.getter()
{
  return sub_21F420F48();
}

uint64_t MediaGroundTruthSource.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A08);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A10);
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A18);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_21F2B0F40();
  uint64_t v14 = v27;
  sub_21F420F58();
  if (!v14)
  {
    uint64_t v15 = v25;
    uint64_t v27 = v10;
    uint64_t v16 = sub_21F420CC8();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        char v31 = 1;
        sub_21F2B0F94();
        sub_21F420C38();
        sub_21F2B10E4();
        sub_21F420CB8();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
        char v21 = v30 | 0x80;
      }
      else
      {
        char v29 = 0;
        sub_21F2B103C();
        sub_21F420C38();
        sub_21F2B1138();
        sub_21F420CB8();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
        char v21 = v28;
      }
      *uint64_t v22 = v21;
    }
    else
    {
      uint64_t v17 = sub_21F4209F8();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A20);
      *uint64_t v19 = &type metadata for MediaGroundTruthSource;
      sub_21F420C48();
      sub_21F4209E8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
}

uint64_t sub_21F2AEC18@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MediaGroundTruthSource.init(from:)(a1, a2);
}

uint64_t sub_21F2AEC30(void *a1)
{
  return MediaGroundTruthSource.encode(to:)(a1);
}

BOOL sub_21F2AEC48(unsigned __int8 *a1, char *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if ((v2 & 0x80u) == 0) {
    BOOL v4 = v3 >= 0;
  }
  else {
    BOOL v4 = v3 < 0;
  }
  return v2 == v3 && v4;
}

uint64_t sub_21F2AEC74()
{
  return sub_21F420F48();
}

uint64_t sub_21F2AECCC()
{
  return sub_21F420F08();
}

uint64_t sub_21F2AED10()
{
  return sub_21F420F48();
}

uint64_t MediaCorrectionGroundTruthSource.hash(into:)()
{
  return sub_21F420F08();
}

unint64_t sub_21F2AED90(char a1)
{
  unint64_t result = 0xD000000000000021;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000027;
      break;
    case 2:
      unint64_t result = 0xD000000000000039;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x6C6F467070416E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21F2AEE58()
{
  return sub_21F2AED90(*v0);
}

uint64_t sub_21F2AEE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2B4110(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F2AEE88(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_21F2AEE94(uint64_t a1)
{
  unint64_t v2 = sub_21F2B118C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AEED0(uint64_t a1)
{
  unint64_t v2 = sub_21F2B118C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AEF0C()
{
  return 0;
}

uint64_t sub_21F2AEF18(uint64_t a1)
{
  unint64_t v2 = sub_21F2B11E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AEF54(uint64_t a1)
{
  unint64_t v2 = sub_21F2B11E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AEF90(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1234();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AEFCC(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1234();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AF008(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1288();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AF044(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1288();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AF080@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_21F2AF0B0(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1330();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AF0EC(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1330();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2AF128(uint64_t a1)
{
  unint64_t v2 = sub_21F2B12DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2AF164(uint64_t a1)
{
  unint64_t v2 = sub_21F2B12DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *static MediaCorrectionGroundTruthSource.allCases.getter()
{
  return &unk_26D0CBB10;
}

uint64_t MediaCorrectionGroundTruthSource.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A38);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A40);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A48);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  char v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A50);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A58);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A60);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B118C();
  sub_21F420F68();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_21F2B12DC();
      uint64_t v21 = v39;
      sub_21F420CE8();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_21F2B1288();
      uint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_21F420CE8();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_21F2B1234();
      uint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_21F420CE8();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_21F2B11E0();
      uint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_21F420CE8();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_21F2B1330();
      uint64_t v19 = v39;
      sub_21F420CE8();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

uint64_t MediaCorrectionGroundTruthSource.hashValue.getter()
{
  return sub_21F420F48();
}

uint64_t MediaCorrectionGroundTruthSource.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A98);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AA0);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AA8);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AB0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AB8);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AC0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_21F2B118C();
  uint64_t v18 = v56;
  sub_21F420F58();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_1Tm(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_21F420CC8();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_21F4209F8();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A20);
    *uint64_t v32 = &type metadata for MediaCorrectionGroundTruthSource;
    sub_21F420C48();
    sub_21F4209E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_21F2B12DC();
      uint64_t v35 = v41;
      sub_21F420C38();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_21F2B1288();
      uint64_t v36 = v41;
      sub_21F420C38();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_21F2B1234();
      uint64_t v37 = v41;
      sub_21F420C38();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_21F2B11E0();
      uint64_t v38 = v41;
      sub_21F420C38();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_21F2B1330();
      char v29 = v40;
      uint64_t v28 = v41;
      sub_21F420C38();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_1Tm(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
      break;
  }
  return result;
}

uint64_t sub_21F2AFE80@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return MediaCorrectionGroundTruthSource.init(from:)(a1, a2);
}

uint64_t sub_21F2AFE98(void *a1)
{
  return MediaCorrectionGroundTruthSource.encode(to:)(a1);
}

BOOL sub_21F2AFEB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_21F2AFEC4(void *a1@<X8>)
{
  *a1 = &unk_26D0CBB38;
}

uint64_t sub_21F2AFED4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v13 = sub_21F41F228();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *a2;
  uint64_t v18 = a4[1];
  uint64_t v20 = *a5;
  uint64_t v19 = a5[1];
  uint64_t v45 = a5[2];
  uint64_t v46 = v19;
  uint64_t v21 = a5[3];
  uint64_t v43 = a5[4];
  uint64_t v44 = v21;
  uint64_t v42 = a5[5];
  LODWORD(v15) = *((unsigned __int8 *)a5 + 48);
  int v40 = v17;
  int v41 = v15;
  unsigned int v22 = *((unsigned __int8 *)a5 + 49);
  if (v18)
  {
    unsigned int v38 = v22;
    unsigned int v22 = *((unsigned __int16 *)a4 + 24);
    uint64_t v23 = a4[5];
    uint64_t v39 = a6;
    uint64_t v36 = a4[4];
    uint64_t v37 = v23;
    long long v34 = *((_OWORD *)a4 + 1);
    uint64_t v24 = v20;
    uint64_t v25 = *a4;
    unsigned int v35 = v22 >> 8;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC78B0);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_21F422460;
    *(void *)(v26 + 32) = v25;
    *(void *)(v26 + 40) = v18;
    uint64_t v20 = v24;
    *(_OWORD *)(v26 + 48) = v34;
    a6 = v39;
    uint64_t v27 = v37;
    *(void *)(v26 + 64) = v36;
    *(void *)(v26 + 72) = v27;
    *(unsigned char *)(v26 + 80) = v22;
    LOBYTE(v22) = v38;
    *(unsigned char *)(v26 + 81) = v35;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a7, v16, v13);
  uint64_t v28 = (int *)type metadata accessor for MediaGroundTruth();
  *(unsigned char *)(a7 + v28[5]) = v40;
  *(void *)(a7 + v28[6]) = v47;
  *(void *)(a7 + v28[7]) = v26;
  uint64_t v29 = a7 + v28[8];
  uint64_t v30 = v46;
  *(void *)uint64_t v29 = v20;
  *(void *)(v29 + 8) = v30;
  uint64_t v31 = v44;
  *(void *)(v29 + 16) = v45;
  *(void *)(v29 + 24) = v31;
  uint64_t v32 = v42;
  *(void *)(v29 + 32) = v43;
  *(void *)(v29 + 40) = v32;
  *(unsigned char *)(v29 + 48) = v41;
  *(unsigned char *)(v29 + 49) = v22;
  return sub_21F2B458C(a6, a7 + v28[9], &qword_26AD38738);
}

uint64_t MediaGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t MediaGroundTruth.source.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaGroundTruth();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MediaGroundTruth.usoEntity.getter()
{
  type metadata accessor for MediaGroundTruth();
  return swift_retain();
}

uint64_t MediaGroundTruth.originalEntityReference.getter()
{
  type metadata accessor for MediaGroundTruth();
  return swift_bridgeObjectRetain();
}

uint64_t MediaGroundTruth.correctedEntityReference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaGroundTruth() + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  LOWORD(v3) = *((_WORD *)v3 + 24);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = (_WORD)v3;
  swift_bridgeObjectRetain();
  return sub_21F2AA1D0(v6, v7);
}

uint64_t MediaGroundTruth.originalRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaGroundTruth() + 36);
  return sub_21F2B13D0(v3, a1);
}

unint64_t sub_21F2B0334(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656372756F73;
      break;
    case 2:
      unint64_t result = 0x7469746E456F7375;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21F2B0400()
{
  return sub_21F2B0334(*v0);
}

uint64_t sub_21F2B0408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2B4334(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F2B0430(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_21F2B043C(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1ABC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2B0478(uint64_t a1)
{
  unint64_t v2 = sub_21F2B1ABC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaGroundTruth.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B1ABC();
  sub_21F420F68();
  LOBYTE(v16) = 0;
  sub_21F41F228();
  sub_21F2B4710(&qword_267EC7AD8, MEMORY[0x263F07508]);
  sub_21F420D58();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for MediaGroundTruth();
    LOBYTE(v16) = *(unsigned char *)(v3 + v9[5]);
    char v21 = 1;
    sub_21F2B1090();
    sub_21F420D58();
    uint64_t v16 = *(void *)(v3 + v9[6]);
    char v21 = 2;
    sub_21F41F418();
    sub_21F2B4710(&qword_267EC7AE0, MEMORY[0x263F72C18]);
    sub_21F420D58();
    uint64_t v16 = *(void *)(v3 + v9[7]);
    char v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AE8);
    sub_21F2B1B64(&qword_267EC7AF0, (void (*)(void))sub_21F2B1B10);
    sub_21F420D58();
    uint64_t v10 = (uint64_t *)(v3 + v9[8]);
    uint64_t v11 = v10[1];
    __int16 v12 = *((_WORD *)v10 + 24);
    uint64_t v16 = *v10;
    uint64_t v17 = v11;
    long long v13 = *((_OWORD *)v10 + 2);
    long long v18 = *((_OWORD *)v10 + 1);
    long long v19 = v13;
    __int16 v20 = v12;
    char v21 = 4;
    sub_21F2B1B10();
    sub_21F420D58();
    LOBYTE(v16) = 5;
    sub_21F420D08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MediaGroundTruth.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F41F228();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7B00);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for MediaGroundTruth();
  MEMORY[0x270FA5388](v10);
  __int16 v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B1ABC();
  uint64_t v30 = v9;
  uint64_t v13 = (uint64_t)v31;
  sub_21F420F58();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v24 = v5;
  uint64_t v31 = a1;
  uint64_t v14 = v27;
  LOBYTE(v32) = 0;
  sub_21F2B4710(&qword_267EC7B08, MEMORY[0x263F07508]);
  uint64_t v15 = v28;
  sub_21F420CB8();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v29, v6);
  char v37 = 1;
  sub_21F2B1138();
  sub_21F420CB8();
  uint64_t v16 = v10;
  v12[v10[5]] = v32;
  sub_21F41F418();
  char v37 = 2;
  sub_21F2B4710(&qword_267EC7B10, MEMORY[0x263F72C18]);
  sub_21F420CB8();
  *(void *)&v12[v10[6]] = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7AE8);
  char v37 = 3;
  sub_21F2B1B64(&qword_267EC7B18, (void (*)(void))sub_21F2B1BD4);
  sub_21F420CB8();
  *(void *)&v12[v10[7]] = v32;
  char v37 = 4;
  sub_21F2B1BD4();
  sub_21F420CB8();
  uint64_t v17 = v33;
  __int16 v18 = v36;
  long long v19 = &v12[v10[8]];
  *(void *)long long v19 = v32;
  *((void *)v19 + 1) = v17;
  long long v20 = v35;
  *((_OWORD *)v19 + 1) = v34;
  *((_OWORD *)v19 + 2) = v20;
  *((_WORD *)v19 + 24) = v18;
  LOBYTE(v32) = 5;
  uint64_t v21 = (uint64_t)v24;
  sub_21F420C68();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v15);
  sub_21F2B458C(v21, (uint64_t)&v12[v16[9]], &qword_26AD38738);
  sub_21F2B1C28((uint64_t)v12, v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return sub_21F2B1C8C((uint64_t)v12);
}

uint64_t sub_21F2B0EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_21F2B0F10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_21F2B0F28(void *a1)
{
  return MediaGroundTruth.encode(to:)(a1);
}

unint64_t sub_21F2B0F40()
{
  unint64_t result = qword_267EC79E0;
  if (!qword_267EC79E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC79E0);
  }
  return result;
}

unint64_t sub_21F2B0F94()
{
  unint64_t result = qword_267EC79E8;
  if (!qword_267EC79E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC79E8);
  }
  return result;
}

unint64_t sub_21F2B0FE8()
{
  unint64_t result = qword_267EC79F0;
  if (!qword_267EC79F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC79F0);
  }
  return result;
}

unint64_t sub_21F2B103C()
{
  unint64_t result = qword_267EC79F8;
  if (!qword_267EC79F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC79F8);
  }
  return result;
}

unint64_t sub_21F2B1090()
{
  unint64_t result = qword_267EC7A00;
  if (!qword_267EC7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A00);
  }
  return result;
}

unint64_t sub_21F2B10E4()
{
  unint64_t result = qword_267EC7A28;
  if (!qword_267EC7A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A28);
  }
  return result;
}

unint64_t sub_21F2B1138()
{
  unint64_t result = qword_267EC7A30;
  if (!qword_267EC7A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A30);
  }
  return result;
}

unint64_t sub_21F2B118C()
{
  unint64_t result = qword_267EC7A68;
  if (!qword_267EC7A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A68);
  }
  return result;
}

unint64_t sub_21F2B11E0()
{
  unint64_t result = qword_267EC7A70;
  if (!qword_267EC7A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A70);
  }
  return result;
}

unint64_t sub_21F2B1234()
{
  unint64_t result = qword_267EC7A78;
  if (!qword_267EC7A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A78);
  }
  return result;
}

unint64_t sub_21F2B1288()
{
  unint64_t result = qword_267EC7A80;
  if (!qword_267EC7A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A80);
  }
  return result;
}

unint64_t sub_21F2B12DC()
{
  unint64_t result = qword_267EC7A88;
  if (!qword_267EC7A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A88);
  }
  return result;
}

unint64_t sub_21F2B1330()
{
  unint64_t result = qword_267EC7A90;
  if (!qword_267EC7A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7A90);
  }
  return result;
}

uint64_t type metadata accessor for MediaGroundTruth()
{
  uint64_t result = qword_26AD3A9D8;
  if (!qword_26AD3A9D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2B13D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL _s28SiriPrivateLearningInference16MediaGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v64 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38748);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v42 - v15;
  MEMORY[0x270FA5388](v14);
  __int16 v18 = (char *)&v42 - v17;
  if ((sub_21F41F1D8() & 1) == 0) {
    return 0;
  }
  unint64_t v63 = v9;
  uint64_t v19 = type metadata accessor for MediaGroundTruth();
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 20))) {
    return 0;
  }
  long long v20 = (int *)v19;
  uint64_t v43 = v4;
  uint64_t v21 = *(int *)(v19 + 24);
  uint64_t v22 = *(void *)(a2 + v21);
  sub_21F382B74(*(void *)(a1 + v21), v93);
  uint64_t v44 = v93[0];
  uint64_t v45 = v93[1];
  uint64_t v46 = v93[2];
  uint64_t v47 = v93[3];
  uint64_t v48 = v93[4];
  uint64_t v50 = v93[5];
  uint64_t v52 = v93[6];
  uint64_t v54 = v93[7];
  uint64_t v56 = v93[8];
  uint64_t v58 = v93[9];
  sub_21F382B74(v22, v94);
  uint64_t v23 = v94[0];
  uint64_t v49 = v94[1];
  uint64_t v51 = v94[2];
  uint64_t v53 = v94[3];
  uint64_t v55 = v94[4];
  uint64_t v57 = v94[5];
  uint64_t v59 = v94[6];
  uint64_t v60 = v94[7];
  uint64_t v61 = v94[8];
  uint64_t v62 = v94[9];
  sub_21F2B458C((uint64_t)v93, (uint64_t)v96, &qword_267EC7C20);
  if (v97 != 1)
  {
    sub_21F2B458C((uint64_t)v94, (uint64_t)v95, &qword_267EC7C20);
    if (v95[1] != 1)
    {
      uint64_t v98 = v44;
      uint64_t v99 = v45;
      uint64_t v100 = v46;
      uint64_t v101 = v47;
      uint64_t v102 = v48;
      uint64_t v103 = v50;
      uint64_t v104 = v52;
      uint64_t v105 = v54;
      uint64_t v106 = v56;
      uint64_t v107 = v58;
      uint64_t v73 = v23;
      uint64_t v74 = v49;
      uint64_t v75 = v51;
      uint64_t v76 = v53;
      uint64_t v77 = v55;
      uint64_t v78 = v57;
      uint64_t v79 = v59;
      uint64_t v80 = v60;
      uint64_t v81 = v61;
      uint64_t v82 = v62;
      char v24 = sub_21F3632C0(&v98, &v73);
      sub_21F2B4758(v94);
      sub_21F2B4758(v93);
      if ((v24 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v73 = v44;
    uint64_t v74 = v45;
    uint64_t v75 = v46;
    uint64_t v76 = v47;
    uint64_t v77 = v48;
    uint64_t v78 = v50;
    uint64_t v79 = v52;
    uint64_t v80 = v54;
    uint64_t v81 = v56;
    uint64_t v82 = v58;
    uint64_t v83 = v23;
    uint64_t v84 = v49;
    uint64_t v85 = v51;
    uint64_t v86 = v53;
    uint64_t v87 = v55;
    uint64_t v88 = v57;
    uint64_t v89 = v59;
    uint64_t v90 = v60;
    uint64_t v91 = v61;
    uint64_t v92 = v62;
    sub_21F2B45F0(&v73);
    return 0;
  }
  sub_21F2B458C((uint64_t)v94, (uint64_t)&v98, &qword_267EC7C20);
  if (v99 != 1) {
    goto LABEL_7;
  }
LABEL_9:
  if (!sub_21F32E6F8(*(void *)(a1 + v20[7]), *(void *)(a2 + v20[7]))) {
    return 0;
  }
  uint64_t v25 = a1 + v20[8];
  uint64_t v26 = *(void *)(v25 + 8);
  __int16 v27 = *(_WORD *)(v25 + 48);
  v69[0] = *(void *)v25;
  v69[1] = v26;
  long long v28 = *(_OWORD *)(v25 + 32);
  long long v70 = *(_OWORD *)(v25 + 16);
  long long v71 = v28;
  __int16 v72 = v27;
  uint64_t v29 = a2 + v20[8];
  uint64_t v30 = *(void *)(v29 + 8);
  __int16 v31 = *(_WORD *)(v29 + 48);
  v65[0] = *(void *)v29;
  v65[1] = v30;
  long long v32 = *(_OWORD *)(v29 + 32);
  long long v66 = *(_OWORD *)(v29 + 16);
  long long v67 = v32;
  __int16 v68 = v31;
  if (!_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v69, (uint64_t)v65)) {
    return 0;
  }
  sub_21F2B13D0(a1 + v20[9], (uint64_t)v18);
  sub_21F2B13D0(a2 + v20[9], (uint64_t)v16);
  uint64_t v33 = *(int *)(v7 + 48);
  uint64_t v34 = (uint64_t)v63;
  uint64_t v35 = (uint64_t)&v63[v33];
  sub_21F2B13D0((uint64_t)v18, (uint64_t)v63);
  sub_21F2B13D0((uint64_t)v16, v35);
  __int16 v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  uint64_t v37 = v43;
  if (v36(v34, 1, v43) == 1)
  {
    sub_21F29FA48((uint64_t)v16, &qword_26AD38738);
    sub_21F29FA48((uint64_t)v18, &qword_26AD38738);
    if (v36(v35, 1, v37) == 1)
    {
      sub_21F29FA48((uint64_t)v63, &qword_26AD38738);
      return 1;
    }
    goto LABEL_16;
  }
  sub_21F2B13D0(v34, (uint64_t)v13);
  if (v36(v35, 1, v37) == 1)
  {
    sub_21F29FA48((uint64_t)v16, &qword_26AD38738);
    sub_21F29FA48((uint64_t)v18, &qword_26AD38738);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v13, v37);
LABEL_16:
    sub_21F29FA48((uint64_t)v63, &qword_26AD38748);
    return 0;
  }
  uint64_t v39 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v6, v35, v37);
  sub_21F2B4710((unint64_t *)&qword_26AD3A840, MEMORY[0x263F07508]);
  char v40 = sub_21F420098();
  int v41 = *(void (**)(char *, uint64_t))(v39 + 8);
  v41(v6, v37);
  sub_21F29FA48((uint64_t)v16, &qword_26AD38738);
  sub_21F29FA48((uint64_t)v18, &qword_26AD38738);
  v41(v13, v37);
  sub_21F29FA48(v34, &qword_26AD38738);
  return (v40 & 1) != 0;
}

unint64_t sub_21F2B1ABC()
{
  unint64_t result = qword_267EC7AD0;
  if (!qword_267EC7AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7AD0);
  }
  return result;
}

unint64_t sub_21F2B1B10()
{
  unint64_t result = qword_267EC7AF8;
  if (!qword_267EC7AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7AF8);
  }
  return result;
}

uint64_t sub_21F2B1B64(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC7AE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F2B1BD4()
{
  unint64_t result = qword_267EC7B20;
  if (!qword_267EC7B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B20);
  }
  return result;
}

uint64_t sub_21F2B1C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2B1C8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21F2B1CEC()
{
  unint64_t result = qword_267EC7B28;
  if (!qword_267EC7B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B28);
  }
  return result;
}

unint64_t sub_21F2B1D44()
{
  unint64_t result = qword_267EC7B30;
  if (!qword_267EC7B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B30);
  }
  return result;
}

unint64_t sub_21F2B1D9C()
{
  unint64_t result = qword_267EC7B38;
  if (!qword_267EC7B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC7B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B38);
  }
  return result;
}

uint64_t sub_21F2B1DF8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_21F2B4710(&qword_267EC7B48, (void (*)(uint64_t))type metadata accessor for MediaGroundTruth);
  uint64_t result = sub_21F2B4710(&qword_267EC7B50, (void (*)(uint64_t))type metadata accessor for MediaGroundTruth);
  *(void *)(a1 + 16) = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruthSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1F) {
    goto LABEL_17;
  }
  if (a2 + 225 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 225) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 225;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v6 >= 0x1E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for MediaGroundTruthSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 225 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 225) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1E)
  {
    unsigned int v6 = ((a2 - 31) >> 8) + 1;
    *uint64_t result = a2 - 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2B2004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_21F2B202C(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_21F2B2038(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_21F2B2048(unsigned char *result, char a2)
{
  *uint64_t result = *result & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource()
{
  return &type metadata for MediaGroundTruthSource;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource()
{
  return &type metadata for MediaCorrectionGroundTruthSource;
}

char *initializeBufferWithCopyOfBuffer for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v23(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    *(void *)&a1[v9] = *(void *)&a2[v9];
    uint64_t v10 = a3[8];
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void *)&a2[v10 + 8];
    *(void *)uint64_t v11 = *(void *)&a2[v10];
    *((void *)v11 + 1) = v13;
    uint64_t v14 = *(void *)&a2[v10 + 24];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      long long v15 = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
      *((_OWORD *)v11 + 2) = v15;
    }
    else
    {
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = v14;
      uint64_t v17 = *((void *)v12 + 5);
      *((void *)v11 + 4) = *((void *)v12 + 4);
      *((void *)v11 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
    uint64_t v18 = a3[9];
    uint64_t v19 = &a1[v18];
    long long v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v23(v19, v20, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for MediaGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  }
  return result;
}

char *initializeWithCopy for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v21 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v21(a1, a2, v6);
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)&a2[v9 + 8];
  *(void *)uint64_t v10 = *(void *)&a2[v9];
  *((void *)v10 + 1) = v12;
  uint64_t v13 = *(void *)&a2[v9 + 24];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    long long v14 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v14;
  }
  else
  {
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    uint64_t v15 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_WORD *)v10 + 24) = *((_WORD *)v11 + 24);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v21(v17, v18, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  char v24 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v24(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *((void *)v9 + 1) = *(void *)&a2[v8 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v9 + 16;
  uint64_t v12 = v10 + 16;
  uint64_t v13 = *((void *)v10 + 3);
  if (*((void *)v9 + 3) == 1)
  {
    if (v13 == 1)
    {
      long long v14 = *((_OWORD *)v10 + 2);
      *uint64_t v11 = *v12;
      *((_OWORD *)v9 + 2) = v14;
    }
    else
    {
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = *((void *)v10 + 3);
      *((void *)v9 + 4) = *((void *)v10 + 4);
      *((void *)v9 + 5) = *((void *)v10 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_21F2B28F0((uint64_t)(v9 + 16));
    long long v15 = *((_OWORD *)v10 + 2);
    *uint64_t v11 = *v12;
    *((_OWORD *)v9 + 2) = v15;
  }
  else
  {
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = *((void *)v10 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = *((void *)v10 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v9[48] = v10[48];
  v9[49] = v10[49];
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v20 = v19(&a1[v16], 1, v6);
  int v21 = v19(v18, 1, v6);
  if (!v20)
  {
    if (!v21)
    {
      v24(v17, v18, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    goto LABEL_13;
  }
  if (v21)
  {
LABEL_13:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  return a1;
}

uint64_t sub_21F2B28F0(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
  uint64_t v14 = a3[9];
  long long v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  char v24 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v24(a1, a2, v6);
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[8];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)&a2[v9 + 8];
  *(void *)uint64_t v10 = *(void *)&a2[v9];
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRelease();
  if (*((void *)v10 + 3) == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = *((void *)v11 + 3);
  if (v13 == 1)
  {
    sub_21F2B28F0((uint64_t)(v10 + 16));
LABEL_4:
    long long v14 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v14;
    goto LABEL_6;
  }
  *((void *)v10 + 2) = *((void *)v11 + 2);
  *((void *)v10 + 3) = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v11 + 5);
  *((void *)v10 + 4) = *((void *)v11 + 4);
  *((void *)v10 + 5) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  *((_WORD *)v10 + 24) = *((_WORD *)v11 + 24);
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v20 = v19(&a1[v16], 1, v6);
  int v21 = v19(v18, 1, v6);
  if (!v20)
  {
    if (!v21)
    {
      v24(v17, v18, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    goto LABEL_11;
  }
  if (v21)
  {
LABEL_11:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2B2D44);
}

uint64_t sub_21F2B2D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2B2E88);
}

uint64_t sub_21F2B2E88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21F41F228();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_21F2B2FB8()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2B30B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21F2B30B0()
{
  if (!qword_26AD38740)
  {
    sub_21F41F228();
    unint64_t v0 = sub_21F420798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD38740);
    }
  }
}

uint64_t getEnumTagSinglePayload for MediaGroundTruth.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaGroundTruth.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2B3264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_21F2B328C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_21F2B3294(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruth.CodingKeys()
{
  return &type metadata for MediaGroundTruth.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionTag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s28SiriPrivateLearningInference32MediaCorrectionGroundTruthSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2B3408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.CodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys;
}

uint64_t getEnumTagSinglePayload for MediaReferenceSourceApp(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaGroundTruthSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2B35ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_21F2B3614(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.CodingKeys()
{
  return &type metadata for MediaGroundTruthSource.CodingKeys;
}

uint64_t sub_21F2B363C()
{
  return 0;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.CorrectionCodingKeys()
{
  return &type metadata for MediaGroundTruthSource.CorrectionCodingKeys;
}

uint64_t getEnumTagSinglePayload for SuggestionDonationError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s28SiriPrivateLearningInference22MediaGroundTruthSourceO20CorrectionCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21F2B3740);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.FeedbackCodingKeys()
{
  return &type metadata for MediaGroundTruthSource.FeedbackCodingKeys;
}

unint64_t sub_21F2B377C()
{
  unint64_t result = qword_267EC7B58;
  if (!qword_267EC7B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B58);
  }
  return result;
}

unint64_t sub_21F2B37D4()
{
  unint64_t result = qword_267EC7B60;
  if (!qword_267EC7B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B60);
  }
  return result;
}

unint64_t sub_21F2B382C()
{
  unint64_t result = qword_267EC7B68;
  if (!qword_267EC7B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B68);
  }
  return result;
}

unint64_t sub_21F2B3884()
{
  unint64_t result = qword_267EC7B70;
  if (!qword_267EC7B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B70);
  }
  return result;
}

unint64_t sub_21F2B38DC()
{
  unint64_t result = qword_267EC7B78;
  if (!qword_267EC7B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B78);
  }
  return result;
}

unint64_t sub_21F2B3934()
{
  unint64_t result = qword_267EC7B80;
  if (!qword_267EC7B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B80);
  }
  return result;
}

unint64_t sub_21F2B398C()
{
  unint64_t result = qword_267EC7B88;
  if (!qword_267EC7B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B88);
  }
  return result;
}

unint64_t sub_21F2B39E4()
{
  unint64_t result = qword_267EC7B90;
  if (!qword_267EC7B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B90);
  }
  return result;
}

unint64_t sub_21F2B3A3C()
{
  unint64_t result = qword_267EC7B98;
  if (!qword_267EC7B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7B98);
  }
  return result;
}

unint64_t sub_21F2B3A94()
{
  unint64_t result = qword_267EC7BA0;
  if (!qword_267EC7BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BA0);
  }
  return result;
}

unint64_t sub_21F2B3AEC()
{
  unint64_t result = qword_267EC7BA8;
  if (!qword_267EC7BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BA8);
  }
  return result;
}

unint64_t sub_21F2B3B44()
{
  unint64_t result = qword_267EC7BB0;
  if (!qword_267EC7BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BB0);
  }
  return result;
}

unint64_t sub_21F2B3B9C()
{
  unint64_t result = qword_267EC7BB8;
  if (!qword_267EC7BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BB8);
  }
  return result;
}

unint64_t sub_21F2B3BF4()
{
  unint64_t result = qword_267EC7BC0;
  if (!qword_267EC7BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BC0);
  }
  return result;
}

unint64_t sub_21F2B3C4C()
{
  unint64_t result = qword_267EC7BC8;
  if (!qword_267EC7BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BC8);
  }
  return result;
}

unint64_t sub_21F2B3CA4()
{
  unint64_t result = qword_267EC7BD0;
  if (!qword_267EC7BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BD0);
  }
  return result;
}

unint64_t sub_21F2B3CFC()
{
  unint64_t result = qword_267EC7BD8;
  if (!qword_267EC7BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BD8);
  }
  return result;
}

unint64_t sub_21F2B3D54()
{
  unint64_t result = qword_267EC7BE0;
  if (!qword_267EC7BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BE0);
  }
  return result;
}

unint64_t sub_21F2B3DAC()
{
  unint64_t result = qword_267EC7BE8;
  if (!qword_267EC7BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BE8);
  }
  return result;
}

unint64_t sub_21F2B3E04()
{
  unint64_t result = qword_267EC7BF0;
  if (!qword_267EC7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BF0);
  }
  return result;
}

unint64_t sub_21F2B3E5C()
{
  unint64_t result = qword_267EC7BF8;
  if (!qword_267EC7BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7BF8);
  }
  return result;
}

unint64_t sub_21F2B3EB4()
{
  unint64_t result = qword_267EC7C00;
  if (!qword_267EC7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C00);
  }
  return result;
}

unint64_t sub_21F2B3F0C()
{
  unint64_t result = qword_267EC7C08;
  if (!qword_267EC7C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C08);
  }
  return result;
}

unint64_t sub_21F2B3F64()
{
  unint64_t result = qword_267EC7C10;
  if (!qword_267EC7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C10);
  }
  return result;
}

unint64_t sub_21F2B3FBC()
{
  unint64_t result = qword_267EC7C18;
  if (!qword_267EC7C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C18);
  }
  return result;
}

uint64_t sub_21F2B4010(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974636572726F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21F2B4110(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000021 && a2 == 0x800000021F4332F0 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x800000021F433320 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000039 && a2 == 0x800000021F433350 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000021F433390 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F467070416E69 && a2 == 0xED00007075776F6CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_21F2B4334(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469746E456F7375 && a2 == 0xE900000000000079 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000021F4333B0 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000021F4333D0 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021F4333F0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_21F2B458C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_21F2B45F0(uint64_t *a1)
{
  uint64_t v4 = a1[10];
  uint64_t v2 = a1[11];
  sub_21F2B469C(*a1, a1[1]);
  sub_21F2B469C(v4, v2);
  return a1;
}

uint64_t sub_21F2B469C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2B4710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_21F2B4758(uint64_t *a1)
{
  return a1;
}

uint64_t InAppFollowupClassification.init(priorEvent:followupEventId:followupEventType:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_21F29F920((uint64_t)a1, (uint64_t)v26);
  *((void *)&v27 + 1) = a2;
  *(void *)&long long v28 = a3;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v13 = *(void *)(v12 + 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  *((void *)&v29 + 1) = v14(v11, v13);
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 24))(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_21F2A6E2C(0, v17[2] + 1, 1, v17);
  }
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_21F2A6E2C((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  v18[2] = v20 + 1;
  int v21 = &v18[2 * v20];
  v21[4] = a2;
  v21[5] = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v18;
  *((void *)&v28 + 1) = a4;
  *(void *)&long long v29 = a5;
  *(void *)(a6 + 80) = v18;
  long long v22 = v26[1];
  *(_OWORD *)a6 = v26[0];
  *(_OWORD *)(a6 + 16) = v22;
  long long v23 = v28;
  *(_OWORD *)(a6 + 32) = v27;
  *(_OWORD *)(a6 + 48) = v23;
  *(_OWORD *)(a6 + 64) = v29;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t InAppFollowupClassification.priorEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21F29F920(v1, a1);
}

uint64_t InAppFollowupClassification.followupEventId.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InAppFollowupClassification.followupEventType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InAppFollowupClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InAppFollowupClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2B49D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2B49DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for Storefront(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InAppFollowupClassification(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InAppFollowupClassification(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for InAppFollowupClassification(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for InAppFollowupClassification(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InAppFollowupClassification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppFollowupClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppFollowupClassification()
{
  return &type metadata for InAppFollowupClassification;
}

BOOL static ContactSuggestionDomain.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ContactSuggestionDomain.hash(into:)()
{
  return sub_21F420F08();
}

uint64_t sub_21F2B4F60()
{
  uint64_t v1 = 0x736567617373656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x73746361746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6143656E6F6870;
  }
}

uint64_t sub_21F2B4FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2B6204(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F2B4FE8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21F2B4FF4(uint64_t a1)
{
  unint64_t v2 = sub_21F2B5538();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2B5030(uint64_t a1)
{
  unint64_t v2 = sub_21F2B5538();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2B506C(uint64_t a1)
{
  unint64_t v2 = sub_21F2B558C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2B50A8(uint64_t a1)
{
  unint64_t v2 = sub_21F2B558C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2B50E4(uint64_t a1)
{
  unint64_t v2 = sub_21F2B55E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2B5120(uint64_t a1)
{
  unint64_t v2 = sub_21F2B55E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2B515C(uint64_t a1)
{
  unint64_t v2 = sub_21F2B5634();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2B5198(uint64_t a1)
{
  unint64_t v2 = sub_21F2B5634();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ContactSuggestionDomain.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C28);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  long long v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C30);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C38);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C40);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B5538();
  sub_21F420F68();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_21F2B55E0();
      sub_21F420CE8();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_21F2B558C();
      uint64_t v17 = v23;
      sub_21F420CE8();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_21F2B5634();
    sub_21F420CE8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_21F2B5538()
{
  unint64_t result = qword_267EC7C48;
  if (!qword_267EC7C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C48);
  }
  return result;
}

unint64_t sub_21F2B558C()
{
  unint64_t result = qword_267EC7C50;
  if (!qword_267EC7C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C50);
  }
  return result;
}

unint64_t sub_21F2B55E0()
{
  unint64_t result = qword_267EC7C58;
  if (!qword_267EC7C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C58);
  }
  return result;
}

unint64_t sub_21F2B5634()
{
  unint64_t result = qword_267EC7C60;
  if (!qword_267EC7C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C60);
  }
  return result;
}

uint64_t ContactSuggestionDomain.hashValue.getter()
{
  return sub_21F420F48();
}

uint64_t ContactSuggestionDomain.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C68);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C70);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C78);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C80);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2B5538();
  uint64_t v12 = (uint64_t)v39;
  sub_21F420F58();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_21F420CC8();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_21F4209F8();
    swift_allocError();
    long long v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7A20);
    *long long v23 = &type metadata for ContactSuggestionDomain;
    sub_21F420C48();
    sub_21F4209E8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_21F2B55E0();
      uint64_t v18 = v30;
      sub_21F420C38();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_21F2B558C();
      uint64_t v25 = v30;
      sub_21F420C38();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_21F2B5634();
    uint64_t v24 = v30;
    sub_21F420C38();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
}

uint64_t sub_21F2B5C88@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ContactSuggestionDomain.init(from:)(a1, a2);
}

uint64_t sub_21F2B5CA0(void *a1)
{
  return ContactSuggestionDomain.encode(to:)(a1);
}

unint64_t sub_21F2B5CBC()
{
  unint64_t result = qword_267EC7C88;
  if (!qword_267EC7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain()
{
  return &type metadata for ContactSuggestionDomain;
}

uint64_t getEnumTagSinglePayload for ScoreChange.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s28SiriPrivateLearningInference23ContactSuggestionDomainOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2B5E84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.CodingKeys()
{
  return &type metadata for ContactSuggestionDomain.CodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.PhoneCallCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.PhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.MessagesCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.MessagesCodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.ContactsCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.ContactsCodingKeys;
}

unint64_t sub_21F2B5EF0()
{
  unint64_t result = qword_267EC7C90;
  if (!qword_267EC7C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C90);
  }
  return result;
}

unint64_t sub_21F2B5F48()
{
  unint64_t result = qword_267EC7C98;
  if (!qword_267EC7C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7C98);
  }
  return result;
}

unint64_t sub_21F2B5FA0()
{
  unint64_t result = qword_267EC7CA0;
  if (!qword_267EC7CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CA0);
  }
  return result;
}

unint64_t sub_21F2B5FF8()
{
  unint64_t result = qword_267EC7CA8;
  if (!qword_267EC7CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CA8);
  }
  return result;
}

unint64_t sub_21F2B6050()
{
  unint64_t result = qword_267EC7CB0;
  if (!qword_267EC7CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CB0);
  }
  return result;
}

unint64_t sub_21F2B60A8()
{
  unint64_t result = qword_267EC7CB8;
  if (!qword_267EC7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CB8);
  }
  return result;
}

unint64_t sub_21F2B6100()
{
  unint64_t result = qword_267EC7CC0;
  if (!qword_267EC7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CC0);
  }
  return result;
}

unint64_t sub_21F2B6158()
{
  unint64_t result = qword_267EC7CC8;
  if (!qword_267EC7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CC8);
  }
  return result;
}

unint64_t sub_21F2B61B0()
{
  unint64_t result = qword_267EC7CD0;
  if (!qword_267EC7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CD0);
  }
  return result;
}

uint64_t sub_21F2B6204(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6143656E6F6870 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746361746E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t dispatch thunk of UserCanFollowup.endTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HasContactQuery.usoQuery.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HasRelatedCall.callEventId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21F2B63C4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_21F2C3184(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v18;
    unint64_t v15 = v1 & 0xC000000000000001;
    uint64_t v16 = v2;
    unint64_t v17 = v1;
    while (v2 != v5)
    {
      if (v15)
      {
        char v6 = (void *)MEMORY[0x223C4A6D0](v5, v1);
      }
      else
      {
        char v6 = *(void **)(v1 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v7 = v6[2];
      uint64_t v8 = v6[3];
      uint64_t v10 = v6[4];
      uint64_t v9 = v6[5];
      uint64_t v11 = v6[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v13 = *(void *)(v18 + 16);
      unint64_t v12 = *(void *)(v18 + 24);
      if (v13 >= v12 >> 1) {
        sub_21F2C3184(v12 > 1, v13 + 1, 1);
      }
      ++v5;
      *(void *)(v18 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v18 + 40 * v13);
      v14[4] = v7;
      v14[5] = v8;
      v14[6] = v10;
      v14[7] = v9;
      v14[8] = v11;
      uint64_t v2 = v16;
      unint64_t v1 = v17;
      if (v16 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2B655C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_21F2C066C(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D10);
  swift_allocObject();
  uint64_t result = sub_21F41FE78();
  *(void *)(v2 + 24) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_21F2B65D4()
{
  type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D08);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC7CD8 = 91;
  unk_267EC7CE0 = 0xE100000000000000;
  return result;
}

uint64_t sub_21F2B665C(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v59 - v6;
  uint64_t v8 = sub_21F41F198();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = a1[2];
  uint64_t v67 = a1[3];
  uint64_t v69 = a1[4];
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_21F29E694(v14, (uint64_t)v5);
  swift_bridgeObjectRelease();
  unint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v16 = v15(v5, 1, v8);
  uint64_t v66 = v8;
  if (v16 == 1)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_21F29E8D4(v17);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      uint64_t v20 = 1;
    }
    else
    {
      sub_21F41F158();
      uint64_t v20 = 0;
    }
    uint64_t v8 = v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v66);
    sub_21F2B8728((uint64_t)v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v5, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  uint64_t v21 = v68;
  if (v15(v7, 1, v8) != 1)
  {
    uint64_t v61 = v11;
    uint64_t v62 = v12;
    uint64_t v63 = v13;
    uint64_t v60 = v9;
    uint64_t v22 = v65;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v65, v7, v8);
    long long v23 = (uint64_t *)(v21 + 16);
    uint64_t v24 = swift_beginAccess();
    uint64_t v25 = *(void *)(v21 + 16);
    MEMORY[0x270FA5388](v24);
    *(&v59 - 2) = (uint64_t)v22;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_21F2B84E0((uint64_t)sub_21F2B8788, (uint64_t)(&v59 - 4), v25);
    uint64_t v64 = 0;
    swift_bridgeObjectRelease();
    int64_t v27 = 0;
    uint64_t v28 = *(void *)(v26 + 64);
    uint64_t v70 = v26 + 64;
    uint64_t v29 = 1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = -1;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    unint64_t v31 = v30 & v28;
    int64_t v32 = (unint64_t)(v29 + 63) >> 6;
    while (1)
    {
      if (v31)
      {
        unint64_t v33 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v34 = v33 | (v27 << 6);
      }
      else
      {
        int64_t v35 = v27 + 1;
        if (__OFADD__(v27, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v35 >= v32) {
          goto LABEL_33;
        }
        unint64_t v36 = *(void *)(v70 + 8 * v35);
        ++v27;
        if (!v36)
        {
          int64_t v27 = v35 + 1;
          if (v35 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v36 = *(void *)(v70 + 8 * v27);
          if (!v36)
          {
            int64_t v27 = v35 + 2;
            if (v35 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v36 = *(void *)(v70 + 8 * v27);
            if (!v36)
            {
              int64_t v37 = v35 + 3;
              if (v37 >= v32)
              {
LABEL_33:
                swift_release();
                (*(void (**)(char *, uint64_t))(v60 + 8))(v65, v66);
                uint64_t v13 = v63;
                uint64_t v11 = v61;
                uint64_t v12 = v62;
                goto LABEL_34;
              }
              unint64_t v36 = *(void *)(v70 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  int64_t v27 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    break;
                  }
                  if (v27 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v36 = *(void *)(v70 + 8 * v27);
                  ++v37;
                  if (v36) {
                    goto LABEL_29;
                  }
                }
LABEL_46:
                __break(1u);
LABEL_47:
                swift_once();
LABEL_40:
                uint64_t v52 = sub_21F41FF28();
                __swift_project_value_buffer(v52, (uint64_t)qword_26AD3C910);
                uint64_t v53 = sub_21F41FF08();
                os_log_type_t v54 = sub_21F420678();
                if (os_log_type_enabled(v53, v54))
                {
                  uint64_t v55 = (uint8_t *)swift_slowAlloc();
                  uint64_t v56 = swift_slowAlloc();
                  v71[0] = v56;
                  *(_DWORD *)uint64_t v55 = 136315138;
                  if (qword_267EC7190 != -1) {
                    swift_once();
                  }
                  uint64_t v57 = qword_267EC7CD8;
                  unint64_t v58 = unk_267EC7CE0;
                  swift_bridgeObjectRetain();
                  uint64_t v72 = sub_21F2A02C4(v57, v58, v71);
                  sub_21F4207D8();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_21F29A000, v53, v54, "%s Unexpected event discarded", v55, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x223C4B440](v56, -1, -1);
                  MEMORY[0x223C4B440](v55, -1, -1);
                }
                else
                {
                }
                goto LABEL_38;
              }
              int64_t v27 = v37;
            }
          }
        }
LABEL_29:
        unint64_t v31 = (v36 - 1) & v36;
        unint64_t v34 = __clz(__rbit64(v36)) + (v27 << 6);
      }
      uint64_t v38 = (uint64_t *)(*(void *)(v26 + 48) + 16 * v34);
      uint64_t v39 = *v38;
      uint64_t v40 = v38[1];
      uint64_t v41 = *(void *)(*(void *)(v26 + 56) + 8 * v34);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_21F2F7E18(v39, v40);
      LOBYTE(v39) = v43;
      swift_bridgeObjectRelease();
      if (v39)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v45 = *v23;
        uint64_t v72 = *v23;
        *long long v23 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_21F2FE474();
          uint64_t v45 = v72;
        }
        swift_bridgeObjectRelease();
        sub_21F2FD84C(v42, v45);
        *long long v23 = v45;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)(v41 + 56) = 0;
      *(void *)(v41 + 64) = 0;
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  sub_21F2B8728((uint64_t)v7);
LABEL_34:
  uint64_t v46 = v67;
  uint64_t v47 = v69;
  if (v67 != 0xD000000000000011 || v69 != 0x800000021F431F50)
  {
    char v48 = sub_21F420DF8();
    uint64_t v47 = v69;
    uint64_t v46 = v67;
    if ((v48 & 1) == 0)
    {
      if (qword_26AD38998 != -1) {
        goto LABEL_47;
      }
      goto LABEL_40;
    }
  }
  v71[0] = v12;
  v71[1] = v11;
  v71[2] = v13;
  v71[3] = v46;
  v71[4] = v47;
  sub_21F2B6DD8(v71);
LABEL_38:
  unint64_t v49 = sub_21F41FE18();
  uint64_t v50 = sub_21F2B63C4(v49);
  swift_bridgeObjectRelease();
  return v50;
}

void sub_21F2B6DD8(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_21F29E1C8(v7, &v76);
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)&v76 + 1);
  if (!*((void *)&v76 + 1)) {
    goto LABEL_5;
  }
  *((void *)&v71 + 1) = v2;
  os_log_t oslog = v1;
  uint64_t v70 = v5;
  *(void *)&long long v71 = v3;
  uint64_t v9 = v76;
  swift_bridgeObjectRetain();
  sub_21F2A9FD0(v9, v8);
  uint64_t v10 = swift_bridgeObjectRetain();
  char v11 = sub_21F29E8EC(v10);
  swift_bridgeObjectRelease();
  if (v11 != 2)
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_21F29E904(v12, &v76);
    swift_bridgeObjectRelease();
    char v13 = v76;
    if (v76 != 2)
    {
      int v69 = v11 & 1;
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_21F41FF28();
      __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
      uint64_t v21 = sub_21F41FF08();
      os_log_type_t v22 = sub_21F420668();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v67 = v6;
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(void *)&long long v76 = v24;
        *(_DWORD *)uint64_t v23 = 136315394;
        if (qword_267EC7190 != -1) {
          swift_once();
        }
        uint64_t v25 = qword_267EC7CD8;
        unint64_t v26 = unk_267EC7CE0;
        swift_bridgeObjectRetain();
        HIDWORD(v75) = (unint64_t)sub_21F2A02C4(v25, v26, (uint64_t *)&v76) >> 32;
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 1024;
        LODWORD(v75) = v69;
        sub_21F4207D8();
        _os_log_impl(&dword_21F29A000, v21, v22, "%s Play media event isSiriDonated =  %{BOOL}d / event origin = eventOrigin.rawValue", (uint8_t *)v23, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v24, -1, -1);
        MEMORY[0x223C4B440](v23, -1, -1);

        uint64_t v6 = v67;
        os_log_t v27 = oslog;
      }
      else
      {

        os_log_t v27 = oslog;
      }
      uint64_t v28 = (uint64_t *)&v27[2];
      swift_beginAccess();
      Class isa = v27[2].isa;
      if (*((void *)isa + 2))
      {
        swift_bridgeObjectRetain();
        unint64_t v30 = sub_21F2F7E18(v9, v8);
        if (v31)
        {
          uint64_t v32 = *(void *)(*((void *)isa + 7) + 8 * v30);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          *(void *)(v32 + 56) = 0;
          *(void *)(v32 + 64) = 0;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_21F2B8658(v9, v8);
          swift_endAccess();
          swift_release();
          if (!v69)
          {
            swift_bridgeObjectRelease();
            if (v13)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v33 = sub_21F420DF8();
              swift_bridgeObjectRelease();
              if ((v33 & 1) == 0)
              {
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                unint64_t v34 = sub_21F41FF08();
                os_log_type_t v35 = sub_21F420668();
                if (os_log_type_enabled(v34, v35))
                {
                  uint64_t v36 = v6;
                  uint64_t v37 = swift_slowAlloc();
                  uint64_t v38 = swift_slowAlloc();
                  uint64_t v75 = v38;
                  *(_DWORD *)uint64_t v37 = 136315394;
                  if (qword_267EC7190 != -1) {
                    swift_once();
                  }
                  uint64_t v39 = qword_267EC7CD8;
                  unint64_t v40 = unk_267EC7CE0;
                  swift_bridgeObjectRetain();
                  *(void *)&long long v76 = sub_21F2A02C4(v39, v40, &v75);
                  sub_21F4207D8();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v37 + 12) = 2080;
                  long long v76 = v71;
                  uint64_t v77 = v4;
                  uint64_t v78 = v70;
                  uint64_t v79 = v36;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v41 = sub_21F420108();
                  *(void *)&long long v76 = sub_21F2A02C4(v41, v42, &v75);
                  sub_21F4207D8();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_21F29A000, v34, v35, "%s follow on INPlayMediaIntent suppressed %s", (uint8_t *)v37, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x223C4B440](v38, -1, -1);
                  MEMORY[0x223C4B440](v37, -1, -1);
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                }
                goto LABEL_56;
              }
            }
            unint64_t v58 = sub_21F41FF08();
            os_log_type_t v59 = sub_21F420668();
            if (os_log_type_enabled(v58, v59))
            {
              uint64_t v60 = v6;
              uint64_t v61 = (uint8_t *)swift_slowAlloc();
              uint64_t v62 = swift_slowAlloc();
              *(void *)&long long v76 = v62;
              *(_DWORD *)uint64_t v61 = 136315138;
              if (qword_267EC7190 != -1) {
                swift_once();
              }
              uint64_t v63 = qword_267EC7CD8;
              unint64_t v64 = unk_267EC7CE0;
              swift_bridgeObjectRetain();
              uint64_t v75 = sub_21F2A02C4(v63, v64, (uint64_t *)&v76);
              sub_21F4207D8();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_21F29A000, v58, v59, "%s This is not a siri related event - call queueUntrackedEvent", v61, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x223C4B440](v62, -1, -1);
              MEMORY[0x223C4B440](v61, -1, -1);

              uint64_t v6 = v60;
            }
            else
            {
            }
            type metadata accessor for QueuedEvent();
            uint64_t v65 = swift_allocObject();
            *(_OWORD *)(v65 + 16) = v71;
            *(void *)(v65 + 32) = v4;
            *(void *)(v65 + 40) = v70;
            *(void *)(v65 + 48) = v6;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v65 + 56) = 0;
            *(void *)(v65 + 64) = 0;
            swift_bridgeObjectRelease();
            *(void *)&long long v76 = v65;
            sub_21F41FE38();
            swift_release();
            goto LABEL_56;
          }
          long long v76 = v71;
          uint64_t v77 = v4;
          uint64_t v78 = v70;
          uint64_t v79 = v6;
          sub_21F2B7C24(v9, v8, (uint64_t *)&v76);
          swift_release();
          goto LABEL_42;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      if (!v69)
      {
        if (v13)
        {
          char v43 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v51 = sub_21F41FF08();
            os_log_type_t v52 = sub_21F420668();
            if (os_log_type_enabled(v51, v52))
            {
              uint64_t v53 = v6;
              os_log_type_t v54 = (uint8_t *)swift_slowAlloc();
              uint64_t v55 = swift_slowAlloc();
              *(void *)&long long v76 = v55;
              *(_DWORD *)os_log_type_t v54 = 136315138;
              if (qword_267EC7190 != -1) {
                swift_once();
              }
              uint64_t v56 = qword_267EC7CD8;
              unint64_t v57 = unk_267EC7CE0;
              swift_bridgeObjectRetain();
              uint64_t v75 = sub_21F2A02C4(v56, v57, (uint64_t *)&v76);
              sub_21F4207D8();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_21F29A000, v51, v52, "%s This is not a siri related event - call queueUntrackedEvent", v54, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x223C4B440](v55, -1, -1);
              MEMORY[0x223C4B440](v54, -1, -1);

              uint64_t v6 = v53;
            }
            else
            {
            }
            type metadata accessor for QueuedEvent();
            uint64_t v66 = swift_allocObject();
            *(_OWORD *)(v66 + 16) = v71;
            *(void *)(v66 + 32) = v4;
            *(void *)(v66 + 40) = v70;
            *(void *)(v66 + 48) = v6;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v66 + 56) = 0;
            *(void *)(v66 + 64) = 0;
            swift_bridgeObjectRelease();
            *(void *)&long long v76 = v66;
            sub_21F41FE38();
            goto LABEL_56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v68 = v6;
        uint64_t v44 = sub_21F41FF08();
        os_log_type_t v45 = sub_21F420668();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          os_log_t oslogb = (os_log_t)swift_slowAlloc();
          *(void *)&long long v76 = oslogb;
          *(_DWORD *)uint64_t v46 = 136315138;
          if (qword_267EC7190 != -1) {
            swift_once();
          }
          uint64_t v47 = qword_267EC7CD8;
          unint64_t v48 = unk_267EC7CE0;
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_21F2A02C4(v47, v48, (uint64_t *)&v76);
          sub_21F4207D8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21F29A000, v44, v45, "%s This is a siri-triggered app donation - track this media id", v46, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x223C4B440](oslogb, -1, -1);
          MEMORY[0x223C4B440](v46, -1, -1);
        }

        type metadata accessor for QueuedEvent();
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v71;
        *(void *)(v49 + 32) = v4;
        *(void *)(v49 + 40) = v70;
        *(void *)(v49 + 48) = v68;
        *(void *)(v49 + 56) = v9;
        *(void *)(v49 + 64) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v75 = *v28;
        *uint64_t v28 = 0x8000000000000000;
        sub_21F328328(v49, v9, v8, isUniquelyReferenced_nonNull_native);
        *uint64_t v28 = v75;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
LABEL_56:
        swift_release();
        return;
      }
      long long v76 = v71;
      uint64_t v77 = v4;
      uint64_t v78 = v70;
      uint64_t v79 = v6;
      sub_21F2B7C24(v9, v8, (uint64_t *)&v76);
LABEL_42:
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRelease();
LABEL_5:
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_21F41FF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
  osloga = sub_21F41FF08();
  os_log_type_t v15 = sub_21F420678();
  if (os_log_type_enabled(osloga, v15))
  {
    int v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(void *)&long long v76 = v17;
    *(_DWORD *)int v16 = 136315138;
    if (qword_267EC7190 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_267EC7CD8;
    unint64_t v19 = unk_267EC7CE0;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_21F2A02C4(v18, v19, (uint64_t *)&v76);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, osloga, v15, "%s INPlayMediaIntent features missing", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v17, -1, -1);
    MEMORY[0x223C4B440](v16, -1, -1);
  }
  else
  {
  }
}

BOOL sub_21F2B7C10(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 64) == 0;
}

uint64_t sub_21F2B7C24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v9 = a3[2];
  uint64_t v10 = a3[3];
  uint64_t v11 = a3[4];
  type metadata accessor for QueuedEvent();
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v8;
  uint64_t v12[3] = v7;
  v12[4] = v9;
  v12[5] = v10;
  v12[6] = v11;
  v12[7] = a1;
  v12[8] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v4 + 16);
  *(void *)(v4 + 16) = 0x8000000000000000;
  sub_21F328328((uint64_t)v12, a1, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 16) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_21F41FE38();
  return swift_release();
}

uint64_t sub_21F2B7D60()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  unint64_t v1 = sub_21F41FE48();
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = sub_21F420B98();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t result = sub_21F2C3184(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v18;
    unint64_t v16 = v2 & 0xC000000000000001;
    unint64_t v17 = v2;
    do
    {
      if (v16)
      {
        uint64_t v7 = (void *)MEMORY[0x223C4A6D0](v5, v2);
      }
      else
      {
        uint64_t v7 = *(void **)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v9 = v7[2];
      uint64_t v8 = v7[3];
      uint64_t v11 = v7[4];
      uint64_t v10 = v7[5];
      uint64_t v12 = v7[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v14 = *(void *)(v18 + 16);
      unint64_t v13 = *(void *)(v18 + 24);
      if (v14 >= v13 >> 1) {
        sub_21F2C3184(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = (void *)(v18 + 40 * v14);
      v15[4] = v9;
      v15[5] = v8;
      v15[6] = v11;
      v15[7] = v10;
      v15[8] = v12;
      unint64_t v2 = v17;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2B7F18()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor()
{
  return self;
}

uint64_t sub_21F2B7F7C(uint64_t *a1)
{
  uint64_t v2 = sub_21F2B665C(a1);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return sub_21F2A290C(v3, v1, v2);
}

uint64_t sub_21F2B8004()
{
  uint64_t v1 = sub_21F2B7D60();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return sub_21F2A290C(v2, v0, v1);
}

uint64_t sub_21F2B808C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v26 - v7;
  uint64_t v9 = sub_21F41F198();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  os_log_t v27 = (char *)v26 - v13;
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_21F29E694(v14, (uint64_t)v6);
  swift_bridgeObjectRelease();
  unint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v16(v6, 1, v9) == 1)
  {
    v26[0] = v15;
    v26[1] = a1;
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_21F29E8D4(v17);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      uint64_t v20 = 1;
    }
    else
    {
      sub_21F41F158();
      uint64_t v20 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v20, 1, v9);
    sub_21F2B8728((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v6, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16(v8, 1, v9) == 1)
  {
    sub_21F2B8728((uint64_t)v8);
    char v21 = 0;
  }
  else
  {
    os_log_type_t v22 = v27;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v8, v9);
    uint64_t v23 = v28;
    sub_21F41F138();
    char v21 = sub_21F41F118();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v24(v23, v9);
    v24(v22, v9);
  }
  return v21 & 1;
}

uint64_t sub_21F2B83B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QueuedEvent()
{
  return self;
}

ValueMetadata *type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessorFactory()
{
  return &type metadata for INPlayMediaIntentEventAsyncStreamProcessorFactory;
}

uint64_t sub_21F2B8448(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &unk_21F446370, 1);
}

unint64_t sub_21F2B8464(uint64_t a1)
{
  unint64_t result = sub_21F2B848C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F2B848C()
{
  unint64_t result = qword_267EC7CE8;
  if (!qword_267EC7CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7CE8);
  }
  return result;
}

uint64_t sub_21F2B84E0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(void *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_21F2B8B50((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_21F2B8B50((uint64_t)v11, v8, a3, v6);
    MEMORY[0x223C4B440](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_21F2B8658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21F2F7E18(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F2FE474();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_21F2FD84C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F2B8728(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F2B8788()
{
  return sub_21F2B808C(*(void *)(v0 + 16)) & 1;
}

uint64_t sub_21F2B87BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21F2F7E18(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F2FEF0C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_21F2FD84C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F2B888C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_21F2F7E90(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21F2FF740();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_21F41F228();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_21F2B92B0(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_21F2FDF00(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

double sub_21F2B8A44@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_21F2F8424(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21F3003B4();
      uint64_t v11 = v13;
    }
    sub_21F2B929C(*(void *)(*(void *)(v11 + 48) + 16 * v8), *(void *)(*(void *)(v11 + 48) + 16 * v8 + 8));
    sub_21F2A09A8((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_21F2FE248(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_21F2B8B50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t *))
{
  uint64_t v20 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v6 << 6);
LABEL_17:
    uint64_t v15 = *(void *)(a3 + 56);
    uint64_t v16 = (void *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v17 = v16[1];
    v25[0] = *v16;
    v25[1] = v17;
    uint64_t v26 = *(void *)(v15 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    char v18 = a4(v25, &v26);
    swift_bridgeObjectRelease();
    double result = swift_release();
    if (v4) {
      return result;
    }
    if (v18)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      BOOL v12 = __OFADD__(v21++, 1);
      if (v12) {
        goto LABEL_30;
      }
    }
  }
  BOOL v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v6 >= v23) {
    return sub_21F2B8D64(v20, a2, v21, a3);
  }
  unint64_t v13 = *(void *)(v22 + 8 * v6);
  if (v13)
  {
LABEL_16:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  int64_t v14 = v6 + 1;
  if (v6 + 1 >= v23) {
    return sub_21F2B8D64(v20, a2, v21, a3);
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 2;
  if (v6 + 2 >= v23) {
    return sub_21F2B8D64(v20, a2, v21, a3);
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13) {
    goto LABEL_15;
  }
  int64_t v14 = v6 + 3;
  if (v6 + 3 >= v23) {
    return sub_21F2B8D64(v20, a2, v21, a3);
  }
  unint64_t v13 = *(void *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_15:
    int64_t v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v23) {
      return sub_21F2B8D64(v20, a2, v21, a3);
    }
    unint64_t v13 = *(void *)(v22 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21F2B8D64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D00);
  uint64_t result = sub_21F420BD8();
  uint64_t v9 = result;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    char v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    unint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *unint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21F2B9000(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D18);
  uint64_t result = sub_21F420BD8();
  uint64_t v9 = result;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    char v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    unint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *unint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21F2B929C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2B92B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_21F2B9314()
{
  return &off_26B580AE8;
}

uint64_t SuggestionStoreUpdate.source.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SuggestionStoreUpdate.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SuggestionStoreUpdate() + 20);
  uint64_t v4 = sub_21F41F198();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SuggestionStoreUpdate()
{
  uint64_t result = qword_267EC7D20;
  if (!qword_267EC7D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SuggestionStoreUpdate.init(source:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for SuggestionStoreUpdate() + 20);
  uint64_t v6 = sub_21F41F198();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for SuggestionStoreUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_21F41F198();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for SuggestionStoreUpdate(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_21F41F198();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for SuggestionStoreUpdate(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_21F41F198();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for SuggestionStoreUpdate(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21F41F198();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for SuggestionStoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_21F41F198();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for SuggestionStoreUpdate(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_21F41F198();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionStoreUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2B9844);
}

uint64_t sub_21F2B9844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F41F198();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SuggestionStoreUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2B9908);
}

uint64_t sub_21F2B9908(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_21F41F198();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F2B99B0()
{
  uint64_t result = sub_21F41F198();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21F2B9A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t sub_21F2B9A5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_21F2B9A70(uint64_t a1, uint64_t a2)
{
  return sub_21F2B9ABC(a1, a2, (uint64_t)sub_21F2BCD04, (uint64_t (*)(void))sub_21F34ECD8);
}

uint64_t sub_21F2B9ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for EntityPromptClassification();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v46);
  uint64_t v45 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v43 = (uint64_t)&v39 - v15;
  uint64_t v60 = v4;
  uint64_t v16 = *(void *)(a2 + 16);
  if (v16)
  {
    uint64_t v39 = a1;
    uint64_t v40 = a3;
    uint64_t v41 = a4;
    uint64_t v17 = a2;
    uint64_t v18 = a2 + 32;
    uint64_t v42 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    uint64_t v20 = v18;
    uint64_t v21 = v16;
    do
    {
      sub_21F29F920(v20, (uint64_t)v59);
      sub_21F29F920((uint64_t)v59, (uint64_t)&v47);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8A0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v58 = 0;
        long long v56 = 0u;
        long long v57 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        long long v53 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v59);
      if (*((void *)&v54 + 1))
      {
        long long v49 = v55;
        long long v50 = v56;
        long long v51 = v57;
        uint64_t v52 = v58;
        long long v47 = v53;
        long long v48 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_21F2A6F70(0, v19[2] + 1, 1, v19);
        }
        unint64_t v23 = v19[2];
        unint64_t v22 = v19[3];
        if (v23 >= v22 >> 1) {
          uint64_t v19 = sub_21F2A6F70((void *)(v22 > 1), v23 + 1, 1, v19);
        }
        v19[2] = v23 + 1;
        unint64_t v24 = &v19[11 * v23];
        long long v25 = v48;
        *((_OWORD *)v24 + 2) = v47;
        *((_OWORD *)v24 + 3) = v25;
        long long v26 = v49;
        long long v27 = v50;
        long long v28 = v51;
        v24[14] = v52;
        *((_OWORD *)v24 + 5) = v27;
        *((_OWORD *)v24 + 6) = v28;
        *((_OWORD *)v24 + 4) = v26;
      }
      else
      {
        sub_21F29FA48((uint64_t)&v53, &qword_267EC7D30);
      }
      v20 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v44 + 56);
    unint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    swift_bridgeObjectRetain();
    unint64_t v31 = MEMORY[0x263F8EE78];
    do
    {
      sub_21F29F920(v18, (uint64_t)&v53);
      sub_21F29F920((uint64_t)&v53, (uint64_t)&v47);
      uint64_t v32 = v46;
      int v33 = swift_dynamicCast();
      (*v29)(v11, v33 ^ 1u, 1, v32);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v53);
      if ((*v30)(v11, 1, v32) == 1)
      {
        sub_21F29FA48((uint64_t)v11, &qword_26AD3AB78);
      }
      else
      {
        uint64_t v34 = v43;
        sub_21F2BCAC8((uint64_t)v11, v43);
        sub_21F2BCAC8(v34, v45);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = sub_21F2A6F3C(0, *(void *)(v31 + 16) + 1, 1, v31);
        }
        unint64_t v36 = *(void *)(v31 + 16);
        unint64_t v35 = *(void *)(v31 + 24);
        if (v36 >= v35 >> 1) {
          unint64_t v31 = sub_21F2A6F3C(v35 > 1, v36 + 1, 1, v31);
        }
        *(void *)(v31 + 16) = v36 + 1;
        sub_21F2BCAC8(v45, v31+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v36);
      }
      v18 += 40;
      --v16;
    }
    while (v16);
    uint64_t v14 = swift_bridgeObjectRelease();
    a4 = v41;
    a3 = v40;
    a1 = v39;
  }
  else
  {
    unint64_t v31 = MEMORY[0x263F8EE78];
  }
  MEMORY[0x270FA5388](v14);
  *(&v39 - 4) = (uint64_t)&v60;
  *(&v39 - 3) = a1;
  *(&v39 - 2) = v31;
  uint64_t v37 = a4(a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_21F2B9FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X8>)
{
  uint64_t v9 = sub_21F41F228();
  uint64_t v89 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EntityPromptClassification();
  uint64_t v95 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v96 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v98 = (uint64_t *)((char *)&v76 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v76 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v76 - v19;
  if ((*(void *)(a2 + 56) != 0xD000000000000011 || *(void *)(a2 + 64) != 0x800000021F431F10)
    && (sub_21F420DF8() & 1) == 0)
  {
    uint64_t v30 = type metadata accessor for PhoneCallGroundTruth();
    unint64_t v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
    return v31(a4, 1, 1, v30);
  }
  uint64_t v87 = v9;
  uint64_t v90 = v4;
  uint64_t v91 = a2;
  sub_21F29F920(a2, (uint64_t)&v105);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7670);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D38);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v104 = 0;
    long long v102 = 0u;
    long long v103 = 0u;
    sub_21F29FA48((uint64_t)&v102, &qword_267EC7D40);
LABEL_15:
    uint64_t v33 = (uint64_t)v90;
    if (qword_26AD38998 != -1) {
LABEL_76:
    }
      swift_once();
    uint64_t v34 = sub_21F41FF28();
    __swift_project_value_buffer(v34, (uint64_t)qword_26AD3C910);
    sub_21F2A1884(v91, (uint64_t)&v105);
    swift_retain_n();
    unint64_t v35 = sub_21F41FF08();
    os_log_type_t v36 = sub_21F420678();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v86 = a4;
      uint64_t v39 = v38;
      v108[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      *(void *)&long long v102 = 91;
      *((void *)&v102 + 1) = 0xE100000000000000;
      *(void *)&long long v99 = *(void *)v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7688);
      sub_21F420108();
      sub_21F4201A8();
      swift_bridgeObjectRelease();
      sub_21F4201A8();
      *(void *)&long long v102 = sub_21F2A02C4(v102, *((unint64_t *)&v102 + 1), v108);
      sub_21F4207D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      sub_21F2A1884((uint64_t)&v105, (uint64_t)&v102);
      uint64_t v40 = sub_21F420108();
      *(void *)&long long v102 = sub_21F2A02C4(v40, v41, v108);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      sub_21F2A18E0((uint64_t)&v105);
      _os_log_impl(&dword_21F29A000, v35, v36, "%s Classification that supports followup is missing a USO person associated with the query=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      uint64_t v42 = v39;
      a4 = v86;
      MEMORY[0x223C4B440](v42, -1, -1);
      MEMORY[0x223C4B440](v37, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_21F2A18E0((uint64_t)&v105);
    }

    uint64_t v43 = type metadata accessor for PhoneCallGroundTruth();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(a4, 1, 1, v43);
  }
  uint64_t v21 = a1;
  sub_21F2A09A8(&v102, (uint64_t)v108);
  uint64_t v22 = v109;
  uint64_t v23 = v110;
  __swift_project_boxed_opaque_existential_1(v108, v109);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
    goto LABEL_15;
  }
  uint64_t v84 = v24;
  uint64_t v25 = v91;
  sub_21F2BBAF0(*(void *)(v91 + 40), *(void *)(v91 + 48), v21, &v105);
  if (!*((void *)&v105 + 1))
  {
    if (qword_26AD38998 != -1) {
      goto LABEL_78;
    }
    goto LABEL_21;
  }
  uint64_t v80 = *((void *)&v105 + 1);
  uint64_t v79 = v106;
  uint64_t v77 = v105;
  uint64_t v78 = *((void *)&v106 + 1);
  sub_21F29F920(v25, (uint64_t)&v102);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D48);
  if (swift_dynamicCast())
  {
    uint64_t v26 = *((void *)&v106 + 1);
    uint64_t v27 = v107;
    __swift_project_boxed_opaque_existential_1(&v105, *((uint64_t *)&v106 + 1));
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
    if (v29)
    {
      sub_21F2BBAF0(v28, v29, v21, &v99);
      swift_bridgeObjectRelease();
      uint64_t v76 = v99;
      uint64_t v82 = v100;
      uint64_t v83 = *((void *)&v99 + 1);
      uint64_t v81 = *((void *)&v100 + 1);
    }
    else
    {
      uint64_t v81 = 0;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      uint64_t v76 = 0;
      long long v99 = 0u;
      long long v100 = 0u;
    }
    uint64_t v55 = v91;
    uint64_t v54 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v105);
  }
  else
  {
    uint64_t v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
    uint64_t v54 = sub_21F29FA48((uint64_t)&v105, &qword_267EC7D50);
    uint64_t v76 = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v81 = 0;
    uint64_t v55 = v91;
  }
  MEMORY[0x270FA5388](v54);
  *(&v76 - 2) = v55;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_21F2C8800((uint64_t (*)(char *))sub_21F2BCD70, (uint64_t)(&v76 - 4), a3);
  uint64_t v33 = MEMORY[0x263F8EE78];
  *(void *)&long long v105 = MEMORY[0x263F8EE78];
  uint64_t v94 = *(void *)(v57 + 16);
  if (!v94)
  {
    uint64_t v71 = a4;
LABEL_73:
    swift_bridgeObjectRelease();
    uint64_t v72 = (uint64_t)v88;
    sub_21F41F218();
    uint64_t v73 = v76;
    uint64_t v74 = v77;
    *(void *)&long long v105 = v76;
    *((void *)&v105 + 1) = v83;
    uint64_t v75 = v80;
    *(void *)&long long v106 = v82;
    *((void *)&v106 + 1) = v81;
    *(void *)&long long v102 = v77;
    *((void *)&v102 + 1) = v80;
    *(void *)&long long v103 = v79;
    *((void *)&v103 + 1) = v78;
    sub_21F2A0F94(v72, v91, v84, (uint64_t *)&v105, (uint64_t *)&v102, v33, v71);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v72, v87);
    sub_21F2A1934(v74, v75);
    sub_21F2A1934(v73, v83);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
  }
  uint64_t v86 = a4;
  a4 = 0;
  uint64_t v58 = MEMORY[0x263F8EE78];
  uint64_t v92 = v57;
  uint64_t v93 = v18;
  while (1)
  {
    if (a4 >= *(void *)(v57 + 16))
    {
      __break(1u);
      goto LABEL_76;
    }
    unint64_t v59 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    uint64_t v60 = *(void *)(v95 + 72);
    sub_21F2BCB4C(v57 + v59 + v60 * a4, (uint64_t)v20);
    BOOL v61 = *((void *)v20 + 2) == 0x73746361746E6F63 && *((void *)v20 + 3) == 0xE800000000000000;
    uint64_t v97 = v60;
    if (v61)
    {
      sub_21F2BCB4C((uint64_t)v20, (uint64_t)v18);
LABEL_43:
      sub_21F2BCBB0((uint64_t)v18);
      sub_21F2BCB4C((uint64_t)v20, (uint64_t)v98);
      goto LABEL_44;
    }
    uint64_t v33 = sub_21F420DF8();
    sub_21F2BCB4C((uint64_t)v20, (uint64_t)v18);
    if ((v33 & 1) != 0 || *((void *)v18 + 2) == 0x6E65697069636572 && *((void *)v18 + 3) == 0xE900000000000074) {
      goto LABEL_43;
    }
    uint64_t v33 = sub_21F420DF8();
    sub_21F2BCBB0((uint64_t)v18);
    sub_21F2BCB4C((uint64_t)v20, (uint64_t)v98);
    if ((v33 & 1) == 0) {
      goto LABEL_30;
    }
LABEL_44:
    if (qword_267EC72A0 != -1) {
      swift_once();
    }
    uint64_t v62 = qword_267EDE188;
    uint64_t v63 = *(void *)(qword_267EDE188 + 16);
    if (v63)
    {
      uint64_t v64 = *v98;
      uint64_t v33 = v98[1];
      BOOL v65 = *(void *)(qword_267EDE188 + 32) == *v98 && *(void *)(qword_267EDE188 + 40) == v33;
      if (v65 || (sub_21F420DF8() & 1) != 0)
      {
LABEL_52:
        sub_21F2BCBB0((uint64_t)v98);
        sub_21F2BCAC8((uint64_t)v20, v96);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21F2C3148(0, *(void *)(v58 + 16) + 1, 1);
        }
        uint64_t v58 = v105;
        unint64_t v67 = *(void *)(v105 + 16);
        unint64_t v66 = *(void *)(v105 + 24);
        uint64_t v33 = v67 + 1;
        uint64_t v18 = v93;
        if (v67 >= v66 >> 1)
        {
          sub_21F2C3148(v66 > 1, v67 + 1, 1);
          uint64_t v58 = v105;
        }
        *(void *)(v58 + 16) = v33;
        sub_21F2BCAC8(v96, v58 + v59 + v67 * v97);
        goto LABEL_31;
      }
      if (v63 != 1)
      {
        if (*(void *)(v62 + 48) == v64 && *(void *)(v62 + 56) == v33 || (sub_21F420DF8() & 1) != 0) {
          goto LABEL_52;
        }
        if (v63 != 2) {
          break;
        }
      }
    }
LABEL_30:
    sub_21F2BCBB0((uint64_t)v98);
    sub_21F2BCBB0((uint64_t)v20);
    uint64_t v18 = v93;
LABEL_31:
    ++a4;
    uint64_t v57 = v92;
    if (a4 == v94)
    {
      uint64_t v33 = v105;
      uint64_t v71 = v86;
      goto LABEL_73;
    }
  }
  uint64_t v68 = (void *)(v62 + 72);
  uint64_t v69 = 2;
  while (!__OFADD__(v69, 1))
  {
    if (*(v68 - 1) == v64 && *v68 == v33) {
      goto LABEL_52;
    }
    uint64_t v85 = v69 + 1;
    if (sub_21F420DF8()) {
      goto LABEL_52;
    }
    v68 += 2;
    ++v69;
    if (v85 == v63) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_78:
  swift_once();
LABEL_21:
  uint64_t v44 = sub_21F41FF28();
  __swift_project_value_buffer(v44, (uint64_t)qword_26AD3C910);
  sub_21F2A1884(v91, (uint64_t)&v105);
  uint64_t v45 = v90;
  swift_retain_n();
  uint64_t v46 = sub_21F41FF08();
  os_log_type_t v47 = sub_21F420678();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v86 = a4;
    uint64_t v50 = v49;
    *(void *)&long long v99 = v49;
    *(_DWORD *)uint64_t v48 = 136315394;
    *(void *)&long long v102 = 91;
    *((void *)&v102 + 1) = 0xE100000000000000;
    uint64_t v101 = *v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7688);
    sub_21F420108();
    sub_21F4201A8();
    swift_bridgeObjectRelease();
    sub_21F4201A8();
    *(void *)&long long v102 = sub_21F2A02C4(v102, *((unint64_t *)&v102 + 1), (uint64_t *)&v99);
    sub_21F4207D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    sub_21F2A1884((uint64_t)&v105, (uint64_t)&v102);
    uint64_t v51 = sub_21F420108();
    *(void *)&long long v102 = sub_21F2A02C4(v51, v52, (uint64_t *)&v99);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2A18E0((uint64_t)&v105);
    _os_log_impl(&dword_21F29A000, v46, v47, "%s Failed to extract the contact reference from followup event in classification=%s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    uint64_t v53 = v50;
    a4 = v86;
    MEMORY[0x223C4B440](v53, -1, -1);
    MEMORY[0x223C4B440](v48, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_21F2A18E0((uint64_t)&v105);
  }

  swift_release();
  uint64_t v56 = type metadata accessor for PhoneCallGroundTruth();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(a4, 1, 1, v56);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
}

uint64_t sub_21F2BAD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X8>)
{
  uint64_t v9 = sub_21F41F228();
  uint64_t v94 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EntityPromptClassification();
  uint64_t v100 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v101 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  long long v102 = (uint64_t *)((char *)&v80 - v15);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v80 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v80 - v19;
  if ((*(void *)(a2 + 56) != 0xD000000000000013 || *(void *)(a2 + 64) != 0x800000021F431F30)
    && (sub_21F420DF8() & 1) == 0)
  {
    uint64_t v33 = type metadata accessor for MessagesGroundTruth();
    uint64_t v34 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    return v34(a4, 1, 1, v33);
  }
  uint64_t v92 = v9;
  uint64_t v95 = v4;
  uint64_t v96 = a2;
  sub_21F29F920(a2, (uint64_t)&v109);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7670);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D38);
  if (swift_dynamicCast())
  {
    uint64_t v98 = a3;
    long long v99 = v18;
    uint64_t v21 = a1;
    sub_21F2A09A8(&v106, (uint64_t)v112);
    uint64_t v22 = v113;
    uint64_t v23 = v114;
    __swift_project_boxed_opaque_existential_1(v112, v113);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    if (v24)
    {
      uint64_t v90 = v24;
      uint64_t v25 = v96;
      sub_21F2BC098(*(void *)(v96 + 40), *(void *)(v96 + 48), v21, &v109);
      uint64_t v26 = *((void *)&v109 + 1);
      if (*((void *)&v109 + 1))
      {
        uint64_t v85 = v110;
        uint64_t v83 = v109;
        uint64_t v84 = *((void *)&v110 + 1);
        sub_21F29F920(v25, (uint64_t)&v106);
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D48);
        char v27 = swift_dynamicCast();
        uint64_t v86 = v26;
        if (v27)
        {
          uint64_t v28 = *((void *)&v110 + 1);
          uint64_t v29 = v111;
          __swift_project_boxed_opaque_existential_1(&v109, *((uint64_t *)&v110 + 1));
          uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
          uint64_t v32 = (uint64_t)v99;
          if (v31)
          {
            sub_21F2BC098(v30, v31, v21, &v103);
            swift_bridgeObjectRelease();
            uint64_t v82 = v103;
            uint64_t v88 = v104;
            uint64_t v89 = *((void *)&v103 + 1);
            uint64_t v87 = *((void *)&v104 + 1);
          }
          else
          {
            uint64_t v87 = 0;
            uint64_t v88 = 0;
            uint64_t v89 = 0;
            uint64_t v82 = 0;
            long long v103 = 0u;
            long long v104 = 0u;
          }
          uint64_t v58 = v96;
          uint64_t v59 = v98;
          uint64_t v57 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v109);
        }
        else
        {
          uint64_t v111 = 0;
          long long v109 = 0u;
          long long v110 = 0u;
          uint64_t v57 = sub_21F29FA48((uint64_t)&v109, &qword_267EC7D50);
          uint64_t v82 = 0;
          uint64_t v88 = 0;
          uint64_t v89 = 0;
          uint64_t v87 = 0;
          uint64_t v58 = v96;
          uint64_t v59 = v98;
          uint64_t v32 = (uint64_t)v99;
        }
        MEMORY[0x270FA5388](v57);
        *(&v80 - 2) = v58;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_21F2C8800((uint64_t (*)(char *))sub_21F2BCB2C, (uint64_t)(&v80 - 4), v59);
        uint64_t v36 = MEMORY[0x263F8EE78];
        *(void *)&long long v109 = MEMORY[0x263F8EE78];
        uint64_t v98 = *(void *)(v61 + 16);
        if (v98)
        {
          uint64_t v91 = a4;
          a4 = 0;
          uint64_t v62 = MEMORY[0x263F8EE78];
          uint64_t v97 = v61;
          while (1)
          {
            if (a4 >= *(void *)(v61 + 16))
            {
              __break(1u);
              goto LABEL_81;
            }
            unint64_t v63 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
            uint64_t v64 = *(void *)(v100 + 72);
            sub_21F2BCB4C(v61 + v63 + v64 * a4, (uint64_t)v20);
            if (*((void *)v20 + 2) == 0x73746361746E6F63 && *((void *)v20 + 3) == 0xE800000000000000)
            {
              sub_21F2BCB4C((uint64_t)v20, v32);
            }
            else
            {
              uint64_t v36 = sub_21F420DF8();
              sub_21F2BCB4C((uint64_t)v20, v32);
              if ((v36 & 1) == 0
                && (*(void *)(v32 + 16) != 0x6E65697069636572 || *(void *)(v32 + 24) != 0xE900000000000074))
              {
                uint64_t v36 = sub_21F420DF8();
                sub_21F2BCBB0(v32);
                sub_21F2BCB4C((uint64_t)v20, (uint64_t)v102);
                if ((v36 & 1) == 0) {
                  goto LABEL_31;
                }
                goto LABEL_45;
              }
            }
            sub_21F2BCBB0(v32);
            sub_21F2BCB4C((uint64_t)v20, (uint64_t)v102);
LABEL_45:
            if (qword_267EC72A0 != -1) {
              swift_once();
            }
            unint64_t v66 = (void *)qword_267EDE188;
            uint64_t v67 = *(void *)(qword_267EDE188 + 16);
            if (v67)
            {
              uint64_t v68 = *v102;
              uint64_t v36 = v102[1];
              BOOL v69 = *(void *)(qword_267EDE188 + 32) == *v102 && *(void *)(qword_267EDE188 + 40) == v36;
              if (v69 || (sub_21F420DF8() & 1) != 0)
              {
LABEL_53:
                sub_21F2BCBB0((uint64_t)v102);
                sub_21F2BCAC8((uint64_t)v20, v101);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_21F2C3148(0, *(void *)(v62 + 16) + 1, 1);
                }
                uint64_t v62 = v109;
                unint64_t v71 = *(void *)(v109 + 16);
                unint64_t v70 = *(void *)(v109 + 24);
                uint64_t v36 = v71 + 1;
                uint64_t v32 = (uint64_t)v99;
                if (v71 >= v70 >> 1)
                {
                  sub_21F2C3148(v70 > 1, v71 + 1, 1);
                  uint64_t v62 = v109;
                }
                *(void *)(v62 + 16) = v36;
                sub_21F2BCAC8(v101, v62 + v63 + v71 * v64);
                goto LABEL_32;
              }
              if (v67 != 1)
              {
                if (v66[6] == v68 && v66[7] == v36 || (sub_21F420DF8() & 1) != 0) {
                  goto LABEL_53;
                }
                if (v67 != 2)
                {
                  if (v66[8] == v68 && v66[9] == v36) {
                    goto LABEL_53;
                  }
                  uint64_t result = sub_21F420DF8();
                  if (result) {
                    goto LABEL_53;
                  }
                  if (v67 != 3)
                  {
                    uint64_t v72 = v66 + 11;
                    uint64_t v73 = 3;
                    while (!__OFADD__(v73, 1))
                    {
                      uint64_t v80 = v73 + 1;
                      uint64_t v81 = v73;
                      if (*(v72 - 1) == v68 && *v72 == v36) {
                        goto LABEL_53;
                      }
                      uint64_t result = sub_21F420DF8();
                      if (result) {
                        goto LABEL_53;
                      }
                      v72 += 2;
                      uint64_t v73 = v81 + 1;
                      if (v80 == v67) {
                        goto LABEL_31;
                      }
                    }
                    __break(1u);
                    return result;
                  }
                }
              }
            }
LABEL_31:
            sub_21F2BCBB0((uint64_t)v102);
            sub_21F2BCBB0((uint64_t)v20);
            uint64_t v32 = (uint64_t)v99;
LABEL_32:
            ++a4;
            uint64_t v61 = v97;
            if (a4 == v98)
            {
              uint64_t v36 = v109;
              uint64_t v75 = v91;
              goto LABEL_78;
            }
          }
        }
        uint64_t v75 = a4;
LABEL_78:
        swift_bridgeObjectRelease();
        uint64_t v76 = (uint64_t)v93;
        sub_21F41F218();
        uint64_t v77 = v82;
        uint64_t v78 = v83;
        *(void *)&long long v109 = v82;
        *((void *)&v109 + 1) = v89;
        uint64_t v79 = v86;
        *(void *)&long long v110 = v88;
        *((void *)&v110 + 1) = v87;
        *(void *)&long long v106 = v83;
        *((void *)&v106 + 1) = v86;
        *(void *)&long long v107 = v85;
        *((void *)&v107 + 1) = v84;
        sub_21F35251C(v76, v96, v90, (uint64_t *)&v109, (uint64_t *)&v106, v36, v75);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v76, v92);
        sub_21F2A1934(v78, v79);
        sub_21F2A1934(v77, v89);
      }
      else
      {
        if (qword_26AD38998 != -1) {
          swift_once();
        }
        uint64_t v47 = sub_21F41FF28();
        __swift_project_value_buffer(v47, (uint64_t)qword_26AD3C910);
        sub_21F2A1884(v96, (uint64_t)&v109);
        uint64_t v48 = v95;
        swift_retain_n();
        uint64_t v49 = sub_21F41FF08();
        os_log_type_t v50 = sub_21F420678();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          uint64_t v91 = a4;
          uint64_t v53 = v52;
          *(void *)&long long v103 = v52;
          *(_DWORD *)uint64_t v51 = 136315394;
          *(void *)&long long v106 = 91;
          *((void *)&v106 + 1) = 0xE100000000000000;
          uint64_t v105 = *v48;
          __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7680);
          sub_21F420108();
          sub_21F4201A8();
          swift_bridgeObjectRelease();
          sub_21F4201A8();
          *(void *)&long long v106 = sub_21F2A02C4(v106, *((unint64_t *)&v106 + 1), (uint64_t *)&v103);
          sub_21F4207D8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v51 + 12) = 2080;
          sub_21F2A1884((uint64_t)&v109, (uint64_t)&v106);
          uint64_t v54 = sub_21F420108();
          *(void *)&long long v106 = sub_21F2A02C4(v54, v55, (uint64_t *)&v103);
          sub_21F4207D8();
          swift_bridgeObjectRelease();
          sub_21F2A18E0((uint64_t)&v109);
          _os_log_impl(&dword_21F29A000, v49, v50, "%s Failed to extract the contact reference from followup event in classification=%s", (uint8_t *)v51, 0x16u);
          swift_arrayDestroy();
          uint64_t v56 = v53;
          a4 = v91;
          MEMORY[0x223C4B440](v56, -1, -1);
          MEMORY[0x223C4B440](v51, -1, -1);

          swift_release();
        }
        else
        {
          swift_release_n();
          swift_release();
          sub_21F2A18E0((uint64_t)&v109);
        }
        uint64_t v60 = type metadata accessor for MessagesGroundTruth();
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(a4, 1, 1, v60);
      }
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v112);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v112);
  }
  else
  {
    uint64_t v108 = 0;
    long long v106 = 0u;
    long long v107 = 0u;
    sub_21F29FA48((uint64_t)&v106, &qword_267EC7D40);
  }
  uint64_t v36 = (uint64_t)v95;
  if (qword_26AD38998 != -1) {
LABEL_81:
  }
    swift_once();
  uint64_t v37 = sub_21F41FF28();
  __swift_project_value_buffer(v37, (uint64_t)qword_26AD3C910);
  sub_21F2A1884(v96, (uint64_t)&v109);
  swift_retain_n();
  uint64_t v38 = sub_21F41FF08();
  os_log_type_t v39 = sub_21F420678();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v91 = a4;
    uint64_t v42 = v41;
    v112[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315394;
    *(void *)&long long v106 = 91;
    *((void *)&v106 + 1) = 0xE100000000000000;
    *(void *)&long long v103 = *(void *)v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7680);
    sub_21F420108();
    sub_21F4201A8();
    swift_bridgeObjectRelease();
    sub_21F4201A8();
    *(void *)&long long v106 = sub_21F2A02C4(v106, *((unint64_t *)&v106 + 1), v112);
    sub_21F4207D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_21F2A1884((uint64_t)&v109, (uint64_t)&v106);
    uint64_t v43 = sub_21F420108();
    *(void *)&long long v106 = sub_21F2A02C4(v43, v44, v112);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2A18E0((uint64_t)&v109);
    _os_log_impl(&dword_21F29A000, v38, v39, "%s Classification that supports followup is missing a USO person associated with the query=%s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    uint64_t v45 = v42;
    a4 = v91;
    MEMORY[0x223C4B440](v45, -1, -1);
    MEMORY[0x223C4B440](v40, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_21F2A18E0((uint64_t)&v109);
  }

  uint64_t v46 = type metadata accessor for MessagesGroundTruth();
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(a4, 1, 1, v46);
}

double sub_21F2BBAF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  Array<A>.findEvent(eventId:)(a1, a2, a3, &v27);
  uint64_t v5 = v28;
  if (v28)
  {
    uint64_t v6 = v27;
    uint64_t v8 = v29;
    uint64_t v7 = v30;
    uint64_t v9 = v31;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F29DFE0(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = *(void *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v12 == 1)
      {
        uint64_t v27 = v6;
        uint64_t v28 = v5;
        uint64_t v29 = v8;
        uint64_t v30 = v7;
        uint64_t v31 = v9;
        extractContactReference(event:)((uint64_t)a4);
        sub_21F2BCCB4(v6, v5);
        return result;
      }
      sub_21F2BCCB4(v6, v5);
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_21F41FF28();
      __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
      swift_retain_n();
      uint64_t v21 = sub_21F41FF08();
      os_log_type_t v22 = sub_21F420678();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315394;
        uint64_t v26 = v24;
        uint64_t v27 = 91;
        uint64_t v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7688);
        sub_21F420108();
        sub_21F4201A8();
        swift_bridgeObjectRelease();
        sub_21F4201A8();
        uint64_t v27 = sub_21F2A02C4(v27, v28, &v26);
        sub_21F4207D8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2048;
        uint64_t v27 = v12;
        sub_21F4207D8();
        _os_log_impl(&dword_21F29A000, v21, v22, "%s Event does not have a single contact (has %ld)", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v24, -1, -1);
        MEMORY[0x223C4B440](v23, -1, -1);
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_21F41FF28();
      __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
      swift_retain_n();
      sub_21F2BCC64(v6, v5);
      uint64_t v15 = sub_21F41FF08();
      os_log_type_t v16 = sub_21F420678();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v26 = v25;
        uint64_t v27 = 91;
        uint64_t v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7688);
        sub_21F420108();
        sub_21F4201A8();
        swift_bridgeObjectRelease();
        sub_21F4201A8();
        uint64_t v27 = sub_21F2A02C4(v27, v28, &v26);
        sub_21F4207D8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        uint64_t v27 = v6;
        uint64_t v28 = v5;
        uint64_t v29 = v8;
        uint64_t v30 = v7;
        uint64_t v31 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_21F420108();
        uint64_t v27 = sub_21F2A02C4(v18, v19, &v26);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        sub_21F2BCCB4(v6, v5);
        sub_21F2BCCB4(v6, v5);
        _os_log_impl(&dword_21F29A000, v15, v16, "%s Failed to get contact count from event=%s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v25, -1, -1);
        MEMORY[0x223C4B440](v17, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_21F2BCCB4(v6, v5);
        sub_21F2BCCB4(v6, v5);
      }
    }
  }
  double result = 0.0;
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

double sub_21F2BC098@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  Array<A>.findEvent(eventId:)(a1, a2, a3, &v27);
  uint64_t v5 = v28;
  if (v28)
  {
    uint64_t v6 = v27;
    uint64_t v8 = v29;
    uint64_t v7 = v30;
    uint64_t v9 = v31;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F29DFE0(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = *(void *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v12 == 1)
      {
        uint64_t v27 = v6;
        uint64_t v28 = v5;
        uint64_t v29 = v8;
        uint64_t v30 = v7;
        uint64_t v31 = v9;
        extractContactReference(event:)((uint64_t)a4);
        sub_21F2BCCB4(v6, v5);
        return result;
      }
      sub_21F2BCCB4(v6, v5);
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_21F41FF28();
      __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
      swift_retain_n();
      uint64_t v21 = sub_21F41FF08();
      os_log_type_t v22 = sub_21F420678();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315394;
        uint64_t v26 = v24;
        uint64_t v27 = 91;
        uint64_t v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7680);
        sub_21F420108();
        sub_21F4201A8();
        swift_bridgeObjectRelease();
        sub_21F4201A8();
        uint64_t v27 = sub_21F2A02C4(v27, v28, &v26);
        sub_21F4207D8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2048;
        uint64_t v27 = v12;
        sub_21F4207D8();
        _os_log_impl(&dword_21F29A000, v21, v22, "%s Event does not have a single contact (has %ld)", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v24, -1, -1);
        MEMORY[0x223C4B440](v23, -1, -1);
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_21F41FF28();
      __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
      swift_retain_n();
      sub_21F2BCC64(v6, v5);
      uint64_t v15 = sub_21F41FF08();
      os_log_type_t v16 = sub_21F420678();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v26 = v25;
        uint64_t v27 = 91;
        uint64_t v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7680);
        sub_21F420108();
        sub_21F4201A8();
        swift_bridgeObjectRelease();
        sub_21F4201A8();
        uint64_t v27 = sub_21F2A02C4(v27, v28, &v26);
        sub_21F4207D8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        uint64_t v27 = v6;
        uint64_t v28 = v5;
        uint64_t v29 = v8;
        uint64_t v30 = v7;
        uint64_t v31 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_21F420108();
        uint64_t v27 = sub_21F2A02C4(v18, v19, &v26);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        sub_21F2BCCB4(v6, v5);
        sub_21F2BCCB4(v6, v5);
        _os_log_impl(&dword_21F29A000, v15, v16, "%s Failed to get contact count from event=%s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v25, -1, -1);
        MEMORY[0x223C4B440](v17, -1, -1);
      }
      else
      {
        swift_release_n();
        sub_21F2BCCB4(v6, v5);
        sub_21F2BCCB4(v6, v5);
      }
    }
  }
  double result = 0.0;
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

uint64_t sub_21F2BC640(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38748);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for EntityPromptClassification();
  os_log_type_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v16(v14, a1 + *(int *)(v15 + 44), v3);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v18 = 1;
  v17(v14, 0, 1, v3);
  uint64_t v19 = *(void *)(v33 + 72);
  if (*(void *)(v19 + 16))
  {
    v16(v12, v19 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    uint64_t v18 = 0;
  }
  v17(v12, v18, 1, v3);
  uint64_t v20 = v36;
  uint64_t v21 = v36 + *(int *)(v34 + 48);
  sub_21F2B13D0((uint64_t)v14, v36);
  sub_21F2B13D0((uint64_t)v12, v21);
  os_log_type_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  int v23 = v22(v20, 1, v3);
  uint64_t v24 = v35;
  if (v23 == 1)
  {
    sub_21F29FA48((uint64_t)v12, &qword_26AD38738);
    sub_21F29FA48((uint64_t)v14, &qword_26AD38738);
    int v25 = v22(v21, 1, v3);
    if (v25 == 1) {
      uint64_t v26 = &qword_26AD38738;
    }
    else {
      uint64_t v26 = &qword_26AD38748;
    }
    if (v25 == 1) {
      char v27 = -1;
    }
    else {
      char v27 = 0;
    }
  }
  else
  {
    sub_21F2B13D0(v20, v35);
    if (v22(v21, 1, v3) == 1)
    {
      sub_21F29FA48((uint64_t)v12, &qword_26AD38738);
      sub_21F29FA48((uint64_t)v14, &qword_26AD38738);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
      char v27 = 0;
      uint64_t v26 = &qword_26AD38748;
    }
    else
    {
      uint64_t v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v32, v21, v3);
      sub_21F2BCC0C();
      char v27 = sub_21F420098();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v28, v3);
      uint64_t v26 = &qword_26AD38738;
      sub_21F29FA48((uint64_t)v12, &qword_26AD38738);
      sub_21F29FA48((uint64_t)v14, &qword_26AD38738);
      v29((char *)v24, v3);
    }
  }
  sub_21F29FA48(v20, v26);
  return v27 & 1;
}

uint64_t sub_21F2BCA50(uint64_t a1, uint64_t a2)
{
  return sub_21F2B9ABC(a1, a2, (uint64_t)sub_21F2BCA9C, (uint64_t (*)(void))sub_21F34FC34);
}

uint64_t sub_21F2BCA9C(uint64_t a1)
{
  return sub_21F2BCD30(a1, (uint64_t (*)(void, uint64_t, void))sub_21F2BAD40);
}

uint64_t sub_21F2BCAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2BCB2C(uint64_t a1)
{
  return sub_21F2BC640(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_21F2BCB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2BCBB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21F2BCC0C()
{
  unint64_t result = qword_26AD3A840;
  if (!qword_26AD3A840)
  {
    sub_21F41F228();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD3A840);
  }
  return result;
}

uint64_t sub_21F2BCC64(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F2BCCB4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2BCD04(uint64_t a1)
{
  return sub_21F2BCD30(a1, (uint64_t (*)(void, uint64_t, void))sub_21F2B9FD4);
}

uint64_t sub_21F2BCD30(uint64_t a1, uint64_t (*a2)(void, uint64_t, void))
{
  return a2(*(void *)(v2 + 24), a1, *(void *)(v2 + 32));
}

uint64_t sub_21F2BCD70(uint64_t a1)
{
  return sub_21F2BCB2C(a1) & 1;
}

uint64_t PartialRepetitionGroundTruthGenerator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PartialRepetitionGroundTruthGenerator.init(_:)(a1);
  return v2;
}

char *PartialRepetitionGroundTruthGenerator.init(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  type metadata accessor for PartialRepetitionGroundTruthGenerator();
  *((void *)v1 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((void *)v1 + 3) = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 32))(&v1[*(void *)(*(void *)v1 + 104)], a1, v3);
  return v1;
}

uint64_t type metadata accessor for PartialRepetitionGroundTruthGenerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F2BCE9C(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  LODWORD(v101) = a3;
  uint64_t v7 = (void *)*v3;
  uint64_t v8 = v7[11];
  uint64_t v9 = v7[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v89 = sub_21F420798();
  uint64_t v88 = *(void *)(v89 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v89);
  uint64_t v93 = (char *)&v83 - v12;
  uint64_t v94 = AssociatedTypeWitness;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v90 = (char *)&v83 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v92 = sub_21F420798();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v92);
  uint64_t v96 = (char *)&v83 - v17;
  uint64_t v99 = v15;
  uint64_t v18 = v15;
  uint64_t v19 = a1;
  uint64_t v98 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v97 = (char *)&v83 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD3ACD0);
  MEMORY[0x270FA5388](v21 - 8);
  int v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TurnPairRestatementClassification();
  uint64_t v103 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v104 = (uint64_t)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  long long v102 = (uint64_t *)((char *)&v83 - v27);
  uint64_t v28 = *(uint64_t (**)(uint64_t *, uint64_t, void, uint64_t, uint64_t))(v8 + 160);
  uint64_t v95 = (uint64_t)v4 + v7[13];
  uint64_t v100 = v9;
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  if ((v28(v19, a2, v101, v29, v8) & 1) == 0)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_21F41FF28();
    __swift_project_value_buffer(v41, (uint64_t)qword_26AD3C910);
    swift_retain();
    uint64_t v42 = sub_21F41FF08();
    os_log_type_t v43 = sub_21F420668();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v106[0] = v45;
      *(_DWORD *)unint64_t v44 = 136315138;
      uint64_t v46 = v4[2];
      unint64_t v47 = v4[3];
      swift_bridgeObjectRetain();
      v105[0] = sub_21F2A02C4(v46, v47, v106);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v48 = "%s Validation not passed. Skipping partial repetition ground truth generation";
LABEL_29:
      _os_log_impl(&dword_21F29A000, v42, v43, v48, v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v45, -1, -1);
      MEMORY[0x223C4B440](v44, -1, -1);

LABEL_31:
      swift_getAssociatedTypeWitness();
      return sub_21F4203B8();
    }
LABEL_30:

    swift_release();
    goto LABEL_31;
  }
  uint64_t v86 = v4;
  uint64_t v31 = *(void *)(a2 + 16);
  uint64_t v85 = v19;
  uint64_t v87 = v8;
  if (v31)
  {
    uint64_t v32 = a2;
    uint64_t v33 = a2 + 32;
    uint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))(v103 + 56);
    uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
    uint64_t v84 = v32;
    swift_bridgeObjectRetain();
    uint64_t v36 = MEMORY[0x263F8EE78];
    uint64_t v101 = v13;
    do
    {
      sub_21F29F920(v33, (uint64_t)v106);
      sub_21F29F920((uint64_t)v106, (uint64_t)v105);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8A0);
      int v37 = swift_dynamicCast();
      (*v34)(v23, v37 ^ 1u, 1, v24);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v106);
      if ((*v35)(v23, 1, v24) == 1)
      {
        sub_21F29FA48((uint64_t)v23, qword_26AD3ACD0);
      }
      else
      {
        uint64_t v38 = (uint64_t)v102;
        sub_21F2BFBC4((uint64_t)v23, (uint64_t)v102, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        sub_21F2BFBC4(v38, v104, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_21F2A74C0(0, *(void *)(v36 + 16) + 1, 1, v36);
        }
        unint64_t v40 = *(void *)(v36 + 16);
        unint64_t v39 = *(void *)(v36 + 24);
        if (v40 >= v39 >> 1) {
          uint64_t v36 = sub_21F2A74C0(v39 > 1, v40 + 1, 1, v36);
        }
        *(void *)(v36 + 16) = v40 + 1;
        sub_21F2BFBC4(v104, v36+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v40, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        uint64_t v13 = v101;
      }
      v33 += 40;
      --v31;
    }
    while (v31);
    a2 = v84;
    swift_bridgeObjectRelease();
    uint64_t v30 = v87;
  }
  else
  {
    uint64_t v36 = MEMORY[0x263F8EE78];
  }
  uint64_t v49 = v99;
  if (!*(void *)(v36 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_21F41FF28();
    __swift_project_value_buffer(v57, (uint64_t)qword_26AD3C910);
    uint64_t v58 = v86;
    swift_retain();
    uint64_t v42 = sub_21F41FF08();
    os_log_type_t v43 = sub_21F420668();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v106[0] = v45;
      *(_DWORD *)unint64_t v44 = 136315138;
      uint64_t v59 = v58[2];
      unint64_t v60 = v58[3];
      swift_bridgeObjectRetain();
      v105[0] = sub_21F2A02C4(v59, v60, v106);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v48 = "%s No restatement classifications. Skipping partial repetition ground truth generation";
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  v106[0] = a2;
  sub_21F2BDD8C(v95, v100, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB8);
  sub_21F2BFCC4((unint64_t *)&qword_26AD3AEC0, &qword_26AD3AEB8);
  uint64_t v50 = sub_21F420298();
  swift_release();
  v106[0] = v50;
  sub_21F420428();
  swift_getWitnessTable();
  uint64_t v51 = v96;
  sub_21F4205F8();
  swift_bridgeObjectRelease();
  uint64_t v52 = v98;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v51, 1, v49) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v51, v92);
    uint64_t v53 = v86;
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_21F41FF28();
    __swift_project_value_buffer(v54, (uint64_t)qword_26AD3C910);
    swift_retain();
    uint64_t v42 = sub_21F41FF08();
    os_log_type_t v43 = sub_21F420668();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v106[0] = v45;
      *(_DWORD *)unint64_t v44 = 136315138;
      uint64_t v55 = v53[2];
      unint64_t v56 = v53[3];
      swift_bridgeObjectRetain();
      v105[0] = sub_21F2A02C4(v55, v56, v106);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v48 = "%s No successful event associated with session. Skipping partial repetition ground truth generation";
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  uint64_t v104 = 0;
  unint64_t v63 = v97;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v97, v51, v49);
  uint64_t v64 = v93;
  BOOL v65 = v85;
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t))(v30 + 128))(v85, v63, v100, v30);
  uint64_t v66 = v94;
  int v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v64, 1, v94);
  uint64_t v68 = v86;
  if (v67 == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v64, v89);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_21F41FF28();
    __swift_project_value_buffer(v69, (uint64_t)qword_26AD3C910);
    swift_retain();
    unint64_t v70 = sub_21F41FF08();
    os_log_type_t v71 = sub_21F420668();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      v106[0] = v73;
      *(_DWORD *)uint64_t v72 = 136315138;
      uint64_t v74 = v68[2];
      unint64_t v75 = v68[3];
      swift_bridgeObjectRetain();
      v105[0] = sub_21F2A02C4(v74, v75, v106);
      sub_21F4207D8();
      uint64_t v49 = v99;
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v70, v71, "%s Failed to extract successClassification entity. Skipping partial repetition ground truth generation", v72, 0xCu);
      swift_arrayDestroy();
      uint64_t v76 = v73;
      uint64_t v52 = v98;
      MEMORY[0x223C4B440](v76, -1, -1);
      MEMORY[0x223C4B440](v72, -1, -1);
    }
    else
    {

      swift_release();
    }
    uint64_t v82 = v97;
    swift_getAssociatedTypeWitness();
    uint64_t v61 = sub_21F4203B8();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v82, v49);
  }
  else
  {
    uint64_t v77 = v90;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v90, v64, v66);
    uint64_t v78 = sub_21F2BF514(v65, v36);
    uint64_t v103 = v78;
    uint64_t v79 = swift_bridgeObjectRelease();
    long long v102 = &v83;
    v106[0] = v78;
    MEMORY[0x270FA5388](v79);
    *(&v83 - 4) = (uint64_t)v68;
    *(&v83 - 3) = (uint64_t)v65;
    *(&v83 - 2) = (uint64_t)v77;
    uint64_t v80 = v77;
    uint64_t v81 = v97;
    *(&v83 - 1) = (uint64_t)v97;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D58);
    swift_getAssociatedTypeWitness();
    sub_21F2BFCC4(&qword_267EC7D60, &qword_267EC7D58);
    uint64_t v61 = sub_21F420298();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v94);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v81, v49);
    swift_bridgeObjectRelease();
  }
  return v61;
}

uint64_t (*sub_21F2BDD8C(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_21F2C0600;
}

uint64_t sub_21F2BDEAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v128 = a4;
  uint64_t v131 = a3;
  uint64_t v144 = a5;
  uint64_t v8 = *v5;
  uint64_t v9 = type metadata accessor for FeaturisedSession(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v126 = (uint64_t)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_21F41F228();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  v127 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v8 + 88);
  *(void *)&long long v146 = v5;
  uint64_t v13 = *(void *)(v8 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v137 = sub_21F420798();
  uint64_t v125 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  v136 = (char *)&v120 - v14;
  uint64_t v147 = v12;
  uint64_t v145 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  *(void *)&long long v135 = sub_21F420798();
  *(void *)&long long v134 = *(void *)(v135 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v135);
  *(void *)&long long v140 = (char *)&v120 - v17;
  uint64_t v143 = v15;
  uint64_t v142 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v16);
  v141 = (char *)&v120 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v133 = (uint64_t)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v23 = (char *)&v120 - v22;
  uint64_t v24 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v124 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v123 = (uint64_t)&v120 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v120 - v31;
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v138 = (uint64_t)&v120 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  int v37 = (char *)&v120 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v148 = (uint64_t)&v120 - v38;
  uint64_t v139 = a1;
  uint64_t v39 = *(void *)a1;
  uint64_t v40 = *(void *)(*(void *)a1 + 16);
  if (v40)
  {
    uint64_t v41 = v39 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v42 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F2C0448(v41, (uint64_t)v37, type metadata accessor for FeaturisedTurn);
      if (sub_21F41F1D8()) {
        break;
      }
      sub_21F2C04B0((uint64_t)v37, type metadata accessor for FeaturisedTurn);
      v41 += v42;
      if (!--v40) {
        goto LABEL_7;
      }
    }
    sub_21F2BFBC4((uint64_t)v37, (uint64_t)v23, type metadata accessor for FeaturisedTurn);
    os_log_type_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    unint64_t v44 = v23;
    uint64_t v45 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    os_log_type_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    unint64_t v44 = v23;
    uint64_t v45 = 1;
  }
  v132 = v43;
  v43((uint64_t)v44, v45, 1, v24);
  swift_bridgeObjectRelease();
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v47 = v46(v23, 1, v24);
  uint64_t v48 = v145;
  uint64_t v49 = v148;
  if (v47 == 1)
  {
    sub_21F29FA48((uint64_t)v23, &qword_26AD3A8C0);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_21F41FF28();
    __swift_project_value_buffer(v50, (uint64_t)qword_26AD3C910);
    uint64_t v51 = v146;
    swift_retain();
    uint64_t v52 = sub_21F41FF08();
    os_log_type_t v53 = sub_21F420678();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(void *)&long long v157 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v56 = v51;
      uint64_t v57 = *(void *)(v51 + 16);
      unint64_t v58 = *(void *)(v56 + 24);
      swift_bridgeObjectRetain();
      *(void *)&long long v152 = sub_21F2A02C4(v57, v58, (uint64_t *)&v157);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v52, v53, "%s First turn missing. Partial repetion ground truth not generated", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v55, -1, -1);
      MEMORY[0x223C4B440](v54, -1, -1);
    }
    else
    {

      swift_release();
    }
    goto LABEL_43;
  }
  sub_21F2BFBC4((uint64_t)v23, v148, type metadata accessor for FeaturisedTurn);
  uint64_t v59 = v146 + *(void *)(*(void *)v146 + 104);
  uint64_t v60 = v147;
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 104))(v49, v48, v147) & 1) == 0)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v76 = sub_21F41FF28();
    __swift_project_value_buffer(v76, (uint64_t)qword_26AD3C910);
    uint64_t v77 = v146;
    swift_retain_n();
    uint64_t v68 = sub_21F41FF08();
    os_log_type_t v69 = sub_21F420678();
    if (os_log_type_enabled(v68, v69))
    {
      unint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(void *)&long long v157 = v71;
      *(_DWORD *)unint64_t v70 = 136315138;
      uint64_t v78 = v77;
      uint64_t v79 = *(void *)(v77 + 16);
      unint64_t v80 = *(void *)(v78 + 24);
      swift_bridgeObjectRetain();
      *(void *)&long long v152 = sub_21F2A02C4(v79, v80, (uint64_t *)&v157);
      sub_21F4207D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      unint64_t v75 = "%s First turn failed isInitiatingSiriTurn test. Partial repetion ground truth not generated";
      goto LABEL_25;
    }
LABEL_26:
    swift_release_n();

    goto LABEL_42;
  }
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 144);
  uint64_t v62 = v60;
  uint64_t v63 = v140;
  uint64_t v121 = v59;
  v61(v49, v48, v62);
  uint64_t v64 = v142;
  uint64_t v65 = v143;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v63, 1, v143) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v141, v63, v65);
    uint64_t v81 = *(void *)(*(void *)v139 + 16);
    if (v81)
    {
      uint64_t v82 = *(void *)v139
          + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      *(void *)&long long v140 = *(void *)v139;
      type metadata accessor for TurnPairRestatementClassification();
      uint64_t v83 = *(void *)(v25 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21F2C0448(v82, (uint64_t)v32, type metadata accessor for FeaturisedTurn);
        if (sub_21F41F1D8()) {
          break;
        }
        sub_21F2C04B0((uint64_t)v32, type metadata accessor for FeaturisedTurn);
        v82 += v83;
        if (!--v81)
        {
          uint64_t v84 = 1;
          uint64_t v85 = v145;
          uint64_t v86 = v147;
          uint64_t v49 = v148;
          uint64_t v87 = v133;
          goto LABEL_34;
        }
      }
      uint64_t v88 = (uint64_t)v32;
      uint64_t v87 = v133;
      sub_21F2BFBC4(v88, v133, type metadata accessor for FeaturisedTurn);
      uint64_t v84 = 0;
      uint64_t v85 = v145;
      uint64_t v86 = v147;
      uint64_t v49 = v148;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = 1;
      uint64_t v85 = v145;
      uint64_t v87 = v133;
      uint64_t v86 = v147;
    }
LABEL_34:
    v132(v87, v84, 1, v24);
    swift_bridgeObjectRelease();
    int v89 = v46((char *)v87, 1, v24);
    uint64_t v90 = v121;
    if (v89 != 1)
    {
      sub_21F2BFBC4(v87, v138, type metadata accessor for FeaturisedTurn);
      uint64_t v100 = *(int *)(v24 + 28);
      uint64_t v101 = v49;
      uint64_t v102 = *(void *)(v49 + v100);
      uint64_t v103 = sub_21F2BF2D4(v90, v85, v86);
      *(void *)&long long v152 = v102;
      *((void *)&v152 + 1) = v103;
      *(void *)&long long v153 = v104;
      sub_21F2BF3F4(v90, v85, v86);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D68);
      sub_21F2BFCC4(&qword_267EC7D70, &qword_267EC7D68);
      sub_21F420C18();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      long long v146 = v157;
      long long v140 = v158;
      long long v152 = v157;
      long long v153 = v158;
      long long v135 = v159;
      long long v134 = v160;
      long long v154 = v159;
      long long v155 = v160;
      uint64_t v156 = v161;
      sub_21F2BFCC4(&qword_267EC7D78, &qword_267EC7D68);
      sub_21F420AB8();
      swift_getWitnessTable();
      sub_21F420B88();
      swift_getWitnessTable();
      sub_21F420AB8();
      unint64_t v151 = sub_21F2BFC2C();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v149 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_21F4205F8();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v105 = v127;
      sub_21F41F218();
      *(void *)&long long v146 = type metadata accessor for PartialRepetitionMetadata();
      uint64_t v106 = v126;
      sub_21F2C0448(v139, v126, type metadata accessor for FeaturisedSession);
      uint64_t v107 = *(void *)(a2 + *(int *)(type metadata accessor for TurnPairRestatementClassification() + 24));
      uint64_t v108 = v101;
      uint64_t v109 = v123;
      sub_21F2C0448(v108, v123, type metadata accessor for FeaturisedTurn);
      uint64_t v110 = v124;
      sub_21F2C0448(v138, v124, type metadata accessor for FeaturisedTurn);
      uint64_t v111 = v147;
      uint64_t v112 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v114 = sub_21F34E178(v106, v128, v107, v109, v110, v146, v112, AssociatedConformanceWitness);
      uint64_t v115 = *(void (**)(char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 120);
      swift_bridgeObjectRetain();
      unint64_t v116 = v141;
      uint64_t v117 = v136;
      v115(v105, v141, v136, v131, v114, v85, v111);
      swift_release();
      (*(void (**)(char *, uint64_t))(v129 + 8))(v105, v130);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v117, v137);
      sub_21F2C04B0(v138, type metadata accessor for FeaturisedTurn);
      (*(void (**)(char *, uint64_t))(v142 + 8))(v116, v143);
      return sub_21F2C04B0(v148, type metadata accessor for FeaturisedTurn);
    }
    sub_21F29FA48(v87, &qword_26AD3A8C0);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v91 = sub_21F41FF28();
    __swift_project_value_buffer(v91, (uint64_t)qword_26AD3C910);
    uint64_t v92 = v146;
    swift_retain_n();
    uint64_t v93 = sub_21F41FF08();
    os_log_type_t v94 = sub_21F420678();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      *(void *)&long long v157 = v96;
      *(_DWORD *)uint64_t v95 = 136315138;
      uint64_t v97 = v92;
      uint64_t v98 = *(void *)(v92 + 16);
      unint64_t v99 = *(void *)(v97 + 24);
      swift_bridgeObjectRetain();
      *(void *)&long long v152 = sub_21F2A02C4(v98, v99, (uint64_t *)&v157);
      sub_21F4207D8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v93, v94, "%s Second turn missing. Partial repetion ground truth not generated", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v96, -1, -1);
      MEMORY[0x223C4B440](v95, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v142 + 8))(v141, v143);
    goto LABEL_42;
  }
  (*(void (**)(uint64_t, void))(v134 + 8))(v63, v135);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v66 = sub_21F41FF28();
  __swift_project_value_buffer(v66, (uint64_t)qword_26AD3C910);
  uint64_t v67 = v146;
  swift_retain_n();
  uint64_t v68 = sub_21F41FF08();
  os_log_type_t v69 = sub_21F420678();
  if (!os_log_type_enabled(v68, v69)) {
    goto LABEL_26;
  }
  unint64_t v70 = (uint8_t *)swift_slowAlloc();
  uint64_t v71 = swift_slowAlloc();
  *(void *)&long long v157 = v71;
  *(_DWORD *)unint64_t v70 = 136315138;
  uint64_t v72 = v67;
  uint64_t v73 = *(void *)(v67 + 16);
  unint64_t v74 = *(void *)(v72 + 24);
  swift_bridgeObjectRetain();
  *(void *)&long long v152 = sub_21F2A02C4(v73, v74, (uint64_t *)&v157);
  sub_21F4207D8();
  swift_release_n();
  swift_bridgeObjectRelease();
  unint64_t v75 = "%s extractUsoEntity failed for first turn. Partial repetion ground truth not generated";
LABEL_25:
  _os_log_impl(&dword_21F29A000, v68, v69, v75, v70, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v71, -1, -1);
  MEMORY[0x223C4B440](v70, -1, -1);

LABEL_42:
  sub_21F2C04B0(v148, type metadata accessor for FeaturisedTurn);
LABEL_43:
  uint64_t v119 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56))(v144, 1, 1, v119);
}

uint64_t (*sub_21F2BF2D4(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_21F2C03B4;
}

uint64_t (*sub_21F2BF3F4(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_21F2C0320;
}

uint64_t sub_21F2BF514(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - v13;
  uint64_t v16 = *a1;
  uint64_t v17 = *(void *)(*a1 + 16);
  if (!v17)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_21F41FF28();
    __swift_project_value_buffer(v21, (uint64_t)qword_26AD3C910);
    swift_retain();
    uint64_t v22 = sub_21F41FF08();
    os_log_type_t v23 = sub_21F420678();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v37 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v26 = v3[2];
      unint64_t v27 = v3[3];
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_21F2A02C4(v26, v27, &v37);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v22, v23, "%s Couldn't extract final turn in session as session contains no turns.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v25, -1, -1);
      MEMORY[0x223C4B440](v24, -1, -1);
    }
    else
    {

      swift_release();
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v34 = (char *)v14;
  uint64_t v35 = v6;
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(void *)(v11 + 72);
  sub_21F2C0448(v16 + v18 + v19 * (v17 - 1), (uint64_t)&v32 - v13, type metadata accessor for FeaturisedTurn);
  uint64_t v20 = sub_21F2BFD08(v15, a2);
  if (!*(void *)(v20 + 16))
  {
    uint64_t v33 = a2;
    swift_bridgeObjectRelease();
    uint64_t v28 = (*(uint64_t (**)(uint64_t *, void))(*(void *)(v35 + 88) + 152))(a1, *(void *)(v35 + 80));
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      sub_21F2C0448(v28 + v18 + (v29 - 1) * v19, (uint64_t)v9, type metadata accessor for FeaturisedTurn);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        uint64_t v31 = v34;
        sub_21F2BFBC4((uint64_t)v9, (uint64_t)v34, type metadata accessor for FeaturisedTurn);
        uint64_t v20 = sub_21F2BFD08(v31, v33);
        sub_21F2C04B0((uint64_t)v31, type metadata accessor for FeaturisedTurn);
        sub_21F2C04B0((uint64_t)v15, type metadata accessor for FeaturisedTurn);
        return v20;
      }
      sub_21F29FA48((uint64_t)v9, &qword_26AD3A8C0);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_21F2C04B0((uint64_t)v15, type metadata accessor for FeaturisedTurn);
    return MEMORY[0x263F8EE78];
  }
  sub_21F2C04B0((uint64_t)v15, type metadata accessor for FeaturisedTurn);
  return v20;
}

uint64_t *PartialRepetitionGroundTruthGenerator.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t PartialRepetitionGroundTruthGenerator.__deallocating_deinit()
{
  PartialRepetitionGroundTruthGenerator.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F2BFA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F2BDEAC(v2[3], a1, v2[4], v2[5], a2);
}

uint64_t sub_21F2BFAD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PartialRepetitionGroundTruthGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PartialRepetitionGroundTruthGenerator);
}

uint64_t dispatch thunk of PartialRepetitionGroundTruthGenerator.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PartialRepetitionGroundTruthGenerator.generate(session:classifications:isComposite:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_21F2BFBC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F2BFC2C()
{
  unint64_t result = qword_267EC7D80;
  if (!qword_267EC7D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC7D68);
    sub_21F2BFCC4(&qword_267EC7D88, &qword_267EC7D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7D80);
  }
  return result;
}

uint64_t sub_21F2BFCC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F2BFD08(char *a1, uint64_t a2)
{
  uint64_t v68 = type metadata accessor for TurnPairRestatementClassification();
  uint64_t v4 = *(void *)(v68 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v68);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v62 = (char *)&v58 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v67 = (char *)&v58 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v70 = (unint64_t)&v58 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v69 = sub_21F41F228();
  uint64_t v16 = *(void *)(v69 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v69);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)&v58 - v20;
  uint64_t v64 = v16;
  uint64_t v21 = *(void *)(a2 + 16);
  if (v21)
  {
    uint64_t v59 = a1;
    uint64_t v60 = v7;
    uint64_t v22 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v61 = v4;
    uint64_t v23 = *(void *)(v4 + 72);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v65 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v66 = v23;
    uint64_t v58 = a2;
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x263F8EE80];
    uint64_t v26 = v69;
    while (1)
    {
      sub_21F2C0448(v22, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
      uint64_t v29 = *v24;
      uint64_t v30 = v24;
      (*v24)(v19, &v15[*(int *)(v68 + 20)], v26);
      sub_21F2C0448((uint64_t)v15, v70, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v71 = v25;
      unint64_t v33 = sub_21F2F7E90((uint64_t)v19);
      uint64_t v34 = v25[2];
      BOOL v35 = (v32 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        break;
      }
      char v37 = v32;
      if (v25[3] >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21F2FE62C();
        }
      }
      else
      {
        sub_21F2F95EC(v36, isUniquelyReferenced_nonNull_native);
        unint64_t v38 = sub_21F2F7E90((uint64_t)v19);
        if ((v37 & 1) != (v39 & 1)) {
          goto LABEL_29;
        }
        unint64_t v33 = v38;
      }
      uint64_t v26 = v69;
      uint64_t v25 = v71;
      if (v37)
      {
        uint64_t v27 = v71[7] + v33 * v66;
        uint64_t v28 = v66;
        sub_21F2C0510(v70, v27);
        uint64_t v24 = v30;
      }
      else
      {
        v71[(v33 >> 6) + 8] |= 1 << v33;
        uint64_t v24 = v30;
        v29((char *)(v25[6] + *(void *)(v64 + 72) * v33), v19, v26);
        uint64_t v40 = v25[7] + v33 * v66;
        uint64_t v28 = v66;
        sub_21F2BFBC4(v70, v40, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        uint64_t v41 = v25[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_28;
        }
        void v25[2] = v43;
        uint64_t v25 = v71;
      }
      swift_bridgeObjectRelease();
      (*v65)(v19, v26);
      sub_21F2C04B0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
      v22 += v28;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        unint64_t v44 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v7 = v60;
        uint64_t v4 = v61;
        uint64_t v16 = v64;
        a1 = v59;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = sub_21F420E68();
    __break(1u);
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v44 = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v25 = (void *)MEMORY[0x263F8EE80];
LABEL_16:
    uint64_t v45 = (uint64_t)v63;
    unint64_t v70 = v44;
    v29(v63, a1, v69);
    uint64_t v46 = (uint64_t)v62;
    if (v25[2])
    {
      int v47 = (void (**)(char *, uint64_t))(v16 + 8);
      unint64_t v48 = MEMORY[0x263F8EE78];
      do
      {
        unint64_t v49 = sub_21F2F7E90(v45);
        if ((v50 & 1) == 0) {
          break;
        }
        uint64_t v51 = *(void *)(v4 + 72);
        sub_21F2C0448(v25[7] + v51 * v49, v46, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        uint64_t v52 = (uint64_t)v67;
        sub_21F2BFBC4(v46, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        sub_21F2C0448(v52, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v48 = sub_21F2A74C0(0, *(void *)(v48 + 16) + 1, 1, v48);
        }
        unint64_t v54 = *(void *)(v48 + 16);
        unint64_t v53 = *(void *)(v48 + 24);
        if (v54 >= v53 >> 1) {
          unint64_t v48 = sub_21F2A74C0(v53 > 1, v54 + 1, 1, v48);
        }
        *(void *)(v48 + 16) = v54 + 1;
        sub_21F2BFBC4((uint64_t)v7, v48 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v54 * v51, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
        uint64_t v45 = (uint64_t)v63;
        uint64_t v55 = v69;
        (*v47)(v63, v69);
        uint64_t v56 = (uint64_t)v67;
        v29((char *)v45, v67, v55);
        sub_21F2C04B0(v56, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
      }
      while (v25[2]);
    }
    else
    {
      unint64_t v48 = MEMORY[0x263F8EE78];
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v45, v69);
    swift_bridgeObjectRelease();
    return v48;
  }
  return result;
}

uint64_t sub_21F2C0320(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = *a1;
  long long v7 = *(_OWORD *)(a1 + 1);
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  return (*(uint64_t (**)(uint64_t *))(v2 + 136))(&v6);
}

uint64_t sub_21F2C03B4(uint64_t *a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v6 = *a1;
  long long v7 = *(_OWORD *)(a1 + 1);
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  return (*(uint64_t (**)(uint64_t *))(v2 + 112))(&v6) & 1;
}

uint64_t sub_21F2C0448(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2C04B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F2C0510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TurnPairRestatementClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_21F2C0600()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 96))();
}

unint64_t sub_21F2C066C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D00);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_21F2F7E18(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C0788(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DC0);
  uint64_t v2 = sub_21F420BD8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F2C2300(v6, (uint64_t)&v15, &qword_26AD38D48);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_21F2F7E18(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_21F2A09A8(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C08CC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DA8);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 88);
  while (1)
  {
    uint64_t v5 = *(v4 - 6);
    uint64_t v6 = *(v4 - 5);
    uint64_t v7 = *(v4 - 4);
    uint64_t v8 = *(v4 - 3);
    uint64_t v9 = *(v4 - 2);
    __int16 v10 = *((_WORD *)v4 - 4);
    uint64_t v11 = *v4;
    *(void *)&long long v19 = *(v4 - 7);
    *((void *)&v19 + 1) = v5;
    *(void *)&long long v20 = v6;
    *((void *)&v20 + 1) = v7;
    *(void *)&long long v21 = v8;
    *((void *)&v21 + 1) = v9;
    __int16 v22 = v10;
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v6, v7);
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7F64((uint64_t)&v19);
    if (v13) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = v2[6] + 56 * result;
    long long v15 = v20;
    *(_OWORD *)uint64_t v14 = v19;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v21;
    *(_WORD *)(v14 + 48) = v22;
    *(void *)(v2[7] + 8 * result) = v11;
    uint64_t v16 = v2[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      goto LABEL_11;
    }
    v2[2] = v18;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C0A3C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DA0);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 83);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 43);
    uint64_t v6 = *(void *)(v4 - 35);
    uint64_t v7 = *(void *)(v4 - 27);
    uint64_t v8 = *(void *)(v4 - 19);
    uint64_t v9 = *(void *)(v4 - 11);
    __int16 v10 = *(_WORD *)(v4 - 3);
    char v11 = *(v4 - 1);
    char v12 = *v4;
    *(void *)&long long v21 = *(void *)(v4 - 51);
    *((void *)&v21 + 1) = v5;
    *(void *)&long long v22 = v6;
    *((void *)&v22 + 1) = v7;
    *(void *)&long long v23 = v8;
    *((void *)&v23 + 1) = v9;
    __int16 v24 = v10;
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v6, v7);
    unint64_t result = sub_21F2F7F64((uint64_t)&v21);
    if (v14) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v15 = v2[6] + 56 * result;
    long long v16 = v22;
    *(_OWORD *)uint64_t v15 = v21;
    *(_OWORD *)(v15 + 16) = v16;
    *(_OWORD *)(v15 + 32) = v23;
    *(_WORD *)(v15 + 48) = v24;
    BOOL v17 = (unsigned char *)(v2[7] + 2 * result);
    *BOOL v17 = v11;
    v17[1] = v12;
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v4 += 56;
    v2[2] = v20;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C0BBC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DB8);
  uint64_t v2 = sub_21F420BD8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v20 = v2 + 64;
  swift_retain();
  uint64_t v5 = (unsigned __int16 *)(a1 + 65);
  while (1)
  {
    uint64_t v6 = *(void *)((char *)v5 - 33);
    uint64_t v7 = *(void *)((char *)v5 - 25);
    uint64_t v8 = *(void *)((char *)v5 - 17);
    uint64_t v9 = *(void *)((char *)v5 - 9);
    char v10 = *((unsigned char *)v5 - 1);
    int v11 = *((unsigned __int8 *)v5 + 2);
    int v12 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7FD0(v6, v7, v8, v9);
    if (v14) {
      break;
    }
    *(void *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v15 = (uint64_t *)(v3[6] + 32 * result);
    *uint64_t v15 = v6;
    v15[1] = v7;
    v15[2] = v8;
    v15[3] = v9;
    uint64_t v16 = v3[7] + 4 * result;
    *(unsigned char *)uint64_t v16 = v10;
    *(unsigned char *)(v16 + 3) = (v12 | (v11 << 16)) >> 16;
    *(_WORD *)(v16 + 1) = v12;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v3[2] = v19;
    v5 += 20;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C0D24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DB0);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7FD0(v5, v6, v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v12 = (uint64_t *)(v2[6] + 32 * result);
    *int v12 = v5;
    v12[1] = v6;
    _OWORD v12[2] = v7;
    uint64_t v12[3] = v8;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C0E68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B078);
  uint64_t v6 = sub_21F420BD8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21F2C2300(v12, (uint64_t)v5, &qword_26AD3AFC8);
    unint64_t result = sub_21F2F826C((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_21F41FEE8();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_21F41FDB8();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    _OWORD v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C109C(uint64_t a1)
{
  return sub_21F2C145C(a1, &qword_26AD3A850, &qword_267EC7E18);
}

unint64_t sub_21F2C10B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E10);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7E18(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C11D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E08);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v7 = *(v4 - 3);
    uint64_t v8 = *(v4 - 2);
    uint64_t v10 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7E18(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v13 = v5;
    v13[1] = v6;
    BOOL v14 = (void *)(v2[7] + 32 * result);
    *BOOL v14 = v7;
    v14[1] = v8;
    _OWORD v14[2] = v10;
    v14[3] = v9;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1314(uint64_t a1)
{
  return sub_21F2C1900(a1, &qword_267EC7E00, (uint64_t (*)(uint64_t))sub_21F2F8150);
}

unint64_t sub_21F2C1334(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DF8);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7E18(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1448(uint64_t a1)
{
  return sub_21F2C145C(a1, &qword_26AD38750, &qword_26AD3AEF8);
}

unint64_t sub_21F2C145C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v10 = sub_21F420BD8();
  uint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_21F2C2300(v16, (uint64_t)v9, a2);
    unint64_t result = sub_21F2F7E90((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = sub_21F41F228();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1648(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DF0);
  uint64_t v2 = (void *)sub_21F420BD8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7E18(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1764(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DE8);
  uint64_t v2 = sub_21F420BD8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v9 = *(v5 - 1);
    uint64_t v8 = *v5;
    uint64_t v11 = v5[1];
    uint64_t v10 = v5[2];
    uint64_t v12 = v5[4];
    uint64_t v13 = v5[6];
    uint64_t v23 = v5[5];
    uint64_t v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F7E18(v6, v7);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v16 = v6;
    v16[1] = v7;
    uint64_t v17 = (void *)(v3[7] + (result << 6));
    *uint64_t v17 = v9;
    v17[1] = v8;
    v17[2] = v11;
    v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v5 += 10;
    v3[2] = v20;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C18E0(uint64_t a1)
{
  return sub_21F2C1900(a1, &qword_267EC7DE0, (uint64_t (*)(uint64_t))sub_21F2F8060);
}

unint64_t sub_21F2C1900(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = (void *)sub_21F420BD8();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v9 = *(v7 - 1);
    uint64_t v8 = *v7;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = a3(v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = 8 * result;
    *(void *)(v5[6] + v12) = v9;
    *(void *)(v5[7] + v12) = v8;
    uint64_t v13 = v5[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v5[2] = v15;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1A18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB8);
  uint64_t v2 = sub_21F420BD8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F2C2300(v6, (uint64_t)&v15, &qword_267EC7DD0);
    uint64_t v7 = v15;
    unint64_t v8 = v16;
    unint64_t result = sub_21F2F8424(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_21F2A09A8(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F2C1B5C(uint64_t a1)
{
  return sub_21F2C145C(a1, &qword_267EC7DC0, &qword_267EC7DC8);
}

unint64_t sub_21F2C1B70(uint64_t a1)
{
  return sub_21F2C145C(a1, &qword_26AD3A858, &qword_26AD3AF00);
}

uint64_t PIMSProcessingState.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSProcessingState.eventName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSProcessingState.eventName.modify())()
{
  return nullsub_1;
}

SiriPrivateLearningInference::PIMSProcessingState __swiftcall PIMSProcessingState.init(state:)(SiriPrivateLearningInference::PIMSProcessingStateCode state)
{
  char v2 = *(unsigned char *)state;
  *(void *)uint64_t v1 = 0xD000000000000013;
  *(void *)(v1 + 8) = 0x800000021F423870;
  *(unsigned char *)(v1 + 16) = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = state;
  return result;
}

unint64_t PIMSProcessingState.getLoggableProperties()()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x800000021F423870;
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = 0x800000021F431E10;
  switch(v1)
  {
    case 1:
      uint64_t v5 = "PIMSSuggestionEvaluationTriggered";
      goto LABEL_8;
    case 2:
      unint64_t v3 = 0xD000000000000022;
      uint64_t v6 = "PIMSGroundTruthGenerationTriggered";
      goto LABEL_6;
    case 3:
      unint64_t v3 = 0xD00000000000001BLL;
      uint64_t v6 = "GroundTruthExistsToConsider";
      goto LABEL_6;
    case 4:
      unint64_t v3 = 0xD000000000000024;
      uint64_t v6 = "PIMSMediaEventFeaturisationTriggered";
LABEL_6:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 5:
      uint64_t v5 = "PIMSSuggestionGenerationTriggered";
LABEL_8:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000021;
      break;
    default:
      break;
  }
  uint64_t v7 = MEMORY[0x263F740E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  return sub_21F2C0788(inited);
}

unint64_t PIMSProcessingStateCode.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F2C1E24()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

SiriPrivateLearningInference::PIMSProcessingStateCode_optional __swiftcall PIMSProcessingStateCode.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_21F420C28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_21F2C1EB4(unsigned __int8 *a1, char *a2)
{
  return sub_21F32ED9C(*a1, *a2);
}

unint64_t sub_21F2C1EC4()
{
  unint64_t result = qword_267EC7D98;
  if (!qword_267EC7D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7D98);
  }
  return result;
}

uint64_t sub_21F2C1F18()
{
  return sub_21F3FE5C0();
}

uint64_t sub_21F2C1F20()
{
  return sub_21F32FFC0();
}

uint64_t sub_21F2C1F28()
{
  return sub_21F3307B8();
}

SiriPrivateLearningInference::PIMSProcessingStateCode_optional sub_21F2C1F30(Swift::String *a1)
{
  return PIMSProcessingStateCode.init(rawValue:)(*a1);
}

unint64_t sub_21F2C1F3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PIMSProcessingStateCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t destroy for PIMSProcessingState()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s28SiriPrivateLearningInference19PIMSProcessingStateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PIMSProcessingState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PIMSProcessingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PIMSProcessingState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PIMSProcessingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PIMSProcessingState()
{
  return &type metadata for PIMSProcessingState;
}

unsigned char *storeEnumTagSinglePayload for PIMSProcessingStateCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2C21B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PIMSProcessingStateCode()
{
  return &type metadata for PIMSProcessingStateCode;
}

unint64_t sub_21F2C21F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DD8);
  int v3 = (void *)sub_21F420BD8();
  LOBYTE(v4) = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_21F2F8200(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (uint64_t *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    char v10 = (void *)(v3[7] + 16 * result);
    *char v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *((unsigned __int8 *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_21F2F8200(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2C2300(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2C2364(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeaturisedSession(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  if (v12 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF10);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21F422460;
    *(void *)(v13 + 32) = a1;
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    sub_21F2C6D70(a1 + v14, (uint64_t)v11, type metadata accessor for FeaturisedSession);
    sub_21F2C2678(2, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7798);
    uint64_t inited = swift_initStackObject();
    long long v25 = xmmword_21F422460;
    *(_OWORD *)(inited + 16) = xmmword_21F422460;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF18);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v25;
    sub_21F2C6D70((uint64_t)v11, v16 + v14, type metadata accessor for FeaturisedSession);
    *(void *)(inited + 32) = v16;
    uint64_t v28 = inited;
    swift_retain();
    sub_21F420AD8();
    swift_release();
    sub_21F420C08();
    long long v17 = v26;
    if ((void)v26)
    {
      long long v18 = v27;
      do
      {
        long long v25 = v17;
        long long v26 = v17;
        long long v27 = v18;
        sub_21F2C28E0(&v28, &v26, v4, a2, a3);
        swift_unknownObjectRelease();
        sub_21F420C08();
        long long v17 = v26;
        long long v18 = v27;
      }
      while ((void)v26);
      uint64_t inited = v28;
    }
    swift_release();
    swift_release();
    int64_t v19 = *(void *)(inited + 16);
    uint64_t v13 = MEMORY[0x263F8EE78];
    if (v19)
    {
      *(void *)&long long v26 = MEMORY[0x263F8EE78];
      sub_21F2C3240(0, v19, 0);
      uint64_t v13 = v26;
      uint64_t v20 = (uint64_t *)(inited + 32);
      do
      {
        uint64_t v21 = *v20;
        *(void *)&long long v26 = v13;
        unint64_t v22 = *(void *)(v13 + 16);
        unint64_t v23 = *(void *)(v13 + 24);
        swift_bridgeObjectRetain();
        if (v22 >= v23 >> 1)
        {
          sub_21F2C3240(v23 > 1, v22 + 1, 1);
          uint64_t v13 = v26;
        }
        *(void *)(v13 + 16) = v22 + 1;
        *(void *)(v13 + 8 * v22 + 32) = v21;
        ++v20;
        --v19;
      }
      while (v19);
    }
    sub_21F2C3388((uint64_t)v11);
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_21F2C2678(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    if (v2 >= a1) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = *(void *)(a2 + 16);
    }
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a2;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_21F2C6E50;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E58);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = v4;
    *(_WORD *)(v8 + 32) = 256;
    *(void *)(v8 + 40) = sub_21F2C6B48;
    *(void *)(v8 + 48) = v6;
    *(unsigned char *)(v8 + 56) = 0;
    *(void *)(v8 + 64) = sub_21F2C6B50;
    *(void *)(v8 + 72) = v7;
    swift_bridgeObjectRetain_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E60);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = MEMORY[0x263F8EE78];
  }
  return v8;
}

uint64_t sub_21F2C27AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    if (v2 >= a1) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = *(void *)(a2 + 16);
    }
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a2;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_21F2C6BD0;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7EB0);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = v4;
    *(_WORD *)(v8 + 32) = 256;
    *(void *)(v8 + 40) = sub_21F2C6E54;
    *(void *)(v8 + 48) = v6;
    *(unsigned char *)(v8 + 56) = 0;
    *(void *)(v8 + 64) = sub_21F2C6CE0;
    *(void *)(v8 + 72) = v7;
    swift_bridgeObjectRetain_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEE0);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = MEMORY[0x263F8EE78];
  }
  return v8;
}

uint64_t sub_21F2C28E0(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v45 = a1;
  uint64_t v11 = type metadata accessor for FeaturisedSession(0) - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t)&v39 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v20 = (char *)&v39 - v17;
  uint64_t v21 = a2[2];
  uint64_t v22 = a2[3] >> 1;
  if (v21 != v22)
  {
    if (v21 < v22)
    {
      uint64_t v41 = v19;
      uint64_t v43 = v18;
      unint64_t v44 = v5;
      uint64_t v23 = a2[1];
      uint64_t v24 = *(void *)(v18 + 72);
      sub_21F2C6D70(v23 + v24 * v21, (uint64_t)&v39 - v17, type metadata accessor for FeaturisedSession);
      uint64_t v25 = v23 + v24 * (v22 - 1);
      uint64_t v6 = v15;
      sub_21F2C6D70(v25, v15, type metadata accessor for FeaturisedSession);
      long long v26 = (uint64_t (*)(char *, uint64_t, uint64_t, void *))a5[1];
      BOOL v42 = v20;
      if ((v26(v20, v15, a4, a5) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF18);
        unint64_t v34 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_21F422460;
        sub_21F2C6D70(v15, v35 + v34, type metadata accessor for FeaturisedSession);
        unint64_t v33 = v45;
        a3 = (void *)*v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a3 = sub_21F2A7CA4(0, a3[2] + 1, 1, a3);
        }
        unint64_t v37 = a3[2];
        unint64_t v36 = a3[3];
        if (v37 >= v36 >> 1) {
          a3 = sub_21F2A7CA4((void *)(v36 > 1), v37 + 1, 1, a3);
        }
        a3[2] = v37 + 1;
        a3[v37 + 4] = v35;
        goto LABEL_18;
      }
      uint64_t v40 = v24;
      uint64_t v22 = v43;
      a3 = (void *)*v45;
      a2 = *(void **)(*v45 + 16);
      a4 = v41;
      sub_21F2C6D70(v15, v41, type metadata accessor for FeaturisedSession);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if (!a2)
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_7:
        if ((unint64_t)a2 <= a3[2])
        {
          uint64_t v15 = (uint64_t)a2 - 1;
          uint64_t v27 = (uint64_t)a2 - 1;
          a5 = (void *)a3[v27 + 4];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v44 = a3 + 4;
          a3[v27 + 4] = a5;
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v29 = v15;
LABEL_10:
            unint64_t v31 = a5[2];
            unint64_t v30 = a5[3];
            if (v31 >= v30 >> 1)
            {
              uint64_t v38 = sub_21F2A7CB8(v30 > 1, v31 + 1, 1, (unint64_t)a5);
              uint64_t v32 = v22;
              a5 = (void *)v38;
              v44[v29] = v38;
            }
            else
            {
              uint64_t v32 = v22;
            }
            a5[2] = v31 + 1;
            sub_21F2C6DD8(a4, (uint64_t)a5+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ v31 * v40, type metadata accessor for FeaturisedSession);
            unint64_t v33 = v45;
LABEL_18:
            void *v33 = a3;
            sub_21F2C3388(v6);
            return sub_21F2C3388((uint64_t)v42);
          }
LABEL_23:
          a5 = (void *)sub_21F2A7CB8(0, a5[2] + 1, 1, (unint64_t)a5);
          uint64_t v29 = v15;
          v44[v15] = a5;
          goto LABEL_10;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    a3 = sub_21F2C6538(a3);
    if (!a2) {
      goto LABEL_21;
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t CompositeSession.componentSessions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompositeSession.combinedSession.getter@<X0>(size_t *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeaturisedSession(0);
  uint64_t v10 = MEMORY[0x270FA5388](*(void *)(v9 - 8));
  uint64_t v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = *v1;
  int64_t v17 = *(void *)(*v1 + 16);
  uint64_t v43 = v13;
  if (v17)
  {
    uint64_t v37 = v7;
    uint64_t v38 = v6;
    uint64_t v39 = v5;
    uint64_t v40 = v9;
    uint64_t v41 = a1;
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    sub_21F2C6D70(v18, (uint64_t)&v37 - v14, type metadata accessor for FeaturisedSession);
    uint64_t v44 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_21F2C3358(0, v17, 0);
    uint64_t v19 = v44;
    uint64_t v20 = *(void *)(v43 + 72);
    do
    {
      sub_21F2C6D70(v18, (uint64_t)v12, type metadata accessor for FeaturisedSession);
      uint64_t v21 = *v12;
      swift_bridgeObjectRetain();
      sub_21F2C3388((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F2C3358(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v44;
      }
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_21F2C3358(v22 > 1, v23 + 1, 1);
        uint64_t v19 = v44;
      }
      *(void *)(v19 + 16) = v23 + 1;
      *(void *)(v19 + 8 * v23 + 32) = v21;
      v18 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    size_t v24 = sub_21F2C6588(v19);
    swift_release();
    uint64_t v25 = v40;
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    uint64_t v28 = v42;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v42, &v15[*(int *)(v40 + 20)], v38);
    uint64_t v29 = (uint64_t)v39;
    sub_21F2B13D0((uint64_t)&v15[*(int *)(v25 + 24)], (uint64_t)v39);
    sub_21F2C3388((uint64_t)v15);
    unint64_t v30 = v41;
    *uint64_t v41 = v24;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v30 + *(int *)(v25 + 20), v28, v26);
    sub_21F2B458C(v29, (uint64_t)v30 + *(int *)(v25 + 24), &qword_26AD38738);
    return (*(uint64_t (**)(size_t *, void, uint64_t, uint64_t))(v43 + 56))(v30, 0, 1, v25);
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21F41FF28();
    __swift_project_value_buffer(v32, (uint64_t)qword_26AD3C910);
    unint64_t v33 = sub_21F41FF08();
    os_log_type_t v34 = sub_21F420678();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_21F29A000, v33, v34, "Zero sessions in CompositeSession", v35, 2u);
      MEMORY[0x223C4B440](v35, -1, -1);
    }

    unint64_t v36 = *(uint64_t (**)(size_t *, uint64_t, uint64_t, uint64_t))(v43 + 56);
    return v36(a1, 1, 1, v9);
  }
}

uint64_t sub_21F2C3148(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7930, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C3B2C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C31A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C3CB0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C31C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C3E20(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C31E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_26AD3AF08, type metadata accessor for FeaturisedTurn);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3220(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C3FA8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3240(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4114(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3260(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C49B8(a1, a2, a3, (void *)*v3, &qword_267EC7790, &qword_26AD3A8A0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3290(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7998, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C32CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7988, &qword_267EC7990);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C32FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4280(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C331C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7908, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3358(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C57B4(a1, a2, a3, (void *)*v3, &qword_26AD3AF30, &qword_26AD3AEC8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeaturisedSession(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F2C33E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C49B8(a1, a2, a3, (void *)*v3, &qword_267EC8CF0, &qword_26AD3A878);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3414(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C46B4(a1, a2, a3, *v3, &qword_267EC7F30);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C343C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7740, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3478(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C43E0(a1, a2, a3, *v3, &qword_267EC7910);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C34A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7918, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C34DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC78A0, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3518(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C43E0(a1, a2, a3, *v3, &qword_267EC78C0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3540(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7750, (uint64_t (*)(void))type metadata accessor for ThinContactGroundTruth);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C357C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4538(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C359C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5AB4(a1, a2, a3, *v3, &qword_267EC78B0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C35CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C46B4(a1, a2, a3, *v3, &qword_267EC7738);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C35F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4810(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3614(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C57B4(a1, a2, a3, (void *)*v3, &qword_267EC7E68, &qword_267EC7E70);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C49B8(a1, a2, a3, (void *)*v3, &qword_267EC7890, &qword_26AD3A9E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3674(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4B60(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3694(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4CFC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C36B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C4EA4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C36D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C502C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C36F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5C38(a1, a2, a3, (void *)*v3, &qword_267EC7F20, &qword_267EC7F28);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3724(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5198(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3744(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7980, MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3780(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7788, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C37BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C57B4(a1, a2, a3, (void *)*v3, &qword_267EC7EF0, &qword_267EC7EF8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C37EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C57B4(a1, a2, a3, (void *)*v3, &qword_267EC7F00, &qword_267EC7F08);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C381C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5320(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C383C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C54C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C385C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7938, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3898(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7870, &qword_267EC7878);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C38C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5634(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C38E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C57B4(a1, a2, a3, (void *)*v3, &qword_267EC7EB8, &qword_267EC7EC0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3918(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5944(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3938(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7850, &qword_26AD3A830);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3968(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC77A8, (uint64_t (*)(void))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C39A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5AB4(a1, a2, a3, *v3, &qword_267EC7ED8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C39D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5C38(a1, a2, a3, (void *)*v3, &qword_267EC7E98, &qword_267EC7EA0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3A04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7EA8, &qword_26AD38738);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3A34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_267EC7830, (uint64_t (*)(void))type metadata accessor for ContactSuggestionProvidedClassification);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3A70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C5DC8(a1, a2, a3, (void *)*v3, &qword_26AD3AF20, (uint64_t (*)(void))type metadata accessor for SessionGroundTruths);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C6010(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_21F2C3ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7E38, &qword_267EC7E40);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3AFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_21F2C616C(a1, a2, a3, (void *)*v3, &qword_267EC7E48, &qword_267EC7E50);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_21F2C3B2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7900);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C3CB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C3E20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = v8 << 6;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C3F88(char a1, int64_t a2, char a3, void *a4)
{
  return sub_21F2C5DC8(a1, a2, a3, a4, &qword_26AD3AF08, type metadata accessor for FeaturisedTurn);
}

uint64_t sub_21F2C3FA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4114(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4280(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AD3AF38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C43E0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  size_t v16 = 32 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4538(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7810);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C46B4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4810(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7950);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7958);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C49B8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4B60(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E88);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E90);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4CFC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E78);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E80);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C4EA4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AD38DF0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38E18);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C502C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F18);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5198(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F10);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5320(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7EE0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7EE8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C54C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC77B8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5634(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7EC8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 72 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C57B4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5944(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E30);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5AB4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  size_t v15 = 56 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5C38(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    void v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C5DC8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  size_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C6010(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7ED0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 8 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C616C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  size_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t sub_21F2C63AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E20);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E28);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

void *sub_21F2C6538(void *a1)
{
  return sub_21F2A7CA4(0, a1[2], 0, a1);
}

void *sub_21F2C654C(void *a1)
{
  return sub_21F2A812C(0, a1[2], 0, a1);
}

void *sub_21F2C6560(void *a1)
{
  return sub_21F2A823C(0, a1[2], 0, a1);
}

char *sub_21F2C6574(uint64_t a1)
{
  return sub_21F2A836C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

size_t sub_21F2C6588(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v49 = (char *)&v43 - v6;
  uint64_t v7 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  int64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v12 = (v10 + 32) & ~v10;
  uint64_t v52 = MEMORY[0x263F8EE78] + v12;
  unint64_t v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v46 = v9 + 48;
  uint64_t v47 = v9;
  uint64_t v45 = v10 | 7;
  size_t result = swift_bridgeObjectRetain();
  uint64_t v53 = 0;
  unint64_t v54 = 0;
  unint64_t v15 = 0;
  uint64_t v48 = v12;
LABEL_4:
  unint64_t v18 = *(void *)(a1 + 16);
  if (v15 != v18)
  {
    if (v15 < v18)
    {
      while (1)
      {
        uint64_t v19 = *(void *)(a1 + 32 + 8 * v15);
        swift_bridgeObjectRetain();
        size_t result = swift_bridgeObjectRelease();
        if (v19) {
          break;
        }
LABEL_9:
        ++v15;
        unint64_t v20 = *(void *)(a1 + 16);
        if (v15 == v20) {
          goto LABEL_36;
        }
        if (v15 >= v20) {
          goto LABEL_42;
        }
      }
      unint64_t v16 = *(void *)(v19 + 16);
      if (!v16)
      {
        (*v13)(v5, 1, 1, v7);
        size_t result = sub_21F2C6D10((uint64_t)v5);
        goto LABEL_9;
      }
      unint64_t v17 = 0;
      ++v15;
      while (1)
      {
        if (v17 >= v16) {
          goto LABEL_43;
        }
        char v50 = v11;
        uint64_t v21 = v19 + v12;
        uint64_t v22 = v47;
        uint64_t v23 = *(void *)(v47 + 72);
        unint64_t v54 = v17;
        sub_21F2C6D70(v21 + v23 * v17, (uint64_t)v5, type metadata accessor for FeaturisedTurn);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v5, 0, 1, v7);
        uint64_t v24 = (uint64_t)v49;
        sub_21F2B458C((uint64_t)v5, (uint64_t)v49, &qword_26AD3A8C0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v7) == 1)
        {
          swift_bridgeObjectRelease();
          int64_t v11 = v50;
          goto LABEL_37;
        }
        size_t result = sub_21F2C6DD8(v24, v51, type metadata accessor for FeaturisedTurn);
        unint64_t v25 = v50;
        uint64_t v26 = v53;
        if (!v53) {
          break;
        }
LABEL_34:
        BOOL v37 = __OFSUB__(v26, 1);
        uint64_t v38 = v26 - 1;
        if (v37) {
          goto LABEL_44;
        }
        uint64_t v53 = v38;
        ++v54;
        uint64_t v39 = v52;
        size_t result = sub_21F2C6DD8(v51, v52, type metadata accessor for FeaturisedTurn);
        uint64_t v52 = v39 + v23;
        int64_t v11 = v25;
        uint64_t v12 = v48;
        unint64_t v16 = *(void *)(v19 + 16);
        unint64_t v17 = v54;
        if (v54 == v16)
        {
          (*v13)(v5, 1, 1, v7);
          size_t result = sub_21F2C6D10((uint64_t)v5);
          goto LABEL_4;
        }
      }
      unint64_t v27 = v50[3];
      if ((uint64_t)((v27 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_46;
      }
      int64_t v28 = v27 & 0xFFFFFFFFFFFFFFFELL;
      if (v28 <= 1) {
        uint64_t v29 = 1;
      }
      else {
        uint64_t v29 = v28;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF08);
      uint64_t v30 = v48;
      uint64_t v53 = v29;
      unint64_t v25 = (void *)swift_allocObject();
      size_t result = _swift_stdlib_malloc_size(v25);
      if (!v23) {
        goto LABEL_47;
      }
      int64_t v31 = result - v30;
      if (result - v30 == 0x8000000000000000 && v23 == -1) {
        goto LABEL_48;
      }
      uint64_t v33 = v31 / v23;
      void v25[2] = v53;
      v25[3] = 2 * (v31 / v23);
      unint64_t v34 = (unint64_t)v25 + v30;
      uint64_t v35 = v50[3] >> 1;
      uint64_t v36 = v35 * v23;
      if (!v50[2])
      {
LABEL_33:
        uint64_t v52 = v34 + v36;
        uint64_t v26 = (v33 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        size_t result = swift_release();
        goto LABEL_34;
      }
      if (v25 < v50 || v34 >= (unint64_t)v50 + v48 + v36)
      {
        uint64_t v52 = v34;
        uint64_t v53 = v31 / v23;
        uint64_t v44 = v35 * v23;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v25 == v50)
        {
LABEL_32:
          v50[2] = 0;
          goto LABEL_33;
        }
        uint64_t v52 = v34;
        uint64_t v53 = v31 / v23;
        uint64_t v44 = v35 * v23;
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v36 = v44;
      unint64_t v34 = v52;
      uint64_t v33 = v53;
      goto LABEL_32;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_36:
  uint64_t v24 = (uint64_t)v49;
  (*v13)(v49, 1, 1, v7);
  swift_bridgeObjectRelease();
LABEL_37:
  swift_bridgeObjectRelease();
  size_t result = sub_21F2C6D10(v24);
  unint64_t v40 = v11[3];
  if (v40 < 2) {
    return (size_t)v11;
  }
  unint64_t v41 = v40 >> 1;
  BOOL v37 = __OFSUB__(v41, v53);
  unint64_t v42 = v41 - v53;
  if (!v37)
  {
    v11[2] = v42;
    return (size_t)v11;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of SessionStitcher.identifyCrossSessionRestatement(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for CompositeSession()
{
  return &type metadata for CompositeSession;
}

uint64_t sub_21F2C6A84()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_21F2C6ABC@<X0>(void *result@<X0>, void *(*a2)(void *__return_ptr, void *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v6 = result[1];
  char v7 = *((unsigned char *)result + 16);
  if (*((unsigned char *)result + 17) == 1)
  {
    *((unsigned char *)result + 17) = 0;
  }
  else if (*((unsigned char *)result + 16))
  {
    char v7 = 1;
  }
  else
  {
    v8[0] = *result;
    v8[1] = v6;
    size_t result = a2(v9, v8);
    uint64_t v5 = v9[0];
    uint64_t v6 = v9[1];
    char v7 = v10;
    *uint64_t v3 = v9[0];
    v3[1] = v6;
    *((unsigned char *)v3 + 16) = v7;
  }
  *(void *)a3 = v5;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = v7;
  return result;
}

void *sub_21F2C6B48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F2C6ABC(a1, *(void *(**)(void *__return_ptr, void *))(v2 + 16), a2);
}

unint64_t *sub_21F2C6B50@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_21F2C6C24(a1, (uint64_t *)(v2 + 16), type metadata accessor for FeaturisedSession, a2);
}

void *sub_21F2C6B80@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = result[1];
  uint64_t v4 = *(void *)(*(void *)a2 + 16);
  if (v3 == v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
LABEL_5:
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(unsigned char *)(a3 + 16) = v3 == v4;
    return result;
  }
  uint64_t v5 = *result + 1;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v3 + 1;
    if (!__OFADD__(v3, 1)) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

void *sub_21F2C6BD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F2C6B80(a1, v2 + 16, a2);
}

uint64_t sub_21F2C6BEC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t *sub_21F2C6C24@<X0>(unint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  unint64_t v4 = *result;
  uint64_t v5 = result[1];
  if (v5 < (uint64_t)*result)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = *a2;
  unint64_t v8 = *(void *)(*a2 + 16);
  if (v8 < v4 || (uint64_t)v8 < v5) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  *a4 = v7;
  a4[1] = v11;
  a4[2] = v4;
  a4[3] = (2 * v5) | 1;
  return (unint64_t *)swift_bridgeObjectRetain();
}

unint64_t *sub_21F2C6CE0@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_21F2C6C24(a1, (uint64_t *)(v2 + 16), type metadata accessor for FeaturisedTurn, a2);
}

uint64_t sub_21F2C6D10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F2C6D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2C6DD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F2C6E5C()
{
  unint64_t result = qword_267EC7F48;
  if (!qword_267EC7F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC7F48);
  }
  return result;
}

unint64_t sub_21F2C6EB4()
{
  unint64_t result = qword_267EC7F50[0];
  if (!qword_267EC7F50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EC7F50);
  }
  return result;
}

uint64_t sub_21F2C6F08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_21F2C6F1C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F2C6F64(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v8 = (char *)&v16 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      char v13 = sub_21F420588();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
      break;
    case 2u:
      swift_getAssociatedConformanceWitness();
      char v12 = sub_21F420518();
      goto LABEL_4;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      char v14 = sub_21F420588();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
      char v13 = v14 ^ 1;
      break;
    default:
      swift_getAssociatedConformanceWitness();
      char v12 = sub_21F420598();
LABEL_4:
      char v13 = v12;
      swift_bridgeObjectRelease();
      break;
  }
  return v13 & 1;
}

BOOL sub_21F2C727C()
{
  (*(void (**)(void, void))(*(void *)(*(void *)v0 + 96) + 24))(*(void *)(*(void *)v0 + 80), *(void *)(*(void *)v0 + 96));
  type metadata accessor for TagNominationFilter.TagMatchRule();
  sub_21F420428();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v1 = sub_21F420288();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t sub_21F2C73BC()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F2C73DC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagNominationFilter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F2C742C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_21F2C7434()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_21F2C74E8(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 4;
    if (v11 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_20;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_20:
          int v15 = (v14 | (v12 << (8 * v6))) + 4;
          unsigned int v11 = v14 + 4;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    switch(v11)
    {
      case 1u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v6) = 1;
        break;
      case 2u:
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + v6) = 2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v6) = 3;
        break;
      default:
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + v6) = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

uint64_t sub_21F2C76FC(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 4;
  if (v4 >= 4)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 4;
        unsigned int v4 = v7 + 4;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  switch(v4)
  {
    case 1u:
    case 3u:
      uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
      uint64_t result = v10(a1, AssociatedTypeWitness);
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

void *sub_21F2C7894(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 4;
  if (v7 >= 4)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 4;
        unsigned int v7 = v10 + 4;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  switch(v7)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      char v12 = 1;
      goto LABEL_20;
    case 2u:
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v6) = 2;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      char v12 = 3;
LABEL_20:
      *((unsigned char *)a1 + v6) = v12;
      break;
    default:
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v6) = 0;
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

unsigned __int8 *sub_21F2C7A64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 4;
    if (v7 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 4;
          unsigned int v7 = v10 + 4;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    switch(v7)
    {
      case 1u:
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 4;
    if (v12 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_28;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_28:
          int v16 = (v15 | (v13 << (8 * v6))) + 4;
          unsigned int v12 = v15 + 4;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    switch(v12)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        char v17 = 1;
        goto LABEL_35;
      case 2u:
        *(void *)a1 = *(void *)a2;
        a1[v6] = 2;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        char v17 = 3;
LABEL_35:
        a1[v6] = v17;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        a1[v6] = 0;
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

void *sub_21F2C7D34(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 4;
  if (v7 >= 4)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 4;
        unsigned int v7 = v10 + 4;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  switch(v7)
  {
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      char v12 = 1;
      break;
    case 2u:
      *a1 = *(void *)a2;
      char v12 = 2;
      break;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      char v12 = 3;
      break;
    default:
      char v12 = 0;
      *a1 = *(void *)a2;
      break;
  }
  *((unsigned char *)a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_21F2C7EF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 4;
    if (v7 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 4;
          unsigned int v7 = v10 + 4;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    switch(v7)
    {
      case 1u:
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 4;
    if (v12 >= 4)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_28;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_28:
          int v16 = (v15 | (v13 << (8 * v6))) + 4;
          unsigned int v12 = v15 + 4;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    switch(v12)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v17 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v17 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v17 = 3;
        break;
      default:
        char v17 = 0;
        *(void *)a1 = *(void *)a2;
        break;
    }
    a1[v6] = v17;
  }
  return a1;
}

uint64_t sub_21F2C81BC(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 4) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 253;
}

void sub_21F2C832C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFD)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 252) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v9 = a2 - 253;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x21F2C8518);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_21F2C8540(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  uint64_t result = a1[v2];
  if (result >= 4)
  {
    if (v2 <= 3) {
      uint64_t v4 = v2;
    }
    else {
      uint64_t v4 = 4;
    }
    switch(v4)
    {
      case 1:
        int v5 = *a1;
        goto LABEL_12;
      case 2:
        int v5 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v5 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v5 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v6 = (v5 | ((result - 4) << (8 * v2))) + 4;
        unsigned int v7 = v5 + 4;
        if (v2 >= 4) {
          uint64_t result = v7;
        }
        else {
          uint64_t result = v6;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_21F2C8630(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 8) {
    size_t v5 = 8;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 3)
  {
    unsigned int v6 = a2 - 4;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 4;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 4;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for TagNominationFilter.TagMatchRule()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F2C8740(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

BOOL sub_21F2C8748()
{
  return sub_21F2C727C();
}

uint64_t sub_21F2C8770()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t matched = type metadata accessor for TagNominationFilter.TagMatchRule();
  return sub_21F2C6F64(v1, matched) & 1;
}

uint64_t dispatch thunk of ContactSuggestionOutcomeExtractor.init(picsStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContactSuggestionOutcomeExtractor.extractSessionSuggestionOutcomes(session:classifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_21F2C87EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21F2C8800(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_21F2C8938(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification, (void (*)(BOOL, uint64_t, uint64_t))sub_21F2C3148);
}

uint64_t sub_21F2C8868(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_21F2C8938(a1, a2, a3, type metadata accessor for FeaturisedTurn, type metadata accessor for FeaturisedTurn, type metadata accessor for FeaturisedTurn, (void (*)(BOOL, uint64_t, uint64_t))sub_21F2C31E4);
}

uint64_t sub_21F2C88D0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_21F2C8938(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification, (void (*)(BOOL, uint64_t, uint64_t))sub_21F2C331C);
}

uint64_t sub_21F2C8938(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), void (*a7)(BOOL, uint64_t, uint64_t))
{
  unint64_t v25 = a7;
  uint64_t v30 = a6;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v10 = a4(0);
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v29 = (uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  int v15 = (char *)&v24 - v14;
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    unint64_t v17 = 0;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v26 = a5;
    uint64_t v27 = a3;
    while (v17 < *(void *)(a3 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v20 = *(void *)(v31 + 72);
      sub_21F2D8980(a3 + v19 + v20 * v17, (uint64_t)v15, a5);
      uint64_t v16 = v33;
      char v21 = v32(v15);
      if (v7)
      {
        sub_21F2D89E8((uint64_t)v15, a5);
        swift_release();
        swift_bridgeObjectRelease();
        return v16;
      }
      if (v21)
      {
        sub_21F2D68C4((uint64_t)v15, v29, v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v25(0, *(void *)(v18 + 16) + 1, 1);
        }
        uint64_t v18 = v34;
        unint64_t v23 = *(void *)(v34 + 16);
        unint64_t v22 = *(void *)(v34 + 24);
        if (v23 >= v22 >> 1)
        {
          v25(v22 > 1, v23 + 1, 1);
          uint64_t v18 = v34;
        }
        *(void *)(v18 + 16) = v23 + 1;
        uint64_t result = sub_21F2D68C4(v29, v18 + v19 + v23 * v20, v30);
        a5 = v26;
        a3 = v27;
      }
      else
      {
        uint64_t result = sub_21F2D89E8((uint64_t)v15, a5);
      }
      if (v28 == ++v17)
      {
        uint64_t v16 = v34;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v16;
  }
  return result;
}

uint64_t CoreDuetEvent.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_21F29E694(v5, (uint64_t)v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_21F41F198();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_21F29E8D4(v8);
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t v11 = 1;
    }
    else
    {
      sub_21F41F158();
      uint64_t v11 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v11, 1, v6);
    return sub_21F29FA48((uint64_t)v4, &qword_26AD38710);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v4, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
}

uint64_t FeaturisedSession.init(turns:sessionId:originalPlusId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for FeaturisedSession(0);
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_21F41F228();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  return sub_21F2B458C(a3, (uint64_t)a4 + *(int *)(v7 + 24), &qword_26AD38738);
}

uint64_t type metadata accessor for FeaturisedSession(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3A9F0);
}

uint64_t CoreDuetEvent.init(eventId:features:eventType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t CoreDuetEvent.eventId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreDuetEvent.features.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoreDuetEvent.eventType.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

double CoreDuetEvent.init(features:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_21F29EC14(a1);
  if (!v5) {
    goto LABEL_17;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  uint64_t v8 = sub_21F29EC2C(a1);
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v27 = MEMORY[0x263F8EE88];
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v26 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v20 = v10;
    uint64_t v21 = v6;
    uint64_t v22 = v7;
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t v15 = a1 + 32;
    do
    {
      sub_21F29F920(v15, (uint64_t)v25);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      *(void *)&long long v23 = swift_allocObject();
      sub_21F29F920((uint64_t)v25, v23 + 16);
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      uint64_t DynamicType = swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      if (sub_21F2CD60C((uint64_t *)&v23, DynamicType))
      {
        sub_21F2A09A8(v25, (uint64_t)&v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21F2C33E4(0, *(void *)(v14 + 16) + 1, 1);
        }
        uint64_t v14 = v26;
        unint64_t v18 = *(void *)(v26 + 16);
        unint64_t v17 = *(void *)(v26 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_21F2C33E4(v17 > 1, v18 + 1, 1);
          uint64_t v14 = v26;
        }
        *(void *)(v14 + 16) = v18 + 1;
        sub_21F2A09A8(&v23, v14 + 40 * v18 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      }
      v15 += 40;
      --v13;
    }
    while (v13);
    uint64_t v12 = v26;
    uint64_t v6 = v21;
    uint64_t v7 = v22;
    uint64_t v10 = v20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  return result;
}

uint64_t CoreDuetEvent.with(eventId:removedFeatures:newFeatures:eventType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v9 = v7[2];
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v35 = v7[1];
  uint64_t v33 = v7[3];
  uint64_t v32 = *v7;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    if (!*(void *)(a4 + 16)) {
      goto LABEL_22;
    }
    goto LABEL_9;
  }
  *(void *)&v42[0] = MEMORY[0x263F8EE78];
  sub_21F2C3414(0, v10, 0);
  uint64_t v13 = *(void *)&v42[0];
  uint64_t v14 = (uint64_t *)(a3 + 32);
  unint64_t v15 = *(void *)(*(void *)&v42[0] + 16);
  do
  {
    uint64_t v16 = *v14;
    *(void *)&v42[0] = v13;
    unint64_t v17 = *(void *)(v13 + 24);
    if (v15 >= v17 >> 1)
    {
      sub_21F2C3414(v17 > 1, v15 + 1, 1);
      uint64_t v13 = *(void *)&v42[0];
    }
    *(void *)(v13 + 16) = v15 + 1;
    *(void *)(v13 + 8 * v15 + 32) = v16;
    v14 += 2;
    ++v15;
    --v10;
  }
  while (v10);
  uint64_t v18 = sub_21F2D679C(v13);
  swift_release();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_21F2D5EFC(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v20;
  if (*(void *)(a4 + 16))
  {
LABEL_9:
    *(void *)&v42[0] = a4;
    swift_bridgeObjectRetain();
    sub_21F2A5A5C(v9);
    uint64_t v43 = v11;
    uint64_t v44 = MEMORY[0x263F8EE88];
    uint64_t v21 = *(void *)(a4 + 16);
    swift_bridgeObjectRetain();
    if (v21)
    {
      uint64_t v22 = MEMORY[0x263F8EE78];
      uint64_t v23 = a4 + 32;
      do
      {
        sub_21F29F920(v23, (uint64_t)v42);
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        *(void *)&long long v40 = swift_allocObject();
        sub_21F29F920((uint64_t)v42, v40 + 16);
        __swift_project_boxed_opaque_existential_1(&v40, v41);
        uint64_t DynamicType = swift_getDynamicType();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v40);
        if (sub_21F2CD60C((uint64_t *)&v40, DynamicType))
        {
          sub_21F2A09A8(v42, (uint64_t)&v40);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_21F2C33E4(0, *(void *)(v22 + 16) + 1, 1);
          }
          uint64_t v22 = v43;
          unint64_t v26 = *(void *)(v43 + 16);
          unint64_t v25 = *(void *)(v43 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_21F2C33E4(v25 > 1, v26 + 1, 1);
            uint64_t v22 = v43;
          }
          *(void *)(v22 + 16) = v26 + 1;
          sub_21F2A09A8(&v40, v22 + 40 * v26 + 32);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
        }
        v23 += 40;
        --v21;
      }
      while (v21);
      uint64_t v9 = v43;
    }
    else
    {
      uint64_t v9 = v11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v28 = v35;
  uint64_t v27 = a5;
  uint64_t v29 = a1;
  if (!a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = v32;
    uint64_t v30 = a6;
    if (a6) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v28 = a2;
  uint64_t v30 = a6;
  if (!a6)
  {
LABEL_24:
    uint64_t v27 = v33;
    uint64_t v30 = swift_bridgeObjectRetain();
  }
LABEL_25:
  *a7 = v29;
  a7[1] = v28;
  a7[2] = v9;
  a7[3] = v27;
  a7[4] = v30;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2C93E4(uint64_t a1)
{
  sub_21F2D8A48();
  uint64_t result = sub_21F420538();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_21F2CE610(&v14, *(unsigned __int8 *)(*(void *)(a1 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FeaturisedTurn.init(turnId:features:coreDuetEvents:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  int64_t v11 = (int *)type metadata accessor for FeaturisedTurn(0);
  *(void *)(a5 + v11[6]) = a2;
  *(void *)(a5 + v11[7]) = a3;
  return sub_21F2B458C(a4, a5 + v11[5], &qword_26AD38710);
}

uint64_t FeaturisedTurn.turnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FeaturisedTurn.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeaturisedTurn(0);
  return sub_21F2C2300(v1 + *(int *)(v3 + 20), a1, &qword_26AD38710);
}

uint64_t FeaturisedTurn.features.getter()
{
  type metadata accessor for FeaturisedTurn(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedTurn.coreDuetEvents.getter()
{
  type metadata accessor for FeaturisedTurn(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedTurn.friendlyName.getter()
{
  sub_21F420948();
  swift_bridgeObjectRelease();
  sub_21F41F228();
  sub_21F2D8A9C((unint64_t *)&qword_26AD3A848, MEMORY[0x263F07508]);
  sub_21F420DA8();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E180(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F08);
    sub_21F2D6868();
    sub_21F420078();
    swift_bridgeObjectRelease();
  }
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  return 0x7369727574616546;
}

uint64_t FeaturisedTurn.postITNUtterance.getter()
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E180(v0);
  swift_bridgeObjectRelease();
  if (!v1) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F08);
  sub_21F2D6868();
  uint64_t v2 = sub_21F420078();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Array<A>.getSessionId()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(type metadata accessor for FeaturisedTurn(0) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = sub_21F41F228();
    uint64_t v13 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, v5, v6);
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = sub_21F41F228();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t Array<A>.getOriginalPlusId()@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v57);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (uint64_t)&v45 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v45 - v20;
  unint64_t v56 = *(void *)(a1 + 16);
  if (!v56)
  {
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
LABEL_22:
    uint64_t v35 = a2;
    uint64_t v36 = 1;
LABEL_23:
    v31(v35, v36, 1, v4);
    return swift_bridgeObjectRelease();
  }
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  unint64_t v49 = v11;
  uint64_t v50 = v17;
  uint64_t v45 = v7;
  uint64_t v51 = a2;
  uint64_t v54 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v53 = *(void *)(v8 + 72);
  uint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  uint64_t v46 = v5;
  uint64_t v55 = (uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  while (1)
  {
    uint64_t v24 = v22;
    uint64_t v25 = v4;
    uint64_t v26 = a1;
    uint64_t v52 = v54 + v53 * v23;
    uint64_t v27 = v58;
    sub_21F2D8980(v52, v58, type metadata accessor for FeaturisedTurn);
    uint64_t v28 = *(void *)(v27 + *(int *)(v57 + 24));
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = v28 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21F29F920(v30, (uint64_t)&v59);
        sub_21F29F920((uint64_t)&v59, (uint64_t)v61);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        type metadata accessor for PlusClientEventIdFeature(0);
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
        v30 += 40;
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          a1 = v26;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v59, (uint64_t)v61);
      a1 = v26;
      uint64_t v4 = v25;
    }
    else
    {
      a1 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_9:
      uint64_t v62 = 0;
      memset(v61, 0, sizeof(v61));
      uint64_t v4 = v25;
    }
    sub_21F2C2300((uint64_t)v61, (uint64_t)&v59, &qword_26AD3A880);
    uint64_t v22 = v24;
    if (v60)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for PlusClientEventIdFeature(0);
      if (swift_dynamicCast())
      {
        swift_retain();
        sub_21F41FAB8();
        swift_release_n();
        sub_21F29FA48((uint64_t)v61, &qword_26AD3A880);
        uint64_t v31 = *v24;
        (*v24)(v21, 0, 1, v4);
        goto LABEL_16;
      }
    }
    else
    {
      sub_21F29FA48((uint64_t)&v59, &qword_26AD3A880);
    }
    sub_21F29FA48((uint64_t)v61, &qword_26AD3A880);
    uint64_t v31 = *v24;
    (*v24)(v21, 1, 1, v4);
LABEL_16:
    swift_bridgeObjectRelease();
    sub_21F2D89E8(v58, type metadata accessor for FeaturisedTurn);
    swift_bridgeObjectRelease();
    uint64_t v32 = *v55;
    int v33 = (*v55)(v21, 1, v4);
    uint64_t result = sub_21F29FA48((uint64_t)v21, &qword_26AD38738);
    if (v33 != 1) {
      break;
    }
    if (++v23 == v56) {
      goto LABEL_21;
    }
  }
  if (v23 == v56)
  {
LABEL_21:
    a2 = v51;
    goto LABEL_22;
  }
  if (v23 >= v56)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = (uint64_t)v49;
    sub_21F2D8980(v52, (uint64_t)v49, type metadata accessor for FeaturisedTurn);
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v39 = v47;
    sub_21F29EBA0(v38, v47);
    swift_bridgeObjectRelease();
    sub_21F2D89E8(v37, type metadata accessor for FeaturisedTurn);
    uint64_t v40 = v48;
    sub_21F2B458C(v39, v48, &qword_26AD38738);
    uint64_t v41 = v50;
    sub_21F2C2300(v40, v50, &qword_26AD38738);
    uint64_t result = v32((char *)v41, 1, v4);
    if (result != 1)
    {
      unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
      uint64_t v43 = v45;
      v42(v45, v41, v4);
      sub_21F29FA48(v40, &qword_26AD38738);
      uint64_t v44 = v51;
      v42(v51, (uint64_t)v43, v4);
      uint64_t v35 = v44;
      uint64_t v36 = 0;
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.getOriginalRequestID(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v91 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v108 = (char *)&v86 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v107 = (char *)&v86 - v11;
  uint64_t v96 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v12 = *(void *)(v96 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v96);
  uint64_t v90 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v109 = (uint64_t)&v86 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v99 = (uint64_t)&v86 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v89 = (uint64_t)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v87 = (uint64_t)&v86 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v88 = (uint64_t)&v86 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  int v33 = (char *)&v86 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v95 = (uint64_t)&v86 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v97 = (char *)&v86 - v36;
  sub_21F29F920(a1, (uint64_t)&v122);
  unint64_t v102 = *(void *)(a2 + 16);
  uint64_t v100 = a2;
  if (!v102)
  {
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_17:
    uint64_t v54 = v92;
    goto LABEL_48;
  }
  uint64_t v104 = a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v113 = v6 + 16;
  uint64_t v103 = *(void *)(v12 + 72);
  uint64_t v115 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v112 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v111 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  unint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v94 = v6;
  uint64_t v106 = v17;
  uint64_t v86 = v33;
  while (1)
  {
    uint64_t v105 = v37;
    sub_21F2D8980(v104 + v103 * v37, (uint64_t)v17, type metadata accessor for FeaturisedTurn);
    uint64_t v38 = v123;
    uint64_t v39 = v124;
    __swift_project_boxed_opaque_existential_1(&v122, v123);
    uint64_t v40 = v38;
    uint64_t v41 = v116;
    uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v40, v39);
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43) {
      break;
    }
    uint64_t v45 = *v41;
    (*v41)(v30, 1, 1, v5);
LABEL_10:
    uint64_t v51 = v105;
    uint64_t v17 = v106;
LABEL_12:
    swift_bridgeObjectRelease();
    sub_21F2D89E8((uint64_t)v17, type metadata accessor for FeaturisedTurn);
    uint64_t v37 = v51 + 1;
    if (v37 == v102) {
      goto LABEL_17;
    }
  }
  unint64_t v93 = (unint64_t)v41 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  unint64_t v101 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v98 = v42;
  unint64_t v44 = v42 + v101;
  uint64_t v110 = *(void *)(v94 + 72);
  uint64_t v114 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
  while (1)
  {
    v114(v30, v44, v5);
    uint64_t v45 = *v116;
    (*v116)(v30, 0, 1, v5);
    uint64_t v46 = *v115;
    if ((*v115)(v30, 1, v5) == 1)
    {
      uint64_t v51 = v105;
      uint64_t v17 = v106;
      goto LABEL_12;
    }
    uint64_t v117 = v45;
    uint64_t v47 = *v112;
    uint64_t v48 = v108;
    (*v112)(v108, v30, v5);
    sub_21F2D8A9C((unint64_t *)&qword_26AD3A840, MEMORY[0x263F07508]);
    char v49 = sub_21F420098();
    uint64_t v50 = *v111;
    (*v111)(v48, v5);
    if (v49) {
      break;
    }
    v44 += v110;
    if (!--v43)
    {
      uint64_t v45 = v117;
      v117(v30, 1, 1, v5);
      goto LABEL_10;
    }
  }
  uint64_t v108 = (char *)v47;
  swift_bridgeObjectRelease();
  sub_21F2D89E8((uint64_t)v106, type metadata accessor for FeaturisedTurn);
  unint64_t v52 = v102;
  unint64_t v53 = v105;
  if (v105 == v102)
  {
    v117(v92, 1, 1, v5);
LABEL_49:
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v122);
  }
  uint64_t v106 = (char *)v46;
  uint64_t v55 = v50;
  unint64_t v56 = v86;
LABEL_20:
  if (v53 >= v52) {
    goto LABEL_55;
  }
  uint64_t v105 = v53;
  uint64_t v98 = v104 + v53 * v103;
  uint64_t v57 = v99;
  sub_21F2D8980(v98, v99, type metadata accessor for FeaturisedTurn);
  uint64_t v58 = *(void *)(v57 + *(int *)(v96 + 24));
  uint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    uint64_t v60 = v58 + 32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v60, (uint64_t)&v118);
      sub_21F29F920((uint64_t)&v118, (uint64_t)v120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      sub_21F41F858();
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v118);
      v60 += 40;
      if (!--v59)
      {
        swift_bridgeObjectRelease();
        unint64_t v52 = v102;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v118, (uint64_t)v120);
    unint64_t v52 = v102;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    uint64_t v121 = 0;
    memset(v120, 0, sizeof(v120));
  }
  sub_21F2C2300((uint64_t)v120, (uint64_t)&v118, &qword_26AD3A880);
  if (v119)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    sub_21F41F858();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      uint64_t v61 = 0;
      goto LABEL_34;
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v118, &qword_26AD3A880);
  }
  uint64_t v61 = 1;
LABEL_34:
  sub_21F29FA48((uint64_t)v120, &qword_26AD3A880);
  uint64_t v62 = v97;
  v117(v97, v61, 1, v5);
  swift_bridgeObjectRelease();
  sub_21F2D89E8(v99, type metadata accessor for FeaturisedTurn);
  uint64_t v63 = (uint64_t)v62;
  uint64_t v64 = v95;
  sub_21F2B458C(v63, v95, &qword_26AD38738);
  swift_bridgeObjectRelease();
  int v65 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v106)(v64, 1, v5);
  sub_21F29FA48(v64, &qword_26AD38738);
  if (v65 == 1)
  {
    if (v105 == v52)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    unint64_t v66 = v105 + 1;
    if (__OFADD__(v105, 1))
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v66 != v52)
    {
      while (v66 < v52)
      {
        uint64_t v105 = v66;
        sub_21F2D8980(v104 + v66 * v103, v109, type metadata accessor for FeaturisedTurn);
        uint64_t v67 = v123;
        uint64_t v68 = v124;
        __swift_project_boxed_opaque_existential_1(&v122, v123);
        uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
        uint64_t v70 = *(void *)(v69 + 16);
        if (v70)
        {
          unint64_t v71 = v69 + v101;
          while (1)
          {
            v114(v56, v71, v5);
            v117(v56, 0, 1, v5);
            if (v46(v56, 1, v5) == 1) {
              break;
            }
            uint64_t v72 = v107;
            ((void (*)(char *, char *, uint64_t))v108)(v107, v56, v5);
            char v73 = sub_21F420098();
            v55(v72, v5);
            if (v73)
            {
              swift_bridgeObjectRelease();
              sub_21F2D89E8(v109, type metadata accessor for FeaturisedTurn);
              unint64_t v52 = v102;
              unint64_t v53 = v105;
              if (v105 == v102) {
                goto LABEL_47;
              }
              goto LABEL_20;
            }
            v71 += v110;
            if (!--v70) {
              goto LABEL_44;
            }
          }
        }
        else
        {
LABEL_44:
          v117(v56, 1, 1, v5);
        }
        swift_bridgeObjectRelease();
        sub_21F2D89E8(v109, type metadata accessor for FeaturisedTurn);
        unint64_t v66 = v105 + 1;
        if (__OFADD__(v105, 1)) {
          goto LABEL_54;
        }
        unint64_t v52 = v102;
        if (v66 == v102) {
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    goto LABEL_47;
  }
  if (v105 == v52)
  {
LABEL_47:
    uint64_t v54 = v92;
    uint64_t v45 = v117;
LABEL_48:
    v45(v54, 1, 1, v5);
    goto LABEL_49;
  }
  uint64_t v75 = v90;
  sub_21F2D8980(v98, v90, type metadata accessor for FeaturisedTurn);
  uint64_t v76 = swift_bridgeObjectRetain();
  uint64_t v77 = v87;
  sub_21F29E668(v76, v87);
  swift_bridgeObjectRelease();
  sub_21F2D89E8(v75, type metadata accessor for FeaturisedTurn);
  uint64_t v78 = v77;
  uint64_t v79 = v88;
  sub_21F2B458C(v78, v88, &qword_26AD38738);
  uint64_t v80 = v89;
  sub_21F2C2300(v79, v89, &qword_26AD38738);
  int v81 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v106)(v80, 1, v5);
  uint64_t v82 = v117;
  if (v81 != 1)
  {
    uint64_t v83 = v91;
    uint64_t v84 = v108;
    ((void (*)(char *, uint64_t, uint64_t))v108)(v91, v80, v5);
    sub_21F29FA48(v79, &qword_26AD38738);
    uint64_t v85 = v92;
    ((void (*)(char *, char *, uint64_t))v84)(v92, v83, v5);
    v82(v85, 0, 1, v5);
    goto LABEL_49;
  }
LABEL_58:
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v122);
  __break(1u);
  return result;
}

uint64_t sub_21F2CAEC0()
{
  type metadata accessor for FeaturisedSession(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80F0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC8058 = 91;
  unk_267EC8060 = 0xE100000000000000;
  return result;
}

uint64_t FeaturisedSession.turns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedSession.sessionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeaturisedSession(0) + 20);
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeaturisedSession.originalPlusId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeaturisedSession(0);
  return sub_21F2C2300(v1 + *(int *)(v3 + 24), a1, &qword_26AD38738);
}

uint64_t FeaturisedSession.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for FeaturisedSession(0);
  uint64_t v13 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v15 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 16))
  {
    uint64_t v16 = *(void *)(type metadata accessor for FeaturisedTurn(0) - 8);
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    v17(v8, a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      uint64_t v18 = v30;
      v17((char *)v15 + *(int *)(v30 + 20), (unint64_t)v12, v9);
      Array<A>.getOriginalPlusId()(a1, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_21F2B458C((uint64_t)v6, (uint64_t)v15 + *(int *)(v18 + 24), &qword_26AD38738);
      *uint64_t v15 = a1;
      uint64_t v19 = v31;
      sub_21F2D68C4((uint64_t)v15, v31, type metadata accessor for FeaturisedSession);
      uint64_t v20 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19, v20, 1, v18);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_21F29FA48((uint64_t)v8, &qword_26AD38738);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21F41FF28();
  __swift_project_value_buffer(v21, (uint64_t)qword_26AD3C910);
  uint64_t v22 = sub_21F41FF08();
  os_log_type_t v23 = sub_21F420678();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v19 = v31;
  if (v24)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v33 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    if (qword_267EC7198 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_267EC8058;
    unint64_t v28 = unk_267EC8060;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_21F2A02C4(v27, v28, &v33);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v22, v23, "%s FeaturisedSession not created, no sessionId available", v25, 0xCu);
    uint64_t v20 = 1;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v26, -1, -1);
    MEMORY[0x223C4B440](v25, -1, -1);
  }
  else
  {

    uint64_t v20 = 1;
  }
  uint64_t v18 = v30;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19, v20, 1, v18);
}

uint64_t FeaturisedSession.filter(_:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v8 = *v3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_21F2C8938(a1, a2, v8, type metadata accessor for FeaturisedTurn, type metadata accessor for FeaturisedTurn, type metadata accessor for FeaturisedTurn, (void (*)(BOOL, uint64_t, uint64_t))sub_21F2C31E4);
  if (!v4)
  {
    uint64_t v10 = result;
    uint64_t v11 = type metadata accessor for FeaturisedSession(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = (char *)v3 + v12;
    uint64_t v14 = (char *)a3 + v12;
    uint64_t v15 = sub_21F41F228();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
    uint64_t result = sub_21F2C2300((uint64_t)v3 + *(int *)(v11 + 24), (uint64_t)a3 + *(int *)(v11 + 24), &qword_26AD38738);
    *a3 = v10;
  }
  return result;
}

uint64_t FeaturisedSession.findEvent(eventId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v42 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v37 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v41 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (uint64_t)&v35 - v11;
  uint64_t v12 = *v3;
  uint64_t v35 = v6;
  uint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v39 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v44 = v12;
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v43 = 0;
  while (1)
  {
    unint64_t v23 = v43;
    unint64_t v24 = *(void *)(v44 + 16);
    if (v43 == v24)
    {
      uint64_t v25 = 1;
      uint64_t v27 = (uint64_t)v41;
      uint64_t v26 = v42;
      uint64_t v28 = v40;
      goto LABEL_15;
    }
    uint64_t v27 = (uint64_t)v41;
    uint64_t v26 = v42;
    uint64_t v28 = v40;
    if (v43 >= v24) {
      break;
    }
    sub_21F2D8980(v44+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v43, v40, type metadata accessor for FeaturisedTurn);
    uint64_t v25 = 0;
    ++v23;
LABEL_15:
    (*v39)(v28, v25, 1, v26);
    sub_21F2B458C(v28, v27, &qword_26AD3A8C0);
    if ((*v38)(v27, 1, v26) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v34 = v36;
      v36[4] = 0;
      _OWORD *v34 = 0u;
      v34[1] = 0u;
      return result;
    }
    unint64_t v43 = v23;
    uint64_t v29 = v27;
    uint64_t v30 = v37;
    sub_21F2D68C4(v29, v37, type metadata accessor for FeaturisedTurn);
    uint64_t v31 = *(void *)(v30 + *(int *)(v26 + 28));
    swift_bridgeObjectRetain();
    sub_21F2D89E8(v30, type metadata accessor for FeaturisedTurn);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v32 = v31;
    if (v31)
    {
      unint64_t v14 = 0;
      uint64_t v15 = (uint64_t *)(v31 + 64);
      while (1)
      {
        unint64_t v16 = *(void *)(v32 + 16);
        if (v14 == v16) {
          break;
        }
        if (v14 >= v16)
        {
          __break(1u);
          goto LABEL_22;
        }
        uint64_t v18 = *(v15 - 4);
        uint64_t v17 = *(v15 - 3);
        uint64_t v19 = *(v15 - 2);
        uint64_t v20 = *(v15 - 1);
        uint64_t v21 = *v15;
        if (v18 == a1 && v17 == a2)
        {
          uint64_t v18 = a1;
          uint64_t v17 = a2;
LABEL_19:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease_n();
          uint64_t v33 = v36;
          *uint64_t v36 = v18;
          v33[1] = v17;
          v33[2] = v19;
          v33[3] = v20;
          v33[4] = v21;
          return result;
        }
        v15 += 5;
        ++v14;
        uint64_t result = sub_21F420DF8();
        if (result) {
          goto LABEL_19;
        }
      }
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t FeaturisedSession.getOriginalRequestID(for:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v87 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v106 = (char *)&v86 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v107 = (char *)&v86 - v10;
  uint64_t v96 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v11 = *(void *)(v96 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v96);
  uint64_t v90 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v108 = (uint64_t)&v86 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v99 = (uint64_t)&v86 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v89 = (uint64_t)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v86 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v88 = (uint64_t)&v86 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v91 = (char *)&v86 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v95 = (uint64_t)&v86 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v97 = (char *)&v86 - v35;
  uint64_t v36 = *v2;
  sub_21F29F920(a1, (uint64_t)&v122);
  uint64_t v104 = *(void *)(v36 + 16);
  if (!v104)
  {
    char v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    goto LABEL_47;
  }
  uint64_t v86 = v25;
  uint64_t v103 = v36 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v112 = v5 + 16;
  uint64_t v102 = *(void *)(v11 + 72);
  uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  unint64_t v116 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v111 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v94 = v5;
  uint64_t v110 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v101 = v36;
  swift_bridgeObjectRetain();
  unint64_t v38 = 0;
  uint64_t v117 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  while (1)
  {
    unint64_t v105 = v38;
    sub_21F2D8980(v103 + v102 * v38, (uint64_t)v16, type metadata accessor for FeaturisedTurn);
    uint64_t v39 = v123;
    uint64_t v40 = v124;
    __swift_project_boxed_opaque_existential_1(&v122, v123);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
    uint64_t v42 = *(void *)(v41 + 16);
    if (v42) {
      break;
    }
    char v49 = *v37;
    (*v37)(v30, 1, 1, v4);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_21F2D89E8((uint64_t)v16, type metadata accessor for FeaturisedTurn);
    unint64_t v38 = v105 + 1;
    if (v105 + 1 == v104) {
      goto LABEL_47;
    }
  }
  unint64_t v93 = (unint64_t)v37 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  unint64_t v100 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  uint64_t v98 = v41;
  unint64_t v43 = v41 + v100;
  uint64_t v109 = *(void *)(v94 + 72);
  uint64_t v115 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
  while (1)
  {
    v115(v30, v43, v4);
    uint64_t v113 = *v37;
    v113(v30, 0, 1, v4);
    uint64_t v114 = *v116;
    if (v114(v30, 1, v4) == 1)
    {
      char v49 = v113;
      goto LABEL_11;
    }
    uint64_t v44 = *v111;
    uint64_t v45 = v106;
    (*v111)(v106, v30, v4);
    sub_21F2D8A9C((unint64_t *)&qword_26AD3A840, MEMORY[0x263F07508]);
    uint64_t v46 = (uint64_t)v16;
    char v47 = sub_21F420098();
    uint64_t v48 = *v110;
    (*v110)(v45, v4);
    if (v47) {
      break;
    }
    v43 += v109;
    --v42;
    uint64_t v37 = v117;
    unint64_t v16 = (char *)v46;
    if (!v42)
    {
      char v49 = v113;
      v113(v30, 1, 1, v4);
      goto LABEL_11;
    }
  }
  uint64_t v106 = (char *)v44;
  swift_bridgeObjectRelease();
  sub_21F2D89E8(v46, type metadata accessor for FeaturisedTurn);
  unint64_t v50 = v105;
  char v49 = v113;
  uint64_t v51 = v91;
  if (v105 == v104) {
    goto LABEL_47;
  }
  uint64_t v52 = v101;
LABEL_18:
  if ((v50 & 0x8000000000000000) != 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v50 >= *(void *)(v52 + 16))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  unint64_t v105 = v50;
  uint64_t v53 = v103 + v50 * v102;
  uint64_t v54 = v99;
  sub_21F2D8980(v53, v99, type metadata accessor for FeaturisedTurn);
  uint64_t v55 = *(void *)(v54 + *(int *)(v96 + 24));
  uint64_t v56 = *(void *)(v55 + 16);
  if (v56)
  {
    uint64_t v57 = v55 + 32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_21F29F920(v57, (uint64_t)&v118);
      sub_21F29F920((uint64_t)&v118, (uint64_t)v120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      sub_21F41F858();
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v118);
      v57 += 40;
      if (!--v56)
      {
        swift_bridgeObjectRelease();
        char v49 = v113;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v118, (uint64_t)v120);
    char v49 = v113;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_26:
    uint64_t v121 = 0;
    memset(v120, 0, sizeof(v120));
  }
  sub_21F2C2300((uint64_t)v120, (uint64_t)&v118, &qword_26AD3A880);
  if (v119)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    sub_21F41F858();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_21F41FAB8();
      swift_release_n();
      uint64_t v58 = 0;
      goto LABEL_33;
    }
  }
  else
  {
    sub_21F29FA48((uint64_t)&v118, &qword_26AD3A880);
  }
  uint64_t v58 = 1;
LABEL_33:
  sub_21F29FA48((uint64_t)v120, &qword_26AD3A880);
  uint64_t v59 = v97;
  v49(v97, v58, 1, v4);
  swift_bridgeObjectRelease();
  sub_21F2D89E8(v99, type metadata accessor for FeaturisedTurn);
  uint64_t v60 = (uint64_t)v59;
  uint64_t v61 = v95;
  sub_21F2B458C(v60, v95, &qword_26AD38738);
  uint64_t v62 = v101;
  swift_bridgeObjectRelease();
  unsigned int v63 = v114((char *)v61, 1, v4);
  sub_21F29FA48(v61, &qword_26AD38738);
  if (v63 == 1)
  {
    if (v105 == v104)
    {
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    unint64_t v64 = v105 + 1;
    if (__OFADD__(v105, 1))
    {
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    unint64_t v65 = v105 + 1;
    if (v64 != v104)
    {
      while ((v64 & 0x8000000000000000) == 0)
      {
        if (v65 >= *(void *)(v62 + 16)) {
          goto LABEL_54;
        }
        unint64_t v105 = v65;
        sub_21F2D8980(v103 + v65 * v102, v108, type metadata accessor for FeaturisedTurn);
        uint64_t v66 = v123;
        uint64_t v67 = v124;
        __swift_project_boxed_opaque_existential_1(&v122, v123);
        uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 16))(v66, v67);
        uint64_t v69 = *(void *)(v68 + 16);
        if (v69)
        {
          unint64_t v70 = v68 + v100;
          while (1)
          {
            v115(v51, v70, v4);
            v49(v51, 0, 1, v4);
            if (v114(v51, 1, v4) == 1) {
              break;
            }
            unint64_t v71 = v107;
            ((void (*)(char *, char *, uint64_t))v106)(v107, v51, v4);
            char v72 = sub_21F420098();
            v48(v71, v4);
            if (v72)
            {
              swift_bridgeObjectRelease();
              sub_21F2D89E8(v108, type metadata accessor for FeaturisedTurn);
              unint64_t v50 = v105;
              uint64_t v52 = v101;
              char v49 = v113;
              if (v105 == v104) {
                goto LABEL_47;
              }
              goto LABEL_18;
            }
            v70 += v109;
            --v69;
            char v49 = v113;
            if (!v69) {
              goto LABEL_44;
            }
          }
        }
        else
        {
LABEL_44:
          v49(v51, 1, 1, v4);
        }
        swift_bridgeObjectRelease();
        sub_21F2D89E8(v108, type metadata accessor for FeaturisedTurn);
        unint64_t v65 = v105 + 1;
        if (__OFADD__(v105, 1)) {
          goto LABEL_55;
        }
        uint64_t v62 = v101;
        if (v65 == v104) {
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    goto LABEL_47;
  }
  if (v105 == v104)
  {
LABEL_47:
    char v73 = v92;
    uint64_t v74 = 1;
LABEL_48:
    v49(v73, v74, 1, v4);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v122);
  }
  if (v105 >= *(void *)(v62 + 16))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v76 = v90;
  sub_21F2D8980(v53, v90, type metadata accessor for FeaturisedTurn);
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v78 = (uint64_t)v86;
  sub_21F29E668(v77, (uint64_t)v86);
  swift_bridgeObjectRelease();
  sub_21F2D89E8(v76, type metadata accessor for FeaturisedTurn);
  uint64_t v79 = v78;
  uint64_t v80 = v88;
  sub_21F2B458C(v79, v88, &qword_26AD38738);
  uint64_t v81 = v89;
  sub_21F2C2300(v80, v89, &qword_26AD38738);
  unsigned int v82 = v114((char *)v81, 1, v4);
  uint64_t v83 = v106;
  if (v82 != 1)
  {
    uint64_t v84 = v87;
    ((void (*)(char *, uint64_t, uint64_t))v106)(v87, v81, v4);
    sub_21F29FA48(v80, &qword_26AD38738);
    uint64_t v85 = v92;
    ((void (*)(char *, char *, uint64_t))v83)(v92, v84, v4);
    char v73 = v85;
    uint64_t v74 = 0;
    goto LABEL_48;
  }
LABEL_61:
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v122);
  __break(1u);
  return result;
}

uint64_t FeaturisedSession.count.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_21F2CC758(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_21F4208B8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F41F338();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_21F4208A8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v10 = sub_21F2CE730(v7, result + 1);
    uint64_t v22 = v10;
    if (*(void *)(v10 + 24) <= *(void *)(v10 + 16))
    {
      swift_retain();
      sub_21F2CEB8C();
      uint64_t v11 = v22;
    }
    else
    {
      uint64_t v11 = v10;
      swift_retain();
    }
    sub_21F2D0F94(a2, v11);
    *uint64_t v3 = v11;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_21F420EF8();
  swift_bridgeObjectRetain();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  uint64_t v20 = v2;
  uint64_t v12 = sub_21F420F48();
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    uint64_t v19 = swift_retain();
    sub_21F2D11C0(v19, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v20 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v15 = ~v13;
  while (1)
  {
    sub_21F420EF8();
    swift_retain();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_21F420F18();
      sub_21F420148();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F420F18();
    }
    uint64_t v16 = sub_21F420F48();
    sub_21F420EF8();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_21F420F18();
      sub_21F420148();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F420F18();
    }
    uint64_t v17 = sub_21F420F48();
    swift_release();
    if (v16 == v17) {
      break;
    }
    unint64_t v14 = (v14 + 1) & v15;
    if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      goto LABEL_23;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v20 + 48) + 8 * v14);
  swift_retain();
  return 0;
}

uint64_t sub_21F2CCAE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_21F4208B8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v68 = v8;
      sub_21F41F418();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v56[0];
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_21F4208A8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = sub_21F2CE900(v7, result + 1);
    v56[0] = v20;
    if (*(void *)(v20 + 24) <= *(void *)(v20 + 16))
    {
      swift_retain();
      sub_21F2CEE2C();
      uint64_t v21 = v56[0];
    }
    else
    {
      uint64_t v21 = v20;
      swift_retain();
    }
    sub_21F2D107C(a2, v21);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  unint64_t v38 = v2;
  sub_21F420EF8();
  uint64_t v41 = v6;
  swift_bridgeObjectRetain();
  uint64_t v42 = a2;
  sub_21F382B74(a2, v57);
  uint64_t v10 = v57[0];
  uint64_t v11 = v57[1];
  uint64_t v12 = v57[2];
  uint64_t v13 = v57[3];
  uint64_t v14 = v57[4];
  uint64_t v15 = v57[5];
  uint64_t v16 = v57[6];
  uint64_t v17 = v57[7];
  uint64_t v18 = v57[8];
  uint64_t v19 = v57[9];
  sub_21F2B458C((uint64_t)v57, (uint64_t)v66, &qword_267EC7C20);
  if (v67 == 1)
  {
    sub_21F420F18();
  }
  else
  {
    uint64_t v68 = v10;
    uint64_t v69 = v11;
    uint64_t v70 = v12;
    uint64_t v71 = v13;
    uint64_t v72 = v14;
    uint64_t v73 = v15;
    uint64_t v74 = v16;
    uint64_t v75 = v17;
    uint64_t v76 = v18;
    uint64_t v77 = v19;
    sub_21F420F18();
    sub_21F362CC4();
    sub_21F2B4758(v57);
  }
  uint64_t v22 = sub_21F420F48();
  uint64_t v23 = v42;
  uint64_t v24 = -1 << *(unsigned char *)(v41 + 32);
  unint64_t v25 = v22 & ~v24;
  if (((*(void *)(v41 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56[0] = *v38;
    *unint64_t v38 = 0x8000000000000000;
    swift_retain();
    sub_21F2D1440(v23, v25, isUniquelyReferenced_nonNull_native);
    *unint64_t v38 = v56[0];
    swift_bridgeObjectRelease();
    *a1 = v23;
    return 1;
  }
  uint64_t v40 = ~v24;
  while (1)
  {
    unint64_t v55 = v25;
    uint64_t v54 = swift_retain();
    sub_21F382B74(v54, v58);
    uint64_t v26 = v58[0];
    uint64_t v27 = v58[1];
    uint64_t v29 = v58[2];
    uint64_t v28 = v58[3];
    uint64_t v50 = v58[4];
    uint64_t v45 = v58[6];
    uint64_t v52 = v58[7];
    uint64_t v53 = v58[5];
    uint64_t v43 = v58[8];
    uint64_t v48 = v58[9];
    sub_21F382B74(v23, v59);
    uint64_t v30 = v59[0];
    uint64_t v31 = v59[1];
    uint64_t v33 = v59[2];
    uint64_t v32 = v59[3];
    uint64_t v34 = v59[5];
    uint64_t v49 = v59[4];
    uint64_t v51 = v59[7];
    uint64_t v44 = v59[8];
    uint64_t v46 = v59[6];
    uint64_t v47 = v59[9];
    sub_21F2B458C((uint64_t)v58, (uint64_t)v64, &qword_267EC7C20);
    if (v65 == 1)
    {
      sub_21F2B458C((uint64_t)v59, (uint64_t)v62, &qword_267EC7C20);
      if (v63 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        unint64_t v37 = v55;
        goto LABEL_65;
      }
LABEL_19:
      v56[0] = v26;
      v56[1] = v27;
      v56[2] = v29;
      v56[3] = v28;
      v56[4] = v50;
      v56[5] = v53;
      v56[6] = v45;
      v56[7] = v52;
      v56[8] = v43;
      v56[9] = v48;
      v56[10] = v30;
      v56[11] = v31;
      v56[12] = v33;
      v56[13] = v32;
      v56[14] = v49;
      v56[15] = v34;
      v56[16] = v46;
      v56[17] = v51;
      v56[18] = v44;
      v56[19] = v47;
      sub_21F2B45F0(v56);
LABEL_47:
      swift_release();
      uint64_t v23 = v42;
      unint64_t v37 = v55;
      goto LABEL_48;
    }
    sub_21F2B458C((uint64_t)v59, (uint64_t)v60, &qword_267EC7C20);
    if (v61 == 1) {
      goto LABEL_19;
    }
    if (v27)
    {
      if (!v31 || (v26 != v30 || v27 != v31) && (sub_21F420DF8() & 1) == 0)
      {
LABEL_46:
        sub_21F2B4758(v59);
        sub_21F2B4758(v58);
        goto LABEL_47;
      }
    }
    else if (v31)
    {
      goto LABEL_46;
    }
    if (v28)
    {
      if (!v32 || (v29 != v33 || v28 != v32) && (sub_21F420DF8() & 1) == 0) {
        goto LABEL_46;
      }
    }
    else if (v32)
    {
      goto LABEL_46;
    }
    if (v53)
    {
      if (!v34 || (v50 != v49 || v53 != v34) && (sub_21F420DF8() & 1) == 0) {
        goto LABEL_46;
      }
    }
    else if (v34)
    {
      goto LABEL_46;
    }
    if (v52)
    {
      uint64_t v23 = v42;
      unint64_t v37 = v55;
      if (!v51 || (v45 != v46 || v52 != v51) && (sub_21F420DF8() & 1) == 0)
      {
LABEL_57:
        sub_21F2B4758(v59);
        sub_21F2B4758(v58);
LABEL_58:
        swift_release();
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v23 = v42;
      unint64_t v37 = v55;
      if (v51) {
        goto LABEL_57;
      }
    }
    if (!v48)
    {
      sub_21F2B4758(v59);
      sub_21F2B4758(v58);
      if (!v47) {
        goto LABEL_67;
      }
      goto LABEL_58;
    }
    if (!v47) {
      goto LABEL_57;
    }
    if (v43 == v44 && v48 == v47) {
      break;
    }
    char v35 = sub_21F420DF8();
    sub_21F2B4758(v59);
    sub_21F2B4758(v58);
    swift_release();
    if (v35)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_65;
    }
LABEL_48:
    unint64_t v25 = (v37 + 1) & v40;
    if (((*(void *)(v41 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_61;
    }
  }
  sub_21F2B4758(v59);
  sub_21F2B4758(v58);
LABEL_67:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_65:
  *a1 = *(void *)(*(void *)(*v38 + 48) + 8 * v37);
  swift_retain();
  return 0;
}

uint64_t sub_21F2CD138(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_21F420EF8();
  swift_bridgeObjectRetain();
  sub_21F420148();
  uint64_t v8 = sub_21F420F48();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21F420DF8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21F420DF8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21F2D1910(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21F2CD2E8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_21F2D8A9C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_21F420028();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_21F2D8A9C((unint64_t *)&qword_26AD3A840, MEMORY[0x263F07508]);
      char v21 = sub_21F420098();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21F2D1AAC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_21F2CD60C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_21F420EE8();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21F2D1D68(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_21F2CD708(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_21F330A28();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21F2D1E8C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v22;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_35;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xEB00000000636973;
    unint64_t v11 = 0x754D6E69616D6F64;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        unint64_t v11 = 0x656D7269666E6F63;
        goto LABEL_6;
      case 2:
        unint64_t v11 = 0x6574616E696D6F6ELL;
LABEL_6:
        unint64_t v10 = 0xE900000000000064;
        break;
      case 3:
        unint64_t v11 = 0x6974636572726F63;
        unint64_t v10 = 0xEA00000000006E6FLL;
        break;
      case 4:
        unint64_t v10 = 0xE700000000000000;
        unint64_t v11 = 0x7972617262696CLL;
        break;
      case 5:
        unint64_t v10 = 0x800000021F432B90;
        unint64_t v11 = 0xD000000000000011;
        break;
      case 6:
        unint64_t v11 = 0xD000000000000013;
        uint64_t v12 = "nominationBlocked";
        goto LABEL_12;
      case 7:
        unint64_t v11 = 0xD000000000000012;
        uint64_t v12 = "previouslyNominated";
LABEL_12:
        unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v13 = 0x754D6E69616D6F64;
    unint64_t v14 = 0xEB00000000636973;
    switch((char)a2)
    {
      case 1:
        uint64_t v15 = 0x656D7269666E6F63;
        goto LABEL_16;
      case 2:
        uint64_t v15 = 0x6574616E696D6F6ELL;
LABEL_16:
        unint64_t v14 = 0xE900000000000064;
        if (v11 != v15) {
          goto LABEL_29;
        }
        goto LABEL_28;
      case 3:
        unint64_t v14 = 0xEA00000000006E6FLL;
        if (v11 != 0x6974636572726F63) {
          goto LABEL_29;
        }
        goto LABEL_28;
      case 4:
        unint64_t v14 = 0xE700000000000000;
        if (v11 != 0x7972617262696CLL) {
          goto LABEL_29;
        }
        goto LABEL_28;
      case 5:
        unint64_t v14 = 0x800000021F432B90;
        unint64_t v13 = 0xD000000000000011;
        goto LABEL_23;
      case 6:
        unint64_t v16 = 0xD000000000000013;
        uint64_t v17 = "nominationBlocked";
        goto LABEL_27;
      case 7:
        unint64_t v16 = 0xD000000000000012;
        uint64_t v17 = "previouslyNominated";
LABEL_27:
        unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
        if (v11 == v16) {
          goto LABEL_28;
        }
        goto LABEL_29;
      default:
LABEL_23:
        if (v11 != v13) {
          goto LABEL_29;
        }
LABEL_28:
        if (v10 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_34;
        }
LABEL_29:
        char v18 = sub_21F420DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_31;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_34:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
LABEL_35:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_21F2CDACC(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_21F420EF8();
  swift_bridgeObjectRetain();
  sub_21F420148();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_21F420F48();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_21F2D2264(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_25;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xEE00736567617373;
    uint64_t v10 = 0x654D6E69616D6F64;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v10 = 0x68506E69616D6F64;
        unint64_t v9 = 0xEF6C6C6143656E6FLL;
        break;
      case 2:
        uint64_t v10 = 0x656D7269666E6F63;
        goto LABEL_7;
      case 3:
        uint64_t v10 = 0x6574616E696D6F6ELL;
LABEL_7:
        unint64_t v9 = 0xE900000000000064;
        break;
      case 4:
        uint64_t v10 = 0x6974636572726F63;
        unint64_t v9 = 0xEA00000000006E6FLL;
        break;
      default:
        break;
    }
    uint64_t v11 = 0x654D6E69616D6F64;
    unint64_t v12 = 0xEE00736567617373;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xEF6C6C6143656E6FLL;
        if (v10 == 0x68506E69616D6F64) {
          goto LABEL_16;
        }
        goto LABEL_17;
      case 2:
        unint64_t v12 = 0xE900000000000064;
        if (v10 != 0x656D7269666E6F63) {
          goto LABEL_17;
        }
        goto LABEL_16;
      case 3:
        uint64_t v11 = 0x6574616E696D6F6ELL;
        unint64_t v12 = 0xE900000000000064;
        goto LABEL_15;
      case 4:
        unint64_t v12 = 0xEA00000000006E6FLL;
        if (v10 != 0x6974636572726F63) {
          goto LABEL_17;
        }
        goto LABEL_16;
      default:
LABEL_15:
        if (v10 != v11) {
          goto LABEL_17;
        }
LABEL_16:
        if (v9 != v12)
        {
LABEL_17:
          char v13 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_24;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_22;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_25:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_21F2CDED4(uint64_t a1, uint64_t a2)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v30 = *(_OWORD *)a2;
  long long v31 = v5;
  long long v32 = v6;
  __int16 v33 = *(_WORD *)(a2 + 48);
  uint64_t v7 = *v2;
  sub_21F420EF8();
  swift_bridgeObjectRetain();
  sub_21F420148();
  uint64_t v8 = sub_21F420F48();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v7 + 48) + 56 * v10;
      uint64_t v13 = *(void *)(v12 + 8);
      __int16 v14 = *(_WORD *)(v12 + 48);
      *(void *)&long long v26 = *(void *)v12;
      *((void *)&v26 + 1) = v13;
      long long v27 = *(_OWORD *)(v12 + 16);
      long long v28 = *(_OWORD *)(v12 + 32);
      __int16 v29 = v14;
      if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)&v30)) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_21F2D8928(a2);
    uint64_t v18 = *(void *)(*v2 + 48) + 56 * v10;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 32);
    uint64_t v24 = *(void *)(v18 + 40);
    LOWORD(v18) = *(_WORD *)(v18 + 48);
    *(void *)a1 = v20;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = v21;
    *(void *)(a1 + 24) = v22;
    *(void *)(a1 + 32) = v23;
    *(void *)(a1 + 40) = v24;
    *(_WORD *)(a1 + 48) = v18;
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v21, v22);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v26 = v30;
    long long v27 = v31;
    long long v28 = v32;
    __int16 v29 = v33;
    uint64_t v25 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_21F2D88D0((uint64_t)&v26);
    sub_21F2D2684((uint64_t)&v26, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v25;
    swift_bridgeObjectRelease();
    long long v16 = v27;
    *(_OWORD *)a1 = v26;
    *(_OWORD *)(a1 + 16) = v16;
    *(_OWORD *)(a1 + 32) = v28;
    *(_WORD *)(a1 + 48) = v29;
    return 1;
  }
}

uint64_t sub_21F2CE0D0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_21F41FED8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_21F2D8A9C(&qword_267EC80B8, MEMORY[0x263F740A0]);
  swift_bridgeObjectRetain();
  __int16 v33 = a2;
  uint64_t v11 = sub_21F420028();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    long long v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    long long v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    __int16 v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_21F2D8A9C(&qword_267EC80C0, MEMORY[0x263F740A0]);
      char v21 = sub_21F420098();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      __int16 v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    __int16 v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_21F2D2834((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_21F2CE3F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  sub_21F420EF8();
  swift_bridgeObjectRetain();
  sub_21F420148();
  uint64_t v13 = sub_21F420F48();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v16 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v30 = v5;
    uint64_t v31 = a1;
    uint64_t v17 = ~v14;
    uint64_t v18 = *(void *)(v12 + 48);
    while (1)
    {
      unint64_t v19 = (void *)(v18 + 32 * v15);
      uint64_t v21 = v19[2];
      uint64_t v20 = v19[3];
      BOOL v22 = *v19 == a2 && v19[1] == a3;
      if (v22 || (sub_21F420DF8() & 1) != 0)
      {
        if (v20)
        {
          if (a5)
          {
            BOOL v23 = v21 == a4 && v20 == a5;
            if (v23 || (sub_21F420DF8() & 1) != 0)
            {
LABEL_21:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v26 = (uint64_t *)(*(void *)(*v30 + 48) + 32 * v15);
              uint64_t v27 = v26[1];
              uint64_t v29 = v26[2];
              uint64_t v28 = v26[3];
              *uint64_t v31 = *v26;
              v31[1] = v27;
              v31[2] = v29;
              v31[3] = v28;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              return 0;
            }
          }
        }
        else if (!a5)
        {
          goto LABEL_21;
        }
      }
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v30;
        a1 = v31;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_20:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F2D2AF0(a2, a3, a4, a5, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v6 = v32;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  uint64_t result = 1;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_21F2CE610(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_21F420EF8();
  sub_21F420F08();
  uint64_t v6 = sub_21F420F48();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_21F2D2CB4(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_21F2CE730(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80D8);
    uint64_t v2 = sub_21F420928();
    uint64_t v6 = v2;
    sub_21F420898();
    if (sub_21F4208C8())
    {
      sub_21F41F338();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v6;
        if (*(void *)(v6 + 24) <= *(void *)(v6 + 16))
        {
          sub_21F2CEB8C();
          uint64_t v2 = v6;
        }
        sub_21F420EF8();
        if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
        {
          sub_21F420F18();
          sub_21F420148();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_21F420F18();
        }
        sub_21F420F48();
        unint64_t v3 = sub_21F420888();
        *(void *)(v2 + 56 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(void *)(*(void *)(v2 + 48) + 8 * v3) = v5;
        ++*(void *)(v2 + 16);
      }
      while (sub_21F4208C8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_21F2CE900(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80E8);
    uint64_t v2 = sub_21F420928();
    uint64_t v24 = v2;
    sub_21F420898();
    if (sub_21F4208C8())
    {
      sub_21F41F418();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v24;
        if (*(void *)(v24 + 24) <= *(void *)(v24 + 16))
        {
          sub_21F2CEE2C();
          uint64_t v2 = v24;
        }
        sub_21F420EF8();
        sub_21F382B74(v23, v25);
        uint64_t v4 = v25[0];
        uint64_t v5 = v25[1];
        uint64_t v6 = v25[2];
        uint64_t v7 = v25[3];
        uint64_t v8 = v25[4];
        uint64_t v9 = v25[5];
        uint64_t v10 = v25[6];
        uint64_t v11 = v25[7];
        uint64_t v12 = v25[8];
        uint64_t v22 = v25[9];
        sub_21F2B458C((uint64_t)v25, (uint64_t)v26, &qword_267EC7C20);
        if (v27 == 1)
        {
          sub_21F420F18();
        }
        else
        {
          uint64_t v28 = v4;
          uint64_t v29 = v5;
          uint64_t v30 = v6;
          uint64_t v31 = v7;
          uint64_t v32 = v8;
          uint64_t v33 = v9;
          uint64_t v34 = v10;
          uint64_t v35 = v11;
          uint64_t v36 = v12;
          uint64_t v37 = v22;
          sub_21F420F18();
          sub_21F362CC4();
          sub_21F2B4758(v25);
        }
        uint64_t result = sub_21F420F48();
        uint64_t v14 = v2 + 56;
        uint64_t v15 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v16 = result & ~v15;
        unint64_t v17 = v16 >> 6;
        if (((-1 << v16) & ~*(void *)(v2 + 56 + 8 * (v16 >> 6))) != 0)
        {
          unint64_t v3 = __clz(__rbit64((-1 << v16) & ~*(void *)(v2 + 56 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v17 == v19;
            if (v17 == v19) {
              unint64_t v17 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v14 + 8 * v17);
          }
          while (v21 == -1);
          unint64_t v3 = __clz(__rbit64(~v21)) + (v17 << 6);
        }
        *(void *)(v14 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(void *)(*(void *)(v2 + 48) + 8 * v3) = v23;
        ++*(void *)(v2 + 16);
      }
      while (sub_21F4208C8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

unint64_t sub_21F2CEB8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80D8);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v11 << 6);
      }
      else
      {
        int64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v14 >= v8) {
          goto LABEL_26;
        }
        unint64_t v15 = v19[v14];
        ++v11;
        if (!v15)
        {
          int64_t v11 = v14 + 1;
          if (v14 + 1 >= v8) {
            goto LABEL_26;
          }
          unint64_t v15 = v19[v11];
          if (!v15)
          {
            int64_t v11 = v14 + 2;
            if (v14 + 2 >= v8) {
              goto LABEL_26;
            }
            unint64_t v15 = v19[v11];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_26:
                swift_release();
                uint64_t v18 = 1 << *(unsigned char *)(v2 + 32);
                if (v18 > 63) {
                  bzero(v19, ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v19 = -1 << v18;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v19[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v11 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_32;
                  }
                  if (v11 >= v8) {
                    goto LABEL_26;
                  }
                  unint64_t v15 = v19[v11];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_21F420EF8();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      sub_21F420F48();
      unint64_t result = sub_21F420888();
      *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(void *)(*(void *)(v4 + 48) + 8 * result) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2CEE2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80E8);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v37 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v38 = v4;
    uint64_t v39 = v2;
    while (1)
    {
      if (v7)
      {
        int64_t v42 = v10;
        uint64_t v43 = (v7 - 1) & v7;
        unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v13 >= v36) {
          goto LABEL_36;
        }
        unint64_t v14 = v37[v13];
        int64_t v15 = v10 + 1;
        if (!v14)
        {
          int64_t v15 = v10 + 2;
          if (v10 + 2 >= v36) {
            goto LABEL_36;
          }
          unint64_t v14 = v37[v15];
          if (!v14)
          {
            int64_t v15 = v10 + 3;
            if (v10 + 3 >= v36) {
              goto LABEL_36;
            }
            unint64_t v14 = v37[v15];
            if (!v14)
            {
              uint64_t v16 = v10 + 4;
              if (v10 + 4 >= v36)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v37[v16];
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v15 >= v36) {
                    goto LABEL_36;
                  }
                  unint64_t v14 = v37[v15];
                  ++v16;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v10 + 4;
            }
          }
        }
LABEL_23:
        int64_t v42 = v15;
        uint64_t v43 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v12);
      sub_21F420EF8();
      uint64_t v41 = v17;
      sub_21F382B74(v17, v44);
      uint64_t v18 = v44[0];
      uint64_t v19 = v44[1];
      uint64_t v21 = v44[2];
      uint64_t v20 = v44[3];
      uint64_t v22 = v44[4];
      uint64_t v23 = v44[5];
      uint64_t v24 = v44[6];
      uint64_t v25 = v44[7];
      uint64_t v26 = v44[8];
      uint64_t v40 = v44[9];
      sub_21F2B458C((uint64_t)v44, (uint64_t)v45, &qword_267EC7C20);
      if (v46 == 1)
      {
        sub_21F420F18();
      }
      else
      {
        uint64_t v47 = v18;
        uint64_t v48 = v19;
        uint64_t v49 = v21;
        uint64_t v50 = v20;
        uint64_t v51 = v22;
        uint64_t v52 = v23;
        uint64_t v53 = v24;
        uint64_t v54 = v25;
        uint64_t v55 = v26;
        uint64_t v56 = v40;
        sub_21F420F18();
        sub_21F362CC4();
        sub_21F2B4758(v44);
      }
      uint64_t v4 = v38;
      uint64_t v2 = v39;
      unint64_t v7 = v43;
      uint64_t result = sub_21F420F48();
      uint64_t v27 = -1 << *(unsigned char *)(v38 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v28) & ~*(void *)(v8 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v8 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v11 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v38 + 48) + 8 * v11) = v41;
      ++*(void *)(v38 + 16);
      int64_t v10 = v42;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2CF1BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB0);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_21F420EF8();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2CF49C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_21F41F228();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80A0);
  uint64_t v5 = sub_21F420918();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_21F2D8A9C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
      uint64_t result = sub_21F420028();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_21F2CF898()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80F8);
  uint64_t result = sub_21F420918();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_21F420EE8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2CFB1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8070);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F420F48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x21F2CFEECLL);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2CFF0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8078);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F420F48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x21F2D0280);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2D0294()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8098);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v36 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v34 = v1;
    int64_t v35 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    for (i = v2; ; uint64_t v2 = i)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v40 = v10;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v35) {
          goto LABEL_33;
        }
        unint64_t v16 = v36[v15];
        int64_t v17 = v10 + 1;
        if (!v16)
        {
          int64_t v17 = v10 + 2;
          if (v10 + 2 >= v35) {
            goto LABEL_33;
          }
          unint64_t v16 = v36[v17];
          if (!v16)
          {
            int64_t v17 = v10 + 3;
            if (v10 + 3 >= v35) {
              goto LABEL_33;
            }
            unint64_t v16 = v36[v17];
            if (!v16)
            {
              uint64_t v18 = v10 + 4;
              if (v10 + 4 >= v35)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v34;
                uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
                if (v33 > 63) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v36 = -1 << v33;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v36[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v35) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v36[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        int64_t v40 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 56 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 24);
      uint64_t v39 = *(void *)(v19 + 16);
      uint64_t v24 = *(void *)(v19 + 32);
      uint64_t v23 = *(void *)(v19 + 40);
      char v25 = *(unsigned char *)(v19 + 48);
      char v38 = *(unsigned char *)(v19 + 49);
      sub_21F420EF8();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 56 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      int64_t v10 = v40;
      *(void *)(v12 + 16) = v39;
      *(void *)(v12 + 24) = v22;
      *(void *)(v12 + 32) = v24;
      *(void *)(v12 + 40) = v23;
      *(unsigned char *)(v12 + 48) = v25;
      *(unsigned char *)(v12 + 49) = v38;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2D05E0()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_21F41FED8();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80C8);
  uint64_t v5 = sub_21F420918();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_21F2D8A9C(&qword_267EC80B8, MEMORY[0x263F740A0]);
      uint64_t result = sub_21F420028();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_21F2D09DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8088);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v23 = v19[2];
      uint64_t v22 = v19[3];
      sub_21F420EF8();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *uint64_t v12 = v20;
      v12[1] = v21;
      _OWORD v12[2] = v23;
      uint64_t v12[3] = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2D0CE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80A8);
  uint64_t result = sub_21F420918();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_21F420EF8();
      sub_21F420F08();
      uint64_t result = sub_21F420F48();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_21F2D0F94(uint64_t a1, uint64_t a2)
{
  sub_21F420EF8();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  sub_21F420F48();
  unint64_t result = sub_21F420888();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_21F2D107C(uint64_t a1, uint64_t a2)
{
  sub_21F420EF8();
  uint64_t v15 = a1;
  sub_21F382B74(a1, v16);
  uint64_t v4 = v16[0];
  uint64_t v5 = v16[1];
  uint64_t v6 = v16[2];
  uint64_t v7 = v16[3];
  uint64_t v8 = v16[4];
  uint64_t v9 = v16[5];
  uint64_t v10 = v16[6];
  uint64_t v11 = v16[7];
  uint64_t v12 = v16[8];
  uint64_t v14 = v16[9];
  sub_21F2B458C((uint64_t)v16, (uint64_t)v17, &qword_267EC7C20);
  if (v18 == 1)
  {
    sub_21F420F18();
  }
  else
  {
    uint64_t v19 = v4;
    uint64_t v20 = v5;
    uint64_t v21 = v6;
    uint64_t v22 = v7;
    uint64_t v23 = v8;
    uint64_t v24 = v9;
    uint64_t v25 = v10;
    uint64_t v26 = v11;
    uint64_t v27 = v12;
    uint64_t v28 = v14;
    sub_21F420F18();
    sub_21F362CC4();
    sub_21F2B4758(v16);
  }
  sub_21F420F48();
  unint64_t result = sub_21F420888();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = v15;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_21F2D11C0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_21F2CEB8C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_21F2D2E14(&qword_267EC80D8);
      goto LABEL_21;
    }
    sub_21F2D3B00();
  }
  uint64_t v8 = *v3;
  sub_21F420EF8();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  unint64_t result = sub_21F420F48();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_21F41F338();
    do
    {
      sub_21F420EF8();
      swift_retain();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      uint64_t v11 = sub_21F420F48();
      sub_21F420EF8();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      uint64_t v12 = sub_21F420F48();
      unint64_t result = swift_release();
      if (v11 == v12) {
        goto LABEL_24;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_21:
  uint64_t v13 = *v17;
  *(void *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v13 + 48) + 8 * a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (!v15)
  {
    *(void *)(v13 + 16) = v16;
    return result;
  }
  __break(1u);
LABEL_24:
  unint64_t result = sub_21F420E58();
  __break(1u);
  return result;
}

uint64_t sub_21F2D1440(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v34 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_21F2CEE2C();
    }
    else
    {
      if (v6 > v5)
      {
        unint64_t result = (uint64_t)sub_21F2D2E14(&qword_267EC80E8);
        goto LABEL_56;
      }
      sub_21F2D3D68();
    }
    uint64_t v33 = *v3;
    sub_21F420EF8();
    sub_21F382B74(v34, v49);
    uint64_t v7 = v49[0];
    uint64_t v8 = v49[1];
    uint64_t v9 = v49[2];
    uint64_t v10 = v49[3];
    uint64_t v11 = v49[4];
    uint64_t v12 = v49[5];
    uint64_t v13 = v49[6];
    uint64_t v14 = v49[7];
    uint64_t v15 = v49[8];
    uint64_t v16 = v49[9];
    sub_21F2B458C((uint64_t)v49, (uint64_t)v58, &qword_267EC7C20);
    if (v59 == 1)
    {
      sub_21F420F18();
    }
    else
    {
      uint64_t v60 = v7;
      uint64_t v61 = v8;
      uint64_t v62 = v9;
      uint64_t v63 = v10;
      uint64_t v64 = v11;
      uint64_t v65 = v12;
      uint64_t v66 = v13;
      uint64_t v67 = v14;
      uint64_t v68 = v15;
      uint64_t v69 = v16;
      sub_21F420F18();
      sub_21F362CC4();
      sub_21F2B4758(v49);
    }
    unint64_t result = sub_21F420F48();
    uint64_t v17 = -1 << *(unsigned char *)(v33 + 32);
    a2 = result & ~v17;
    if ((*(void *)(v33 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v32 = ~v17;
      sub_21F41F418();
      while (1)
      {
        uint64_t v47 = swift_retain();
        sub_21F382B74(v47, v50);
        uint64_t v18 = v50[0];
        uint64_t v19 = v50[1];
        uint64_t v20 = v50[2];
        uint64_t v21 = v50[3];
        uint64_t v42 = v50[4];
        uint64_t v46 = v50[5];
        uint64_t v37 = v50[6];
        uint64_t v44 = v50[7];
        uint64_t v35 = v50[8];
        uint64_t v40 = v50[9];
        sub_21F382B74(v34, v51);
        uint64_t v23 = v51[0];
        uint64_t v22 = v51[1];
        uint64_t v24 = v51[2];
        uint64_t v25 = v51[3];
        uint64_t v41 = v51[4];
        uint64_t v45 = v51[5];
        uint64_t v43 = v51[7];
        uint64_t v36 = v51[8];
        uint64_t v38 = v51[6];
        uint64_t v39 = v51[9];
        sub_21F2B458C((uint64_t)v50, (uint64_t)v56, &qword_267EC7C20);
        if (v57 == 1) {
          break;
        }
        sub_21F2B458C((uint64_t)v51, (uint64_t)v52, &qword_267EC7C20);
        if (v53 == 1) {
          goto LABEL_17;
        }
        if (v19)
        {
          if (!v22 || (v18 != v23 || v19 != v22) && (sub_21F420DF8() & 1) == 0) {
            goto LABEL_53;
          }
        }
        else if (v22)
        {
          goto LABEL_53;
        }
        if (v21)
        {
          if (!v25 || (v20 != v24 || v21 != v25) && (sub_21F420DF8() & 1) == 0) {
            goto LABEL_53;
          }
        }
        else if (v25)
        {
          goto LABEL_53;
        }
        if (v46)
        {
          if (!v45 || (v42 != v41 || v46 != v45) && (sub_21F420DF8() & 1) == 0) {
            goto LABEL_53;
          }
        }
        else if (v45)
        {
          goto LABEL_53;
        }
        if (v44)
        {
          if (!v43 || (v37 != v38 || v44 != v43) && (sub_21F420DF8() & 1) == 0) {
            goto LABEL_53;
          }
        }
        else if (v43)
        {
          goto LABEL_53;
        }
        if (!v40)
        {
          if (!v39) {
            goto LABEL_59;
          }
LABEL_53:
          sub_21F2B4758(v51);
          sub_21F2B4758(v50);
LABEL_54:
          unint64_t result = swift_release();
          goto LABEL_55;
        }
        if (!v39) {
          goto LABEL_53;
        }
        if (v35 == v36 && v40 == v39) {
          goto LABEL_59;
        }
        char v26 = sub_21F420DF8();
        sub_21F2B4758(v51);
        sub_21F2B4758(v50);
        unint64_t result = swift_release();
        if (v26) {
          goto LABEL_61;
        }
LABEL_55:
        a2 = (a2 + 1) & v32;
        if (((*(void *)(v33 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_56;
        }
      }
      sub_21F2B458C((uint64_t)v51, (uint64_t)v54, &qword_267EC7C20);
      if (v55 == 1) {
        goto LABEL_60;
      }
LABEL_17:
      v48[0] = v18;
      v48[1] = v19;
      v48[2] = v20;
      v48[3] = v21;
      v48[4] = v42;
      v48[5] = v46;
      v48[6] = v37;
      v48[7] = v44;
      v48[8] = v35;
      v48[9] = v40;
      v48[10] = v23;
      v48[11] = v22;
      v48[12] = v24;
      v48[13] = v25;
      v48[14] = v41;
      v48[15] = v45;
      v48[16] = v38;
      v48[17] = v43;
      v48[18] = v36;
      v48[19] = v39;
      sub_21F2B45F0(v48);
      goto LABEL_54;
    }
  }
LABEL_56:
  uint64_t v27 = *v31;
  *(void *)(*v31 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v27 + 48) + 8 * a2) = v34;
  uint64_t v28 = *(void *)(v27 + 16);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
LABEL_59:
    sub_21F2B4758(v51);
    sub_21F2B4758(v50);
LABEL_60:
    swift_release();
LABEL_61:
    unint64_t result = sub_21F420E58();
    __break(1u);
  }
  else
  {
    *(void *)(v27 + 16) = v30;
  }
  return result;
}

uint64_t sub_21F2D1910(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_21F2CF1BC();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_21F2D2FB8();
      goto LABEL_22;
    }
    sub_21F2D40C4();
  }
  uint64_t v11 = *v4;
  sub_21F420EF8();
  sub_21F420148();
  unint64_t result = sub_21F420F48();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_21F420DF8(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_21F420E58();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_21F420DF8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_21F2D1AAC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_21F2CF49C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_21F2D3500(MEMORY[0x263F07508], &qword_267EC80A0);
      goto LABEL_12;
    }
    sub_21F2D4374();
  }
  uint64_t v12 = *v3;
  sub_21F2D8A9C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  uint64_t v13 = sub_21F420028();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_21F2D8A9C((unint64_t *)&qword_26AD3A840, MEMORY[0x263F07508]);
      char v21 = sub_21F420098();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_21F420E58();
  __break(1u);
  return result;
}

uint64_t sub_21F2D1D68(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_21F2CF898();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_21F2D316C();
      goto LABEL_14;
    }
    sub_21F2D4724();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_21F420EE8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_21F420E58();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_21F2D1E8C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v21 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_21F2CFB1C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_21F2D3974(&qword_267EC8070);
        goto LABEL_38;
      }
      sub_21F2D4988();
    }
    uint64_t v8 = *v3;
    uint64_t result = sub_21F330A28();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xEB00000000636973;
        unint64_t v12 = 0x754D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x656D7269666E6F63;
            goto LABEL_14;
          case 2:
            unint64_t v12 = 0x6574616E696D6F6ELL;
LABEL_14:
            unint64_t v11 = 0xE900000000000064;
            break;
          case 3:
            unint64_t v12 = 0x6974636572726F63;
            unint64_t v11 = 0xEA00000000006E6FLL;
            break;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            unint64_t v12 = 0x7972617262696CLL;
            break;
          case 5:
            unint64_t v11 = 0x800000021F432B90;
            unint64_t v12 = 0xD000000000000011;
            break;
          case 6:
            unint64_t v12 = 0xD000000000000013;
            unint64_t v11 = 0x800000021F432BB0;
            break;
          case 7:
            unint64_t v12 = 0xD000000000000012;
            unint64_t v11 = 0x800000021F432BD0;
            break;
          default:
            break;
        }
        unint64_t v13 = 0x754D6E69616D6F64;
        unint64_t v14 = 0xEB00000000636973;
        switch(v5)
        {
          case 1:
            uint64_t v15 = 0x656D7269666E6F63;
            goto LABEL_24;
          case 2:
            uint64_t v15 = 0x6574616E696D6F6ELL;
LABEL_24:
            unint64_t v14 = 0xE900000000000064;
            if (v12 != v15) {
              goto LABEL_33;
            }
            goto LABEL_32;
          case 3:
            unint64_t v14 = 0xEA00000000006E6FLL;
            if (v12 != 0x6974636572726F63) {
              goto LABEL_33;
            }
            goto LABEL_32;
          case 4:
            unint64_t v14 = 0xE700000000000000;
            if (v12 != 0x7972617262696CLL) {
              goto LABEL_33;
            }
            goto LABEL_32;
          case 5:
            unint64_t v14 = 0x800000021F432B90;
            unint64_t v13 = 0xD000000000000011;
            goto LABEL_31;
          case 6:
            unint64_t v14 = 0x800000021F432BB0;
            if (v12 != 0xD000000000000013) {
              goto LABEL_33;
            }
            goto LABEL_32;
          case 7:
            unint64_t v14 = 0x800000021F432BD0;
            if (v12 != 0xD000000000000012) {
              goto LABEL_33;
            }
            goto LABEL_32;
          default:
LABEL_31:
            if (v12 != v13) {
              goto LABEL_33;
            }
LABEL_32:
            if (v11 == v14) {
              goto LABEL_41;
            }
LABEL_33:
            char v16 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v16) {
              goto LABEL_42;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_38:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v21;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_41:
    swift_bridgeObjectRelease_n();
LABEL_42:
    sub_21F420E58();
    __break(1u);
    JUMPOUT(0x21F2D2224);
  }
  *(void *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_21F2D2264(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_21F2CFF0C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_21F2D3974(&qword_267EC8078);
        goto LABEL_29;
      }
      sub_21F2D4D44();
    }
    uint64_t v8 = *v3;
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t result = sub_21F420F48();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xEE00736567617373;
        uint64_t v12 = 0x654D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x68506E69616D6F64;
            unint64_t v11 = 0xEF6C6C6143656E6FLL;
            break;
          case 2:
            uint64_t v12 = 0x656D7269666E6F63;
            goto LABEL_15;
          case 3:
            uint64_t v12 = 0x6574616E696D6F6ELL;
LABEL_15:
            unint64_t v11 = 0xE900000000000064;
            break;
          case 4:
            uint64_t v12 = 0x6974636572726F63;
            unint64_t v11 = 0xEA00000000006E6FLL;
            break;
          default:
            break;
        }
        uint64_t v13 = 0x654D6E69616D6F64;
        unint64_t v14 = 0xEE00736567617373;
        switch(v5)
        {
          case 1:
            unint64_t v14 = 0xEF6C6C6143656E6FLL;
            if (v12 != 0x68506E69616D6F64) {
              goto LABEL_24;
            }
            goto LABEL_23;
          case 2:
            uint64_t v13 = 0x656D7269666E6F63;
            unint64_t v14 = 0xE900000000000064;
            goto LABEL_22;
          case 3:
            unint64_t v14 = 0xE900000000000064;
            if (v12 != 0x6574616E696D6F6ELL) {
              goto LABEL_24;
            }
            goto LABEL_23;
          case 4:
            unint64_t v14 = 0xEA00000000006E6FLL;
            if (v12 != 0x6974636572726F63) {
              goto LABEL_24;
            }
            goto LABEL_23;
          default:
LABEL_22:
            if (v12 != v13) {
              goto LABEL_24;
            }
LABEL_23:
            if (v11 == v14) {
              goto LABEL_32;
            }
LABEL_24:
            char v15 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_33;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_29:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_32:
    swift_bridgeObjectRelease_n();
LABEL_33:
    sub_21F420E58();
    __break(1u);
    JUMPOUT(0x21F2D2648);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_21F2D2684(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  long long v6 = *(_OWORD *)(result + 16);
  v26[0] = *(_OWORD *)result;
  v26[1] = v6;
  void v26[2] = *(_OWORD *)(result + 32);
  __int16 v27 = *(_WORD *)(result + 48);
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_21F2D0294();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_21F2D3304();
      goto LABEL_12;
    }
    sub_21F2D5098();
  }
  uint64_t v9 = *v3;
  sub_21F420EF8();
  sub_21F420148();
  uint64_t result = sub_21F420F48();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      uint64_t v12 = *(void *)(v9 + 48) + 56 * a2;
      uint64_t v13 = *(void *)(v12 + 8);
      __int16 v14 = *(_WORD *)(v12 + 48);
      v22[0] = *(void *)v12;
      v22[1] = v13;
      long long v15 = *(_OWORD *)(v12 + 32);
      long long v23 = *(_OWORD *)(v12 + 16);
      long long v24 = v15;
      __int16 v25 = v14;
      uint64_t result = _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v26);
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v17 = *(void *)(v16 + 48) + 56 * a2;
  long long v18 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v5;
  *(_OWORD *)(v17 + 16) = v18;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v5 + 32);
  *(_WORD *)(v17 + 48) = *(_WORD *)(v5 + 48);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v16 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_21F420E58();
  __break(1u);
  return result;
}

uint64_t sub_21F2D2834(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_21F41FED8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_21F2D05E0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_21F2D3500(MEMORY[0x263F740A0], &qword_267EC80C8);
      goto LABEL_12;
    }
    sub_21F2D53C0();
  }
  uint64_t v12 = *v3;
  sub_21F2D8A9C(&qword_267EC80B8, MEMORY[0x263F740A0]);
  uint64_t v13 = sub_21F420028();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_21F2D8A9C(&qword_267EC80C0, MEMORY[0x263F740A0]);
      char v21 = sub_21F420098();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_21F420E58();
  __break(1u);
  return result;
}

uint64_t sub_21F2D2AF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_25;
  }
  if (a6)
  {
    sub_21F2D09DC();
  }
  else
  {
    if (v13 > v12)
    {
      uint64_t result = (uint64_t)sub_21F2D37B0();
      goto LABEL_25;
    }
    sub_21F2D5770();
  }
  uint64_t v14 = *v6;
  sub_21F420EF8();
  sub_21F420148();
  uint64_t result = sub_21F420F48();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    do
    {
      uint64_t v19 = (uint64_t *)(v18 + 32 * a5);
      uint64_t result = *v19;
      uint64_t v21 = v19[2];
      uint64_t v20 = v19[3];
      BOOL v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (uint64_t result = sub_21F420DF8(), (result & 1) != 0))
      {
        if (v20)
        {
          if (a4)
          {
            BOOL v23 = v21 == a3 && v20 == a4;
            if (v23 || (uint64_t result = sub_21F420DF8(), (result & 1) != 0))
            {
LABEL_24:
              uint64_t result = sub_21F420E58();
              __break(1u);
              break;
            }
          }
        }
        else if (!a4)
        {
          goto LABEL_24;
        }
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_25:
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  *uint64_t v25 = v11;
  v25[1] = a2;
  long long v25[2] = a3;
  v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

uint64_t sub_21F2D2CB4(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_21F2D0CE8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_21F2D3974(&qword_267EC80A8);
      goto LABEL_14;
    }
    sub_21F2D5A4C();
  }
  uint64_t v8 = *v3;
  sub_21F420EF8();
  sub_21F420F08();
  uint64_t result = sub_21F420F48();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_21F420E58();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_21F2D2E14(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_21F420908();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F2D2FB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F2D316C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F2D3304()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8098);
  BOOL v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_21F420908();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *BOOL v27 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 56);
  uint64_t v5 = v1 + 56;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 56), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v12) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v24);
    ++v8;
    if (!v25)
    {
      int64_t v8 = v24 + 1;
      if (v24 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v5 + 8 * v8);
      if (!v25)
      {
        int64_t v8 = v24 + 2;
        if (v24 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v5 + 8 * v8);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 56 * v14;
    uint64_t v16 = *(void *)(v1 + 48) + v15;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 40);
    LOWORD(v16) = *(_WORD *)(v16 + 48);
    uint64_t v23 = *(void *)(v3 + 48) + v15;
    *(void *)uint64_t v23 = v18;
    *(void *)(v23 + 8) = v17;
    *(void *)(v23 + 16) = v19;
    *(void *)(v23 + 24) = v20;
    *(void *)(v23 + 32) = v21;
    *(void *)(v23 + 40) = v22;
    *(_WORD *)(v23 + 48) = v16;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_21F2AA1D0(v19, v20);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v12) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v5 + 8 * v26);
  if (v25)
  {
    int64_t v8 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v8);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F2D3500(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_21F420908();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  int64_t v26 = v4;
  BOOL v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_21F2D37B0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8088);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v19 = v17[3];
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    v21[2] = v20;
    v21[3] = v19;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F2D3974(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_21F420908();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_21F2D3B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80D8);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v18 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v14 >= v8) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_21F420EF8();
    swift_retain();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_21F420F18();
      sub_21F420148();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F420F18();
    }
    sub_21F420F48();
    unint64_t result = sub_21F420888();
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v4 + 48) + 8 * result) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_26:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v18 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21F2D3D68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80E8);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v38 = v2;
  uint64_t v39 = v4;
  while (1)
  {
    if (v7)
    {
      int64_t v42 = v10;
      uint64_t v43 = (v7 - 1) & v7;
      unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v13 >= v37) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v36 + 8 * v13);
    int64_t v15 = v10 + 1;
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v37) {
        goto LABEL_36;
      }
      unint64_t v14 = *(void *)(v36 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 >= v37) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v36 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    int64_t v42 = v15;
    uint64_t v43 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v12);
    sub_21F420EF8();
    uint64_t v18 = swift_retain();
    uint64_t v41 = v17;
    sub_21F382B74(v18, v44);
    uint64_t v19 = v44[0];
    uint64_t v20 = v44[1];
    uint64_t v21 = v44[2];
    uint64_t v22 = v44[3];
    uint64_t v23 = v44[4];
    uint64_t v24 = v44[5];
    uint64_t v25 = v44[6];
    uint64_t v26 = v44[7];
    uint64_t v27 = v44[8];
    uint64_t v40 = v44[9];
    sub_21F2B458C((uint64_t)v44, (uint64_t)v45, &qword_267EC7C20);
    if (v46 == 1)
    {
      sub_21F420F18();
    }
    else
    {
      uint64_t v47 = v19;
      uint64_t v48 = v20;
      uint64_t v49 = v21;
      uint64_t v50 = v22;
      uint64_t v51 = v23;
      uint64_t v52 = v24;
      uint64_t v53 = v25;
      uint64_t v54 = v26;
      uint64_t v55 = v27;
      uint64_t v56 = v40;
      sub_21F420F18();
      sub_21F362CC4();
      sub_21F2B4758(v44);
    }
    uint64_t v2 = v38;
    uint64_t v4 = v39;
    unint64_t v7 = v43;
    uint64_t result = sub_21F420F48();
    uint64_t v28 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v39 + 48) + 8 * v11) = v41;
    ++*(void *)(v39 + 16);
    int64_t v10 = v42;
  }
  uint64_t v16 = v10 + 4;
  if (v10 + 4 >= v37)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_38;
  }
  unint64_t v14 = *(void *)(v36 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_36;
    }
    unint64_t v14 = *(void *)(v36 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F2D40C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB0);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D4374()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80A0);
  uint64_t v7 = sub_21F420918();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_21F2D8A9C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
    uint64_t result = sub_21F420028();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D4724()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80F8);
  uint64_t result = sub_21F420918();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_21F420EE8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D4988()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8070);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F420F48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x21F2D4D24);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2D4D44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8078);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_21F420F48();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x21F2D5084);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_21F2D5098()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8098);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v33 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v34 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v35 = v2;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v38 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v38 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 56 * v14;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    char v36 = *(unsigned char *)(v19 + 49);
    char v37 = *(unsigned char *)(v19 + 48);
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v22, v23);
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 56 * v11;
    *(void *)uint64_t v12 = v20;
    *(void *)(v12 + 8) = v21;
    *(void *)(v12 + 16) = v22;
    *(void *)(v12 + 24) = v23;
    *(void *)(v12 + 32) = v24;
    *(void *)(v12 + 40) = v25;
    *(unsigned char *)(v12 + 48) = v37;
    *(unsigned char *)(v12 + 49) = v36;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v35;
    int64_t v10 = v38;
  }
  uint64_t v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v34) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D53C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21F41FED8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80C8);
  uint64_t v7 = sub_21F420918();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_21F2D8A9C(&qword_267EC80B8, MEMORY[0x263F740A0]);
    uint64_t result = sub_21F420028();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D5770()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8088);
  uint64_t v3 = sub_21F420918();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v22 = v18[2];
    uint64_t v21 = v18[3];
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    _OWORD v12[2] = v22;
    uint64_t v12[3] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F2D5A4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC80A8);
  uint64_t result = sub_21F420918();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_21F420EF8();
    sub_21F420F08();
    uint64_t result = sub_21F420F48();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t _s28SiriPrivateLearningInference13CoreDuetEventV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_21F420DF8(), uint64_t result = 0, (v9 & 1) != 0))
  {
    BOOL v11 = v3 == v6 && v4 == v7;
    if (v11 || (v12 = sub_21F420DF8(), uint64_t result = 0, (v12 & 1) != 0))
    {
      uint64_t v13 = *(void *)(v2 + 16);
      if (v13 == *(void *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        if (v13)
        {
          unint64_t v14 = 0;
          uint64_t v15 = 32;
          while (v14 < *(void *)(v2 + 16))
          {
            uint64_t result = sub_21F29F920(v2 + v15, (uint64_t)v19);
            unint64_t v16 = *(void *)(v5 + 16);
            if (v14 == v16)
            {
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
              goto LABEL_22;
            }
            if (v14 >= v16) {
              goto LABEL_28;
            }
            sub_21F2A09A8(v19, (uint64_t)&v20);
            sub_21F29F920(v5 + v15, (uint64_t)v22 + 8);
            v19[2] = v22[0];
            v19[3] = v22[1];
            v19[4] = v22[2];
            v19[0] = v20;
            v19[1] = v21;
            __swift_project_boxed_opaque_existential_1(v19, *((uint64_t *)&v21 + 1));
            char v17 = sub_21F41F7D8();
            if (v17 == 2)
            {
              sub_21F29FA48((uint64_t)v19, &qword_267EC8100);
LABEL_24:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            char v18 = v17;
            uint64_t result = sub_21F29FA48((uint64_t)v19, &qword_267EC8100);
            if ((v18 & 1) == 0) {
              goto LABEL_24;
            }
            ++v14;
            v15 += 40;
            if (v13 == v14) {
              goto LABEL_22;
            }
          }
          __break(1u);
LABEL_28:
          __break(1u);
        }
        else
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_21F2D5EC4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21F2D5EFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = a1 + 32;
    uint64_t v8 = a2 + 56;
    uint64_t v9 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_21F29F920(v7 + 40 * v6, (uint64_t)&v20);
      __swift_project_boxed_opaque_existential_1(&v20, v21);
      uint64_t DynamicType = swift_getDynamicType();
      if (!*(void *)(a2 + 16)) {
        goto LABEL_12;
      }
      uint64_t v11 = DynamicType;
      uint64_t v12 = sub_21F420EE8();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      if (*(void *)(v15 + 8 * v14) != v11) {
        break;
      }
LABEL_3:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
LABEL_4:
      if (++v6 == v4) {
        return v22;
      }
    }
    uint64_t v16 = ~v13;
    while (1)
    {
      unint64_t v14 = (v14 + 1) & v16;
      if (((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        break;
      }
      if (*(void *)(v15 + 8 * v14) == v11) {
        goto LABEL_3;
      }
    }
LABEL_12:
    sub_21F2A09A8(&v20, (uint64_t)v19);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_21F2C33E4(0, *(void *)(v9 + 16) + 1, 1);
    }
    uint64_t v9 = v22;
    unint64_t v18 = *(void *)(v22 + 16);
    unint64_t v17 = *(void *)(v22 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_21F2C33E4(v17 > 1, v18 + 1, 1);
      uint64_t v9 = v22;
    }
    *(void *)(v9 + 16) = v18 + 1;
    sub_21F2A09A8(v19, v9 + 40 * v18 + 32);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_21F2D60B8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  sub_21F41F418();
  sub_21F2D8A9C(&qword_267EC80E0, MEMORY[0x263F72C18]);
  uint64_t result = sub_21F420538();
  uint64_t v4 = result;
  uint64_t v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21F420B98();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      return v4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return v4;
    }
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x223C4A6D0](i, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_21F2CCAE4(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2D6228(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_21F2D887C();
  uint64_t result = sub_21F420538();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v5;
      _OWORD v10[2] = *(_OWORD *)(v4 + 32);
      __int16 v11 = *(_WORD *)(v4 + 48);
      sub_21F2D88D0((uint64_t)v10);
      sub_21F2CDED4((uint64_t)v8, (uint64_t)v10);
      uint64_t v6 = v8[2];
      uint64_t v7 = v8[3];
      swift_bridgeObjectRelease();
      sub_21F2AA27C(v6, v7);
      v4 += 56;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_21F2D62EC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  sub_21F41F338();
  sub_21F2D8A9C(&qword_267EC80D0, MEMORY[0x263F72A98]);
  uint64_t result = sub_21F420538();
  uint64_t v4 = result;
  uint64_t v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21F420B98();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      return v4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return v4;
    }
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x223C4A6D0](i, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_21F2CC758(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2D645C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_21F420538();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_21F2CD138(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_21F2D64F4(uint64_t a1)
{
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  BOOL v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_21F2D8A9C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  uint64_t v29 = sub_21F420538();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    BOOL v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_21F2CD2E8(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_21F2D679C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_21F420538();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_21F2CD60C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t type metadata accessor for FeaturisedTurn(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD389C8);
}

uint64_t sub_21F2D6830(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_21F2D6868()
{
  unint64_t result = qword_267EC8068;
  if (!qword_267EC8068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC7F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8068);
  }
  return result;
}

uint64_t sub_21F2D68C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for CoreDuetEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CoreDuetEvent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CoreDuetEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CoreDuetEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDuetEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDuetEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDuetEvent()
{
  return &type metadata for CoreDuetEvent;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeaturisedTurn(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_21F41F198();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeaturisedTurn(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_21F41F198();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_21F41F198();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_21F41F198();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_21F41F198();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_21F41F198();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturisedTurn(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2D7500);
}

uint64_t sub_21F2D7500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeaturisedTurn(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2D762C);
}

uint64_t sub_21F2D762C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_21F41F228();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21F2D7740()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2D8490(319, &qword_26AD38718, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeaturisedSession(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_21F41F228();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t destroy for FeaturisedSession(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

void *initializeWithCopy for FeaturisedSession(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for FeaturisedSession(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

void *initializeWithTake for FeaturisedSession(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for FeaturisedSession(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  int v16 = v15(v14, 1, v9);
  if (!v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturisedSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2D8128);
}

uint64_t sub_21F2D8128(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeaturisedSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2D826C);
}

void *sub_21F2D826C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_21F2D839C()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2D8490(319, (unint64_t *)&qword_26AD38740, MEMORY[0x263F07508]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_21F2D8490(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_21F420798();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_21F2D84E4(uint64_t a1)
{
  uint64_t v2 = sub_21F41FED8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_21F2D8A9C(&qword_267EC80B8, MEMORY[0x263F740A0]);
  uint64_t result = sub_21F420538();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_21F2CE0D0((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_21F2D8680(uint64_t a1)
{
  return sub_21F2D86E8(a1, (void (*)(void))sub_21F2C6EB4, (uint64_t)&type metadata for ContactSuggestionTag, (void (*)(char *, void))sub_21F2CDACC);
}

uint64_t sub_21F2D86B4(uint64_t a1)
{
  return sub_21F2D86E8(a1, (void (*)(void))sub_21F2C6E5C, (uint64_t)&type metadata for MediaSuggestionTag, (void (*)(char *, void))sub_21F2CD708);
}

uint64_t sub_21F2D86E8(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_21F420538();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_21F2D8768(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_21F2D8828();
  uint64_t result = sub_21F420538();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F2CE3F4(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

unint64_t sub_21F2D8828()
{
  unint64_t result = qword_267EC8080;
  if (!qword_267EC8080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8080);
  }
  return result;
}

unint64_t sub_21F2D887C()
{
  unint64_t result = qword_267EC8090;
  if (!qword_267EC8090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8090);
  }
  return result;
}

uint64_t sub_21F2D88D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_21F2AA1D0(v2, v3);
  return a1;
}

uint64_t sub_21F2D8928(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_21F2AA27C(v2, v3);
  return a1;
}

uint64_t sub_21F2D8980(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2D89E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_21F2D8A48()
{
  unint64_t result = qword_267EC80B0;
  if (!qword_267EC80B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC80B0);
  }
  return result;
}

uint64_t sub_21F2D8A9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F2D8AE4()
{
  type metadata accessor for MessagesDeadEndClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB48);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_26AD3AB30 = 91;
  *(void *)algn_26AD3AB38 = 0xE100000000000000;
  return result;
}

uint64_t sub_21F2D8B68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RuleResult();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF28);
  uint64_t v5 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0) - 8);
  uint64_t v6 = *(void *)(*(void *)v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_21F423CA0;
  uint64_t v9 = (void *)(v8 + v7);
  *uint64_t v9 = 0xD00000000000001DLL;
  v9[1] = 0x800000021F4335B0;
  sub_21F2DEDF8();
  swift_storeEnumTagMultiPayload();
  sub_21F2D9D08((uint64_t)v4, v8 + v7 + v5[14], (uint64_t (*)(void))type metadata accessor for RuleResult);
  uint64_t v10 = (void *)(v8 + v7 + v6);
  uint64_t v11 = (uint64_t)v10 + v5[14];
  *uint64_t v10 = 0xD00000000000002BLL;
  v10[1] = 0x800000021F4335D0;
  sub_21F2D8D74(v11);
  uint64_t v12 = (void *)(v8 + v7 + 2 * v6);
  uint64_t v13 = (void *)((char *)v12 + v5[14]);
  *uint64_t v12 = 0xD00000000000001CLL;
  v12[1] = 0x800000021F433600;
  sub_21F3C2048(v13);
  uint64_t v14 = (void *)(v8 + v7 + 3 * v6);
  uint64_t v15 = (void *)((char *)v14 + v5[14]);
  *uint64_t v14 = 0xD00000000000001BLL;
  v14[1] = 0x800000021F433620;
  sub_21F3BBC2C(a1, v15);
  return v8;
}

uint64_t sub_21F2D8D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v61 = sub_21F41FA58();
  uint64_t v1 = *(void *)(v61 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v61);
  uint64_t v4 = &v55[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v59 = &v55[-v6];
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v55[-v7];
  uint64_t v9 = sub_21F41FC68();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = (void *)sub_21F29EBE4(v13);
  swift_bridgeObjectRelease();
  uint64_t v60 = v1;
  uint64_t v58 = v4;
  if (!v14) {
    goto LABEL_5;
  }
  if (!v14[2])
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    goto LABEL_6;
  }
  uint64_t v16 = v14[4];
  uint64_t v15 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F73FD0], v9);
  uint64_t v17 = sub_21F41FC58();
  uint64_t v19 = v18;
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  if (!v15) {
    goto LABEL_13;
  }
  if (v16 == v17 && v15 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_21F29EBFC(v22);
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_18:
    type metadata accessor for RuleResult();
    return swift_storeEnumTagMultiPayload();
  }
  unint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    unint64_t v25 = v23 + 16 * v24;
    uint64_t v27 = *(void *)(v25 + 16);
    uint64_t v26 = *(void *)(v25 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v26 = 0;
  }
  uint64_t v30 = v60;
  uint64_t v29 = v61;
  int64_t v31 = *(void (**)(void))(v60 + 104);
  unsigned int v56 = *MEMORY[0x263F73F40];
  uint64_t v57 = (void (*)(unsigned char *, void, uint64_t))v31;
  v31(v8);
  uint64_t v32 = sub_21F41FA48();
  uint64_t v34 = v33;
  uint64_t v60 = *(void *)(v30 + 8);
  ((void (*)(unsigned char *, uint64_t))v60)(v8, v29);
  if (v26)
  {
    if (v27 == v32 && v26 == v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      type metadata accessor for RuleResult();
      swift_storeEnumTagMultiPayload();
      return swift_bridgeObjectRelease();
    }
    char v35 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v24)
  {
    if (v24 > *(void *)(v23 + 16))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    unint64_t v36 = v23 + 16 * v24;
    uint64_t v38 = *(void *)(v36 + 16);
    uint64_t v37 = *(void *)(v36 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v37 = 0;
  }
  uint64_t v39 = v59;
  uint64_t v40 = v61;
  v57(v59, *MEMORY[0x263F73F38], v61);
  uint64_t v41 = sub_21F41FA48();
  uint64_t v43 = v42;
  ((void (*)(unsigned char *, uint64_t))v60)(v39, v40);
  if (!v37)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v38 == v41 && v37 == v43)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  char v44 = sub_21F420DF8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_37:
  unint64_t v45 = v24 - 2;
  if (v24 < 2) {
    unint64_t v45 = 0;
  }
  unint64_t v46 = *(void *)(v23 + 16);
  if (v46 < v45 || v46 < v24) {
    goto LABEL_52;
  }
  if (v45 == v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    goto LABEL_45;
  }
  if (v45 < v24)
  {
    uint64_t v49 = v23 + 16 * v45;
    uint64_t v47 = *(void *)(v49 + 32);
    uint64_t v48 = *(void *)(v49 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_45:
    uint64_t v50 = v58;
    uint64_t v51 = v61;
    v57(v58, v56, v61);
    uint64_t v52 = sub_21F41FA48();
    uint64_t v54 = v53;
    ((void (*)(unsigned char *, uint64_t))v60)(v50, v51);
    if (v48)
    {
      if (v47 == v52 && v48 == v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_18;
    }
    goto LABEL_13;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t MessagesDeadEndClassifier.deinit()
{
  return v0;
}

uint64_t MessagesDeadEndClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F2D9398(uint64_t a1)
{
  return sub_21F2D93BC(a1);
}

uint64_t sub_21F2D93BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RuleResult();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F3C2270(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_21F2C6D10((uint64_t)v7);
    if (*(void *)(a1 + 16))
    {
LABEL_3:
      unint64_t v12 = sub_21F41F1B8();
      unint64_t v14 = v13;
LABEL_14:
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_21F41FF28();
      __swift_project_value_buffer(v25, (uint64_t)qword_26AD3C910);
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_21F41FF08();
      os_log_type_t v27 = sub_21F420668();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v53 = v29;
        *(_DWORD *)uint64_t v28 = 136315394;
        if (qword_26AD3AB40 != -1) {
          swift_once();
        }
        uint64_t v30 = qword_26AD3AB30;
        unint64_t v31 = *(void *)algn_26AD3AB38;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_21F2A02C4(v30, v31, &v53);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_21F2A02C4(v12, v14, &v53);
        sub_21F4207D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21F29A000, v26, v27, "%s Skipping conversation with id=%s with no dismissal features", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v29, -1, -1);
        MEMORY[0x223C4B440](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x263F8EE78];
    }
LABEL_13:
    unint64_t v14 = 0x800000021F433640;
    unint64_t v12 = 0xD000000000000014;
    goto LABEL_14;
  }
  sub_21F2D9D08((uint64_t)v7, (uint64_t)v11, type metadata accessor for FeaturisedTurn);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_21F29DE04(v15);
  char v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_21F2D9D70((uint64_t)v11, type metadata accessor for FeaturisedTurn);
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
    goto LABEL_13;
  }
  uint64_t v19 = sub_21F2D8B68((uint64_t)v11);
  if (qword_26AD3AB40 != -1) {
    swift_once();
  }
  sub_21F413D80(qword_26AD3AB30, *(unint64_t *)algn_26AD3AB38, v19);
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    *(void *)&long long v51 = v16;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0);
    unint64_t v22 = v19
        + ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80));
    uint64_t v23 = *(void *)(*(void *)(v21 - 8) + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v24 = v22 + *(int *)(v21 + 48);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v24) = sub_21F39923C(v24, (uint64_t)v4);
      sub_21F2D9D70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RuleResult);
      if ((v24 & 1) == 0) {
        break;
      }
      v22 += v23;
      if (!--v20)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v51;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v32 = swift_bridgeObjectRetain();
  unint64_t v33 = sub_21F29EB10(v32);
  swift_bridgeObjectRelease();
  if (!v33)
  {
LABEL_36:
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_21F41FF28();
    __swift_project_value_buffer(v44, (uint64_t)qword_26AD3C910);
    unint64_t v45 = sub_21F41FF08();
    os_log_type_t v46 = sub_21F420668();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v53 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v49 = qword_26AD3AB30;
      unint64_t v50 = *(void *)algn_26AD3AB38;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_21F2A02C4(v49, v50, &v53);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v45, v46, "%s message does not have 1 recipient, rejecting", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v48, -1, -1);
      MEMORY[0x223C4B440](v47, -1, -1);
    }

LABEL_41:
    sub_21F2D9D70((uint64_t)v11, type metadata accessor for FeaturisedTurn);
    return MEMORY[0x263F8EE78];
  }
  if (!(v33 >> 62))
  {
    if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_21F420B98();
  swift_bridgeObjectRelease();
  if (v43 != 1)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_25:
  uint64_t v34 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7790);
  uint64_t v35 = swift_allocObject();
  long long v51 = xmmword_21F422460;
  *(_OWORD *)(v35 + 16) = xmmword_21F422460;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7980);
  uint64_t v36 = sub_21F41F228();
  uint64_t v37 = *(void *)(v36 - 8);
  unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v51;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 16))(v39 + v38, v11, v36);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_21F420B98();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v41) {
    goto LABEL_33;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    uint64_t v41 = MEMORY[0x223C4A6D0](0, v33);
    goto LABEL_33;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v41 = *(void *)(v33 + 32);
    swift_retain();
LABEL_33:
    swift_bridgeObjectRelease();
    *(void *)(v35 + 56) = &type metadata for MessagesAbandonmentClassification;
    *(void *)(v35 + 64) = &protocol witness table for MessagesAbandonmentClassification;
    uint64_t v42 = (void *)swift_allocObject();
    *(void *)(v35 + 32) = v42;
    long long v42[2] = v34;
    v42[3] = v39;
    v42[4] = MEMORY[0x263F8EE78];
    v42[5] = v41;
    sub_21F2D9D70((uint64_t)v11, type metadata accessor for FeaturisedTurn);
    return v35;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MessagesDeadEndClassifier()
{
  return self;
}

uint64_t method lookup function for MessagesDeadEndClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MessagesDeadEndClassifier);
}

uint64_t dispatch thunk of MessagesDeadEndClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_21F2D9D08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2D9D70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F2D9DD0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F2D9E18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaSignalScorer()
{
  return self;
}

unint64_t CoreDuetEventType.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

SiriPrivateLearningInference::CoreDuetEventType_optional __swiftcall CoreDuetEventType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21F420C28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_21F2D9F54(unsigned __int8 *a1, char *a2)
{
  return sub_21F32F810(*a1, *a2);
}

unint64_t sub_21F2D9F64()
{
  unint64_t result = qword_267EC8108;
  if (!qword_267EC8108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8108);
  }
  return result;
}

uint64_t sub_21F2D9FB8()
{
  return sub_21F3FE6CC();
}

uint64_t sub_21F2D9FC0()
{
  return sub_21F330358();
}

uint64_t sub_21F2D9FC8()
{
  return sub_21F330B88();
}

SiriPrivateLearningInference::CoreDuetEventType_optional sub_21F2D9FD0(Swift::String *a1)
{
  return CoreDuetEventType.init(rawValue:)(*a1);
}

unint64_t sub_21F2D9FDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CoreDuetEventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CoreDuetEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CoreDuetEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2DA160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDuetEventType()
{
  return &type metadata for CoreDuetEventType;
}

uint64_t sub_21F2DA198(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8220);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2DC3DC();
  sub_21F420F68();
  v8[15] = 0;
  sub_21F420D38();
  if (!v1)
  {
    v8[14] = 1;
    sub_21F420D38();
    v8[13] = 2;
    sub_21F420D38();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_21F2DA338()
{
  uint64_t v1 = 6581861;
  if (*v0 != 1) {
    uint64_t v1 = 0x61566C616E676973;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_21F2DA390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2DC0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F2DA3B8(uint64_t a1)
{
  unint64_t v2 = sub_21F2DC3DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2DA3F4(uint64_t a1)
{
  unint64_t v2 = sub_21F2DC3DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_21F2DA430(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_21F2DC1FC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
}

uint64_t sub_21F2DA460(void *a1)
{
  return sub_21F2DA198(a1);
}

BOOL sub_21F2DA480(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL static ScoreStep.== infix(_:_:)(double *a1, double *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    uint64_t v15 = type metadata accessor for ScoreStep();
    return static DomainSuggestionSignal.== infix(_:_:)((unsigned __int8 *)a1 + *(int *)(v15 + 52), (unsigned __int8 *)a2 + *(int *)(v15 + 52), a3, a4, a5, a6);
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for ScoreStep()
{
  return swift_getGenericMetadata();
}

BOOL sub_21F2DA574(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_21F2DA584()
{
  return sub_21F420F08();
}

uint64_t sub_21F2DA5AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61684365726F6373 && a2 == 0xEB0000000065676ELL;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E676973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_21F2DA6B0()
{
  return sub_21F420F48();
}

uint64_t sub_21F2DA6F8(char a1)
{
  if (a1) {
    return 0x6C616E676973;
  }
  else {
    return 0x61684365726F6373;
  }
}

BOOL sub_21F2DA734(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F2DA574(*a1, *a2);
}

uint64_t sub_21F2DA74C()
{
  return sub_21F2DA6B0();
}

uint64_t sub_21F2DA760()
{
  return sub_21F2DA584();
}

uint64_t sub_21F2DA774()
{
  return sub_21F420F48();
}

uint64_t sub_21F2DA7C0()
{
  return sub_21F2DA6F8(*v0);
}

uint64_t sub_21F2DA7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2DA5AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F2DA808@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F2DC3D4();
  *a1 = result;
  return result;
}

uint64_t sub_21F2DA83C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_21F2DA890(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t ScoreStep.encode(to:)(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  uint64_t v4 = a2[4];
  uint64_t v5 = a2[5];
  uint64_t v16 = a2[3];
  uint64_t v17 = v3;
  *(void *)&long long v20 = v3;
  *((void *)&v20 + 1) = v16;
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  type metadata accessor for ScoreStep.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_21F420D68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v18;
  sub_21F420F68();
  uint64_t v11 = *((void *)v10 + 2);
  long long v20 = *v10;
  uint64_t v21 = v11;
  char v23 = 0;
  sub_21F2DAB3C();
  uint64_t v12 = v19;
  sub_21F420D58();
  if (!v12)
  {
    char v23 = 1;
    *(void *)&long long v20 = v17;
    *((void *)&v20 + 1) = v16;
    uint64_t v21 = v15;
    uint64_t v22 = v14;
    type metadata accessor for DomainSuggestionSignal();
    swift_getWitnessTable();
    sub_21F420D58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for ScoreStep.CodingKeys()
{
  return swift_getGenericMetadata();
}

unint64_t sub_21F2DAB3C()
{
  unint64_t result = qword_267EC8110;
  if (!qword_267EC8110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8110);
  }
  return result;
}

uint64_t ScoreStep.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)&long long v32 = a2;
  uint64_t v26 = a6;
  *((void *)&v32 + 1) = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v29 = type metadata accessor for DomainSuggestionSignal();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v28 = (char *)&v24 - v11;
  *(void *)&long long v32 = a2;
  *((void *)&v32 + 1) = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  type metadata accessor for ScoreStep.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_21F420CD8();
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v13 = (char *)&v24 - v12;
  *(void *)&long long v32 = a2;
  *((void *)&v32 + 1) = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v14 = type metadata accessor for ScoreStep();
  uint64_t v24 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v24 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = v31;
  sub_21F420F58();
  if (v17)
  {
    uint64_t v23 = (uint64_t)a1;
  }
  else
  {
    unint64_t v31 = a1;
    uint64_t v19 = v27;
    char v18 = v28;
    uint64_t v20 = v29;
    char v35 = 0;
    sub_21F2DAF18();
    sub_21F420CB8();
    uint64_t v21 = v33;
    *(_OWORD *)uint64_t v16 = v32;
    *((void *)v16 + 2) = v21;
    LOBYTE(v32) = 1;
    swift_getWitnessTable();
    sub_21F420CB8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v30);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v16[*(int *)(v14 + 52)], v18, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v26, v16, v14);
    uint64_t v23 = (uint64_t)v31;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v23);
}

unint64_t sub_21F2DAF18()
{
  unint64_t result = qword_267EC8118[0];
  if (!qword_267EC8118[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EC8118);
  }
  return result;
}

uint64_t sub_21F2DAF6C@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  uint64_t v6 = (char *)a2 + *(int *)(type metadata accessor for ScoreStep() + 52);
  uint64_t v7 = type metadata accessor for DomainSuggestionSignal();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a1, v7);
}

uint64_t sub_21F2DB024@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return ScoreStep.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_21F2DB048(void *a1, void *a2)
{
  return ScoreStep.encode(to:)(a1, a2);
}

BOOL sub_21F2DB060(double *a1, double *a2, uint64_t a3)
{
  return static ScoreStep.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_21F2DB070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_21F2DB078()
{
  uint64_t result = type metadata accessor for DomainSuggestionSignal();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21F2DB11C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = v7 + 1;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v10 = *(void *)(v5 + 64);
  }
  else {
    size_t v10 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v11 = ((v7 + 1) & ~(unint64_t)v7)
      + v10
      + ((v7 + 24) & ~(unint64_t)v7);
  int v12 = v7 & 0x100000;
  if (v8 > 7 || v12 != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v15 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v8;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v17 = (unsigned char *)(((unint64_t)a1 + v8 + 24) & ~v8);
    char v18 = (unsigned char *)(((unint64_t)a2 + v8 + 24) & ~v8);
    *uint64_t v17 = *v18;
    uint64_t v19 = (void *)((unint64_t)&v17[v9] & v16);
    uint64_t v20 = (const void *)((unint64_t)&v18[v9] & v16);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4))
    {
      memcpy(v19, v20, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_21F2DB2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v3 = (((a1 + *(unsigned __int8 *)(v6 + 80) + 24) | *(unsigned __int8 *)(v6 + 80)) + 1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v2);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
    return v5(v3, v2);
  }
  return result;
}

uint64_t sub_21F2DB394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unsigned char *)((v7 + 24 + a1) & ~v7);
  uint64_t v9 = (unsigned char *)((v7 + 24 + a2) & ~v7);
  *uint64_t v8 = *v9;
  size_t v10 = (void *)((unint64_t)&v8[v7 + 1] & ~v7);
  unint64_t v11 = (const void *)((unint64_t)&v9[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v12 = *(void *)(v6 + 64);
    }
    else {
      size_t v12 = *(void *)(v6 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v4);
  }
  return a1;
}

void *sub_21F2DB4D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (unsigned char *)(((unint64_t)a1 + v6 + 24) & ~v6);
  uint64_t v8 = (unsigned char *)(((unint64_t)a2 + v6 + 24) & ~v6);
  *uint64_t v7 = *v8;
  uint64_t v9 = (void *)((unint64_t)&v7[v6 + 1] & ~v6);
  size_t v10 = (void *)((unint64_t)&v8[v6 + 1] & ~v6);
  unint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v12 = v11(v9, 1, v4);
  int v13 = v11(v10, 1, v4);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v9, v10, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
      return a1;
    }
    int v14 = *(_DWORD *)(v5 + 84);
    size_t v15 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v9, v10, v4);
      return a1;
    }
    uint64_t v17 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v16 = v5 + 8;
    v17(v9, v4);
    int v14 = *(_DWORD *)(v16 + 76);
    size_t v15 = *(void *)(v16 + 56);
  }
  if (v14) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  memcpy(v9, v10, v18);
  return a1;
}

uint64_t sub_21F2DB68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unsigned char *)((v7 + 24 + a1) & ~v7);
  uint64_t v9 = (unsigned char *)((v7 + 24 + a2) & ~v7);
  *uint64_t v8 = *v9;
  size_t v10 = (void *)((unint64_t)&v8[v7 + 1] & ~v7);
  unint64_t v11 = (const void *)((unint64_t)&v9[v7 + 1] & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v12 = *(void *)(v6 + 64);
    }
    else {
      size_t v12 = *(void *)(v6 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_21F2DB7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (unsigned char *)((v7 + 24 + a1) & ~v7);
  uint64_t v9 = (unsigned char *)((v7 + 24 + a2) & ~v7);
  *uint64_t v8 = *v9;
  size_t v10 = (void *)((unint64_t)&v8[v7 + 1] & ~v7);
  unint64_t v11 = (void *)((unint64_t)&v9[v7 + 1] & ~v7);
  size_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v13 = v12(v10, 1, v4);
  int v14 = v12(v11, 1, v4);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v10, v11, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v4);
      return a1;
    }
    int v15 = *(_DWORD *)(v6 + 84);
    size_t v16 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v10, v11, v4);
      return a1;
    }
    size_t v18 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v17 = v6 + 8;
    v18(v10, v4);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v10, v11, v19);
  return a1;
}

uint64_t sub_21F2DB97C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0xF7) {
    unsigned int v7 = 247;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  if (v5) {
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v10 = v8 + 1;
  int v11 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_29;
  }
  uint64_t v12 = v9 + (v10 & ~v8) + ((v8 + 24) & ~v8);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_29;
      }
      goto LABEL_21;
    }
    if (v16 < 2)
    {
LABEL_29:
      size_t v18 = (unsigned __int8 *)(((unint64_t)a1 + v8 + 24) & ~v8);
      if (v6 > 0xF7)
      {
        unsigned int v21 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v18[v10] & ~v8);
        if (v21 >= 2) {
          return v21 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unsigned int v19 = *v18;
        if (v19 >= 3) {
          unsigned int v20 = v19 - 2;
        }
        else {
          unsigned int v20 = 0;
        }
        if (v20 >= 7) {
          return v20 - 6;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_29;
  }
LABEL_21:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v12 | v17) + 1;
}

void sub_21F2DBB78(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0xF7) {
    unsigned int v10 = 247;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = v11 + 1;
  size_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v13;
  }
  size_t v14 = ((v11 + 1) & ~v11) + v13 + ((v11 + 24) & ~v11);
  BOOL v15 = a3 >= v10;
  unsigned int v16 = a3 - v10;
  if (v16 == 0 || !v15)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v14 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v17 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
  if (!HIWORD(v17))
  {
    if (v17 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v17 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v18 = ~v10 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v20 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
LABEL_25:
  uint64_t v21 = ~v11;
  switch(v6)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x21F2DBE90);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        uint64_t v22 = (unsigned char *)((unint64_t)&a1[v11 + 24] & v21);
        if (v9 > 0xF7)
        {
          uint64_t v23 = (unsigned char *)((unint64_t)&v22[v12] & v21);
          if (v9 >= a2)
          {
            uint64_t v27 = a2 + 1;
            uint64_t v28 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            v28((unint64_t)&v22[v12] & v21, v27);
          }
          else
          {
            if (v13 <= 3) {
              int v24 = ~(-1 << (8 * v13));
            }
            else {
              int v24 = -1;
            }
            if (v13)
            {
              int v25 = v24 & (~v9 + a2);
              if (v13 <= 3) {
                int v26 = v13;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v13);
              switch(v26)
              {
                case 2:
                  *(_WORD *)uint64_t v23 = v25;
                  break;
                case 3:
                  *(_WORD *)uint64_t v23 = v25;
                  v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v23 = v25;
                  break;
                default:
                  *uint64_t v23 = v25;
                  break;
              }
            }
          }
        }
        else
        {
          *uint64_t v22 = a2 + 8;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SignalScorer()
{
  return self;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoreChange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ScoreChange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoreChange()
{
  return &type metadata for ScoreChange;
}

unsigned char *sub_21F2DBF5C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2DC028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_21F2DC050()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F2DC06C()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F2DC088()
{
  return swift_getWitnessTable();
}

uint64_t sub_21F2DC0A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61566C616E676973 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_21F2DC1FC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8230);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2DC3DC();
  sub_21F420F58();
  char v12 = 0;
  sub_21F420C98();
  double v7 = v6;
  char v11 = 1;
  sub_21F420C98();
  char v10 = 2;
  sub_21F420C98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

uint64_t sub_21F2DC3D4()
{
  return 2;
}

unint64_t sub_21F2DC3DC()
{
  unint64_t result = qword_267EC8228;
  if (!qword_267EC8228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8228);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ScoreChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2DC4FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreChange.CodingKeys()
{
  return &type metadata for ScoreChange.CodingKeys;
}

unint64_t sub_21F2DC538()
{
  unint64_t result = qword_267EC8238;
  if (!qword_267EC8238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8238);
  }
  return result;
}

unint64_t sub_21F2DC590()
{
  unint64_t result = qword_267EC8240;
  if (!qword_267EC8240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8240);
  }
  return result;
}

unint64_t sub_21F2DC5E8()
{
  unint64_t result = qword_267EC8248;
  if (!qword_267EC8248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8248);
  }
  return result;
}

uint64_t MediaPlayClassifier.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A40);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  *(void *)(v0 + 16) = 91;
  *(void *)(v0 + 24) = 0xE100000000000000;
  return v0;
}

uint64_t MediaPlayClassifier.init()()
{
  type metadata accessor for MediaPlayClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A40);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  *(void *)(v0 + 16) = 91;
  *(void *)(v0 + 24) = 0xE100000000000000;
  return v0;
}

uint64_t type metadata accessor for MediaPlayClassifier()
{
  return self;
}

uint64_t sub_21F2DC788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8258);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)a1;
  long long v16 = *(_OWORD *)(a1 + 8);
  uint64_t v17 = v9;
  uint64_t v18 = v10;
  sub_21F2DC8C4(&v15, a2, (uint64_t)v8);
  uint64_t v11 = type metadata accessor for MediaPlayClassification();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v8, 1, v11) == 1)
  {
    uint64_t result = sub_21F29FA48((uint64_t)v8, &qword_267EC8258);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(void *)(a3 + 32) = 0;
  }
  else
  {
    *(void *)(a3 + 24) = v11;
    *(void *)(a3 + 32) = &protocol witness table for MediaPlayClassification;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return sub_21F2DEAA4((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
  }
  return result;
}

uint64_t sub_21F2DC8C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v136 = a3;
  uint64_t v7 = sub_21F41F228();
  uint64_t v131 = *(void *)(v7 - 8);
  uint64_t v132 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v133 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MediaPlayClassification();
  uint64_t v137 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v115 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t *)((char *)&v115 - v16);
  uint64_t v19 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_21F29EC44(v20, (uint64_t)&v138);
  swift_bridgeObjectRelease();
  if (*((void *)&v138 + 1))
  {
    uint64_t v122 = a2;
    uint64_t v124 = v19;
    uint64_t v123 = v18;
    uint64_t v21 = v4;
    unint64_t v134 = *((void *)&v138 + 1);
    uint64_t v135 = v9;
    uint64_t v22 = v138;
    uint64_t v23 = v139;
    int v24 = v140;
    unint64_t v25 = v141;
    uint64_t v26 = swift_bridgeObjectRetain();
    sub_21F29E1C8(v26, &v138);
    swift_bridgeObjectRelease();
    unint64_t v27 = *((void *)&v138 + 1);
    if (*((void *)&v138 + 1))
    {
      uint64_t v127 = v22;
      unint64_t v128 = v25;
      uint64_t v130 = v24;
      uint64_t v117 = v12;
      long long v118 = v15;
      uint64_t v129 = v21;
      uint64_t v28 = v138;
      uint64_t v126 = v142;
      int v125 = v143;
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v120 = sub_21F29EDD4(v29);
      unint64_t v31 = v30;
      uint64_t v32 = swift_bridgeObjectRelease();
      unint64_t v121 = v31;
      if (v31)
      {
        uint64_t v119 = v23;
        unint64_t v116 = v17;
        *(void *)&long long v138 = 47;
        *((void *)&v138 + 1) = 0xE100000000000000;
        MEMORY[0x270FA5388](v32);
        *(&v115 - 2) = (uint64_t)&v138;
        swift_bridgeObjectRetain_n();
        uint64_t v33 = sub_21F2DD9D0(0x7FFFFFFFFFFFFFFFLL, 1, sub_21F2DE914, (uint64_t)(&v115 - 4), v28, v27);
        swift_bridgeObjectRelease();
        sub_21F2A9FD0(v28, v27);
        uint64_t v34 = *(void *)(v33 + 16);
        if (v34)
        {
          char v35 = (unint64_t *)(v33 + 32 * v34);
          unint64_t v36 = *v35;
          unint64_t v37 = v35[1];
          uint64_t v38 = v35[2];
          uint64_t v39 = v35[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v126 = v38;
          uint64_t v40 = v38;
          unint64_t v41 = v121;
          char v42 = sub_21F2DE96C(v36, v37, v40, v39, v120, v121);
          uint64_t v43 = v129;
          uint64_t v44 = v127;
          if (v42)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v45 = swift_bridgeObjectRetain();
            uint64_t v46 = sub_21F29EDEC(v45);
            char v48 = v47;
            swift_bridgeObjectRelease();
            if ((v48 & 1) == 0)
            {
              uint64_t v49 = swift_bridgeObjectRetain();
              char v50 = sub_21F29E8EC(v49);
              swift_bridgeObjectRelease();
              uint64_t v51 = v131;
              uint64_t v52 = v132;
              uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
              uint64_t v54 = v133;
              v53(v133, v122, v132);
              uint64_t v55 = v44;
              unsigned int v56 = v116;
              *unint64_t v116 = v46;
              *((unsigned char *)v56 + 8) = v50 & 1;
              uint64_t v57 = v123;
              v56[2] = v124;
              v56[3] = v57;
              uint64_t v58 = v134;
              v56[4] = v55;
              v56[5] = v58;
              uint64_t v59 = (char *)v56 + *(int *)(v135 + 32);
              v53(v59, (uint64_t)v54, v52);
              __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7980);
              unint64_t v60 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
              uint64_t v61 = swift_allocObject();
              *(_OWORD *)(v61 + 16) = xmmword_21F422460;
              v53((char *)(v61 + v60), (uint64_t)v59, v52);
              uint64_t v62 = v135;
              *(uint64_t *)((char *)v56 + *(int *)(v135 + 36)) = v61;
              __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A0);
              uint64_t v63 = swift_allocObject();
              *(_OWORD *)(v63 + 16) = xmmword_21F422300;
              *(void *)(v63 + 32) = v124;
              *(void *)(v63 + 40) = v57;
              uint64_t v64 = v127;
              *(void *)(v63 + 48) = v127;
              *(void *)(v63 + 56) = v58;
              uint64_t v65 = *(void (**)(char *, uint64_t))(v51 + 8);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              v65(v133, v52);
              uint64_t v9 = v62;
              sub_21F2BCCB4(v64, v58);
              *(uint64_t *)((char *)v56 + *(int *)(v62 + 40)) = v63;
              if (qword_26AD38998 != -1) {
                swift_once();
              }
              uint64_t v66 = sub_21F41FF28();
              __swift_project_value_buffer(v66, (uint64_t)qword_26AD3C910);
              uint64_t v67 = (uint64_t)v56;
              uint64_t v68 = (uint64_t)v118;
              sub_21F2DE9E4(v67, (uint64_t)v118);
              uint64_t v69 = v129;
              swift_retain();
              uint64_t v70 = sub_21F41FF08();
              os_log_type_t v71 = sub_21F420668();
              if (os_log_type_enabled(v70, v71))
              {
                uint64_t v72 = swift_slowAlloc();
                uint64_t v73 = swift_slowAlloc();
                *(void *)&long long v138 = v73;
                *(_DWORD *)uint64_t v72 = 136315394;
                uint64_t v74 = *(void *)(v69 + 16);
                unint64_t v75 = *(void *)(v69 + 24);
                swift_bridgeObjectRetain();
                uint64_t v144 = sub_21F2A02C4(v74, v75, (uint64_t *)&v138);
                sub_21F4207D8();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v72 + 12) = 2080;
                sub_21F2DE9E4(v68, (uint64_t)v117);
                uint64_t v76 = sub_21F420108();
                uint64_t v144 = sub_21F2A02C4(v76, v77, (uint64_t *)&v138);
                uint64_t v9 = v135;
                sub_21F4207D8();
                swift_bridgeObjectRelease();
                sub_21F2DEA48(v68);
                _os_log_impl(&dword_21F29A000, v70, v71, "%s classification generated: %s", (uint8_t *)v72, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x223C4B440](v73, -1, -1);
                MEMORY[0x223C4B440](v72, -1, -1);
              }
              else
              {
                swift_release();
                sub_21F2DEA48(v68);
              }

              uint64_t v78 = v137;
              sub_21F2DEAA4((uint64_t)v116, v136);
              uint64_t v86 = 0;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v136, v86, 1, v9);
            }
            sub_21F2BCCB4(v44, v134);
            if (qword_26AD38AC0 != -1) {
              swift_once();
            }
            long long v140 = &type metadata for PIMSConstraintMismatch;
            unint64_t v141 = sub_21F2DE8C0();
            *(void *)&long long v138 = 0xD000000000000016;
            *((void *)&v138 + 1) = 0x800000021F433740;
            LOBYTE(v139) = 2;
            sub_21F41F708();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v138);
            if (qword_26AD38998 != -1) {
              swift_once();
            }
            uint64_t v107 = sub_21F41FF28();
            __swift_project_value_buffer(v107, (uint64_t)qword_26AD3C910);
            swift_retain();
            uint64_t v108 = sub_21F41FF08();
            os_log_type_t v109 = sub_21F420678();
            if (os_log_type_enabled(v108, v109))
            {
              uint64_t v110 = (uint8_t *)swift_slowAlloc();
              uint64_t v111 = swift_slowAlloc();
              *(void *)&long long v138 = v111;
              *(_DWORD *)uint64_t v110 = 136315138;
              uint64_t v112 = *(void *)(v43 + 16);
              unint64_t v113 = *(void *)(v43 + 24);
              swift_bridgeObjectRetain();
              uint64_t v144 = sub_21F2A02C4(v112, v113, (uint64_t *)&v138);
              sub_21F4207D8();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_21F29A000, v108, v109, "%s Cannot extract TotalPlayLength from NowPlayingEvent", v110, 0xCu);
              uint64_t v86 = 1;
              swift_arrayDestroy();
              MEMORY[0x223C4B440](v111, -1, -1);
              MEMORY[0x223C4B440](v110, -1, -1);

LABEL_45:
              uint64_t v9 = v135;
              uint64_t v78 = v137;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v136, v86, 1, v9);
            }

            swift_release();
          }
          else
          {
            uint64_t v133 = (char *)v36;
            sub_21F2BCCB4(v127, v134);
            if (qword_26AD38AC0 != -1) {
              swift_once();
            }
            unint64_t v134 = v37;
            long long v140 = &type metadata for PIMSConstraintMismatch;
            unint64_t v141 = sub_21F2DE8C0();
            *(void *)&long long v138 = 0xD000000000000016;
            *((void *)&v138 + 1) = 0x800000021F433740;
            LOBYTE(v139) = 1;
            sub_21F41F708();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v138);
            if (qword_26AD38998 != -1) {
              swift_once();
            }
            uint64_t v96 = sub_21F41FF28();
            __swift_project_value_buffer(v96, (uint64_t)qword_26AD3C910);
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v97 = sub_21F41FF08();
            os_log_type_t v98 = sub_21F420678();
            if (os_log_type_enabled(v97, v98))
            {
              uint64_t v99 = swift_slowAlloc();
              uint64_t v100 = swift_slowAlloc();
              *(void *)&long long v138 = v100;
              *(_DWORD *)uint64_t v99 = 136315650;
              unint64_t v101 = v41;
              uint64_t v102 = *(void *)(v43 + 16);
              unint64_t v103 = *(void *)(v43 + 24);
              swift_bridgeObjectRetain();
              uint64_t v144 = sub_21F2A02C4(v102, v103, (uint64_t *)&v138);
              sub_21F4207D8();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v99 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v144 = sub_21F2A02C4(v120, v101, (uint64_t *)&v138);
              sub_21F4207D8();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v99 + 22) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v104 = MEMORY[0x223C49E30](v133, v134, v126, v39);
              unint64_t v106 = v105;
              swift_bridgeObjectRelease();
              uint64_t v144 = sub_21F2A02C4(v104, v106, (uint64_t *)&v138);
              sub_21F4207D8();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_21F29A000, v97, v98, "%s NowPlayingEvent (%s) and PlayMediaIntent (%s) media ids do not match", (uint8_t *)v99, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x223C4B440](v100, -1, -1);
              MEMORY[0x223C4B440](v99, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_release_n();
            }
          }
          uint64_t v86 = 1;
          goto LABEL_45;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v87 = v127;
        uint64_t v88 = v134;
      }
      else
      {
        sub_21F2A9FD0(v28, v27);
        uint64_t v87 = v127;
        uint64_t v88 = v134;
      }
      sub_21F2BCCB4(v87, v88);
      uint64_t v78 = v137;
      uint64_t v21 = v129;
    }
    else
    {
      sub_21F2BCCB4(v22, v134);
      uint64_t v78 = v137;
    }
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v89 = sub_21F41FF28();
    __swift_project_value_buffer(v89, (uint64_t)qword_26AD3C910);
    swift_retain();
    uint64_t v90 = sub_21F41FF08();
    os_log_type_t v91 = sub_21F420678();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      *(void *)&long long v138 = v93;
      *(_DWORD *)uint64_t v92 = 136315138;
      uint64_t v94 = *(void *)(v21 + 16);
      unint64_t v95 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_21F2A02C4(v94, v95, (uint64_t *)&v138);
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v90, v91, "%s Cannot extract media ids from NowPlayingEvent/PlayMediaIntent", v92, 0xCu);
      uint64_t v86 = 1;
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v93, -1, -1);
      MEMORY[0x223C4B440](v92, -1, -1);
    }
    else
    {

      swift_release();
      uint64_t v86 = 1;
    }
    uint64_t v9 = v135;
  }
  else
  {
    if (qword_26AD38AC0 != -1) {
      swift_once();
    }
    long long v140 = &type metadata for PIMSConstraintMismatch;
    unint64_t v141 = sub_21F2DE8C0();
    *(void *)&long long v138 = 0xD000000000000016;
    *((void *)&v138 + 1) = 0x800000021F433740;
    LOBYTE(v139) = 0;
    sub_21F41F708();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v138);
    uint64_t v78 = v137;
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_21F41FF28();
    __swift_project_value_buffer(v79, (uint64_t)qword_26AD3C910);
    swift_retain();
    uint64_t v80 = sub_21F41FF08();
    os_log_type_t v81 = sub_21F420668();
    if (os_log_type_enabled(v80, v81))
    {
      unsigned int v82 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(void *)&long long v138 = v83;
      *(_DWORD *)unsigned int v82 = 136315138;
      uint64_t v84 = *(void *)(v4 + 16);
      unint64_t v85 = *(void *)(v4 + 24);
      swift_bridgeObjectRetain();
      uint64_t v144 = sub_21F2A02C4(v84, v85, (uint64_t *)&v138);
      uint64_t v78 = v137;
      sub_21F4207D8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v80, v81, "%s Can't classify media play, attached now playing event not found", v82, 0xCu);
      uint64_t v86 = 1;
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v83, -1, -1);
      MEMORY[0x223C4B440](v82, -1, -1);
    }
    else
    {

      swift_release();
      uint64_t v86 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v136, v86, 1, v9);
}

uint64_t MediaPlayClassifier.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MediaPlayClassifier.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F2DD9AC(uint64_t a1)
{
  return sub_21F2DE404(a1);
}

uint64_t sub_21F2DD9D0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_21F2DDE74(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_21F420228();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_21F420168();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_21F420168();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_21F420258();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_21F2A7CEC(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_21F2A7CEC((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_21F420168();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_21F420258();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_21F2A7CEC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_21F2A7CEC((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_21F420B68();
  __break(1u);
LABEL_42:
  uint64_t result = sub_21F420B68();
  __break(1u);
  return result;
}

uint64_t sub_21F2DDE74(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_21F420258();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_21F2A7CEC(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_21F2A7CEC((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    _OWORD v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_21F420B68();
  __break(1u);
  return result;
}

uint64_t sub_21F2DDFD0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_21F420DF8() & 1;
  }
}

uint64_t sub_21F2DE028(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7990) - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v17 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v17[1] = v1;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v18;
    uint64_t v14 = MEMORY[0x263F8EE78];
    v17[2] = "INSendMessageIntent";
    do
    {
      sub_21F2DEBC0(v13, (uint64_t)v9);
      if (*((void *)v9 + 3) == 0xD000000000000011 && *((void *)v9 + 4) == 0x800000021F431F50
        || (sub_21F420DF8() & 1) != 0)
      {
        sub_21F2DEB50((uint64_t)v9, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21F2C32CC(0, *(void *)(v14 + 16) + 1, 1);
        }
        uint64_t v14 = v19;
        unint64_t v16 = *(void *)(v19 + 16);
        unint64_t v15 = *(void *)(v19 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_21F2C32CC(v15 > 1, v16 + 1, 1);
          uint64_t v14 = v19;
        }
        *(void *)(v14 + 16) = v16 + 1;
        sub_21F2DEB50((uint64_t)v6, v14 + v18 + v16 * v12);
      }
      else
      {
        sub_21F29FA48((uint64_t)v9, &qword_267EC7990);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

void *sub_21F2DE244(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7990);
  uint64_t v6 = a1
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 72);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    a2(&v12, v6, v6 + *(int *)(v5 + 48));
    if (v13)
    {
      sub_21F2A09A8(&v12, (uint64_t)v14);
      sub_21F2A09A8(v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_21F2A753C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v10 = v8[2];
      unint64_t v9 = v8[3];
      if (v10 >= v9 >> 1) {
        uint64_t v8 = sub_21F2A753C((void *)(v9 > 1), v10 + 1, 1, v8);
      }
      void v8[2] = v10 + 1;
      sub_21F2A09A8(&v12, (uint64_t)&v8[5 * v10 + 4]);
    }
    else
    {
      sub_21F29FA48((uint64_t)&v12, &qword_26AD3A8A8);
    }
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_21F2DE404(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7990);
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (void *)((char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v46 = *(void *)(a1 + 16);
  if (!v46)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_32:
    uint64_t v38 = sub_21F2DE028(v9);
    uint64_t v39 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v39);
    uint64_t v40 = sub_21F2DE244(v38, (void (*)(long long *__return_ptr, uint64_t, uint64_t))sub_21F2DEBB8);
    swift_bridgeObjectRelease();
    return (uint64_t)v40;
  }
  uint64_t v6 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v45 = v6;
  uint64_t v43 = *(void *)(v7 + 72);
  v42[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = v5;
  while (1)
  {
    uint64_t v10 = *(int *)(v45 + 28);
    uint64_t v55 = v44 + v43 * v8;
    uint64_t v11 = *(void *)(v55 + v10);
    int64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v48 = v8;
      uint64_t v49 = v9;
      uint64_t v56 = v5;
      swift_bridgeObjectRetain();
      sub_21F2C32CC(0, v12, 0);
      uint64_t v13 = v56;
      uint64_t v52 = sub_21F41F228();
      uint64_t v14 = *(void *)(v52 - 8);
      unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      uint64_t v50 = v14 + 16;
      uint64_t v51 = v15;
      uint64_t v47 = v11;
      unint64_t v16 = (uint64_t *)(v11 + 64);
      do
      {
        uint64_t v17 = *(v16 - 3);
        uint64_t v19 = *(v16 - 2);
        uint64_t v18 = *(v16 - 1);
        uint64_t v20 = *v16;
        uint64_t v21 = v55;
        uint64_t v22 = (char *)v4 + *(int *)(v54 + 48);
        *uint64_t v4 = *(v16 - 4);
        v4[1] = v17;
        v4[2] = v19;
        v4[3] = v18;
        v4[4] = v20;
        v51(v22, v21, v52);
        uint64_t v56 = v13;
        unint64_t v23 = *(void *)(v13 + 16);
        unint64_t v24 = *(void *)(v13 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23 >= v24 >> 1)
        {
          sub_21F2C32CC(v24 > 1, v23 + 1, 1);
          uint64_t v13 = v56;
        }
        v16 += 5;
        *(void *)(v13 + 16) = v23 + 1;
        sub_21F2DEB50((uint64_t)v4, v13+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v23);
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t v8 = v48;
      uint64_t v9 = v49;
    }
    else
    {
      uint64_t v13 = v5;
    }
    uint64_t v25 = *(void *)(v13 + 16);
    int64_t v26 = *(void *)(v9 + 16);
    int64_t v27 = v26 + v25;
    if (__OFADD__(v26, v25)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v27 <= *(void *)(v9 + 24) >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_21;
      }
    }
    else
    {
      if (v26 <= v27) {
        int64_t v29 = v26 + v25;
      }
      else {
        int64_t v29 = v26;
      }
      uint64_t v9 = sub_21F2A7680(isUniquelyReferenced_nonNull_native, v29, 1, v9);
      if (*(void *)(v13 + 16))
      {
LABEL_21:
        uint64_t v30 = *(void *)(v9 + 16);
        if ((*(void *)(v9 + 24) >> 1) - v30 < v25) {
          goto LABEL_35;
        }
        unint64_t v31 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        uint64_t v32 = *(void *)(v53 + 72);
        unint64_t v33 = v9 + v31 + v32 * v30;
        if (v13 + v31 < v33 + v32 * v25 && v33 < v13 + v31 + v32 * v25) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v25)
        {
          uint64_t v35 = *(void *)(v9 + 16);
          BOOL v36 = __OFADD__(v35, v25);
          uint64_t v37 = v35 + v25;
          if (v36) {
            goto LABEL_36;
          }
          *(void *)(v9 + 16) = v37;
        }
        goto LABEL_4;
      }
    }
    if (v25) {
      goto LABEL_34;
    }
LABEL_4:
    ++v8;
    swift_bridgeObjectRelease();
    if (v8 == v46)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

uint64_t method lookup function for MediaPlayClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MediaPlayClassifier);
}

uint64_t dispatch thunk of MediaPlayClassifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MediaPlayClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

unint64_t sub_21F2DE8C0()
{
  unint64_t result = qword_267EC8250;
  if (!qword_267EC8250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8250);
  }
  return result;
}

uint64_t sub_21F2DE914(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_21F420DF8() & 1;
  }
}

uint64_t sub_21F2DE96C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return sub_21F420D88() & 1;
  }
}

uint64_t sub_21F2DE9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2DEA48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F2DEAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2DEB08()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21F2DEB40()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21F2DEB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2DEBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21F2DC788(a1, a2, a3);
}

uint64_t sub_21F2DEBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2DEC28@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *MEMORY[0x263F73F58]);
  sub_21F4202A8();
  sub_21F29F984((uint64_t)v8, (uint64_t)v6);
  if (!v7)
  {
    sub_21F2AA088((uint64_t)v6);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v4 = 1;
    goto LABEL_6;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v4 = 0;
LABEL_6:
  sub_21F2AA088((uint64_t)v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, v4, 1, v3);
}

uint64_t sub_21F2DED60(uint64_t a1)
{
  sub_21F29F920(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  uint64_t v1 = swift_dynamicCast();
  if (v1) {
    swift_release();
  }
  return v1;
}

uint64_t sub_21F2DEDD0(uint64_t a1)
{
  return sub_21F2DED60(a1) & 1;
}

uint64_t sub_21F2DEDF8()
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E938(v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (v1 != 0xD000000000000014 || v3 != 0x800000021F4337F0)
    {
      char v4 = sub_21F420DF8();
LABEL_20:
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
LABEL_19:
    char v4 = 1;
    goto LABEL_20;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_21F29EAE0(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v8 = sub_21F29FAA4();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if (v7 != 1)
      {
        uint64_t v10 = v6 + 56;
        uint64_t v11 = 1;
        while (1)
        {
          uint64_t v12 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            break;
          }
          swift_bridgeObjectRetain();
          char v13 = sub_21F29FAA4();
          uint64_t result = swift_bridgeObjectRelease();
          if (v13) {
            goto LABEL_18;
          }
          ++v11;
          v10 += 16;
          if (v12 == v7) {
            goto LABEL_13;
          }
        }
        __break(1u);
        goto LABEL_31;
      }
LABEL_13:
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_21F29EAF8(v14);
  swift_bridgeObjectRelease();
  if (!v15)
  {
    char v4 = 0;
    return v4 & 1;
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    char v4 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v17 = sub_21F29FAA4();
  uint64_t result = swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_18;
  }
  if (v16 == 1)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    char v4 = 0;
    goto LABEL_20;
  }
  uint64_t v18 = v15 + 56;
  uint64_t v19 = 1;
  while (1)
  {
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    char v21 = sub_21F29FAA4();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_18;
    }
    ++v19;
    v18 += 16;
    if (v20 == v16) {
      goto LABEL_29;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21F2DF0B8(uint64_t a1)
{
  uint64_t v19 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x270FA5388](v19);
  char v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v7 = *(void *)(v2 + 72);
  v18[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = v19;
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  while (1)
  {
    sub_21F29F8BC(v6 + v7 * v8, (uint64_t)v4);
    if (sub_21F2DEDF8()) {
      break;
    }
    sub_21F29F9EC((uint64_t)v4);
LABEL_4:
    if (++v8 == v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v10 = *(void *)&v4[*(int *)(v9 + 24)];
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_21F29F920(v12, (uint64_t)&v23);
      sub_21F29F920((uint64_t)&v23, (uint64_t)v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      sub_21F41FCA8();
      if (swift_dynamicCast()) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v20;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_21F2A09A8(&v23, (uint64_t)v25);
    uint64_t v6 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
  }
  sub_21F29F984((uint64_t)v25, (uint64_t)&v23);
  if (!v24)
  {
    sub_21F2AA088((uint64_t)&v23);
LABEL_23:
    sub_21F2AA088((uint64_t)v25);
    swift_bridgeObjectRelease();
    sub_21F29F9EC((uint64_t)v4);
    uint64_t v7 = v21;
    goto LABEL_4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
  sub_21F41FCA8();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_23;
  }
  swift_retain();
  sub_21F41FAB8();
  swift_release_n();
  uint64_t v13 = v23;
  sub_21F2AA088((uint64_t)v25);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
LABEL_21:
    sub_21F29F9EC((uint64_t)v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = v20;
    uint64_t v7 = v21;
    goto LABEL_4;
  }
  sub_21F2DF41C();
  swift_bridgeObjectRetain();
  uint64_t v15 = (uint64_t *)(v13 + 40);
  while (1)
  {
    uint64_t v16 = *v15;
    *(void *)&v25[0] = *(v15 - 1);
    *((void *)&v25[0] + 1) = v16;
    *(void *)&long long v23 = 0x6F724764656D614ELL;
    *((void *)&v23 + 1) = 0xEA00000000007075;
    if (sub_21F420838()) {
      break;
    }
    v15 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = v19;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  sub_21F29F9EC((uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_21F2DF41C()
{
  unint64_t result = qword_267EC8260[0];
  if (!qword_267EC8260[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_267EC8260);
  }
  return result;
}

uint64_t sub_21F2DF470()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F2DF4B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for CandidateNominator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t PIMSFatalError.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSFatalError.eventName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSFatalError.eventName.modify())()
{
  return nullsub_1;
}

SiriPrivateLearningInference::PIMSFatalError __swiftcall PIMSFatalError.init(errorReason:)(SiriPrivateLearningInference::PIMSFatalErrorReason errorReason)
{
  char v2 = *(unsigned char *)errorReason;
  strcpy(v1, "PIMSFatalError");
  v1[15] = -18;
  v1[16] = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = errorReason;
  return result;
}

unint64_t PIMSFatalError.getLoggableProperties()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  *(void *)(inited + 32) = 0x616552726F727265;
  *(void *)(inited + 40) = 0xEB000000006E6F73;
  unint64_t v1 = PIMSFatalErrorReason.rawValue.getter();
  uint64_t v2 = MEMORY[0x263F740E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v3;
  return sub_21F2C0788(inited);
}

unint64_t PIMSFatalErrorReason.rawValue.getter()
{
  unint64_t result = 0xD00000000000003ELL;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000036;
      break;
    case 3:
      unint64_t result = 0xD00000000000003CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000041;
      break;
    case 6:
      unint64_t result = 0xD000000000000042;
      break;
    case 7:
      unint64_t result = 0xD000000000000047;
      break;
    case 8:
      unint64_t result = 0xD000000000000049;
      break;
    case 9:
      unint64_t result = 0xD000000000000033;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000037;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000035;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21F2DF764()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  *(void *)(inited + 32) = 0x616552726F727265;
  *(void *)(inited + 40) = 0xEB000000006E6F73;
  unint64_t v1 = PIMSFatalErrorReason.rawValue.getter();
  uint64_t v2 = MEMORY[0x263F740E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v3;
  return sub_21F2C0788(inited);
}

SiriPrivateLearningInference::PIMSFatalErrorReason_optional __swiftcall PIMSFatalErrorReason.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21F420C28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_21F2DF858(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F32F4C4(*a1, *a2);
}

unint64_t sub_21F2DF868()
{
  unint64_t result = qword_267EC82E8;
  if (!qword_267EC82E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC82E8);
  }
  return result;
}

uint64_t sub_21F2DF8BC()
{
  return sub_21F420F48();
}

uint64_t sub_21F2DF924()
{
  PIMSFatalErrorReason.rawValue.getter();
  sub_21F420148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F2DF988()
{
  return sub_21F420F48();
}

SiriPrivateLearningInference::PIMSFatalErrorReason_optional sub_21F2DF9EC(Swift::String *a1)
{
  return PIMSFatalErrorReason.init(rawValue:)(*a1);
}

unint64_t sub_21F2DF9F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PIMSFatalErrorReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for PIMSFatalError()
{
  return &type metadata for PIMSFatalError;
}

uint64_t getEnumTagSinglePayload for PIMSFatalErrorReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PIMSFatalErrorReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2DFB8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PIMSFatalErrorReason()
{
  return &type metadata for PIMSFatalErrorReason;
}

uint64_t sub_21F2DFBC4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21F2DFBD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_21F2DFBEC@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v9 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v92 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for ThinMediaGroundTruth();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v94);
  uint64_t v91 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (uint64_t)&v81 - v14;
  uint64_t v96 = (int *)type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x270FA5388](v96);
  uint64_t v88 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8300);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MediaFeedbackGroundTruth();
  uint64_t v90 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8308);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v95 = (uint64_t)&v81 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  if (v9 == 8)
  {
    return sub_21F2E07EC(a1, a5);
  }
  uint64_t v83 = v35;
  uint64_t v84 = v34;
  uint64_t v85 = v30;
  uint64_t v86 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7978);
  if (!swift_dynamicCast())
  {
    long long v107 = 0u;
    long long v108 = 0u;
    long long v106 = 0u;
    sub_21F29FA48((uint64_t)&v106, &qword_267EC8310);
    return sub_21F2E07EC(a1, a5);
  }
  uint64_t v82 = a5;
  sub_21F2E0850(&v106, &v102);
  uint64_t v37 = a1;
  uint64_t v38 = v103;
  uint64_t v39 = v104;
  __swift_project_boxed_opaque_existential_1(&v102, v103);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
  uint64_t v41 = v96[6];
  uint64_t v87 = v37;
  uint64_t v42 = (void *)(v37 + v41);
  long long v43 = *(_OWORD *)(v37 + v41 + 32);
  __int16 v109 = *(_WORD *)(v37 + v41 + 48);
  long long v44 = *(_OWORD *)(v37 + v41);
  long long v107 = *(_OWORD *)(v37 + v41 + 16);
  long long v108 = v43;
  long long v106 = v44;
  uint64_t v45 = *(void *)(v40 + 16);
  sub_21F2D88D0((uint64_t)&v106);
  if (v45 && (unint64_t v46 = sub_21F2F7F64((uint64_t)&v106), (v47 & 1) != 0))
  {
    uint64_t v48 = *(void *)(*(void *)(v40 + 56) + 8 * v46);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v48 = MEMORY[0x263F8EE88];
  }
  uint64_t v49 = v82;
  swift_bridgeObjectRelease();
  sub_21F2D8928((uint64_t)&v106);
  uint64_t v101 = v48;
  if (*(double *)(v87 + v96[8]) <= 0.0 && (v9 & 0xFE) == 6) {
    sub_21F2CD708(&v97, 5);
  }
  uint64_t v50 = v103;
  uint64_t v51 = v105;
  uint64_t v52 = __swift_project_boxed_opaque_existential_1(&v102, v103);
  *((void *)&v98 + 1) = v50;
  *(void *)&long long v99 = v51;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v97);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(boxed_opaque_existential_1, v52, v50);
  ThinMediaGroundTruth.init(completeGroundTruth:)(&v97, v95);
  sub_21F2E0868((uint64_t)&v102, (uint64_t)&v97);
  char v54 = swift_dynamicCast();
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56);
  if (v54)
  {
    v55(v18, 0, 1, v19);
    sub_21F2E099C((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MediaFeedbackGroundTruth);
    uint64_t v56 = &v21[*(int *)(v19 + 28)];
    if (*v42 == *(void *)v56 && v42[1] == *((void *)v56 + 1))
    {
      uint64_t v57 = v87;
      uint64_t v58 = v88;
      sub_21F2E07EC(v87, v88);
      uint64_t v59 = v94;
    }
    else
    {
      char v60 = sub_21F420DF8();
      uint64_t v57 = v87;
      uint64_t v58 = v88;
      sub_21F2E07EC(v87, v88);
      uint64_t v59 = v94;
      if ((v60 & 1) == 0)
      {
        sub_21F2E0A04(v58, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion);
LABEL_23:
        sub_21F2E0A04((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MediaFeedbackGroundTruth);
        goto LABEL_24;
      }
    }
    char v61 = PlusMediaSuggestion.isCorrection.getter();
    sub_21F2E0A04(v58, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion);
    if (v61) {
      sub_21F2CD708(&v97, 7);
    }
    goto LABEL_23;
  }
  v55(v18, 1, 1, v19);
  sub_21F29FA48((uint64_t)v18, &qword_267EC8300);
  uint64_t v57 = v87;
  uint64_t v59 = v94;
LABEL_24:
  uint64_t v62 = *(void *)(v57 + v96[7]);
  __swift_instantiateConcreteTypeFromMangledName(qword_267EC8318);
  unint64_t v63 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_21F422460;
  uint64_t v65 = v64 + v63;
  sub_21F2E08CC(v95, v65);
  uint64_t v66 = v84;
  sub_21F2E08CC(v65, v84);
  sub_21F2E0934(v66, (uint64_t)v25);
  uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
  if (v67(v25, 1, v59) == 1)
  {
    sub_21F29FA48((uint64_t)v25, &qword_267EC8308);
    uint64_t v68 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v69 = (uint64_t)v25;
    uint64_t v70 = v89;
    sub_21F2E099C(v69, v89, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
    sub_21F2E099C(v70, v91, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
    uint64_t v68 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v68 = sub_21F2A7DFC(0, *(void *)(v68 + 16) + 1, 1, v68);
    }
    unint64_t v72 = *(void *)(v68 + 16);
    unint64_t v71 = *(void *)(v68 + 24);
    if (v72 >= v71 >> 1) {
      uint64_t v68 = sub_21F2A7DFC(v71 > 1, v72 + 1, 1, v68);
    }
    *(void *)(v68 + 16) = v72 + 1;
    sub_21F2E099C(v91, v68+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v72, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
    uint64_t v59 = v94;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)&long long v97 = v62;
  swift_bridgeObjectRetain();
  sub_21F2A5E20(v68);
  uint64_t v73 = v97;
  uint64_t v74 = v86;
  sub_21F2E08CC(v95, v86);
  if (v67((char *)v74, 1, v59) == 1)
  {
    sub_21F29FA48(v74, &qword_267EC8308);
  }
  else
  {
    int v75 = *(unsigned __int8 *)(v74 + *(int *)(v59 + 28));
    sub_21F2E0A04(v74, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
    if (v75 == 1) {
      sub_21F2CD708(&v97, 4);
    }
  }
  uint64_t v76 = sub_21F41F228();
  uint64_t v77 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v92, 1, 1, v76);
  __int16 v100 = 0;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v97 = 0u;
  uint64_t v78 = *(void *)(v57 + v96[11]);
  uint64_t v79 = v101;
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_21F3F3BD0(v79, v78);
  sub_21F331040(v77, 0, (char **)&v97, v73, 0, 1, v80, 0, v49, 1, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F29FA48(v77, &qword_26AD38738);
  sub_21F29FA48(v95, &qword_267EC8308);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v102);
}

uint64_t sub_21F2E0720()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaSuggestionCandidateProcessor()
{
  uint64_t result = qword_267EC82F0;
  if (!qword_267EC82F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2E07B4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F2E07EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_21F2E0850(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_21F2E0868(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21F2E08CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2E0934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2E099C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2E0A04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t EntityPromptClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t EntityPromptClassifier.init()()
{
  return v0;
}

void *sub_21F2E0A7C(uint64_t a1)
{
  swift_retain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F2E278C(v3, v1, a1);
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F2E0AE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X8>)
{
  uint64_t v47 = a5;
  uint64_t v49 = a4;
  unint64_t v45 = a3;
  unint64_t v48 = a2;
  uint64_t v10 = (uint64_t *)sub_21F41F228();
  uint64_t v11 = *(v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v54 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a6;
  unint64_t v17 = *(void *)(a6 + 16);
  uint64_t v52 = v15;
  if (!v17)
  {
LABEL_5:
    if (qword_26AD38998 != -1) {
      goto LABEL_72;
    }
    goto LABEL_6;
  }
  uint64_t v18 = 0;
  uint64_t v19 = v46 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  uint64_t v20 = *(void *)(v50 + 72);
  uint64_t v51 = v19;
  while (1)
  {
    uint64_t result = sub_21F41F1D8();
    if (result) {
      break;
    }
    ++v18;
    v19 += v20;
    if (v17 == v18) {
      goto LABEL_5;
    }
  }
  unint64_t v44 = a7;
  if (v17 == v18) {
    a7 = v17;
  }
  else {
    a7 = v18 + 1;
  }
  if (v17 < a7)
  {
    __break(1u);
    return result;
  }
  if (a7 == v17)
  {
    uint64_t v29 = 1;
    a7 = v44;
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = &qword_26AD3A878;
  while (a7 < v17)
  {
    a1 = v54;
    sub_21F29F8BC(v51 + a7 * v20, v54);
    uint64_t v30 = *(int *)(v14 + 24);
    uint64_t v31 = *(void *)(a1 + v30);
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      a1 = v31 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(a1, (uint64_t)&v57);
        sub_21F29F920((uint64_t)&v57, (uint64_t)v56);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        sub_21F41FB08();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v57);
        a1 += 40;
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      a1 = v55;
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v57, (uint64_t)&v59);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_29:
      uint64_t v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
    }
    sub_21F2C2300((uint64_t)&v59, (uint64_t)&v57, &qword_26AD3A880);
    uint64_t v53 = v30;
    if (!v58)
    {
      sub_21F29FA48((uint64_t)&v57, &qword_26AD3A880);
LABEL_38:
      sub_21F29FA48((uint64_t)&v59, &qword_26AD3A880);
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      goto LABEL_47;
    }
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    sub_21F41FB08();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_38;
    }
    swift_retain();
    sub_21F41FAB8();
    swift_release_n();
    a1 = *((void *)&v57 + 1);
    uint64_t v33 = v57;
    sub_21F29FA48((uint64_t)&v59, &qword_26AD3A880);
    swift_bridgeObjectRelease();
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_21F29EE1C(v34);
    uint64_t v13 = v36;
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (v35 == v49 && v13 == v47)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v52;
LABEL_41:
        if (v33 == v48 && a1 == v45)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = 1;
        }
        else
        {
          uint64_t v13 = sub_21F420DF8();
          swift_bridgeObjectRelease();
        }
        goto LABEL_46;
      }
      char v37 = sub_21F420DF8();
      swift_bridgeObjectRelease();
      uint64_t v14 = v52;
      if (v37) {
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v52;
    }
LABEL_46:
    uint64_t v30 = v53;
LABEL_47:
    uint64_t v11 = *(void *)(v54 + v30);
    uint64_t v38 = *(void *)(v11 + 16);
    if (v38)
    {
      a1 = v11 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(a1, (uint64_t)&v57);
        sub_21F29F920((uint64_t)&v57, (uint64_t)v56);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        sub_21F41FA78();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v57);
        a1 += 40;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
      a1 = v55;
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v57, (uint64_t)&v59);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_53:
      uint64_t v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
    }
    sub_21F2C2300((uint64_t)&v59, (uint64_t)&v57, &qword_26AD3A880);
    if (!v58)
    {
      sub_21F29FA48((uint64_t)&v57, &qword_26AD3A880);
LABEL_19:
      sub_21F29FA48((uint64_t)&v59, &qword_26AD3A880);
      swift_bridgeObjectRelease();
LABEL_20:
      sub_21F29F9EC(v54);
      if (v13) {
        goto LABEL_68;
      }
      goto LABEL_21;
    }
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
    sub_21F41FA78();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_19;
    }
    swift_retain();
    sub_21F41FAB8();
    swift_release_n();
    long long v39 = v57;
    sub_21F29FA48((uint64_t)&v59, &qword_26AD3A880);
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_21F29EE4C(v40);
    a1 = v41;
    swift_bridgeObjectRelease();
    if (!a1)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v52;
      goto LABEL_20;
    }
    if (v39 == __PAIR128__(v45, v48))
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = v52;
LABEL_62:
      if (v11 == v49 && a1 == v47)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_70;
      }
      char v43 = sub_21F420DF8();
      swift_bridgeObjectRelease();
      if (v43)
      {
        swift_bridgeObjectRelease_n();
LABEL_70:
        a7 = v44;
        sub_21F2E3A60(v54, v44, type metadata accessor for FeaturisedTurn);
        uint64_t v29 = 0;
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
      }
      goto LABEL_67;
    }
    char v42 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    uint64_t v14 = v52;
    if (v42) {
      goto LABEL_62;
    }
    swift_bridgeObjectRelease();
LABEL_67:
    sub_21F29F9EC(v54);
LABEL_21:
    if (++a7 == v17)
    {
LABEL_68:
      swift_bridgeObjectRelease_n();
      uint64_t v29 = 1;
      a7 = v44;
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
    }
  }
  __break(1u);
LABEL_72:
  swift_once();
LABEL_6:
  uint64_t v22 = sub_21F41FF28();
  __swift_project_value_buffer(v22, (uint64_t)qword_26AD3C910);
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(v11 + 16))(v13, a1, v10);
  uint64_t v23 = sub_21F41FF08();
  os_log_type_t v24 = sub_21F420668();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v59 = v26;
    unint64_t v44 = a7;
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_21F2E3A1C((unint64_t *)&qword_26AD3A848);
    uint64_t v27 = sub_21F420DA8();
    *(void *)&long long v57 = sub_21F2A02C4(v27, v28, (uint64_t *)&v59);
    a7 = v44;
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t *))(v11 + 8))(v13, v10);
    _os_log_impl(&dword_21F29A000, v23, v24, "Failed to find prompt turn in session for turnId=%s", v25, 0xCu);
    uint64_t v29 = 1;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v26, -1, -1);
    MEMORY[0x223C4B440](v25, -1, -1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t *))(v11 + 8))(v13, v10);

    uint64_t v29 = 1;
  }
  uint64_t v14 = v52;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
}

uint64_t sub_21F2E1494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v78 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v76 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v70 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v70 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v70 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v70 - v20;
  uint64_t v22 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v23 = *(int *)(v22 + 24);
  uint64_t v81 = a1;
  uint64_t v24 = swift_bridgeObjectRetain();
  unint64_t v80 = sub_21F29EE04(v24);
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    uint64_t v75 = v23;
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v77 = sub_21F29EE1C(v27);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v79 = v29;
    if (v29)
    {
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = sub_21F29EE64(v30);
      swift_bridgeObjectRelease();
      if (v31)
      {
        sub_21F2E0AE4(v81, v80, v26, v77, v79, a2, (unint64_t)v21);
        sub_21F2C2300((uint64_t)v21, (uint64_t)v19, &qword_26AD3A8C0);
        uint64_t v32 = *(void *)(v22 - 8);
        uint64_t v33 = *(unsigned int (**)(void, void, void))(v32 + 48);
        uint64_t v34 = v32 + 48;
        if (v33(v19, 1, v22) == 1)
        {
          sub_21F29FA48((uint64_t)v19, &qword_26AD3A8C0);
          uint64_t v72 = 0;
          uint64_t v73 = 0;
        }
        else
        {
          uint64_t v38 = *(int *)(v22 + 24);
          uint64_t v71 = v34;
          uint64_t v39 = v31;
          uint64_t v40 = v33;
          uint64_t v41 = *(void *)&v19[v38];
          swift_bridgeObjectRetain();
          sub_21F29F9EC((uint64_t)v19);
          uint64_t v42 = sub_21F29EE7C(v41);
          uint64_t v72 = v43;
          uint64_t v73 = v42;
          uint64_t v33 = v40;
          uint64_t v31 = v39;
          swift_bridgeObjectRelease();
        }
        sub_21F2C2300((uint64_t)v21, (uint64_t)v16, &qword_26AD3A8C0);
        if (v33(v16, 1, v22) == 1)
        {
          sub_21F29FA48((uint64_t)v16, &qword_26AD3A8C0);
          uint64_t v70 = 0;
          uint64_t v71 = 0;
        }
        else
        {
          uint64_t v44 = *(void *)&v16[*(int *)(v22 + 24)];
          swift_bridgeObjectRetain();
          sub_21F29F9EC((uint64_t)v16);
          uint64_t v45 = sub_21F29EE94(v44);
          uint64_t v70 = v46;
          uint64_t v71 = v45;
          swift_bridgeObjectRelease();
        }
        sub_21F2C2300((uint64_t)v21, (uint64_t)v13, &qword_26AD3A8C0);
        unsigned int v47 = v33(v13, 1, v22);
        uint64_t v74 = v31;
        if (v47 == 1)
        {
          sub_21F29FA48((uint64_t)v13, &qword_26AD3A8C0);
          unint64_t v48 = v78;
        }
        else
        {
          uint64_t v49 = v33;
          uint64_t v50 = *(void *)&v13[*(int *)(v22 + 24)];
          swift_bridgeObjectRetain();
          sub_21F29F9EC((uint64_t)v13);
          sub_21F29EE34(v50);
          uint64_t v52 = v51;
          swift_bridgeObjectRelease();
          unint64_t v48 = v78;
          if (v52)
          {
            swift_bridgeObjectRelease();
            uint64_t v53 = v76;
            sub_21F2C2300((uint64_t)v21, v76, &qword_26AD3A8C0);
            if (v49(v53, 1, v22) != 1)
            {
              uint64_t v54 = sub_21F41F228();
              uint64_t v69 = *(void *)(v54 - 8);
              (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v48, v53, v54);
              sub_21F29F9EC(v53);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v48, 0, 1, v54);
              goto LABEL_21;
            }
            sub_21F29FA48(v53, &qword_26AD3A8C0);
          }
        }
        uint64_t v54 = sub_21F41F228();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v48, 1, 1, v54);
LABEL_21:
        uint64_t v55 = (uint64_t)v48;
        uint64_t v56 = v81;
        uint64_t v57 = swift_bridgeObjectRetain();
        uint64_t v58 = sub_21F29EEAC(v57);
        swift_bridgeObjectRelease();
        long long v59 = (char *)MEMORY[0x263F8EE78];
        if (v58) {
          long long v59 = (char *)v58;
        }
        uint64_t v78 = v59;
        uint64_t v60 = swift_bridgeObjectRetain();
        char v61 = sub_21F29EEC4(v60);
        swift_bridgeObjectRelease();
        char v62 = v61 & 1;
        unint64_t v63 = (int *)type metadata accessor for EntityPromptClassification();
        uint64_t v64 = a3 + v63[11];
        sub_21F41F228();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v64, v56, v54);
        sub_21F2C2300(v55, a3 + v63[12], &qword_26AD38738);
        *(void *)a3 = v80;
        *(void *)(a3 + 8) = v26;
        uint64_t v65 = v79;
        *(void *)(a3 + 16) = v77;
        *(void *)(a3 + 24) = v65;
        uint64_t v66 = v73;
        *(void *)(a3 + 32) = v74;
        *(void *)(a3 + 40) = v66;
        uint64_t v67 = v71;
        *(void *)(a3 + 48) = v72;
        *(void *)(a3 + 56) = v67;
        uint64_t v68 = v78;
        *(void *)(a3 + 64) = v70;
        *(void *)(a3 + 72) = v68;
        *(unsigned char *)(a3 + 80) = v62;
        *(void *)(a3 + v63[13]) = MEMORY[0x263F8EE78];
        sub_21F29FA48(v55, &qword_26AD38738);
        sub_21F29FA48((uint64_t)v21, &qword_26AD3A8C0);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v63 - 1) + 56))(a3, 0, 1, v63);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = type metadata accessor for EntityPromptClassification();
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  return v36(a3, 1, 1, v35);
}

uint64_t EntityPromptClassifier.deinit()
{
  return v0;
}

uint64_t EntityPromptClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *sub_21F2E1B64(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_21F2E278C(v4, v3, a1);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t EntityPromptClassification.promptTask.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptSlot.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityPromptClassification.selectedEntity.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptEndResult.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.plusSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityPromptClassification.plusForcePrompted.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t EntityPromptClassification.promptStartTurnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EntityPromptClassification() + 44);
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t EntityPromptClassification.promptEndTurnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EntityPromptClassification();
  return sub_21F2C2300(v1 + *(int *)(v3 + 48), a1, &qword_26AD38738);
}

unint64_t EntityPromptClassification.referencedTurns.getter()
{
  uint64_t v1 = sub_21F41F228();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v39 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v7 = *(void *)(v38 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v38);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v32 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7EA8);
  uint64_t v13 = *(void *)(v7 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_21F422300;
  uint64_t v16 = v15 + v14;
  uint64_t v17 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v16, v0 + *(int *)(v17 + 44), v1);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v16, 0, 1, v1);
  uint64_t v18 = v0 + *(int *)(v17 + 48);
  uint64_t v35 = v16 + v13;
  sub_21F2C2300(v18, v16 + v13, &qword_26AD38738);
  uint64_t v36 = v16;
  sub_21F2C2300(v16, (uint64_t)v12, &qword_26AD38738);
  sub_21F2E2A44((uint64_t)v12, (uint64_t)v10);
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v37 = v2;
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v20(v10, 1, v1) == 1)
  {
    sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
    unint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t v22 = v39;
  }
  else
  {
    uint64_t v34 = v15;
    uint64_t v23 = *v19;
    (*v19)(v6, v10, v1);
    uint64_t v33 = v6;
    uint64_t v24 = v6;
    unint64_t v25 = v23;
    v23(v39, v24, v1);
    unint64_t v21 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v21 = sub_21F2A74F4(0, *(void *)(v21 + 16) + 1, 1, v21);
    }
    unint64_t v27 = *(void *)(v21 + 16);
    unint64_t v26 = *(void *)(v21 + 24);
    if (v27 >= v26 >> 1) {
      unint64_t v21 = sub_21F2A74F4(v26 > 1, v27 + 1, 1, v21);
    }
    *(void *)(v21 + 16) = v27 + 1;
    uint64_t v22 = v39;
    v25((char *)(v21+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v27), v39, v1);
    uint64_t v6 = v33;
  }
  sub_21F2C2300(v35, (uint64_t)v12, &qword_26AD38738);
  sub_21F2E2A44((uint64_t)v12, (uint64_t)v10);
  if (v20(v10, 1, v1) == 1)
  {
    sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
  }
  else
  {
    uint64_t v28 = *v19;
    (*v19)(v6, v10, v1);
    v28(v22, v6, v1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v21 = sub_21F2A74F4(0, *(void *)(v21 + 16) + 1, 1, v21);
    }
    unint64_t v30 = *(void *)(v21 + 16);
    unint64_t v29 = *(void *)(v21 + 24);
    if (v30 >= v29 >> 1) {
      unint64_t v21 = sub_21F2A74F4(v29 > 1, v30 + 1, 1, v21);
    }
    *(void *)(v21 + 16) = v30 + 1;
    v28((char *)(v21+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v30), v22, v1);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v21;
}

uint64_t EntityPromptClassification.referencedEvents.getter()
{
  type metadata accessor for EntityPromptClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2E2270()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s28SiriPrivateLearningInference26EntityPromptClassificationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38748);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v32 - v18;
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v20 = sub_21F420DF8();
    char v21 = 0;
    if ((v20 & 1) == 0) {
      return v21 & 1;
    }
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
    char v22 = sub_21F420DF8();
    char v21 = 0;
    if ((v22 & 1) == 0) {
      return v21 & 1;
    }
  }
  if ((sub_21F32D08C(*(void **)(a1 + 32), *(void **)(a2 + 32)) & 1) == 0) {
    goto LABEL_31;
  }
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a2 + 48);
  if (v23)
  {
    if (!v24) {
      goto LABEL_31;
    }
    if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v23 != v24)
    {
      char v25 = sub_21F420DF8();
      char v21 = 0;
      if ((v25 & 1) == 0) {
        return v21 & 1;
      }
    }
  }
  else if (v24)
  {
    goto LABEL_31;
  }
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = *(void *)(a2 + 64);
  if (!v26)
  {
    if (v27) {
      goto LABEL_31;
    }
LABEL_22:
    if ((sub_21F32D154(*(void *)(a1 + 72), *(void *)(a2 + 72)) & 1) != 0
      && *(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
    {
      uint64_t v35 = type metadata accessor for EntityPromptClassification();
      if (sub_21F41F1D8())
      {
        sub_21F2C2300(a1 + *(int *)(v35 + 48), (uint64_t)v19, &qword_26AD38738);
        sub_21F2C2300(a2 + *(int *)(v35 + 48), (uint64_t)v17, &qword_26AD38738);
        uint64_t v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_21F2C2300((uint64_t)v19, (uint64_t)v10, &qword_26AD38738);
        uint64_t v34 = v29;
        sub_21F2C2300((uint64_t)v17, v29, &qword_26AD38738);
        uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v33((uint64_t)v10, 1, v4) == 1)
        {
          sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
          sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
          if (v33(v34, 1, v4) == 1)
          {
            sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
LABEL_34:
            char v21 = sub_21F32D08C(*(void **)(a1 + *(int *)(v35 + 52)), *(void **)(a2 + *(int *)(v35 + 52)));
            return v21 & 1;
          }
        }
        else
        {
          sub_21F2C2300((uint64_t)v10, (uint64_t)v14, &qword_26AD38738);
          if (v33(v34, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v34, v4);
            sub_21F2E3A1C((unint64_t *)&qword_26AD3A840);
            LODWORD(v34) = sub_21F420098();
            uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
            v31(v7, v4);
            sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
            sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
            v31(v14, v4);
            sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
            if (v34) {
              goto LABEL_34;
            }
            goto LABEL_31;
          }
          sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
          sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
        }
        sub_21F29FA48((uint64_t)v10, &qword_26AD38748);
      }
    }
LABEL_31:
    char v21 = 0;
    return v21 & 1;
  }
  if (!v27) {
    goto LABEL_31;
  }
  if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && v26 == v27) {
    goto LABEL_22;
  }
  char v28 = sub_21F420DF8();
  char v21 = 0;
  if (v28) {
    goto LABEL_22;
  }
  return v21 & 1;
}

void *sub_21F2E278C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v24 = v3;
  uint64_t v10 = *(void *)(type metadata accessor for FeaturisedTurn(0) - 8);
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v12 = *(void *)(v10 + 72);
  v19[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_21F2E1494(v11, a3, (uint64_t)v8);
    uint64_t v14 = type metadata accessor for EntityPromptClassification();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v8, 1, v14) == 1)
    {
      sub_21F29FA48((uint64_t)v8, &qword_26AD3AB78);
    }
    else
    {
      uint64_t v21 = v14;
      char v22 = &protocol witness table for EntityPromptClassification;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
      sub_21F2E3A60((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for EntityPromptClassification);
      sub_21F2A09A8(&v20, (uint64_t)v23);
      sub_21F2A09A8(v23, (uint64_t)&v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_21F2A753C(0, v13[2] + 1, 1, v13);
      }
      unint64_t v17 = v13[2];
      unint64_t v16 = v13[3];
      if (v17 >= v16 >> 1) {
        uint64_t v13 = sub_21F2A753C((void *)(v16 > 1), v17 + 1, 1, v13);
      }
      void v13[2] = v17 + 1;
      sub_21F2A09A8(&v20, (uint64_t)&v13[5 * v17 + 4]);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for EntityPromptClassification()
{
  uint64_t result = qword_26AD3AB68;
  if (!qword_26AD3AB68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2E2A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for EntityPromptClassifier()
{
  return self;
}

uint64_t method lookup function for EntityPromptClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EntityPromptClassifier);
}

uint64_t dispatch thunk of EntityPromptClassifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of EntityPromptClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

void *initializeBufferWithCopyOfBuffer for EntityPromptClassification(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v11 = a2[8];
    uint64_t v10 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v12 = a3[11];
    uint64_t v23 = (uint64_t)a2 + v12;
    uint64_t v24 = a1 + v12;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v10;
    uint64_t v13 = sub_21F41F228();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v24, v23, v13);
    uint64_t v16 = a3[12];
    unint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v16, 1, v13))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v17, (uint64_t)v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EntityPromptClassification(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = a3[11];
  uint64_t v21 = (const void *)(a2 + v11);
  char v22 = (void *)(a1 + v11);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v9;
  uint64_t v12 = sub_21F41F228();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v22, v21, v12);
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)(a1 + v15);
  unint64_t v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v15, 1, v12))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityPromptClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(int *)(a3 + 44);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v18(v7, v8, v9);
  uint64_t v19 = a3;
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v14((const void *)(a1 + v11), 1, v9);
  int v15 = v14(v13, 1, v9);
  if (!a3)
  {
    if (!v15)
    {
      v18(v12, v13, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + *(int *)(v19 + 52)) = *(void *)(a2 + *(int *)(v19 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = a3[11];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = sub_21F41F228();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  uint64_t v14 = a3[12];
  int v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for EntityPromptClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(int *)(a3 + 44);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_21F41F228();
  uint64_t v14 = *(void *)(v13 - 8);
  char v22 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v22(v11, v12, v13);
  uint64_t v23 = a3;
  uint64_t v15 = *(int *)(a3 + 48);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(a3) = v18((const void *)(a1 + v15), 1, v13);
  int v19 = v18(v17, 1, v13);
  if (!a3)
  {
    if (!v19)
    {
      v22(v16, v17, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v16, v17, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v13);
LABEL_7:
  *(void *)(a1 + *(int *)(v23 + 52)) = *(void *)(a2 + *(int *)(v23 + 52));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityPromptClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2E36A8);
}

uint64_t sub_21F2E36A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for EntityPromptClassification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2E37EC);
}

uint64_t sub_21F2E37EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_21F2E391C()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2B30B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_21F2E3A1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F41F228();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F2E3A60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.groundTruthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.picsStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.logTarget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.featureManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.pimsStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.uflCoreAnalyticsLogLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_21F2E3B40()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F2E3B78()
{
  return v0;
}

uint64_t sub_21F2E3B80()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SinglePositiveCandidateFilter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F2E3BA8(uint64_t a1, uint64_t a2)
{
  return sub_21F2E3BB4(a1, *(void *)(a2 + 80));
}

uint64_t sub_21F2E3BB4(uint64_t a1, uint64_t a2)
{
  sub_21F420428();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v3 = sub_21F420A18();
  if (MEMORY[0x223C4A100](v3, a2) != 1)
  {
    swift_bridgeObjectRelease();
    return sub_21F4203B8();
  }
  return v3;
}

BOOL sub_21F2E3C7C()
{
  return (*(double (**)(void))(*(void *)(v0 + 24) + 96))(*(void *)(v0 + 16)) > 0.0;
}

uint64_t dispatch thunk of TurnComparison.isMatch.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TurnComparator.compareTurns(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TurnComparator.turnMeetsFeatureFilterCriteria(turn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_21F2E3D04()
{
  type metadata accessor for AdaptiveMediaSuggestionGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83D0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC83A0 = 91;
  *(void *)algn_267EC83A8 = 0xE100000000000000;
  return result;
}

uint64_t AdaptiveMediaSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AdaptiveMediaSuggestionGenerator.init(candidateProvider:domainTags:)(a1, a2);
  return v4;
}

void *AdaptiveMediaSuggestionGenerator.init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MediaSignalScorer();
  uint64_t v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_21F422460;
  *(void *)(v6 + 56) = &type metadata for NoReferenceDecayModifier;
  *(void *)(v6 + 64) = &off_26D0D26D8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83B8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21F422300;
  *(void *)(v7 + 56) = &type metadata for ScoreRoundingModifier;
  *(void *)(v7 + 64) = &off_26D0D2A08;
  *(void *)(v7 + 32) = 1;
  *(void *)(v7 + 96) = &type metadata for ScoreLimitModifier;
  *(void *)(v7 + 104) = &off_26D0D0FF0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v7 + 72) = v8;
  *(void *)(v8 + 16) = 0x3FF0000000000000;
  *(unsigned char *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = 0xBFF0000000000000;
  *(unsigned char *)(v8 + 40) = 0;
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = v7;
  type metadata accessor for MediaSuggestionCandidateProcessor();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = a1;
  v2[2] = v9;
  v2[3] = a1;
  v2[4] = a2;
  swift_retain();
  return v2;
}

uint64_t sub_21F2E3F1C()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_21F2E3F2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21F29F920(v2, (uint64_t)v13);
      sub_21F29F920((uint64_t)v13, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A9E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7978);
      if ((swift_dynamicCast() & 1) == 0)
      {
        long long v10 = 0u;
        long long v11 = 0u;
        long long v9 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if (*((void *)&v10 + 1))
      {
        sub_21F2E0850(&v9, v12);
        sub_21F2E0850(v12, &v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_21F2A7F88(0, v3[2] + 1, 1, v3);
        }
        unint64_t v5 = v3[2];
        unint64_t v4 = v3[3];
        if (v5 >= v4 >> 1) {
          uint64_t v3 = sub_21F2A7F88((void *)(v4 > 1), v5 + 1, 1, v3);
        }
        v3[2] = v5 + 1;
        sub_21F2E0850(&v9, &v3[6 * v5 + 4]);
      }
      else
      {
        sub_21F29FA48((uint64_t)&v9, &qword_267EC8310);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  swift_retain();
  unint64_t v6 = sub_21F2E55BC((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = sub_21F2D60B8(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21F2E4114(NSObject *a1, void (**a2)(char *, char *, uint64_t), uint64_t a3, void (**a4)(char *, char *, uint64_t))
{
  void (*v57)(uint64_t *__return_ptr, void, uint64_t);
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v60;
  uint64_t v61;
  os_log_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t v68;
  void (**v69)(char *, char *, uint64_t);
  void *v70;
  uint64_t v71;
  uint64_t v72[3];
  uint64_t v73[3];
  uint64_t v74[10];
  _OWORD v75[5];
  _OWORD v76[6];

  uint64_t v5 = v4;
  uint64_t v69 = a4;
  uint64_t v70 = (void *)sub_21F41F228();
  uint64_t v9 = *(v70 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v70);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)*(a2 - 1);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v60 - v17;
  if (sub_21F2E500C((uint64_t)a1, v5, (uint64_t)a2, a3))
  {
    uint64_t v65 = a3;
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_21F41FF28();
    uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_26AD3C910);
    (*(void (**)(char *, NSObject *, void))(v13 + 16))(v18, a1, a2);
    uint64_t v21 = sub_21F41FF08();
    uint64_t v64 = sub_21F420668();
    BOOL v22 = os_log_type_enabled(v21, (os_log_type_t)v64);
    uint64_t v67 = v5;
    uint64_t v68 = a1;
    if (v22)
    {
      char v62 = v21;
      unint64_t v63 = v20;
      uint64_t v66 = v9;
      uint64_t v23 = a2;
      uint64_t v24 = swift_slowAlloc();
      char v61 = swift_slowAlloc();
      *(void *)&v76[0] = v61;
      *(_DWORD *)uint64_t v24 = 136315394;
      if (qword_267EC71A8 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_267EC83A0;
      unint64_t v26 = *(void *)algn_267EC83A8;
      swift_bridgeObjectRetain();
      *(void *)&v75[0] = sub_21F2A02C4(v25, v26, (uint64_t *)v76);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      a2 = v23;
      ((void (*)(void (**)(char *, char *, uint64_t)))v69[3])(v23);
      uint64_t v27 = sub_21F41F1B8();
      unint64_t v29 = v28;
      (*(void (**)(char *, void *))(v66 + 8))(v12, v70);
      *(void *)&v75[0] = sub_21F2A02C4(v27, v29, (uint64_t *)v76);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void (**)(char *, char *, uint64_t)))(v13 + 8))(v18, a2);
      os_log_t v30 = v62;
      _os_log_impl(&dword_21F29A000, v62, (os_log_type_t)v64, "%s Processing ground truth with id=%s", (uint8_t *)v24, 0x16u);
      uint64_t v31 = v61;
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v31, -1, -1);
      MEMORY[0x223C4B440](v24, -1, -1);

      uint64_t v5 = v67;
      a1 = v68;
    }
    else
    {
      (*(void (**)(char *, void (**)(char *, char *, uint64_t)))(v13 + 8))(v18, a2);
    }
    uint64_t v43 = *(void *)(v65 + 8);
    uint64_t v44 = sub_21F30B0A0((uint64_t)a1, a2, v43);
    uint64_t v70 = *(void **)(v43 + 32);
    ((void (*)(_OWORD *__return_ptr, void, uint64_t))v70)(v76, a2, v43);
    sub_21F382B74(*(uint64_t *)&v76[0], v74);
    swift_release();
    sub_21F2E57AC(v74, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2E5738);
    uint64_t v45 = sub_21F41FF08();
    os_log_type_t v46 = sub_21F420668();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v66 = v44;
      uint64_t v69 = a2;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v72[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315394;
      if (qword_267EC71A8 != -1) {
        swift_once();
      }
      uint64_t v49 = qword_267EC83A0;
      unint64_t v50 = *(void *)algn_267EC83A8;
      swift_bridgeObjectRetain();
      *(void *)&v76[0] = sub_21F2A02C4(v49, v50, v72);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      sub_21F2B458C((uint64_t)v74, (uint64_t)v75, &qword_267EC7C20);
      if (*((void *)&v75[0] + 1) == 1)
      {
        unint64_t v51 = 0xE90000000000003ELL;
        uint64_t v52 = 0x6E776F6E6B6E553CLL;
      }
      else
      {
        v76[2] = v75[2];
        v76[3] = v75[3];
        v76[4] = v75[4];
        v76[0] = v75[0];
        v76[1] = v75[1];
        uint64_t v52 = sub_21F360E18();
        unint64_t v51 = v54;
      }
      uint64_t v44 = v66;
      v73[0] = sub_21F2A02C4(v52, v51, v72);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      sub_21F2E57AC(v74, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
      sub_21F2E57AC(v74, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
      _os_log_impl(&dword_21F29A000, v45, v46, "%s Candidates updated for query: %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v48, -1, -1);
      MEMORY[0x223C4B440](v47, -1, -1);

      a2 = v69;
      uint64_t v5 = v67;
    }
    else
    {
      sub_21F2E57AC(v74, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
      sub_21F2E57AC(v74, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
    }
    unint64_t v55 = sub_21F2E5154(v44, (void (*)(uint64_t, uint64_t))sub_21F2E5800, v5);
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v5 + 24);
    uint64_t v57 = (void (*)(uint64_t *__return_ptr, void, uint64_t))v70;
    ((void (*)(uint64_t *__return_ptr, void, uint64_t))v70)(v73, a2, v43);
    uint64_t v58 = v73[0];
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = *(void *)(v56 + 64);
    *(void *)(v56 + 64) = 0x8000000000000000;
    sub_21F328738(v55, v58, isUniquelyReferenced_nonNull_native);
    *(void *)(v56 + 64) = v71;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    v57(v72, a2, v43);
    return v72[0];
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_21F41FF28();
    __swift_project_value_buffer(v32, (uint64_t)qword_26AD3C910);
    (*(void (**)(char *, NSObject *, void))(v13 + 16))(v16, a1, a2);
    uint64_t v33 = sub_21F41FF08();
    int v34 = sub_21F420668();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      LODWORD(v67) = v34;
      uint64_t v68 = v33;
      uint64_t v66 = v9;
      uint64_t v35 = a2;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(void *)&v76[0] = v65;
      *(_DWORD *)uint64_t v36 = 136315394;
      if (qword_267EC71A8 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_267EC83A0;
      unint64_t v37 = *(void *)algn_267EC83A8;
      swift_bridgeObjectRetain();
      *(void *)&v75[0] = sub_21F2A02C4(v38, v37, (uint64_t *)v76);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      ((void (*)(void (**)(char *, char *, uint64_t)))v69[3])(v35);
      uint64_t v39 = sub_21F41F1B8();
      unint64_t v41 = v40;
      (*(void (**)(char *, void *))(v66 + 8))(v12, v70);
      *(void *)&v75[0] = sub_21F2A02C4(v39, v41, (uint64_t *)v76);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void (**)(char *, char *, uint64_t)))(v13 + 8))(v16, v35);
      uint64_t v33 = v68;
      _os_log_impl(&dword_21F29A000, v68, (os_log_type_t)v67, "%s Skipping non applicable ground truth with id=%s", (uint8_t *)v36, 0x16u);
      uint64_t v42 = v65;
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v42, -1, -1);
      MEMORY[0x223C4B440](v36, -1, -1);
    }
    else
    {
      (*(void (**)(char *, void (**)(char *, char *, uint64_t)))(v13 + 8))(v16, a2);
    }

    return 0;
  }
}

uint64_t sub_21F2E4B50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x270FA5388](v40);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = a1[1];
  uint64_t v37 = *a1;
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_21F41FF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
  sub_21F2E07EC(a2, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_21F2AA1D0(v12, v13);
  uint64_t v15 = sub_21F41FF08();
  os_log_type_t v16 = sub_21F420668();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v35 = a4;
    uint64_t v36 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v41 = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&long long v42 = sub_21F2A02C4(v37, v11, &v41);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    sub_21F2AA27C(v12, v13);
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v18 = v40;
    uint64_t v19 = *(void *)&v10[*(int *)(v40 + 36)];
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (long long *)(v19 + 32 * v20);
      long long v22 = *v21;
      uint64_t v23 = *((void *)v21 + 2);
    }
    else
    {
      uint64_t v23 = 0;
      long long v22 = 0uLL;
    }
    uint64_t v24 = v39;
    long long v42 = v22;
    *(void *)&long long v43 = v23;
    BYTE8(v43) = v20 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83C8);
    uint64_t v25 = sub_21F420108();
    *(void *)&long long v42 = sub_21F2A02C4(v25, v26, &v41);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2E586C((uint64_t)v10);
    _os_log_impl(&dword_21F29A000, v15, v16, "    %s: %s", (uint8_t *)v17, 0x16u);
    uint64_t v27 = v34;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v27, -1, -1);
    MEMORY[0x223C4B440](v17, -1, -1);

    a4 = v35;
    a2 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_21F2AA27C(v12, v13);
    sub_21F2E586C((uint64_t)v10);

    uint64_t v24 = v39;
    uint64_t v18 = v40;
  }
  uint64_t v28 = *(void *)(a2 + *(int *)(v18 + 44));
  if (sub_21F3C6860(v28, *(void *)(v24 + 32))) {
    return sub_21F2E07EC(a2, a4);
  }
  uint64_t v30 = sub_21F41F228();
  uint64_t v31 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
  __int16 v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  swift_bridgeObjectRetain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_21F3F3BD0(v32, v28);
  sub_21F331040(v31, 0, (char **)&v42, 0, 0, 1, v33, 0, a4, 1, 0);
  swift_bridgeObjectRelease();
  return sub_21F29FA48(v31, &qword_26AD38738);
}

uint64_t AdaptiveMediaSuggestionGenerator.deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdaptiveMediaSuggestionGenerator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_21F2E500C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = *(void *)(a2 + 32);
  if (*(void *)(v10 + 16))
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F2EFFD0(v11, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 16);
    swift_release();
    BOOL v14 = v13 != 0;
  }
  else
  {
    BOOL v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v14;
}

unint64_t sub_21F2E5154(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83C0);
  uint64_t v4 = MEMORY[0x270FA5388](v68);
  uint64_t v57 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v56 = (uint64_t *)((char *)&v48 - v7);
  MEMORY[0x270FA5388](v6);
  unint64_t v55 = (uint64_t *)((char *)&v48 - v8);
  uint64_t v9 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (!v13) {
    return v14;
  }
  uint64_t v69 = MEMORY[0x263F8EE78];
  sub_21F2C343C(0, v13, 0);
  unint64_t result = sub_21F3C5BD4(a1);
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v60 = a1 + 80;
  uint64_t v53 = v10;
  uint64_t v54 = a1;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = v12;
  int64_t v49 = v13;
  uint64_t v50 = v16;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(a1 + 32))
  {
    if ((*(void *)(v18 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v16) {
      goto LABEL_26;
    }
    uint64_t v62 = 1 << result;
    unint64_t v63 = result >> 6;
    uint64_t v61 = v17;
    uint64_t v21 = v55;
    uint64_t v23 = *(void *)(a1 + 56);
    uint64_t v24 = *(void *)(a1 + 48) + 56 * result;
    uint64_t v26 = *(void *)v24;
    uint64_t v25 = *(void *)(v24 + 8);
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = *(void *)(v24 + 24);
    uint64_t v30 = *(void *)(v24 + 32);
    uint64_t v29 = *(void *)(v24 + 40);
    uint64_t v64 = (char *)v55 + *(int *)(v68 + 48);
    uint64_t v22 = (uint64_t)v64;
    uint64_t v65 = v29;
    char v31 = *(unsigned char *)(v24 + 48);
    char v32 = *(unsigned char *)(v24 + 49);
    void *v55 = v26;
    v21[1] = v25;
    void v21[2] = v27;
    v21[3] = v28;
    v21[4] = v30;
    v21[5] = v29;
    *((unsigned char *)v21 + 48) = v31;
    *((unsigned char *)v21 + 49) = v32;
    uint64_t v66 = *(void *)(v10 + 72);
    int64_t v67 = result;
    sub_21F2E07EC(v23 + v66 * result, v22);
    uint64_t v33 = (uint64_t)v56;
    *uint64_t v56 = v26;
    *(void *)(v33 + 8) = v25;
    *(void *)(v33 + 16) = v27;
    *(void *)(v33 + 24) = v28;
    uint64_t v34 = (uint64_t)v64;
    uint64_t v35 = v65;
    *(void *)(v33 + 32) = v30;
    *(void *)(v33 + 40) = v35;
    *(unsigned char *)(v33 + 48) = v31;
    *(unsigned char *)(v33 + 49) = v32;
    uint64_t v36 = v68;
    sub_21F2E07EC(v34, v33 + *(int *)(v68 + 48));
    uint64_t v37 = v57;
    sub_21F2B458C(v33, v57, &qword_267EC83C0);
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v27, v28);
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v27, v28);
    uint64_t v38 = (uint64_t)v21;
    uint64_t v39 = (uint64_t)v52;
    sub_21F29FA48(v38, &qword_267EC83C0);
    v58(v37, v37 + *(int *)(v36 + 48));
    sub_21F29FA48(v37, &qword_267EC83C0);
    uint64_t v14 = v69;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21F2C343C(0, *(void *)(v14 + 16) + 1, 1);
      uint64_t v14 = v69;
    }
    unint64_t v41 = *(void *)(v14 + 16);
    unint64_t v40 = *(void *)(v14 + 24);
    uint64_t v10 = v53;
    a1 = v54;
    if (v41 >= v40 >> 1)
    {
      sub_21F2C343C(v40 > 1, v41 + 1, 1);
      uint64_t v14 = v69;
    }
    *(void *)(v14 + 16) = v41 + 1;
    unint64_t result = sub_21F2E5808(v39, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ v41 * v66);
    int64_t v19 = 1 << *(unsigned char *)(a1 + 32);
    if (v67 >= v19) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    unint64_t v42 = v63;
    uint64_t v43 = *(void *)(v51 + 8 * v63);
    if ((v43 & v62) == 0) {
      goto LABEL_28;
    }
    LODWORD(v16) = v50;
    if (*(_DWORD *)(a1 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v44 = v43 & (-2 << (v67 & 0x3F));
    if (v44)
    {
      int64_t v19 = __clz(__rbit64(v44)) | v67 & 0xFFFFFFFFFFFFFFC0;
      int64_t v20 = v49;
    }
    else
    {
      unint64_t v45 = v63 + 1;
      unint64_t v46 = (unint64_t)(v19 + 63) >> 6;
      int64_t v20 = v49;
      if (v63 + 1 < v46)
      {
        unint64_t v47 = *(void *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_22:
          int64_t v19 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v42)
          {
            unint64_t v47 = *(void *)(v60 + 8 * v42++);
            if (v47)
            {
              unint64_t v45 = v42 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v61 + 1;
    unint64_t result = v19;
    if (v61 + 1 == v20) {
      return v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_21F2E55BC(uint64_t a1)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void (***)(char *, char *, uint64_t))(a1 + 72);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = (uint64_t)*(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v8 = __swift_project_boxed_opaque_existential_1(v4 - 5, (uint64_t)v5);
      if (sub_21F2E4114(v8, v5, v6, v7))
      {
        MEMORY[0x223C4A030]();
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_21F420398();
        }
        sub_21F4203E8();
        sub_21F420368();
      }
      v4 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t type metadata accessor for AdaptiveMediaSuggestionGenerator()
{
  return self;
}

uint64_t method lookup function for AdaptiveMediaSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AdaptiveMediaSuggestionGenerator);
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionGenerator.processGroundTruths(groundTruthList:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_21F2E5738(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_21F2E57AC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_21F2E5800@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21F2E4B50(a1, a2, v3, a3);
}

uint64_t sub_21F2E5808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2E586C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SuccessfulTaskMetadata.__allocating_init(session:classifications:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t SuccessfulTaskMetadata.init(session:classifications:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t SuccessfulTaskMetadata.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SuccessfulTaskMetadata.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SuccessfulTaskDefinition.generator()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OneShotSuccessfulGroundTruthGenerator();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  uint64_t v9 = OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)((uint64_t)v7);
  a2[3] = v8;
  uint64_t result = swift_getWitnessTable();
  a2[4] = result;
  *a2 = v9;
  return result;
}

uint64_t SuccessfulTaskDefinition.extractUsoPerson(_:)(uint64_t a1)
{
  unint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    goto LABEL_19;
  }
  uint64_t v4 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v5 = a1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    uint64_t v9 = *(void *)(v5 + v6 * i + *(int *)(v4 + 24));
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v9 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(v11, (uint64_t)&v18);
        sub_21F29F920((uint64_t)&v18, (uint64_t)v17);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        type metadata accessor for UsoPersonRecipients();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
        v11 += 40;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v18, (uint64_t)v20);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_11:
      uint64_t v21 = 0;
      memset(v20, 0, sizeof(v20));
    }
    sub_21F29F984((uint64_t)v20, (uint64_t)&v18);
    if (v19)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for UsoPersonRecipients();
      if (swift_dynamicCast())
      {
        swift_retain();
        sub_21F41FAB8();
        swift_release_n();
        unint64_t v8 = v18;
        sub_21F2AA088((uint64_t)v20);
        swift_bridgeObjectRelease();
        sub_21F2A5EB0(v8);
        continue;
      }
    }
    else
    {
      sub_21F2AA088((uint64_t)&v18);
    }
    sub_21F2AA088((uint64_t)v20);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v1 = v22;
LABEL_19:
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F2D62EC(v12);
  swift_bridgeObjectRelease();
  if ((v13 & 0xC000000000000001) != 0) {
    uint64_t v14 = sub_21F4208A8();
  }
  else {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  swift_bridgeObjectRelease();
  if (v14 != 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_21F420B98();
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_28;
    }
LABEL_25:
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v15 = MEMORY[0x223C4A6D0](0, v1);
      goto LABEL_28;
    }
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = *(void *)(v1 + 32);
      swift_retain();
      goto LABEL_28;
    }
    __break(1u);
  }
  else
  {
    uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_25;
    }
LABEL_28:
    swift_bridgeObjectRelease_n();
    return v15;
  }
  return result;
}

SiriPrivateLearningInference::ContactReference_optional __swiftcall SuccessfulTaskDefinition.extractReferencedEntity(session:eventId:)(Swift::OpaquePointer session, Swift::String eventId)
{
  uint64_t v3 = v2;
  uint64_t v4 = Array<A>.findEvent(eventId:)(eventId._countAndFlagsBits, (uint64_t)eventId._object, (uint64_t)session._rawValue, &v16);
  uint64_t v8 = v17;
  if (!v17) {
    goto LABEL_8;
  }
  uint64_t v9 = v16;
  uint64_t v11 = v18;
  uint64_t v10 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_21F29DFE0(v13);
  swift_bridgeObjectRelease();
  if (!v14 || (uint64_t v15 = *(void *)(v14 + 16), swift_bridgeObjectRelease(), v15 != 1))
  {
    uint64_t v4 = sub_21F2BCCB4(v9, v8);
LABEL_8:
    *uint64_t v3 = 0u;
    v3[1] = 0u;
    goto LABEL_9;
  }
  uint64_t v16 = v9;
  uint64_t v17 = v8;
  uint64_t v18 = v11;
  uint64_t v19 = v10;
  uint64_t v20 = v12;
  extractContactReference(event:)((uint64_t)v3);
  uint64_t v4 = sub_21F2BCCB4(v9, v8);
LABEL_9:
  result.value.contactLabel.value._object = v7;
  result.value.contactLabel.value._countAndFlagsBits = v6;
  result.value.contactId._object = v5;
  result.value.contactId._countAndFlagsBits = v4;
  return result;
}

uint64_t (*sub_21F2E5EDC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21F2E60C8(v6, a2, a3);
  return sub_21F2E5F44;
}

uint64_t (*sub_21F2E5F48(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21F2E6150(v6, a2, a3);
  return sub_21F2E5F44;
}

uint64_t (*sub_21F2E5FB0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21F2E61D0(v6, a2, a3);
  return sub_21F2E5F44;
}

uint64_t (*sub_21F2E6018(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_21F2E6258(v6, a2, a3);
  return sub_21F2E5F44;
}

void sub_21F2E6080(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_21F2E60C8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x223C4A6D0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_21F2E6148;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F2E6148()
{
  return swift_release();
}

void (*sub_21F2E6150(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x223C4A6D0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_21F2E63A0;
  }
  __break(1u);
  return result;
}

void (*sub_21F2E61D0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x223C4A6D0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_21F2E6250;
  }
  __break(1u);
  return result;
}

void sub_21F2E6250(id *a1)
{
}

uint64_t (*sub_21F2E6258(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x223C4A6D0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_21F2E63A4;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.successClassifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.identifySuccessClassification(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.isInitiatingEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.extractReferencedEntity(session:successClassification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.extractUsoEntityFromSessionSlice(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t type metadata accessor for SuccessfulTaskMetadata()
{
  return self;
}

uint64_t method lookup function for SuccessfulTaskMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SuccessfulTaskMetadata);
}

uint64_t dispatch thunk of SuccessfulTaskMetadata.__allocating_init(session:classifications:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ThinMediaGroundTruth.init(completeGroundTruth:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v33 = type metadata accessor for MediaFeedbackGroundTruth();
  uint64_t v3 = MEMORY[0x270FA5388](v33);
  uint64_t v32 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = type metadata accessor for MediaGroundTruth();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = (int *)type metadata accessor for ThinMediaGroundTruth();
  uint64_t v34 = *((void *)v13 - 1);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
  uint64_t v21 = (uint64_t *)&v15[v13[5]];
  *uint64_t v21 = v20;
  v21[1] = v22;
  sub_21F29F920((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A9E8);
  if (swift_dynamicCast())
  {
    sub_21F2E6854((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MediaGroundTruth);
    v15[v13[6]] = v10[*(int *)(v7 + 20)];
    char v23 = v10[*(int *)(v7 + 32) + 49];
    uint64_t v24 = type metadata accessor for MediaGroundTruth;
    uint64_t v25 = (uint64_t)v10;
LABEL_5:
    sub_21F2E68BC(v25, (uint64_t (*)(void))v24);
    v15[v13[7]] = v23;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    uint64_t v28 = v35;
    sub_21F2E67F0((uint64_t)v15, v35);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v34 + 56))(v28, 0, 1, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_21F2E68BC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
  }
  uint64_t v26 = v33;
  if (swift_dynamicCast())
  {
    uint64_t v27 = v32;
    sub_21F2E6854((uint64_t)v6, v32, (uint64_t (*)(void))type metadata accessor for MediaFeedbackGroundTruth);
    v15[v13[6]] = *(unsigned char *)(v27 + *(int *)(v26 + 20)) | 0x80;
    char v23 = *(unsigned char *)(v27 + *(int *)(v26 + 28) + 49);
    uint64_t v24 = type metadata accessor for MediaFeedbackGroundTruth;
    uint64_t v25 = v27;
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  uint64_t v30 = sub_21F41F228();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v15, v30);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v34 + 56))(v35, 1, 1, v13);
}

uint64_t type metadata accessor for ThinMediaGroundTruth()
{
  uint64_t result = qword_267EC8418;
  if (!qword_267EC8418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2E67F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ThinMediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2E6854(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F2E68BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ThinMediaGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ThinMediaGroundTruth.groundTruthType.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ThinMediaGroundTruth() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThinMediaGroundTruth.groundTruthSource.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ThinMediaGroundTruth();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ThinMediaGroundTruth.suggestionLocality.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ThinMediaGroundTruth();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

int *ThinMediaGroundTruth.init(id:groundTruthType:groundTruthSource:suggestionLocality:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a4;
  char v11 = *a5;
  uint64_t v12 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t result = (int *)type metadata accessor for ThinMediaGroundTruth();
  uint64_t v14 = (void *)(a6 + result[5]);
  *uint64_t v14 = a2;
  v14[1] = a3;
  *(unsigned char *)(a6 + result[6]) = v10;
  *(unsigned char *)(a6 + result[7]) = v11;
  return result;
}

uint64_t ThinMediaGroundTruth.hash(into:)()
{
  sub_21F41F228();
  sub_21F2E7990((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  sub_21F420038();
  uint64_t v1 = type metadata accessor for ThinMediaGroundTruth();
  swift_bridgeObjectRetain();
  sub_21F420148();
  swift_bridgeObjectRelease();
  sub_21F420F08();
  sub_21F420F08();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 3) {
    return sub_21F420F18();
  }
  sub_21F420F18();
  return sub_21F420F08();
}

unint64_t sub_21F2E6BE4()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7254646E756F7267;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F2E6C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2E821C(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F2E6CA8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21F2E6CB4(uint64_t a1)
{
  unint64_t v2 = sub_21F2E77A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2E6CF0(uint64_t a1)
{
  unint64_t v2 = sub_21F2E77A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ThinMediaGroundTruth.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2E77A4();
  sub_21F420F68();
  v11[15] = 0;
  sub_21F41F228();
  sub_21F2E7990(&qword_267EC7AD8, MEMORY[0x263F07508]);
  sub_21F420D58();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ThinMediaGroundTruth();
    v11[14] = 1;
    sub_21F420D18();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_21F2E77F8();
    sub_21F420D58();
    v11[11] = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    v11[10] = 3;
    sub_21F2E784C();
    sub_21F420D08();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ThinMediaGroundTruth.hashValue.getter()
{
  sub_21F420EF8();
  sub_21F41F228();
  sub_21F2E7990((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  sub_21F420038();
  uint64_t v1 = type metadata accessor for ThinMediaGroundTruth();
  sub_21F420148();
  sub_21F420F08();
  sub_21F420F08();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 3)
  {
    sub_21F420F18();
  }
  else
  {
    sub_21F420F18();
    sub_21F420F08();
  }
  return sub_21F420F48();
}

uint64_t ThinMediaGroundTruth.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_21F41F228();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v24 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC83F8);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ThinMediaGroundTruth();
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2E77A4();
  uint64_t v26 = v7;
  sub_21F420F58();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v20 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v23;
  char v32 = 0;
  sub_21F2E7990(&qword_267EC7B08, MEMORY[0x263F07508]);
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  sub_21F420CB8();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  char v31 = 1;
  uint64_t v15 = sub_21F420C78();
  uint64_t v16 = (uint64_t *)(v11 + v8[5]);
  *uint64_t v16 = v15;
  v16[1] = v17;
  char v29 = 2;
  sub_21F2E78A0();
  sub_21F420CB8();
  *(unsigned char *)(v11 + v8[6]) = v30;
  char v27 = 3;
  sub_21F2E78F4();
  sub_21F420C68();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v14);
  *(unsigned char *)(v11 + v8[7]) = v28;
  sub_21F2E67F0(v11, v21);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return sub_21F2E68BC(v11, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
}

uint64_t sub_21F2E749C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ThinMediaGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_21F2E74B4(void *a1)
{
  return ThinMediaGroundTruth.encode(to:)(a1);
}

uint64_t sub_21F2E74D4(uint64_t a1, uint64_t a2)
{
  sub_21F41F228();
  sub_21F2E7990((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  sub_21F420038();
  sub_21F420148();
  sub_21F420F08();
  sub_21F420F08();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 28)) == 3) {
    return sub_21F420F18();
  }
  sub_21F420F18();
  return sub_21F420F08();
}

uint64_t sub_21F2E75C4(uint64_t a1, uint64_t a2)
{
  sub_21F420EF8();
  sub_21F41F228();
  sub_21F2E7990((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  sub_21F420038();
  sub_21F420148();
  sub_21F420F08();
  sub_21F420F08();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 28)) == 3)
  {
    sub_21F420F18();
  }
  else
  {
    sub_21F420F18();
    sub_21F420F08();
  }
  return sub_21F420F48();
}

uint64_t _s28SiriPrivateLearningInference20ThinMediaGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_21F41F1D8() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ThinMediaGroundTruth();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_21F420DF8(), uint64_t result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = v4[6];
    int v13 = *(char *)(a1 + v12);
    int v14 = *(unsigned __int8 *)(a1 + v12);
    int v15 = *(unsigned __int8 *)(a2 + v12);
    uint64_t result = 0;
    if ((v13 & 0x80000000) == 0)
    {
      if ((v15 & 0x80) != 0 || v14 != v15) {
        return result;
      }
LABEL_13:
      uint64_t v16 = v4[7];
      int v17 = *(unsigned __int8 *)(a1 + v16);
      int v18 = *(unsigned __int8 *)(a2 + v16);
      if (v17 == 3)
      {
        if (v18 != 3) {
          return 0;
        }
      }
      else if (v18 == 3 || v17 != v18)
      {
        return 0;
      }
      return 1;
    }
    if ((v15 & 0x80) != 0 && ((v15 ^ v14) & 0x7F) == 0) {
      goto LABEL_13;
    }
  }
  return result;
}

unint64_t sub_21F2E77A4()
{
  unint64_t result = qword_267EC83E0;
  if (!qword_267EC83E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC83E0);
  }
  return result;
}

unint64_t sub_21F2E77F8()
{
  unint64_t result = qword_267EC83E8;
  if (!qword_267EC83E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC83E8);
  }
  return result;
}

unint64_t sub_21F2E784C()
{
  unint64_t result = qword_267EC83F0;
  if (!qword_267EC83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC83F0);
  }
  return result;
}

unint64_t sub_21F2E78A0()
{
  unint64_t result = qword_267EC8400;
  if (!qword_267EC8400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8400);
  }
  return result;
}

unint64_t sub_21F2E78F4()
{
  unint64_t result = qword_267EC8408;
  if (!qword_267EC8408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8408);
  }
  return result;
}

uint64_t sub_21F2E7948()
{
  return sub_21F2E7990(&qword_267EC8410, (void (*)(uint64_t))type metadata accessor for ThinMediaGroundTruth);
}

uint64_t sub_21F2E7990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ThinMediaGroundTruth(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ThinMediaGroundTruth(uint64_t a1)
{
  uint64_t v2 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2E7DD0);
}

uint64_t sub_21F2E7DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2E7EA8);
}

uint64_t sub_21F2E7EA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21F41F228();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_21F2E7F68()
{
  uint64_t result = sub_21F41F228();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ThinMediaGroundTruth.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2E80DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThinMediaGroundTruth.CodingKeys()
{
  return &type metadata for ThinMediaGroundTruth.CodingKeys;
}

unint64_t sub_21F2E8118()
{
  unint64_t result = qword_267EC8428;
  if (!qword_267EC8428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8428);
  }
  return result;
}

unint64_t sub_21F2E8170()
{
  unint64_t result = qword_267EC8430;
  if (!qword_267EC8430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8430);
  }
  return result;
}

unint64_t sub_21F2E81C8()
{
  unint64_t result = qword_267EC8438;
  if (!qword_267EC8438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8438);
  }
  return result;
}

uint64_t sub_21F2E821C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7254646E756F7267 && a2 == 0xEF65707954687475 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021F4339D0 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021F4339F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_21F2E83D8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_21F2C357C(0, v1, 0);
  uint64_t v2 = v31;
  uint64_t result = sub_21F3C5BD4(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v24 = v1;
  int v25 = v5;
  uint64_t v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    v27[0] = *(unsigned char *)(*(void *)(a1 + 48) + v6);
    uint64_t v28 = v12;
    swift_bridgeObjectRetain();
    sub_21F2E8AD8(v27, v12, (uint64_t)v29);
    uint64_t result = swift_bridgeObjectRelease();
    char v13 = v29[0];
    long long v14 = v30;
    uint64_t v31 = v2;
    unint64_t v16 = *(void *)(v2 + 16);
    unint64_t v15 = *(void *)(v2 + 24);
    if (v16 >= v15 >> 1)
    {
      long long v23 = v30;
      uint64_t result = sub_21F2C357C(v15 > 1, v16 + 1, 1);
      long long v14 = v23;
      uint64_t v2 = v31;
    }
    *(void *)(v2 + 16) = v16 + 1;
    uint64_t v17 = v2 + 24 * v16;
    *(unsigned char *)(v17 + 32) = v13;
    *(_OWORD *)(v17 + 40) = v14;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_21F2E8614(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8450);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  v11[0] = *((void *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2E932C();
  sub_21F420F68();
  char v15 = v8;
  char v14 = 0;
  sub_21F2E77F8();
  sub_21F420D58();
  if (!v2)
  {
    char v13 = 1;
    sub_21F420D48();
    char v12 = 2;
    sub_21F420D48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21F2E87C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8440);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F2E932C();
  sub_21F420F58();
  if (!v2)
  {
    char v16 = 0;
    sub_21F2E78A0();
    sub_21F420CB8();
    char v9 = v17;
    char v15 = 1;
    uint64_t v11 = sub_21F420CA8();
    char v14 = 2;
    uint64_t v12 = sub_21F420CA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_21F2E89A4()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_21F2E8A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_21F2E8DC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F2E8A2C(uint64_t a1)
{
  unint64_t v2 = sub_21F2E932C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F2E8A68(uint64_t a1)
{
  unint64_t v2 = sub_21F2E932C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_21F2E8AA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F2E87C4(a1, a2);
}

uint64_t sub_21F2E8ABC(void *a1)
{
  return sub_21F2E8614(a1);
}

uint64_t sub_21F2E8AD8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = type metadata accessor for MediaGroundTruth();
  MEMORY[0x270FA5388](v35);
  char v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *a1;
  uint64_t v10 = MEMORY[0x263F8EE88];
  uint64_t v39 = MEMORY[0x263F8EE88];
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    int v30 = v9;
    uint64_t v12 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v32 = a3;
    uint64_t v33 = v13;
    uint64_t v31 = a2;
    swift_bridgeObjectRetain();
    uint64_t v29 = v11;
    uint64_t v14 = v11;
    uint64_t v34 = v8;
    do
    {
      sub_21F2B1C28(v12, (uint64_t)v8);
      char v15 = *(void **)&v8[*(int *)(v35 + 28)];
      char v16 = &v8[*(int *)(v35 + 32)];
      uint64_t v17 = *((void *)v16 + 1);
      uint64_t v38 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 2);
      uint64_t v19 = *((void *)v16 + 3);
      uint64_t v20 = *((void *)v16 + 4);
      uint64_t v21 = *((void *)v16 + 5);
      int v22 = v16[48];
      int v36 = v16[49];
      int v37 = v22;
      swift_bridgeObjectRetain();
      sub_21F2AA1D0(v18, v19);
      swift_bridgeObjectRetain();
      sub_21F2AA1D0(v18, v19);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v15 = sub_21F2A7FD0(0, v15[2] + 1, 1, v15);
      }
      unint64_t v24 = v15[2];
      unint64_t v23 = v15[3];
      if (v24 >= v23 >> 1) {
        char v15 = sub_21F2A7FD0((void *)(v23 > 1), v24 + 1, 1, v15);
      }
      v15[2] = v24 + 1;
      int v25 = &v15[7 * v24];
      v25[4] = v38;
      v25[5] = v17;
      v25[6] = v18;
      v25[7] = v19;
      v25[8] = v20;
      v25[9] = v21;
      *((unsigned char *)v25 + 80) = v37;
      *((unsigned char *)v25 + 81) = v36;
      swift_bridgeObjectRelease();
      sub_21F2AA27C(v18, v19);
      uint64_t v26 = sub_21F2D6228((uint64_t)v15);
      swift_bridgeObjectRelease();
      sub_21F2F31E8(v26);
      char v8 = v34;
      sub_21F2B1C8C((uint64_t)v34);
      v12 += v33;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = v39;
    a3 = v32;
    LOBYTE(v9) = v30;
    uint64_t v11 = v29;
  }
  uint64_t v27 = *(void *)(v10 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a3 = v9;
  *(void *)(a3 + 8) = v11;
  *(void *)(a3 + 16) = v27;
  return result;
}

BOOL sub_21F2E8D6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  int v5 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  if (((char)*a1 & 0x80000000) == 0)
  {
    if ((v5 & 0x80) != 0) {
      return 0;
    }
    if (v2 != v5 || v4 != v6) {
      return 0;
    }
    return v3 == *((void *)a2 + 2);
  }
  BOOL result = 0;
  if ((v5 & 0x80) != 0 && ((v5 ^ v2) & 0x7F) == 0 && v4 == v6) {
    return v3 == *((void *)a2 + 2);
  }
  return result;
}

uint64_t sub_21F2E8DC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021F433A10 || (sub_21F420DF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021F433A30)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_21F2E8F08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaGroundTruth();
  MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v35 - v6;
  char v8 = (void *)MEMORY[0x263F8EE80];
  unint64_t v42 = (void *)MEMORY[0x263F8EE80];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v41 = v5;
    uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = (v10 + 32) & ~v10;
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v4 + 72);
    uint64_t v39 = v13 + v11;
    uint64_t v38 = v10 | 7;
    uint64_t v35 = a1;
    swift_bridgeObjectRetain();
    long long v37 = xmmword_21F422460;
    uint64_t v40 = v11;
    uint64_t v36 = v2;
    while (1)
    {
      sub_21F2B1C28(v12, (uint64_t)v7);
      uint64_t v14 = v2;
      uint64_t v15 = v7[*(int *)(v2 + 20)];
      unint64_t v17 = sub_21F2F8200(v15);
      uint64_t v18 = v8[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19)) {
        break;
      }
      char v21 = v16;
      if (v8[3] < v20)
      {
        sub_21F2F9D10(v20, 1);
        char v8 = v42;
        uint64_t v22 = sub_21F2F8200(v15);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_20;
        }
        unint64_t v17 = v22;
      }
      if (v21)
      {
        uint64_t v24 = v8[7];
        sub_21F2E9214((uint64_t)v7, v41);
        unint64_t v25 = *(void *)(v24 + 8 * v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v24 + 8 * v17) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v25 = sub_21F2A7F9C(0, *(void *)(v25 + 16) + 1, 1, v25);
          *(void *)(v24 + 8 * v17) = v25;
        }
        unint64_t v28 = *(void *)(v25 + 16);
        unint64_t v27 = *(void *)(v25 + 24);
        if (v28 >= v27 >> 1)
        {
          unint64_t v25 = sub_21F2A7F9C(v27 > 1, v28 + 1, 1, v25);
          *(void *)(v24 + 8 * v17) = v25;
        }
        uint64_t v2 = v36;
        *(void *)(v25 + 16) = v28 + 1;
        uint64_t v11 = v40;
        sub_21F2E9214(v41, v25 + v40 + v28 * v13);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7768);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v37;
        sub_21F2E9214((uint64_t)v7, v29 + v11);
        v8[(v17 >> 6) + 8] |= 1 << v17;
        *(unsigned char *)(v8[6] + v17) = v15;
        *(void *)(v8[7] + 8 * v17) = v29;
        uint64_t v30 = v8[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_19;
        }
        void v8[2] = v32;
        uint64_t v2 = v14;
      }
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_21F420E68();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v33 = sub_21F2E83D8((uint64_t)v8);
    swift_release();
    return v33;
  }
  return result;
}

uint64_t sub_21F2E9214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruthSummary(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1F && a1[24]) {
    return (*(_DWORD *)a1 + 31);
  }
  unsigned int v3 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v3 >= 0x1E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruthSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 31;
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSummary()
{
  return &type metadata for MediaGroundTruthSummary;
}

unint64_t sub_21F2E932C()
{
  unint64_t result = qword_267EC8448;
  if (!qword_267EC8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8448);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaGroundTruthSummary.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2E944CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSummary.CodingKeys()
{
  return &type metadata for MediaGroundTruthSummary.CodingKeys;
}

unint64_t sub_21F2E9488()
{
  unint64_t result = qword_267EC8458;
  if (!qword_267EC8458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8458);
  }
  return result;
}

unint64_t sub_21F2E94E0()
{
  unint64_t result = qword_267EC8460;
  if (!qword_267EC8460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8460);
  }
  return result;
}

unint64_t sub_21F2E9538()
{
  unint64_t result = qword_267EC8468;
  if (!qword_267EC8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8468);
  }
  return result;
}

uint64_t sub_21F2E958C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  BOOL v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_21F4205D8();
  if (!v20) {
    return sub_21F4203B8();
  }
  uint64_t v21 = v20;
  unint64_t v27 = v15;
  uint64_t v43 = sub_21F420A98();
  uint64_t v35 = sub_21F420AA8();
  sub_21F420A48();
  uint64_t v41 = v19;
  uint64_t result = sub_21F4205C8();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    char v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    long long v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      unint64_t v25 = (void (*)(char *, void))sub_21F420608();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_21F420A88();
      sub_21F4205E8();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t INInteraction.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8470);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - v8;
  id v10 = objc_msgSend(v2, sel_dateInterval);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_21F41EE18();

    uint64_t v12 = sub_21F41EE68();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 0, 1, v12);
  }
  else
  {
    uint64_t v12 = sub_21F41EE68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  }
  sub_21F2E9BAC((uint64_t)v7, (uint64_t)v9);
  sub_21F41EE68();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 1, v12))
  {
    sub_21F29FA48((uint64_t)v9, &qword_267EC8470);
    uint64_t v13 = sub_21F41F198();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    sub_21F41EE48();
    sub_21F29FA48((uint64_t)v9, &qword_267EC8470);
    uint64_t v15 = sub_21F41F198();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
}

uint64_t sub_21F2E9BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2E9C14@<X0>(uint64_t a1@<X8>)
{
  return INInteraction.getTimestamp()(a1);
}

uint64_t AppInteraction.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8470);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = (void *)sub_21F41F878();
  id v9 = objc_msgSend(v8, sel_dateInterval);

  if (v9)
  {
    sub_21F41EE18();

    uint64_t v10 = sub_21F41EE68();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    uint64_t v10 = sub_21F41EE68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_21F2E9BAC((uint64_t)v5, (uint64_t)v7);
  sub_21F41EE68();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
  {
    sub_21F29FA48((uint64_t)v7, &qword_267EC8470);
    uint64_t v11 = sub_21F41F198();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_21F41EE48();
    sub_21F29FA48((uint64_t)v7, &qword_267EC8470);
    uint64_t v13 = sub_21F41F198();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
}

uint64_t sub_21F2E9E70()
{
  return sub_21F4202E8();
}

uint64_t sub_21F2E9FC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v32 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_21F41F198();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  sub_21F2EA770(a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_21F29FA48((uint64_t)v12, &qword_26AD38710);
    uint64_t v18 = v33;
    uint64_t *v33 = a3;
    sub_21F420428();
    sub_21F420DB8();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_21F420378();
    *uint64_t v20 = sub_21F4203B8();
    sub_21F2AC058(v19);
    uint64_t v21 = sub_21F4203A8();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v34 = v17;
    MEMORY[0x270FA5388](v23);
    uint64_t v24 = v32;
    *(&v31 - 4) = a4;
    *(&v31 - 3) = v24;
    *(&v31 - 2) = (uint64_t)v16;
    uint64_t v25 = sub_21F420428();
    swift_getWitnessTable();
    uint64_t v26 = sub_21F39A39C((void (*)(char *))sub_21F2EA7D8, (uint64_t)(&v31 - 6), v25);
    uint64_t v28 = v27;
    uint64_t v18 = v33;
    uint64_t *v33 = v26;
    sub_21F420DB8();
    swift_allocObject();
    uint64_t v29 = sub_21F420378();
    *uint64_t v30 = v28;
    sub_21F2AC058(v29);
    uint64_t v21 = sub_21F4203A8();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v18[1] = v21;
  return result;
}

uint64_t sub_21F2EA2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F41F198();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21F29FA48((uint64_t)v8, &qword_26AD38710);
    char v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_21F2EA7E4();
    char v13 = sub_21F420088() ^ 1;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13 & 1;
}

uint64_t static TimeEventUtils.groupAndJoinEvents<A, B>(milestoneEvents:eventsToJoin:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v16[5] = a6;
  uint64_t v17 = a1;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  uint64_t v7 = sub_21F420428();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_21F2E958C((void (*)(char *, char *))sub_21F2EA688, (uint64_t)v16, v7, v8, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v10);
  uint64_t v11 = sub_21F2E9E70();
  swift_bridgeObjectRelease();
  uint64_t v17 = a1;
  *(void *)&long long v21 = v11;
  sub_21F420428();
  uint64_t v12 = sub_21F420428();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  sub_21F420E48();
  swift_bridgeObjectRelease();
  long long v21 = v22;
  swift_getTupleTypeMetadata2();
  uint64_t v17 = v7;
  uint64_t v18 = v12;
  uint64_t v19 = v13;
  uint64_t v20 = v14;
  sub_21F420978();
  swift_getWitnessTable();
  return sub_21F420438();
}

uint64_t sub_21F2EA688()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 8))(*(void *)(v0 + 16));
}

uint64_t dispatch thunk of TimeBasedEvent.getTimestamp()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for TimeEventUtils()
{
  return &type metadata for TimeEventUtils;
}

uint64_t sub_21F2EA6F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21F2E9FC0(a1, a2, v3[4], v3[2], v3[3], a3);
}

unint64_t sub_21F2EA714()
{
  unint64_t result = qword_26AD3AEE8;
  if (!qword_26AD3AEE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD3AEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD3AEE8);
  }
  return result;
}

uint64_t sub_21F2EA770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F2EA7D8(uint64_t a1)
{
  return sub_21F2EA2D8(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_21F2EA7E4()
{
  unint64_t result = qword_267EC8478;
  if (!qword_267EC8478)
  {
    sub_21F41F198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8478);
  }
  return result;
}

SiriPrivateLearningInference::PIMSConstraintMismatch __swiftcall PIMSConstraintMismatch.init(mismatchReason:)(SiriPrivateLearningInference::PIMSConstraintMismatchReason mismatchReason)
{
  char v2 = *(unsigned char *)mismatchReason;
  *(void *)uint64_t v1 = 0xD000000000000016;
  *(void *)(v1 + 8) = 0x800000021F424D60;
  *(unsigned char *)(v1 + 16) = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = mismatchReason;
  return result;
}

uint64_t PIMSConstraintMismatch.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSConstraintMismatch.eventName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSConstraintMismatch.eventName.modify())()
{
  return nullsub_1;
}

unint64_t PIMSConstraintMismatch.getLoggableProperties()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  strcpy((char *)(inited + 32), "mismatchReason");
  *(unsigned char *)(inited + 47) = -18;
  unint64_t v1 = PIMSConstraintMismatchReason.rawValue.getter();
  uint64_t v2 = MEMORY[0x263F740E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v3;
  return sub_21F2C0788(inited);
}

unint64_t PIMSConstraintMismatchReason.rawValue.getter()
{
  unint64_t result = 0xD000000000000027;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000025;
      break;
    case 2:
      unint64_t result = 0xD000000000000023;
      break;
    case 3:
      unint64_t result = 0xD000000000000024;
      break;
    case 4:
      unint64_t result = 0xD000000000000032;
      break;
    case 5:
    case 6:
    case 0x1A:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000033;
      break;
    case 8:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000034;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000035;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000025;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000029;
      break;
    case 0xD:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000023;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000035;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000033;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000038;
      break;
    case 0x12:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0x13:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 0x14:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000036;
      break;
    case 0x17:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000030;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000030;
      break;
    case 0x1B:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000031;
      break;
    case 0x1E:
      unint64_t result = 0xD00000000000003FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_21F2EAC30()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  strcpy((char *)(inited + 32), "mismatchReason");
  *(unsigned char *)(inited + 47) = -18;
  unint64_t v1 = PIMSConstraintMismatchReason.rawValue.getter();
  uint64_t v2 = MEMORY[0x263F740E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v2;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v3;
  return sub_21F2C0788(inited);
}

SiriPrivateLearningInference::PIMSConstraintMismatchReason_optional __swiftcall PIMSConstraintMismatchReason.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_21F420E28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      char v5 = 1;
      goto LABEL_15;
    case 2:
      char v5 = 2;
      goto LABEL_15;
    case 3:
      char v5 = 3;
      goto LABEL_15;
    case 4:
      char v5 = 4;
      goto LABEL_15;
    case 5:
      char v5 = 5;
      goto LABEL_15;
    case 6:
      char v5 = 6;
      goto LABEL_15;
    case 7:
      char v5 = 7;
      goto LABEL_15;
    case 8:
      char v5 = 8;
      goto LABEL_15;
    case 9:
      char v5 = 9;
      goto LABEL_15;
    case 10:
      char v5 = 10;
      goto LABEL_15;
    case 11:
      char v5 = 11;
      goto LABEL_15;
    case 12:
      char v5 = 12;
LABEL_15:
      char v6 = v5;
      break;
    case 13:
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    default:
      char v6 = 31;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t sub_21F2EAEC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F32E988(*a1, *a2);
}

unint64_t sub_21F2EAED4()
{
  unint64_t result = qword_267EC8480;
  if (!qword_267EC8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8480);
  }
  return result;
}

uint64_t sub_21F2EAF28()
{
  return sub_21F420F48();
}

uint64_t sub_21F2EAF90()
{
  PIMSConstraintMismatchReason.rawValue.getter();
  sub_21F420148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F2EAFF4()
{
  return sub_21F420F48();
}

SiriPrivateLearningInference::PIMSConstraintMismatchReason_optional sub_21F2EB058(Swift::String *a1)
{
  return PIMSConstraintMismatchReason.init(rawValue:)(*a1);
}

unint64_t sub_21F2EB064@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PIMSConstraintMismatchReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for PIMSConstraintMismatch()
{
  return &type metadata for PIMSConstraintMismatch;
}

uint64_t getEnumTagSinglePayload for PIMSConstraintMismatchReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE2) {
    goto LABEL_17;
  }
  if (a2 + 30 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 30) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 30;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v8 = v6 - 31;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PIMSConstraintMismatchReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F2EB1F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PIMSConstraintMismatchReason()
{
  return &type metadata for PIMSConstraintMismatchReason;
}

ValueMetadata *type metadata accessor for NowPlayingEventHelpers()
{
  return &type metadata for NowPlayingEventHelpers;
}

uint64_t sub_21F2EB240(uint64_t a1, char a2, uint64_t a3)
{
  sub_21F29F064(a3, &v14);
  sub_21F29F064(a1, &v13);
  long long v5 = v14;
  long long v6 = v13;
  if (a2)
  {
    if (*((void *)&v14 + 1) != 5)
    {
      if (*((void *)&v13 + 1) == 5)
      {
        unint64_t v8 = *((void *)&v14 + 1);
        uint64_t v7 = v14;
LABEL_12:
        sub_21F2EBC48(v7, v8);
        char v9 = 0;
        return v9 & 1;
      }
      long long v12 = v14;
LABEL_14:
      long long v11 = v13;
      sub_21F2EBC80(v14, *((unint64_t *)&v14 + 1));
      sub_21F2EBC80(v5, *((unint64_t *)&v5 + 1));
      char v9 = _s28SiriPrivateLearningInference19NowPlayingMediaTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v12, (uint64_t *)&v11);
      sub_21F2EBC48(v6, *((unint64_t *)&v6 + 1));
      sub_21F2EBC48(v5, *((unint64_t *)&v5 + 1));
      sub_21F2EBC58(v12, *((unint64_t *)&v12 + 1));
      sub_21F2EBC48(v5, *((unint64_t *)&v5 + 1));
      return v9 & 1;
    }
LABEL_11:
    unint64_t v8 = *((void *)&v6 + 1);
    uint64_t v7 = v6;
    goto LABEL_12;
  }
  if (*((void *)&v14 + 1) != 5)
  {
    long long v12 = v14;
    if (*((void *)&v13 + 1) != 5) {
      goto LABEL_14;
    }
    sub_21F2EBC6C(v14, *((unint64_t *)&v14 + 1));
    sub_21F2EBC58(v5, *((unint64_t *)&v5 + 1));
    goto LABEL_10;
  }
  if (*((void *)&v13 + 1) != 5)
  {
LABEL_10:
    sub_21F2EBC48(v5, *((unint64_t *)&v5 + 1));
    goto LABEL_11;
  }
  char v9 = 1;
  return v9 & 1;
}

uint64_t sub_21F2EB374()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E1B0(v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_4:
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_21F41FF28();
    __swift_project_value_buffer(v6, (uint64_t)qword_26AD3C910);
    uint64_t v7 = sub_21F41FF08();
    os_log_type_t v8 = sub_21F420678();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl(&dword_21F29A000, v7, v8, "Missing bundleId or mediaType", v9, 2u);
      MEMORY[0x223C4B440](v9, -1, -1);
    }

    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_21F29F064(v4, &v16);
  swift_bridgeObjectRelease();
  unint64_t v5 = *((void *)&v16 + 1);
  if (*((void *)&v16 + 1) == 5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v12 = v16;
  if (v1 == 0x6C7070612E6D6F63 && v3 == 0xEF636973754D2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_21F2EBC48(v12, v5);
      return 1;
    }
  }
  switch(v5)
  {
    case 0uLL:
      sub_21F2EBC58(v12, 0);
      sub_21F2EBC58(0, 0);
      return 0;
    case 1uLL:
      uint64_t v10 = 1;
      sub_21F2EBC58(v12, 1uLL);
      sub_21F2EBC58(0, 0);
      return v10;
    case 2uLL:
      uint64_t v14 = v12;
      unint64_t v15 = 2;
      goto LABEL_23;
    case 3uLL:
      uint64_t v14 = v12;
      unint64_t v15 = 3;
      goto LABEL_23;
    case 4uLL:
      uint64_t v14 = v12;
      unint64_t v15 = 4;
      goto LABEL_23;
    default:
      uint64_t v14 = v12;
      unint64_t v15 = v5;
LABEL_23:
      sub_21F2EBC58(v14, v15);
      sub_21F2EBC58(0, 0);
      uint64_t v10 = 1;
      break;
  }
  return v10;
}

uint64_t sub_21F2EB600(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F29E1B0(v2);
  uint64_t v6 = v5;
  uint64_t v7 = sub_21F29E1B0(v3);
  uint64_t v9 = v8;
  if (v6)
  {
    if (!v8) {
      goto LABEL_51;
    }
    if (v4 == v7 && v6 == v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_21F420DF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v9) = 0;
      if ((v11 & 1) == 0) {
        return v9 & 1;
      }
    }
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F29F254(v2);
    uint64_t v14 = v13;
    uint64_t v15 = sub_21F29F254(v3);
    LOBYTE(v9) = v16;
    if (!v14)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if (v16)
    {
      if (v12 == v15 && v14 == v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_21F420DF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v9) = 0;
        if ((v17 & 1) == 0) {
          return v9 & 1;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_21F29F23C(v2);
      uint64_t v20 = v19;
      uint64_t v21 = sub_21F29F23C(v3);
      uint64_t v9 = v22;
      if (v20)
      {
        if (!v22) {
          goto LABEL_51;
        }
        if (v18 == v21 && v20 == v22)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v23 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v23 & 1) == 0) {
            return v9 & 1;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_21F29F224(v2);
      uint64_t v26 = v25;
      uint64_t v27 = sub_21F29F224(v3);
      uint64_t v9 = v28;
      if (v26)
      {
        if (!v28) {
          goto LABEL_51;
        }
        if (v24 == v27 && v26 == v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v29 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v29 & 1) == 0) {
            return v9 & 1;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_21F29F20C(v2);
      uint64_t v32 = v31;
      uint64_t v33 = sub_21F29F20C(v3);
      uint64_t v9 = v34;
      if (v32)
      {
        if (!v34) {
          goto LABEL_51;
        }
        if (v30 == v33 && v32 == v34)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v35 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v35 & 1) == 0) {
            return v9 & 1;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v36 = swift_bridgeObjectRetain();
      char v37 = sub_21F2EB240(v36, 0, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v9) = 0;
      if ((v37 & 1) == 0) {
        return v9 & 1;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_21F29F254(v2);
      uint64_t v40 = v39;
      uint64_t v41 = sub_21F29F254(v3);
      uint64_t v9 = v42;
      if (!v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_18;
        }
        goto LABEL_57;
      }
      if (v42)
      {
        if (v38 == v41 && v40 == v42)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v44 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v44 & 1) == 0) {
            return v9 & 1;
          }
        }
LABEL_57:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v45 = COERCE_DOUBLE(sub_21F29F1F4(v2));
        char v47 = v46;
        double v48 = COERCE_DOUBLE(sub_21F29F1F4(v3));
        char v50 = v49;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v47)
        {
          if ((v50 & 1) == 0) {
            goto LABEL_19;
          }
        }
        else if ((v50 & 1) != 0 || v45 != v48)
        {
          goto LABEL_19;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_21F29EDD4(v2);
        uint64_t v53 = v52;
        uint64_t v54 = sub_21F29EDD4(v3);
        uint64_t v56 = v55;
        if (!v53)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v56)
          {
            LOBYTE(v9) = 1;
            return v9 & 1;
          }
          goto LABEL_18;
        }
        if (v55)
        {
          if (v51 == v54 && v53 == v55) {
            LOBYTE(v9) = 1;
          }
          else {
            LOBYTE(v9) = sub_21F420DF8();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_52;
        }
        goto LABEL_17;
      }
    }
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_12;
  }
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  LOBYTE(v9) = 0;
  return v9 & 1;
}

uint64_t sub_21F2EBC48(uint64_t a1, unint64_t a2)
{
  if (a2 != 5) {
    return sub_21F2EBC58(a1, a2);
  }
  return a1;
}

uint64_t sub_21F2EBC58(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2EBC6C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F2EBC80(uint64_t a1, unint64_t a2)
{
  if (a2 != 5) {
    return sub_21F2EBC6C(a1, a2);
  }
  return a1;
}

uint64_t InferenceFeatures.InferenceFeatureManager.__allocating_init()()
{
  return InferenceFeatures.InferenceFeatureManager.init()();
}

uint64_t InferenceFeatures.InferenceFeatureManager.init()()
{
  uint64_t v0 = sub_21F41F248();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_21F41F8B8();
  MEMORY[0x270FA5388](v1 - 8);
  id v2 = objc_msgSend(self, sel_clientWithIdentifier_, 276);
  v7[8] = sub_21F2EBE74();
  v7[9] = MEMORY[0x263F740F0];
  v7[5] = (uint64_t)v2;
  v7[3] = sub_21F41FC38();
  v7[4] = MEMORY[0x263F73FB0];
  __swift_allocate_boxed_opaque_existential_1(v7);
  sub_21F41FC28();
  id v3 = objc_msgSend(self, sel_currentLocale);
  sub_21F41F238();

  id v4 = objc_msgSend(self, sel_sharedPreferences);
  sub_21F41F8A8();
  v6[3] = sub_21F41F918();
  v6[4] = MEMORY[0x263F73EF8];
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_21F41F908();
  return sub_21F41F8E8();
}

unint64_t sub_21F2EBE74()
{
  unint64_t result = qword_26AD3B070;
  if (!qword_26AD3B070)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AD3B070);
  }
  return result;
}

void InferenceFeatures.InferenceFeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
}

void InferenceFeatures.InferenceFeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
}

uint64_t InferenceFeatures.InferenceFeatureManager.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference0D8FeaturesO0D14FeatureManagerCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_21F2EBF48()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8498);
  sub_21F41FED8();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21F424F70;
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  sub_21F41FEC8();
  uint64_t v1 = sub_21F2D84E4(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_267EC8488 = v1;
  return result;
}

uint64_t static InferenceFeatures.top13Locales.getter()
{
  if (qword_267EC71B0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2EC204()
{
  uint64_t v0 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v0 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21F422460;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = (uint64_t *)(v4 + v1[14]);
  uint64_t v6 = *MEMORY[0x263F740B8];
  uint64_t v7 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v8 = sub_21F41FC48();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F422300;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  uint64_t v14 = sub_21F41F758();
  v13[3] = v14;
  v13[4] = sub_21F2ED98C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F73E98], v14);
  uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v16(v13, *MEMORY[0x263F73FB8], v8);
  char v17 = (uint64_t *)((char *)v13 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFB8);
  *char v17 = sub_21F41F988();
  sub_21F41F928();
  v16(v17, *MEMORY[0x263F73FC0], v8);
  *uint64_t v5 = v12;
  uint64_t v18 = *MEMORY[0x263F74088];
  uint64_t v19 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  sub_21F2C0E68(v3);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  qword_26AD38948 = result;
  return result;
}

uint64_t static InferenceFeatures.PartialRepetitionsInPhoneCall.getter()
{
  return sub_21F2ED804(&qword_26AD38958);
}

uint64_t sub_21F2EC57C(uint64_t a1)
{
  return sub_21F2ECFE0(a1, MEMORY[0x263F73EA0], 0xD000000000000016, 0x800000021F432A70, &qword_267EC8490);
}

uint64_t static InferenceFeatures.AdaptivePICSGeneration.getter()
{
  return sub_21F2ED804(&qword_267EC71C0);
}

uint64_t sub_21F2EC5CC()
{
  uint64_t v0 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v0 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21F422460;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = (uint64_t *)(v4 + v1[14]);
  uint64_t v6 = *MEMORY[0x263F740B8];
  uint64_t v7 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v8 = sub_21F41FC48();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21F422460;
  uint64_t v12 = (uint64_t *)(v11 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFB8);
  *uint64_t v12 = sub_21F41F978();
  sub_21F41F928();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F73FC0], v8);
  *uint64_t v5 = v11;
  uint64_t v13 = *MEMORY[0x263F74088];
  uint64_t v14 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v5, v13, v14);
  sub_21F2C0E68(v3);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  qword_26AD38910 = result;
  return result;
}

uint64_t static InferenceFeatures.PICSRuntimeInSiriVocab.getter()
{
  return sub_21F2ED804(&qword_26AD38918);
}

uint64_t sub_21F2EC8C4()
{
  uint64_t v0 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v0 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21F422460;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = (uint64_t *)(v4 + v1[14]);
  uint64_t v6 = *MEMORY[0x263F740B8];
  uint64_t v7 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v8 = sub_21F41FC48();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F422300;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  uint64_t v14 = sub_21F41F758();
  v13[3] = v14;
  v13[4] = sub_21F2ED98C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F73E90], v14);
  uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v16(v13, *MEMORY[0x263F73FB8], v8);
  char v17 = (uint64_t *)((char *)v13 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFB8);
  *char v17 = sub_21F41F938();
  sub_21F41F968();
  v16(v17, *MEMORY[0x263F73FC0], v8);
  *uint64_t v5 = v12;
  uint64_t v18 = *MEMORY[0x263F74088];
  uint64_t v19 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  sub_21F2C0E68(v3);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  qword_26AD3AFD0 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSShadowLogging.getter()
{
  return sub_21F2ED804(&qword_26AD3AFE0);
}

uint64_t sub_21F2ECC3C()
{
  uint64_t v0 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v0 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_21F422460;
  unint64_t v4 = v3 + v2;
  uint64_t v5 = (uint64_t *)(v4 + v1[14]);
  uint64_t v6 = *MEMORY[0x263F740B8];
  uint64_t v7 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v8 = sub_21F41FC48();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21F422300;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  uint64_t v14 = sub_21F41F758();
  v13[3] = v14;
  v13[4] = sub_21F2ED98C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F73E80], v14);
  uint64_t v16 = *(void (**)(uint64_t *, void, uint64_t))(v9 + 104);
  v16(v13, *MEMORY[0x263F73FB8], v8);
  char v17 = (uint64_t *)((char *)v13 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFB8);
  *char v17 = sub_21F41F948();
  sub_21F41F968();
  v16(v17, *MEMORY[0x263F73FC0], v8);
  *uint64_t v5 = v12;
  uint64_t v18 = *MEMORY[0x263F74088];
  uint64_t v19 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  sub_21F2C0E68(v3);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  qword_26AD38E20 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSSuggestionSurfacing.getter()
{
  return sub_21F2ED804(&qword_26AD38E28);
}

uint64_t sub_21F2ECFB4(uint64_t a1)
{
  return sub_21F2ECFE0(a1, MEMORY[0x263F73E88], 0xD000000000000011, 0x800000021F432A10, &qword_26AD38920);
}

uint64_t sub_21F2ECFE0(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v6 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v7 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21F422460;
  uint64_t v10 = (uint64_t *)(v9 + v8 + v7[14]);
  uint64_t v11 = *MEMORY[0x263F740B8];
  uint64_t v12 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v9 + v8, v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v13 = sub_21F41FC48();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21F422460;
  char v17 = (uint64_t *)(v16 + v15);
  uint64_t v18 = sub_21F41F758();
  void v17[3] = v18;
  v17[4] = sub_21F2ED98C();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(boxed_opaque_existential_1, *a2, v18);
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x263F73FB8], v13);
  *uint64_t v10 = v16;
  uint64_t v20 = *MEMORY[0x263F74088];
  uint64_t v21 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v10, v20, v21);
  sub_21F2C0E68(v9);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  *a5 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSInAppFollowup.getter()
{
  return sub_21F2ED804(&qword_26AD38930);
}

uint64_t sub_21F2ED30C()
{
  uint64_t v0 = sub_21F41FA38();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_21F41FBB8();
  __swift_allocate_value_buffer(v1, qword_26AD38970);
  __swift_project_value_buffer(v1, (uint64_t)qword_26AD38970);
  sub_21F41F958();
  sub_21F41F968();
  return sub_21F41FBA8();
}

uint64_t static InferenceFeatures.pimsPartialRepetitionSimilarityThreshold.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AD38988 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_21F41FBB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AD38970);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_21F2ED46C(uint64_t a1)
{
  return sub_21F2ED4A4(a1, MEMORY[0x263F73F00], 0xD00000000000001BLL, 0x800000021F432A30, &qword_26AD38938);
}

uint64_t sub_21F2ED4A4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = sub_21F41F8D8();
  MEMORY[0x270FA5388](v6 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B088);
  uint64_t v7 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFC8) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_21F422460;
  uint64_t v10 = (uint64_t *)(v9 + v8 + v7[14]);
  uint64_t v11 = *MEMORY[0x263F740B8];
  uint64_t v12 = sub_21F41FEE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v9 + v8, v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3B080);
  uint64_t v13 = sub_21F41FC48();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_21F422460;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AFB8);
  *(void *)(v16 + v15) = a2();
  sub_21F41F968();
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x263F73FC0], v13);
  *uint64_t v10 = v16;
  uint64_t v17 = *MEMORY[0x263F74088];
  uint64_t v18 = sub_21F41FDB8();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v10, v17, v18);
  sub_21F2C0E68(v9);
  sub_21F41F8C8();
  sub_21F41F778();
  swift_allocObject();
  uint64_t result = sub_21F41F768();
  *a5 = result;
  return result;
}

uint64_t static InferenceFeatures.pimsWakeWordTrimmingEnabled.getter()
{
  return sub_21F2ED804(&qword_26AD38940);
}

uint64_t sub_21F2ED7A8(uint64_t a1)
{
  return sub_21F2ED4A4(a1, MEMORY[0x263F73F08], 0xD00000000000001DLL, 0x800000021F432A50, &qword_26AD38960);
}

uint64_t static InferenceFeatures.pimsPhantomTurnRemovalEnabled.getter()
{
  return sub_21F2ED804(&qword_26AD38968);
}

uint64_t sub_21F2ED804(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

ValueMetadata *type metadata accessor for InferenceFeatures()
{
  return &type metadata for InferenceFeatures;
}

uint64_t type metadata accessor for InferenceFeatures.InferenceFeatureManager()
{
  uint64_t result = qword_26AD3AFA0;
  if (!qword_26AD3AFA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2ED8AC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InferenceFeatures.InferenceFeatureManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InferenceFeatures.InferenceFeatureManager);
}

uint64_t dispatch thunk of InferenceFeatures.InferenceFeatureManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InferenceFeatures.InferenceFeatureManager))();
}

uint64_t sub_21F2ED920()
{
  return type metadata accessor for InferenceFeatures.InferenceFeatureManager();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_21F2ED98C()
{
  unint64_t result = qword_26AD3AFB0;
  if (!qword_26AD3AFB0)
  {
    sub_21F41F758();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD3AFB0);
  }
  return result;
}

uint64_t ContactSuggestionProvidedClassification.turnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ContactSuggestionProvidedClassification.contactSuggestion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionProvidedClassification() + 20);
  return sub_21F2EDADC(v3, a1);
}

uint64_t type metadata accessor for ContactSuggestionProvidedClassification()
{
  uint64_t result = qword_26AD3AE70;
  if (!qword_26AD3AE70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F2EDADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactSuggestionProvidedClassification.userPrompt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionProvidedClassification() + 24);
  return sub_21F2EDB84(v3, a1);
}

uint64_t sub_21F2EDB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactSuggestionProvidedClassification.referencedTurns.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7980);
  uint64_t v1 = sub_21F41F228();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21F422460;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0, v1);
  return v4;
}

uint64_t ContactSuggestionProvidedClassification.referencedEvents.getter()
{
  type metadata accessor for ContactSuggestionProvidedClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F2EDCF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7980);
  uint64_t v1 = sub_21F41F228();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21F422460;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0, v1);
  return v4;
}

uint64_t sub_21F2EDDD0()
{
  return swift_bridgeObjectRetain();
}

void *initializeBufferWithCopyOfBuffer for ContactSuggestionProvidedClassification(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    char v46 = a1;
    uint64_t v47 = a3;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    v9(v11, &a2[v10], v7);
    uint64_t v13 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
    uint64_t v14 = v13[5];
    unint64_t v15 = &v11[v14];
    uint64_t v16 = &v12[v14];
    uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    double v45 = v9;
    uint64_t v44 = v7;
    if (v43(&v12[v14], 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v9(v15, v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    v11[v13[6]] = v12[v13[6]];
    v11[v13[7]] = v12[v13[7]];
    uint64_t v19 = v46;
    uint64_t v20 = v47;
    uint64_t v21 = *(int *)(v47 + 24);
    uint64_t v22 = (void *)((char *)v46 + v21);
    char v23 = a2;
    uint64_t v24 = &a2[v21];
    uint64_t v25 = (int *)type metadata accessor for EntityPromptClassification();
    uint64_t v26 = *((void *)v25 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
      memcpy(v22, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v42 = v26;
      uint64_t v28 = *((void *)v24 + 1);
      *uint64_t v22 = *(void *)v24;
      v22[1] = v28;
      uint64_t v29 = *((void *)v24 + 3);
      void v22[2] = *((void *)v24 + 2);
      _OWORD v22[3] = v29;
      uint64_t v30 = *((void *)v24 + 5);
      v22[4] = *((void *)v24 + 4);
      void v22[5] = v30;
      uint64_t v31 = *((void *)v24 + 7);
      v22[6] = *((void *)v24 + 6);
      v22[7] = v31;
      uint64_t v32 = *((void *)v24 + 9);
      v22[8] = *((void *)v24 + 8);
      v22[9] = v32;
      *((unsigned char *)v22 + 80) = v24[80];
      uint64_t v33 = v25[11];
      uint64_t v41 = (char *)v22 + v33;
      uint64_t v34 = &v24[v33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v41, v34, v44);
      uint64_t v35 = v25[12];
      uint64_t v36 = (char *)v22 + v35;
      char v37 = &v24[v35];
      if (v43(&v24[v35], 1, v44))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        v45(v36, v37, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v36, 0, 1, v44);
      }
      *(void *)((char *)v22 + v25[13]) = *(void *)&v24[v25[13]];
      uint64_t v39 = *(void (**)(void *, void, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      v39(v22, 0, 1, v25);
      uint64_t v20 = v47;
      char v23 = a2;
      uint64_t v19 = v46;
    }
    *(void *)((char *)v19 + *(int *)(v20 + 28)) = *(void *)((char *)v23 + *(int *)(v20 + 28));
    swift_bridgeObjectRetain();
  }
  return v19;
}

uint64_t destroy for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  v6(v7, v4);
  uint64_t v8 = v7 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 20);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v9(v8, 1, v4)) {
    v6(v8, v4);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t v11 = type metadata accessor for EntityPromptClassification();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v10 + *(int *)(v11 + 44), v4);
    uint64_t v12 = v10 + *(int *)(v11 + 48);
    if (!v9(v12, 1, v4)) {
      v6(v12, v4);
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v8(a1 + v9, v11, v6);
  uint64_t v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (void *)(v10 + v13);
  unint64_t v15 = (const void *)(v11 + v13);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v41(v11 + v13, 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v17 = v7;
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    uint64_t v17 = v7;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  *(unsigned char *)(v10 + v12[6]) = *(unsigned char *)(v11 + v12[6]);
  *(unsigned char *)(v10 + v12[7]) = *(unsigned char *)(v11 + v12[7]);
  uint64_t v19 = v43;
  uint64_t v18 = v44;
  uint64_t v20 = *(int *)(v43 + 24);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(v44 + v20);
  char v23 = (int *)type metadata accessor for EntityPromptClassification();
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v40 = v24;
    uint64_t v42 = a1;
    uint64_t v26 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v26;
    uint64_t v27 = v22[3];
    void v21[2] = v22[2];
    v21[3] = v27;
    uint64_t v28 = v22[5];
    v21[4] = v22[4];
    v21[5] = v28;
    uint64_t v29 = v22[7];
    v21[6] = v22[6];
    v21[7] = v29;
    uint64_t v30 = v22[9];
    v21[8] = v22[8];
    v21[9] = v30;
    *((unsigned char *)v21 + 80) = *((unsigned char *)v22 + 80);
    uint64_t v31 = v23[11];
    uint64_t v38 = (char *)v22 + v31;
    uint64_t v39 = (char *)v21 + v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8((uint64_t)v39, (uint64_t)v38, v6);
    uint64_t v32 = v23[12];
    uint64_t v33 = (char *)v21 + v32;
    uint64_t v34 = (char *)v22 + v32;
    if (v41((uint64_t)v22 + v32, 1, v6))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v8((uint64_t)v33, (uint64_t)v34, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v6);
    }
    *(void *)((char *)v21 + v23[13]) = *(void *)((char *)v22 + v23[13]);
    uint64_t v36 = *(void (**)(void *, void, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    v36(v21, 0, 1, v23);
    a1 = v42;
    uint64_t v19 = v43;
    uint64_t v18 = v44;
  }
  *(void *)(a1 + *(int *)(v19 + 28)) = *(void *)(v18 + *(int *)(v19 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  double v48 = v8;
  v8(a1 + v9, a2 + v9, v6);
  uint64_t v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (void *)(v10 + v13);
  unint64_t v15 = (const void *)(v11 + v13);
  uint64_t v47 = v7;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v7) = v16(v10 + v13, 1, v6);
  char v46 = (uint64_t (*)(char *, uint64_t, uint64_t))v16;
  int v17 = v16((uint64_t)v15, 1, v6);
  if (v7)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v14, v15, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v14, 0, 1, v6);
LABEL_7:
      uint64_t v19 = (void (*)(char *, char *, uint64_t))v48;
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v47 + 8))(v14, v6);
    goto LABEL_6;
  }
  uint64_t v19 = (void (*)(char *, char *, uint64_t))v48;
  v48((uint64_t)v14, (uint64_t)v15, v6);
LABEL_8:
  *(unsigned char *)(v10 + v12[6]) = *(unsigned char *)(v11 + v12[6]);
  *(unsigned char *)(v10 + v12[7]) = *(unsigned char *)(v11 + v12[7]);
  uint64_t v20 = *(int *)(v50 + 24);
  uint64_t v49 = a1;
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  char v23 = (int *)type metadata accessor for EntityPromptClassification();
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_21F2BCBB0((uint64_t)v21);
      goto LABEL_14;
    }
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void v21[2] = v22[2];
    v21[3] = v22[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21[4] = v22[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21[5] = v22[5];
    v21[6] = v22[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21[7] = v22[7];
    v21[8] = v22[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21[9] = v22[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)v21 + 80) = *((unsigned char *)v22 + 80);
    v19((char *)v21 + v23[11], (char *)v22 + v23[11], v6);
    uint64_t v34 = v23[12];
    uint64_t v35 = (char *)v21 + v34;
    uint64_t v36 = (char *)v22 + v34;
    int v37 = v46((char *)v21 + v34, 1, v6);
    int v38 = v46(v36, 1, v6);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v35, v36, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v35, 0, 1, v6);
LABEL_26:
        uint64_t v40 = v49;
        *(void *)((char *)v21 + v23[13]) = *(void *)((char *)v22 + v23[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      if (!v38)
      {
        v19(v35, v36, v6);
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v6);
    }
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_26;
  }
  if (!v27)
  {
    *uint64_t v21 = *v22;
    v21[1] = v22[1];
    void v21[2] = v22[2];
    v21[3] = v22[3];
    v21[4] = v22[4];
    v21[5] = v22[5];
    v21[6] = v22[6];
    v21[7] = v22[7];
    v21[8] = v22[8];
    v21[9] = v22[9];
    *((unsigned char *)v21 + 80) = *((unsigned char *)v22 + 80);
    uint64_t v28 = v23[11];
    uint64_t v44 = (char *)v22 + v28;
    double v45 = (char *)v21 + v28;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v45, v44, v6);
    uint64_t v29 = v23[12];
    uint64_t v30 = (char *)v21 + v29;
    uint64_t v31 = (char *)v22 + v29;
    if (v46((char *)v22 + v29, 1, v6))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      v43(v30, v31, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v6);
    }
    *(void *)((char *)v21 + v23[13]) = *(void *)((char *)v22 + v23[13]);
    uint64_t v39 = *(void (**)(void *, void, uint64_t, int *))(v24 + 56);
    swift_bridgeObjectRetain();
    v39(v21, 0, 1, v23);
    goto LABEL_21;
  }
LABEL_14:
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  memcpy(v21, v22, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_21:
  uint64_t v40 = v49;
LABEL_22:
  *(void *)(v40 + *(int *)(v50 + 28)) = *(void *)(v51 + *(int *)(v50 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v40;
}

uint64_t initializeWithTake for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v32 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v31 = a1;
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  v8(v10, a2 + v9, v6);
  uint64_t v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (void *)(v10 + v13);
  unint64_t v15 = (const void *)(v11 + v13);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v30(v11 + v13, 1, v6))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  *(unsigned char *)(v10 + v12[6]) = *(unsigned char *)(v11 + v12[6]);
  *(unsigned char *)(v10 + v12[7]) = *(unsigned char *)(v11 + v12[7]);
  uint64_t v17 = a2;
  uint64_t v18 = *(int *)(v32 + 24);
  uint64_t v19 = (_OWORD *)(v31 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for EntityPromptClassification();
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    long long v24 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v24;
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
    *(_OWORD *)((char *)v19 + 56) = *(_OWORD *)((char *)v20 + 56);
    *((void *)v19 + 9) = *((void *)v20 + 9);
    *((unsigned char *)v19 + 80) = *((unsigned char *)v20 + 80);
    v8((uint64_t)v19 + v21[11], (uint64_t)v20 + v21[11], v6);
    uint64_t v25 = v21[12];
    __dst = (char *)v19 + v25;
    int v26 = (char *)v20 + v25;
    if (v30((uint64_t)v20 + v25, 1, v6))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(__dst, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v8((uint64_t)__dst, (uint64_t)v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    *(void *)((char *)v19 + v21[13]) = *(void *)((char *)v20 + v21[13]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    uint64_t v17 = a2;
  }
  *(void *)(v31 + *(int *)(v32 + 28)) = *(void *)(v17 + *(int *)(v32 + 28));
  return v31;
}

char *assignWithTake for ContactSuggestionProvidedClassification(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  __dst = a1;
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = a2 + v9;
  double v45 = (void (*)(char *, const void *, uint64_t))v8;
  v8(&a1[v9], a2 + v9, v6);
  uint64_t v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v10[v13];
  unint64_t v15 = (char *)(v11 + v13);
  uint64_t v48 = v7;
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v7) = v16(&v10[v13], 1, v6);
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v16;
  int v17 = v16(v15, 1, v6);
  if (v7)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v14, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v6);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v45(v14, v15, v6);
LABEL_7:
  v10[v12[6]] = *(unsigned char *)(v11 + v12[6]);
  v10[v12[7]] = *(unsigned char *)(v11 + v12[7]);
  uint64_t v19 = __dst;
  uint64_t v20 = a3[6];
  uint64_t v21 = (uint64_t)&__dst[v20];
  uint64_t v49 = a2;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = (int *)type metadata accessor for EntityPromptClassification();
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_21F2BCBB0(v21);
      goto LABEL_13;
    }
    uint64_t v34 = *(void *)(v22 + 8);
    *(void *)uint64_t v21 = *(void *)v22;
    *(void *)(v21 + 8) = v34;
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)(v22 + 24);
    *(void *)(v21 + 16) = *(void *)(v22 + 16);
    *(void *)(v21 + 24) = v35;
    swift_bridgeObjectRelease();
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)(v22 + 48);
    *(void *)(v21 + 40) = *(void *)(v22 + 40);
    *(void *)(v21 + 48) = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(v22 + 64);
    *(void *)(v21 + 56) = *(void *)(v22 + 56);
    *(void *)(v21 + 64) = v37;
    swift_bridgeObjectRelease();
    *(void *)(v21 + 72) = *(void *)(v22 + 72);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v21 + 80) = *(unsigned char *)(v22 + 80);
    v45((char *)(v21 + v23[11]), (const void *)(v22 + v23[11]), v6);
    uint64_t v38 = v23[12];
    uint64_t v39 = (char *)(v21 + v38);
    uint64_t v40 = (const void *)(v22 + v38);
    int v41 = v47(v21 + v38, 1, v6);
    int v42 = v47((uint64_t)v40, 1, v6);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(char *, const void *, uint64_t))(v48 + 32))(v39, v40, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v39, 0, 1, v6);
LABEL_23:
        uint64_t v31 = v49;
        uint64_t v19 = __dst;
        *(void *)(v21 + v23[13]) = *(void *)(v22 + v23[13]);
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      if (!v42)
      {
        v45(v39, v40, v6);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v6);
    }
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  if (v27)
  {
LABEL_13:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
    memcpy((void *)v21, (const void *)v22, *(void *)(*(void *)(v33 - 8) + 64));
    uint64_t v31 = v49;
    goto LABEL_24;
  }
  long long v28 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v28;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
  *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
  *(void *)(v21 + 72) = *(void *)(v22 + 72);
  *(unsigned char *)(v21 + 80) = *(unsigned char *)(v22 + 80);
  char v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32);
  v46(v21 + v23[11], v22 + v23[11], v6);
  uint64_t v29 = v23[12];
  __dsta = (void *)(v21 + v29);
  uint64_t v30 = (const void *)(v22 + v29);
  uint64_t v31 = v49;
  if (v47(v22 + v29, 1, v6))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(__dsta, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v46((uint64_t)__dsta, (uint64_t)v30, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dsta, 0, 1, v6);
  }
  *(void *)(v21 + v23[13]) = *(void *)(v22 + v23[13]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
LABEL_24:
  *(void *)&v19[a3[7]] = *(void *)(v31 + a3[7]);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F2EF7C8);
}

uint64_t sub_21F2EF7C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F2EF940);
}

uint64_t sub_21F2EF940(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_21F41F228();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AB78);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21F2EFAA0()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PlusContactSuggestionRuntimeSummary(319);
    if (v1 <= 0x3F)
    {
      sub_21F2EFBB0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_21F2EFBB0()
{
  if (!qword_26AD3AB80)
  {
    type metadata accessor for EntityPromptClassification();
    unint64_t v0 = sub_21F420798();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AD3AB80);
    }
  }
}

uint64_t static EntityNodeComparison.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24)) {
    return (*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t EntityNodeComparison.deinit()
{
  return v0;
}

uint64_t EntityNodeComparison.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F2EFC60()
{
  type metadata accessor for EntityNodeComparator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC84B8);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC84A0 = 91;
  *(void *)algn_267EC84A8 = 0xE100000000000000;
  return result;
}

uint64_t EntityNodeComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 32) = a1;
  *(double *)(result + 16) = a3;
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t EntityNodeComparator.init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  *(void *)(v3 + 32) = a1;
  *(double *)(v3 + 16) = a3;
  *(unsigned char *)(v3 + 24) = a2;
  return v3;
}

unint64_t sub_21F2EFD50@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F29DFC8(v3);
  unint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_21F29DFC8(v6);
    swift_bridgeObjectRelease();
    if (v7)
    {
      uint64_t v8 = *(void *)(v1 + 32);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_21F2D645C(v4);
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_21F2F00A8(v9, v8, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_21F2F0244);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_21F2D645C(v7);
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_21F2F00A8(v11, v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_21F2F0244);
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v12 + 16);
      unint64_t result = swift_release();
      if (v13 == 1)
      {
        unint64_t result = sub_21F2F2CEC();
        if ((v14 & 1) == 0)
        {
          unint64_t v15 = result;
          uint64_t v16 = *(void *)(v1 + 16);
          char v17 = *(unsigned char *)(v1 + 24);
          uint64_t v18 = type metadata accessor for EntityNodeComparison();
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v15;
          *(void *)(v19 + 24) = v16;
          *(unsigned char *)(v19 + 32) = v17;
          *(void *)(a1 + 24) = v18;
          unint64_t result = sub_21F2F2FC8();
          *(void *)(a1 + 32) = result;
          *(void *)a1 = v19;
          return result;
        }
      }
    }
    else
    {
      unint64_t result = swift_bridgeObjectRelease();
    }
  }
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t EntityNodeComparator.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EntityNodeComparator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_21F2EFF40@<X0>(uint64_t a1@<X8>)
{
  return sub_21F2EFD50(a1);
}

uint64_t sub_21F2EFF64(uint64_t a1, uint64_t a2)
{
  return sub_21F2F00A8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_21F2F0244);
}

uint64_t sub_21F2EFFD0(uint64_t a1, uint64_t a2)
{
  return sub_21F2F00A8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_21F2F0784);
}

uint64_t sub_21F2F003C(uint64_t a1, uint64_t a2)
{
  return sub_21F2F00A8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_21F2F12FC);
}

uint64_t sub_21F2F00A8(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x223C4B440](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_21F2F0244(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        char v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_21F420EF8();
        swift_bridgeObjectRetain();
        sub_21F420148();
        uint64_t v20 = sub_21F420F48();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        unint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      int v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_21F420DF8() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_21F420DF8() & 1) != 0)
          {
            unint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      unint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t v47 = sub_21F420F48();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_21F420DF8() & 1) != 0)
    {
LABEL_76:
      unint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_21F2F1CBC(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_21F420DF8() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_21F2F0784(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  int64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v56 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    uint64_t v63 = 0;
LABEL_6:
    while (2)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v6 << 6);
      }
      else
      {
        int64_t v13 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_113;
        }
        if (v13 >= v59) {
          goto LABEL_110;
        }
        unint64_t v14 = *(void *)(v56 + 8 * v13);
        ++v6;
        if (!v14)
        {
          int64_t v6 = v13 + 1;
          if (v13 + 1 >= v59) {
            goto LABEL_110;
          }
          unint64_t v14 = *(void *)(v56 + 8 * v6);
          if (!v14)
          {
            int64_t v6 = v13 + 2;
            if (v13 + 2 >= v59) {
              goto LABEL_110;
            }
            unint64_t v14 = *(void *)(v56 + 8 * v6);
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v59) {
                goto LABEL_110;
              }
              unint64_t v14 = *(void *)(v56 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v6 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_115;
                  }
                  if (v6 >= v59) {
                    goto LABEL_110;
                  }
                  unint64_t v14 = *(void *)(v56 + 8 * v6);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v6 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
      }
      int v16 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v12);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_21F420F48();
      uint64_t v18 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v19 = v17 & ~v18;
      if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        continue;
      }
      break;
    }
    int64_t v61 = v6;
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0xEB00000000636973;
      unint64_t v22 = 0x754D6E69616D6F64;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v19))
      {
        case 1:
          unint64_t v22 = 0x656D7269666E6F63;
          goto LABEL_27;
        case 2:
          unint64_t v22 = 0x6574616E696D6F6ELL;
LABEL_27:
          unint64_t v21 = 0xE900000000000064;
          break;
        case 3:
          unint64_t v22 = 0x6974636572726F63;
          unint64_t v21 = 0xEA00000000006E6FLL;
          break;
        case 4:
          unint64_t v21 = 0xE700000000000000;
          unint64_t v22 = 0x7972617262696CLL;
          break;
        case 5:
          unint64_t v21 = 0x800000021F432B90;
          unint64_t v22 = 0xD000000000000011;
          break;
        case 6:
          unint64_t v22 = 0xD000000000000013;
          unint64_t v23 = "nominationBlocked";
          goto LABEL_33;
        case 7:
          unint64_t v22 = 0xD000000000000012;
          unint64_t v23 = "previouslyNominated";
LABEL_33:
          unint64_t v21 = (unint64_t)v23 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v24 = 0x754D6E69616D6F64;
      unint64_t v25 = 0xEB00000000636973;
      switch(v16)
      {
        case 1:
          uint64_t v26 = 0x656D7269666E6F63;
          goto LABEL_37;
        case 2:
          uint64_t v26 = 0x6574616E696D6F6ELL;
LABEL_37:
          unint64_t v25 = 0xE900000000000064;
          if (v22 != v26) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 3:
          unint64_t v25 = 0xEA00000000006E6FLL;
          if (v22 != 0x6974636572726F63) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 4:
          unint64_t v25 = 0xE700000000000000;
          if (v22 != 0x7972617262696CLL) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 5:
          unint64_t v25 = 0x800000021F432B90;
          unint64_t v24 = 0xD000000000000011;
          goto LABEL_44;
        case 6:
          unint64_t v28 = 0xD000000000000013;
          uint64_t v29 = "nominationBlocked";
          goto LABEL_51;
        case 7:
          unint64_t v28 = 0xD000000000000012;
          uint64_t v29 = "previouslyNominated";
LABEL_51:
          unint64_t v25 = (unint64_t)v29 | 0x8000000000000000;
          if (v22 != v28) {
            goto LABEL_46;
          }
          goto LABEL_45;
        default:
LABEL_44:
          if (v22 != v24) {
            goto LABEL_46;
          }
LABEL_45:
          if (v21 == v25)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v5 = a3;
LABEL_54:
            *(unint64_t *)((char *)a1 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
            int64_t v6 = v61;
            if (!__OFADD__(v63, 1))
            {
              ++v63;
              goto LABEL_6;
            }
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            JUMPOUT(0x21F2F123CLL);
          }
LABEL_46:
          char v27 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = a3;
          if (v27) {
            goto LABEL_54;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          {
            int64_t v6 = v61;
            goto LABEL_6;
          }
          break;
      }
    }
  }
  uint64_t v55 = a3 + 56;
  uint64_t v30 = 1 << *(unsigned char *)(a3 + 32);
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & *(void *)(a3 + 56);
  int64_t v57 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v33 = a4 + 56;
  uint64_t v63 = 0;
LABEL_60:
  while (2)
  {
    if (v32)
    {
      unint64_t v34 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      unint64_t v35 = v34 | (v6 << 6);
LABEL_76:
      int v39 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v35);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_21F420F48();
      uint64_t v41 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v42 = v40 & ~v41;
      if (((*(void *)(v33 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
        continue;
      }
      unint64_t v60 = v35;
      int64_t v62 = v6;
      uint64_t v43 = ~v41;
      while (1)
      {
        unint64_t v44 = 0xEB00000000636973;
        unint64_t v45 = 0x754D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(a4 + 48) + v42))
        {
          case 1:
            unint64_t v45 = 0x656D7269666E6F63;
            goto LABEL_81;
          case 2:
            unint64_t v45 = 0x6574616E696D6F6ELL;
LABEL_81:
            unint64_t v44 = 0xE900000000000064;
            break;
          case 3:
            unint64_t v45 = 0x6974636572726F63;
            unint64_t v44 = 0xEA00000000006E6FLL;
            break;
          case 4:
            unint64_t v44 = 0xE700000000000000;
            unint64_t v45 = 0x7972617262696CLL;
            break;
          case 5:
            unint64_t v44 = 0x800000021F432B90;
            unint64_t v45 = 0xD000000000000011;
            break;
          case 6:
            unint64_t v45 = 0xD000000000000013;
            uint64_t v46 = "nominationBlocked";
            goto LABEL_87;
          case 7:
            unint64_t v45 = 0xD000000000000012;
            uint64_t v46 = "previouslyNominated";
LABEL_87:
            unint64_t v44 = (unint64_t)v46 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v47 = 0x754D6E69616D6F64;
        unint64_t v48 = 0xEB00000000636973;
        switch(v39)
        {
          case 1:
            uint64_t v49 = 0x656D7269666E6F63;
            goto LABEL_91;
          case 2:
            uint64_t v49 = 0x6574616E696D6F6ELL;
LABEL_91:
            unint64_t v48 = 0xE900000000000064;
            if (v45 != v49) {
              goto LABEL_100;
            }
            goto LABEL_99;
          case 3:
            unint64_t v48 = 0xEA00000000006E6FLL;
            if (v45 != 0x6974636572726F63) {
              goto LABEL_100;
            }
            goto LABEL_99;
          case 4:
            unint64_t v48 = 0xE700000000000000;
            if (v45 != 0x7972617262696CLL) {
              goto LABEL_100;
            }
            goto LABEL_99;
          case 5:
            unint64_t v48 = 0x800000021F432B90;
            unint64_t v47 = 0xD000000000000011;
            goto LABEL_98;
          case 6:
            unint64_t v51 = 0xD000000000000013;
            BOOL v52 = "nominationBlocked";
            goto LABEL_105;
          case 7:
            unint64_t v51 = 0xD000000000000012;
            BOOL v52 = "previouslyNominated";
LABEL_105:
            unint64_t v48 = (unint64_t)v52 | 0x8000000000000000;
            if (v45 != v51) {
              goto LABEL_100;
            }
            goto LABEL_99;
          default:
LABEL_98:
            if (v45 != v47) {
              goto LABEL_100;
            }
LABEL_99:
            if (v44 == v48)
            {
              swift_bridgeObjectRelease_n();
LABEL_108:
              *(unint64_t *)((char *)a1 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
              int64_t v6 = v62;
              uint64_t v5 = a3;
              if (__OFADD__(v63, 1)) {
                goto LABEL_112;
              }
              ++v63;
              goto LABEL_60;
            }
LABEL_100:
            char v50 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v50) {
              goto LABEL_108;
            }
            unint64_t v42 = (v42 + 1) & v43;
            if (((*(void *)(v33 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
            {
              uint64_t v5 = a3;
              int64_t v6 = v62;
              goto LABEL_60;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v36 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_114;
  }
  if (v36 >= v57) {
    goto LABEL_110;
  }
  unint64_t v37 = *(void *)(v55 + 8 * v36);
  ++v6;
  if (v37) {
    goto LABEL_75;
  }
  int64_t v6 = v36 + 1;
  if (v36 + 1 >= v57) {
    goto LABEL_110;
  }
  unint64_t v37 = *(void *)(v55 + 8 * v6);
  if (v37) {
    goto LABEL_75;
  }
  int64_t v6 = v36 + 2;
  if (v36 + 2 >= v57) {
    goto LABEL_110;
  }
  unint64_t v37 = *(void *)(v55 + 8 * v6);
  if (v37)
  {
LABEL_75:
    unint64_t v32 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v6 << 6);
    goto LABEL_76;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v57) {
    goto LABEL_110;
  }
  unint64_t v37 = *(void *)(v55 + 8 * v38);
  if (v37)
  {
    int64_t v6 = v38;
    goto LABEL_75;
  }
  while (1)
  {
    int64_t v6 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      goto LABEL_116;
    }
    if (v6 >= v57) {
      break;
    }
    unint64_t v37 = *(void *)(v55 + 8 * v6);
    ++v38;
    if (v37) {
      goto LABEL_75;
    }
  }
LABEL_110:
  swift_retain();
  return sub_21F2F1F54(a1, a2, v63, v5);
}

uint64_t sub_21F2F12FC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  int64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v48 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v51 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    uint64_t v55 = 0;
LABEL_6:
    while (2)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v6 << 6);
      }
      else
      {
        int64_t v13 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_93;
        }
        if (v13 >= v51) {
          goto LABEL_90;
        }
        unint64_t v14 = *(void *)(v48 + 8 * v13);
        ++v6;
        if (!v14)
        {
          int64_t v6 = v13 + 1;
          if (v13 + 1 >= v51) {
            goto LABEL_90;
          }
          unint64_t v14 = *(void *)(v48 + 8 * v6);
          if (!v14)
          {
            int64_t v6 = v13 + 2;
            if (v13 + 2 >= v51) {
              goto LABEL_90;
            }
            unint64_t v14 = *(void *)(v48 + 8 * v6);
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v51) {
                goto LABEL_90;
              }
              unint64_t v14 = *(void *)(v48 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v6 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_95;
                  }
                  if (v6 >= v51) {
                    goto LABEL_90;
                  }
                  unint64_t v14 = *(void *)(v48 + 8 * v6);
                  ++v15;
                  if (v14) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v6 = v15;
            }
          }
        }
LABEL_21:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
      }
      int v16 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v12);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_21F420F48();
      uint64_t v18 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v19 = v17 & ~v18;
      if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        continue;
      }
      break;
    }
    int64_t v53 = v6;
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0xEE00736567617373;
      uint64_t v22 = 0x654D6E69616D6F64;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v19))
      {
        case 1:
          uint64_t v22 = 0x68506E69616D6F64;
          unint64_t v21 = 0xEF6C6C6143656E6FLL;
          break;
        case 2:
          uint64_t v22 = 0x656D7269666E6F63;
          goto LABEL_28;
        case 3:
          uint64_t v22 = 0x6574616E696D6F6ELL;
LABEL_28:
          unint64_t v21 = 0xE900000000000064;
          break;
        case 4:
          uint64_t v22 = 0x6974636572726F63;
          unint64_t v21 = 0xEA00000000006E6FLL;
          break;
        default:
          break;
      }
      uint64_t v23 = 0x654D6E69616D6F64;
      unint64_t v24 = 0xEE00736567617373;
      switch(v16)
      {
        case 1:
          unint64_t v24 = 0xEF6C6C6143656E6FLL;
          if (v22 != 0x68506E69616D6F64) {
            goto LABEL_38;
          }
          goto LABEL_37;
        case 2:
          unint64_t v24 = 0xE900000000000064;
          if (v22 != 0x656D7269666E6F63) {
            goto LABEL_38;
          }
          goto LABEL_37;
        case 3:
          uint64_t v23 = 0x6574616E696D6F6ELL;
          unint64_t v24 = 0xE900000000000064;
          goto LABEL_36;
        case 4:
          unint64_t v24 = 0xEA00000000006E6FLL;
          if (v22 != 0x6974636572726F63) {
            goto LABEL_38;
          }
          goto LABEL_37;
        default:
LABEL_36:
          if (v22 != v23) {
            goto LABEL_38;
          }
LABEL_37:
          if (v21 == v24)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v5 = a3;
LABEL_44:
            *(unint64_t *)((char *)a1 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
            int64_t v6 = v53;
            if (!__OFADD__(v55, 1))
            {
              ++v55;
              goto LABEL_6;
            }
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
            JUMPOUT(0x21F2F1C44);
          }
LABEL_38:
          char v25 = sub_21F420DF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v5 = a3;
          if (v25) {
            goto LABEL_44;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          {
            int64_t v6 = v53;
            goto LABEL_6;
          }
          break;
      }
    }
  }
  uint64_t v47 = a3 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(a3 + 32);
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & *(void *)(a3 + 56);
  int64_t v49 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v29 = a4 + 56;
  uint64_t v55 = 0;
LABEL_50:
  while (2)
  {
    if (v28)
    {
      unint64_t v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v31 = v30 | (v6 << 6);
LABEL_66:
      int v35 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v31);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_21F420F48();
      uint64_t v37 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v38 = v36 & ~v37;
      if (((*(void *)(v29 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
        continue;
      }
      unint64_t v52 = v31;
      int64_t v54 = v6;
      uint64_t v39 = ~v37;
      while (1)
      {
        unint64_t v40 = 0xEE00736567617373;
        uint64_t v41 = 0x654D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(a4 + 48) + v38))
        {
          case 1:
            uint64_t v41 = 0x68506E69616D6F64;
            unint64_t v40 = 0xEF6C6C6143656E6FLL;
            break;
          case 2:
            uint64_t v41 = 0x656D7269666E6F63;
            goto LABEL_72;
          case 3:
            uint64_t v41 = 0x6574616E696D6F6ELL;
LABEL_72:
            unint64_t v40 = 0xE900000000000064;
            break;
          case 4:
            uint64_t v41 = 0x6974636572726F63;
            unint64_t v40 = 0xEA00000000006E6FLL;
            break;
          default:
            break;
        }
        uint64_t v42 = 0x654D6E69616D6F64;
        unint64_t v43 = 0xEE00736567617373;
        switch(v35)
        {
          case 1:
            unint64_t v43 = 0xEF6C6C6143656E6FLL;
            if (v41 != 0x68506E69616D6F64) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 2:
            unint64_t v43 = 0xE900000000000064;
            if (v41 != 0x656D7269666E6F63) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            uint64_t v42 = 0x6574616E696D6F6ELL;
            unint64_t v43 = 0xE900000000000064;
            goto LABEL_80;
          case 4:
            unint64_t v43 = 0xEA00000000006E6FLL;
            if (v41 != 0x6974636572726F63) {
              goto LABEL_82;
            }
            goto LABEL_81;
          default:
LABEL_80:
            if (v41 != v42) {
              goto LABEL_82;
            }
LABEL_81:
            if (v40 == v43)
            {
              swift_bridgeObjectRelease_n();
LABEL_88:
              *(unint64_t *)((char *)a1 + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v52;
              int64_t v6 = v54;
              uint64_t v5 = a3;
              if (__OFADD__(v55, 1)) {
                goto LABEL_92;
              }
              ++v55;
              goto LABEL_50;
            }
LABEL_82:
            char v44 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v44) {
              goto LABEL_88;
            }
            unint64_t v38 = (v38 + 1) & v39;
            if (((*(void *)(v29 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
            {
              uint64_t v5 = a3;
              int64_t v6 = v54;
              goto LABEL_50;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_94;
  }
  if (v32 >= v49) {
    goto LABEL_90;
  }
  unint64_t v33 = *(void *)(v47 + 8 * v32);
  ++v6;
  if (v33) {
    goto LABEL_65;
  }
  int64_t v6 = v32 + 1;
  if (v32 + 1 >= v49) {
    goto LABEL_90;
  }
  unint64_t v33 = *(void *)(v47 + 8 * v6);
  if (v33) {
    goto LABEL_65;
  }
  int64_t v6 = v32 + 2;
  if (v32 + 2 >= v49) {
    goto LABEL_90;
  }
  unint64_t v33 = *(void *)(v47 + 8 * v6);
  if (v33)
  {
LABEL_65:
    unint64_t v28 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v6 << 6);
    goto LABEL_66;
  }
  int64_t v34 = v32 + 3;
  if (v34 >= v49) {
    goto LABEL_90;
  }
  unint64_t v33 = *(void *)(v47 + 8 * v34);
  if (v33)
  {
    int64_t v6 = v34;
    goto LABEL_65;
  }
  while (1)
  {
    int64_t v6 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      goto LABEL_96;
    }
    if (v6 >= v49) {
      break;
    }
    unint64_t v33 = *(void *)(v47 + 8 * v6);
    ++v34;
    if (v33) {
      goto LABEL_65;
    }
  }
LABEL_90:
  swift_retain();
  return sub_21F2F22F4(a1, a2, v55, v5);
}

uint64_t sub_21F2F1CBC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB0);
  uint64_t result = sub_21F420938();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F2F1F54(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
    goto LABEL_36;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8070);
    uint64_t v8 = sub_21F420938();
    uint64_t v9 = v8;
    uint64_t v30 = a1;
    if (a2 < 1) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = *a1;
    }
    uint64_t v11 = 0;
    uint64_t v12 = v8 + 56;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_39;
        }
        if (v15 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          uint64_t v11 = v15 + 1;
          if (v15 + 1 >= a2) {
            goto LABEL_36;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            uint64_t v11 = v15 + 2;
            if (v15 + 2 >= a2) {
              goto LABEL_36;
            }
            unint64_t v16 = v30[v11];
            if (!v16)
            {
              uint64_t v17 = v15 + 3;
              if (v17 >= a2) {
                goto LABEL_36;
              }
              unint64_t v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  uint64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_40;
                  }
                  if (v11 >= a2) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v30[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_21F420F48();
      uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v21 = v19 & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          JUMPOUT(0x21F2F22D4);
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
LABEL_34:
      *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(unsigned char *)(*(void *)(v9 + 48) + v23) = v18;
      ++*(void *)(v9 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_38;
      }
      if (!v5)
      {
LABEL_36:
        swift_release();
        return v9;
      }
    }
  }
  return v4;
}

uint64_t sub_21F2F22F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
    goto LABEL_36;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8078);
    uint64_t v8 = sub_21F420938();
    uint64_t v9 = v8;
    uint64_t v30 = a1;
    if (a2 < 1) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = *a1;
    }
    uint64_t v11 = 0;
    uint64_t v12 = v8 + 56;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_39;
        }
        if (v15 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          uint64_t v11 = v15 + 1;
          if (v15 + 1 >= a2) {
            goto LABEL_36;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            uint64_t v11 = v15 + 2;
            if (v15 + 2 >= a2) {
              goto LABEL_36;
            }
            unint64_t v16 = v30[v11];
            if (!v16)
            {
              uint64_t v17 = v15 + 3;
              if (v17 >= a2) {
                goto LABEL_36;
              }
              unint64_t v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  uint64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_40;
                  }
                  if (v11 >= a2) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v30[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
      sub_21F420EF8();
      sub_21F420148();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_21F420F48();
      uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v21 = v19 & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          JUMPOUT(0x21F2F2618);
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
LABEL_34:
      *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(unsigned char *)(*(void *)(v9 + 48) + v23) = v18;
      ++*(void *)(v9 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_38;
      }
      if (!v5)
      {
LABEL_36:
        swift_release();
        return v9;
      }
    }
  }
  return v4;
}

uint64_t sub_21F2F262C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v7 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v7;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8098);
  uint64_t result = sub_21F420938();
  uint64_t v7 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = result + 56;
  uint64_t v35 = v4;
  while (1)
  {
    if (v8)
    {
      uint64_t v36 = (v8 - 1) & v8;
      uint64_t v37 = v9;
      unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    uint64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_39;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v13 = a1[v12];
    uint64_t v14 = v9 + 1;
    if (!v13)
    {
      uint64_t v14 = v9 + 2;
      if (v9 + 2 >= a2) {
        goto LABEL_36;
      }
      unint64_t v13 = a1[v14];
      if (!v13)
      {
        uint64_t v14 = v9 + 3;
        if (v9 + 3 >= a2) {
          goto LABEL_36;
        }
        unint64_t v13 = a1[v14];
        if (!v13) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v36 = (v13 - 1) & v13;
    uint64_t v37 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_24:
    uint64_t v16 = *(void *)(v4 + 48) + 56 * v11;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v22 = *(void *)(v16 + 32);
    uint64_t v21 = *(void *)(v16 + 40);
    char v38 = *(unsigned char *)(v16 + 49);
    char v39 = *(unsigned char *)(v16 + 48);
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    sub_21F2AA1D0(v19, v20);
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v10 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v10 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t v31 = *(void *)(v7 + 48) + 56 * v26;
    *(void *)uint64_t v31 = v17;
    *(void *)(v31 + 8) = v18;
    *(void *)(v31 + 16) = v19;
    *(void *)(v31 + 24) = v20;
    *(void *)(v31 + 32) = v22;
    *(void *)(v31 + 40) = v21;
    *(unsigned char *)(v31 + 48) = v39;
    *(unsigned char *)(v31 + 49) = v38;
    ++*(void *)(v7 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v4 = v35;
    unint64_t v8 = v36;
    uint64_t v9 = v37;
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v15 = v9 + 4;
  if (v9 + 4 >= a2) {
    goto LABEL_36;
  }
  unint64_t v13 = a1[v15];
  if (v13)
  {
    uint64_t v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= a2) {
      goto LABEL_36;
    }
    unint64_t v13 = a1[v14];
    ++v15;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F2F292C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8088);
  uint64_t result = sub_21F420938();
  uint64_t v9 = result;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v37 = v11;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v36) {
      goto LABEL_36;
    }
    unint64_t v16 = v35[v15];
    uint64_t v17 = v11 + 1;
    if (!v16)
    {
      uint64_t v17 = v11 + 2;
      if (v11 + 2 >= v36) {
        goto LABEL_36;
      }
      unint64_t v16 = v35[v17];
      if (!v16)
      {
        uint64_t v17 = v11 + 3;
        if (v11 + 3 >= v36) {
          goto LABEL_36;
        }
        unint64_t v16 = v35[v17];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    uint64_t v37 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = v4;
    uint64_t v20 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v14);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    uint64_t v24 = v20[3];
    sub_21F420EF8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    unint64_t v33 = (void *)(*(void *)(v9 + 48) + 32 * v28);
    void *v33 = v21;
    v33[1] = v22;
    v33[2] = v23;
    v33[3] = v24;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v4 = v19;
    uint64_t v11 = v37;
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v11 + 4;
  if (v11 + 4 >= v36) {
    goto LABEL_36;
  }
  unint64_t v16 = v35[v18];
  if (v16)
  {
    uint64_t v17 = v11 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_36;
    }
    unint64_t v16 = v35[v17];
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_21F2F2BD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_21F29E920(v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_21F29F8BC(a1, (uint64_t)v4);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  sub_21F29F8BC(a1, (uint64_t)v4);
  if (!v7)
  {
LABEL_6:
    uint64_t v9 = 0;
    goto LABEL_7;
  }
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F29E180(v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    uint64_t v9 = v10 != 0;
  }
LABEL_7:
  sub_21F29F9EC((uint64_t)v4);
  return v9;
}

uint64_t sub_21F2F2CEC()
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E920(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (*(void *)(v1 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v2 = swift_bridgeObjectRetain();
      uint64_t v3 = (void *)sub_21F29E920(v2);
      swift_bridgeObjectRelease();
      if (v3)
      {
        if (v3[2])
        {
          uint64_t v4 = v3[4];
          uint64_t v5 = (void *)v3[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v6._countAndFlagsBits = v4;
          v6._object = v5;
          Swift::Double_optional v17 = String.scoreRatcliffObershelp(between:)(v6);
          uint64_t v7 = *(void *)&v17.is_nil;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_21F41FF28();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AD3C910);
  uint64_t v9 = sub_21F41FF08();
  os_log_type_t v10 = sub_21F420678();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    if (qword_267EC71D0 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_267EC84A0;
    unint64_t v14 = *(void *)algn_267EC84A8;
    swift_bridgeObjectRetain();
    sub_21F2A02C4(v13, v14, &v16);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v9, v10, "%s No match for USOPerson found in turns", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v12, -1, -1);
    MEMORY[0x223C4B440](v11, -1, -1);

    return 0;
  }
  else
  {

    return 0;
  }
}

uint64_t type metadata accessor for EntityNodeComparison()
{
  return self;
}

unint64_t sub_21F2F2FC8()
{
  unint64_t result = qword_267EC84B0;
  if (!qword_267EC84B0)
  {
    type metadata accessor for EntityNodeComparison();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC84B0);
  }
  return result;
}

uint64_t type metadata accessor for EntityNodeComparator()
{
  return self;
}

uint64_t method lookup function for EntityNodeComparator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for EntityNodeComparator);
}

uint64_t dispatch thunk of EntityNodeComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of EntityNodeComparator.turnMeetsFeatureFilterCriteria(turn:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of EntityNodeComparator.compareTurns(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t SELFPlusSuggestionIdMapper.__allocating_init(picsIds:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t v3 = sub_21F2C109C(MEMORY[0x263F8EE78]);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t SELFPlusSuggestionIdMapper.init(picsIds:)(uint64_t a1)
{
  unint64_t v3 = sub_21F2C109C(MEMORY[0x263F8EE78]);
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

uint64_t SELFPlusSuggestionIdMapper.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SELFPlusSuggestionIdMapper.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SELFPlusSuggestionIdMapper()
{
  return self;
}

uint64_t method lookup function for SELFPlusSuggestionIdMapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SELFPlusSuggestionIdMapper);
}

uint64_t dispatch thunk of SELFPlusSuggestionIdMapper.__allocating_init(picsIds:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_21F2F31E8(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v7) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v2;
    if (!v17)
    {
      int64_t v2 = v16 + 1;
      if (v16 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v3 + 8 * v2);
      if (!v17)
      {
        int64_t v2 = v16 + 2;
        if (v16 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v3 + 8 * v2);
        if (!v17)
        {
          int64_t v2 = v16 + 3;
          if (v16 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v3 + 8 * v2);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v9 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = *(void *)(v1 + 48) + 56 * v9;
    long long v12 = *(_OWORD *)(v10 + 16);
    long long v11 = *(_OWORD *)(v10 + 32);
    long long v13 = *(_OWORD *)v10;
    __int16 v23 = *(_WORD *)(v10 + 48);
    v22[1] = v12;
    void v22[2] = v11;
    v22[0] = v13;
    sub_21F2D88D0((uint64_t)v22);
    sub_21F2CDED4((uint64_t)v19, (uint64_t)v22);
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    swift_bridgeObjectRelease();
    unint64_t result = sub_21F2AA27C(v14, v15);
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v7) {
    return swift_release();
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    int64_t v2 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v2 >= v7) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v2);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F2F3394(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    unint64_t result = sub_21F2CDACC(&v13, *(unsigned __int8 *)(*(void *)(v1 + 48) + v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_21F2F34F0()
{
  type metadata accessor for PlusContactSuggestionGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC84F0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC84C0 = 91;
  *(void *)algn_267EC84C8 = 0xE100000000000000;
  return result;
}

double PlusContactSuggestionGenerator.__allocating_init()()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  type metadata accessor for PlusContactSuggestionGenerator();
  uint64_t v1 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v1 + 24) = xmmword_21F425170;
  *(void *)(v1 + 16) = v0;
  return result;
}

double PlusContactSuggestionGenerator.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v2 + 24) = xmmword_21F425170;
  *(void *)(v2 + 16) = a1;
  return result;
}

uint64_t type metadata accessor for PlusContactSuggestionGenerator()
{
  return self;
}

uint64_t PlusContactSuggestionGenerator.init(store:)(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = xmmword_21F425170;
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_21F2F3648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a1 + 32;
    swift_bridgeObjectRetain();
    unint64_t v6 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_21F29F920(v5, (uint64_t)v18);
      sub_21F29F920((uint64_t)v18, (uint64_t)v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A9E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7958);
      if ((swift_dynamicCast() & 1) == 0)
      {
        long long v15 = 0u;
        long long v16 = 0u;
        long long v14 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      if (*((void *)&v15 + 1))
      {
        sub_21F2E0850(&v14, v17);
        sub_21F2E0850(v17, &v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v6 = sub_21F2A8378(0, v6[2] + 1, 1, v6);
        }
        unint64_t v8 = v6[2];
        unint64_t v7 = v6[3];
        if (v8 >= v7 >> 1) {
          unint64_t v6 = sub_21F2A8378((void *)(v7 > 1), v8 + 1, 1, v6);
        }
        v6[2] = v8 + 1;
        sub_21F2E0850(&v14, &v6[6 * v8 + 4]);
      }
      else
      {
        sub_21F29FA48((uint64_t)&v14, &qword_267EC84D0);
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v2 = v13;
  }
  else
  {
    unint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F2F5840((uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_21F2F626C(v9);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_21F2F5EAC(v10, v2, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_21F2F387C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v129 = a3;
  uint64_t v7 = type metadata accessor for PlusContactSuggestion();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v133 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_21F41F198();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v126 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_21F41F228();
  uint64_t v131 = *(void *)(v132 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v132);
  uint64_t v130 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v135 = (char *)&v125 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v136 = (char *)&v125 - v15;
  uint64_t v134 = a1;
  Swift::String_optional v16 = UsoEntity_common_Person.convertUSOPersonToString()();
  if (!v16.value._object)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_21F41FF28();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AD3C910);
    unint64_t v28 = sub_21F41FF08();
    os_log_type_t v29 = sub_21F420678();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_38;
    }
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(void *)&long long v142 = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    if (qword_267EC71D8 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_267EC84C0;
    unint64_t v33 = *(void *)algn_267EC84C8;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v32, v33, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    os_log_type_t v34 = v29;
    uint64_t v35 = "%s Failed to convert contact query to string. Unable to generate PICS for non string convertible cases.";
    goto LABEL_37;
  }
  uint64_t v137 = a4;
  long long v138 = (int *)v7;
  uint64_t v139 = v8;
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_21F41FF28();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26AD3C910);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_21F41FF08();
  os_log_type_t v20 = sub_21F420668();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v140 = a2;
  if (v21)
  {
    uint64_t v125 = v18;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(void *)&long long v142 = v23;
    *(_DWORD *)uint64_t v22 = 136315650;
    if (qword_267EC71D8 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_267EC84C0;
    unint64_t v24 = *(void *)algn_267EC84C8;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v25, v24, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    a2 = v140;
    uint64_t v26 = *(void *)(v140 + 16);
    swift_bridgeObjectRelease();
    *(void *)&v141[0] = v26;
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v16.value._countAndFlagsBits, (unint64_t)v16.value._object, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F29A000, v19, v20, "%s Reviewing %ld Ground truth events related to query %s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v23, -1, -1);
    MEMORY[0x223C4B440](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v36 = sub_21F2F59AC(a2);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = sub_21F41FF08();
  os_log_type_t v38 = sub_21F420668();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(void *)&long long v142 = v40;
    *(_DWORD *)uint64_t v39 = 136315650;
    if (qword_267EC71D8 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_267EC84C0;
    unint64_t v42 = *(void *)algn_267EC84C8;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v41, v42, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2048;
    *(void *)&v141[0] = *(void *)(v36 + 16);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC84E8);
    uint64_t v43 = sub_21F41FF98();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v141[0] = sub_21F2A02C4(v43, v45, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v37, v38, "%s Found %ld potential contact mappings based on supplied ground truth. Ground Truth Summary=%s", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v40, -1, -1);
    MEMORY[0x223C4B440](v39, -1, -1);

    a2 = v140;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v46 = sub_21F2F5484(v36);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v47 = sub_21F41FF08();
  os_log_type_t v48 = sub_21F420668();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v125 = 0;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(void *)&long long v142 = v51;
    *(_DWORD *)uint64_t v50 = 136315394;
    if (qword_267EC71D8 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_267EC84C0;
    unint64_t v53 = *(void *)algn_267EC84C8;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v52, v53, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2048;
    *(void *)&v141[0] = v46[2];
    sub_21F4207D8();
    swift_release();
    _os_log_impl(&dword_21F29A000, v47, v48, "%s Found %ld contact mapping with positive signals", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v51, -1, -1);
    MEMORY[0x223C4B440](v50, -1, -1);

    a2 = v140;
  }
  else
  {

    swift_release();
  }
  int64_t v54 = sub_21F4095D4((uint64_t)v46);
  if (!v55)
  {
    swift_release();
LABEL_33:
    unint64_t v28 = sub_21F41FF08();
    os_log_type_t v63 = sub_21F420668();
    BOOL v64 = os_log_type_enabled(v28, v63);
    uint64_t v7 = (uint64_t)v138;
    uint64_t v8 = v139;
    a4 = v137;
    if (!v64)
    {
LABEL_38:

      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a4, 1, 1, v7);
    }
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(void *)&long long v142 = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    if (qword_267EC71D8 != -1) {
      swift_once();
    }
    uint64_t v65 = qword_267EC84C0;
    unint64_t v66 = *(void *)algn_267EC84C8;
    swift_bridgeObjectRetain();
    *(void *)&v141[0] = sub_21F2A02C4(v65, v66, (uint64_t *)&v142);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    os_log_type_t v34 = v63;
    uint64_t v35 = "%s Skipping PICS generation as not all ground truth maps to the same contact";
LABEL_37:
    _os_log_impl(&dword_21F29A000, v28, v34, v35, v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v31, -1, -1);
    MEMORY[0x223C4B440](v30, -1, -1);
    goto LABEL_38;
  }
  uint64_t v57 = (uint64_t)v54;
  uint64_t v58 = v55;
  uint64_t v59 = v56;
  unint64_t v60 = v46[2];
  swift_release();
  if (v60 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_bridgeObjectRetain_n();
  int64_t v61 = sub_21F2F5024();
  if (v62)
  {
    if ((void *)v57 == v61 && v58 == v62)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_43;
    }
    char v68 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v68)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v28 = sub_21F41FF08();
      os_log_type_t v69 = sub_21F420668();
      if (os_log_type_enabled(v28, v69))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(void *)&long long v142 = v31;
        *(_DWORD *)unint64_t v30 = 136315138;
        uint64_t v7 = (uint64_t)v138;
        uint64_t v8 = v139;
        a4 = v137;
        if (qword_267EC71D8 != -1) {
          swift_once();
        }
        uint64_t v70 = qword_267EC84C0;
        unint64_t v71 = *(void *)algn_267EC84C8;
        swift_bridgeObjectRetain();
        *(void *)&v141[0] = sub_21F2A02C4(v70, v71, (uint64_t *)&v142);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        os_log_type_t v34 = v69;
        uint64_t v35 = "%s Skipping PICS generation as resolved contact is meCard";
        goto LABEL_37;
      }
LABEL_62:

      uint64_t v7 = (uint64_t)v138;
      uint64_t v8 = v139;
      a4 = v137;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a4, 1, 1, v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = *(void *)(v59 + 16);
  if (!v72)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v28 = sub_21F41FF08();
    os_log_type_t v75 = sub_21F420668();
    if (os_log_type_enabled(v28, v75))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&long long v142 = v31;
      *(_DWORD *)unint64_t v30 = 136315138;
      uint64_t v7 = (uint64_t)v138;
      uint64_t v8 = v139;
      a4 = v137;
      if (qword_267EC71D8 != -1) {
        swift_once();
      }
      uint64_t v76 = qword_267EC84C0;
      unint64_t v77 = *(void *)algn_267EC84C8;
      swift_bridgeObjectRetain();
      *(void *)&v141[0] = sub_21F2A02C4(v76, v77, (uint64_t *)&v142);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      os_log_type_t v34 = v75;
      uint64_t v35 = "%s Skipping PICS generation as mapping has no strong positive signals.";
      goto LABEL_37;
    }
    goto LABEL_62;
  }
  for (uint64_t i = 0; i != v72; ++i)
  {
    if (*(unsigned char *)(v59 + i + 32) == 6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      unint64_t v28 = sub_21F41FF08();
      os_log_type_t v78 = sub_21F420668();
      if (os_log_type_enabled(v28, v78))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(void *)&long long v142 = v31;
        *(_DWORD *)unint64_t v30 = 136315138;
        uint64_t v7 = (uint64_t)v138;
        uint64_t v8 = v139;
        a4 = v137;
        if (qword_267EC71D8 != -1) {
          swift_once();
        }
        uint64_t v79 = qword_267EC84C0;
        unint64_t v80 = *(void *)algn_267EC84C8;
        swift_bridgeObjectRetain();
        *(void *)&v141[0] = sub_21F2A02C4(v79, v80, (uint64_t *)&v142);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        os_log_type_t v34 = v78;
        uint64_t v35 = "%s Skipping PICS generation as negative signals exist for the only provided contact mapping.";
        goto LABEL_37;
      }
      goto LABEL_62;
    }
  }
  uint64_t v74 = 0;
  while (*(unsigned char *)(v59 + v74 + 32) != 3)
  {
    if (v72 == ++v74) {
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(a2 + 16);
  uint64_t v82 = MEMORY[0x263F8EE78];
  if (v81)
  {
    uint64_t v83 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v84 = (void *)MEMORY[0x263F8EE78];
    uint64_t v85 = v81;
    while (1)
    {
      uint64_t v86 = v83[3];
      uint64_t v87 = v83[4];
      __swift_project_boxed_opaque_existential_1(v83, v86);
      uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 32))(v86, v87);
      if (*(void *)(v88 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v89 = sub_21F2F7E18(v57, v58);
        if (v90)
        {
          uint64_t v91 = *(void *)(*(void *)(v88 + 56) + 8 * v89);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v84 = sub_21F2A85F0(0, v84[2] + 1, 1, v84);
          }
          unint64_t v93 = v84[2];
          unint64_t v92 = v84[3];
          if (v93 >= v92 >> 1) {
            uint64_t v84 = sub_21F2A85F0((void *)(v92 > 1), v93 + 1, 1, v84);
          }
          v84[2] = v93 + 1;
          v84[v93 + 4] = v91;
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_67:
      v83 += 6;
      if (!--v85)
      {
        swift_bridgeObjectRelease();
        a2 = v140;
        swift_bridgeObjectRelease();
        uint64_t v82 = MEMORY[0x263F8EE78];
        goto LABEL_77;
      }
    }
  }
  uint64_t v84 = (void *)MEMORY[0x263F8EE78];
LABEL_77:
  *(void *)&long long v142 = MEMORY[0x263F8EE88];
  uint64_t v94 = v84[2];
  if (v94)
  {
    uint64_t v95 = v84 + 4;
    do
    {
      ++v95;
      uint64_t v96 = swift_bridgeObjectRetain();
      sub_21F2F3394(v96);
      --v94;
    }
    while (v94);
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = sub_21F3F52C4((uint64_t)&unk_26D0CBA20, v142);
  sub_21F41F218();
  uint64_t v145 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v81)
  {
    uint64_t v140 = v97;
    uint64_t v98 = a2 + 32;
    uint64_t v99 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_21F2E0868(v98, (uint64_t)&v142);
      uint64_t v100 = v143;
      uint64_t v101 = v144;
      __swift_project_boxed_opaque_existential_1(&v142, v143);
      if (*(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v101 + 16))(v100, v101) + 16))
      {
        swift_bridgeObjectRetain();
        sub_21F2F7E18(v57, v58);
        char v103 = v102;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v103)
        {
          sub_21F2E0850(&v142, v141);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_21F2C35F4(0, *(void *)(v99 + 16) + 1, 1);
          }
          uint64_t v99 = v145;
          unint64_t v105 = *(void *)(v145 + 16);
          unint64_t v104 = *(void *)(v145 + 24);
          if (v105 >= v104 >> 1)
          {
            sub_21F2C35F4(v104 > 1, v105 + 1, 1);
            uint64_t v99 = v145;
          }
          *(void *)(v99 + 16) = v105 + 1;
          sub_21F2E0850(v141, (_OWORD *)(v99 + 48 * v105 + 32));
          goto LABEL_84;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v142);
LABEL_84:
      v98 += 48;
      if (!--v81)
      {
        uint64_t v82 = v145;
        uint64_t v97 = v140;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v106 = sub_21F3EB2D8(v82);
  swift_release();
  uint64_t v107 = v129;
  swift_bridgeObjectRetain();
  uint64_t v140 = sub_21F3F3BE8(v97, v107);
  long long v108 = v126;
  sub_21F41F188();
  sub_21F41F168();
  uint64_t v110 = v109;
  (*(void (**)(char *, uint64_t))(v127 + 8))(v108, v128);
  swift_bridgeObjectRetain();
  uint64_t v111 = v134;
  swift_retain();
  uint64_t v112 = v57;
  unint64_t v113 = sub_21F39486C(v106, v57, v58, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v114 = v131;
  uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  unint64_t v116 = v135;
  uint64_t v117 = v132;
  v115(v135, v136, v132);
  long long v118 = v130;
  v115(v130, v116, v117);
  uint64_t v119 = (uint64_t)v133;
  v115(v133, v118, v117);
  uint64_t v120 = v138;
  *(void *)(v119 + v138[5]) = v111;
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v121 = (uint64_t *)(v119 + v120[6]);
  uint64_t *v121 = v112;
  v121[1] = v58;
  v121[2] = 0;
  v121[3] = 0;
  *(void *)(v119 + v120[7]) = sub_21F390DE8(50, v113);
  *(void *)(v119 + v120[8]) = v110;
  *(void *)(v119 + v120[9]) = v140;
  *(void *)(v119 + v120[10]) = 0;
  uint64_t v122 = sub_21F391178(50, MEMORY[0x263F8EE78]);
  swift_release();
  uint64_t v123 = *(void (**)(char *, uint64_t))(v114 + 8);
  v123(v118, v117);
  *(void *)(v119 + v120[11]) = v122;
  uint64_t v124 = v137;
  sub_21F2F6620(v119, v137);
  v123(v135, v117);
  v123(v136, v117);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v139 + 56))(v124, 0, 1, v120);
}

Swift::String_optional __swiftcall UsoEntity_common_Person.convertUSOPersonToString()()
{
  uint64_t v0 = sub_21F4200F8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_21F41EDA8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_21F41EDE8();
  swift_allocObject();
  sub_21F41EDD8();
  sub_21F41ED98();
  sub_21F41EDB8();
  sub_21F41F338();
  sub_21F2F6578(&qword_267EC84D8);
  uint64_t v2 = sub_21F41EDC8();
  unint64_t v4 = v3;
  sub_21F4200E8();
  uint64_t v5 = sub_21F4200D8();
  uint64_t v7 = v6;
  sub_21F2F64D8(v2, v4);
  swift_release();
  uint64_t v8 = v5;
  uint64_t v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

void *sub_21F2F5024()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  unint64_t v4 = (void *)v2;
  if (v3 == 1)
  {
    id v5 = sub_21F3218AC();
    unint64_t v4 = v5;
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_identifier);

      unint64_t v4 = (void *)sub_21F4200B8();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v9 = *(void *)(v1 + 24);
    uint64_t v10 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = v4;
    *(void *)(v1 + 32) = v8;
    swift_bridgeObjectRetain();
    sub_21F2F6530(v9, v10);
  }
  sub_21F2F660C(v2, v3);
  return v4;
}

uint64_t PlusContactSuggestionGenerator.deinit()
{
  sub_21F2F6530(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return v0;
}

uint64_t PlusContactSuggestionGenerator.__deallocating_deinit()
{
  sub_21F2F6530(*(void *)(v0 + 24), *(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t UsoEntity_common_Person.description.getter()
{
  Swift::String_optional v1 = UsoEntity_common_Person.convertUSOPersonToString()();
  uint64_t result = v1.value._countAndFlagsBits;
  if (!v1.value._object) {
    return 0x6E776F6E6B6E553CLL;
  }
  return result;
}

uint64_t UsoEntity_common_Person.hash(into:)()
{
  if (!(unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object) {
    return sub_21F420F18();
  }
  sub_21F420F18();
  sub_21F420148();
  return swift_bridgeObjectRelease();
}

uint64_t UsoEntity_common_Person.hashValue.getter()
{
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  return sub_21F420F48();
}

uint64_t sub_21F2F529C()
{
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  return sub_21F420F48();
}

uint64_t sub_21F2F5324()
{
  if (!(unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object) {
    return sub_21F420F18();
  }
  sub_21F420F18();
  sub_21F420148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F2F53AC()
{
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  return sub_21F420F48();
}

uint64_t sub_21F2F5430()
{
  Swift::String_optional v1 = UsoEntity_common_Person.convertUSOPersonToString()();
  uint64_t result = v1.value._countAndFlagsBits;
  if (!v1.value._object) {
    return 0x6E776F6E6B6E553CLL;
  }
  return result;
}

BOOL sub_21F2F5478()
{
  return _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0();
}

unint64_t *sub_21F2F5484(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    id v6 = sub_21F2F55DC((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_21F2F55DC((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x223C4B440](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_21F2F55DC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v14 >= v10) {
      return (unint64_t *)sub_21F2B9000(result, a2, v4, a3);
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        return (unint64_t *)sub_21F2B9000(result, a2, v4, a3);
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          return (unint64_t *)sub_21F2B9000(result, a2, v4, a3);
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    uint64_t v17 = *(void *)(*(void *)(a3 + 56) + 8 * v13);
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = (unsigned __int8 *)(v17 + 32);
      while (1)
      {
        int v20 = *v19++;
        if ((v20 - 3) < 2) {
          break;
        }
        if (!--v18) {
          goto LABEL_5;
        }
      }
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_28;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10) {
    return (unint64_t *)sub_21F2B9000(result, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_21F2B9000(result, a2, v4, a3);
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0()
{
  sub_21F420EF8();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  uint64_t v0 = sub_21F420F48();
  sub_21F420EF8();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  return v0 == sub_21F420F48();
}

uint64_t sub_21F2F5840(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = a1 + 32;
    uint64_t v7 = MEMORY[0x263F8EE78];
    do
    {
      sub_21F2E0868(v6, (uint64_t)&v15);
      if (*(void *)(a2 + 16)
        && (uint64_t v8 = v16,
            uint64_t v9 = v17,
            __swift_project_boxed_opaque_existential_1(&v15, v16),
            uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9),
            uint64_t v11 = *(void *)(sub_21F2F003C(a2, v10) + 16),
            swift_release(),
            !v11))
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v15);
      }
      else
      {
        sub_21F2E0850(&v15, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_21F2C35F4(0, *(void *)(v7 + 16) + 1, 1);
        }
        uint64_t v7 = v18;
        unint64_t v13 = *(void *)(v18 + 16);
        unint64_t v12 = *(void *)(v18 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_21F2C35F4(v12 > 1, v13 + 1, 1);
          uint64_t v7 = v18;
        }
        *(void *)(v7 + 16) = v13 + 1;
        sub_21F2E0850(v14, (_OWORD *)(v7 + 48 * v13 + 32));
      }
      v6 += 48;
      --v4;
    }
    while (v4);
    return v18;
  }
  return result;
}

uint64_t sub_21F2F59AC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    int64_t v54 = (void *)MEMORY[0x263F8EE78];
    sub_21F2C3614(0, v2, 0);
    uint64_t v3 = a1 + 32;
    uint64_t v4 = v54;
    do
    {
      sub_21F2E0868(v3, (uint64_t)v51);
      uint64_t v5 = v52;
      uint64_t v6 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F2C3614(0, v4[2] + 1, 1);
        uint64_t v4 = v54;
      }
      unint64_t v9 = v4[2];
      unint64_t v8 = v4[3];
      if (v9 >= v8 >> 1)
      {
        sub_21F2C3614(v8 > 1, v9 + 1, 1);
        uint64_t v4 = v54;
      }
      v4[2] = v9 + 1;
      v4[v9 + 4] = v7;
      v3 += 48;
      --v2;
    }
    while (v2);
    unint64_t v45 = v9 + 1;
LABEL_11:
    uint64_t v46 = v4 + 4;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = (void *)MEMORY[0x263F8EE80];
LABEL_13:
    uint64_t v12 = v46[v10];
    uint64_t v47 = v10 + 1;
    uint64_t v48 = v12 + 64;
    uint64_t v13 = 1 << *(unsigned char *)(v12 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *(void *)(v12 + 64);
    int64_t v49 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v50 = v12;
    swift_bridgeObjectRetain_n();
    int64_t v16 = 0;
    if (v15)
    {
LABEL_17:
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_36;
    }
    while (1)
    {
      int64_t v19 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_56;
      }
      if (v19 >= v49) {
        goto LABEL_12;
      }
      unint64_t v20 = *(void *)(v48 + 8 * v19);
      ++v16;
      if (!v20)
      {
        int64_t v16 = v19 + 1;
        if (v19 + 1 >= v49) {
          goto LABEL_12;
        }
        unint64_t v20 = *(void *)(v48 + 8 * v16);
        if (!v20)
        {
          int64_t v16 = v19 + 2;
          if (v19 + 2 >= v49) {
            goto LABEL_12;
          }
          unint64_t v20 = *(void *)(v48 + 8 * v16);
          if (!v20)
          {
            int64_t v16 = v19 + 3;
            if (v19 + 3 >= v49) {
              goto LABEL_12;
            }
            unint64_t v20 = *(void *)(v48 + 8 * v16);
            if (!v20)
            {
              int64_t v16 = v19 + 4;
              if (v19 + 4 >= v49) {
                goto LABEL_12;
              }
              unint64_t v20 = *(void *)(v48 + 8 * v16);
              if (!v20)
              {
                int64_t v21 = v19 + 5;
                if (v21 >= v49)
                {
LABEL_12:
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v10 = v47;
                  if (v47 != v45) {
                    goto LABEL_13;
                  }
                  swift_bridgeObjectRelease();
                  goto LABEL_54;
                }
                unint64_t v20 = *(void *)(v48 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    int64_t v16 = v21 + 1;
                    if (__OFADD__(v21, 1)) {
                      goto LABEL_57;
                    }
                    if (v16 >= v49) {
                      goto LABEL_12;
                    }
                    unint64_t v20 = *(void *)(v48 + 8 * v16);
                    ++v21;
                    if (v20) {
                      goto LABEL_35;
                    }
                  }
                }
                int64_t v16 = v21;
              }
            }
          }
        }
      }
LABEL_35:
      unint64_t v15 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_36:
      uint64_t v22 = (uint64_t *)(*(void *)(v50 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      char v25 = *(unsigned char *)(*(void *)(v50 + 56) + v18);
      swift_bridgeObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int64_t v54 = v11;
      unint64_t v28 = sub_21F2F7E18(v24, v23);
      uint64_t v29 = v11[2];
      BOOL v30 = (v27 & 1) == 0;
      uint64_t v31 = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
        goto LABEL_53;
      }
      char v32 = v27;
      if (v11[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21F2FEF0C();
        }
      }
      else
      {
        sub_21F2FA770(v31, isUniquelyReferenced_nonNull_native);
        unint64_t v33 = sub_21F2F7E18(v24, v23);
        if ((v32 & 1) != (v34 & 1)) {
          goto LABEL_58;
        }
        unint64_t v28 = v33;
      }
      uint64_t v11 = v54;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        v11[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v35 = (uint64_t *)(v11[6] + 16 * v28);
        *uint64_t v35 = v24;
        v35[1] = v23;
        *(void *)(v11[7] + 8 * v28) = MEMORY[0x263F8EE78];
        uint64_t v36 = v11[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37)
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          uint64_t result = sub_21F420E68();
          __break(1u);
          return result;
        }
        void v11[2] = v38;
        swift_bridgeObjectRetain();
      }
      uint64_t v39 = v11[7];
      uint64_t v40 = *(char **)(v39 + 8 * v28);
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v39 + 8 * v28) = v40;
      if ((v41 & 1) == 0)
      {
        uint64_t v40 = sub_21F2A84F4(0, *((void *)v40 + 2) + 1, 1, v40);
        *(void *)(v39 + 8 * v28) = v40;
      }
      unint64_t v43 = *((void *)v40 + 2);
      unint64_t v42 = *((void *)v40 + 3);
      if (v43 >= v42 >> 1)
      {
        uint64_t v40 = sub_21F2A84F4((char *)(v42 > 1), v43 + 1, 1, v40);
        *(void *)(v39 + 8 * v28) = v40;
      }
      *((void *)v40 + 2) = v43 + 1;
      v40[v43 + 32] = v25;
      swift_bridgeObjectRelease_n();
      if (v15) {
        goto LABEL_17;
      }
    }
  }
  if (*(void *)(MEMORY[0x263F8EE78] + 16))
  {
    unint64_t v45 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_11;
  }
LABEL_53:
  uint64_t v11 = (void *)MEMORY[0x263F8EE80];
LABEL_54:
  swift_bridgeObjectRelease();
  v51[0] = v11;
  sub_21F2B87BC(0xD000000000000013, 0x800000021F433CE0);
  swift_bridgeObjectRelease();
  return v51[0];
}

uint64_t sub_21F2F5EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AA38);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlusContactSuggestion();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v35 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (uint64_t)&v32 - v11;
  uint64_t v34 = v10;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v37 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v38 = (unint64_t)(v13 + 63) >> 6;
  int64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  unint64_t v36 = MEMORY[0x263F8EE78];
  if (!v15) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v18 << 6))
  {
    uint64_t v21 = 8 * i;
    uint64_t v22 = *(void *)(*(void *)(a1 + 48) + v21);
    uint64_t v23 = *(void *)(*(void *)(a1 + 56) + v21);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_21F2F387C(v22, v23, v39, (uint64_t)v6);
    swift_bridgeObjectRelease();
    swift_release();
    if ((*v16)(v6, 1, v7) == 1)
    {
      uint64_t result = sub_21F29FA48((uint64_t)v6, &qword_26AD3AA38);
      if (v15) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v27 = v33;
      sub_21F2F6620((uint64_t)v6, v33);
      sub_21F2F6620(v27, v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_21F2A84C0(0, *(void *)(v36 + 16) + 1, 1, v36);
      }
      unint64_t v29 = *(void *)(v36 + 16);
      unint64_t v28 = *(void *)(v36 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v36 = sub_21F2A84C0(v28 > 1, v29 + 1, 1, v36);
      }
      uint64_t v30 = v35;
      unint64_t v31 = v36;
      *(void *)(v36 + 16) = v29 + 1;
      uint64_t result = sub_21F2F6620(v30, v31+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v29);
      if (v15) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v18;
    if (!v25)
    {
      int64_t v18 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_29;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v18);
      if (!v25)
      {
        int64_t v18 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_29;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v18);
        if (!v25)
        {
          int64_t v18 = v24 + 3;
          if (v24 + 3 >= v38) {
            goto LABEL_29;
          }
          unint64_t v25 = *(void *)(v37 + 8 * v18);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v15 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v38)
  {
LABEL_29:
    swift_release();
    return v36;
  }
  unint64_t v25 = *(void *)(v37 + 8 * v26);
  if (v25)
  {
    int64_t v18 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v18 >= v38) {
      goto LABEL_29;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v18);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21F2F626C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      sub_21F2E0868(v2, (uint64_t)v26);
      uint64_t v4 = v27;
      uint64_t v5 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      sub_21F2E0868((uint64_t)v26, (uint64_t)v25);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v9 = sub_21F2F8150(v6);
      uint64_t v10 = v3[2];
      BOOL v11 = (v8 & 1) == 0;
      uint64_t v12 = v10 + v11;
      if (__OFADD__(v10, v11)) {
        break;
      }
      char v13 = v8;
      if (v3[3] >= v12)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_21F2FED5C();
        }
      }
      else
      {
        sub_21F2FA4A8(v12, isUniquelyReferenced_nonNull_native);
        unint64_t v14 = sub_21F2F8150(v6);
        if ((v13 & 1) != (v15 & 1)) {
          goto LABEL_22;
        }
        unint64_t v9 = v14;
      }
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v3[(v9 >> 6) + 8] |= 1 << v9;
        *(void *)(v3[6] + 8 * v9) = v6;
        *(void *)(v3[7] + 8 * v9) = MEMORY[0x263F8EE78];
        uint64_t v16 = v3[2];
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17) {
          goto LABEL_21;
        }
        v3[2] = v18;
        swift_retain();
      }
      uint64_t v19 = v3[7];
      unint64_t v20 = *(void **)(v19 + 8 * v9);
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v19 + 8 * v9) = v20;
      if ((v21 & 1) == 0)
      {
        unint64_t v20 = sub_21F2A8378(0, v20[2] + 1, 1, v20);
        *(void *)(v19 + 8 * v9) = v20;
      }
      unint64_t v23 = v20[2];
      unint64_t v22 = v20[3];
      if (v23 >= v22 >> 1)
      {
        unint64_t v20 = sub_21F2A8378((void *)(v22 > 1), v23 + 1, 1, v20);
        *(void *)(v19 + 8 * v9) = v20;
      }
      _OWORD v20[2] = v23 + 1;
      sub_21F2E0850(v25, &v20[6 * v23 + 4]);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      v2 += 48;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_21F41F338();
    uint64_t result = sub_21F420E68();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_21F2F64D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_21F2F6530(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F2F6544()
{
  return sub_21F2F6578(&qword_267EC84E0);
}

uint64_t sub_21F2F6578(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_21F41F338();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PlusContactSuggestionGenerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PlusContactSuggestionGenerator);
}

uint64_t dispatch thunk of PlusContactSuggestionGenerator.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PlusContactSuggestionGenerator.generate(groundTruths:suggestionTags:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_21F2F660C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F2F6620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlusContactSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F2F6684()
{
  uint64_t v1 = type metadata accessor for MediaFeedbackGroundTruth();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20)))
  {
    if (*(unsigned char *)(v0 + *(int *)(v1 + 20)) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8508);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F422460;
      uint64_t v3 = (uint64_t *)(v0 + *(int *)(v1 + 28));
      uint64_t v5 = *v3;
      uint64_t v4 = v3[1];
      uint64_t v6 = v3[2];
      uint64_t v7 = v3[3];
      uint64_t v8 = v3[4];
      uint64_t v9 = v3[5];
      LOWORD(v3) = *((_WORD *)v3 + 24);
      *(void *)(inited + 32) = v5;
      *(void *)(inited + 40) = v4;
      *(void *)(inited + 48) = v6;
      *(void *)(inited + 56) = v7;
      *(void *)(inited + 64) = v8;
      *(void *)(inited + 72) = v9;
      *(_WORD *)(inited + 80) = (_WORD)v3;
      __int16 v10 = -32508;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8508);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_21F422460;
      uint64_t v16 = (uint64_t *)(v0 + *(int *)(v1 + 28));
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v6 = v16[2];
      uint64_t v7 = v16[3];
      uint64_t v19 = v16[4];
      uint64_t v20 = v16[5];
      LOWORD(v16) = *((_WORD *)v16 + 24);
      *(void *)(inited + 32) = v18;
      *(void *)(inited + 40) = v17;
      *(void *)(inited + 48) = v6;
      *(void *)(inited + 56) = v7;
      *(void *)(inited + 64) = v19;
      *(void *)(inited + 72) = v20;
      *(_WORD *)(inited + 80) = (_WORD)v16;
      __int16 v10 = -32250;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8508);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F422460;
    BOOL v11 = (uint64_t *)(v0 + *(int *)(v1 + 28));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v6 = v11[2];
    uint64_t v7 = v11[3];
    uint64_t v14 = v11[4];
    uint64_t v15 = v11[5];
    LOWORD(v11) = *((_WORD *)v11 + 24);
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v12;
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v7;
    *(void *)(inited + 64) = v14;
    *(void *)(inited + 72) = v15;
    *(_WORD *)(inited + 80) = (_WORD)v11;
    __int16 v10 = -32761;
  }
  *(_WORD *)(inited + 82) = v10;
  swift_bridgeObjectRetain();
  sub_21F2AA1D0(v6, v7);
  return sub_21F2C0A3C(inited);
}

uint64_t sub_21F2F67EC()
{
  return sub_21F31E604((uint64_t)&unk_26D0CB908);
}

uint64_t sub_21F2F67F8(uint64_t a1)
{
  uint64_t result = sub_21F2F6898(&qword_267EC84F8, (void (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F2F6850()
{
  return sub_21F2F6898((unint64_t *)&qword_267EC8500, (void (*)(uint64_t))type metadata accessor for PlusMediaSuggestion);
}

uint64_t sub_21F2F6898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F2F68E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(a1 + 24));
  return swift_retain();
}

SiriPrivateLearningInference::TurnSlotValue __swiftcall TurnSlotValue.init(stringValue:)(SiriPrivateLearningInference::TurnSlotValue stringValue)
{
  *uint64_t v1 = stringValue;
  return stringValue;
}

uint64_t TurnSlotValue.stringValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall TurnSlotValue.aboveSimilarityThreshold(_:threshold:ignoreCase:)(SiriPrivateLearningInference::TurnSlotValue _, Swift::Double threshold, Swift::Bool ignoreCase)
{
  if (!*(void *)(v3 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void **)(_.stringValue.value._countAndFlagsBits + 8);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = *(void *)_.stringValue.value._countAndFlagsBits;
  if ((uint64_t)_.stringValue.value._object)
  {
    sub_21F420118();
    uint64_t v6 = sub_21F420118();
    uint64_t v4 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v8._countAndFlagsBits = v6;
  v8._object = v4;
  Swift::Double_optional v13 = String.scoreRatcliffObershelp(between:)(v8);
  double v9 = *(double *)&v13.is_nil;
  char v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v11 & 1) == 0 && v9 >= threshold;
}

Swift::Double_optional __swiftcall TurnSlotValue.similarityScore(_:)(SiriPrivateLearningInference::TurnSlotValue a1)
{
  a1.stringValue.value._object = *(void **)(a1.stringValue.value._countAndFlagsBits + 8);
  if (*(void *)(v1 + 8)) {
    BOOL v2 = a1.stringValue.value._object == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2)
  {
    result.is_nil = 0;
  }
  else
  {
    a1.stringValue.value._countAndFlagsBits = *(void *)a1.stringValue.value._countAndFlagsBits;
    return String.scoreRatcliffObershelp(between:)(a1.stringValue.value);
  }
  return result;
}

uint64_t static TurnSlotValue.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  uint64_t result = (v4 | v5) == 0;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    if (*a1 == *a2 && v4 == v5) {
      return 1;
    }
    else {
      return sub_21F420DF8();
    }
  }
  return result;
}

uint64_t TurnSlotValue.description.getter()
{
  if (!*(void *)(v0 + 8)) {
    return 0xD000000000000019;
  }
  sub_21F420948();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  sub_21F4201A8();
  return 0x746F6C536E727554;
}

uint64_t sub_21F2F6B4C(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  uint64_t result = (v4 | v5) == 0;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    if (*a1 == *a2 && v4 == v5) {
      return 1;
    }
    else {
      return sub_21F420DF8();
    }
  }
  return result;
}

uint64_t sub_21F2F6B9C()
{
  type metadata accessor for ReformulationSpecializationClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC85B0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC8510 = 91;
  *(void *)algn_267EC8518 = 0xE100000000000000;
  return result;
}

uint64_t SlotsClassification.initialTurn.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.followOnTurn.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.added.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.removed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.identical.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.similar.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.dissimilar.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.match.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.changed.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall SlotsClassification.init(_:_:)(SiriPrivateLearningInference::SlotsClassification *__return_ptr retstr, Swift::OpaquePointer a2, Swift::OpaquePointer a3)
{
  if (qword_26AD38998 != -1) {
LABEL_100:
  }
    swift_once();
  uint64_t v6 = sub_21F41FF28();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AD3C910);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  BOOL v7 = sub_21F41FF08();
  os_log_type_t v8 = sub_21F420688();
  rawValue = a2._rawValue;
  uint64_t v135 = a3._rawValue;
  uint64_t v126 = retstr;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v133 = swift_slowAlloc();
    uint64_t v136 = (void *)v133;
    *(_DWORD *)uint64_t v9 = 136315650;
    if (qword_267EC71E0 != -1) {
LABEL_101:
    }
      swift_once();
    uint64_t v10 = qword_267EC8510;
    unint64_t v11 = *(void *)algn_267EC8518;
    swift_bridgeObjectRetain();
    sub_21F2A02C4(v10, v11, (uint64_t *)&v136);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    a2._rawValue = rawValue;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F41FF98();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    sub_21F2A02C4(v12, v14, (uint64_t *)&v136);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_21F41FF98();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    sub_21F2A02C4(v15, v17, (uint64_t *)&v136);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v7, v8, "%s Comparing %s to %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v133, -1, -1);
    MEMORY[0x223C4B440](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_21F2F7A84(v18);
  swift_bridgeObjectRelease();
  uint64_t v136 = v19;
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_21F2A5EEC(v20);
  uint64_t v136 = (void *)MEMORY[0x263F8EE88];
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_21F300FF4(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x263F8EE78];
  unint64_t v129 = sub_21F2C10B0(MEMORY[0x263F8EE78]);
  int64_t v24 = (void *)sub_21F2C10B0(v23);
  unint64_t v128 = sub_21F2C11D4(v23);
  unint64_t v127 = sub_21F2C11D4(v23);
  unint64_t v25 = sub_21F2C11D4(v23);
  BOOL v7 = *(NSObject **)(v22 + 16);
  uint64_t v130 = v25;
  if (!v7)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v123 = sub_21F2F79D4(v130, v127);
    swift_bridgeObjectRetain();
    uint64_t v124 = swift_bridgeObjectRetain();
    uint64_t v125 = sub_21F2F79D4(v124, v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v126->initialTurn = a2;
    v126->followOnTurn._rawValue = v135;
    v126->added._rawValue = (void *)v129;
    v126->removed._rawValue = v24;
    v126->identical._rawValue = (void *)v128;
    v126->similar._rawValue = (void *)v127;
    v126->dissimilar._rawValue = (void *)v130;
    v126->match._rawValue = (void *)v125;
    v126->changed._rawValue = (void *)v123;
    return;
  }
  int64_t v26 = (void **)(v22 + 40);
  while (1)
  {
    retstr = (SiriPrivateLearningInference::SlotsClassification *)*(v26 - 1);
    a3._rawValue = *v26;
    uint64_t v27 = *((void *)a2._rawValue + 2);
    swift_bridgeObjectRetain();
    if (v27)
    {
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      if (v29)
      {
        uint64_t v30 = (uint64_t *)(*((void *)a2._rawValue + 7) + 16 * v28);
        uint64_t v31 = *v30;
        uint64_t v32 = v30[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v31 = 0;
        uint64_t v32 = 1;
      }
      uint64_t v33 = v135;
      swift_bridgeObjectRelease();
      if (!*((void *)v135 + 2))
      {
LABEL_14:
        if (v32 == 1) {
          goto LABEL_15;
        }
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v32 = 1;
      uint64_t v33 = v135;
      if (!*((void *)v135 + 2)) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v38 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (v32 == 1)
      {
LABEL_15:
        swift_bridgeObjectRetain();
        unint64_t v34 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
        char v36 = v35;
        swift_bridgeObjectRelease();
        if (v36)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v136 = v24;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_21F2FF2B4();
            int64_t v24 = v136;
          }
          swift_bridgeObjectRelease();
          sub_21F2FDD28(v34, (uint64_t)v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_21F2F6530(v31, 1);
        sub_21F2F6530(0, 1);
        goto LABEL_9;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v54 = (uint64_t)v24;
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = (void *)v54;
      a2._rawValue = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      uint64_t v57 = *(void *)(v54 + 16);
      BOOL v58 = (v56 & 1) == 0;
      uint64_t v59 = v57 + v58;
      if (__OFADD__(v57, v58))
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      char v60 = v56;
      if (*(void *)(v54 + 24) < v59)
      {
        sub_21F2FADDC(v59, v55);
        int64_t v61 = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v60 & 1) != (v62 & 1)) {
          goto LABEL_104;
        }
        a2._rawValue = v61;
        int64_t v24 = v136;
        if ((v60 & 1) == 0) {
          goto LABEL_89;
        }
LABEL_36:
        os_log_type_t v63 = (uint64_t *)(v24[7] + 16 * (uint64_t)a2._rawValue);
        swift_bridgeObjectRelease();
        *os_log_type_t v63 = v31;
        v63[1] = v32;
LABEL_91:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21F2F6530(v31, v32);
        sub_21F2F6530(0, 1);
        a2._rawValue = rawValue;
        goto LABEL_9;
      }
      if (v55)
      {
        int64_t v24 = v136;
        if (v56) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_21F2FF2B4();
        int64_t v24 = v136;
        if (v60) {
          goto LABEL_36;
        }
      }
LABEL_89:
      v24[((unint64_t)a2._rawValue >> 6) + 8] |= 1 << SLOBYTE(a2._rawValue);
      uint64_t v119 = (Swift::OpaquePointer *)(v24[6] + 16 * (uint64_t)a2._rawValue);
      v119->_rawValue = retstr;
      v119[1]._rawValue = a3._rawValue;
      uint64_t v120 = (uint64_t *)(v24[7] + 16 * (uint64_t)a2._rawValue);
      *uint64_t v120 = v31;
      v120[1] = v32;
      uint64_t v121 = v24[2];
      BOOL v77 = __OFADD__(v121, 1);
      uint64_t v122 = v121 + 1;
      if (v77) {
        goto LABEL_94;
      }
      void v24[2] = v122;
      swift_bridgeObjectRetain();
      goto LABEL_91;
    }
    uint64_t v132 = v24;
    uint64_t v40 = (uint64_t *)(v33[7] + 16 * v38);
    uint64_t v41 = *v40;
    unint64_t v42 = (void *)v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v133 = v31;
    if (!v32)
    {
      if (v42)
      {
        uint64_t v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
        swift_bridgeObjectRetain();
        goto LABEL_63;
      }
LABEL_45:
      uint64_t v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      swift_bridgeObjectRetain();
      sub_21F2F660C(v31, v32);
      char v65 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = (void *)v128;
      a2._rawValue = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      uint64_t v67 = *(void *)(v128 + 16);
      BOOL v68 = (v66 & 1) == 0;
      uint64_t v69 = v67 + v68;
      if (__OFADD__(v67, v68)) {
        goto LABEL_97;
      }
      os_log_type_t v8 = v66;
      if (*(void *)(v128 + 24) >= v69)
      {
        if ((v65 & 1) == 0) {
          sub_21F2FF0D0();
        }
      }
      else
      {
        sub_21F2FAA94(v69, v65);
        uint64_t v70 = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v8 & 1) != (v71 & 1)) {
          goto LABEL_104;
        }
        a2._rawValue = v70;
      }
      uint64_t v81 = v136;
      unint64_t v128 = (unint64_t)v136;
      if ((v8 & 1) == 0)
      {
        v136[((unint64_t)a2._rawValue >> 6) + 8] |= 1 << SLOBYTE(a2._rawValue);
        uint64_t v82 = (Swift::OpaquePointer *)(v81[6] + 16 * (uint64_t)a2._rawValue);
        v82->_rawValue = retstr;
        v82[1]._rawValue = a3._rawValue;
        uint64_t v83 = (uint64_t *)(v81[7] + 32 * (uint64_t)a2._rawValue);
        uint64_t v9 = v133;
        *uint64_t v83 = v133;
        v83[1] = v32;
        retstr = v131;
        v83[2] = (uint64_t)v131;
        v83[3] = (uint64_t)v42;
        uint64_t v84 = v81[2];
        BOOL v77 = __OFADD__(v84, 1);
        uint64_t v85 = v84 + 1;
        if (v77)
        {
          __break(1u);
          goto LABEL_101;
        }
        goto LABEL_72;
      }
LABEL_70:
      uint64_t v94 = (uint64_t *)(v81[7] + 32 * (uint64_t)a2._rawValue);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v133;
      *uint64_t v94 = v133;
      v94[1] = v32;
      retstr = v131;
      v94[2] = (uint64_t)v131;
      v94[3] = (uint64_t)v42;
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21F2F6530(v9, v32);
      uint64_t v79 = retstr;
      uint64_t v80 = (uint64_t)v42;
LABEL_74:
      sub_21F2F6530((uint64_t)v79, v80);
      a2._rawValue = rawValue;
      int64_t v24 = v132;
      goto LABEL_9;
    }
    if (v32 == 1)
    {
      uint64_t v43 = (uint64_t)v42;
      unint64_t v44 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      uint64_t v45 = v43;
      swift_bridgeObjectRetain();
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = (void *)v129;
      unint64_t v48 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      uint64_t v49 = *(void *)(v129 + 16);
      BOOL v50 = (v47 & 1) == 0;
      uint64_t v51 = v49 + v50;
      if (__OFADD__(v49, v50)) {
        goto LABEL_96;
      }
      a2._rawValue = v47;
      if (*(void *)(v129 + 24) >= v51)
      {
        if ((v46 & 1) == 0) {
          sub_21F2FF2B4();
        }
      }
      else
      {
        sub_21F2FADDC(v51, v46);
        unint64_t v52 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
        if (((uint64_t)a2._rawValue & 1) != (v53 & 1)) {
          goto LABEL_104;
        }
        unint64_t v48 = v52;
      }
      uint64_t v72 = v136;
      unint64_t v129 = (unint64_t)v136;
      if ((uint64_t)a2._rawValue)
      {
        uint64_t v73 = (SiriPrivateLearningInference::SlotsClassification **)(v136[7] + 16 * v48);
        swift_bridgeObjectRelease();
        *uint64_t v73 = v44;
        v73[1] = (SiriPrivateLearningInference::SlotsClassification *)v45;
      }
      else
      {
        v136[(v48 >> 6) + 8] |= 1 << v48;
        uint64_t v74 = (Swift::OpaquePointer *)(v72[6] + 16 * v48);
        v74->_rawValue = retstr;
        v74[1]._rawValue = a3._rawValue;
        os_log_type_t v75 = (uint64_t *)(v72[7] + 16 * v48);
        *os_log_type_t v75 = v41;
        v75[1] = v45;
        uint64_t v76 = v72[2];
        BOOL v77 = __OFADD__(v76, 1);
        uint64_t v78 = v76 + 1;
        if (v77) {
          goto LABEL_99;
        }
        v72[2] = v78;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21F2F6530(v133, 1);
      uint64_t v79 = v44;
      uint64_t v80 = v45;
      goto LABEL_74;
    }
    if (!v42)
    {
      uint64_t v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      swift_bridgeObjectRetain();
      sub_21F2F660C(v31, v32);
LABEL_63:
      char v86 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v136 = (void *)v130;
      a2._rawValue = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      uint64_t v88 = *(void *)(v130 + 16);
      BOOL v89 = (v87 & 1) == 0;
      uint64_t v90 = v88 + v89;
      if (__OFADD__(v88, v89)) {
        goto LABEL_95;
      }
      char v91 = v87;
      if (*(void *)(v130 + 24) >= v90)
      {
        if ((v86 & 1) == 0) {
          sub_21F2FF0D0();
        }
      }
      else
      {
        sub_21F2FAA94(v90, v86);
        unint64_t v92 = (void *)sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v91 & 1) != (v93 & 1)) {
          goto LABEL_104;
        }
        a2._rawValue = v92;
      }
      uint64_t v81 = v136;
      uint64_t v130 = (uint64_t)v136;
      if (v91) {
        goto LABEL_70;
      }
      v136[((unint64_t)a2._rawValue >> 6) + 8] |= 1 << SLOBYTE(a2._rawValue);
      uint64_t v95 = (Swift::OpaquePointer *)(v81[6] + 16 * (uint64_t)a2._rawValue);
      v95->_rawValue = retstr;
      v95[1]._rawValue = a3._rawValue;
      uint64_t v96 = (uint64_t *)(v81[7] + 32 * (uint64_t)a2._rawValue);
      uint64_t v9 = v133;
      *uint64_t v96 = v133;
      v96[1] = v32;
      retstr = v131;
      v96[2] = (uint64_t)v131;
      void v96[3] = (uint64_t)v42;
      uint64_t v97 = v81[2];
      BOOL v77 = __OFADD__(v97, 1);
      uint64_t v85 = v97 + 1;
      if (v77) {
        goto LABEL_98;
      }
LABEL_72:
      v81[2] = v85;
      swift_bridgeObjectRetain();
      goto LABEL_73;
    }
    BOOL v64 = v31 == v41 && v32 == (void)v42;
    if (v64 || (sub_21F420DF8() & 1) != 0) {
      goto LABEL_45;
    }
    swift_bridgeObjectRetain();
    sub_21F2F660C(v31, v32);
    swift_bridgeObjectRetain();
    sub_21F2F660C(v31, v32);
    uint64_t v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
    v98._countAndFlagsBits = v41;
    v98._object = v42;
    Swift::Double_optional v137 = String.scoreRatcliffObershelp(between:)(v98);
    double v99 = *(double *)&v137.is_nil;
    char v101 = v100;
    swift_bridgeObjectRelease();
    sub_21F2F6530(v31, v32);
    if ((v101 & 1) != 0 || v99 < 0.75) {
      goto LABEL_63;
    }
    char v102 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v136 = (void *)v127;
    unint64_t v104 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
    uint64_t v105 = *(void *)(v127 + 16);
    BOOL v106 = (v103 & 1) == 0;
    uint64_t v107 = v105 + v106;
    if (__OFADD__(v105, v106)) {
      break;
    }
    char v108 = v103;
    if (*(void *)(v127 + 24) >= v107)
    {
      if ((v102 & 1) == 0) {
        sub_21F2FF0D0();
      }
    }
    else
    {
      sub_21F2FAA94(v107, v102);
      unint64_t v109 = sub_21F2F7E18((uint64_t)retstr, (uint64_t)a3._rawValue);
      if ((v108 & 1) != (v110 & 1)) {
        goto LABEL_104;
      }
      unint64_t v104 = v109;
    }
    uint64_t v111 = v136;
    unint64_t v127 = (unint64_t)v136;
    if (v108)
    {
      uint64_t v112 = (uint64_t *)(v136[7] + 32 * v104);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v113 = v133;
      a2._rawValue = rawValue;
      *uint64_t v112 = v133;
      v112[1] = v32;
      uint64_t v114 = (uint64_t)v131;
      v112[2] = (uint64_t)v131;
      uint64_t v112[3] = (uint64_t)v42;
    }
    else
    {
      v136[(v104 >> 6) + 8] |= 1 << v104;
      uint64_t v115 = (Swift::OpaquePointer *)(v111[6] + 16 * v104);
      v115->_rawValue = retstr;
      v115[1]._rawValue = a3._rawValue;
      unint64_t v116 = (uint64_t *)(v111[7] + 32 * v104);
      uint64_t v113 = v133;
      *unint64_t v116 = v133;
      v116[1] = v32;
      v116[2] = (uint64_t)v131;
      v116[3] = (uint64_t)v42;
      uint64_t v117 = v111[2];
      BOOL v77 = __OFADD__(v117, 1);
      uint64_t v118 = v117 + 1;
      if (v77) {
        goto LABEL_103;
      }
      v111[2] = v118;
      swift_bridgeObjectRetain();
      a2._rawValue = rawValue;
      uint64_t v114 = (uint64_t)v131;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F2F6530(v113, v32);
    sub_21F2F6530(v114, (uint64_t)v42);
    int64_t v24 = v132;
LABEL_9:
    v26 += 2;
    BOOL v7 = ((char *)v7 - 1);
    if (!v7) {
      goto LABEL_92;
    }
  }
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  sub_21F420E68();
  __break(1u);
}

SiriPrivateLearningInference::SlotsClassification::TurnSlotValuePair __swiftcall SlotsClassification.TurnSlotValuePair.init(_:_:)(SiriPrivateLearningInference::TurnSlotValue a1, SiriPrivateLearningInference::TurnSlotValue a2)
{
  long long v3 = *(_OWORD *)a1.stringValue.value._object;
  *BOOL v2 = *(_OWORD *)a1.stringValue.value._countAndFlagsBits;
  v2[1] = v3;
  result.followOn = a2;
  result.initial = a1;
  return result;
}

uint64_t sub_21F2F79D4(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_21F300850(a1, (uint64_t)sub_21F300EDC, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t SlotsClassification.TurnSlotValuePair.initial.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.TurnSlotValuePair.followOn.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *sub_21F2F7A84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A0);
  long long v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_21F300AB8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_21F2ABEF8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_21F2F7B6C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_21F2F7B94(a1, a2, a3, a4, (unint64_t *)&qword_267EC7858);
}

uint64_t sub_21F2F7B80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_21F2F7B94(a1, a2, a3, a4, (unint64_t *)&qword_267EC7770);
}

uint64_t sub_21F2F7B94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      unint64_t v11 = (void *)MEMORY[0x263F8EE78];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        sub_21F2ABFB4(0, a5);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AD38E00);
      unint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      void v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_21F420BE8();
  __break(1u);
  return result;
}

void *sub_21F2F7D30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E20);
  long long v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_21F300CB8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_21F2ABEF8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

unint64_t sub_21F2F7E18(uint64_t a1, uint64_t a2)
{
  sub_21F420EF8();
  sub_21F420148();
  uint64_t v4 = sub_21F420F48();
  return sub_21F2F851C(a1, a2, v4);
}

unint64_t sub_21F2F7E90(uint64_t a1)
{
  sub_21F41F228();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
  uint64_t v3 = sub_21F420028();
  return sub_21F2F8CD0(a1, v3, MEMORY[0x263F07508], (unint64_t *)&qword_26AD3A840, v2, MEMORY[0x263F07528]);
}

unint64_t sub_21F2F7F64(uint64_t a1)
{
  sub_21F420EF8();
  sub_21F420148();
  uint64_t v2 = sub_21F420F48();
  return sub_21F2F8600(a1, v2);
}

unint64_t sub_21F2F7FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_21F420EF8();
  sub_21F420148();
  uint64_t v8 = sub_21F420F48();
  return sub_21F2F86DC(a1, a2, a3, a4, v8);
}

unint64_t sub_21F2F8060(uint64_t a1)
{
  sub_21F420EF8();
  uint64_t v14 = a1;
  sub_21F382B74(a1, v15);
  uint64_t v2 = v15[0];
  uint64_t v3 = v15[1];
  uint64_t v4 = v15[2];
  uint64_t v5 = v15[3];
  uint64_t v6 = v15[4];
  uint64_t v7 = v15[5];
  uint64_t v8 = v15[6];
  uint64_t v9 = v15[7];
  uint64_t v10 = v15[8];
  uint64_t v11 = v15[9];
  sub_21F301860((uint64_t)v15, (uint64_t)v16);
  if (v17 == 1)
  {
    sub_21F420F18();
  }
  else
  {
    uint64_t v18 = v2;
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    uint64_t v21 = v5;
    uint64_t v22 = v6;
    uint64_t v23 = v7;
    uint64_t v24 = v8;
    uint64_t v25 = v9;
    uint64_t v26 = v10;
    uint64_t v27 = v11;
    sub_21F420F18();
    sub_21F362CC4();
    sub_21F2B4758(v15);
  }
  uint64_t v12 = sub_21F420F48();
  return sub_21F2F87E8(v14, v12);
}

unint64_t sub_21F2F8150(uint64_t a1)
{
  sub_21F420EF8();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_21F420F18();
    sub_21F420148();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F420F18();
  }
  uint64_t v2 = sub_21F420F48();
  return sub_21F2F8B4C(a1, v2);
}

unint64_t sub_21F2F8204(unsigned __int8 a1)
{
  sub_21F420EF8();
  sub_21F420F08();
  uint64_t v2 = sub_21F420F48();
  return sub_21F2F9234(a1, v2);
}

unint64_t sub_21F2F826C(uint64_t a1)
{
  sub_21F41FEE8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F740C0];
  sub_21F30198C(&qword_26AD3AFC0, MEMORY[0x263F740C0]);
  uint64_t v3 = sub_21F420028();
  return sub_21F2F8CD0(a1, v3, MEMORY[0x263F740C0], &qword_267EC85C0, v2, MEMORY[0x263F740D0]);
}

unint64_t sub_21F2F8340(unsigned __int8 a1)
{
  sub_21F420EF8();
  sub_21F420F08();
  sub_21F420F08();
  uint64_t v2 = sub_21F420F48();
  return sub_21F2F8E70(a1, v2);
}

unint64_t sub_21F2F83B8(int a1)
{
  sub_21F420EF8();
  sub_21F420F28();
  uint64_t v2 = sub_21F420F48();
  return sub_21F2F8F04(a1, v2);
}

unint64_t sub_21F2F8424(uint64_t a1, unint64_t a2)
{
  sub_21F420EF8();
  sub_21F420F08();
  if (a2 > 2) {
    sub_21F420148();
  }
  uint64_t v4 = sub_21F420F48();
  return sub_21F2F8FA0(a1, a2, v4);
}

unint64_t sub_21F2F84D8(uint64_t a1)
{
  uint64_t v2 = sub_21F4208D8();
  return sub_21F2F916C(a1, v2);
}

unint64_t sub_21F2F851C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21F420DF8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21F420DF8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21F2F8600(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v3;
  v16[2] = *(_OWORD *)(a1 + 32);
  __int16 v17 = *(_WORD *)(a1 + 48);
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(v2 + 48) + 56 * v5;
      uint64_t v8 = *(void *)(v7 + 8);
      __int16 v9 = *(_WORD *)(v7 + 48);
      v12[0] = *(void *)v7;
      v12[1] = v8;
      long long v10 = *(_OWORD *)(v7 + 32);
      long long v13 = *(_OWORD *)(v7 + 16);
      long long v14 = v10;
      __int16 v15 = v9;
      if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v16)) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_21F2F86DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      __int16 v15 = (void *)(v14 + 32 * v8);
      uint64_t v17 = v15[2];
      uint64_t v16 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_21F420DF8() & 1) != 0)
      {
        if (v16)
        {
          if (a4)
          {
            BOOL v19 = v17 == a3 && v16 == a4;
            if (v19 || (sub_21F420DF8() & 1) != 0) {
              return v8;
            }
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_21F2F87E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v17 = v2 + 64;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return v4;
  }
  uint64_t v16 = ~v3;
  while (1)
  {
    uint64_t v30 = swift_retain();
    sub_21F382B74(v30, v32);
    uint64_t v6 = v32[0];
    uint64_t v5 = v32[1];
    uint64_t v7 = v32[2];
    uint64_t v8 = v32[3];
    uint64_t v26 = v32[4];
    uint64_t v22 = v32[6];
    uint64_t v28 = v32[7];
    uint64_t v29 = v32[5];
    uint64_t v19 = v32[8];
    uint64_t v24 = v32[9];
    sub_21F382B74(a1, v33);
    uint64_t v10 = v33[0];
    uint64_t v9 = v33[1];
    uint64_t v12 = v33[2];
    uint64_t v11 = v33[3];
    uint64_t v13 = v33[5];
    uint64_t v25 = v33[4];
    uint64_t v27 = v33[7];
    uint64_t v20 = v33[8];
    uint64_t v21 = v33[6];
    uint64_t v23 = v33[9];
    sub_21F301860((uint64_t)v32, (uint64_t)v38);
    if (v39 == 1)
    {
      sub_21F301860((uint64_t)v33, (uint64_t)v36);
      if (v37 == 1) {
        goto LABEL_48;
      }
      goto LABEL_7;
    }
    sub_21F301860((uint64_t)v33, (uint64_t)v34);
    if (v35 != 1) {
      break;
    }
LABEL_7:
    v31[0] = v6;
    v31[1] = v5;
    v31[2] = v7;
    v31[3] = v8;
    v31[4] = v26;
    uint64_t v31[5] = v29;
    v31[6] = v22;
    v31[7] = v28;
    v31[8] = v19;
    v31[9] = v24;
    v31[10] = v10;
    v31[11] = v9;
    v31[12] = v12;
    v31[13] = v11;
    v31[14] = v25;
    v31[15] = v13;
    v31[16] = v21;
    v31[17] = v27;
    v31[18] = v20;
    v31[19] = v23;
    sub_21F2B45F0(v31);
LABEL_44:
    swift_release();
LABEL_45:
    unint64_t v4 = (v4 + 1) & v16;
    if (((*(void *)(v17 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return v4;
    }
  }
  if (!v5)
  {
    if (!v9) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
  if (!v9 || (v6 != v10 || v5 != v9) && (sub_21F420DF8() & 1) == 0) {
    goto LABEL_43;
  }
LABEL_15:
  if (!v8)
  {
    if (!v11) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
  if (!v11 || (v7 != v12 || v8 != v11) && (sub_21F420DF8() & 1) == 0) {
    goto LABEL_43;
  }
LABEL_22:
  if (!v29)
  {
    if (!v13) {
      goto LABEL_29;
    }
    goto LABEL_43;
  }
  if (!v13 || (v26 != v25 || v29 != v13) && (sub_21F420DF8() & 1) == 0) {
    goto LABEL_43;
  }
LABEL_29:
  if (!v28)
  {
    if (!v27) {
      goto LABEL_36;
    }
    goto LABEL_43;
  }
  if (!v27 || (v22 != v21 || v28 != v27) && (sub_21F420DF8() & 1) == 0) {
    goto LABEL_43;
  }
LABEL_36:
  if (!v24)
  {
    if (!v23) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
  if (!v23)
  {
LABEL_43:
    sub_21F2B4758(v33);
    sub_21F2B4758(v32);
    goto LABEL_44;
  }
  if (v19 != v20 || v24 != v23)
  {
    char v14 = sub_21F420DF8();
    sub_21F2B4758(v33);
    sub_21F2B4758(v32);
    swift_release();
    if (v14) {
      return v4;
    }
    goto LABEL_45;
  }
LABEL_47:
  sub_21F2B4758(v33);
  sub_21F2B4758(v32);
LABEL_48:
  swift_release();
  return v4;
}

unint64_t sub_21F2F8B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      sub_21F420EF8();
      swift_retain();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      uint64_t v7 = sub_21F420F48();
      sub_21F420EF8();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      uint64_t v8 = sub_21F420F48();
      swift_release();
      if (v7 == v8) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_21F2F8CD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    __int16 v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_21F30198C(v23, v24);
      char v19 = sub_21F420098();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_21F2F8E70(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void *)(v2 + 48);
    do
    {
      int v8 = *(unsigned __int8 *)(v7 + result);
      if (*(char *)(v7 + result) < 0)
      {
        if ((a1 & 0x80) != 0 && ((v8 ^ a1) & 0x7F) == 0) {
          return result;
        }
      }
      else if ((a1 & 0x80) == 0 && v8 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_21F2F8F04(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_21F2F8FA0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v8 = ~v4;
  while (1)
  {
    uint64_t v9 = *(void *)(v3 + 48) + 16 * v5;
    uint64_t v10 = *(void *)v9;
    unint64_t v11 = *(void *)(v9 + 8);
    switch(v11)
    {
      case 0uLL:
        if (!a2)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 0;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 1uLL:
        if (a2 == 1)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 1;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 2uLL:
        if (a2 == 2)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 2;
          goto LABEL_24;
        }
LABEL_13:
        sub_21F3018C8(*(void *)v9, *(void *)(v9 + 8));
        sub_21F3018C8(a1, a2);
        sub_21F2B929C(v10, v11);
        sub_21F2B929C(a1, a2);
        goto LABEL_14;
    }
    if (a2 < 3) {
      goto LABEL_13;
    }
    if (v10 == a1 && v11 == a2) {
      break;
    }
    char v13 = sub_21F420DF8();
    sub_21F3018C8(v10, v11);
    sub_21F3018C8(a1, a2);
    sub_21F2B929C(v10, v11);
    sub_21F2B929C(a1, a2);
    if (v13) {
      return v5;
    }
LABEL_14:
    unint64_t v5 = (v5 + 1) & v8;
    if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
  sub_21F3018C8(a1, a2);
  sub_21F3018C8(a1, a2);
  uint64_t v14 = a1;
  unint64_t v15 = a2;
LABEL_24:
  sub_21F2B929C(v14, v15);
  sub_21F2B929C(a1, a2);
  return v5;
}

unint64_t sub_21F2F916C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_21F3018DC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x223C4A5F0](v9, a1);
      sub_21F301938((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21F2F9234(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_21F2F92D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D00);
  char v36 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2F95EC(uint64_t a1, int a2)
{
  return sub_21F2FBC64(a1, a2, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification, &qword_267EC85C8, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
}

uint64_t sub_21F2F9620(uint64_t a1, char a2)
{
  return sub_21F2FC45C(a1, a2, &qword_267EC8538);
}

uint64_t sub_21F2F962C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DA0);
  char v43 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v42 = v5;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v44 = v13;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40) {
          goto LABEL_33;
        }
        unint64_t v23 = v41[v22];
        int64_t v24 = v13 + 1;
        if (!v23)
        {
          int64_t v24 = v13 + 2;
          if (v13 + 2 >= v40) {
            goto LABEL_33;
          }
          unint64_t v23 = v41[v24];
          if (!v23)
          {
            uint64_t v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v43)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v24 >= v40) {
                  goto LABEL_33;
                }
                unint64_t v23 = v41[v24];
                ++v25;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v24 = v13 + 3;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        int64_t v44 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v30 = *(void *)(v5 + 56);
      uint64_t v31 = *(void *)(v5 + 48) + 56 * v21;
      uint64_t v33 = *(void *)v31;
      uint64_t v32 = *(void *)(v31 + 8);
      uint64_t v35 = *(void *)(v31 + 16);
      uint64_t v34 = *(void *)(v31 + 24);
      uint64_t v37 = *(void *)(v31 + 32);
      uint64_t v36 = *(void *)(v31 + 40);
      char v45 = *(unsigned char *)(v31 + 48);
      char v46 = *(unsigned char *)(v31 + 49);
      unint64_t v38 = (char *)(v30 + 2 * v21);
      char v47 = *v38;
      char v48 = v38[1];
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_21F2AA1D0(v35, v34);
      }
      sub_21F420EF8();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v7 + 48) + 56 * v17;
      *(void *)uint64_t v18 = v33;
      *(void *)(v18 + 8) = v32;
      *(void *)(v18 + 16) = v35;
      *(void *)(v18 + 24) = v34;
      *(void *)(v18 + 32) = v37;
      *(void *)(v18 + 40) = v36;
      *(unsigned char *)(v18 + 48) = v45;
      *(unsigned char *)(v18 + 49) = v46;
      unint64_t v19 = (unsigned char *)(*(void *)(v7 + 56) + 2 * v17);
      *unint64_t v19 = v47;
      v19[1] = v48;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
      int64_t v13 = v44;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2F99A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DB8);
  char v42 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    unint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = v30[3];
    uint64_t v43 = v30[2];
    uint64_t v34 = *(void *)(v5 + 56) + 4 * v21;
    char v44 = *(unsigned char *)v34;
    int v35 = *(unsigned __int8 *)(v34 + 3);
    int v36 = *(unsigned __int16 *)(v34 + 1);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    void v18[2] = v43;
    v18[3] = v33;
    uint64_t v19 = *(void *)(v7 + 56) + 4 * v17;
    *(unsigned char *)uint64_t v19 = v44;
    *(unsigned char *)(v19 + 3) = (v36 | (v35 << 16)) >> 16;
    *(_WORD *)(v19 + 1) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2F9CF8(uint64_t a1, char a2)
{
  return sub_21F2FD18C(a1, a2, &qword_267EC7DE0);
}

unint64_t sub_21F2F9D04(uint64_t a1, char a2)
{
  return sub_21F2FA4B4(a1, a2, &qword_267EC7E00);
}

uint64_t sub_21F2F9D10(uint64_t a1, char a2)
{
  return sub_21F2F9D28(a1, a2, &qword_267EC8568);
}

uint64_t sub_21F2F9D1C(uint64_t a1, char a2)
{
  return sub_21F2F9D28(a1, a2, &qword_267EC8560);
}

uint64_t sub_21F2F9D28(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_21F420BC8();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_21F420EF8();
      sub_21F420F08();
      uint64_t result = sub_21F420F48();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v8 + 48) + v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_21F2F9FF8(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC7E18);
}

uint64_t sub_21F2FA004(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_21F41F228();
  uint64_t v5 = *(void *)(v50 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v50);
  char v55 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v44 - v8;
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8598);
  int v52 = a2;
  uint64_t v10 = sub_21F420BC8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  char v46 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  char v44 = v3;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  char v47 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v17 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  uint64_t v48 = v5;
  uint64_t v49 = v9;
  while (1)
  {
    if (v15)
    {
      unint64_t v23 = __clz(__rbit64(v15));
      uint64_t v24 = (v15 - 1) & v15;
      unint64_t v25 = v23 | (v19 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45) {
      break;
    }
    char v27 = v46;
    unint64_t v28 = v46[v26];
    ++v19;
    if (!v28)
    {
      int64_t v19 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v28 = v46[v19];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v19 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v19 >= v45) {
              goto LABEL_34;
            }
            unint64_t v28 = v46[v19];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v19 = v29;
      }
    }
LABEL_21:
    uint64_t v24 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v5 + 72);
    unint64_t v31 = v30 * v25;
    unint64_t v32 = *(void *)(v9 + 48) + v30 * v25;
    unint64_t v53 = v24;
    int64_t v54 = v19;
    if (v52)
    {
      uint64_t v33 = *v16;
      uint64_t v35 = v50;
      uint64_t v34 = v51;
      (*v16)(v51, v32, v50);
    }
    else
    {
      uint64_t v33 = *v47;
      uint64_t v35 = v50;
      uint64_t v34 = v51;
      (*v47)(v51, v32, v50);
    }
    v33(v55, *(void *)(v9 + 56) + v31, v35);
    sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
    uint64_t result = sub_21F420028();
    uint64_t v36 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v17 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v37) & ~*(void *)(v17 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v17 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v20 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    unint64_t v21 = v30 * v20;
    int64_t v22 = *v16;
    (*v16)((char *)(*(void *)(v11 + 48) + v30 * v20), (unint64_t)v34, v35);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(*(void *)(v11 + 56) + v21, v55, v35);
    ++*(void *)(v11 + 16);
    uint64_t v5 = v48;
    uint64_t v9 = v49;
    unint64_t v15 = v53;
    int64_t v19 = v54;
  }
  swift_release();
  uint64_t v3 = v44;
  char v27 = v46;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v9 + 32);
  if (v43 >= 64) {
    bzero(v27, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v27 = -1 << v43;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_21F2FA4A8(uint64_t a1, char a2)
{
  return sub_21F2FA4B4(a1, a2, &qword_267EC85B8);
}

unint64_t sub_21F2FA4B4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v27 = a2;
  uint64_t v7 = sub_21F420BC8();
  uint64_t v8 = (void *)v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    int64_t v26 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v25 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    unint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v18 >= v25) {
          goto LABEL_26;
        }
        unint64_t v19 = v26[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v25) {
            goto LABEL_26;
          }
          unint64_t v19 = v26[v14];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v25)
            {
LABEL_26:
              swift_release();
              uint64_t v4 = v3;
              if (v27)
              {
                uint64_t v24 = 1 << *(unsigned char *)(v6 + 32);
                if (v24 > 63) {
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v26 = -1 << v24;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v26[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_33;
                }
                if (v14 >= v25) {
                  goto LABEL_26;
                }
                unint64_t v19 = v26[v14];
                ++v20;
                if (v19) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v14 = v20;
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = 8 * v17;
      uint64_t v22 = *(void *)(*(void *)(v6 + 48) + v21);
      uint64_t v23 = *(void *)(*(void *)(v6 + 56) + v21);
      if ((v27 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_21F420EF8();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_21F420F18();
        sub_21F420148();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_21F420F18();
      }
      sub_21F420F48();
      unint64_t result = sub_21F420888();
      *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v15 = 8 * result;
      *(void *)(v8[6] + v15) = v22;
      *(void *)(v8[7] + v15) = v23;
      ++v8[2];
    }
  }
  unint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_21F2FA770(uint64_t a1, char a2)
{
  return sub_21F2FD538(a1, a2, &qword_267EC7D18);
}

uint64_t sub_21F2FA77C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8558);
  char v37 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FAA88(uint64_t a1, char a2)
{
  return sub_21F2FD538(a1, a2, &qword_267EC8550);
}

uint64_t sub_21F2FAA94(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E08);
  char v40 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    long long v41 = *(_OWORD *)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(_OWORD *)(v19 + 8) = v41;
    *(void *)(v19 + 24) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FADDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E10);
  char v6 = a2;
  uint64_t v7 = sub_21F420BC8();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_21F420EF8();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *unint64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_21F2FB0E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8548);
  char v31 = a2;
  uint64_t result = sub_21F420BC8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((v31 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((v31 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_21F420EF8();
      sub_21F420F08();
      sub_21F420F08();
      uint64_t result = sub_21F420F48();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FB3D8(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC8588);
}

uint64_t sub_21F2FB3E4(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_21F41F228();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v48 = a2;
  uint64_t v12 = sub_21F420BC8();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  char v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  uint64_t v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  int64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  int64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    uint64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      uint64_t v32 = *(void *)(*(void *)(v13 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
    }
    sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
    uint64_t result = sub_21F420028();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  uint64_t v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v5 = v14;
  return result;
}

uint64_t sub_21F2FB80C(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC85A0);
}

uint64_t sub_21F2FB818(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC85A8);
  int v45 = a2;
  uint64_t v10 = sub_21F420BC8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v39 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    uint64_t v41 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v40 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    char v46 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v47 = v8;
    uint64_t v48 = v5;
    uint64_t v43 = v9;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_34;
        }
        unint64_t v24 = v41[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v24 = v41[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v39;
              if (v45)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
                if (v38 >= 64) {
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v41 = -1 << v38;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v24 = v41[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = *(void *)(v6 + 72);
      unint64_t v27 = *(void *)(v9 + 48) + v26 * v22;
      if (v45) {
        (*v46)(v47, v27, v48);
      }
      else {
        (*v42)(v47, v27, v48);
      }
      unint64_t v28 = (char *)(*(void *)(v9 + 56) + 2 * v22);
      char v29 = v28[1];
      char v30 = *v28;
      sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
      uint64_t result = sub_21F420028();
      uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v32) & ~*(void *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v46)(*(void *)(v11 + 48) + v26 * v19, v47, v48);
      uint64_t v20 = (unsigned char *)(*(void *)(v11 + 56) + 2 * v19);
      *uint64_t v20 = v30;
      v20[1] = v29;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v43;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_21F2FBC30(uint64_t a1, int a2)
{
  return sub_21F2FBC64(a1, a2, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata, &qword_267EC8590, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
}

uint64_t sub_21F2FBC64(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  BOOL v58 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (uint64_t)&v47 - v10;
  uint64_t v11 = sub_21F41F228();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int64_t v54 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v53 = a2;
  uint64_t v15 = v14;
  uint64_t v16 = sub_21F420BC8();
  uint64_t v17 = v16;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 64);
  uint64_t v49 = (void *)(v14 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  uint64_t v47 = v5;
  int64_t v48 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v50 = (void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  char v55 = (void (**)(char *, unint64_t, uint64_t))(v12 + 32);
  uint64_t v56 = v11;
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v51 = v15;
  int64_t v25 = v54;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v48) {
      break;
    }
    char v30 = v49;
    unint64_t v31 = v49[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v31 = v49[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v48)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v47;
          if ((v53 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v49[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v48) {
              goto LABEL_34;
            }
            unint64_t v31 = v49[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
    int64_t v25 = v54;
LABEL_22:
    uint64_t v33 = v12;
    uint64_t v34 = *(void *)(v12 + 72);
    unint64_t v35 = *(void *)(v15 + 48) + v34 * v28;
    if (v53)
    {
      (*v55)(v25, v35, v56);
      uint64_t v36 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_21F301A3C(v36 + v37 * v28, v57, v58);
    }
    else
    {
      (*v50)(v25, v35, v56);
      uint64_t v38 = *(void *)(v15 + 56);
      uint64_t v37 = *(void *)(v52 + 72);
      sub_21F3019D4(v38 + v37 * v28, v57, v58);
    }
    sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
    uint64_t result = sub_21F420028();
    uint64_t v39 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v40 = result & ~v39;
    unint64_t v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v40) & ~*(void *)(v22 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
      int64_t v25 = v54;
    }
    else
    {
      char v42 = 0;
      unint64_t v43 = (unint64_t)(63 - v39) >> 6;
      int64_t v25 = v54;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v44 = v41 == v43;
        if (v41 == v43) {
          unint64_t v41 = 0;
        }
        v42 |= v44;
        uint64_t v45 = *(void *)(v22 + 8 * v41);
      }
      while (v45 == -1);
      unint64_t v26 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    (*v55)((char *)(*(void *)(v17 + 48) + v34 * v26), (unint64_t)v25, v56);
    uint64_t result = sub_21F301A3C(v57, *(void *)(v17 + 56) + v37 * v26, v58);
    ++*(void *)(v17 + 16);
    uint64_t v15 = v51;
    uint64_t v12 = v33;
  }
  swift_release();
  uint64_t v7 = v47;
  char v30 = v49;
  if ((v53 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v46 = 1 << *(unsigned char *)(v15 + 32);
  if (v46 >= 64) {
    bzero(v30, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v30 = -1 << v46;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v17;
  return result;
}

uint64_t sub_21F2FC144(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DF8);
  char v37 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FC450(uint64_t a1, char a2)
{
  return sub_21F2FC45C(a1, a2, &qword_267EC8540);
}

uint64_t sub_21F2FC45C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_21F420BC8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int v33 = *(_DWORD *)(*(void *)(v6 + 56) + 4 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(void *)(v8 + 56) + 4 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_21F2FC764(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8570);
  uint64_t result = sub_21F420BC8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      int v20 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_21F420EF8();
      sub_21F420F28();
      uint64_t result = sub_21F420F48();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FCA2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DE8);
  char v42 = a2;
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v14 = v5;
  uint64_t v41 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v39) {
      break;
    }
    unint64_t v24 = v40;
    unint64_t v25 = v40[v23];
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v25 = v40[v13];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_35;
        }
        unint64_t v25 = v40[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v39) {
              goto LABEL_34;
            }
            unint64_t v25 = v40[v13];
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    unint64_t v34 = *(void *)(v14 + 56) + (v22 << 6);
    uint64_t v35 = *(void *)(v34 + 8);
    uint64_t v43 = *(void *)v34;
    uint64_t v44 = *(void *)(v34 + 16);
    long long v45 = *(_OWORD *)(v34 + 40);
    long long v46 = *(_OWORD *)(v34 + 24);
    uint64_t v36 = *(void *)(v34 + 56);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = v41;
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *int64_t v19 = v33;
    v19[1] = v32;
    unint64_t v20 = *(void *)(v7 + 56) + (v18 << 6);
    *(void *)unint64_t v20 = v43;
    *(void *)(v20 + 8) = v35;
    *(void *)(v20 + 16) = v44;
    *(_OWORD *)(v20 + 24) = v46;
    *(_OWORD *)(v20 + 40) = v45;
    *(void *)(v20 + 56) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v24 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_35:
  uint64_t v37 = 1 << *(unsigned char *)(v41 + 32);
  if (v37 >= 64) {
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v37;
  }
  *(void *)(v41 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FCDC8(uint64_t a1, char a2)
{
  return sub_21F2FD538(a1, a2, &qword_267EC7DF0);
}

uint64_t sub_21F2FCDD4(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_26AD3AEF8);
}

uint64_t sub_21F2FCDE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB8);
  uint64_t v6 = sub_21F420BC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v33 = v2;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    int64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v34) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(v5 + 48);
    int64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    unint64_t v24 = *(void *)(v22 + 16 * v17 + 8);
    long long v36 = *(_OWORD *)(v22 + 16 * v17);
    if (a2)
    {
      sub_21F2A09A8(v23, (uint64_t)v37);
    }
    else
    {
      sub_21F29F920((uint64_t)v23, (uint64_t)v37);
      sub_21F3018C8(v36, v24);
    }
    sub_21F420EF8();
    sub_21F420F08();
    if (v24 > 2) {
      sub_21F420148();
    }
    uint64_t result = sub_21F420F48();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      long long v15 = v36;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      long long v15 = v36;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v15;
    uint64_t result = sub_21F2A09A8(v37, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  int64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_21F2FD144(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC7DC8);
}

uint64_t sub_21F2FD150(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC8580);
}

uint64_t sub_21F2FD15C(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_26AD3AF00);
}

uint64_t sub_21F2FD168(uint64_t a1, int a2)
{
  return sub_21F2FB3E4(a1, a2, &qword_267EC8578);
}

uint64_t sub_21F2FD174(uint64_t a1, char a2)
{
  return sub_21F2FD18C(a1, a2, &qword_267EC8530);
}

uint64_t sub_21F2FD180(uint64_t a1, char a2)
{
  return sub_21F2FD18C(a1, a2, &qword_267EC8528);
}

uint64_t sub_21F2FD18C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v49 = a2;
  uint64_t v7 = sub_21F420BC8();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v44 = v3;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    long long v46 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v45 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    uint64_t v47 = v8;
    uint64_t v48 = v6;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        uint64_t v18 = (v11 - 1) & v11;
        int64_t v53 = v14;
        unint64_t v19 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v20 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v20 >= v45) {
          goto LABEL_36;
        }
        unint64_t v21 = v46[v20];
        int64_t v22 = v14 + 1;
        if (!v21)
        {
          int64_t v22 = v20 + 1;
          if (v20 + 1 >= v45) {
            goto LABEL_36;
          }
          unint64_t v21 = v46[v22];
          if (!v21)
          {
            int64_t v23 = v20 + 2;
            if (v23 >= v45)
            {
LABEL_36:
              swift_release();
              uint64_t v4 = v44;
              if (v49)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v6 + 32);
                if (v43 >= 64) {
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v46 = -1 << v43;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v46[v23];
            if (!v21)
            {
              while (1)
              {
                int64_t v22 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v22 >= v45) {
                  goto LABEL_36;
                }
                unint64_t v21 = v46[v22];
                ++v23;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v22 = v23;
          }
        }
LABEL_21:
        uint64_t v18 = (v21 - 1) & v21;
        int64_t v53 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      unint64_t v54 = v18;
      uint64_t v24 = 8 * v19;
      uint64_t v25 = *(void *)(*(void *)(v6 + 48) + v24);
      uint64_t v26 = *(void *)(*(void *)(v6 + 56) + v24);
      if ((v49 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      uint64_t v52 = v26;
      sub_21F420EF8();
      uint64_t v51 = v25;
      sub_21F382B74(v25, v55);
      uint64_t v27 = v55[0];
      uint64_t v28 = v55[1];
      uint64_t v30 = v55[2];
      uint64_t v29 = v55[3];
      uint64_t v32 = v55[4];
      uint64_t v31 = v55[5];
      uint64_t v34 = v55[6];
      uint64_t v33 = v55[7];
      uint64_t v35 = v55[8];
      uint64_t v50 = v55[9];
      sub_21F301860((uint64_t)v55, (uint64_t)v56);
      if (v57 == 1)
      {
        sub_21F420F18();
      }
      else
      {
        uint64_t v58 = v27;
        uint64_t v59 = v28;
        uint64_t v60 = v30;
        uint64_t v61 = v29;
        uint64_t v62 = v32;
        uint64_t v63 = v31;
        uint64_t v64 = v34;
        uint64_t v65 = v33;
        uint64_t v66 = v35;
        uint64_t v67 = v50;
        sub_21F420F18();
        sub_21F362CC4();
        sub_21F2B4758(v55);
      }
      uint64_t v8 = v47;
      uint64_t v6 = v48;
      unint64_t v11 = v54;
      uint64_t result = sub_21F420F48();
      uint64_t v36 = -1 << *(unsigned char *)(v47 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
        int64_t v14 = v53;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        int64_t v14 = v53;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v12 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v15 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v47 + 48) + v16) = v51;
      *(void *)(*(void *)(v47 + 56) + v16) = v52;
      ++*(void *)(v47 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_21F2FD52C(uint64_t a1, char a2)
{
  return sub_21F2FD538(a1, a2, &qword_267EC8520);
}

uint64_t sub_21F2FD538(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_21F420BC8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_21F420EF8();
    sub_21F420148();
    uint64_t result = sub_21F420F48();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_21F2FD84C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_21F420878();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F420EF8();
        swift_bridgeObjectRetain();
        sub_21F420148();
        uint64_t v9 = sub_21F420F48();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          int64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          unint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F2FDA24(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v33 = a2 + 64;
    unint64_t result = sub_21F420878();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v30 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v32 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v30(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
        uint64_t v18 = sub_21F420028();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v19 < v31 || a1 < (uint64_t)v19) {
            goto LABEL_6;
          }
        }
        else if (v19 < v31 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        int64_t v22 = v15 * a1;
        if (v15 * a1 < v17 || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v17 + v15))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v22 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v23 = *(void *)(a2 + 56);
        unint64_t result = v23 + v22;
        if (v22 < v17 || result >= v23 + v17 + v15)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v22 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v33;
      }
      while (((*(void *)(v33 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    unint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *unint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F2FDD28(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_21F420878();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_21F420EF8();
        swift_bridgeObjectRetain();
        sub_21F420148();
        uint64_t v9 = sub_21F420F48();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          unint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F2FDF00(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_21F420878();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      char v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      unint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_21F30198C((unint64_t *)&qword_26AD3A838, MEMORY[0x263F07508]);
        uint64_t v19 = sub_21F420028();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0)
                                        - 8)
                            + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F2FE248(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_21F420878();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        unint64_t v11 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v13 = *v11;
        unint64_t v12 = v11[1];
        sub_21F420EF8();
        sub_21F420F08();
        if (v12 > 2)
        {
          swift_bridgeObjectRetain();
          sub_21F420148();
        }
        uint64_t v14 = sub_21F420F48();
        unint64_t result = sub_21F2B929C(v13, v12);
        unint64_t v15 = v14 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_13:
          uint64_t v16 = *(void *)(a2 + 48);
          uint64_t v17 = (_OWORD *)(v16 + 16 * v3);
          int64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (v3 != v6 || v17 >= v18 + 1) {
            *uint64_t v17 = *v18;
          }
          uint64_t v19 = *(void *)(a2 + 56);
          unint64_t v20 = v19 + 40 * v3;
          BOOL v21 = (long long *)(v19 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v20 >= (unint64_t)v21 + 40))
          {
            long long v9 = *v21;
            long long v10 = v21[1];
            *(void *)(v20 + 32) = *((void *)v21 + 4);
            *(_OWORD *)unint64_t v20 = v9;
            *(_OWORD *)(v20 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_21F2FE474()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7D00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    BOOL v21 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FE62C()
{
  return sub_21F2FF774((uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification, &qword_267EC85C8, (uint64_t (*)(void))type metadata accessor for TurnPairRestatementClassification);
}

void *sub_21F2FE660()
{
  return sub_21F2FFC98(&qword_267EC8538);
}

void *sub_21F2FE66C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DA0);
  uint64_t v29 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_21F420BB8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v29 = v3;
    return result;
  }
  unint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    unint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v26);
    ++v8;
    if (!v27)
    {
      int64_t v8 = v26 + 1;
      if (v26 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v5 + 8 * v8);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v27 - 1) & v27;
    unint64_t v14 = __clz(__rbit64(v27)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 56 * v14;
    uint64_t v16 = *(void *)(v1 + 48) + 56 * v14;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 40);
    LOWORD(v16) = *(_WORD *)(v16 + 48);
    uint64_t v23 = 2 * v14;
    __int16 v24 = *(_WORD *)(*(void *)(v1 + 56) + v23);
    uint64_t v25 = *(void *)(v3 + 48) + v15;
    *(void *)uint64_t v25 = v18;
    *(void *)(v25 + 8) = v17;
    *(void *)(v25 + 16) = v19;
    *(void *)(v25 + 24) = v20;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v22;
    *(_WORD *)(v25 + 48) = v16;
    *(_WORD *)(*(void *)(v3 + 56) + v23) = v24;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_21F2AA1D0(v19, v20);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v12) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v5 + 8 * v28);
  if (v27)
  {
    int64_t v8 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v5 + 8 * v8);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FE864()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v21 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v22 = 4 * v15;
    uint64_t v23 = *(void *)(v2 + 56) + v22;
    char v24 = *(unsigned char *)v23;
    __int16 v25 = *(_WORD *)(v23 + 1);
    LOBYTE(v23) = *(unsigned char *)(v23 + 3);
    int64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v26 = v18;
    v26[1] = v19;
    void v26[2] = v21;
    void v26[3] = v20;
    uint64_t v27 = *(void *)(v4 + 56) + v22;
    *(unsigned char *)uint64_t v27 = v24;
    *(unsigned char *)(v27 + 3) = v23;
    *(_WORD *)(v27 + 1) = v25;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FEA3C()
{
  return sub_21F2FED68(&qword_267EC7DE0);
}

void *sub_21F2FEA48()
{
  return sub_21F2FED68(&qword_267EC7E00);
}

void *sub_21F2FEA54()
{
  return sub_21F3005BC(&qword_267EC7E18);
}

void *sub_21F2FEA60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v30 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8598);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_21F420BB8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v9;
    return result;
  }
  int64_t v30 = v1;
  unint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v36 = v7;
  uint64_t v37 = v9;
  *(void *)(v9 + 16) = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v31 = v7 + 64;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  BOOL v33 = v3 + 2;
  uint64_t v17 = v34;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v12;
    if (!v28)
    {
      int64_t v12 = v27 + 1;
      if (v27 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v12);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v28 - 1) & v28;
    unint64_t v19 = __clz(__rbit64(v28)) + (v12 << 6);
LABEL_9:
    uint64_t v20 = v36;
    unint64_t v21 = v3[9] * v19;
    uint64_t v22 = (void (*)(char *, unint64_t, uint64_t))v3[2];
    v22(v17, *(void *)(v36 + 48) + v21, v2);
    unint64_t v23 = *(void *)(v20 + 56) + v21;
    char v24 = v35;
    v22(v35, v23, v2);
    uint64_t v25 = v37;
    int64_t v26 = (void (*)(unint64_t, char *, uint64_t))v3[4];
    v26(*(void *)(v37 + 48) + v21, v17, v2);
    unint64_t result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v25 + 56) + v21, v24, v2);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v32)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v30;
    uint64_t v9 = v37;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v12 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v12);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_21F2FED5C()
{
  return sub_21F2FED68(&qword_267EC85B8);
}

void *sub_21F2FED68(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_21F420BB8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    swift_retain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FEF0C()
{
  return sub_21F3001F8(&qword_267EC7D18);
}

void *sub_21F2FEF18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8558);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FF0C4()
{
  return sub_21F3001F8(&qword_267EC8550);
}

void *sub_21F2FF0D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    char v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 8);
    *char v24 = v18;
    v24[1] = v19;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FF2B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    long long v21 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *uint64_t v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FF46C()
{
  uint64_t v35 = sub_21F41F228();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC85A8);
  int64_t v29 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_21F420BB8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    unint64_t result = (void *)swift_release();
    int64_t v27 = v29;
LABEL_25:
    *int64_t v27 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v37 = v5;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v37 + 16) = *(void *)(v3 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v36 = v3;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v3 + 64);
  uint64_t v30 = v3 + 64;
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v32 = v1 + 32;
  uint64_t v33 = v1 + 16;
  int64_t v13 = v34;
  uint64_t v12 = v35;
  uint64_t v14 = v37;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v8 << 6);
      uint64_t v17 = v36;
      goto LABEL_9;
    }
    int64_t v24 = v8 + 1;
    uint64_t v17 = v36;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v24);
    ++v8;
    if (!v25)
    {
      int64_t v8 = v24 + 1;
      if (v24 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v30 + 8 * v8);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v13, *(void *)(v17 + 48) + v18, v12);
    uint64_t v19 = 2 * v16;
    uint64_t v20 = (char *)(*(void *)(v17 + 56) + v19);
    char v21 = *v20;
    char v22 = v20[1];
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v14 + 48) + v18, v13, v12);
    unint64_t v23 = (unsigned char *)(*(void *)(v14 + 56) + v19);
    *unint64_t v23 = v21;
    v23[1] = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v31)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    int64_t v27 = v29;
    uint64_t v5 = v37;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v30 + 8 * v26);
  if (v25)
  {
    int64_t v8 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v8 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v8);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_21F2FF740()
{
  return sub_21F2FF774(type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata, &qword_267EC8590, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
}

void *sub_21F2FF774(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v44 = a3;
  uint64_t v5 = a1(0);
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (char *)&v35 - v6;
  uint64_t v41 = sub_21F41F228();
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v35 = v3;
  uint64_t v9 = *v3;
  uint64_t v10 = sub_21F420BB8();
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v46 = v10;
  if (!v11)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v34 = v46;
    uint64_t v33 = v35;
LABEL_25:
    uint64_t *v33 = v34;
    return result;
  }
  uint64_t v12 = v10;
  unint64_t result = (void *)(v10 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v9 || (unint64_t)result >= v9 + 64 + 8 * v14)
  {
    unint64_t result = memmove(result, (const void *)(v9 + 64), 8 * v14);
    uint64_t v12 = v46;
  }
  uint64_t v36 = v9 + 64;
  int64_t v15 = 0;
  *(void *)(v12 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v45 = v9;
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v39 = v7 + 16;
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v38 = v7 + 32;
  uint64_t v20 = v40;
  uint64_t v19 = v41;
  uint64_t v21 = (uint64_t)v42;
  for (i = v46; ; unint64_t result = (void *)sub_21F301A3C(v21, *(void *)(i + 56) + v29, v28))
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v15 << 6);
      uint64_t v25 = v45;
      goto LABEL_9;
    }
    int64_t v30 = v15 + 1;
    uint64_t v25 = v45;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      int64_t v15 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v15);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v24 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_9:
    unint64_t v26 = *(void *)(v7 + 72) * v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v20, *(void *)(v25 + 48) + v26, v19);
    uint64_t v27 = *(void *)(v25 + 56);
    uint64_t v28 = v44;
    unint64_t v29 = *(void *)(v43 + 72) * v24;
    sub_21F3019D4(v27 + v29, v21, v44);
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(void *)(i + 48) + v26, v20, v19);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v33 = v35;
    uint64_t v34 = v46;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v15 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v15);
    ++v32;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_21F2FFAE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FFC8C()
{
  return sub_21F2FFC98(&qword_267EC8540);
}

void *sub_21F2FFC98(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_21F420BB8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 4 * v16;
    LODWORD(v18) = *(_DWORD *)(*(void *)(v3 + 56) + v21);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = v20;
    v22[1] = v19;
    *(_DWORD *)(*(void *)(v5 + 56) + v21) = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FFE40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8570);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F2FFFD4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7DE8);
  int64_t v32 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_21F420BB8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *int64_t v32 = v3;
    return result;
  }
  unint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    unint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v12) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v5 + 8 * v29);
    ++v8;
    if (!v30)
    {
      int64_t v8 = v29 + 1;
      if (v29 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v5 + 8 * v8);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v30 - 1) & v30;
    unint64_t v14 = __clz(__rbit64(v30)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = v14 << 6;
    unint64_t v20 = *(void *)(v1 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 56);
    int64_t v25 = (void *)(*(void *)(v3 + 48) + v15);
    long long v26 = *(_OWORD *)(v20 + 24);
    long long v27 = *(_OWORD *)(v20 + 40);
    *int64_t v25 = v17;
    v25[1] = v18;
    unint64_t v28 = *(void *)(v3 + 56) + v19;
    *(void *)unint64_t v28 = v21;
    *(void *)(v28 + 8) = v22;
    *(void *)(v28 + 16) = v23;
    *(_OWORD *)(v28 + 24) = v26;
    *(_OWORD *)(v28 + 40) = v27;
    *(void *)(v28 + 56) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v12) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v5 + 8 * v31);
  if (v30)
  {
    int64_t v8 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v5 + 8 * v8);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F3001EC()
{
  return sub_21F3001F8(&qword_267EC7DF0);
}

void *sub_21F3001F8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_21F420BB8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F3003A8()
{
  return sub_21F3005BC(&qword_26AD3AEF8);
}

void *sub_21F3003B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_21F420BB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_21F29F920(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v18;
    v21[1] = v19;
    sub_21F2A09A8(v26, *(void *)(v4 + 56) + v20);
    unint64_t result = (void *)sub_21F3018C8(v18, v19);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F3005A4()
{
  return sub_21F3005BC(&qword_267EC7DC8);
}

void *sub_21F3005B0()
{
  return sub_21F3005BC(&qword_26AD3AF00);
}

void *sub_21F3005BC(uint64_t *a1)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  long long v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_21F420BB8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *long long v26 = v9;
    return result;
  }
  unint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v27 = v7 + 64;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  uint64_t v30 = v4 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F300850(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v52 = a5;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  uint64_t v45 = a1;
  uint64_t v46 = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v47 = v7;
  uint64_t v48 = 0;
  uint64_t v49 = v10 & v8;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F3DBE68(&v40);
  uint64_t v11 = *((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    while (1)
    {
      uint64_t v20 = v40;
      uint64_t v21 = v41;
      uint64_t v22 = v42;
      uint64_t v23 = v43;
      uint64_t v39 = v44;
      int64_t v24 = (void *)*v52;
      unint64_t v26 = sub_21F2F7E18(v40, v11);
      uint64_t v27 = v24[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28)) {
        break;
      }
      char v30 = v25;
      if (v24[3] >= v29)
      {
        if ((a4 & 1) == 0) {
          sub_21F2FF0D0();
        }
      }
      else
      {
        sub_21F2FAA94(v29, a4 & 1);
        unint64_t v31 = sub_21F2F7E18(v20, v11);
        if ((v30 & 1) != (v32 & 1)) {
          goto LABEL_19;
        }
        unint64_t v26 = v31;
      }
      uint64_t v33 = (void *)*v52;
      if (v30)
      {
        uint64_t v13 = 32 * v26;
        uint64_t v14 = (uint64_t *)(v33[7] + v13);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        uint64_t v18 = v14[2];
        uint64_t v17 = v14[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v19 = (void *)(v33[7] + v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *unint64_t v19 = v16;
        v19[1] = v15;
        void v19[2] = v18;
        v19[3] = v17;
      }
      else
      {
        v33[(v26 >> 6) + 8] |= 1 << v26;
        uint64_t v34 = (uint64_t *)(v33[6] + 16 * v26);
        uint64_t *v34 = v20;
        v34[1] = v11;
        uint64_t v35 = (void *)(v33[7] + 32 * v26);
        *uint64_t v35 = v21;
        v35[1] = v22;
        v35[2] = v23;
        v35[3] = v39;
        uint64_t v36 = v33[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_18;
        }
        v33[2] = v38;
      }
      sub_21F3DBE68(&v40);
      uint64_t v11 = *((void *)&v40 + 1);
      a4 = 1;
      if (!*((void *)&v40 + 1)) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_21F420E68();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_21F2ABEF8();
    return swift_release();
  }
  return result;
}

uint64_t sub_21F300AB8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_21F300CB8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = 16 * v16;
    uint64_t v21 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    int64_t v24 = (uint64_t *)(*(void *)(a4 + 56) + v20);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    *uint64_t v11 = v22;
    v11[1] = v23;
    void v11[2] = v26;
    v11[3] = v25;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_21F300EDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[5];
  *(void *)(a2 + 8) = a1[1];
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 3);
  *(void *)(a2 + 40) = v4;
  *(void *)a2 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s28SiriPrivateLearningInference19SlotsClassificationV17TurnSlotValuePairV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_21F420DF8(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_21F420DF8() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21F300FF4(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v15 = result + 40;
  unint64_t v16 = *(void *)(result + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (uint64_t i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(i - 1);
      uint64_t v9 = *i;
      swift_bridgeObjectRetain_n();
      char v11 = sub_21F2CD138(&v17, v10, v9);
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return v5;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_21F2C3220(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v18;
    }
    unint64_t v13 = *(void *)(v5 + 16);
    unint64_t v12 = *(void *)(v5 + 24);
    if (v13 >= v12 >> 1)
    {
      uint64_t result = sub_21F2C3220(v12 > 1, v13 + 1, 1);
      uint64_t v5 = v18;
    }
    *(void *)(v5 + 16) = v13 + 1;
    uint64_t v14 = v5 + 16 * v13;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v9;
    uint64_t v3 = v15;
    unint64_t v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

void *initializeBufferWithCopyOfBuffer for TurnSlotValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TurnSlotValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for TurnSlotValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TurnSlotValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TurnSlotValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TurnSlotValue()
{
  return &type metadata for TurnSlotValue;
}

uint64_t destroy for SlotsClassification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SlotsClassification(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SlotsClassification(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SlotsClassification(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotsClassification(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SlotsClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotsClassification()
{
  return &type metadata for SlotsClassification;
}

uint64_t destroy for Storefront()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Storefront(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Storefront(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for Storefront(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Storefront(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Storefront(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotsClassification.TurnSlotValuePair()
{
  return &type metadata for SlotsClassification.TurnSlotValuePair;
}

uint64_t sub_21F301860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F3018C8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F3018DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_21F301938(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F30198C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F3019D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F301A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F301AAC()
{
  type metadata accessor for MediaInAppFollowupClassifier();
  __swift_instantiateConcreteTypeFromMangledName(qword_267EC85E0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC85D0 = 91;
  *(void *)algn_267EC85D8 = 0xE100000000000000;
  return result;
}

uint64_t MediaInAppFollowupClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MediaInAppFollowupClassifier.init()()
{
  return v0;
}

uint64_t MediaInAppFollowupClassifier.deinit()
{
  return v0;
}

uint64_t MediaInAppFollowupClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F301B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v29 - v7;
  if (*(void *)(a2 + 8))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    sub_21F29E694(v9, (uint64_t)v6);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_21F41F198();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v6, 1, v10) == 1)
    {
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_21F29E8D4(v13);
      char v15 = v14;
      swift_bridgeObjectRelease();
      if (v15)
      {
        uint64_t v16 = 1;
      }
      else
      {
        sub_21F41F158();
        uint64_t v16 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, v16, 1, v10);
      sub_21F29FA48((uint64_t)v6, &qword_26AD38710);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v6, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    if (v12(v8, 1, v10) == 1)
    {
      sub_21F29FA48((uint64_t)v8, &qword_26AD38710);
      return 0;
    }
    else
    {
      sub_21F41F168();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
      return v27;
    }
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_21F41FF28();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AD3C910);
    uint64_t v18 = sub_21F41FF08();
    os_log_type_t v19 = sub_21F420668();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v30 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      if (qword_267EC71E8 != -1) {
        swift_once();
      }
      uint64_t v22 = qword_267EC85D0;
      unint64_t v23 = *(void *)algn_267EC85D8;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_21F2A02C4(v22, v23, &v30);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v18, v19, "%s No Siri play event found. Using the last UEI timestamp of the final turn.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v21, -1, -1);
      MEMORY[0x223C4B440](v20, -1, -1);
    }

    type metadata accessor for FeaturisedTurn(0);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_21F29DE04(v24);
    swift_bridgeObjectRelease();
  }
  return v25;
}

uint64_t sub_21F301F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = sub_21F41F198();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 + 32);
  long long v16 = *(_OWORD *)(a3 + 16);
  v45[0] = *(_OWORD *)a3;
  v45[1] = v16;
  uint64_t v46 = v15;
  double v17 = COERCE_DOUBLE(sub_21F301B64(a1, (uint64_t)v45));
  if (v18)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_21F41FF28();
    __swift_project_value_buffer(v25, (uint64_t)qword_26AD3C910);
    uint64_t v26 = sub_21F41FF08();
    os_log_type_t v27 = sub_21F420668();
    if (os_log_type_enabled(v26, v27))
    {
      BOOL v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(void *)&v45[0] = v29;
      *(_DWORD *)BOOL v28 = 136315138;
      if (qword_267EC71E8 != -1) {
        swift_once();
      }
      uint64_t v30 = qword_267EC85D0;
      unint64_t v31 = *(void *)algn_267EC85D8;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_21F2A02C4(v30, v31, (uint64_t *)v45);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v26, v27, "%s Unable to find start timestamp to use when computing time to followup", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v29, -1, -1);
      MEMORY[0x223C4B440](v28, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v19 = swift_bridgeObjectRetain();
    sub_21F29E694(v19, (uint64_t)v8);
    swift_bridgeObjectRelease();
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v20(v8, 1, v11) == 1)
    {
      uint64_t v43 = v14;
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_21F29E8D4(v21);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t v24 = 1;
      }
      else
      {
        sub_21F41F158();
        uint64_t v24 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v24, 1, v11);
      sub_21F29FA48((uint64_t)v8, &qword_26AD38710);
      char v14 = v43;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    if (v20(v10, 1, v11) == 1)
    {
      sub_21F29FA48((uint64_t)v10, &qword_26AD38710);
LABEL_26:
      double v17 = 0.0;
      return *(void *)&v17;
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_21F41F168();
    double v33 = v32 - v17;
    if (v32 - v17 >= 0.0)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      double v17 = v33;
    }
    else
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_21F41FF28();
      __swift_project_value_buffer(v34, (uint64_t)qword_26AD3C910);
      uint64_t v35 = sub_21F41FF08();
      os_log_type_t v36 = sub_21F420678();
      if (!os_log_type_enabled(v35, v36))
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        goto LABEL_26;
      }
      BOOL v37 = v14;
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(void *)&v45[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      if (qword_267EC71E8 != -1) {
        swift_once();
      }
      uint64_t v40 = qword_267EC85D0;
      unint64_t v41 = *(void *)algn_267EC85D8;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_21F2A02C4(v40, v41, (uint64_t *)v45);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v35, v36, "%s Time to followup was less than 0 seconds! Returning nil followup time.", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v39, -1, -1);
      MEMORY[0x223C4B440](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v37, v11);
      double v17 = 0.0;
    }
  }
  return *(void *)&v17;
}

uint64_t sub_21F30259C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 8)
    || (uint64_t v2 = swift_bridgeObjectRetain(),
        sub_21F29E1C8(v2, &v35),
        swift_bridgeObjectRelease(),
        (uint64_t v3 = *((void *)&v35 + 1)) == 0))
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_21F41FF28();
    __swift_project_value_buffer(v28, (uint64_t)qword_26AD3C910);
    uint64_t v20 = sub_21F41FF08();
    os_log_type_t v29 = sub_21F420668();
    if (!os_log_type_enabled(v20, v29)) {
      goto LABEL_18;
    }
    char v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(void *)&long long v35 = v23;
    *(_DWORD *)char v22 = 136315138;
    if (qword_267EC71E8 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_267EC85D0;
    unint64_t v31 = *(void *)algn_267EC85D8;
    swift_bridgeObjectRetain();
    v50[0] = sub_21F2A02C4(v30, v31, (uint64_t *)&v35);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    os_log_type_t v26 = v29;
    os_log_type_t v27 = "%s No media item id found in Siri play event, skipping.";
    goto LABEL_17;
  }
  uint64_t v4 = v35;
  uint64_t v6 = v36;
  uint64_t v5 = v37;
  uint64_t v7 = v38;
  uint64_t v8 = v39;
  uint64_t v9 = v40;
  char v10 = v41;
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_21F29E1C8(v11, &v35);
  swift_bridgeObjectRelease();
  long long v12 = v35;
  uint64_t v14 = v36;
  uint64_t v13 = v37;
  uint64_t v16 = v38;
  uint64_t v15 = v39;
  uint64_t v17 = v40;
  char v18 = v41;
  v50[0] = v4;
  v50[1] = v3;
  v50[2] = v6;
  v50[3] = v5;
  void v50[4] = v7;
  v50[5] = v8;
  v50[6] = v9;
  char v51 = v10;
  if (*((void *)&v35 + 1))
  {
    v41 &= 1u;
    uint64_t v33 = v35;
    char v34 = _s28SiriPrivateLearningInference9MediaItemV2eeoiySbAC_ACtFZ_0((uint64_t)v50, (uint64_t)&v35);
    sub_21F303F5C(v4, v3);
    sub_21F2A9FD0(v33, *((uint64_t *)&v12 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F2A9FD0(v4, v3);
    if (v34)
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_21F41FF28();
      __swift_project_value_buffer(v19, (uint64_t)qword_26AD3C910);
      uint64_t v20 = sub_21F41FF08();
      os_log_type_t v21 = sub_21F420668();
      if (!os_log_type_enabled(v20, v21)) {
        goto LABEL_18;
      }
      char v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(void *)&long long v35 = v23;
      *(_DWORD *)char v22 = 136315138;
      if (qword_267EC71E8 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_267EC85D0;
      unint64_t v25 = *(void *)algn_267EC85D8;
      swift_bridgeObjectRetain();
      v50[0] = sub_21F2A02C4(v24, v25, (uint64_t *)&v35);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      os_log_type_t v26 = v21;
      os_log_type_t v27 = "%s Circular in app follow up detected, skipping.";
LABEL_17:
      _os_log_impl(&dword_21F29A000, v20, v26, v27, v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v23, -1, -1);
      MEMORY[0x223C4B440](v22, -1, -1);
LABEL_18:

      return 0;
    }
  }
  else
  {
    *(void *)&long long v35 = v4;
    *((void *)&v35 + 1) = v3;
    uint64_t v36 = v6;
    uint64_t v37 = v5;
    uint64_t v38 = v7;
    uint64_t v39 = v8;
    uint64_t v40 = v9;
    char v41 = v10;
    uint64_t v42 = v12;
    uint64_t v43 = 0;
    uint64_t v44 = v14;
    uint64_t v45 = v13;
    uint64_t v46 = v16;
    uint64_t v47 = v15;
    uint64_t v48 = v17;
    char v49 = v18;
    sub_21F303EC8((uint64_t *)&v35);
  }
  return 1;
}

uint64_t sub_21F302A30(uint64_t a1, uint64_t a2)
{
  uint64_t v142 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8258);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v131 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v131 - v10;
  uint64_t v12 = type metadata accessor for MediaPlayClassification();
  uint64_t v144 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v139 = (char *)&v131 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v141 = (ValueMetadata *)((char *)&v131 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v140 = (uint64_t)&v131 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v131 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  os_log_type_t v27 = (char *)&v131 - v26;
  MEMORY[0x270FA5388](v25);
  os_log_type_t v29 = (char *)&v131 - v28;
  uint64_t v30 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  char v34 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    uint64_t v138 = v31;
    sub_21F303D98(a1+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * (v35 - 1), (uint64_t)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FeaturisedTurn);
    if (isSiriPlayMedia(_:)())
    {
      uint64_t v133 = v6;
      uint64_t v132 = a1;
      uint64_t v135 = v9;
      uint64_t v136 = v34;
      uint64_t v36 = v142;
      uint64_t v37 = *(void *)(v142 + 16);
      Swift::Double_optional v137 = v24;
      uint64_t v134 = v15;
      if (v37)
      {
        uint64_t v38 = v142 + 32;
        uint64_t v39 = (void (**)(char *, void, uint64_t, uint64_t))(v144 + 56);
        uint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48);
        swift_bridgeObjectRetain();
        uint64_t v41 = MEMORY[0x263F8EE78];
        uint64_t v143 = v27;
        do
        {
          sub_21F29F920(v38, (uint64_t)&v150);
          sub_21F29F920((uint64_t)&v150, (uint64_t)&v145);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8A0);
          int v42 = swift_dynamicCast();
          (*v39)(v11, v42 ^ 1u, 1, v12);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v150);
          if ((*v40)(v11, 1, v12) == 1)
          {
            sub_21F29FA48((uint64_t)v11, &qword_267EC8258);
          }
          else
          {
            sub_21F2DEAA4((uint64_t)v11, (uint64_t)v29);
            sub_21F2DEAA4((uint64_t)v29, (uint64_t)v27);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v41 = sub_21F2A748C(0, *(void *)(v41 + 16) + 1, 1, v41);
            }
            unint64_t v44 = *(void *)(v41 + 16);
            unint64_t v43 = *(void *)(v41 + 24);
            if (v44 >= v43 >> 1) {
              uint64_t v41 = sub_21F2A748C(v43 > 1, v44 + 1, 1, v41);
            }
            *(void *)(v41 + 16) = v44 + 1;
            uint64_t v45 = v41
                + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80))
                + *(void *)(v144 + 72) * v44;
            os_log_type_t v27 = v143;
            sub_21F2DEAA4((uint64_t)v143, v45);
          }
          v38 += 40;
          --v37;
        }
        while (v37);
        uint64_t v36 = swift_bridgeObjectRelease();
        char v34 = v136;
        uint64_t v24 = v137;
      }
      else
      {
        uint64_t v41 = MEMORY[0x263F8EE78];
      }
      MEMORY[0x270FA5388](v36);
      *(&v131 - 2) = (uint64_t)v34;
      uint64_t v62 = sub_21F2C88D0((uint64_t (*)(char *))sub_21F303D48, (uint64_t)(&v131 - 4), v41);
      uint64_t v63 = v62;
      uint64_t v64 = *(void *)(v62 + 16);
      uint64_t v65 = (uint64_t)v141;
      if (v64)
      {
        uint64_t v66 = v62 + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
        uint64_t v67 = *(void *)(v144 + 72);
        swift_bridgeObjectRetain();
        uint64_t v68 = v66;
        uint64_t v143 = (char *)v64;
        while (1)
        {
          sub_21F303D98(v68, v65, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
          if (*(unsigned char *)(v65 + 8) != 1) {
            break;
          }
          sub_21F303E00(v65, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
          v68 += v67;
          if (!--v64)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_47;
          }
        }
        uint64_t v131 = v63;
        swift_bridgeObjectRelease();
        uint64_t v73 = v140;
        sub_21F2DEAA4(v65, v140);
        sub_21F2DEAA4(v73, (uint64_t)v24);
        uint64_t v74 = *(void *)&v34[*(int *)(v138 + 28)];
        uint64_t v75 = *(void *)(v74 + 16);
        if (v75)
        {
          uint64_t v76 = *((void *)v137 + 2);
          unint64_t v77 = *((void *)v137 + 3);
          uint64_t v78 = (unint64_t *)(v74 + 64);
          while (1)
          {
            uint64_t v80 = *(v78 - 4);
            unint64_t v79 = *(v78 - 3);
            uint64_t v81 = *(v78 - 2);
            unint64_t v82 = *v78;
            unint64_t v141 = (ValueMetadata *)*(v78 - 1);
            uint64_t v142 = v81;
            if (v80 == v76 && v79 == v77) {
              break;
            }
            if (sub_21F420DF8()) {
              goto LABEL_59;
            }
            v78 += 5;
            if (!--v75) {
              goto LABEL_46;
            }
          }
          uint64_t v80 = v76;
          unint64_t v79 = v77;
LABEL_59:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v91 = 0;
          uint64_t v92 = (uint64_t)v134;
          uint64_t v93 = (uint64_t)v139;
          while (1)
          {
            uint64_t v94 = (char *)(v91 + 1);
            if (__OFADD__(v91, 1)) {
              break;
            }
            sub_21F303D98(v66, v93, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
            if (*(unsigned char *)(v93 + 8) == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v96 = (uint64_t)v135;
              sub_21F2DEAA4(v93, (uint64_t)v135);
              uint64_t v95 = 0;
LABEL_65:
              uint64_t v97 = v144;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v96, v95, 1, v12);
              swift_bridgeObjectRelease();
              uint64_t v98 = (uint64_t)v133;
              sub_21F303E60(v96, (uint64_t)v133);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v98, 1, v12) == 1)
              {
                unint64_t v99 = 0;
                char v100 = 0;
                uint64_t v101 = 0;
                uint64_t v102 = 0;
                uint64_t v103 = 0;
              }
              else
              {
                sub_21F2DEAA4(v98, v92);
                Array<A>.findEvent(eventId:)(*(void *)(v92 + 16), *(void *)(v92 + 24), v132, &v150);
                sub_21F303E00(v92, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
                uint64_t v103 = v150;
                uint64_t v102 = v151;
                uint64_t v101 = v152;
                char v100 = v153;
                unint64_t v99 = v154;
              }
              unint64_t v104 = v141;
              uint64_t v105 = v142;
              uint64_t v150 = v80;
              unint64_t v151 = v79;
              uint64_t v152 = v142;
              long long v153 = v141;
              unint64_t v154 = v82;
              uint64_t v145 = v103;
              uint64_t v146 = v102;
              uint64_t v147 = v101;
              uint64_t v148 = v100;
              unint64_t v149 = v99;
              uint64_t v106 = sub_21F301F64((uint64_t)v136, (uint64_t)&v150, (uint64_t)&v145);
              if (v107)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_21F2BCCB4(v103, v102);
                if (qword_26AD38AC0 != -1) {
                  swift_once();
                }
                long long v153 = &type metadata for PIMSConstraintMismatch;
                unint64_t v154 = sub_21F2DE8C0();
                uint64_t v150 = 0xD000000000000016;
                unint64_t v151 = 0x800000021F433740;
                LOBYTE(v152) = 3;
                sub_21F41F708();
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v150);
                uint64_t v116 = (uint64_t)v136;
                uint64_t v117 = (uint64_t)v137;
                if (qword_26AD38998 != -1) {
                  swift_once();
                }
                uint64_t v118 = sub_21F41FF28();
                __swift_project_value_buffer(v118, (uint64_t)qword_26AD3C910);
                uint64_t v119 = sub_21F41FF08();
                os_log_type_t v120 = sub_21F420668();
                if (os_log_type_enabled(v119, v120))
                {
                  uint64_t v121 = (uint8_t *)swift_slowAlloc();
                  uint64_t v122 = swift_slowAlloc();
                  uint64_t v150 = v122;
                  *(_DWORD *)uint64_t v121 = 136315138;
                  if (qword_267EC71E8 != -1) {
                    swift_once();
                  }
                  uint64_t v123 = qword_267EC85D0;
                  unint64_t v124 = *(void *)algn_267EC85D8;
                  swift_bridgeObjectRetain();
                  uint64_t v145 = sub_21F2A02C4(v123, v124, &v150);
                  sub_21F4207D8();
                  swift_bridgeObjectRelease();
                  os_log_type_t v125 = v120;
                  uint64_t v126 = "%s Failed to compute the time taken to followup. Skipping.";
LABEL_85:
                  _os_log_impl(&dword_21F29A000, v119, v125, v126, v121, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x223C4B440](v122, -1, -1);
                  MEMORY[0x223C4B440](v121, -1, -1);
                }
              }
              else
              {
                uint64_t v144 = v106;
                uint64_t v150 = v80;
                unint64_t v151 = v79;
                uint64_t v152 = v105;
                long long v153 = v104;
                unint64_t v154 = v82;
                uint64_t v145 = v103;
                uint64_t v146 = v102;
                uint64_t v147 = v101;
                uint64_t v148 = v100;
                unint64_t v149 = v99;
                char v108 = sub_21F30259C((uint64_t)&v150, (uint64_t)&v145);
                sub_21F2BCCB4(v103, v102);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v108)
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7790);
                  uint64_t v89 = swift_allocObject();
                  *(_OWORD *)(v89 + 16) = xmmword_21F422460;
                  uint64_t v109 = (uint64_t)v135;
                  char v110 = (int *)type metadata accessor for MediaInAppFollowupClassification();
                  *(void *)(v89 + 56) = v110;
                  *(void *)(v89 + 64) = &off_26D0D2708;
                  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v89 + 32));
                  sub_21F303E60(v109, (uint64_t)boxed_opaque_existential_1);
                  uint64_t v112 = (uint64_t)v137;
                  sub_21F303D98((uint64_t)v137, (uint64_t)boxed_opaque_existential_1 + v110[5], (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
                  uint64_t v113 = (char *)boxed_opaque_existential_1 + v110[7];
                  uint64_t v114 = sub_21F41F228();
                  uint64_t v115 = (uint64_t)v136;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v113, v136, v114);
                  *(uint64_t *)((char *)boxed_opaque_existential_1 + v110[6]) = v144;
                  sub_21F29FA48(v109, &qword_267EC8258);
                  sub_21F303E00(v112, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
                  sub_21F303E00(v115, type metadata accessor for FeaturisedTurn);
                  return v89;
                }
                uint64_t v116 = (uint64_t)v136;
                uint64_t v117 = (uint64_t)v137;
                if (qword_26AD38998 != -1) {
                  swift_once();
                }
                uint64_t v127 = sub_21F41FF28();
                __swift_project_value_buffer(v127, (uint64_t)qword_26AD3C910);
                uint64_t v119 = sub_21F41FF08();
                os_log_type_t v128 = sub_21F420668();
                if (os_log_type_enabled(v119, v128))
                {
                  uint64_t v121 = (uint8_t *)swift_slowAlloc();
                  uint64_t v122 = swift_slowAlloc();
                  uint64_t v150 = v122;
                  *(_DWORD *)uint64_t v121 = 136315138;
                  if (qword_267EC71E8 != -1) {
                    swift_once();
                  }
                  uint64_t v129 = qword_267EC85D0;
                  unint64_t v130 = *(void *)algn_267EC85D8;
                  swift_bridgeObjectRetain();
                  uint64_t v145 = sub_21F2A02C4(v129, v130, &v150);
                  sub_21F4207D8();
                  swift_bridgeObjectRelease();
                  os_log_type_t v125 = v128;
                  uint64_t v126 = "%s Invalid in app follow up detected. Skipping";
                  goto LABEL_85;
                }
              }

              sub_21F29FA48((uint64_t)v135, &qword_267EC8258);
              sub_21F303E00(v117, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
              uint64_t v88 = v116;
              goto LABEL_55;
            }
            sub_21F303E00(v93, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
            ++v91;
            v66 += v67;
            if (v94 == v143)
            {
              swift_bridgeObjectRelease();
              uint64_t v95 = 1;
              uint64_t v96 = (uint64_t)v135;
              goto LABEL_65;
            }
          }
          __break(1u);
          goto LABEL_88;
        }
LABEL_46:
        swift_bridgeObjectRelease();
        sub_21F303E00((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for MediaPlayClassification);
        char v34 = v136;
LABEL_47:
        if (qword_26AD38998 != -1) {
          swift_once();
        }
        uint64_t v84 = sub_21F41FF28();
        __swift_project_value_buffer(v84, (uint64_t)qword_26AD3C910);
        unint64_t v54 = sub_21F41FF08();
        os_log_type_t v85 = sub_21F420668();
        if (os_log_type_enabled(v54, v85))
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          uint64_t v150 = v57;
          *(_DWORD *)uint64_t v56 = 136315138;
          if (qword_267EC71E8 != -1) {
            swift_once();
          }
          uint64_t v86 = qword_267EC85D0;
          unint64_t v87 = *(void *)algn_267EC85D8;
          swift_bridgeObjectRetain();
          uint64_t v145 = sub_21F2A02C4(v86, v87, &v150);
          sub_21F4207D8();
          swift_bridgeObjectRelease();
          os_log_type_t v60 = v85;
          uint64_t v61 = "%s No user followup detected. Skipping.";
          goto LABEL_53;
        }
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_21F41FF28();
      __swift_project_value_buffer(v69, (uint64_t)qword_26AD3C910);
      unint64_t v54 = sub_21F41FF08();
      os_log_type_t v70 = sub_21F420668();
      if (os_log_type_enabled(v54, v70))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        uint64_t v150 = v57;
        *(_DWORD *)uint64_t v56 = 136315138;
        if (qword_267EC71E8 != -1) {
          swift_once();
        }
        uint64_t v71 = qword_267EC85D0;
        unint64_t v72 = *(void *)algn_267EC85D8;
        swift_bridgeObjectRetain();
        uint64_t v145 = sub_21F2A02C4(v71, v72, &v150);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        os_log_type_t v60 = v70;
        uint64_t v61 = "%s No media play detected. Skipping.";
LABEL_53:
        _os_log_impl(&dword_21F29A000, v54, v60, v61, v56, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v57, -1, -1);
        MEMORY[0x223C4B440](v56, -1, -1);
      }
    }
    else
    {
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_21F41FF28();
      __swift_project_value_buffer(v53, (uint64_t)qword_26AD3C910);
      unint64_t v54 = sub_21F41FF08();
      os_log_type_t v55 = sub_21F420668();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        uint64_t v150 = v57;
        *(_DWORD *)uint64_t v56 = 136315138;
        if (qword_267EC71E8 != -1) {
          swift_once();
        }
        uint64_t v58 = qword_267EC85D0;
        unint64_t v59 = *(void *)algn_267EC85D8;
        swift_bridgeObjectRetain();
        uint64_t v145 = sub_21F2A02C4(v58, v59, &v150);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        os_log_type_t v60 = v55;
        uint64_t v61 = "%s Final turn was not a Siri playMedia request. Skipping";
        goto LABEL_53;
      }
    }
LABEL_54:

    uint64_t v88 = (uint64_t)v34;
LABEL_55:
    sub_21F303E00(v88, type metadata accessor for FeaturisedTurn);
    return MEMORY[0x263F8EE78];
  }
  if (qword_26AD38998 != -1) {
LABEL_88:
  }
    swift_once();
  uint64_t v46 = sub_21F41FF28();
  __swift_project_value_buffer(v46, (uint64_t)qword_26AD3C910);
  uint64_t v47 = sub_21F41FF08();
  os_log_type_t v48 = sub_21F420668();
  if (os_log_type_enabled(v47, v48))
  {
    char v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v150 = v50;
    *(_DWORD *)char v49 = 136315138;
    if (qword_267EC71E8 != -1) {
      swift_once();
    }
    uint64_t v51 = qword_267EC85D0;
    unint64_t v52 = *(void *)algn_267EC85D8;
    swift_bridgeObjectRetain();
    uint64_t v145 = sub_21F2A02C4(v51, v52, &v150);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v47, v48, "%s Session missing final turn. Skipping.", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v50, -1, -1);
    MEMORY[0x223C4B440](v49, -1, -1);
  }

  return MEMORY[0x263F8EE78];
}

uint64_t type metadata accessor for MediaInAppFollowupClassifier()
{
  return self;
}

uint64_t method lookup function for MediaInAppFollowupClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MediaInAppFollowupClassifier);
}

uint64_t dispatch thunk of MediaInAppFollowupClassifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MediaInAppFollowupClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_21F303D48()
{
  return sub_21F41F1D8() & 1;
}

uint64_t sub_21F303D98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F303E00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F303E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_21F303EC8(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  sub_21F2A9FD0(*a1, a1[1]);
  sub_21F2A9FD0(v2, v3);
  return a1;
}

uint64_t sub_21F303F5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21F303FAC()
{
  return swift_initClassMetadata2();
}

BOOL sub_21F303FF4()
{
  return (*(double (**)(void))(*(void *)(*(void *)v0 + 88) + 96))(*(void *)(*(void *)v0 + 80)) < v0[2];
}

uint64_t sub_21F304068()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MinimumScoreNominationFilter()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_21F304090()
{
  return sub_21F303FF4();
}

id sub_21F304100()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PICSWipeStoreMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PICSWipeStoreMigration()
{
  return self;
}

uint64_t SuccessfulPhoneCallDefinition.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SuccessfulPhoneCallDefinition.init()()
{
  return v0;
}

uint64_t sub_21F304170()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DD8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21F422460;
  uint64_t v1 = type metadata accessor for SuccessfulPhoneCallClassifier();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0x4014000000000000;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = &protocol witness table for SuccessfulPhoneCallClassifier;
  *(void *)(v0 + 32) = v2;
  return v0;
}

uint64_t sub_21F3041E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_21F29F920(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8A0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    uint64_t result = v12;
    if (v8 == 1)
    {
      uint64_t v6 = v9;
      uint64_t v7 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      uint64_t v6 = 0;
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t result = 0;
    }
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v4;
    a2[3] = v5;
    a2[4] = result;
  }
  else
  {
    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

double sub_21F3042B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  Array<A>.findEvent(eventId:)(*(void *)(a2 + 8), *(void *)(a2 + 16), a1, &v13);
  uint64_t v4 = v14;
  if (!v14) {
    goto LABEL_8;
  }
  uint64_t v5 = v13;
  uint64_t v7 = v15;
  uint64_t v6 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_21F29DFE0(v9);
  swift_bridgeObjectRelease();
  if (!v10 || (uint64_t v11 = *(void *)(v10 + 16), swift_bridgeObjectRelease(), v11 != 1))
  {
    sub_21F2BCCB4(v5, v4);
LABEL_8:
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  uint64_t v13 = v5;
  uint64_t v14 = v4;
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  uint64_t v17 = v8;
  extractContactReference(event:)((uint64_t)a3);
  sub_21F2BCCB4(v5, v4);
  return result;
}

uint64_t sub_21F3043C0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_21F39039C(2, a1);
  uint64_t v3 = sub_21F304748(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21F304408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v11 = a3[3];
  uint64_t v13 = *a4;
  uint64_t v12 = a4[1];
  uint64_t v14 = a4[3];
  uint64_t v20 = a4[2];
  uint64_t v15 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a5, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for PhoneCallGroundTruth();
  *(unsigned char *)(a5 + v16[5]) = 3;
  *(void *)(a5 + v16[6]) = a2;
  uint64_t v17 = (uint64_t *)(a5 + v16[7]);
  *uint64_t v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  long long v17[3] = v11;
  uint64_t v18 = (void *)(a5 + v16[8]);
  *uint64_t v18 = v13;
  v18[1] = v12;
  void v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_21F304B48(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SuccessfulPhoneCallDefinition.deinit()
{
  return v0;
}

uint64_t SuccessfulPhoneCallDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F304570@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21F3041E8(a1, a2);
}

double sub_21F304588@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_21F3042B4(a1, a2, a3);
}

uint64_t sub_21F3045A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F39039C(2, a1);
  uint64_t v5 = sub_21F304748(v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_21F3045F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v11 = a3[3];
  uint64_t v13 = *a4;
  uint64_t v12 = a4[1];
  uint64_t v14 = a4[3];
  uint64_t v20 = a4[2];
  uint64_t v15 = sub_21F41F228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a5, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for PhoneCallGroundTruth();
  *(unsigned char *)(a5 + v16[5]) = 3;
  *(void *)(a5 + v16[6]) = v7;
  uint64_t v17 = (uint64_t *)(a5 + v16[7]);
  *uint64_t v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  long long v17[3] = v11;
  uint64_t v18 = (void *)(a5 + v16[8]);
  *uint64_t v18 = v13;
  v18[1] = v12;
  void v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_21F304B48(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F304748(uint64_t a1)
{
  unint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    goto LABEL_19;
  }
  uint64_t v4 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v5 = a1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    uint64_t v9 = *(void *)(v5 + v6 * i + *(int *)(v4 + 24));
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v9 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_21F29F920(v11, (uint64_t)&v19);
        sub_21F29F920((uint64_t)&v19, (uint64_t)v18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        type metadata accessor for UsoPersonRecipients();
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        v11 += 40;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_21F2A09A8(&v19, (uint64_t)v21);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_11:
      uint64_t v22 = 0;
      memset(v21, 0, sizeof(v21));
    }
    sub_21F29F984((uint64_t)v21, (uint64_t)&v19);
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
      type metadata accessor for UsoPersonRecipients();
      if (swift_dynamicCast())
      {
        swift_retain();
        sub_21F41FAB8();
        swift_release_n();
        unint64_t v8 = v19;
        sub_21F2AA088((uint64_t)v21);
        swift_bridgeObjectRelease();
        sub_21F2A5EB0(v8);
        continue;
      }
    }
    else
    {
      sub_21F2AA088((uint64_t)&v19);
    }
    sub_21F2AA088((uint64_t)v21);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v1 = v23;
LABEL_19:
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_21F2D62EC(v12);
  swift_bridgeObjectRelease();
  if ((v13 & 0xC000000000000001) != 0) {
    uint64_t v14 = sub_21F4208A8();
  }
  else {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  swift_bridgeObjectRelease();
  if (v14 != 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_21F420B98();
    if (!result) {
      goto LABEL_31;
    }
LABEL_25:
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = MEMORY[0x223C4A6D0](0, v1);
    }
    else
    {
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      uint64_t v17 = *(void *)(v1 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease_n();
    return v17;
  }
  uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v15) {
    goto LABEL_25;
  }
LABEL_31:
  swift_bridgeObjectRelease_n();
  return 0;
}

BOOL sub_21F304A90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_21F29EB40(v3);
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6) {
    return 0;
  }
  if (v1 == 0xD000000000000011 && v2 == 0x800000021F431F10) {
    return v4 == 1;
  }
  char v7 = sub_21F420DF8();
  BOOL result = 0;
  if (v7) {
    return v4 == 1;
  }
  return result;
}

uint64_t sub_21F304B48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21F304B90()
{
  unint64_t result = qword_26AD38AE0;
  if (!qword_26AD38AE0)
  {
    type metadata accessor for PhoneCallGroundTruth();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD38AE0);
  }
  return result;
}

_UNKNOWN **sub_21F304BE8()
{
  return &protocol witness table for SuccessfulPhoneCallClassification;
}

uint64_t type metadata accessor for SuccessfulPhoneCallDefinition()
{
  return self;
}

uint64_t method lookup function for SuccessfulPhoneCallDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SuccessfulPhoneCallDefinition);
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.successClassifiers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.identifySuccessClassification(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.isInitiatingEvent(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.extractReferencedEntity(session:successClassification:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.extractUsoEntityFromSessionSlice(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

double MessagesAbandonmentClassification.dismissalTimestamp.getter()
{
  return *(double *)v0;
}

uint64_t MessagesAbandonmentClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagesAbandonmentClassification.referencedTurns.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MessagesAbandonmentClassification.referencedTurns.modify())()
{
  return nullsub_1;
}

uint64_t MessagesAbandonmentClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagesAbandonmentClassification.referencedEvents.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MessagesAbandonmentClassification.referencedEvents.modify())()
{
  return nullsub_1;
}

uint64_t MessagesAbandonmentClassification.usoQuery.getter()
{
  return swift_retain();
}

uint64_t MessagesAbandonmentClassification.endTime.getter()
{
  return *(void *)v0;
}

uint64_t sub_21F304DE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F304DE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F304DF0()
{
  return swift_retain();
}

uint64_t sub_21F304DF8()
{
  return *(void *)v0;
}

uint64_t destroy for MessagesAbandonmentClassification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for MessagesAbandonmentClassification(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MessagesAbandonmentClassification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MessagesAbandonmentClassification(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAbandonmentClassification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesAbandonmentClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesAbandonmentClassification()
{
  return &type metadata for MessagesAbandonmentClassification;
}

uint64_t SuccessfulPhoneCallClassifier.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0x4014000000000000;
  return result;
}

uint64_t sub_21F305034()
{
  type metadata accessor for SuccessfulPhoneCallClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8678);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC8668 = 91;
  unk_267EC8670 = 0xE100000000000000;
  return result;
}

uint64_t SuccessfulPhoneCallClassifier.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0x4014000000000000;
  return result;
}

uint64_t sub_21F3050CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for RuleResult();
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v40 = v8;
  v42[0] = v8;
  v42[1] = v9;
  void v42[2] = v11;
  v42[3] = v10;
  v42[4] = v12;
  uint64_t v41 = sub_21F3055A0(v42);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21F41FF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_26AD3C910);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_21F41FF08();
  os_log_type_t v15 = sub_21F420668();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v38 = v11;
  uint64_t v39 = v9;
  if (v16)
  {
    uint64_t v36 = a2;
    uint64_t v37 = v2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v42[0] = v35;
    *(_DWORD *)uint64_t v17 = 136315394;
    if (qword_267EC71F0 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_267EC8668;
    unint64_t v19 = unk_267EC8670;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_21F2A02C4(v18, v19, v42);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    unint64_t v20 = v39;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_21F2A02C4(v40, v20, v42);
    uint64_t v9 = v20;
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F29A000, v14, v15, "%s Rule matrix for [Event ID: %s]:", (uint8_t *)v17, 0x16u);
    uint64_t v21 = v35;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v21, -1, -1);
    MEMORY[0x223C4B440](v17, -1, -1);

    a2 = v36;
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v41;
  sub_21F413D80(8224, 0xE200000000000000, v41);
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0);
    unint64_t v25 = v22
        + ((*(unsigned __int8 *)(*(void *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80));
    uint64_t v26 = *(void *)(*(void *)(v24 - 8) + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v27 = v25 + *(int *)(v24 + 48);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v27) = sub_21F39923C(v27, (uint64_t)v7);
      sub_21F2D9D70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RuleResult);
      if ((v27 & 1) == 0) {
        break;
      }
      v25 += v26;
      if (!--v23)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v9 = v39;
        goto LABEL_14;
      }
    }
    uint64_t result = swift_bridgeObjectRelease_n();
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v28 = swift_bridgeObjectRetain();
    char v29 = sub_21F29E8EC(v28);
    swift_bridgeObjectRelease();
    char v30 = v29 & 1;
    *(void *)(a2 + 24) = &type metadata for SuccessfulPhoneCallClassification;
    *(void *)(a2 + 32) = &protocol witness table for SuccessfulPhoneCallClassification;
    uint64_t v31 = swift_allocObject();
    *(void *)a2 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC79A0);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_21F422460;
    uint64_t v33 = v40;
    *(void *)(v32 + 32) = v40;
    *(void *)(v32 + 40) = v9;
    *(unsigned char *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v33;
    *(void *)(v31 + 32) = v9;
    *(void *)(v31 + 40) = MEMORY[0x263F8EE78];
    *(void *)(v31 + 48) = v32;
    return swift_bridgeObjectRetain_n();
  }
  return result;
}

uint64_t SuccessfulPhoneCallClassifier.deinit()
{
  return v0;
}

uint64_t SuccessfulPhoneCallClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F30557C(uint64_t a1)
{
  return sub_21F305A78(a1);
}

uint64_t sub_21F3055A0(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for RuleResult();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  char v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = *a1;
  uint64_t v30 = a1[1];
  uint64_t v31 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF28);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21F422300;
  uint64_t v12 = (void *)(v11 + v10);
  uint64_t v13 = (void *)((char *)v12 + *(int *)(v8 + 48));
  *uint64_t v12 = 0xD00000000000001ALL;
  v12[1] = 0x800000021F433E90;
  uint64_t v14 = swift_bridgeObjectRetain();
  int v15 = sub_21F29F26C(v14);
  swift_bridgeObjectRelease();
  if (v15 == 2)
  {
    type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
    uint64_t *v13 = sub_21F41FA88();
    v13[1] = v16;
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    void v13[2] = v31;
    v13[3] = v17;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_21F306060((uint64_t)v6, (uint64_t)v13);
    uint64_t v17 = v30;
    uint64_t v18 = v31;
  }
  unint64_t v19 = (void *)((char *)v12 + v9);
  unint64_t v20 = (void *)((char *)v19 + *(int *)(v8 + 48));
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_21F420948();
  sub_21F4201A8();
  sub_21F420508();
  unint64_t v21 = v33;
  *unint64_t v19 = v32;
  v19[1] = v21;
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_21F29EB58(v22);
  char v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    type metadata accessor for PhoneCallEventFeature.CallDuration(0);
    *unint64_t v20 = sub_21F41FA88();
    v20[1] = v26;
    _OWORD v20[2] = v18;
    v20[3] = v17;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v25 = (uint64_t)v29;
    swift_storeEnumTagMultiPayload();
    sub_21F306060(v25, (uint64_t)v20);
  }
  return v11;
}

void *sub_21F3058A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v3 = (uint64_t *)(v16 + 64);
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *(v3 - 1);
    uint64_t v6 = *v3;
    uint64_t v7 = *(v3 - 3);
    uint64_t v8 = *(v3 - 2);
    v15[0] = *(v3 - 4);
    v15[1] = v7;
    v15[2] = v8;
    v15[3] = v5;
    v15[4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F3050CC(v15, (uint64_t)&v12);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_21F2A09A8(&v12, (uint64_t)v14);
      sub_21F2A09A8(v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_21F2A753C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v10 = v4[2];
      unint64_t v9 = v4[3];
      if (v10 >= v9 >> 1) {
        uint64_t v4 = sub_21F2A753C((void *)(v9 > 1), v10 + 1, 1, v4);
      }
      v4[2] = v10 + 1;
      sub_21F2A09A8(&v12, (uint64_t)&v4[5 * v10 + 4]);
    }
    else
    {
      sub_21F29FA48((uint64_t)&v12, &qword_26AD3A8A8);
    }
    v3 += 5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F305A78(uint64_t a1)
{
  v29[1] = *v1;
  uint64_t v3 = type metadata accessor for FeaturisedTurn(0);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)&v38[0] = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_21F29F8BC(v10, (uint64_t)v7);
      uint64_t v12 = *(void *)&v7[*(int *)(v3 + 28)];
      swift_bridgeObjectRetain();
      sub_21F2D9D70((uint64_t)v7, type metadata accessor for FeaturisedTurn);
      sub_21F2A5AB8(v12);
      v10 += v11;
      --v9;
    }
    while (v9);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&v38[0];
  }
  else
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  uint64_t v40 = v8;
  uint64_t v32 = *(void *)(v13 + 16);
  if (v32)
  {
    unint64_t v14 = 0;
    uint64_t v31 = v13 + 32;
    v29[3] = "nerationTriggered";
    unint64_t v30 = 0x800000021F431F10;
    while (1)
    {
      if (v14 >= *(void *)(v13 + 16))
      {
        __break(1u);
        return result;
      }
      int v15 = (uint64_t *)(v31 + 40 * v14);
      uint64_t v33 = *v15;
      uint64_t v17 = v15[3];
      uint64_t v16 = v15[4];
      uint64_t v18 = v15[2];
      uint64_t v19 = *(void *)(v18 + 16);
      long long v34 = *(_OWORD *)(v15 + 1);
      if (v19)
      {
        uint64_t v20 = v18 + 32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_21F29F920(v20, (uint64_t)&v36);
          sub_21F29F920((uint64_t)&v36, (uint64_t)v35);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
          type metadata accessor for CommonFeature.InteractionDirection(0);
          if (swift_dynamicCast()) {
            break;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
          v20 += 40;
          if (!--v19)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_21F2A09A8(&v36, (uint64_t)v38);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
LABEL_18:
        uint64_t v39 = 0;
        memset(v38, 0, sizeof(v38));
      }
      sub_21F29F984((uint64_t)v38, (uint64_t)&v36);
      if (v37)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A878);
        type metadata accessor for CommonFeature.InteractionDirection(0);
        if (swift_dynamicCast())
        {
          swift_retain();
          sub_21F41FAB8();
          swift_release_n();
          uint64_t v21 = v36;
          sub_21F29FA48((uint64_t)v38, &qword_26AD3A880);
          swift_bridgeObjectRelease();
          if (v17 == 0xD000000000000011 && v16 == v30 || (sub_21F420DF8()) && v21 == 1)
          {
            uint64_t v22 = v40;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = sub_21F2C3184(0, *(void *)(v22 + 16) + 1, 1);
              uint64_t v22 = v40;
            }
            long long v23 = v34;
            unint64_t v25 = *(void *)(v22 + 16);
            unint64_t v24 = *(void *)(v22 + 24);
            if (v25 >= v24 >> 1)
            {
              uint64_t result = sub_21F2C3184(v24 > 1, v25 + 1, 1);
              long long v23 = v34;
              uint64_t v22 = v40;
            }
            *(void *)(v22 + 16) = v25 + 1;
            unint64_t v26 = v22 + 40 * v25;
            *(void *)(v26 + 32) = v33;
            *(_OWORD *)(v26 + 40) = v23;
            *(void *)(v26 + 56) = v17;
            *(void *)(v26 + 64) = v16;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
          }
          goto LABEL_10;
        }
      }
      else
      {
        sub_21F29FA48((uint64_t)&v36, &qword_26AD3A880);
      }
      sub_21F29FA48((uint64_t)v38, &qword_26AD3A880);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
LABEL_10:
      if (++v14 == v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = v40;
        goto LABEL_34;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x263F8EE78];
LABEL_34:
  swift_retain();
  uint64_t v28 = sub_21F3058A4(v27);
  swift_release();
  swift_release();
  return (uint64_t)v28;
}

uint64_t type metadata accessor for SuccessfulPhoneCallClassifier()
{
  return self;
}

uint64_t method lookup function for SuccessfulPhoneCallClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SuccessfulPhoneCallClassifier);
}

uint64_t dispatch thunk of SuccessfulPhoneCallClassifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_21F306018()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_21F306060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RuleResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

SiriPrivateLearningInference::PIMSCoreDataStorePolicies __swiftcall PIMSCoreDataStorePolicies.init()()
{
  *uint64_t v0 = 300;
  return result;
}

void PIMSCoreDataStorePolicies.runPolicy(store:)(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_21F420748();
}

uint64_t sub_21F306148(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD38788);
  MEMORY[0x270FA5388](v5 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DC8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F422460;
  type metadata accessor for MediaSuggestionEvictor();
  swift_allocObject();
  sub_21F306570();
  swift_getKeyPath();
  sub_21F41FCF8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38780);
  swift_allocObject();
  uint64_t v8 = sub_21F41FC98();
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = sub_21F306670();
  *(void *)(inited + 32) = v8;
  id v9 = a2;
  swift_retain();
  uint64_t v10 = sub_21F3066CC(inited, v9, a3);

  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38770);
  swift_arrayDestroy();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (unsigned char *)(v10 + 40);
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if (*v12 == 1)
      {
        unint64_t v14 = (void *)*((void *)v12 - 1);
        id v15 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_21F2A8604(0, v13[2] + 1, 1, v13);
        }
        unint64_t v17 = v13[2];
        unint64_t v16 = v13[3];
        if (v17 >= v16 >> 1) {
          uint64_t v13 = sub_21F2A8604((void *)(v16 > 1), v17 + 1, 1, v13);
        }
        void v13[2] = v17 + 1;
        v13[v17 + 4] = v14;
      }
      v12 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  if (!v13[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_21F41FA28();
  sub_21F306894();
  swift_allocError();
  *uint64_t v19 = v13;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x263F73F28], v18);
  return swift_willThrow();
}

uint64_t sub_21F306438()
{
  return sub_21F306148(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_21F306458(uint64_t a1)
{
  id v1 = *(id *)(*(void *)a1 + 24);
  sub_21F420748();
}

ValueMetadata *type metadata accessor for PIMSCoreDataStorePolicies()
{
  return &type metadata for PIMSCoreDataStorePolicies;
}

uint64_t type metadata accessor for MediaSuggestionEvictor()
{
  uint64_t result = qword_26AD38B10;
  if (!qword_26AD38B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_21F306530()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F306570()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  return MEMORY[0x270F70348](sub_21F3068FC, v2);
}

uint64_t sub_21F3065F4()
{
  sub_21F41FA08();
  return swift_deallocClassInstance();
}

void sub_21F306624()
{
}

uint64_t sub_21F306654()
{
  return type metadata accessor for MediaSuggestionEvictor();
}

char *keypath_get_selector_lastUpdated()
{
  return sel_lastUpdated;
}

unint64_t sub_21F306670()
{
  unint64_t result = qword_26AD38778;
  if (!qword_26AD38778)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26AD38780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD38778);
  }
  return result;
}

uint64_t sub_21F3066CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = *MEMORY[0x263EF8340];
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_21F2C36B4(0, v5, 0);
    uint64_t v6 = v22;
    for (uint64_t i = (void *)(a1 + 32); ; i += 5)
    {
      uint64_t v9 = i[3];
      __swift_project_boxed_opaque_existential_1(i, v9);
      id v21 = a2;
      sub_21F41F788();
      if (v4) {
        break;
      }
      uint64_t v10 = *(void **)(a3 + 24);
      id v21 = 0;
      if ((objc_msgSend(v10, sel_save_, &v21) & 1) == 0)
      {
        id v13 = v21;
        uint64_t v9 = sub_21F41EFD8();

        swift_willThrow();
        goto LABEL_8;
      }
      id v11 = v21;
      char v12 = 0;
LABEL_9:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21F2C36B4(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v22;
      }
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_21F2C36B4(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v22;
      }
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v9;
      *(unsigned char *)(v17 + 40) = v12;
      if (!--v5) {
        return v6;
      }
    }
    uint64_t v9 = v4;
LABEL_8:
    uint64_t v4 = 0;
    char v12 = 1;
    goto LABEL_9;
  }
  return v6;
}

unint64_t sub_21F306894()
{
  unint64_t result = qword_267EC8680;
  if (!qword_267EC8680)
  {
    sub_21F41FA28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8680);
  }
  return result;
}

uint64_t sub_21F3068EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_21F306900(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8688);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_21F422300;
  uint64_t v3 = MEMORY[0x263F8D310];
  *(void *)(v2 + 56) = MEMORY[0x263F8D310];
  unint64_t v4 = sub_21F306A08();
  *(void *)(v2 + 64) = v4;
  *(void *)(v2 + 32) = 1701667182;
  *(void *)(v2 + 40) = 0xE400000000000000;
  id v5 = objc_msgSend(a1, sel_name);
  if (!v5)
  {
    uint64_t v10 = (uint64_t *)(v2 + 72);
    *(void *)(v2 + 96) = v3;
    *(void *)(v2 + 104) = v4;
    goto LABEL_5;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_21F4200B8();
  unint64_t v9 = v8;

  uint64_t v10 = (uint64_t *)(v2 + 72);
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  if (!v9)
  {
LABEL_5:
    *uint64_t v10 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_6;
  }
  *uint64_t v10 = v7;
LABEL_6:
  *(void *)(v2 + 80) = v9;
  sub_21F306A5C();
  return sub_21F420618();
}

unint64_t sub_21F306A08()
{
  unint64_t result = qword_267EC8690;
  if (!qword_267EC8690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8690);
  }
  return result;
}

unint64_t sub_21F306A5C()
{
  unint64_t result = qword_267EC8698;
  if (!qword_267EC8698)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EC8698);
  }
  return result;
}

uint64_t sub_21F306A9C()
{
  return sub_21F306438();
}

SiriPrivateLearningInference::CaptureRecord __swiftcall CaptureRecord.init(selfEvents:interactions:contacts:)(Swift::OpaquePointer selfEvents, Swift::OpaquePointer interactions, Swift::OpaquePointer contacts)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_21F41F898();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *((void *)interactions._rawValue + 2);
  if (v12)
  {
    rawValue = selfEvents._rawValue;
    uint64_t v22 = v7;
    uint64_t v23 = contacts._rawValue;
    unint64_t v25 = (void *)MEMORY[0x263F8EE78];
    sub_21F420A58();
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v20 = interactions._rawValue;
    unint64_t v14 = (char *)interactions._rawValue + ((v13 + 32) & ~v13);
    uint64_t v15 = *(void *)(v9 + 72);
    do
    {
      v24(v11, v14, v8);
      sub_21F41F878();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_21F420A28();
      sub_21F420A68();
      sub_21F420A78();
      sub_21F420A38();
      v14 += v15;
      --v12;
    }
    while (v12);
    unint64_t v16 = v25;
    uint64_t v17 = (void *)swift_bridgeObjectRelease();
    uint64_t v7 = v22;
    contacts._rawValue = v23;
    selfEvents._rawValue = rawValue;
  }
  else
  {
    uint64_t v17 = (void *)swift_bridgeObjectRelease();
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  v7->_rawValue = selfEvents._rawValue;
  v7[1]._rawValue = v16;
  v7[2]._rawValue = contacts._rawValue;
  result.deviceContacts._rawValue = v19;
  result.interactions._rawValue = v18;
  result.selfEvents._rawValue = v17;
  return result;
}

uint64_t sub_21F306C78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F32FA14(*a1, *a2);
}

uint64_t sub_21F306C84()
{
  return sub_21F420F48();
}

uint64_t sub_21F306D40()
{
  sub_21F420148();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F306DE8()
{
  return sub_21F420F48();
}

uint64_t sub_21F306EA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F308588();
  *a1 = result;
  return result;
}

void sub_21F306ED0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000007374;
  unint64_t v4 = 0xEC000000736E6F69;
  uint64_t v5 = 0x7463617265746E69;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F43656369766564;
    unint64_t v4 = 0xEE0073746361746ELL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E657645666C6573;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_21F306F48()
{
  uint64_t v1 = 0x7463617265746E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F43656369766564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E657645666C6573;
  }
}

uint64_t sub_21F306FBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_21F308588();
  *a1 = result;
  return result;
}

uint64_t sub_21F306FE4(uint64_t a1)
{
  unint64_t v2 = sub_21F307784();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_21F307020(uint64_t a1)
{
  unint64_t v2 = sub_21F307784();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CaptureRecord.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC86A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F307784();
  sub_21F420F58();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v47 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC86B0);
  char v49 = 0;
  uint64_t v10 = sub_21F308088(&qword_267EC86B8, &qword_267EC86B0, (void (*)(void))sub_21F3077D8);
  sub_21F420CB8();
  uint64_t v45 = v10;
  uint64_t v46 = v5;
  uint64_t v12 = v50;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(v12 + 16);
  uint64_t v43 = v9;
  uint64_t v44 = v6;
  if (v14)
  {
    int v42 = v8;
    uint64_t v48 = (uint64_t)a1;
    swift_bridgeObjectRetain();
    uint64_t v41 = v12;
    uint64_t v15 = (unint64_t *)(v12 + 40);
    do
    {
      uint64_t v16 = *(v15 - 1);
      unint64_t v17 = *v15;
      id v18 = objc_allocWithZone(MEMORY[0x263F6ECE8]);
      sub_21F30782C(v16, v17);
      uint64_t v19 = (void *)sub_21F41F0A8();
      sub_21F2F64D8(v16, v17);
      id v20 = objc_msgSend(v18, sel_initWithData_, v19);

      if (v20)
      {
        MEMORY[0x223C4A030]();
        if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_21F420398();
        }
        sub_21F4203E8();
        sub_21F420368();
      }
      v15 += 2;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    uint64_t v13 = v50;
    a1 = (void *)v48;
    uint64_t v6 = v44;
    uint64_t v8 = v42;
  }
  swift_bridgeObjectRelease();
  char v49 = 1;
  swift_bridgeObjectRetain();
  sub_21F420CB8();
  id v21 = v47;
  uint64_t v22 = v50;
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v41 = v13;
    int v42 = v8;
    uint64_t v48 = sub_21F2ABFB4(0, &qword_267EC86C8);
    sub_21F2ABFB4(0, &qword_267EC86D0);
    swift_bridgeObjectRetain();
    uint64_t v40 = v22;
    unint64_t v24 = (unint64_t *)(v22 + 40);
    do
    {
      uint64_t v26 = *(v24 - 1);
      unint64_t v25 = *v24;
      sub_21F30782C(v26, *v24);
      uint64_t v27 = sub_21F4206B8();
      uint64_t v28 = sub_21F2F64D8(v26, v25);
      if (v27)
      {
        MEMORY[0x223C4A030](v28);
        if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_21F420398();
        }
        sub_21F4203E8();
        sub_21F420368();
      }
      v24 += 2;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v29 = v50;
    uint64_t v6 = v44;
    uint64_t v13 = v41;
    uint64_t v8 = v42;
    id v21 = v47;
  }
  else
  {
    uint64_t v29 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  char v49 = 2;
  swift_bridgeObjectRetain();
  sub_21F420CB8();
  unint64_t v30 = (char *)v50;
  uint64_t v31 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v32 = *((void *)v30 + 2);
  if (v32)
  {
    uint64_t v43 = v29;
    uint64_t v41 = v13;
    uint64_t v33 = v30;
    uint64_t v48 = sub_21F2ABFB4(0, &qword_267EC86C8);
    uint64_t v45 = sub_21F2ABFB4(0, &qword_267EC9160);
    swift_bridgeObjectRetain();
    int v42 = v33;
    long long v34 = (unint64_t *)(v33 + 40);
    do
    {
      uint64_t v35 = v8;
      uint64_t v36 = *(v34 - 1);
      unint64_t v37 = *v34;
      sub_21F30782C(v36, *v34);
      uint64_t v38 = sub_21F4206B8();
      uint64_t v39 = sub_21F2F64D8(v36, v37);
      uint64_t v8 = v35;
      if (v38)
      {
        MEMORY[0x223C4A030](v39);
        if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_21F420398();
        }
        sub_21F4203E8();
        sub_21F420368();
      }
      v34 += 2;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    uint64_t v31 = v50;
    uint64_t v29 = v43;
    uint64_t v6 = v44;
    id v21 = v47;
    uint64_t v13 = v41;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *id v21 = v13;
  v21[1] = v29;
  _OWORD v21[2] = v31;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_21F307784()
{
  unint64_t result = qword_267EC86A8;
  if (!qword_267EC86A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC86A8);
  }
  return result;
}

unint64_t sub_21F3077D8()
{
  unint64_t result = qword_267EC86C0;
  if (!qword_267EC86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC86C0);
  }
  return result;
}

uint64_t sub_21F30782C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t CaptureRecord.encode(to:)(unint64_t a1)
{
  uint64_t v3 = v2;
  v62[1] = *MEMORY[0x263EF8340];
  unint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC86D8);
  unint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *v1;
  unint64_t v9 = v1[1];
  unint64_t v58 = v1[2];
  unint64_t v59 = v9;
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_21F307784();
  uint64_t v57 = v8;
  uint64_t v11 = v10;
  sub_21F420F68();
  if (v10 >> 62) {
    goto LABEL_34;
  }
  uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v54 = v5;
    unint64_t v55 = v6;
    uint64_t v56 = v3;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x263F8EE78];
      goto LABEL_17;
    }
    v62[0] = MEMORY[0x263F8EE78];
    uint64_t v13 = v62;
    sub_21F2C36F4(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0) {
      break;
    }
    uint64_t v14 = 0;
    uint64_t v15 = v62[0];
    id v60 = (id)(v11 & 0xC000000000000001);
    uint64_t v16 = v11;
    uint64_t v17 = v12;
    do
    {
      if (v60) {
        id v18 = (id)MEMORY[0x223C4A6D0](v14, v11);
      }
      else {
        id v18 = *(id *)(v11 + 8 * v14 + 32);
      }
      uint64_t v19 = v18;
      id v20 = objc_msgSend(v18, sel_data, v54);
      if (v20)
      {
        id v21 = v20;
        uint64_t v22 = sub_21F41F0B8();
        unint64_t v6 = v23;
      }
      else
      {

        uint64_t v22 = 0;
        unint64_t v6 = 0xF000000000000000;
      }
      v62[0] = v15;
      unint64_t v25 = *(void *)(v15 + 16);
      unint64_t v24 = *(void *)(v15 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_21F2C36F4(v24 > 1, v25 + 1, 1);
        uint64_t v15 = v62[0];
      }
      ++v14;
      *(void *)(v15 + 16) = v25 + 1;
      uint64_t v26 = v15 + 16 * v25;
      *(void *)(v26 + 32) = v22;
      *(void *)(v26 + 40) = v6;
      uint64_t v11 = v16;
    }
    while (v17 != v14);
    swift_bridgeObjectRelease();
    unint64_t v5 = v54;
LABEL_17:
    v62[0] = v15;
    LOBYTE(v61) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC86E0);
    sub_21F308088(&qword_267EC86E8, &qword_267EC86E0, (void (*)(void))sub_21F3080F4);
    unint64_t v27 = v56;
    uint64_t v13 = v57;
    sub_21F420D58();
    unint64_t v10 = v27;
    if (v27)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(void *, unint64_t))(v55 + 8))(v13, v5);
    }
    swift_bridgeObjectRelease();
    a1 = v59;
    if (v59 >> 62) {
      goto LABEL_36;
    }
    uint64_t v3 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v56 = 0;
    if (!v3) {
      goto LABEL_37;
    }
LABEL_21:
    v62[0] = MEMORY[0x263F8EE78];
    sub_21F2C36D4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
LABEL_61:
      __break(1u);
    }
    uint64_t v29 = v62[0];
    id v60 = self;
    unint64_t v10 = 0;
    unint64_t v5 = a1 & 0xC000000000000001;
    while (v3 != v10)
    {
      if (v5) {
        unint64_t v30 = (void *)MEMORY[0x223C4A6D0](v10, a1);
      }
      else {
        unint64_t v30 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v13 = v30;
      id v61 = 0;
      id v31 = objc_msgSend(v60, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v30, 1, &v61, v54);
      id v32 = v61;
      if (!v31)
      {
        unint64_t v37 = v32;
        sub_21F41EFD8();

        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      uint64_t v11 = sub_21F41F0B8();
      unint64_t v6 = v33;

      v62[0] = v29;
      unint64_t v35 = *(void *)(v29 + 16);
      unint64_t v34 = *(void *)(v29 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_21F2C36D4(v34 > 1, v35 + 1, 1);
        uint64_t v29 = v62[0];
      }
      ++v10;
      *(void *)(v29 + 16) = v35 + 1;
      uint64_t v36 = v29 + 16 * v35;
      *(void *)(v36 + 32) = v11;
      *(void *)(v36 + 40) = v6;
      a1 = v59;
      if (v3 == v10)
      {
        swift_bridgeObjectRelease();
        unint64_t v10 = v56;
        uint64_t v13 = v57;
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_21F420B98();
  }
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_21F420B98();
  uint64_t v56 = v10;
  if (v3) {
    goto LABEL_21;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  uint64_t v29 = MEMORY[0x263F8EE78];
LABEL_38:
  if (v58 >> 62) {
    goto LABEL_54;
  }
  uint64_t v38 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v38)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x263F8EE78];
LABEL_56:
    v62[0] = v29;
    LOBYTE(v61) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC86B0);
    sub_21F308088(&qword_267EC8700, &qword_267EC86B0, (void (*)(void))sub_21F308130);
    unint64_t v52 = v54;
    sub_21F420D58();
    unint64_t v53 = v55;
    if (v10)
    {
      (*(void (**)(void *, unint64_t))(v55 + 8))(v13, v52);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v62[0] = v39;
      LOBYTE(v61) = 2;
      sub_21F420D58();
      (*(void (**)(void *, unint64_t))(v53 + 8))(v13, v52);
    }
    return swift_bridgeObjectRelease();
  }
LABEL_40:
  v62[0] = MEMORY[0x263F8EE78];
  uint64_t v13 = v62;
  sub_21F2C36D4(0, v38 & ~(v38 >> 63), 0);
  if (v38 < 0) {
    goto LABEL_61;
  }
  uint64_t v39 = v62[0];
  uint64_t v40 = self;
  unint64_t v10 = 0;
  unint64_t v41 = v58;
  unint64_t v59 = v58 & 0xC000000000000001;
  id v60 = v40;
  while (1)
  {
    if (v38 == v10)
    {
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_21F420B98();
      if (!v38) {
        goto LABEL_55;
      }
      goto LABEL_40;
    }
    int v42 = v59 ? (void *)MEMORY[0x223C4A6D0](v10) : *(id *)(v41 + 8 * v10 + 32);
    uint64_t v13 = v42;
    id v61 = 0;
    id v43 = objc_msgSend(v60, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v42, 1, &v61, v54);
    id v44 = v61;
    if (!v43) {
      break;
    }
    uint64_t v45 = sub_21F41F0B8();
    uint64_t v47 = v46;

    v62[0] = v39;
    unint64_t v49 = *(void *)(v39 + 16);
    unint64_t v48 = *(void *)(v39 + 24);
    if (v49 >= v48 >> 1)
    {
      uint64_t v13 = v62;
      sub_21F2C36D4(v48 > 1, v49 + 1, 1);
      uint64_t v39 = v62[0];
    }
    ++v10;
    *(void *)(v39 + 16) = v49 + 1;
    uint64_t v50 = v39 + 16 * v49;
    *(void *)(v50 + 32) = v45;
    *(void *)(v50 + 40) = v47;
    unint64_t v41 = v58;
    if (v38 == v10)
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = v56;
      uint64_t v13 = v57;
      goto LABEL_56;
    }
  }
  uint64_t v51 = v44;
  sub_21F41EFD8();

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_52:
  swift_release();

  return (*(uint64_t (**)(void *, unint64_t))(v55 + 8))(v57, v54);
}

uint64_t sub_21F308058@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CaptureRecord.init(from:)(a1, a2);
}

uint64_t sub_21F308070(unint64_t a1)
{
  return CaptureRecord.encode(to:)(a1);
}

uint64_t sub_21F308088(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F3080F4()
{
  return sub_21F308088(&qword_267EC86F0, &qword_267EC7F28, (void (*)(void))sub_21F308130);
}

unint64_t sub_21F308130()
{
  unint64_t result = qword_267EC86F8;
  if (!qword_267EC86F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC86F8);
  }
  return result;
}

uint64_t destroy for CaptureRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s28SiriPrivateLearningInference13CaptureRecordVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CaptureRecord(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CaptureRecord(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptureRecord(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureRecord()
{
  return &type metadata for CaptureRecord;
}

unsigned char *storeEnumTagSinglePayload for CaptureRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F308448);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureRecord.CodingKeys()
{
  return &type metadata for CaptureRecord.CodingKeys;
}

unint64_t sub_21F308484()
{
  unint64_t result = qword_267EC8708;
  if (!qword_267EC8708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8708);
  }
  return result;
}

unint64_t sub_21F3084DC()
{
  unint64_t result = qword_267EC8710;
  if (!qword_267EC8710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8710);
  }
  return result;
}

unint64_t sub_21F308534()
{
  unint64_t result = qword_267EC8718;
  if (!qword_267EC8718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8718);
  }
  return result;
}

uint64_t sub_21F308588()
{
  unint64_t v0 = sub_21F420C28();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t MessagesClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MessagesClassifier.init()()
{
  return v0;
}

uint64_t MessagesClassifier.deinit()
{
  return v0;
}

uint64_t MessagesClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F308608(uint64_t a1)
{
  uint64_t v21 = type metadata accessor for MessagesAbandonmentClassifier();
  uint64_t v22 = &protocol witness table for MessagesAbandonmentClassifier;
  v20[0] = swift_allocObject();
  uint64_t v24 = type metadata accessor for MessagesDeadEndClassifier();
  unint64_t v25 = &protocol witness table for MessagesDeadEndClassifier;
  v23[0] = swift_allocObject();
  uint64_t v27 = type metadata accessor for SuccessfulMessageClassifier();
  uint64_t v28 = &protocol witness table for SuccessfulMessageClassifier;
  v26[0] = swift_allocObject();
  uint64_t v30 = type metadata accessor for MessagesInAppFollowupClassifier();
  id v31 = &protocol witness table for MessagesInAppFollowupClassifier;
  v29[0] = swift_allocObject();
  uint64_t v33 = type metadata accessor for EntityPromptClassifier();
  unint64_t v34 = &protocol witness table for EntityPromptClassifier;
  v32[0] = swift_allocObject();
  uint64_t v36 = type metadata accessor for ContactSuggestionProvidedClassifier();
  unint64_t v37 = &protocol witness table for ContactSuggestionProvidedClassifier;
  v35[0] = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8EE78];
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v2 = ((uint64_t (*)(uint64_t))off_26D0CEF20[0])(a1);
  sub_21F2A62B8(v2);
  uint64_t v3 = v24;
  unsigned int v4 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  uint64_t v5 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v4[1])(a1, v19, v3, v4);
  sub_21F2A62B8(v5);
  uint64_t v6 = v27;
  uint64_t v7 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  uint64_t v8 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v7[1])(a1, v19, v6, v7);
  sub_21F2A62B8(v8);
  uint64_t v9 = v30;
  unint64_t v10 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  uint64_t v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v10[1])(a1, v19, v9, v10);
  sub_21F2A62B8(v11);
  uint64_t v12 = v33;
  uint64_t v13 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  uint64_t v14 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v13[1])(a1, v19, v12, v13);
  sub_21F2A62B8(v14);
  uint64_t v15 = v36;
  uint64_t v16 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  uint64_t v17 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v16[1])(a1, v19, v15, v16);
  sub_21F2A62B8(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A18);
  swift_arrayDestroy();
  return v19;
}

uint64_t type metadata accessor for MessagesClassifier()
{
  return self;
}

uint64_t method lookup function for MessagesClassifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MessagesClassifier);
}

uint64_t dispatch thunk of MessagesClassifier.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MessagesClassifier.classify(_:classifications:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t sub_21F308984()
{
  type metadata accessor for PLUSMediaSuggesterRuntimeLogHelper();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8730);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC8720 = 91;
  *(void *)algn_267EC8728 = 0xE100000000000000;
  return result;
}

void sub_21F308A08(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA38]), sel_init);
  if (v9)
  {
    id v22 = v9;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E9A0]), sel_init);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E9D0]), sel_init);
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = sub_21F30A87C();
        if (v14)
        {
          id v15 = v14;
          objc_msgSend(v13, sel_setShadowLogging_, a3 & 1);
          objc_msgSend(v11, sel_setMediaState_, v13);
          objc_msgSend(v22, sel_setSuggestionDomainMetadata_, v15);
          id v16 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
          uint64_t v17 = (void *)sub_21F41F1C8();
          id v18 = objc_msgSend(v16, sel_initWithNSUUID_, v17);

          objc_msgSend(v22, sel_setOriginalRequestId_, v18);
          objc_msgSend(v22, sel_setIsSuggesterEnabled_, a2 & 1);
          objc_msgSend(v22, sel_setDomainConfiguredState_, v11);
          sub_21F30E804((uint64_t)v22, a4, a5);

          uint64_t v19 = v11;
          uint64_t v11 = v13;
          uint64_t v13 = v15;
        }
        else
        {
          uint64_t v19 = v22;
        }

        uint64_t v21 = v11;
        uint64_t v11 = v13;
      }
      else
      {
        uint64_t v21 = v22;
      }

      id v20 = v11;
    }
    else
    {
      id v20 = v22;
    }
  }
}

void sub_21F308BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  id v11 = sub_21F30A87C();
  if (v11)
  {
    id v20 = v11;
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA40]), sel_init);
    if (v12)
    {
      uint64_t v13 = v12;
      objc_msgSend(v12, sel_setSuggestionDomainMetadata_, v20);
      id v14 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      id v15 = (void *)sub_21F41F1C8();
      id v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

      objc_msgSend(v13, sel_setOriginalRequestId_, v16);
      MEMORY[0x270FA5388](v17);
      void v19[2] = a1;
      v19[3] = a3;
      v19[4] = v10;
      sub_21F34F388((void *(*)(uint64_t *__return_ptr, uint64_t))sub_21F30AA68, (uint64_t)v19, a2);
      sub_21F2ABFB4(0, &qword_267EC8738);
      id v18 = (void *)sub_21F420338();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setMatchedResults_, v18);

      objc_msgSend(v13, sel_setMatchedResultsPopulated_, *(void *)(a2 + 16) != 0);
      sub_21F30E818((uint64_t)v13, a3, a4);
    }
    else
    {
    }
  }
}

void *sub_21F308E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a4;
  unint64_t v55 = (char *)a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v8 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_21F41F228();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v51 - v19;
  MEMORY[0x270FA5388](v18);
  id v22 = (char *)&v51 - v21;
  unint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v53(v20, v57, v14);
  uint64_t v57 = a2;
  sub_21F41F1B8();
  uint64_t v23 = (uint64_t)v20;
  uint64_t v24 = v15;
  sub_21F3C1834(v23, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v52 = v14;
    v33(v22, v13, v14);
    sub_21F30AAD4((uint64_t)v55, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v54) == 1)
    {
      sub_21F29FA48((uint64_t)v7, &qword_26AD38A90);
    }
    else
    {
      sub_21F30AE64((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PlusMediaSuggestion);
      unint64_t v34 = sub_21F309D2C((uint64_t)v10);
      if (v34)
      {
        unint64_t v35 = v34;
        char v36 = PlusMediaSuggestion.surfacedBefore.getter();
        sub_21F2E586C((uint64_t)v10);
        if (v36) {
          uint64_t v37 = 1;
        }
        else {
          uint64_t v37 = 2;
        }
        uint64_t v38 = v52;
LABEL_27:
        id v32 = sub_21F30AB3C((uint64_t)v22, v37, (uint64_t)v35);

        (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v38);
        return v32;
      }
      sub_21F2E586C((uint64_t)v10);
    }
    uint64_t v38 = v52;
    unint64_t v55 = v22;
    uint64_t v39 = v56;
    if (qword_26AD38AC0 != -1) {
      swift_once();
    }
    id v60 = &type metadata for PIMSConstraintMismatch;
    unint64_t v61 = sub_21F2DE8C0();
    v58[0] = 0xD000000000000016;
    v58[1] = 0x800000021F433740;
    char v59 = 13;
    sub_21F41F708();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_21F41FF28();
    __swift_project_value_buffer(v40, (uint64_t)qword_26AD3C910);
    v53(v39, v57, v38);
    unint64_t v41 = sub_21F41FF08();
    os_log_type_t v42 = sub_21F420678();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v58[0] = v44;
      *(_DWORD *)uint64_t v43 = 136315394;
      if (qword_267EC71F8 != -1) {
        swift_once();
      }
      uint64_t v45 = qword_267EC8720;
      unint64_t v46 = *(void *)algn_267EC8728;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_21F2A02C4(v45, v46, v58);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_21F30AE0C();
      uint64_t v47 = v56;
      uint64_t v48 = sub_21F420DA8();
      uint64_t v62 = sub_21F2A02C4(v48, v49, v58);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v47, v38);
      _os_log_impl(&dword_21F29A000, v41, v42, "%s PIMS %s not found in suggestion store, emitting PLUSSchemaPLUSSuggestionMatchResult with nil suggestionValue", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v44, -1, -1);
      MEMORY[0x223C4B440](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v39, v38);
    }

    uint64_t v24 = v15;
    uint64_t v37 = 0;
    unint64_t v35 = 0;
    id v22 = v55;
    goto LABEL_27;
  }
  sub_21F29FA48((uint64_t)v13, &qword_26AD38738);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_21F41FF28();
  __swift_project_value_buffer(v25, (uint64_t)qword_26AD3C910);
  uint64_t v26 = sub_21F41FF08();
  os_log_type_t v27 = sub_21F420678();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v58[0] = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    if (qword_267EC71F8 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_267EC8720;
    unint64_t v31 = *(void *)algn_267EC8728;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_21F2A02C4(v30, v31, v58);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v26, v27, "%s Failed to generated suggestionId", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v29, -1, -1);
    MEMORY[0x223C4B440](v28, -1, -1);
  }

  return 0;
}

void sub_21F3095EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA48]), sel_init);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA28]), sel_init);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA30]), sel_init);
      if (v12)
      {
        os_log_type_t v27 = v12;
        uint64_t v13 = (int *)type metadata accessor for PimsSuggestionMetadata();
        [v27 setLocality:dword_21F425A18[*(char *)(a3 + v13[5])]];
        LOBYTE(v28) = *(unsigned char *)(a3 + v13[6]);
        [v27 setServerTreatment:sub_21F3A845C((char *)&v28)];
        LOBYTE(v28) = *(unsigned char *)(a3 + v13[7]);
        [v27 setClientTreatment:sub_21F3A8470((char *)&v28)];
        objc_msgSend(v11, sel_setMediaMetadata_, v27);
        id v14 = sub_21F30A87C();
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v14);

        id v15 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        uint64_t v16 = (void *)sub_21F41F1C8();
        id v17 = objc_msgSend(v15, sel_initWithNSUUID_, v16);

        objc_msgSend(v9, sel_setSuggestionLinkId_, v17);
        id v18 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        uint64_t v19 = (void *)sub_21F41F1C8();
        id v20 = objc_msgSend(v18, sel_initWithNSUUID_, v19);

        objc_msgSend(v9, sel_setOriginalRequestId_, v20);
        objc_msgSend(v9, sel_setSuggestionSurfaced_, sub_21F41FB18());
        objc_msgSend(v9, sel_setSuggestionNoveltyState_, sub_21F41FB28());
        objc_msgSend(v9, sel_setDomainSuggestionMetadata_, v11);
        sub_21F30E82C((uint64_t)v9, a4, a5);

LABEL_14:

        return;
      }
    }
    else
    {
      uint64_t v11 = v9;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_21F41FF28();
  __swift_project_value_buffer(v21, (uint64_t)qword_26AD3C910);
  os_log_type_t v27 = sub_21F41FF08();
  os_log_type_t v22 = sub_21F420678();
  if (!os_log_type_enabled(v27, v22)) {
    goto LABEL_14;
  }
  uint64_t v23 = (uint8_t *)swift_slowAlloc();
  uint64_t v24 = swift_slowAlloc();
  uint64_t v28 = v24;
  *(_DWORD *)uint64_t v23 = 136315138;
  if (qword_267EC71F8 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_267EC8720;
  unint64_t v26 = *(void *)algn_267EC8728;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v25, v26, &v28);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, v27, v22, "%s Failed to create PLUSSuggesterSuggestionMetadataReported", v23, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v24, -1, -1);
  MEMORY[0x223C4B440](v23, -1, -1);
}

void sub_21F309A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA50]), sel_init);
  if (v7)
  {
    uint64_t v21 = v7;
    id v8 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    uint64_t v9 = (void *)sub_21F41F1C8();
    id v10 = objc_msgSend(v8, sel_initWithNSUUID_, v9);

    [v21 setSuggestionLinkId:v10];
    id v11 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    uint64_t v12 = (void *)sub_21F41F1C8();
    id v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

    [v21 setOriginalRequestId:v13];
    id v14 = sub_21F30A87C();
    [v21 setSuggestionDomainMetadata:v14];

    [v21 setSuggestionRedundancyState:sub_21F41FB38()];
    sub_21F30E840((uint64_t)v21, a4, a5);
LABEL_9:

    return;
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_21F41FF28();
  __swift_project_value_buffer(v15, (uint64_t)qword_26AD3C910);
  uint64_t v21 = sub_21F41FF08();
  os_log_type_t v16 = sub_21F420678();
  if (!os_log_type_enabled(v21, v16)) {
    goto LABEL_9;
  }
  id v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v18 = swift_slowAlloc();
  uint64_t v22 = v18;
  *(_DWORD *)id v17 = 136315138;
  if (qword_267EC71F8 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_267EC8720;
  unint64_t v20 = *(void *)algn_267EC8728;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v19, v20, &v22);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, v21, v16, "%s Failed to create PLUSSchemaPLUSSuggesterSuggestionRedundancyReported", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v18, -1, -1);
  MEMORY[0x223C4B440](v17, -1, -1);
}

void *sub_21F309D2C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA00]), sel_init);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA18]), sel_init);
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA88]), sel_init);
      if (v6)
      {
        uint64_t v7 = v6;
        objc_msgSend(v5, sel_setSourceType_, 1);
        uint64_t v8 = type metadata accessor for PlusMediaSuggestion();
        sub_21F30A044(*(void *)(a1 + *(int *)(v8 + 28)));
        sub_21F2ABFB4(0, qword_267EC8740);
        uint64_t v9 = (void *)sub_21F420338();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setContributingGroundTruths_, v9);

        objc_msgSend(v3, sel_setSource_, v5);
        uint64_t v10 = sub_21F31E604((uint64_t)&unk_26D0CC1D0);
        char v11 = sub_21F3C6860(*(void *)(a1 + *(int *)(v8 + 44)), v10);
        swift_bridgeObjectRelease();
        if (v11) {
          uint64_t v12 = 2;
        }
        else {
          uint64_t v12 = 1;
        }
        objc_msgSend(v3, sel_setLocality_, v12);
        objc_msgSend(v7, sel_setMediaSuggestion_, v3);

        return v7;
      }
    }
    else
    {
      uint64_t v5 = v3;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_21F41FF28();
  __swift_project_value_buffer(v13, (uint64_t)qword_26AD3C910);
  id v14 = sub_21F41FF08();
  os_log_type_t v15 = sub_21F420678();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = v17;
    *(_DWORD *)os_log_type_t v16 = 136315138;
    if (qword_267EC71F8 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_267EC8720;
    unint64_t v19 = *(void *)algn_267EC8728;
    swift_bridgeObjectRetain();
    sub_21F2A02C4(v18, v19, &v21);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v14, v15, "%s Failure creating SELF message objects", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v17, -1, -1);
    MEMORY[0x223C4B440](v16, -1, -1);
  }

  return 0;
}

uint64_t sub_21F30A044(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = type metadata accessor for ThinMediaGroundTruth();
  uint64_t v4 = MEMORY[0x270FA5388](v45);
  id v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v10 = (char *)&v38 - v9;
  char v11 = (void *)MEMORY[0x263F8EE80];
  unint64_t v46 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v2;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = (v13 + 32) & ~v13;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v42 = v16 + v14;
    uint64_t v41 = v13 | 7;
    swift_bridgeObjectRetain();
    long long v40 = xmmword_21F422460;
    uint64_t v43 = v14;
    uint64_t v44 = v6;
    while (1)
    {
      sub_21F2E67F0(v15, (uint64_t)v10);
      unsigned __int8 v18 = v10[*(int *)(v45 + 24)];
      unint64_t v20 = sub_21F2F8340(v18);
      uint64_t v21 = v11[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        break;
      }
      char v24 = v19;
      if (v11[3] < v23)
      {
        sub_21F2FB0E8(v23, 1);
        char v11 = v46;
        unint64_t v25 = sub_21F2F8340(v18);
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_20;
        }
        unint64_t v20 = v25;
      }
      if (v24)
      {
        uint64_t v27 = v11[7];
        sub_21F30AE64((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
        unint64_t v28 = *(void *)(v27 + 8 * v20);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v27 + 8 * v20) = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v28 = sub_21F2A7DFC(0, *(void *)(v28 + 16) + 1, 1, v28);
          *(void *)(v27 + 8 * v20) = v28;
        }
        unint64_t v31 = *(void *)(v28 + 16);
        unint64_t v30 = *(void *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          unint64_t v28 = sub_21F2A7DFC(v30 > 1, v31 + 1, 1, v28);
          *(void *)(v27 + 8 * v20) = v28;
        }
        *(void *)(v28 + 16) = v31 + 1;
        uint64_t v14 = v43;
        uint64_t v17 = v28 + v43 + v31 * v16;
        id v6 = v44;
        sub_21F30AE64((uint64_t)v44, v17, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7918);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v40;
        sub_21F30AE64((uint64_t)v10, v32 + v14, (uint64_t (*)(void))type metadata accessor for ThinMediaGroundTruth);
        v11[(v20 >> 6) + 8] |= 1 << v20;
        *(unsigned char *)(v11[6] + v20) = v18;
        *(void *)(v11[7] + 8 * v20) = v32;
        uint64_t v33 = v11[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_19;
        }
        void v11[2] = v35;
      }
      v15 += v16;
      if (!--v12)
      {
        uint64_t v7 = swift_bridgeObjectRelease();
        uint64_t v2 = v39;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_21F420E68();
    __break(1u);
  }
  else
  {
LABEL_17:
    MEMORY[0x270FA5388](v7);
    *(&v38 - 2) = v2;
    uint64_t v36 = sub_21F30A660((uint64_t)v11, (uint64_t (*)(unsigned char *, uint64_t))sub_21F30AECC);
    swift_release();
    return v36;
  }
  return result;
}

void *sub_21F30A3C8(char *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E9F8]), sel_init);
  if (v4)
  {
    uint64_t v5 = v4;
    if ((v3 & 0x80000000) != 0)
    {
      if ((v3 & 0x7F) - 1 < 2) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = 5;
      }
    }
    else
    {
      uint64_t v6 = dword_21F425A28[v3];
    }
    objc_msgSend(v4, sel_setSource_, v6);
    if (!(*(void *)(a2 + 16) >> 31))
    {
      objc_msgSend(v5, sel_setGroundTruthCount_);
      return v5;
    }
    __break(1u);
    goto LABEL_17;
  }
  if (qword_26AD38998 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v7 = sub_21F41FF28();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AD3C910);
  uint64_t v8 = sub_21F41FF08();
  os_log_type_t v9 = sub_21F420678();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    if (qword_267EC71F8 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_267EC8720;
    unint64_t v13 = *(void *)algn_267EC8728;
    swift_bridgeObjectRetain();
    sub_21F2A02C4(v12, v13, &v15);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v8, v9, "%s Failed to create PLUSSchemaPLUSMediaGroundTruthSummary", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v11, -1, -1);
    MEMORY[0x223C4B440](v10, -1, -1);
  }

  return 0;
}

uint64_t sub_21F30A604()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PLUSMediaSuggesterRuntimeLogHelper()
{
  return self;
}

uint64_t sub_21F30A660(uint64_t a1, uint64_t (*a2)(unsigned char *, uint64_t))
{
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v17 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v11);
    v18[0] = *(unsigned char *)(*(void *)(a1 + 48) + v11);
    uint64_t v19 = v15;
    swift_bridgeObjectRetain();
    uint64_t v16 = a2(v18, v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      MEMORY[0x223C4A030](result);
      if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_21F420398();
      }
      sub_21F4203E8();
      uint64_t result = sub_21F420368();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v17 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v17 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v17 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v9 = v12 + 3;
  if (v12 + 3 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v17 + 8 * v9);
  if (v13)
  {
LABEL_21:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_26:
    swift_release();
    return v20;
  }
  unint64_t v13 = *(void *)(v17 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21F30A87C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA60]), sel_init);
  if (v0)
  {
    id v1 = v0;
    objc_msgSend(v0, sel_setSuggestionGenerationDomain_, 3);
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_21F41FF28();
    __swift_project_value_buffer(v2, (uint64_t)qword_26AD3C910);
    uint64_t v3 = sub_21F41FF08();
    os_log_type_t v4 = sub_21F420678();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v10 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      if (qword_267EC71F8 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_267EC8720;
      unint64_t v8 = *(void *)algn_267EC8728;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(v7, v8, &v10);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v3, v4, "%s Failure creating PLUSSchemaPLUSSuggestionDomainMetadata", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v6, -1, -1);
      MEMORY[0x223C4B440](v5, -1, -1);
    }

    return 0;
  }
  return v1;
}

void *sub_21F30AA68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7E40);
  uint64_t result = sub_21F308E10(v5, a1, a1 + *(int *)(v7 + 48), v6);
  *a2 = result;
  return result;
}

uint64_t sub_21F30AAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_21F30AB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA70]), sel_init);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA58]), sel_init);
    if (v7)
    {
      unint64_t v8 = v7;
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA78]), sel_init);
      if (v9)
      {
        uint64_t v10 = v9;
        objc_msgSend(v9, sel_setSurfacedBeforeStatus_, a2);
        objc_msgSend(v8, sel_setSuggestionValue_, a3);
        objc_msgSend(v8, sel_setSuggestionMetadata_, v10);
        id v11 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        int64_t v12 = (void *)sub_21F41F1C8();
        id v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v6, sel_setSuggestionId_, v13);
        objc_msgSend(v6, sel_setGeneratedSuggestion_, v8);

        return v6;
      }
    }
    else
    {
      unint64_t v8 = v6;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_21F41FF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
  uint64_t v15 = sub_21F41FF08();
  os_log_type_t v16 = sub_21F420678();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    if (qword_267EC71F8 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_267EC8720;
    unint64_t v20 = *(void *)algn_267EC8728;
    swift_bridgeObjectRetain();
    sub_21F2A02C4(v19, v20, &v22);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v15, v16, "%s Failure creating PLUSSchemaPLUSSuggestionMatchResult message", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v18, -1, -1);
    MEMORY[0x223C4B440](v17, -1, -1);
  }

  return 0;
}

unint64_t sub_21F30AE0C()
{
  unint64_t result = qword_26AD3A848;
  if (!qword_26AD3A848)
  {
    sub_21F41F228();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AD3A848);
  }
  return result;
}

uint64_t sub_21F30AE64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_21F30AECC(char *a1, uint64_t a2)
{
  return sub_21F30A3C8(a1, a2);
}

uint64_t sub_21F30AED4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21F30AF80()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t sub_21F30B008()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v1 = static InferenceLogUtils.loggerTag<A>(_:)();
    *(void *)(v0 + 16) = v1;
    *(void *)(v0 + 24) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21F30B0A0(uint64_t a1, void (**a2)(char *, char *, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v254 = a1;
  id v7 = *(uint64_t (***)(char *, uint64_t, void *))(*v3 + 88);
  unint64_t v8 = *(void **)(*v3 + 80);
  v253 = *(void (***)(void, void, void))(*v3 + 96);
  v239 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  v266 = AssociatedTypeWitness;
  uint64_t v267 = v11;
  uint64_t v268 = v12;
  uint64_t v269 = v13;
  uint64_t v231 = type metadata accessor for ScoreStep();
  unint64_t v252 = *(void *)(v231 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v231);
  v230 = (double *)((char *)v185 - v15);
  v251 = (char *)*(v8 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v229 = (char *)v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v228 = (char *)v185 - v19;
  MEMORY[0x270FA5388](v18);
  v257 = (char *)v185 - v20;
  uint64_t v241 = sub_21F420798();
  v255 = *(void (***)(char *, uint64_t))(v241 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v241);
  v227 = (char *)v185 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v249 = (char *)v185 - v24;
  MEMORY[0x270FA5388](v23);
  v226 = (char *)v185 - v25;
  uint64_t v26 = sub_21F420798();
  MEMORY[0x270FA5388](v26 - 8);
  v201 = (char *)v185 - v27;
  uint64_t v245 = AssociatedTypeWitness;
  v266 = AssociatedTypeWitness;
  uint64_t v267 = v11;
  uint64_t v244 = v11;
  uint64_t v243 = v12;
  uint64_t v268 = v12;
  uint64_t v269 = v13;
  unint64_t v28 = a2;
  uint64_t v242 = v13;
  uint64_t v29 = type metadata accessor for DomainSuggestionSignal();
  uint64_t v200 = sub_21F420798();
  v240 = *(char ***)(v200 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v200);
  uint64_t v32 = (char *)v185 - v31;
  uint64_t v259 = v29;
  v250 = *(void (**)(char *, uint64_t))(v29 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  v224 = (char *)v185 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  v260 = (char *)v185 - v35;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v205 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  v223 = (char *)v185 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v248 = (char *)v185 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v199 = (char *)v185 - v42;
  MEMORY[0x270FA5388](v41);
  v261 = (char *)v185 - v43;
  uint64_t v237 = v44;
  uint64_t v45 = sub_21F420798();
  MEMORY[0x270FA5388](v45 - 8);
  v233 = (char *)v185 - v46;
  uint64_t v235 = AssociatedConformanceWitness;
  uint64_t v47 = v254;
  v246 = v8;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v256 = *(void *)(v48 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  uint64_t v51 = (uint64_t)v185 - v50;
  uint64_t v52 = (void (**)(char *, char *, uint64_t))*(v28 - 1);
  uint64_t v53 = MEMORY[0x270FA5388](v49);
  v222 = (char *)v185 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v53);
  unint64_t v56 = (unint64_t)v185 - v55;
  uint64_t v57 = *(uint64_t (**)(void, void))(a3 + 40);
  uint64_t v236 = a3;
  uint64_t v58 = v57(v28, a3);
  if (qword_26AD38998 != -1) {
LABEL_71:
  }
    swift_once();
  uint64_t v59 = sub_21F41FF28();
  uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_26AD3C910);
  unint64_t v61 = v52[2];
  v221 = (char *)(v52 + 2);
  v220 = v61;
  v61((char *)v56, (char *)v47, (uint64_t)v28);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v203 = v60;
  uint64_t v62 = sub_21F41FF08();
  os_log_type_t v63 = sub_21F420668();
  LODWORD(v232) = v63;
  BOOL v64 = os_log_type_enabled(v62, v63);
  v258 = v4;
  v204 = v51;
  v247 = v28;
  uint64_t v234 = v58;
  v238 = v52;
  if (v64)
  {
    uint64_t v65 = swift_slowAlloc();
    uint64_t v225 = swift_slowAlloc();
    v266 = v225;
    *(_DWORD *)uint64_t v65 = 136315650;
    os_log_t v219 = v62;
    uint64_t v66 = sub_21F30B008();
    uint64_t v264 = sub_21F2A02C4(v66, v67, (uint64_t *)&v266);
    sub_21F4207D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2048;
    swift_getAssociatedConformanceWitness();
    uint64_t v68 = sub_21F41FFD8();
    swift_bridgeObjectRelease();
    uint64_t v264 = v68;
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 22) = 2080;
    v202 = *(void (**)(void, void))(v236 + 32);
    unint64_t v69 = (v236 + 32) & 0xFFFFFFFFFFFFLL | 0xAE1A000000000000;
    v202(v247, v236);
    uint64_t v70 = sub_21F420108();
    uint64_t v264 = sub_21F2A02C4(v70, v71, (uint64_t *)&v266);
    uint64_t v51 = (uint64_t)v204;
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    v208 = v52[1];
    ((void (*)(unint64_t, void (**)(char *, char *, uint64_t)))v208)(v56, v247);
    os_log_t v72 = v219;
    _os_log_impl(&dword_21F29A000, v219, (os_log_type_t)v232, "%s Reviewing %ld new signals for entity query %s", (uint8_t *)v65, 0x20u);
    uint64_t v73 = v225;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v73, -1, -1);
    MEMORY[0x223C4B440](v65, -1, -1);

    uint64_t v74 = v236;
    unint64_t v28 = v247;
    uint64_t v75 = v202;
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    v208 = v52[1];
    ((void (*)(unint64_t, void (**)(char *, char *, uint64_t)))v208)(v56, v28);

    uint64_t v74 = v236;
    uint64_t v75 = *(void (**)(void, void))(v236 + 32);
    unint64_t v69 = (v236 + 32) & 0xFFFFFFFFFFFFLL | 0xAE1A000000000000;
  }
  v202 = v75;
  unint64_t v198 = v69;
  v75(v28, v74);
  uint64_t v76 = sub_21F30D068(v51);
  (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v51, v48);
  uint64_t v265 = v76;
  swift_retain_n();
  unint64_t v77 = sub_21F41FF08();
  os_log_type_t v78 = sub_21F420668();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v256 = swift_slowAlloc();
    v266 = v256;
    *(_DWORD *)uint64_t v79 = 136315394;
    uint64_t v80 = sub_21F30B008();
    uint64_t v264 = sub_21F2A02C4(v80, v81, (uint64_t *)&v266);
    sub_21F4207D8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 12) = 2048;
    v232 = (void *)(v79 + 14);
    swift_beginAccess();
    unint64_t v82 = v246;
    uint64_t v83 = swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_21F41FFD8();
    swift_bridgeObjectRelease();
    uint64_t v264 = v84;
    os_log_type_t v85 = v247;
    sub_21F4207D8();
    _os_log_impl(&dword_21F29A000, v77, v78, "%s Found %ld existing candidates to update.", (uint8_t *)v79, 0x16u);
    uint64_t v86 = v256;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v86, -1, -1);
    MEMORY[0x223C4B440](v79, -1, -1);
  }
  else
  {

    swift_release_n();
    unint64_t v82 = v246;
    uint64_t v87 = swift_getAssociatedConformanceWitness();
    uint64_t v83 = v87;
    os_log_type_t v85 = v247;
  }
  uint64_t v88 = *(void *)(v83 + 8);
  uint64_t v89 = v234;
  v266 = v234;
  MEMORY[0x270FA5388](v87);
  uint64_t v90 = (uint64_t (**)(void, uint64_t, void))v239;
  v185[-6] = v82;
  v185[-5] = v90;
  uint64_t v91 = v253;
  v185[-4] = v85;
  v185[-3] = v91;
  uint64_t v92 = v236;
  v185[-2] = v236;
  uint64_t KeyPath = swift_getKeyPath();
  v232 = v185;
  uint64_t v94 = MEMORY[0x270FA5388](KeyPath);
  v185[-6] = v246;
  v185[-5] = v90;
  v185[-4] = v85;
  v185[-3] = v91;
  v185[-2] = v92;
  v185[-1] = v94;
  uint64_t v48 = v237;
  uint64_t v95 = sub_21F41FFE8();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = sub_21F2E958C((void (*)(char *, char *))sub_21F30D554, (uint64_t)&v185[-8], v95, (uint64_t)&type metadata for SuggestionSignal, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v97);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v99 = v246;
  v266 = v98;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC84E8);
  sub_21F30D61C();
  int v197 = sub_21F30D580();
  swift_bridgeObjectRelease();
  v266 = v89;
  sub_21F41FFC8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_21F4205B8();
  swift_beginAccess();
  v266 = v265;
  char v100 = v99;
  sub_21F41FFC8();
  uint64_t v101 = v88;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  v266 = sub_21F4205B8();
  sub_21F4205A8();
  swift_getWitnessTable();
  uint64_t v102 = sub_21F420558();
  uint64_t v51 = v102;
  if ((v102 & 0xC000000000000001) != 0)
  {
    sub_21F420898();
    sub_21F420578();
    uint64_t v51 = (uint64_t)v266;
    uint64_t v190 = v267;
    uint64_t v104 = v268;
    uint64_t v206 = v269;
    unint64_t v56 = v270;
  }
  else
  {
    uint64_t v206 = 0;
    uint64_t v105 = -1 << *(unsigned char *)(v102 + 32);
    uint64_t v106 = *(void *)(v102 + 56);
    uint64_t v190 = v102 + 56;
    uint64_t v104 = ~v105;
    uint64_t v107 = -v105;
    if (v107 < 64) {
      uint64_t v108 = ~(-1 << v107);
    }
    else {
      uint64_t v108 = -1;
    }
    unint64_t v56 = v108 & v106;
  }
  uint64_t v191 = v51 & 0x7FFFFFFFFFFFFFFFLL;
  v232 = (void *)(v205 + 56);
  v185[1] = v104;
  int64_t v186 = (unint64_t)(v104 + 64) >> 6;
  v253 = (void (**)(void, void, void))(v205 + 16);
  v218 = (void (**)(char *, char *, uint64_t))(v205 + 32);
  v217 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)v250 + 48);
  v196 = (void (**)(unsigned char *, char *, uint64_t))((char *)v250 + 32);
  uint64_t v195 = v245 - 8;
  v194 = (void (**)(char *, uint64_t))(v240 + 1);
  v239 = (uint64_t (**)(char *, uint64_t, void *))(v251 + 48);
  v240 = (char **)(v255 + 1);
  v255 = (void (**)(char *, uint64_t))(v205 + 8);
  v189 = (uint64_t *)&v263;
  v207 = (char *)(v238 + 1);
  v193 = (void (**)(char *, char *, void *))(v251 + 32);
  uint64_t v192 = v235 + 112;
  uint64_t v216 = v235 + 96;
  v215 = (void (**)(char *, unsigned char *, uint64_t))((char *)v250 + 16);
  uint64_t v214 = v235 + 120;
  v213 = (void (**)(char *, char *, void *))(v251 + 16);
  v212 = (void (**)(char *, void, uint64_t, void *))(v251 + 56);
  v211 = (void (**)(char *, void *))(v251 + 8);
  v210 = (void (**)(double *, uint64_t))(v252 + 8);
  v209 = (void (**)(unsigned char *, uint64_t))((char *)v250 + 8);
  *(void *)&long long v103 = 136315394;
  long long v188 = v103;
  uint64_t v187 = MEMORY[0x263F8EE58] + 8;
  uint64_t v225 = (uint64_t)v32;
  uint64_t v58 = v237;
  uint64_t v52 = v247;
  uint64_t v256 = v101;
  os_log_t v219 = (os_log_t)v51;
  uint64_t v4 = v100;
  while (v51 < 0)
  {
    uint64_t v120 = sub_21F4208C8();
    unint64_t v28 = (void (**)(char *, char *, uint64_t))v253;
    if (!v120)
    {
      uint64_t v119 = v233;
      goto LABEL_69;
    }
    uint64_t v119 = v233;
    sub_21F420DE8();
    swift_unknownObjectRelease();
LABEL_34:
    ((void (*)(char *, void, uint64_t, uint64_t))*v232)(v119, 0, 1, v58);
    os_log_type_t v125 = v261;
    (*v218)(v261, v119, v58);
    uint64_t v126 = v125;
    uint64_t v127 = v259;
    uint64_t v128 = v256;
    MEMORY[0x223C49D10](v126, v234, v58, v259, v256);
    int v129 = (*v217)(v32, 1, v127);
    unint64_t v252 = v56;
    if (v129 == 1)
    {
      uint64_t v130 = (uint64_t)v201;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v245 - 8) + 56))(v201, 1, 1, v245);
      sub_21F3B64A8(v197, v130, v260);
      (*v194)(v32, v200);
    }
    else
    {
      (*v196)(v260, v32, v259);
    }
    swift_beginAccess();
    uint64_t v131 = v226;
    MEMORY[0x223C49D10](v261, v265, v58, v4, v128);
    swift_endAccess();
    uint64_t v132 = (uint64_t (*)(void, uint64_t, void))*v239;
    int v133 = (*v239)(v131, 1, v4);
    uint64_t v134 = v4;
    v238 = (void (**)(char *, char *, uint64_t))*v240;
    ((void (*)(char *, uint64_t))v238)(v131, v241);
    BOOL v172 = v133 == 1;
    uint64_t v135 = v249;
    if (v172)
    {
      uint64_t v136 = *v28;
      Swift::Double_optional v137 = v199;
      (*v28)(v199, v261, v58);
      swift_retain_n();
      uint64_t v138 = sub_21F41FF08();
      os_log_type_t v139 = sub_21F420668();
      int v140 = v139;
      if (os_log_type_enabled(v138, v139))
      {
        uint64_t v141 = swift_slowAlloc();
        v251 = (char *)swift_slowAlloc();
        v263 = v251;
        *(_DWORD *)uint64_t v141 = v188;
        LODWORD(v250) = v140;
        uint64_t v142 = sub_21F30B008();
        uint64_t v262 = sub_21F2A02C4(v142, v143, (uint64_t *)&v263);
        sub_21F4207D8();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v141 + 12) = 2080;
        v136(v248, v137, v58);
        uint64_t v144 = sub_21F420108();
        uint64_t v262 = sub_21F2A02C4(v144, v145, (uint64_t *)&v263);
        sub_21F4207D8();
        uint64_t v146 = v256;
        swift_bridgeObjectRelease();
        (*v255)(v137, v58);
        _os_log_impl(&dword_21F29A000, v138, (os_log_type_t)v250, "%s Signal for new entity provided. Generating new candidate. Entity=%s", (uint8_t *)v141, 0x16u);
        uint64_t v147 = v251;
        swift_arrayDestroy();
        uint64_t v148 = v147;
        uint64_t v135 = v249;
        MEMORY[0x223C4B440](v148, -1, -1);
        MEMORY[0x223C4B440](v141, -1, -1);

        uint64_t v128 = v146;
        uint64_t v52 = v247;
        uint64_t v134 = v246;
      }
      else
      {
        swift_release_n();
        (*v255)(v137, v58);

        uint64_t v52 = v247;
        uint64_t v134 = v246;
        uint64_t v128 = v256;
      }
    }
    swift_beginAccess();
    unint64_t v149 = v261;
    MEMORY[0x223C49D10](v261, v265, v58, v134, v128);
    swift_endAccess();
    uint64_t v150 = v222;
    v220(v222, (char *)v254, (uint64_t)v52);
    unint64_t v151 = v223;
    uint64_t v152 = v149;
    long long v153 = (char *)*v28;
    (*v28)(v223, v152, v58);
    int v154 = v132(v135, 1, v134);
    v251 = v153;
    if (v154 == 1)
    {
      long long v155 = v204;
      uint64_t v156 = v153;
      long long v157 = v52;
      long long v158 = v150;
      uint64_t v159 = v236;
      v202(v157, v236);
      long long v160 = v248;
      ((void (*)(char *, char *, uint64_t))v156)(v248, v151, v58);
      uint64_t v161 = v151;
      uint64_t v162 = v58;
      uint64_t v163 = v235;
      (*(void (**)(NSObject *, char *, void *, uint64_t))(v235 + 112))(v155, v160, v134, v235);
      uint64_t v164 = v159;
      v250 = *v255;
      v250(v161, v162);
      ((void (*)(char *, void (**)(char *, char *, uint64_t)))v208)(v158, v157);
      ((void (*)(char *, uint64_t))v238)(v249, v241);
      v165 = v134;
    }
    else
    {
      v250 = *v255;
      v250(v151, v58);
      ((void (*)(char *, void (**)(char *, char *, uint64_t)))v208)(v150, v52);
      (*v193)(v257, v135, v134);
      uint64_t v164 = v236;
      v165 = v134;
      uint64_t v163 = v235;
    }
    uint64_t v166 = v258[4];
    double v167 = (*(double (**)(void *, uint64_t))(v163 + 96))(v165, v163);
    double v168 = v167;
    uint64_t v169 = *v260;
    double v170 = 0.0;
    if ((v169 - 3) <= 4) {
      double v170 = dbl_21F425AF8[(char)(v169 - 3)];
    }
    uint64_t v171 = *(void *)(*(void *)(v166 + 16) + 16);
    if (v171)
    {
      BOOL v172 = v167 > 0.0 && v169 == 0;
      int v173 = v172;
      double v174 = fmax(-v167, -0.2);
      do
      {
        if (v173) {
          double v175 = v174;
        }
        else {
          double v175 = v170;
        }
        if ((v169 - 3) >= 6u) {
          double v170 = v175;
        }
        --v171;
      }
      while (v171);
    }
    double v176 = v168 + v170;
    uint64_t v177 = *(void *)(v166 + 24);
    uint64_t v178 = *(void *)(v177 + 16);
    if (v178)
    {
      v179 = (void *)(v177 + 32);
      do
      {
        uint64_t v180 = v179[3];
        uint64_t v181 = v179[4];
        __swift_project_boxed_opaque_existential_1(v179, v180);
        double v182 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double, double))(v181 + 8))(v169, v180, v181, v168, v176));
        if ((v183 & 1) == 0) {
          double v176 = v182;
        }
        v179 += 5;
        --v178;
      }
      while (v178);
    }
    uint64_t v109 = (uint64_t)v224;
    (*v215)(v224, v260, v259);
    char v110 = v230;
    sub_21F2DAF6C(v109, v230, v168, v176, v170);
    uint64_t v111 = v228;
    uint64_t v4 = v246;
    (*(void (**)(double *, void *, uint64_t))(v163 + 120))(v110, v246, v163);
    uint64_t v112 = v229;
    uint64_t v52 = v247;
    (*(void (**)(char *, uint64_t, uint64_t, void (**)(char *, char *, uint64_t), uint64_t))(*v258 + 184))(v111, v169, v254, v247, v164);
    uint64_t v48 = (uint64_t)v261;
    uint64_t v113 = v237;
    ((void (*)(char *, char *, uint64_t))v251)(v248, v261, v237);
    uint64_t v114 = v227;
    (*v213)(v227, v112, v4);
    (*v212)(v114, 0, 1, v4);
    swift_beginAccess();
    sub_21F41FFF8();
    sub_21F420018();
    swift_endAccess();
    uint64_t v115 = (void (*)(void, void))*v211;
    uint64_t v116 = v112;
    uint64_t v58 = v113;
    (*v211)(v116, v4);
    v115(v111, v4);
    (*v210)(v110, v231);
    v115(v257, v4);
    (*v209)(v260, v259);
    v250((char *)v48, v113);
    uint64_t v32 = (char *)v225;
    uint64_t v51 = (uint64_t)v219;
    unint64_t v56 = v252;
  }
  unint64_t v28 = (void (**)(char *, char *, uint64_t))v253;
  if (v56)
  {
    unint64_t v117 = __clz(__rbit64(v56));
    v56 &= v56 - 1;
    unint64_t v118 = v117 | (v206 << 6);
    uint64_t v119 = v233;
LABEL_33:
    (*(void (**)(char *, unint64_t, uint64_t))(v205 + 16))(v119, *(void *)(v51 + 48) + *(void *)(v205 + 72) * v118, v58);
    goto LABEL_34;
  }
  int64_t v121 = v206 + 1;
  uint64_t v119 = v233;
  uint64_t v47 = v190;
  if (__OFADD__(v206, 1))
  {
    __break(1u);
    goto LABEL_71;
  }
  if (v121 >= v186) {
    goto LABEL_69;
  }
  unint64_t v122 = *(void *)(v190 + 8 * v121);
  uint64_t v123 = v206 + 1;
  if (v122) {
    goto LABEL_32;
  }
  uint64_t v123 = v206 + 2;
  if (v206 + 2 >= v186) {
    goto LABEL_69;
  }
  unint64_t v122 = *(void *)(v190 + 8 * v123);
  if (v122) {
    goto LABEL_32;
  }
  uint64_t v123 = v206 + 3;
  if (v206 + 3 >= v186) {
    goto LABEL_69;
  }
  unint64_t v122 = *(void *)(v190 + 8 * v123);
  if (v122)
  {
LABEL_32:
    unint64_t v56 = (v122 - 1) & v122;
    unint64_t v118 = __clz(__rbit64(v122)) + (v123 << 6);
    uint64_t v206 = v123;
    goto LABEL_33;
  }
  uint64_t v124 = v206 + 4;
  while (v186 != v124)
  {
    unint64_t v122 = *(void *)(v190 + 8 * v124++);
    if (v122)
    {
      uint64_t v123 = v124 - 1;
      goto LABEL_32;
    }
  }
LABEL_69:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v232)(v119, 1, 1, v58);
  sub_21F2ABEF8();
  swift_bridgeObjectRelease();
  return v265;
}

uint64_t sub_21F30D068(uint64_t a1)
{
  (*(void (**)(uint64_t, void, void))(*(void *)(*(void *)v1 + 96) + 24))(a1, *(void *)(*(void *)v1 + 88), *(void *)(*(void *)v1 + 96));
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_21F4203B8();
  swift_getAssociatedConformanceWitness();
  sub_21F41FFA8();
  sub_21F420428();
  sub_21F41FFF8();
  swift_getWitnessTable();
  sub_21F4202B8();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21F30D260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_21F420798();
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v12 - v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(a3, AssociatedConformanceWitness);
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a2, a3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, a3);
  swift_getAssociatedConformanceWitness();
  sub_21F41FFF8();
  return sub_21F420018();
}

BOOL sub_21F30D458(unsigned __int8 *a1)
{
  return *a1 - 3 < 2;
}

BOOL sub_21F30D46C(unsigned char *a1)
{
  return (*a1 & 0xFE) == 6;
}

uint64_t sub_21F30D480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 16))(a2, a1);
}

uint64_t sub_21F30D4C4()
{
  sub_21F30AF80();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CandidateProcessor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_21F30D534(uint64_t a1, uint64_t a2)
{
  return sub_21F30D260(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_21F30D554()
{
  return swift_getAtKeyPath();
}

uint64_t sub_21F30D580()
{
  if (sub_21F4202D8()) {
    return 0;
  }
  if (sub_21F4202D8()) {
    return 2;
  }
  return 1;
}

unint64_t sub_21F30D61C()
{
  unint64_t result = qword_267EC87C8;
  if (!qword_267EC87C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC84E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC87C8);
  }
  return result;
}

uint64_t sub_21F30D678()
{
  type metadata accessor for SELFEventLogEmitters();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC87E0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC87D0 = 91;
  *(void *)algn_267EC87D8 = 0xE100000000000000;
  return result;
}

void sub_21F30D6FC(uint64_t a1, uint64_t a2)
{
}

void sub_21F30D710(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_21F30EAEC();
  if (v6)
  {
    id v7 = v6;
    unint64_t v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E990]), sel_init);
    if (v8)
    {
      uint64_t v15 = v8;
      [v8 setGeneratedSuggestion:a1];
      [v15 setIsSuggestionUpdated:a3 & 1];
      objc_msgSend(v7, sel_setContactSuggestionGenerated_, v15);
      __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
      sub_21F41FAD8();

LABEL_11:

      return;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21F41FF28();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AD3C910);
  uint64_t v15 = sub_21F41FF08();
  os_log_type_t v10 = sub_21F420678();
  if (!os_log_type_enabled(v15, v10)) {
    goto LABEL_11;
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  uint64_t v16 = v12;
  *(_DWORD *)uint64_t v11 = 136315138;
  if (qword_267EC7200 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_267EC87D0;
  unint64_t v14 = *(void *)algn_267EC87D8;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v13, v14, &v16);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, v15, v10, "%s Failed to create PLUS SELF event templates", v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v12, -1, -1);
  MEMORY[0x223C4B440](v11, -1, -1);
}

void sub_21F30D994(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_21F30EAEC();
  if (v9)
  {
    os_log_type_t v10 = v9;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E948]), sel_init);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_setGroundTruth_, a1);
      sub_21F2B13D0(a2, (uint64_t)v8);
      uint64_t v13 = sub_21F41F228();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
      {
        sub_21F30EBD8((uint64_t)v8);
        id v15 = 0;
      }
      else
      {
        id v23 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        uint64_t v24 = (void *)sub_21F41F1C8();
        id v15 = objc_msgSend(v23, sel_initWithNSUUID_, v24);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
      }
      objc_msgSend(v12, sel_setOriginalPlusId_, v15);

      objc_msgSend(v10, sel_setContactGroundTruthGenerated_, v12);
      __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
      sub_21F41FAD8();

      return;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_21F41FF28();
  __swift_project_value_buffer(v16, (uint64_t)qword_26AD3C910);
  uint64_t v26 = sub_21F41FF08();
  os_log_type_t v17 = sub_21F420678();
  if (os_log_type_enabled(v26, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    if (qword_267EC7200 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_267EC87D0;
    unint64_t v21 = *(void *)algn_267EC87D8;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_21F2A02C4(v20, v21, &v28);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v26, v17, "%s Failed to create SELF message templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v19, -1, -1);
    MEMORY[0x223C4B440](v18, -1, -1);
  }
  else
  {
    uint64_t v22 = v26;
  }
}

void sub_21F30DD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v10 = sub_21F30EAEC();
  if (v10)
  {
    id v11 = v10;
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E9F0]), sel_init);
    if (v12)
    {
      uint64_t v13 = v12;
      sub_21F2B13D0(a3, (uint64_t)v9);
      uint64_t v14 = sub_21F41F228();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
      {
        sub_21F30EBD8((uint64_t)v9);
        id v16 = 0;
      }
      else
      {
        id v24 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        uint64_t v25 = (void *)sub_21F41F1C8();
        id v16 = objc_msgSend(v24, sel_initWithNSUUID_, v25);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
      }
      objc_msgSend(v13, sel_setOriginalRequestId_, v16);

      objc_msgSend(v13, sel_setGroundTruth_, a1);
      objc_msgSend(v11, sel_setMediaGroundTruthGenerated_, v13);
      __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
      sub_21F41FAD8();

      return;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_21F41FF28();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AD3C910);
  uint64_t v27 = sub_21F41FF08();
  os_log_type_t v18 = sub_21F420678();
  if (os_log_type_enabled(v27, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v29 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    if (qword_267EC7200 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_267EC87D0;
    unint64_t v22 = *(void *)algn_267EC87D8;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_21F2A02C4(v21, v22, &v29);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v27, v18, "%s Failed to create SELF message templates", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v20, -1, -1);
    MEMORY[0x223C4B440](v19, -1, -1);
  }
  else
  {
    id v23 = v27;
  }
}

void sub_21F30E108(uint64_t a1, uint64_t a2)
{
}

void sub_21F30E114(uint64_t a1, uint64_t a2)
{
}

void sub_21F30E120(uint64_t a1, uint64_t a2)
{
}

void sub_21F30E12C(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v6 = sub_21F30EAEC();
  if (v6)
  {
    os_log_t oslog = v6;
    objc_msgSend(v6, *a3, a1);
    __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
    sub_21F41FAF8();
LABEL_9:

    return;
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_21F41FF28();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AD3C910);
  os_log_t oslog = (os_log_t)sub_21F41FF08();
  os_log_type_t v8 = sub_21F420678();
  if (!os_log_type_enabled(oslog, v8)) {
    goto LABEL_9;
  }
  uint64_t v9 = (uint8_t *)swift_slowAlloc();
  uint64_t v10 = swift_slowAlloc();
  uint64_t v14 = v10;
  *(_DWORD *)uint64_t v9 = 136315138;
  if (qword_267EC7200 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_267EC87D0;
  unint64_t v12 = *(void *)algn_267EC87D8;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v11, v12, &v14);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, oslog, v8, "%s Failed to create SELF message templates", v9, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v10, -1, -1);
  MEMORY[0x223C4B440](v9, -1, -1);
}

void sub_21F30E354(uint64_t a1, uint64_t a2)
{
}

void sub_21F30E368(uint64_t a1, uint64_t a2, SEL *a3, const char *a4)
{
  os_log_type_t v8 = sub_21F30EAEC();
  if (v8)
  {
    os_log_t oslog = v8;
    objc_msgSend(v8, *a3, a1);
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
    sub_21F41FAD8();
LABEL_9:

    return;
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21F41FF28();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AD3C910);
  os_log_t oslog = (os_log_t)sub_21F41FF08();
  os_log_type_t v10 = sub_21F420678();
  if (!os_log_type_enabled(oslog, v10)) {
    goto LABEL_9;
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  uint64_t v16 = v12;
  *(_DWORD *)uint64_t v11 = 136315138;
  if (qword_267EC7200 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_267EC87D0;
  unint64_t v14 = *(void *)algn_267EC87D8;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v13, v14, &v16);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, oslog, v10, a4, v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v12, -1, -1);
  MEMORY[0x223C4B440](v11, -1, -1);
}

void sub_21F30E5A4(uint64_t a1)
{
  uint64_t v3 = sub_21F30EAEC();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EA90]), sel_init);
    if (v5)
    {
      os_log_t oslog = v5;
      [v5 setUsoGraphTier1:a1];
      objc_msgSend(v4, sel_setUsoGraphTier1_, oslog);
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      sub_21F41FAF8();

LABEL_11:

      return;
    }
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_21F41FF28();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AD3C910);
  os_log_t oslog = (os_log_t)sub_21F41FF08();
  os_log_type_t v7 = sub_21F420678();
  if (!os_log_type_enabled(oslog, v7)) {
    goto LABEL_11;
  }
  os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
  uint64_t v9 = swift_slowAlloc();
  uint64_t v13 = v9;
  *(_DWORD *)os_log_type_t v8 = 136315138;
  if (qword_267EC7200 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_267EC87D0;
  unint64_t v11 = *(void *)algn_267EC87D8;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v10, v11, &v13);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, oslog, v7, "%s Failed to create SELF message templates for USOGraphTier1", v8, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v9, -1, -1);
  MEMORY[0x223C4B440](v8, -1, -1);
}

void sub_21F30E804(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_21F30E818(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_21F30E82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_21F30E840(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_21F30E854(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, const char *a5)
{
  uint64_t v9 = sub_21F30EAEC();
  if (v9)
  {
    os_log_t oslog = v9;
    objc_msgSend(v9, *a4, a1);
    __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
    sub_21F41FAE8();
LABEL_9:

    return;
  }
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21F41FF28();
  __swift_project_value_buffer(v10, (uint64_t)qword_26AD3C910);
  os_log_t oslog = (os_log_t)sub_21F41FF08();
  os_log_type_t v11 = sub_21F420678();
  if (!os_log_type_enabled(oslog, v11)) {
    goto LABEL_9;
  }
  uint64_t v12 = (uint8_t *)swift_slowAlloc();
  uint64_t v13 = swift_slowAlloc();
  uint64_t v17 = v13;
  *(_DWORD *)uint64_t v12 = 136315138;
  if (qword_267EC7200 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_267EC87D0;
  unint64_t v15 = *(void *)algn_267EC87D8;
  swift_bridgeObjectRetain();
  sub_21F2A02C4(v14, v15, &v17);
  sub_21F4207D8();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_21F29A000, oslog, v11, a5, v12, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x223C4B440](v13, -1, -1);
  MEMORY[0x223C4B440](v12, -1, -1);
}

uint64_t sub_21F30EA90()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SELFEventLogEmitters()
{
  return self;
}

void *sub_21F30EAEC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E930]), sel_init);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E938]), sel_init);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = v1;
    id v5 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
    uint64_t v6 = (void *)sub_21F41F1C8();
    id v7 = objc_msgSend(v5, sel_initWithNSUUID_, v6);

    objc_msgSend(v3, sel_setPlusId_, v7);
    objc_msgSend(v1, sel_setEventMetadata_, v3);
    uint64_t v1 = v3;
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t sub_21F30EBD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SuggestionSignalScorerV1()
{
  return self;
}

uint64_t sub_21F30EC70(uint64_t a1)
{
  return sub_21F30F378(a1, (void (*)(void))type metadata accessor for CommonFeature.UniqueIdentifier);
}

uint64_t sub_21F30EC88(uint64_t a1)
{
  return sub_21F30F3E8(a1, (void (*)(void))type metadata accessor for CommonFeature.UniqueIdentifier);
}

uint64_t CommonFeature.DonatedBySiri.__allocating_init(value:)()
{
  return sub_21F41FAA8();
}

{
  swift_allocObject();
  return sub_21F41FA98();
}

uint64_t CommonFeature.DonatedBySiri.init(value:)()
{
  return sub_21F41FAA8();
}

{
  return sub_21F41FA98();
}

uint64_t CommonFeature.DonatedBySiri.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_21F30EDB4()
{
  return sub_21F41FAA8();
}

uint64_t sub_21F30EE00()
{
  return sub_21F41FA98();
}

uint64_t sub_21F30EE58(uint64_t a1)
{
  return sub_21F30EF24(a1, (void (*)(void))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t sub_21F30EE70(uint64_t a1)
{
  return sub_21F30EF94(a1, (void (*)(void))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESd_tcfC_0()
{
  return sub_21F41FAA8();
}

uint64_t CommonFeature.EndTimestamp.init(value:)()
{
  return sub_21F41FAA8();
}

uint64_t sub_21F30EF0C(uint64_t a1)
{
  return sub_21F30EF24(a1, (void (*)(void))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_21F30EF24(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FAA8();
}

uint64_t sub_21F30EF7C(uint64_t a1)
{
  return sub_21F30EF94(a1, (void (*)(void))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_21F30EF94(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FA98();
}

uint64_t CommonFeature.OrderingTimestamp.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = sub_21F41F198();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_21F41FAA8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_21F2EA770(a1, (uint64_t)v4);
  id v5 = sub_21F41FA98();
  swift_retain();
  sub_21F2B8728(a1);
  if (v5) {
    swift_release();
  }
  return v5;
}

uint64_t CommonFeature.OrderingTimestamp.init(value:)(uint64_t a1)
{
  uint64_t v2 = sub_21F41F198();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_21F41FAA8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v2 - 8);
  sub_21F2EA770(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_21F41FA98();
  swift_retain();
  sub_21F2B8728(a1);
  if (v4) {
    swift_release();
  }
  return v4;
}

uint64_t sub_21F30F360(uint64_t a1)
{
  return sub_21F30F378(a1, (void (*)(void))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_21F30F378(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FAA8();
}

uint64_t sub_21F30F3D0(uint64_t a1)
{
  return sub_21F30F3E8(a1, (void (*)(void))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_21F30F3E8(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FA98();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO9EventTypeC5valueAESS_tcfC_0()
{
  return sub_21F41FAA8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESS_tcfc_0()
{
  return sub_21F41FAA8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESgSSSg_tcfC_0()
{
  return sub_21F41FA98();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESgSSSg_tcfc_0()
{
  return sub_21F41FA98();
}

uint64_t sub_21F30F548(uint64_t a1)
{
  return sub_21F30F378(a1, (void (*)(void))type metadata accessor for CommonFeature.BundleID);
}

uint64_t sub_21F30F560(uint64_t a1)
{
  return sub_21F30F3E8(a1, (void (*)(void))type metadata accessor for CommonFeature.BundleID);
}

uint64_t sub_21F30F584(uint64_t a1)
{
  return sub_21F30F6D4(a1, (void (*)(void))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t sub_21F30F59C(uint64_t a1)
{
  return sub_21F30EF94(a1, (void (*)(void))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO20InteractionDirectionC5valueAESo013INInteractionH0V_tcfC_0()
{
  return sub_21F41FAA8();
}

uint64_t CommonFeature.IntentHandlingStatus.init(value:)()
{
  return sub_21F41FAA8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESgSdSg_tcfC_0()
{
  return sub_21F41FA98();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESgSdSg_tcfc_0()
{
  return sub_21F41FA98();
}

uint64_t sub_21F30F6BC(uint64_t a1)
{
  return sub_21F30F6D4(a1, (void (*)(void))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t sub_21F30F6D4(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FAA8();
}

uint64_t sub_21F30F724(uint64_t a1)
{
  return sub_21F30EF94(a1, (void (*)(void))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t CommonFeature.StartTimestamp.__allocating_init(value:)(uint64_t a1)
{
  return sub_21F30F7A4(a1, (void (*)(void))type metadata accessor for CommonFeature.StartTimestamp);
}

{
  return sub_21F30F94C(a1, (void (*)(void))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t type metadata accessor for CommonFeature.StartTimestamp(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8808);
}

uint64_t CommonFeature.EndTimestamp.__allocating_init(value:)(uint64_t a1)
{
  return sub_21F30F7A4(a1, (void (*)(void))type metadata accessor for CommonFeature.EndTimestamp);
}

{
  return sub_21F30F94C(a1, (void (*)(void))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_21F30F7A4(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38710);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F2EA770(a1, (uint64_t)v6);
  uint64_t v7 = sub_21F41F198();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v9 == 1)
  {
    sub_21F2B8728((uint64_t)v6);
    uint64_t v10 = 0;
  }
  else
  {
    sub_21F41F168();
    uint64_t v10 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  a2(0);
  swift_allocObject();
  uint64_t v14 = v10;
  BOOL v15 = v9 == 1;
  uint64_t v12 = sub_21F41FA98();
  sub_21F2B8728(a1);
  return v12;
}

uint64_t type metadata accessor for CommonFeature.EndTimestamp(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8818);
}

uint64_t sub_21F30F94C(uint64_t a1, void (*a2)(void))
{
  sub_21F41F168();
  a2(0);
  swift_allocObject();
  uint64_t v4 = sub_21F41FAA8();
  uint64_t v5 = sub_21F41F198();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

ValueMetadata *type metadata accessor for CommonFeature()
{
  return &type metadata for CommonFeature;
}

uint64_t type metadata accessor for CommonFeature.UniqueIdentifier(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC87E8);
}

uint64_t sub_21F30FA2C()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FA38()
{
  return type metadata accessor for CommonFeature.UniqueIdentifier(0);
}

uint64_t type metadata accessor for CommonFeature.DonatedBySiri(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC87F8);
}

uint64_t sub_21F30FA60()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FA6C()
{
  return type metadata accessor for CommonFeature.DonatedBySiri(0);
}

uint64_t sub_21F30FA74()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FA80()
{
  return type metadata accessor for CommonFeature.StartTimestamp(0);
}

uint64_t sub_21F30FA88()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FA94()
{
  return type metadata accessor for CommonFeature.EndTimestamp(0);
}

uint64_t type metadata accessor for CommonFeature.OrderingTimestamp(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8828);
}

uint64_t sub_21F30FABC()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FAC8()
{
  return type metadata accessor for CommonFeature.OrderingTimestamp(0);
}

uint64_t type metadata accessor for CommonFeature.EventType(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8838);
}

uint64_t sub_21F30FAF0()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FAFC()
{
  return type metadata accessor for CommonFeature.EventType(0);
}

uint64_t type metadata accessor for CommonFeature.BundleID(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8848);
}

uint64_t sub_21F30FB24()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FB30()
{
  return type metadata accessor for CommonFeature.BundleID(0);
}

uint64_t type metadata accessor for CommonFeature.InteractionDirection(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8858);
}

uint64_t sub_21F30FB58()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FB64()
{
  return type metadata accessor for CommonFeature.InteractionDirection(0);
}

uint64_t type metadata accessor for CommonFeature.IntentHandlingStatus(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8868);
}

uint64_t sub_21F30FB8C()
{
  return sub_21F30FB98();
}

uint64_t sub_21F30FB98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F30FBD4()
{
  return type metadata accessor for CommonFeature.IntentHandlingStatus(0);
}

unint64_t UserFeedbackLearningInferenceFeature.rawValue.getter()
{
  unint64_t result = 0xD00000000000001DLL;
  switch(*v0)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

SiriPrivateLearningInference::UserFeedbackLearningInferenceFeature_optional __swiftcall UserFeedbackLearningInferenceFeature.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_21F420C28();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static UserFeedbackLearningInferenceFeature.allCases.getter()
{
  return &unk_26D0CC2D8;
}

uint64_t sub_21F30FD6C(char *a1, char *a2)
{
  return sub_21F32FB58(*a1, *a2);
}

uint64_t sub_21F30FD78()
{
  return sub_21F330C58();
}

uint64_t sub_21F30FD84()
{
  return sub_21F33040C();
}

uint64_t sub_21F30FD8C()
{
  return sub_21F330C58();
}

SiriPrivateLearningInference::UserFeedbackLearningInferenceFeature_optional sub_21F30FD94(Swift::String *a1)
{
  return UserFeedbackLearningInferenceFeature.init(rawValue:)(*a1);
}

unint64_t sub_21F30FDA0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = UserFeedbackLearningInferenceFeature.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_21F30FDC8(void *a1@<X8>)
{
  *a1 = &unk_26D0CC2D8;
}

void *UserFeedbackLearningInferenceFeatureResolver.__allocating_init()()
{
  id v0 = (void *)swift_allocObject();
  uint64_t v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  uint64_t v2 = InferenceFeatures.InferenceFeatureManager.init()();
  uint64_t v3 = MEMORY[0x263F73EF0];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

void *UserFeedbackLearningInferenceFeatureResolver.init()()
{
  uint64_t v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  uint64_t v2 = InferenceFeatures.InferenceFeatureManager.init()();
  uint64_t v3 = MEMORY[0x263F73EF0];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

uint64_t sub_21F30FEA0(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_21F41FED8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_21F41F998();
  char v11 = v8;
  LOBYTE(v2) = sub_21F310274(&v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v2 & 1;
}

uint64_t sub_21F30FFB8(unsigned char *a1)
{
  uint64_t v2 = sub_21F41FED8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  swift_bridgeObjectRetain();
  sub_21F41FEB8();
  LOBYTE(v9) = (_BYTE)a1;
  char v6 = sub_21F310274(&v9);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_21F310274(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD3AFE0 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD3AFD0;
      break;
    case 2:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38E28 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38E20;
      break;
    case 3:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38930 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38920;
      break;
    case 4:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38940 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38938;
      break;
    case 5:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38968 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38960;
      break;
    case 6:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_267EC71C0 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_267EC8490;
      break;
    case 7:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38918 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38910;
      break;
    default:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      if (qword_26AD38958 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_26AD38948;
      break;
  }
  v5[3] = sub_21F41F778();
  v5[4] = MEMORY[0x263F73EA8];
  v5[0] = v2;
  swift_retain();
  char v3 = sub_21F41F9A8();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  return v3 & 1;
}

uint64_t UserFeedbackLearningInferenceFeatureResolver.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t UserFeedbackLearningInferenceFeatureResolver.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

unint64_t sub_21F31060C()
{
  unint64_t result = qword_267EC8878;
  if (!qword_267EC8878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8878);
  }
  return result;
}

unint64_t sub_21F310664()
{
  unint64_t result = qword_267EC8880;
  if (!qword_267EC8880)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC8888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8880);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MediaSuggestionTag(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserFeedbackLearningInferenceFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F31081CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserFeedbackLearningInferenceFeature()
{
  return &type metadata for UserFeedbackLearningInferenceFeature;
}

uint64_t type metadata accessor for UserFeedbackLearningInferenceFeatureResolver()
{
  return self;
}

uint64_t method lookup function for UserFeedbackLearningInferenceFeatureResolver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for UserFeedbackLearningInferenceFeatureResolver);
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.isEnabled(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.isEnabled(_:in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t INSendMessageIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INSendMessageIntentFeatureExtractor.init()()
{
  return v0;
}

uint64_t INSendMessageIntentFeatureExtractor.deinit()
{
  return v0;
}

uint64_t INSendMessageIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F310920(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F70450](a1, WitnessTable);
}

uint64_t sub_21F310974(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F70458](a1, a2, WitnessTable);
}

uint64_t sub_21F3109D4(void **a1)
{
  return sub_21F3109DC(*a1);
}

uint64_t sub_21F3109DC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_recipients);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  int v3 = v1;
  sub_21F310E70();
  unint64_t v4 = sub_21F420348();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8CF0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_21F422300;
    uint64_t v26 = type metadata accessor for CommonFeature.EventType(0);
    swift_allocObject();
    uint64_t v27 = sub_21F41FAA8();
    *(void *)(v2 + 56) = v26;
    *(void *)(v2 + 64) = sub_21F310EB0(&qword_267EC8D00, 255, (void (*)(uint64_t))type metadata accessor for CommonFeature.EventType);
    *(void *)(v2 + 32) = v27;
    uint64_t v28 = type metadata accessor for CommonContactFeature.RecipientContactReferences();
    swift_allocObject();
    uint64_t v29 = sub_21F41FAA8();
    *(void *)(v2 + 96) = v28;
    *(void *)(v2 + 104) = sub_21F310EB0(&qword_267EC8898, 255, (void (*)(uint64_t))type metadata accessor for CommonContactFeature.RecipientContactReferences);
    *(void *)(v2 + 72) = v29;
    return v2;
  }
LABEL_4:
  uint64_t v34 = v2;
  uint64_t result = sub_21F2C3724(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    unint64_t v30 = v4 & 0xC000000000000001;
    uint64_t v31 = v5;
    unint64_t v32 = v4;
    while (1)
    {
      id v8 = v30 ? (id)MEMORY[0x223C4A6D0](v7, v4) : *(id *)(v4 + 8 * v7 + 32);
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_displayName, v30);
      uint64_t v33 = sub_21F4200B8();
      uint64_t v12 = v11;

      id v13 = objc_msgSend(v9, sel_contactIdentifier);
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_21F4200B8();
        uint64_t v17 = v16;
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      id v18 = objc_msgSend(v9, sel_personHandle);
      uint64_t v19 = v18;
      if (!v18) {
        break;
      }
      id v20 = objc_msgSend(v18, sel_label);

      if (!v20)
      {

        uint64_t v19 = 0;
        goto LABEL_17;
      }
      uint64_t v19 = (void *)sub_21F4200B8();
      uint64_t v22 = v21;

LABEL_18:
      unint64_t v24 = *(void *)(v34 + 16);
      unint64_t v23 = *(void *)(v34 + 24);
      if (v24 >= v23 >> 1) {
        sub_21F2C3724(v23 > 1, v24 + 1, 1);
      }
      ++v7;
      *(void *)(v34 + 16) = v24 + 1;
      uint64_t v25 = (void *)(v34 + 48 * v24);
      unint64_t v4 = v32;
      v25[4] = v33;
      v25[5] = v12;
      v25[6] = v15;
      v25[7] = v17;
      v25[8] = v19;
      v25[9] = v22;
      if (v31 == v7) {
        goto LABEL_23;
      }
    }

LABEL_17:
    uint64_t v22 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F310D6C(uint64_t a1, uint64_t a2)
{
  return sub_21F310EB0(&qword_26AD3AD98, a2, (void (*)(uint64_t))type metadata accessor for INSendMessageIntentFeatureExtractor);
}

uint64_t type metadata accessor for INSendMessageIntentFeatureExtractor()
{
  return self;
}

uint64_t sub_21F310DD8(uint64_t a1, uint64_t a2)
{
  return sub_21F310EB0(qword_26AD38C40, a2, (void (*)(uint64_t))type metadata accessor for INSendMessageIntentFeatureExtractor);
}

uint64_t method lookup function for INSendMessageIntentFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for INSendMessageIntentFeatureExtractor);
}

uint64_t dispatch thunk of INSendMessageIntentFeatureExtractor.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INSendMessageIntentFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

unint64_t sub_21F310E70()
{
  unint64_t result = qword_267EC8890;
  if (!qword_267EC8890)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_267EC8890);
  }
  return result;
}

uint64_t sub_21F310EB0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F310EF8(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_34;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_21F420B98())
  {
    unint64_t v30 = v1 & 0xC000000000000001;
    unint64_t v3 = MEMORY[0x263F8EE78];
    uint64_t v4 = 4;
    uint64_t v5 = v1;
    while (1)
    {
      uint64_t v7 = v4 - 4;
      if (!v30) {
        break;
      }
      uint64_t v8 = MEMORY[0x223C4A6D0](v4 - 4, v1);
      uint64_t v1 = v4 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_29;
      }
LABEL_11:
      uint64_t v9 = sub_21F311490(v8);
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      int64_t v11 = *(void *)(v3 + 16);
      int64_t v12 = v11 + v10;
      if (__OFADD__(v11, v10)) {
        goto LABEL_30;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(void *)(v3 + 24) >> 1)
      {
        if (*(void *)(v9 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v11 <= v12) {
          int64_t v14 = v11 + v10;
        }
        else {
          int64_t v14 = v11;
        }
        unint64_t v3 = sub_21F2A8714(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(void *)(v9 + 16))
        {
LABEL_20:
          uint64_t v15 = *(void *)(v3 + 16);
          uint64_t v16 = (*(void *)(v3 + 24) >> 1) - v15;
          uint64_t v17 = *(void *)(type metadata accessor for PlusMediaSuggestion() - 8);
          uint64_t v18 = *(void *)(v17 + 72);
          if (v16 < v10) {
            goto LABEL_32;
          }
          unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
          unint64_t v20 = v3 + v19 + v18 * v15;
          unint64_t v21 = v9 + v19;
          uint64_t v22 = v18 * v10;
          unint64_t v23 = v20 + v22;
          unint64_t v24 = v21 + v22;
          if (v21 < v23 && v20 < v24)
          {
            swift_release_n();
            uint64_t result = sub_21F420BE8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            uint64_t v26 = *(void *)(v3 + 16);
            BOOL v27 = __OFADD__(v26, v10);
            uint64_t v28 = v26 + v10;
            if (v27) {
              goto LABEL_33;
            }
            *(void *)(v3 + 16) = v28;
          }
          goto LABEL_5;
        }
      }
      if (v10) {
        goto LABEL_31;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v4;
      BOOL v6 = v1 == v2;
      uint64_t v1 = v5;
      if (v6) {
        goto LABEL_36;
      }
    }
    uint64_t v8 = *(void *)(v1 + 8 * v4);
    swift_retain();
    uint64_t v1 = v4 - 3;
    if (!__OFADD__(v7, 1)) {
      goto LABEL_11;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  unint64_t v3 = MEMORY[0x263F8EE78];
LABEL_36:
  swift_bridgeObjectRelease();
  swift_release_n();
  return v3;
}

uint64_t sub_21F3111B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_21F311220(a1, a2, a3, a4);
  return v8;
}

void *sub_21F311220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AdaptiveMediaSuggestionNominator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC88A0);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  sub_21F4201A8();
  v4[2] = 91;
  v4[3] = 0xE100000000000000;
  v4[8] = a3;
  v4[9] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v4[4] = a2;
  return v4;
}

uint64_t AdaptiveMediaSuggestionNominator.__allocating_init<A>(candidateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  type metadata accessor for MediaSuggestionCandidateNominator();
  swift_allocObject();
  uint64_t v9 = sub_21F38A690();
  uint64_t v10 = swift_allocObject();
  sub_21F311220((uint64_t)v8, v9, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return v10;
}

uint64_t sub_21F311448(unint64_t a1)
{
  return sub_21F310EF8(a1);
}

uint64_t sub_21F311490(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v26 = v1 + 5;
  __swift_project_boxed_opaque_existential_1(v1 + 5, v5);
  *(void *)&v30[0] = a1;
  uint64_t v7 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v6 + 24))(v30, v5, v6);
  uint64_t v8 = sub_21F384C10(v7);
  sub_21F382B74(a1, v28);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_21F41FF28();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AD3C910);
  swift_retain();
  sub_21F2E57AC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2E5738);
  uint64_t v10 = sub_21F41FF08();
  os_log_type_t v11 = sub_21F420668();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v24 = v4;
    uint64_t v25 = a1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v27[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v15 = v1[2];
    unint64_t v14 = v1[3];
    swift_bridgeObjectRetain();
    *(void *)&v30[0] = sub_21F2A02C4(v15, v14, v27);
    sub_21F4207D8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_21F301860((uint64_t)v28, (uint64_t)v29);
    if (*((void *)&v29[0] + 1) == 1)
    {
      unint64_t v16 = 0xE700000000000000;
      uint64_t v17 = 0x3E726F7272453CLL;
    }
    else
    {
      v30[2] = v29[2];
      v30[3] = v29[3];
      v30[4] = v29[4];
      v30[0] = v29[0];
      v30[1] = v29[1];
      uint64_t v17 = sub_21F360E18();
      unint64_t v16 = v18;
    }
    uint64_t v4 = v24;
    sub_21F2A02C4(v17, v16, v27);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2E57AC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
    sub_21F2E57AC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
    _os_log_impl(&dword_21F29A000, v10, v11, "%s Updating nomination status for candidates with query=%s:", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v13, -1, -1);
    MEMORY[0x223C4B440](v12, -1, -1);

    a1 = v25;
  }
  else
  {
    swift_release();
    sub_21F2E57AC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
    sub_21F2E57AC(v28, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_21F2B469C);
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_21F312374(v7, v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v21 = v2[8];
  uint64_t v20 = v2[9];
  __swift_project_boxed_opaque_existential_1(v26, v21);
  v27[0] = a1;
  (*(void (**)(uint64_t *, unint64_t, uint64_t, uint64_t))(v20 + 32))(v27, v19, v21, v20);
  uint64_t v22 = sub_21F311F9C(v19);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_21F311854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = sub_21F38B1D0(a1, a2);
  sub_21F311A04(v13 & 1, a1, (uint64_t)v12);
  sub_21F2E07EC(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_21F2E5808((uint64_t)v9, a3);
    sub_21F29FA48((uint64_t)v12, &qword_26AD38A90);
  }
  else
  {
    sub_21F2E586C((uint64_t)v9);
    sub_21F2E5808((uint64_t)v12, a3);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
}

uint64_t sub_21F311A04@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v10 = *(void *)(a2 + *(int *)(v9 + 44));
  if (!*(void *)(v10 + 16)
    || (sub_21F420EF8(),
        sub_21F420148(),
        uint64_t v11 = sub_21F420F48(),
        uint64_t v12 = -1 << *(unsigned char *)(v10 + 32),
        unint64_t v13 = v11 & ~v12,
        ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0))
  {
    if ((a1 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v16 = sub_21F41F228();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    __int16 v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_21F3F52DC((uint64_t)&unk_26D0CBA48, v10);
    sub_21F331040((uint64_t)v8, 0, (char **)&v27, 0, 0, 1, v17, 0, a3, 1, 0);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_21F29FA48((uint64_t)v8, &qword_26AD38738);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
  HIDWORD(v23) = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v14 = ~v12;
  uint64_t v26 = "Type_Song";
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v10 + 48) + v13))
    {
      case 2:
        swift_bridgeObjectRelease();
        goto LABEL_12;
      default:
        char v15 = sub_21F420DF8();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_12:
          a3 = v25;
          if ((v23 & 0x100000000) != 0) {
            goto LABEL_13;
          }
          uint64_t v20 = sub_21F41F228();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
          __int16 v30 = 0;
          long long v28 = 0u;
          long long v29 = 0u;
          long long v27 = 0u;
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_21F3874F0((uint64_t)&unk_26D0CBA70, v10);
          uint64_t v22 = sub_21F3F52DC((uint64_t)&unk_26D0CBA98, v21);
          sub_21F331040((uint64_t)v8, 0, (char **)&v27, 0, 0, 1, v22, 0, a3, 1, 0);
          goto LABEL_17;
        }
        unint64_t v13 = (v13 + 1) & v14;
        if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13)) {
          continue;
        }
        a3 = v25;
        if ((v23 & 0x100000000) != 0) {
          goto LABEL_10;
        }
LABEL_13:
        unint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
        return v18(a3, 1, 1, v9);
    }
  }
}

uint64_t AdaptiveMediaSuggestionNominator.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t AdaptiveMediaSuggestionNominator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdaptiveMediaSuggestionNominator()
{
  return self;
}

uint64_t method lookup function for AdaptiveMediaSuggestionNominator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AdaptiveMediaSuggestionNominator);
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionNominator.nominate(queries:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_21F311F9C(uint64_t a1)
{
  uint64_t v28 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v3 = MEMORY[0x270FA5388](v28);
  uint64_t v22 = (uint64_t)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v20 - v6;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    uint64_t v9 = 0;
    uint64_t v10 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v29 = *(void *)(v5 + 72);
    v20[1] = v1;
    uint64_t v21 = (v10 + 32) & ~v10;
    uint64_t v26 = a1 + v21;
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t v24 = "nominationBlocked";
    uint64_t v25 = "Type_Song";
    uint64_t v23 = "previouslyNominated";
    while (1)
    {
      sub_21F2E07EC(v26 + v29 * v9, (uint64_t)v7);
      uint64_t v12 = *(void *)&v7[*(int *)(v28 + 44)];
      if (!*(void *)(v12 + 16)
        || (sub_21F420EF8(),
            sub_21F420148(),
            uint64_t v13 = sub_21F420F48(),
            uint64_t v14 = -1 << *(unsigned char *)(v12 + 32),
            unint64_t v15 = v13 & ~v14,
            ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0))
      {
LABEL_3:
        sub_21F2E586C((uint64_t)v7);
        goto LABEL_4;
      }
      uint64_t v16 = ~v14;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(v12 + 48) + v15))
        {
          case 2:
            swift_bridgeObjectRelease();
            goto LABEL_13;
          default:
            char v17 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            if ((v17 & 1) == 0)
            {
              unint64_t v15 = (v15 + 1) & v16;
              if (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
                goto LABEL_3;
              }
              continue;
            }
LABEL_13:
            sub_21F2E5808((uint64_t)v7, v22);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_21F2C343C(0, *(void *)(v11 + 16) + 1, 1);
            }
            uint64_t v11 = v30;
            unint64_t v19 = *(void *)(v30 + 16);
            unint64_t v18 = *(void *)(v30 + 24);
            if (v19 >= v18 >> 1)
            {
              sub_21F2C343C(v18 > 1, v19 + 1, 1);
              uint64_t v11 = v30;
            }
            *(void *)(v11 + 16) = v19 + 1;
            sub_21F2E5808(v22, v11 + v21 + v19 * v29);
LABEL_4:
            if (++v9 == v27) {
              return v30;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

unint64_t sub_21F312374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38A90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v9 = MEMORY[0x270FA5388](v28);
  uint64_t v27 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v26 = (uint64_t)&v23 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = a1;
  unint64_t v24 = v14;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v11 + 72);
  char v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v25 = a3;
  do
  {
    sub_21F311854(v15, v29, (uint64_t)v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, v28) == 1)
    {
      sub_21F29FA48((uint64_t)v8, &qword_26AD38A90);
    }
    else
    {
      uint64_t v19 = v26;
      sub_21F2E5808((uint64_t)v8, v26);
      sub_21F2E5808(v19, v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_21F2A8714(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v18 = sub_21F2A8714(v20 > 1, v21 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v21 + 1;
      sub_21F2E5808(v27, v18 + v24 + v21 * v16);
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t dispatch thunk of SuggestionCandidate.query.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SuggestionCandidate.entity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of SuggestionCandidate.score.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of SuggestionCandidate.scoreHistory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of SuggestionCandidate.init(query:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of SuggestionCandidate.updateScore(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_21F31268C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26AD3ADE8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v62 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  uint64_t v4 = *(void *)(v61 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v61);
  uint64_t v51 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (uint64_t)&v48 - v7;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A820);
  uint64_t v8 = MEMORY[0x270FA5388](v60);
  uint64_t v59 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v48 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v57 = (uint64_t)&v48 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v56 = (char *)&v48 - v14;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v53 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v50 = v4;
  int64_t v54 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v55 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v63 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v52 = MEMORY[0x263F8EE78];
  uint64_t v21 = v60;
  while (1)
  {
    if (v18)
    {
      uint64_t v64 = (v18 - 1) & v18;
      int64_t v65 = v20;
      unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
      goto LABEL_5;
    }
    int64_t v38 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v38 >= v54) {
      goto LABEL_30;
    }
    unint64_t v39 = *(void *)(v53 + 8 * v38);
    int64_t v40 = v20 + 1;
    if (!v39)
    {
      int64_t v40 = v20 + 2;
      if (v20 + 2 >= v54) {
        goto LABEL_30;
      }
      unint64_t v39 = *(void *)(v53 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v20 + 3;
        if (v20 + 3 >= v54) {
          goto LABEL_30;
        }
        unint64_t v39 = *(void *)(v53 + 8 * v40);
        if (!v39)
        {
          int64_t v40 = v20 + 4;
          if (v20 + 4 >= v54) {
            goto LABEL_30;
          }
          unint64_t v39 = *(void *)(v53 + 8 * v40);
          if (!v39) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v64 = (v39 - 1) & v39;
    int64_t v65 = v40;
    unint64_t v22 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_5:
    uint64_t v23 = v63;
    uint64_t v24 = *(void *)(v63 + 48);
    uint64_t v25 = sub_21F41F228();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(v26 + 72) * v22;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v30 = (uint64_t)v56;
    v29(v56, v28, v25);
    *(void *)(v30 + *(int *)(v21 + 48)) = *(void *)(*(void *)(v23 + 56) + 8 * v22);
    uint64_t v31 = v57;
    sub_21F2B458C(v30, v57, &qword_26AD3A820);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = *(int *)(v21 + 48);
    uint64_t v33 = v58;
    v29(v58, v31, v25);
    uint64_t v34 = *(void *)(v31 + v32);
    *(void *)&v33[v32] = v34;
    uint64_t v35 = *(int *)(v21 + 48);
    uint64_t v36 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v59, v33, v25);
    *(void *)(v36 + v35) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = (uint64_t)v62;
    swift_getAtKeyPath();
    sub_21F29FA48(v36, &qword_26AD3A820);
    swift_release();
    sub_21F29FA48(v31, &qword_26AD3A820);
    if ((*v55)(v37, 1, v61) == 1)
    {
      uint64_t result = sub_21F29FA48(v37, qword_26AD3ADE8);
    }
    else
    {
      uint64_t v42 = v37;
      uint64_t v43 = v49;
      sub_21F31D300(v42, v49, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      sub_21F31D300(v43, v51, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v52 = sub_21F2A877C(0, *(void *)(v52 + 16) + 1, 1, v52);
      }
      unint64_t v45 = *(void *)(v52 + 16);
      unint64_t v44 = *(void *)(v52 + 24);
      if (v45 >= v44 >> 1) {
        unint64_t v52 = sub_21F2A877C(v44 > 1, v45 + 1, 1, v52);
      }
      uint64_t v46 = v51;
      unint64_t v47 = v52;
      *(void *)(v52 + 16) = v45 + 1;
      uint64_t result = sub_21F31D300(v46, v47+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v45, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    }
    unint64_t v18 = v64;
    int64_t v20 = v65;
  }
  uint64_t v41 = v20 + 5;
  if (v20 + 5 >= v54)
  {
LABEL_30:
    swift_release();
    return v52;
  }
  unint64_t v39 = *(void *)(v53 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v20 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v54) {
      goto LABEL_30;
    }
    unint64_t v39 = *(void *)(v53 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_24;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_21F312C70()
{
  type metadata accessor for PlusClientEventFeatureExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8928);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_267EC88A8 = 91;
  unk_267EC88B0 = 0xE100000000000000;
  return result;
}

uint64_t PlusClientEventFeatureExtractor.__allocating_init(_:)(void *a1)
{
  uint64_t v2 = type metadata accessor for PlusContactSuggestion();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v31, v10, v11);
  uint64_t v12 = v32;
  uint64_t v13 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v27 = a1;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_21F2C3744(0, v15, 0);
    unint64_t v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v26 = v14;
    uint64_t v17 = v14 + v16;
    uint64_t v18 = *(void *)(v3 + 72);
    uint64_t v28 = v7 + 32;
    uint64_t v29 = v18;
    do
    {
      sub_21F31D258(v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v5, v6);
      sub_21F31D368((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PlusContactSuggestion);
      uint64_t v19 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21F2C3744(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v30;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_21F2C3744(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v30;
      }
      *(void *)(v19 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v21, v9, v6);
      uint64_t v30 = v19;
      v17 += v29;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a1 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  type metadata accessor for PlusClientEventFeatureExtractor();
  uint64_t v22 = swift_allocObject();
  type metadata accessor for SELFPlusSuggestionIdMapper();
  uint64_t v23 = swift_allocObject();
  unint64_t v24 = sub_21F2C109C(MEMORY[0x263F8EE78]);
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v24;
  *(void *)(v22 + 16) = v23;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v22;
}

uint64_t PlusClientEventFeatureExtractor.__allocating_init(picsIds:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  type metadata accessor for SELFPlusSuggestionIdMapper();
  uint64_t v3 = swift_allocObject();
  unint64_t v4 = sub_21F2C109C(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  *(void *)(v2 + 16) = v3;
  return v2;
}

uint64_t PlusClientEventFeatureExtractor.init(picsIds:)(uint64_t a1)
{
  type metadata accessor for SELFPlusSuggestionIdMapper();
  uint64_t v3 = swift_allocObject();
  unint64_t v4 = sub_21F2C109C(MEMORY[0x263F8EE78]);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  *(void *)(v1 + 16) = v3;
  return v1;
}

unint64_t sub_21F313118(unint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v88 = v1;
  uint64_t v89 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_21F41F228();
  uint64_t v9 = *(void *)(v91 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v91);
  uint64_t v86 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v87 = (char *)&v83 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v90 = (char *)&v83 - v14;
  uint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)&long long v92 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_21F420B98();
    if (v16)
    {
LABEL_3:
      if (v16 < 1)
      {
        __break(1u);
        goto LABEL_88;
      }
      for (uint64_t i = 0; i != v16; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v18 = (id)MEMORY[0x223C4A6D0](i, a1);
        }
        else {
          id v18 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v19 = v18;
        if (objc_msgSend(v18, sel_anyEventType) == 38)
        {
          sub_21F420A28();
          uint64_t v3 = *(void **)(v92 + 16);
          sub_21F420A68();
          sub_21F420A78();
          sub_21F420A38();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = v92;
      *(void *)&long long v92 = MEMORY[0x263F8EE78];
      if (v16 < 0) {
        goto LABEL_31;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x263F8EE78];
  *(void *)&long long v92 = v15;
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
    goto LABEL_31;
  }
LABEL_16:
  if ((v16 & 0x4000000000000000) != 0)
  {
LABEL_31:
    swift_retain();
    int64_t v2 = sub_21F420B98();
    if (!v2) {
      goto LABEL_32;
    }
    goto LABEL_18;
  }
  int64_t v2 = *(void *)(v16 + 16);
  swift_retain();
  if (!v2)
  {
LABEL_32:
    swift_release();
    int64_t v2 = MEMORY[0x263F8EE78];
    goto LABEL_33;
  }
LABEL_18:
  if (v2 < 1)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    a1 = (unint64_t)sub_21F2A7350(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
    goto LABEL_71;
  }
  uint64_t v84 = v8;
  uint64_t v85 = v9;
  for (uint64_t j = 0; j != v2; ++j)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x223C4A6D0](j, v16);
    }
    else {
      id v21 = *(id *)(v16 + 8 * j + 32);
    }
    uint64_t v22 = v21;
    id v23 = objc_msgSend(v21, sel_payload);
    if (v23)
    {
      uint64_t v24 = sub_21F41F0B8();
      unint64_t v26 = v25;

      id v23 = (id)sub_21F41F0A8();
      sub_21F2F64D8(v24, v26);
    }
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E930]), sel_initWithData_, v23);

    if (v27)
    {
      MEMORY[0x223C4A030]();
      if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_21F420398();
      }
      sub_21F4203E8();
      sub_21F420368();
    }
  }
  swift_release();
  int64_t v2 = v92;
  uint64_t v8 = v84;
  uint64_t v9 = v85;
LABEL_33:
  swift_release();
  sub_21F315238(a1, (unint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v91) == 1)
  {
    sub_21F29FA48((uint64_t)v8, &qword_26AD38738);
    a1 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v28 = v90;
    uint64_t v29 = v91;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v90, v8, v91);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v31 = v87;
    v30(v87, v28, v29);
    uint64_t v32 = type metadata accessor for PlusClientEventIdFeature(0);
    swift_allocObject();
    v30(v86, v31, v29);
    uint64_t v33 = sub_21F41FAA8();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
    v34(v31, v29);
    a1 = (unint64_t)sub_21F2A7350(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v36 = *(void *)(a1 + 16);
    unint64_t v35 = *(void *)(a1 + 24);
    if (v36 >= v35 >> 1) {
      a1 = (unint64_t)sub_21F2A7350((void *)(v35 > 1), v36 + 1, 1, (void *)a1);
    }
    uint64_t v93 = v32;
    uint64_t v94 = sub_21F31A304(&qword_267EC88D8, 255, (void (*)(uint64_t))type metadata accessor for PlusClientEventIdFeature);
    *(void *)&long long v92 = v33;
    *(void *)(a1 + 16) = v36 + 1;
    sub_21F2A09A8(&v92, a1 + 40 * v36 + 32);
    v34(v90, v91);
  }
  if ((unint64_t)v2 >> 62) {
    goto LABEL_85;
  }
  uint64_t v37 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v37; uint64_t v37 = sub_21F420B98())
  {
    uint64_t v91 = a1;
    unint64_t v38 = v2 & 0xC000000000000001;
    uint64_t v39 = 4;
    a1 = (unint64_t)&selRef_setPlusSuggesterSuggestionMetadataReported_;
    while (1)
    {
      if (v38) {
        id v40 = (id)MEMORY[0x223C4A6D0](v39 - 4, v2);
      }
      else {
        id v40 = *(id *)(v2 + 8 * v39);
      }
      uint64_t v41 = v40;
      uint64_t v42 = v39 - 3;
      if (__OFADD__(v39 - 4, 1))
      {
        __break(1u);
        goto LABEL_84;
      }
      id v43 = objc_msgSend(v40, sel_contactSuggesterRequestMetadataReported);
      if (v43) {
        break;
      }

LABEL_42:
      ++v39;
      if (v42 == v37)
      {
        a1 = v91;
        goto LABEL_55;
      }
    }
    unint64_t v44 = v43;
    unsigned __int8 v45 = objc_msgSend(v43, sel_isForcePromptUsed);

    if ((v45 & 1) == 0) {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    uint64_t v46 = type metadata accessor for PlusForcePrompted(0);
    swift_allocObject();
    LOBYTE(v92) = 1;
    uint64_t v47 = sub_21F41FAA8();
    a1 = v91;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = (unint64_t)sub_21F2A7350(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
    }
    unint64_t v49 = *(void *)(a1 + 16);
    unint64_t v48 = *(void *)(a1 + 24);
    if (v49 >= v48 >> 1) {
      a1 = (unint64_t)sub_21F2A7350((void *)(v48 > 1), v49 + 1, 1, (void *)a1);
    }
    uint64_t v93 = v46;
    uint64_t v94 = sub_21F31A304(&qword_267EC88D0, 255, (void (*)(uint64_t))type metadata accessor for PlusForcePrompted);
    *(void *)&long long v92 = v47;
    *(void *)(a1 + 16) = v49 + 1;
    sub_21F2A09A8(&v92, a1 + 40 * v49 + 32);
    swift_bridgeObjectRetain();
LABEL_55:
    uint64_t v50 = 4;
    while (1)
    {
      id v51 = v38 ? (id)MEMORY[0x223C4A6D0](v50 - 4, v2) : *(id *)(v2 + 8 * v50);
      uint64_t v3 = v51;
      uint64_t v52 = v50 - 3;
      if (__OFADD__(v50 - 4, 1)) {
        break;
      }
      id v53 = objc_msgSend(v51, sel_contactSuggesterRequestMetadataReported);
      if (v53)
      {
        int64_t v54 = v53;
        objc_msgSend(v53, sel_isPlusContactSuggesterEnabled);
        swift_bridgeObjectRelease();

        id v55 = objc_msgSend(v3, sel_contactSuggesterRequestMetadataReported);
        if (v55)
        {
          unint64_t v56 = v55;
          unsigned __int8 v57 = objc_msgSend(v55, sel_isPlusContactSuggesterEnabled);

          uint64_t v58 = type metadata accessor for PlusContactSuggesterEnabled(0);
          swift_allocObject();
          LOBYTE(v92) = v57;
          uint64_t v59 = sub_21F41FAA8();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = (unint64_t)sub_21F2A7350(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
          }
          unint64_t v61 = *(void *)(a1 + 16);
          unint64_t v60 = *(void *)(a1 + 24);
          if (v61 >= v60 >> 1) {
            a1 = (unint64_t)sub_21F2A7350((void *)(v60 > 1), v61 + 1, 1, (void *)a1);
          }
          uint64_t v93 = v58;
          uint64_t v94 = sub_21F31A304(&qword_267EC88B8, 255, (void (*)(uint64_t))type metadata accessor for PlusContactSuggesterEnabled);
          *(void *)&long long v92 = v59;
          *(void *)(a1 + 16) = v61 + 1;
          sub_21F2A09A8(&v92, a1 + 40 * v61 + 32);
        }
        goto LABEL_69;
      }

      ++v50;
      if (v52 == v37) {
        goto LABEL_62;
      }
    }
LABEL_84:
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
  }
LABEL_62:
  swift_bridgeObjectRelease();
  uint64_t v3 = 0;
LABEL_69:
  uint64_t v62 = sub_21F319ED8(v2);
  MEMORY[0x270FA5388](v62);
  uint64_t v63 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  *(&v83 - 2) = v63;
  *(&v83 - 1) = (uint64_t)&off_26D0CED10;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = swift_bridgeObjectRetain();
  uint64_t v66 = sub_21F31954C(v65, KeyPath);
  swift_bridgeObjectRelease();
  uint64_t v67 = swift_release();
  MEMORY[0x270FA5388](v67);
  *(&v83 - 2) = v63;
  *(&v83 - 1) = (uint64_t)&off_26D0CED10;
  uint64_t v68 = swift_getKeyPath();
  swift_retain();
  uint64_t v69 = sub_21F31790C(v66, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!*(void *)(v69 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  uint64_t v70 = (uint64_t)v88;
  swift_retain();
  uint64_t v71 = sub_21F317ED4(v69, v70);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = type metadata accessor for PlusRuntimeContactSuggestions(0);
  swift_allocObject();
  *(void *)&long long v92 = v71;
  uint64_t v8 = (char *)sub_21F41FAA8();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_89;
  }
LABEL_71:
  unint64_t v73 = *(void *)(a1 + 16);
  unint64_t v72 = *(void *)(a1 + 24);
  if (v73 >= v72 >> 1) {
    a1 = (unint64_t)sub_21F2A7350((void *)(v72 > 1), v73 + 1, 1, (void *)a1);
  }
  uint64_t v93 = v16;
  uint64_t v94 = sub_21F31A304(&qword_267EC88C0, 255, (void (*)(uint64_t))type metadata accessor for PlusRuntimeContactSuggestions);
  *(void *)&long long v92 = v8;
  *(void *)(a1 + 16) = v73 + 1;
  sub_21F2A09A8(&v92, a1 + 40 * v73 + 32);
LABEL_75:
  uint64_t v74 = sub_21F31AB34(v2);
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_21F318E64(v2, v74, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v76 = sub_21F319128(v75);
  swift_bridgeObjectRelease();
  uint64_t v77 = sub_21F31268C(v76);
  swift_bridgeObjectRelease();
  if (*(void *)(v77 + 16))
  {
    uint64_t v78 = type metadata accessor for PlusRuntimeGenericSuggestions(0);
    swift_allocObject();
    *(void *)&long long v92 = v77;
    uint64_t v79 = sub_21F41FAA8();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = (unint64_t)sub_21F2A7350(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
    }
    unint64_t v81 = *(void *)(a1 + 16);
    unint64_t v80 = *(void *)(a1 + 24);
    if (v81 >= v80 >> 1) {
      a1 = (unint64_t)sub_21F2A7350((void *)(v80 > 1), v81 + 1, 1, (void *)a1);
    }
    uint64_t v93 = v78;
    uint64_t v94 = sub_21F31A304(&qword_267EC88C8, 255, (void (*)(uint64_t))type metadata accessor for PlusRuntimeGenericSuggestions);
    *(void *)&long long v92 = v79;
    *(void *)(a1 + 16) = v81 + 1;
    sub_21F2A09A8(&v92, a1 + 40 * v81 + 32);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  return a1;
}

uint64_t PlusClientEventIdFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_21F41FAA8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_21F2B13D0(a1, (uint64_t)v4);
  uint64_t v5 = sub_21F41FA98();
  swift_retain();
  sub_21F29FA48(a1, &qword_26AD38738);
  if (v5) {
    swift_release();
  }
  return v5;
}

uint64_t _s28SiriPrivateLearningInference17PlusForcePromptedC5valueACSb_tcfC_0()
{
  return sub_21F41FAA8();
}

uint64_t sub_21F313F00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  uint64_t v5 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  uint64_t v6 = *(void *)(v5 - 8);
  if (v4)
  {
    uint64_t v10 = *(void *)(v5 - 8);
    sub_21F31D258(v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a2, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    uint64_t v6 = v10;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  return v8(a2, v7, 1, v5);
}

uint64_t mapSuggestionDomain(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if ((result & 0x1FFFFFFFCLL) != 0) {
    char v2 = 4;
  }
  else {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

void sub_21F313FF4(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = sub_21F41F228();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  id v18 = (char *)&v44 - v17;
  MEMORY[0x270FA5388](v16);
  int64_t v54 = (char *)&v44 - v19;
  unint64_t v20 = *a1;
  id v21 = objc_msgSend(v20, sel_contactSuggesterQueryContext);
  if (!v21) {
    goto LABEL_27;
  }
  uint64_t v22 = v21;
  uint64_t v55 = v12;
  id v23 = objc_msgSend(v21, sel_ended);

  if (!v23) {
    goto LABEL_27;
  }
  id v24 = objc_msgSend(v23, sel_results);

  if (!v24) {
    goto LABEL_27;
  }
  sub_21F2ABFB4(0, (unint64_t *)&qword_267EC8938);
  unint64_t v25 = sub_21F420348();

  id v26 = objc_msgSend(v20, sel_eventMetadata);
  if (!v26
    || (id v27 = v26, v28 = objc_msgSend(v26, sel_plusId), v27, !v28))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v10, 1, 1, v11);
    goto LABEL_26;
  }
  sub_21F420648();

  uint64_t v29 = v55;
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v53 = v55 + 48;
  if (v52(v10, 1, v11) == 1)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
LABEL_27:
    uint64_t v41 = MEMORY[0x263F8EE78];
LABEL_28:
    *a3 = v41;
    return;
  }
  unsigned __int8 v45 = a3;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  uint64_t v49 = v29 + 32;
  uint64_t v50 = v30;
  v30(v54, v10, v11);
  if (!(v25 >> 62))
  {
    uint64_t v31 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v31) {
      goto LABEL_9;
    }
LABEL_30:
    uint64_t v33 = MEMORY[0x263F8EE78];
LABEL_31:
    uint64_t v42 = swift_bridgeObjectRelease_n();
    MEMORY[0x270FA5388](v42);
    id v43 = v54;
    *(&v44 - 2) = v51;
    *(&v44 - 1) = (uint64_t)v43;
    uint64_t v41 = sub_21F34F504((void (*)(char *))sub_21F31D3C8, (uint64_t)(&v44 - 4), v33);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v11);
    swift_bridgeObjectRelease();
    a3 = v45;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_21F420B98();
  if (!v31) {
    goto LABEL_30;
  }
LABEL_9:
  if (v31 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    unint64_t v47 = v25 & 0xC000000000000001;
    uint64_t v33 = MEMORY[0x263F8EE78];
    unint64_t v48 = v25;
    do
    {
      if (v47) {
        id v34 = (id)MEMORY[0x223C4A6D0](v32, v25);
      }
      else {
        id v34 = *(id *)(v25 + 8 * v32 + 32);
      }
      unint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_suggestionId);
      if (v36)
      {
        id v37 = v36;
        sub_21F420648();

        unint64_t v35 = v37;
      }
      else
      {
        (*v46)(v8, 1, 1, v11);
      }

      if (v52(v8, 1, v11) == 1)
      {
        sub_21F29FA48((uint64_t)v8, &qword_26AD38738);
      }
      else
      {
        unint64_t v38 = v50;
        v50(v18, v8, v11);
        v38(v15, v18, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_21F2A74F4(0, *(void *)(v33 + 16) + 1, 1, v33);
        }
        unint64_t v40 = *(void *)(v33 + 16);
        unint64_t v39 = *(void *)(v33 + 24);
        if (v40 >= v39 >> 1) {
          uint64_t v33 = sub_21F2A74F4(v39 > 1, v40 + 1, 1, v33);
        }
        *(void *)(v33 + 16) = v40 + 1;
        v50((char *)(v33+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v40), v15, v11);
      }
      unint64_t v25 = v48;
      ++v32;
    }
    while (v31 != v32);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_21F314594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(a2 + 16))
  {
    char v10 = 0;
    goto LABEL_9;
  }
  unint64_t v8 = sub_21F2F7E90(a1);
  if ((v9 & 1) == 0)
  {
    char v10 = 0;
    if (*(void *)(a2 + 16)) {
      goto LABEL_7;
    }
LABEL_9:
    char v13 = 0;
    goto LABEL_10;
  }
  char v10 = *(unsigned char *)(*(void *)(a2 + 56) + 2 * v8);
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v11 = sub_21F2F7E90(a1);
  if ((v12 & 1) == 0) {
    goto LABEL_9;
  }
  char v13 = *(unsigned char *)(*(void *)(a2 + 56) + 2 * v11 + 1);
LABEL_10:
  uint64_t v14 = sub_21F41F228();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(a4, a1, v14);
  uint64_t v16 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  v15(a4 + v16[5], a3, v14);
  *(unsigned char *)(a4 + v16[6]) = v10;
  *(unsigned char *)(a4 + v16[7]) = v13;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v16 - 1) + 56))(a4, 0, 1, v16);
}

void sub_21F3146F8(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v13 = (char *)v44 - v12;
  uint64_t v14 = sub_21F41F228();
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v55 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v44 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v49 = (char *)v44 - v20;
  id v21 = *a1;
  id v22 = objc_msgSend(v21, sel_plusSuggesterQueried);
  if (!v22) {
    goto LABEL_26;
  }
  id v23 = v22;
  uint64_t v46 = a3;
  id v24 = objc_msgSend(v22, sel_matchedResults);

  if (!v24) {
    goto LABEL_26;
  }
  sub_21F2ABFB4(0, &qword_267EC8738);
  unint64_t v25 = sub_21F420348();

  id v26 = objc_msgSend(v21, sel_eventMetadata);
  if (!v26
    || (id v27 = v26, v28 = objc_msgSend(v26, sel_plusId), v27, !v28))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v13, 1, 1, v14);
    goto LABEL_25;
  }
  sub_21F420648();

  uint64_t v29 = v54;
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
  uint64_t v52 = v54 + 48;
  if (v51(v13, 1, v14) == 1)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_21F29FA48((uint64_t)v13, &qword_26AD38738);
LABEL_26:
    uint64_t v41 = MEMORY[0x263F8EE78];
LABEL_27:
    *a4 = v41;
    return;
  }
  v44[0] = a4;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v30(v49, v13, v14);
  v44[1] = v4;
  unint64_t v53 = v25;
  if (!(v25 >> 62))
  {
    uint64_t v31 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v31) {
      goto LABEL_8;
    }
LABEL_29:
    uint64_t v33 = MEMORY[0x263F8EE78];
LABEL_30:
    uint64_t v42 = swift_bridgeObjectRelease_n();
    MEMORY[0x270FA5388](v42);
    id v43 = v49;
    v44[-4] = v48;
    v44[-3] = v43;
    v44[-2] = v46;
    uint64_t v41 = sub_21F34F560((void (*)(char *))sub_21F31D2C0, (uint64_t)&v44[-6], v33);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v14);
    swift_bridgeObjectRelease();
    a4 = (uint64_t *)v44[0];
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_21F420B98();
  if (!v31) {
    goto LABEL_29;
  }
LABEL_8:
  unint64_t v47 = v19;
  if (v31 >= 1)
  {
    uint64_t v32 = 0;
    unint64_t v50 = v53 & 0xC000000000000001;
    unsigned __int8 v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
    uint64_t v33 = MEMORY[0x263F8EE78];
    do
    {
      if (v50) {
        id v34 = (id)MEMORY[0x223C4A6D0](v32, v53);
      }
      else {
        id v34 = *(id *)(v53 + 8 * v32 + 32);
      }
      unint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_suggestionId);
      if (v36)
      {
        id v37 = v36;
        sub_21F420648();

        unint64_t v35 = v37;
      }
      else
      {
        (*v45)(v11, 1, 1, v14);
      }

      if (v51(v11, 1, v14) == 1)
      {
        sub_21F29FA48((uint64_t)v11, &qword_26AD38738);
      }
      else
      {
        unint64_t v38 = v47;
        v30(v47, v11, v14);
        v30(v55, v38, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_21F2A74F4(0, *(void *)(v33 + 16) + 1, 1, v33);
        }
        unint64_t v40 = *(void *)(v33 + 16);
        unint64_t v39 = *(void *)(v33 + 24);
        if (v40 >= v39 >> 1) {
          uint64_t v33 = sub_21F2A74F4(v39 > 1, v40 + 1, 1, v33);
        }
        *(void *)(v33 + 16) = v40 + 1;
        v30((char *)(v33+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v40), v55, v14);
      }
      ++v32;
    }
    while (v31 != v32);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_21F314C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v38 = a3;
  uint64_t v40 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_21F41F228();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v38 - v12;
  uint64_t v14 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  if (*(void *)(a2 + 16) && (unint64_t v21 = sub_21F2F7E90(v40), (v22 & 1) != 0))
  {
    sub_21F31D258(*(void *)(a2 + 56) + *(void *)(v15 + 72) * v21, (uint64_t)v18, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    sub_21F31D300((uint64_t)v18, (uint64_t)v20, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    char v23 = *v20;
    id v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v24(v13, v40, v8);
    v24(v7, (uint64_t)&v20[v14[5]], v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v24(v39, v38, v8);
    char v25 = v20[v14[6]];
    LOBYTE(v24) = v20[v14[7]];
    sub_21F31D368((uint64_t)v20, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    id v26 = v41;
    *uint64_t v41 = v23;
    id v27 = (int *)type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
    id v28 = *(void (**)(unsigned char *, char *, uint64_t))(v9 + 32);
    v28(&v26[v27[5]], v13, v8);
    sub_21F2B458C((uint64_t)v7, (uint64_t)&v26[v27[6]], &qword_26AD38738);
    v28(&v26[v27[7]], v39, v8);
    v26[v27[8]] = v25;
    v26[v27[9]] = (_BYTE)v24;
    return (*(uint64_t (**)(unsigned char *, void, uint64_t, int *))(*((void *)v27 - 1) + 56))(v26, 0, 1, v27);
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_21F41FF28();
    __swift_project_value_buffer(v30, (uint64_t)qword_26AD3C910);
    uint64_t v31 = sub_21F41FF08();
    os_log_type_t v32 = sub_21F420678();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v43 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      if (qword_267EC7208 != -1) {
        swift_once();
      }
      uint64_t v35 = qword_267EC88A8;
      unint64_t v36 = unk_267EC88B0;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_21F2A02C4(v35, v36, &v43);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v31, v32, "%s Generic suggestion summary not extracted - suggestionId/requestId was missing", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v34, -1, -1);
      MEMORY[0x223C4B440](v33, -1, -1);
    }

    uint64_t v37 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v41, 1, 1, v37);
  }
}

uint64_t sub_21F3151BC()
{
  return sub_21F4205F8();
}

void sub_21F315238(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v137 = a2;
  uint64_t v142 = sub_21F41F228();
  uint64_t v140 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v135 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (uint64_t)&v134 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v134 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (unint64_t)&selRef_setPlusSuggesterSuggestionMetadataReported_;
  uint64_t v146 = v7;
  unint64_t v145 = v10;
  unint64_t v148 = (unint64_t)a1 >> 62;
  uint64_t v141 = (char *)&v134 - v12;
  uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62) {
    goto LABEL_46;
  }
  unint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14) {
    goto LABEL_13;
  }
  do
  {
    unint64_t v15 = 0;
    unint64_t v16 = a1 & 0xC000000000000001;
    uint64_t v149 = a1 + 32;
    while (1)
    {
      if (v16)
      {
        swift_bridgeObjectRetain();
        id v17 = (id)MEMORY[0x223C4A6D0](v15, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        id v17 = *(id *)(a1 + 8 * v15 + 32);
      }
      unsigned int v18 = [v17 *(SEL *)(v11 + 176)];

      if (v18 == 9)
      {
        if (v14 != v15)
        {
          uint64_t v147 = (char *)(v14 - 1);
          unint64_t v21 = &selRef_setPlusSuggesterSuggestionMetadataReported_;
          while (1)
          {
            if (v16)
            {
              swift_bridgeObjectRetain();
              id v22 = (id)MEMORY[0x223C4A6D0](v15, a1);
            }
            else
            {
              if ((v15 & 0x8000000000000000) != 0) {
                goto LABEL_242;
              }
              if (v15 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
                return;
              }
              char v23 = *(void **)(v149 + 8 * v15);
              swift_bridgeObjectRetain();
              id v22 = v23;
            }
            id v24 = v22;
            id v25 = [v22 v21[23]];
            if (v25)
            {
              uint64_t v26 = sub_21F41F0B8();
              unint64_t v28 = v27;

              id v25 = (id)sub_21F41F0A8();
              unint64_t v29 = v28;
              uint64_t v10 = v145;
              uint64_t v7 = v146;
              sub_21F2F64D8(v26, v29);
            }
            unint64_t v11 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v25);

            swift_bridgeObjectRelease();
            if (v11) {
              break;
            }
            if (v15 == v14) {
              goto LABEL_237;
            }
            unint64_t v11 = (unint64_t)&selRef_setPlusSuggesterSuggestionMetadataReported_;
            if (__OFADD__(v15, 1)) {
              goto LABEL_238;
            }
            if (v15 + 1 != v14)
            {
              while (1)
              {
                unint64_t v30 = v15 + 1;
                if (v16)
                {
                  swift_bridgeObjectRetain();
                  id v31 = (id)MEMORY[0x223C4A6D0](v15 + 1, a1);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  if ((v30 & 0x8000000000000000) != 0) {
                    goto LABEL_44;
                  }
                  if (v30 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_45;
                  }
                  id v31 = *(id *)(a1 + 8 * v15 + 40);
                }
                unint64_t v11 = (unint64_t)[v31 *(SEL *)(v11 + 176)];

                if (v11 == 9) {
                  break;
                }
                unint64_t v32 = v15 + 2;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_43;
                }
                ++v15;
                unint64_t v11 = 0x26450F000;
                if (v32 == v14) {
                  goto LABEL_12;
                }
              }
              BOOL v107 = v147 == (char *)v15++;
              unint64_t v21 = &selRef_setPlusSuggesterSuggestionMetadataReported_;
              if (!v107) {
                continue;
              }
            }
            goto LABEL_12;
          }
          unint64_t v14 = v15;
        }
LABEL_12:
        uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
        if (v148) {
          goto LABEL_47;
        }
LABEL_13:
        unint64_t v11 = *(void *)(v13 + 16);
        if (v14 != v11) {
          goto LABEL_48;
        }
LABEL_14:
        if (v148)
        {
LABEL_94:
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_21F420B98();
          swift_bridgeObjectRelease();
          if (v11 == v20) {
            goto LABEL_95;
          }
LABEL_97:
          unint64_t v63 = a1 & 0xC000000000000001;
          uint64_t v143 = a1 + 32;
          uint64_t v136 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56);
          os_log_type_t v139 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
          uint64_t v149 = a1 & 0xFFFFFFFFFFFFFF8;
          if (a1 < 0) {
            uint64_t v64 = a1;
          }
          else {
            uint64_t v64 = a1 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v144 = v64;
          uint64_t v138 = v20;
          while (2)
          {
            if (v63)
            {
              swift_bridgeObjectRetain();
              id v75 = (id)MEMORY[0x223C4A6D0](v11, a1);
            }
            else
            {
              if ((v11 & 0x8000000000000000) != 0) {
                goto LABEL_233;
              }
              if (v11 >= *(void *)(v149 + 16))
              {
LABEL_234:
                __break(1u);
LABEL_235:
                __break(1u);
LABEL_236:
                __break(1u);
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
                goto LABEL_239;
              }
              uint64_t v76 = *(void **)(v143 + 8 * v11);
              swift_bridgeObjectRetain();
              id v75 = v76;
            }
            uint64_t v77 = v75;
            unint64_t v78 = v11;
            id v79 = objc_msgSend(v75, sel_payload);
            if (v79)
            {
              unint64_t v80 = v79;
              uint64_t v81 = sub_21F41F0B8();
              unint64_t v83 = v82;

              uint64_t v84 = (void *)sub_21F41F0A8();
              sub_21F2F64D8(v81, v83);
            }
            else
            {
              uint64_t v84 = 0;
            }
            id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v84);

            if (!v85) {
              goto LABEL_246;
            }
            id v86 = objc_msgSend(v85, sel_source);
            unint64_t v11 = v78;
            if (v86
              && (uint64_t v87 = v86,
                  id v88 = objc_msgSend(v86, sel_uuid),
                  v87,
                  v88))
            {
              uint64_t v89 = (uint64_t)v141;
              sub_21F420648();
              swift_bridgeObjectRelease();

              id v85 = v88;
              uint64_t v90 = v142;
            }
            else
            {
              uint64_t v89 = (uint64_t)v141;
              uint64_t v90 = v142;
              (*v136)(v141, 1, 1, v142);
              swift_bridgeObjectRelease();
            }

            int v91 = (*v139)(v89, 1, v90);
            sub_21F29FA48(v89, &qword_26AD38738);
            if (v91 != 1) {
              goto LABEL_95;
            }
            if (v148)
            {
              swift_bridgeObjectRetain();
              uint64_t v93 = sub_21F420B98();
              swift_bridgeObjectRelease();
              uint64_t v147 = (char *)v93;
              if (v11 == v93) {
                goto LABEL_232;
              }
              swift_bridgeObjectRetain();
              unint64_t v92 = sub_21F420B98();
              swift_bridgeObjectRelease();
            }
            else
            {
              unint64_t v92 = *(void *)(v149 + 16);
              uint64_t v147 = (char *)v92;
              if (v11 == v92) {
                goto LABEL_231;
              }
            }
            if (v11 == v92) {
              goto LABEL_230;
            }
            uint64_t v10 = (char *)(v92 - 1);
            do
            {
              if (v11 == v92) {
                goto LABEL_224;
              }
              if (__OFADD__(v11, 1)) {
                goto LABEL_225;
              }
              unint64_t v94 = v11;
              if (v11 + 1 == v92) {
                goto LABEL_155;
              }
              while (1)
              {
                unint64_t v95 = v94 + 1;
                if (v63)
                {
                  swift_bridgeObjectRetain();
                  unint64_t v11 = MEMORY[0x223C4A6D0](v94 + 1, a1);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  if ((v95 & 0x8000000000000000) != 0) {
                    goto LABEL_214;
                  }
                  if (v95 >= *(void *)(v149 + 16)) {
                    goto LABEL_215;
                  }
                  unint64_t v11 = (unint64_t)*(id *)(a1 + 8 * v94 + 40);
                }
                unsigned int v96 = objc_msgSend((id)v11, sel_anyEventType);

                if (v96 == 9) {
                  break;
                }
                unint64_t v97 = v94 + 2;
                if (__OFADD__(v95, 1)) {
                  goto LABEL_211;
                }
                ++v94;
                if (v97 == v92) {
                  goto LABEL_155;
                }
              }
              if (v10 == (char *)v94) {
                goto LABEL_155;
              }
              unint64_t v98 = v94 + 1;
              if (v63)
              {
                swift_bridgeObjectRetain();
                uint64_t v7 = v94 + 1;
                id v99 = (id)MEMORY[0x223C4A6D0](v94 + 1, a1);
              }
              else
              {
                if ((v98 & 0x8000000000000000) != 0) {
                  goto LABEL_235;
                }
                if (v98 >= *(void *)(v149 + 16)) {
                  goto LABEL_236;
                }
                uint64_t v7 = v94 + 1;
                char v100 = *(void **)(a1 + 8 * v94 + 40);
                swift_bridgeObjectRetain();
                id v99 = v100;
              }
              uint64_t v101 = v99;
              id v102 = objc_msgSend(v99, sel_payload);
              if (v102)
              {
                uint64_t v103 = sub_21F41F0B8();
                unint64_t v105 = v104;

                id v102 = (id)sub_21F41F0A8();
                sub_21F2F64D8(v103, v105);
              }
              id v106 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v102);

              swift_bridgeObjectRelease();
              unint64_t v11 = v7;
            }
            while (!v106);
            unint64_t v92 = v94 + 1;
LABEL_155:
            BOOL v107 = v92 == (void)v147;
LABEL_157:
            uint64_t v7 = v146;
            uint64_t v10 = v145;
            if (!v107)
            {
              if (v63)
              {
                swift_bridgeObjectRetain();
                id v108 = (id)MEMORY[0x223C4A6D0](v92, a1);
              }
              else
              {
                if ((v92 & 0x8000000000000000) != 0) {
                  goto LABEL_220;
                }
                if (v92 >= *(void *)(v149 + 16)) {
                  goto LABEL_221;
                }
                uint64_t v109 = *(void **)(v143 + 8 * v92);
                swift_bridgeObjectRetain();
                id v108 = v109;
              }
              char v110 = v108;
              unint64_t v11 = (unint64_t)objc_msgSend(v108, sel_payload);
              if (v11)
              {
                uint64_t v111 = sub_21F41F0B8();
                unint64_t v113 = v112;

                unint64_t v11 = sub_21F41F0A8();
                sub_21F2F64D8(v111, v113);
              }
              id v114 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v11);

              if (!v114) {
                goto LABEL_244;
              }
              swift_bridgeObjectRelease();
              id v115 = objc_msgSend(v114, sel_source);
              if (!v115)
              {

                if (!v148) {
                  goto LABEL_169;
                }
                goto LABEL_171;
              }
              uint64_t v116 = v115;
              unsigned int v117 = objc_msgSend(v115, sel_component);

              if (v117 != 19)
              {
                if (!v148)
                {
LABEL_169:
                  uint64_t v10 = *(char **)(v149 + 16);
LABEL_172:
                  if ((char *)v92 == v10) {
                    goto LABEL_218;
                  }
                  while ((char *)v92 != v10)
                  {
                    uint64_t v52 = (char *)(v92 + 1);
                    unint64_t v11 = (unint64_t)&selRef_setPlusSuggesterSuggestionMetadataReported_;
                    if (__OFADD__(v92, 1)) {
                      goto LABEL_213;
                    }
                    uint64_t v7 = v92;
                    if (v52 == v10)
                    {
LABEL_156:
                      unint64_t v92 = (unint64_t)v10;
                      BOOL v107 = v10 == v147;
                      goto LABEL_157;
                    }
                    while (1)
                    {
                      unint64_t v68 = v7 + 1;
                      if (v63)
                      {
                        swift_bridgeObjectRetain();
                        id v118 = (id)MEMORY[0x223C4A6D0](v7 + 1, a1);
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        if ((v68 & 0x8000000000000000) != 0) {
                          goto LABEL_206;
                        }
                        uint64_t v52 = *(char **)(v149 + 16);
                        if (v68 >= (unint64_t)v52) {
                          goto LABEL_207;
                        }
                        id v118 = *(id *)(a1 + 8 * v7 + 40);
                      }
                      unsigned int v119 = objc_msgSend(v118, sel_anyEventType);

                      if (v119 == 9) {
                        break;
                      }
                      uint64_t v52 = (char *)(v7 + 2);
                      if (__OFADD__(v68, 1))
                      {
                        __break(1u);
                        goto LABEL_196;
                      }
                      ++v7;
                      if (v52 == v10) {
                        goto LABEL_156;
                      }
                    }
                    if (v10 - 1 == (char *)v7) {
                      goto LABEL_156;
                    }
                    unint64_t v92 = v7 + 1;
                    if (v63)
                    {
                      swift_bridgeObjectRetain();
                      id v120 = (id)MEMORY[0x223C4A6D0](v7 + 1, a1);
                    }
                    else
                    {
                      if ((v92 & 0x8000000000000000) != 0) {
                        goto LABEL_222;
                      }
                      if (v92 >= *(void *)(v149 + 16)) {
                        goto LABEL_223;
                      }
                      int64_t v121 = *(void **)(a1 + 8 * v7 + 40);
                      swift_bridgeObjectRetain();
                      id v120 = v121;
                    }
                    unint64_t v122 = v120;
                    unint64_t v11 = (unint64_t)objc_msgSend(v120, sel_payload);
                    if (v11)
                    {
                      uint64_t v123 = sub_21F41F0B8();
                      unint64_t v125 = v124;

                      unint64_t v11 = sub_21F41F0A8();
                      sub_21F2F64D8(v123, v125);
                    }
                    id v126 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v11);

                    swift_bridgeObjectRelease();
                    if (v126)
                    {
                      uint64_t v10 = (char *)(v7 + 1);
                      goto LABEL_156;
                    }
                  }
                  goto LABEL_212;
                }
LABEL_171:
                swift_bridgeObjectRetain();
                uint64_t v10 = (char *)sub_21F420B98();
                swift_bridgeObjectRelease();
                goto LABEL_172;
              }
              uint64_t v147 = (char *)v92;
              uint64_t v7 = v146;
              uint64_t v10 = v145;
            }
            unint64_t v11 = (unint64_t)v147;
            uint64_t v52 = (char *)v138;
            if (v147 == (char *)v138) {
              goto LABEL_208;
            }
            continue;
          }
        }
LABEL_15:
        uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11 == v20) {
          goto LABEL_95;
        }
        goto LABEL_97;
      }
      unint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      ++v15;
      if (v19 == v14) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_21F420B98();
  }
  while (v14);
LABEL_47:
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_21F420B98();
  swift_bridgeObjectRelease();
  if (v14 == v11) {
    goto LABEL_14;
  }
LABEL_48:
  unint64_t v33 = a1 & 0xC000000000000001;
  uint64_t v10 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
  uint64_t v143 = a1 + 32;
  if (a1 < 0) {
    uint64_t v34 = a1;
  }
  else {
    uint64_t v34 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v144 = v34;
  uint64_t v147 = (char *)v11;
  while (1)
  {
    if (v33)
    {
      swift_bridgeObjectRetain();
      id v35 = (id)MEMORY[0x223C4A6D0](v14, a1);
    }
    else
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_226;
      }
      if (v14 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_227;
      }
      unint64_t v36 = *(void **)(v143 + 8 * v14);
      swift_bridgeObjectRetain();
      id v35 = v36;
    }
    uint64_t v37 = v35;
    id v38 = objc_msgSend(v35, sel_payload);
    if (v38)
    {
      unint64_t v39 = v38;
      uint64_t v40 = sub_21F41F0B8();
      unint64_t v42 = v41;

      uint64_t v43 = (void *)sub_21F41F0A8();
      sub_21F2F64D8(v40, v42);
    }
    else
    {
      uint64_t v43 = 0;
    }
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v43);

    if (!v44) {
      goto LABEL_245;
    }
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(v44, sel_source);
    unint64_t v11 = (unint64_t)&selRef_setPlusSuggesterSuggestionMetadataReported_;
    if (v45)
    {
      uint64_t v46 = v45;
      unsigned int v47 = objc_msgSend(v45, sel_component);

      if (v47 != 19)
      {
        if (v148) {
          goto LABEL_67;
        }
        goto LABEL_65;
      }
      unint64_t v11 = v14;
LABEL_93:
      uint64_t v7 = v146;
      uint64_t v10 = v145;
      if (v148) {
        goto LABEL_94;
      }
      goto LABEL_15;
    }

    if (v148)
    {
LABEL_67:
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_21F420B98();
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
LABEL_65:
    uint64_t v48 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_68:
    if (v14 == v48) {
      goto LABEL_219;
    }
    uint64_t v149 = v48 - 1;
LABEL_70:
    if (v14 == v48) {
      goto LABEL_216;
    }
    if (__OFADD__(v14, 1)) {
      goto LABEL_217;
    }
    uint64_t v7 = v14;
    if (v14 + 1 == v48) {
      goto LABEL_52;
    }
LABEL_73:
    unint64_t v49 = v7 + 1;
    if (v33)
    {
      swift_bridgeObjectRetain();
      id v50 = (id)MEMORY[0x223C4A6D0](v7 + 1, a1);
      swift_bridgeObjectRelease();
      goto LABEL_78;
    }
    if ((v49 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      __break(1u);
LABEL_220:
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
      goto LABEL_234;
    }
    if (v49 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_210;
    }
    id v50 = *(id *)(a1 + 8 * v7 + 40);
LABEL_78:
    unsigned int v51 = [v50 *(SEL *)(v11 + 176)];

    if (v51 != 9) {
      break;
    }
    if (v149 == v7) {
      goto LABEL_52;
    }
    unint64_t v14 = v7 + 1;
    if (v33)
    {
      swift_bridgeObjectRetain();
      id v53 = (id)MEMORY[0x223C4A6D0](v7 + 1, a1);
    }
    else
    {
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_228;
      }
      if (v14 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_229;
      }
      uint64_t v54 = *(void **)(a1 + 8 * v7 + 40);
      swift_bridgeObjectRetain();
      id v53 = v54;
    }
    uint64_t v55 = v53;
    id v56 = objc_msgSend(v53, sel_payload);
    if (v56)
    {
      uint64_t v57 = sub_21F41F0B8();
      unint64_t v59 = v58;

      id v56 = (id)sub_21F41F0A8();
      unint64_t v60 = v59;
      unint64_t v11 = 0x26450F000;
      sub_21F2F64D8(v57, v60);
    }
    id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v56);

    swift_bridgeObjectRelease();
    if (!v61) {
      goto LABEL_70;
    }
    uint64_t v48 = v7 + 1;
LABEL_52:
    unint64_t v14 = v48;
    unint64_t v11 = (unint64_t)v147;
    if ((char *)v48 == v147) {
      goto LABEL_93;
    }
  }
  uint64_t v52 = (char *)(v7 + 2);
  if (!__OFADD__(v49, 1))
  {
    ++v7;
    if (v52 == (char *)v48) {
      goto LABEL_52;
    }
    goto LABEL_73;
  }
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  unint64_t v11 = (unint64_t)v52;
LABEL_95:
  if (v148)
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_21F420B98();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v62 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v150[0] = a1;
  v150[1] = sub_21F3164F8;
  v150[2] = 0;
  v150[3] = sub_21F316524;
  v150[4] = 0;
  v150[5] = sub_21F3170A0;
  v150[6] = 0;
  v150[7] = sub_21F3170B0;
  v150[8] = 0;
  v150[9] = sub_21F3165C4;
  v150[10] = 0;
  v150[11] = sub_21F31661C;
  v150[12] = 0;
  v150[13] = sub_21F3495D4;
  v150[14] = 0;
  v150[15] = sub_21F34966C;
  v150[16] = 0;
  if (v11 == v62)
  {
    uint64_t v65 = 1;
    unint64_t v11 = v137;
    a1 = v142;
    uint64_t v66 = v140;
    goto LABEL_204;
  }
  if ((a1 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v67 = *(id *)(a1 + 8 * v11 + 32);
      goto LABEL_108;
    }
    __break(1u);
LABEL_242:
    __break(1u);
    goto LABEL_243;
  }
LABEL_239:
  id v67 = (id)MEMORY[0x223C4A6D0](v11, a1);
LABEL_108:
  unint64_t v68 = (unint64_t)v67;
  id v69 = objc_msgSend(v67, sel_payload);
  unint64_t v11 = v137;
  a1 = v142;
  if (v69)
  {
    uint64_t v70 = v69;
    uint64_t v71 = sub_21F41F0B8();
    unint64_t v73 = v72;

    uint64_t v74 = (void *)sub_21F41F0A8();
    sub_21F2F64D8(v71, v73);
  }
  else
  {
LABEL_196:
    uint64_t v74 = 0;
  }
  id v127 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v74);

  if (!v127) {
    goto LABEL_247;
  }
  id v128 = objc_msgSend(v127, sel_source);
  if (v128
    && (int v129 = v128, v130 = objc_msgSend(v128, sel_uuid), v129, v130))
  {
    sub_21F420648();

    id v127 = v130;
    uint64_t v131 = v140;
  }
  else
  {
    uint64_t v131 = v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v10, 1, 1, a1);
  }

  sub_21F2B13D0((uint64_t)v10, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v7, 1, a1) == 1) {
    goto LABEL_248;
  }
  uint64_t v132 = *(void (**)(char *, uint64_t, uint64_t))(v140 + 32);
  int v133 = v135;
  v132(v135, v7, a1);
  sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
  v132((char *)v11, (uint64_t)v133, a1);
  uint64_t v66 = v140;
  uint64_t v65 = 0;
LABEL_204:
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v11, v65, 1, a1);
  sub_21F31D3E4((uint64_t)v150);
}

BOOL sub_21F3164F8(id *a1)
{
  return objc_msgSend(*a1, sel_anyEventType) == 9;
}

void sub_21F316524(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_payload);
  if (v3)
  {
    uint64_t v4 = sub_21F41F0B8();
    unint64_t v6 = v5;

    id v3 = (id)sub_21F41F0A8();
    sub_21F2F64D8(v4, v6);
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_initWithData_, v3);

  *a2 = v7;
}

id sub_21F3165C4(id *a1)
{
  id result = objc_msgSend(*a1, sel_source);
  if (result)
  {
    char v2 = result;
    unsigned int v3 = objc_msgSend(result, sel_component);

    return (id)(v3 == 19);
  }
  return result;
}

void sub_21F31661C(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_source);
  if (v3 && (uint64_t v4 = v3, v7 = objc_msgSend(v3, sel_uuid), v4, v7))
  {
    sub_21F420648();
  }
  else
  {
    uint64_t v5 = sub_21F41F228();
    unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(a2, 1, 1, v5);
  }
}

uint64_t PlusClientEventFeatureExtractor.deinit()
{
  swift_release();
  return v0;
}

uint64_t PlusClientEventFeatureExtractor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_21F316760(unint64_t *a1)
{
  return sub_21F313118(*a1);
}

uint64_t PlusContactSuggestionRuntimeSummary.runtimeSuggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_21F41F228();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PlusContactSuggestionRuntimeSummary.offlineSuggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 20);
  return sub_21F2B13D0(v3, a1);
}

uint64_t PlusContactSuggestionRuntimeSummary.suggestionInModelOutput.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 24));
}

uint64_t PlusContactSuggestionRuntimeSummary.suggestionWasDuplicate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 28));
}

void PlusGenericSuggestionRuntimeSummary.suggestionDomain.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionLinkId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 20);
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PlusGenericSuggestionRuntimeSummary.originalRequestId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 24);
  return sub_21F2B13D0(v3, a1);
}

uint64_t PlusGenericSuggestionRuntimeSummary.originalPlusId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 28);
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionSurfacedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionNoveltyState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

BOOL static SuggestionDomain.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SuggestionDomain.hash(into:)()
{
  return sub_21F420F08();
}

uint64_t PlusRuntimeContactSuggestions.init(value:)()
{
  return sub_21F41FAA8();
}

{
  return sub_21F41FA98();
}

uint64_t sub_21F316AD4(uint64_t a1)
{
  return sub_21F316B68(a1, (void (*)(void))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t sub_21F316AEC(uint64_t a1)
{
  return sub_21F316BD0(a1, (void (*)(void))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t _s28SiriPrivateLearningInference29PlusRuntimeContactSuggestionsC5valueACSgSayAA0eg10SuggestionF7SummaryVGSg_tcfC_0()
{
  return sub_21F41FA98();
}

uint64_t sub_21F316B50(uint64_t a1)
{
  return sub_21F316B68(a1, (void (*)(void))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_21F316B68(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FAA8();
}

uint64_t sub_21F316BB8(uint64_t a1)
{
  return sub_21F316BD0(a1, (void (*)(void))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_21F316BD0(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FA98();
}

uint64_t PlusForcePrompted.init(value:)()
{
  return sub_21F41FAA8();
}

{
  return sub_21F41FA98();
}

uint64_t PlusForcePrompted.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_21F316CA8(uint64_t a1)
{
  return sub_21F316FA4(a1, (void (*)(void))type metadata accessor for PlusForcePrompted);
}

uint64_t sub_21F316CC0(uint64_t a1)
{
  return sub_21F31700C(a1, (void (*)(void))type metadata accessor for PlusForcePrompted);
}

uint64_t PlusClientEventIdFeature.init(value:)(uint64_t a1)
{
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  uint64_t v5 = sub_21F41FAA8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v2 - 8);
  sub_21F2B13D0(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_21F41FA98();
  swift_retain();
  sub_21F29FA48(a1, &qword_26AD38738);
  if (v4) {
    swift_release();
  }
  return v4;
}

uint64_t _s28SiriPrivateLearningInference17PlusForcePromptedC5valueACSgSbSg_tcfC_0()
{
  return sub_21F41FA98();
}

uint64_t sub_21F316F8C(uint64_t a1)
{
  return sub_21F316FA4(a1, (void (*)(void))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_21F316FA4(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FAA8();
}

uint64_t sub_21F316FF4(uint64_t a1)
{
  return sub_21F31700C(a1, (void (*)(void))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_21F31700C(uint64_t a1, void (*a2)(void))
{
  return sub_21F41FA98();
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor()
{
  return self;
}

uint64_t type metadata accessor for PlusContactSuggesterEnabled(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3ABD8);
}

BOOL sub_21F3170A0(void *a1)
{
  return *a1 != 0;
}

id sub_21F3170B0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL _s28SiriPrivateLearningInference35PlusGenericSuggestionRuntimeSummaryV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38748);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  id v17 = (char *)&v34 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v34 - v18;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v37 = v7;
  uint64_t v20 = a1;
  uint64_t v21 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  if ((sub_21F41F1D8() & 1) == 0) {
    return 0;
  }
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v34 = v20;
  sub_21F2B13D0((uint64_t)&v20[v22], (uint64_t)v19);
  uint64_t v35 = v21;
  unint64_t v36 = a2;
  sub_21F2B13D0((uint64_t)&a2[*(int *)(v21 + 24)], (uint64_t)v17);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_21F2B13D0((uint64_t)v19, (uint64_t)v10);
  sub_21F2B13D0((uint64_t)v17, v23);
  id v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_21F2B13D0((uint64_t)v10, (uint64_t)v14);
    if (v24(v23, 1, v4) != 1)
    {
      uint64_t v25 = v5;
      uint64_t v26 = v23;
      unint64_t v27 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v37, v26, v4);
      sub_21F31A304((unint64_t *)&qword_26AD3A840, 255, MEMORY[0x263F07508]);
      char v28 = sub_21F420098();
      unint64_t v29 = *(void (**)(char *, uint64_t))(v25 + 8);
      v29(v27, v4);
      sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
      sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
      v29(v14, v4);
      sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
      if ((v28 & 1) == 0) {
        return 0;
      }
      goto LABEL_10;
    }
    sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
    sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_21F29FA48((uint64_t)v10, &qword_26AD38748);
    return 0;
  }
  sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
  sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
  if (v24(v23, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
LABEL_10:
  id v31 = v34;
  uint64_t v30 = v35;
  unint64_t v32 = v36;
  if ((sub_21F41F1D8() & 1) != 0 && v31[*(int *)(v30 + 32)] == v32[*(int *)(v30 + 32)]) {
    return v31[*(int *)(v30 + 36)] == v32[*(int *)(v30 + 36)];
  }
  return 0;
}

uint64_t _s28SiriPrivateLearningInference35PlusContactSuggestionRuntimeSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38748);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  id v17 = (char *)&v33 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v33 - v18;
  if ((sub_21F41F1D8() & 1) == 0) {
    goto LABEL_10;
  }
  unint64_t v33 = v7;
  uint64_t v20 = v5;
  uint64_t v21 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v35 = a1;
  sub_21F2B13D0(a1 + v22, (uint64_t)v19);
  uint64_t v34 = v21;
  uint64_t v23 = *(int *)(v21 + 20);
  uint64_t v24 = v20;
  uint64_t v36 = a2;
  sub_21F2B13D0(a2 + v23, (uint64_t)v17);
  uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_21F2B13D0((uint64_t)v19, (uint64_t)v10);
  sub_21F2B13D0((uint64_t)v17, v25);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v26((uint64_t)v10, 1, v4) != 1)
  {
    sub_21F2B13D0((uint64_t)v10, (uint64_t)v14);
    if (v26(v25, 1, v4) != 1)
    {
      unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 32);
      char v28 = v33;
      v27(v33, v25, v4);
      sub_21F31A304((unint64_t *)&qword_26AD3A840, 255, MEMORY[0x263F07508]);
      char v29 = sub_21F420098();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
      v30(v28, v4);
      sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
      sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
      v30(v14, v4);
      sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
      if ((v29 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
    sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v4);
LABEL_7:
    sub_21F29FA48((uint64_t)v10, &qword_26AD38748);
    goto LABEL_10;
  }
  sub_21F29FA48((uint64_t)v17, &qword_26AD38738);
  sub_21F29FA48((uint64_t)v19, &qword_26AD38738);
  if (v26(v25, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_21F29FA48((uint64_t)v10, &qword_26AD38738);
LABEL_9:
  if (*(unsigned __int8 *)(v35 + *(int *)(v34 + 24)) == *(unsigned __int8 *)(v36 + *(int *)(v34 + 24)))
  {
    char v31 = *(unsigned char *)(v35 + *(int *)(v34 + 28)) ^ *(unsigned char *)(v36 + *(int *)(v34 + 28)) ^ 1;
    return v31 & 1;
  }
LABEL_10:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_21F31790C(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3ACB0);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v63 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  uint64_t v5 = *(void *)(v62 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v62);
  uint64_t v52 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v49 - v8;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A818);
  uint64_t v9 = MEMORY[0x270FA5388](v61);
  unint64_t v60 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v59 = (char *)&v49 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v58 = (uint64_t)&v49 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v57 = (char *)&v49 - v15;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v54 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v51 = v5;
  int64_t v55 = (unint64_t)(v17 + 63) >> 6;
  id v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v65 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  unint64_t v53 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v19)
    {
      uint64_t v66 = (v19 - 1) & v19;
      int64_t v67 = v21;
      unint64_t v22 = __clz(__rbit64(v19)) | (v21 << 6);
      goto LABEL_5;
    }
    int64_t v39 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v39 >= v55) {
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v54 + 8 * v39);
    int64_t v41 = v21 + 1;
    if (!v40)
    {
      int64_t v41 = v21 + 2;
      if (v21 + 2 >= v55) {
        goto LABEL_30;
      }
      unint64_t v40 = *(void *)(v54 + 8 * v41);
      if (!v40)
      {
        int64_t v41 = v21 + 3;
        if (v21 + 3 >= v55) {
          goto LABEL_30;
        }
        unint64_t v40 = *(void *)(v54 + 8 * v41);
        if (!v40)
        {
          int64_t v41 = v21 + 4;
          if (v21 + 4 >= v55) {
            goto LABEL_30;
          }
          unint64_t v40 = *(void *)(v54 + 8 * v41);
          if (!v40) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v66 = (v40 - 1) & v40;
    int64_t v67 = v41;
    unint64_t v22 = __clz(__rbit64(v40)) + (v41 << 6);
LABEL_5:
    uint64_t v23 = v65;
    uint64_t v24 = *(void *)(v65 + 48);
    uint64_t v25 = sub_21F41F228();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(v26 + 72) * v22;
    char v29 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v30 = (uint64_t)v57;
    v29(v57, v28, v25);
    uint64_t v68 = *(void *)(*(void *)(v23 + 56) + 8 * v22);
    uint64_t v31 = v61;
    *(void *)(v30 + *(int *)(v61 + 48)) = v68;
    uint64_t v32 = v58;
    sub_21F2B458C(v30, v58, &qword_26AD3A818);
    uint64_t v33 = *(int *)(v31 + 48);
    uint64_t v34 = v59;
    v29(v59, v32, v25);
    uint64_t v35 = *(void *)(v32 + v33);
    *(void *)&v34[v33] = v35;
    uint64_t v36 = *(int *)(v31 + 48);
    uint64_t v37 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v60, v34, v25);
    *(void *)(v37 + v36) = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = (uint64_t)v63;
    swift_getAtKeyPath();
    sub_21F29FA48(v37, &qword_26AD3A818);
    sub_21F29FA48(v32, &qword_26AD3A818);
    if ((*v56)(v38, 1, v62) == 1)
    {
      uint64_t result = sub_21F29FA48(v38, &qword_26AD3ACB0);
    }
    else
    {
      uint64_t v43 = v38;
      uint64_t v44 = v50;
      sub_21F31D300(v43, v50, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      sub_21F31D300(v44, v52, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v53 = sub_21F2A8748(0, *(void *)(v53 + 16) + 1, 1, v53);
      }
      unint64_t v46 = *(void *)(v53 + 16);
      unint64_t v45 = *(void *)(v53 + 24);
      if (v46 >= v45 >> 1) {
        unint64_t v53 = sub_21F2A8748(v45 > 1, v46 + 1, 1, v53);
      }
      uint64_t v47 = v52;
      unint64_t v48 = v53;
      *(void *)(v53 + 16) = v46 + 1;
      uint64_t result = sub_21F31D300(v47, v48+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v46, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
    }
    unint64_t v19 = v66;
    int64_t v21 = v67;
  }
  uint64_t v42 = v21 + 5;
  if (v21 + 5 >= v55)
  {
LABEL_30:
    swift_release();
    return v53;
  }
  unint64_t v40 = *(void *)(v54 + 8 * v42);
  if (v40)
  {
    int64_t v41 = v21 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v55) {
      goto LABEL_30;
    }
    unint64_t v40 = *(void *)(v54 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_24;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_21F317ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  long long v157 = (char *)v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  double v170 = (char *)v139 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v164 = (char *)v139 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v163 = (char *)v139 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v162 = (char *)v139 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v160 = (char *)v139 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v180 = (char *)v139 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)v139 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  long long v158 = (char *)v139 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)v139 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v161 = (char *)v139 - v33;
  MEMORY[0x270FA5388](v32);
  v165 = (char *)v139 - v34;
  uint64_t v144 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  uint64_t v150 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v156 = (char *)v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = MEMORY[0x263F8EE78];
  if (!v36) {
    return v37;
  }
  v139[1] = v2;
  uint64_t v184 = MEMORY[0x263F8EE78];
  int64_t v147 = v36;
  sub_21F2C3780(0, v36, 0);
  int v154 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  uint64_t v38 = *((void *)v154 - 1);
  uint64_t v149 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  uint64_t v143 = *(void *)(a2 + 16);
  int64_t v39 = (void *)(v143 + 24);
  swift_beginAccess();
  uint64_t v40 = v38;
  uint64_t v41 = 0;
  uint64_t v148 = *(void *)(v40 + 72);
  uint64_t v171 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v169 = (void (**)(void, void, void, void))(v6 + 56);
  int v173 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v178 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v179 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v146 = (void (**)(unint64_t, char *, uint64_t))(v6 + 40);
  uint64_t v42 = v6;
  uint64_t v142 = v6;
  double v176 = v31;
  uint64_t v43 = v39;
  uint64_t v44 = (int *)v144;
  unint64_t v151 = v43;
  uint64_t v140 = v22;
  uint64_t v152 = v26;
  while (1)
  {
    uint64_t v153 = v41;
    uint64_t v45 = v154[5];
    uint64_t v155 = v149 + v148 * v41;
    uint64_t v167 = v155 + v45;
    uint64_t v46 = *v43;
    unint64_t v47 = (unint64_t)v169;
    if (*(void *)(*v43 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_21F2F7E90(v167);
      if (v49)
      {
        uint64_t v50 = *(void *)(*(void *)(v46 + 56) + 8 * v48);
        swift_bridgeObjectRetain();
        uint64_t v51 = v50;
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = *(void *)(v143 + 16);
    uint64_t v53 = *(void *)(v52 + 16);
    if (v53) {
      break;
    }
    char v110 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v47;
    swift_bridgeObjectRetain();
    uint64_t v166 = MEMORY[0x263F8EE80];
    v110(v165, 1, 1, v5);
LABEL_38:
    swift_bridgeObjectRelease();
    unint64_t v112 = *v171;
    (*v171)(v22, v167, v5);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v182 = (void *)*v43;
    id v114 = v182;
    *uint64_t v43 = 0x8000000000000000;
    unint64_t v116 = sub_21F2F7E90((uint64_t)v22);
    uint64_t v117 = v114[2];
    BOOL v118 = (v115 & 1) == 0;
    uint64_t v119 = v117 + v118;
    uint64_t v42 = v142;
    if (__OFADD__(v117, v118)) {
      goto LABEL_62;
    }
    char v120 = v115;
    if (v114[3] >= v119)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v123 = v182;
        if ((v115 & 1) == 0) {
          goto LABEL_47;
        }
      }
      else
      {
        sub_21F2FEA54();
        uint64_t v123 = v182;
        if ((v120 & 1) == 0) {
          goto LABEL_47;
        }
      }
    }
    else
    {
      sub_21F2F9FF8(v119, isUniquelyReferenced_nonNull_native);
      unint64_t v121 = sub_21F2F7E90((uint64_t)v22);
      if ((v120 & 1) != (v122 & 1)) {
        goto LABEL_64;
      }
      unint64_t v116 = v121;
      uint64_t v123 = v182;
      if ((v120 & 1) == 0)
      {
LABEL_47:
        v123[(v116 >> 6) + 8] |= 1 << v116;
        v112((char *)(v123[6] + *(void *)(v42 + 72) * v116), (uint64_t)v22, v5);
        uint64_t v51 = v166;
        *(void *)(v123[7] + 8 * v116) = v166;
        uint64_t v126 = v123[2];
        BOOL v105 = __OFADD__(v126, 1);
        uint64_t v127 = v126 + 1;
        if (v105) {
          goto LABEL_63;
        }
        v123[2] = v127;
        goto LABEL_49;
      }
    }
    uint64_t v124 = v123[7];
    swift_bridgeObjectRelease();
    uint64_t v125 = v166;
    *(void *)(v124 + 8 * v116) = v166;
    uint64_t v51 = v125;
LABEL_49:
    uint64_t v43 = v151;
    void *v151 = v123;
    swift_bridgeObjectRelease();
    (*v179)(v22, v5);
    swift_endAccess();
    uint64_t v44 = (int *)v144;
    unint64_t v47 = (unint64_t)v169;
LABEL_50:
    id v128 = (uint64_t)&v156[v44[5]];
    if (*(void *)(v51 + 16) && (unint64_t v129 = sub_21F2F7E90(v155), (v130 & 1) != 0))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))((char *)v128, *(void *)(v51 + 56) + *(void *)(v42 + 72) * v129, v5);
      uint64_t v131 = 0;
    }
    else
    {
      uint64_t v131 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v47)((char *)v128, v131, 1, v5);
    swift_bridgeObjectRelease();
    uint64_t v132 = (uint64_t)v156;
    uint64_t v133 = v155;
    (*v171)(v156, v155, v5);
    char v134 = *(unsigned char *)(v133 + v154[7]);
    *(unsigned char *)(v132 + v44[6]) = *(unsigned char *)(v133 + v154[6]);
    *(unsigned char *)(v132 + v44[7]) = v134;
    uint64_t v37 = v184;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21F2C3780(0, *(void *)(v37 + 16) + 1, 1);
      uint64_t v37 = v184;
    }
    unint64_t v136 = *(void *)(v37 + 16);
    unint64_t v135 = *(void *)(v37 + 24);
    if (v136 >= v135 >> 1)
    {
      sub_21F2C3780(v135 > 1, v136 + 1, 1);
      uint64_t v37 = v184;
    }
    uint64_t v137 = v153 + 1;
    *(void *)(v37 + 16) = v136 + 1;
    uint64_t v41 = v137;
    sub_21F31D300((uint64_t)v156, v37+ ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80))+ *(void *)(v150 + 72) * v136, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    if (v41 == v147) {
      return v37;
    }
  }
  unint64_t v141 = v47 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v54 = v52;
  uint64_t v55 = v52 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  uint64_t v168 = *(void *)(v42 + 72);
  id v56 = *(void (**)(void, void, void))(v42 + 16);
  uint64_t v145 = v54;
  swift_bridgeObjectRetain();
  uint64_t v166 = MEMORY[0x263F8EE80];
  uint64_t v57 = v165;
  uint64_t v58 = v173;
  BOOL v172 = v56;
  while (1)
  {
    uint64_t v177 = v55;
    v56(v57, v55, v5);
    unint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v47;
    (*(void (**)(char *, void, uint64_t, uint64_t))v47)(v57, 0, 1, v5);
    uint64_t v61 = *v178;
    if ((*v178)(v57, 1, v5) == 1)
    {
      unint64_t v22 = v140;
      uint64_t v43 = v151;
      goto LABEL_38;
    }
    uint64_t v181 = (void (*)(void, void, void, void))v60;
    uint64_t v174 = v53;
    uint64_t v62 = *v58;
    unint64_t v63 = v180;
    (*v58)(v180, v57, v5);
    uint64_t v64 = v162;
    v56(v162, v167, v5);
    uint64_t v65 = v163;
    v56(v163, v63, v5);
    uint64_t v66 = (uint64_t)v164;
    v56(v164, v64, v5);
    sub_21F41F1B8();
    sub_21F3C1834(v66, (uint64_t)v176);
    int64_t v67 = *v179;
    (*v179)(v65, v5);
    uint64_t v68 = (uint64_t)v176;
    double v175 = v67;
    v67(v64, v5);
    if (v61((char *)v68, 1, v5))
    {
      sub_21F29FA48(v68, &qword_26AD38738);
      uint64_t v69 = 1;
      uint64_t v70 = (uint64_t)v161;
    }
    else
    {
      uint64_t v70 = (uint64_t)v161;
      v62(v161, (char *)v68, v5);
      uint64_t v69 = 0;
    }
    unint64_t v47 = (unint64_t)v169;
    uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181;
    v181(v70, v69, 1, v5);
    if (v61((char *)v70, 1, v5) != 1) {
      break;
    }
    sub_21F29FA48(v70, &qword_26AD38738);
    uint64_t v57 = v165;
    id v56 = v172;
    uint64_t v58 = v173;
    unint64_t v59 = v175;
LABEL_10:
    v59(v180, v5);
    uint64_t v55 = v177 + v168;
    uint64_t v53 = v174 - 1;
    if (v174 == 1)
    {
      uint64_t v111 = v71;
      unint64_t v22 = v140;
      uint64_t v43 = v151;
      v111(v57, 1, 1, v5);
      goto LABEL_38;
    }
  }
  unint64_t v72 = v160;
  v62(v160, (char *)v70, v5);
  unint64_t v73 = (void (*)(char *, char *, uint64_t))v172;
  v172(v170, v72, v5);
  uint64_t v74 = (uint64_t)v158;
  v73(v158, v180, v5);
  v71((char *)v74, 0, 1, v5);
  unsigned int v75 = v61((char *)v74, 1, v5);
  uint64_t v159 = v62;
  if (v75 == 1)
  {
    sub_21F29FA48(v74, &qword_26AD38738);
    uint64_t v76 = (void *)v166;
    swift_bridgeObjectRetain();
    unint64_t v77 = sub_21F2F7E90((uint64_t)v170);
    char v79 = v78;
    swift_bridgeObjectRelease();
    unint64_t v59 = v175;
    if (v79)
    {
      char v80 = swift_isUniquelyReferenced_nonNull_native();
      char v183 = v76;
      uint64_t v58 = v173;
      uint64_t v81 = v168;
      if ((v80 & 1) == 0)
      {
        unint64_t v107 = v77;
        uint64_t v108 = v168;
        sub_21F2FEA60();
        uint64_t v81 = v108;
        unint64_t v77 = v107;
        uint64_t v76 = v183;
      }
      uint64_t v82 = v76[6];
      unint64_t v83 = v77 * v81;
      v59((char *)(v82 + v77 * v81), v5);
      int64_t v84 = v77;
      uint64_t v85 = (uint64_t)v183;
      unint64_t v86 = v183[7] + v83;
      uint64_t v87 = (uint64_t)v152;
      v159(v152, (char *)v86, v5);
      uint64_t v166 = v85;
      sub_21F2FDA24(v84, v85);
      swift_bridgeObjectRelease();
      uint64_t v88 = 0;
    }
    else
    {
      uint64_t v88 = 1;
      uint64_t v87 = (uint64_t)v152;
      uint64_t v58 = v173;
    }
    uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181;
    v181(v87, v88, 1, v5);
    v59(v170, v5);
    sub_21F29FA48(v87, &qword_26AD38738);
LABEL_34:
    uint64_t v57 = v165;
    id v56 = v172;
    v59(v160, v5);
    goto LABEL_10;
  }
  uint64_t v58 = v173;
  v62(v157, (char *)v74, v5);
  uint64_t v89 = (void *)v166;
  int v90 = swift_isUniquelyReferenced_nonNull_native();
  char v183 = v89;
  unint64_t v92 = sub_21F2F7E90((uint64_t)v170);
  uint64_t v93 = v89[2];
  BOOL v94 = (v91 & 1) == 0;
  uint64_t v95 = v93 + v94;
  if (!__OFADD__(v93, v94))
  {
    char v96 = v91;
    if (v89[3] >= v95)
    {
      uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181;
      uint64_t v99 = v168;
      unint64_t v59 = v175;
      if ((v90 & 1) == 0)
      {
        uint64_t v109 = v168;
        sub_21F2FEA60();
        uint64_t v99 = v109;
      }
    }
    else
    {
      sub_21F2FA004(v95, v90);
      unint64_t v97 = sub_21F2F7E90((uint64_t)v170);
      uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181;
      uint64_t v99 = v168;
      unint64_t v59 = v175;
      if ((v96 & 1) != (v98 & 1)) {
        goto LABEL_64;
      }
      unint64_t v92 = v97;
    }
    unint64_t v47 = (unint64_t)v169;
    char v100 = v183;
    if (v96)
    {
      (*v146)(v183[7] + v92 * v99, v157, v5);
      uint64_t v101 = (uint64_t)v170;
    }
    else
    {
      v183[(v92 >> 6) + 8] |= 1 << v92;
      unint64_t v102 = v92 * v99;
      uint64_t v103 = (uint64_t)v170;
      ((void (*)(unint64_t))v172)(v100[6] + v102);
      v159((char *)(v100[7] + v102), v157, v5);
      uint64_t v104 = v100[2];
      BOOL v105 = __OFADD__(v104, 1);
      uint64_t v106 = v104 + 1;
      if (v105) {
        goto LABEL_61;
      }
      v100[2] = v106;
      uint64_t v101 = v103;
      uint64_t v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181;
    }
    uint64_t v166 = (uint64_t)v183;
    swift_bridgeObjectRelease();
    v59((char *)v101, v5);
    goto LABEL_34;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  uint64_t result = sub_21F420E68();
  __break(1u);
  return result;
}

uint64_t sub_21F318E64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_21F420B98())
  {
    unint64_t v33 = v4 & 0xC000000000000001;
    unint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v7 = 4;
    uint64_t v32 = v4;
    while (1)
    {
      id v9 = v33 ? (id)MEMORY[0x223C4A6D0](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      uint64_t v10 = v9;
      uint64_t v4 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      uint64_t v37 = v9;
      sub_21F3146F8(&v37, a2, a3, &v36);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      uint64_t v11 = v36;
      uint64_t v12 = *(void *)(v36 + 16);
      int64_t v13 = *(void *)(v6 + 16);
      int64_t v14 = v13 + v12;
      if (__OFADD__(v13, v12)) {
        goto LABEL_32;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v14 <= *(void *)(v6 + 24) >> 1)
      {
        if (*(void *)(v11 + 16)) {
          goto LABEL_20;
        }
      }
      else
      {
        if (v13 <= v14) {
          int64_t v16 = v13 + v12;
        }
        else {
          int64_t v16 = v13;
        }
        unint64_t v6 = sub_21F2A877C(isUniquelyReferenced_nonNull_native, v16, 1, v6);
        if (*(void *)(v11 + 16))
        {
LABEL_20:
          uint64_t v17 = *(void *)(v6 + 16);
          uint64_t v18 = (*(void *)(v6 + 24) >> 1) - v17;
          uint64_t v19 = *(void *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) - 8);
          uint64_t v20 = *(void *)(v19 + 72);
          if (v18 < v12) {
            goto LABEL_34;
          }
          unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
          unint64_t v22 = v6 + v21 + v20 * v17;
          unint64_t v23 = v11 + v21;
          uint64_t v24 = v20 * v12;
          unint64_t v25 = v22 + v24;
          unint64_t v26 = v23 + v24;
          if (v23 < v25 && v22 < v26)
          {
            swift_bridgeObjectRelease();
            uint64_t result = sub_21F420BE8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v12)
          {
            uint64_t v28 = *(void *)(v6 + 16);
            BOOL v29 = __OFADD__(v28, v12);
            uint64_t v30 = v28 + v12;
            if (v29) {
              goto LABEL_35;
            }
            *(void *)(v6 + 16) = v30;
          }
          goto LABEL_5;
        }
      }
      if (v12) {
        goto LABEL_33;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      ++v7;
      BOOL v8 = v4 == v5;
      uint64_t v4 = v32;
      if (v8)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_21F319128(uint64_t a1)
{
  uint64_t v2 = sub_21F41F228();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v51 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v49 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v38 - v9;
  uint64_t v10 = (void *)MEMORY[0x263F8EE80];
  uint64_t v52 = (void *)MEMORY[0x263F8EE80];
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return (uint64_t)v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v8 + 72);
  uint64_t v47 = v13;
  unint64_t v48 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v43 = v15 + v13;
  uint64_t v41 = v3 + 32;
  uint64_t v42 = v12 | 7;
  uint64_t v40 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  long long v39 = xmmword_21F422460;
  uint64_t v44 = v5;
  uint64_t v45 = v3;
  uint64_t v46 = v2;
  while (1)
  {
    uint64_t v17 = v50;
    sub_21F31D258(v14, v50, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    uint64_t v18 = v17 + *(int *)(v5 + 20);
    uint64_t v19 = v51;
    (*v48)(v51, v18, v2);
    unint64_t v21 = sub_21F2F7E90(v19);
    uint64_t v22 = v10[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v10[3] < v24)
    {
      sub_21F2FB3D8(v24, 1);
      uint64_t v10 = v52;
      unint64_t v26 = sub_21F2F7E90(v51);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_19;
      }
      unint64_t v21 = v26;
    }
    if (v25)
    {
      (*v40)(v51, v2);
      uint64_t v10 = v52;
      uint64_t v28 = v52[7];
      sub_21F31D300(v50, v49, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      unint64_t v29 = *(void *)(v28 + 8 * v21);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v28 + 8 * v21) = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v29 = sub_21F2A877C(0, *(void *)(v29 + 16) + 1, 1, v29);
        *(void *)(v28 + 8 * v21) = v29;
      }
      unint64_t v32 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        unint64_t v29 = sub_21F2A877C(v31 > 1, v32 + 1, 1, v29);
        *(void *)(v28 + 8 * v21) = v29;
      }
      uint64_t v2 = v46;
      uint64_t v16 = v47;
      *(void *)(v29 + 16) = v32 + 1;
      sub_21F31D300(v49, v29 + v16 + v32 * v15, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      uint64_t v5 = v44;
      uint64_t v3 = v45;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7938);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      sub_21F31D300(v50, v33 + v47, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      v10[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10[6] + *(void *)(v3 + 72) * v21, v51, v2);
      *(void *)(v10[7] + 8 * v21) = v33;
      uint64_t v34 = v10[2];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_18;
      }
      _OWORD v10[2] = v36;
    }
    v14 += v15;
    if (!--v11) {
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_21F420E68();
  __break(1u);
  return result;
}

uint64_t sub_21F31954C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v50 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0) - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v49 = (uint64_t)&v38 - v11;
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  uint64_t v51 = (void *)MEMORY[0x263F8EE80];
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (uint64_t)v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v10 + 72);
  uint64_t v47 = v15;
  uint64_t v43 = v17 + v15;
  uint64_t v41 = v5 + 32;
  uint64_t v42 = v14 | 7;
  uint64_t v40 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  long long v39 = xmmword_21F422460;
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  uint64_t v46 = a2;
  while (1)
  {
    sub_21F31D258(v16, v49, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
    uint64_t v19 = v50;
    swift_getAtKeyPath();
    unint64_t v21 = sub_21F2F7E90(v19);
    uint64_t v22 = v12[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v12[3] < v24)
    {
      sub_21F2FB80C(v24, 1);
      uint64_t v12 = v51;
      unint64_t v26 = sub_21F2F7E90(v50);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_19;
      }
      unint64_t v21 = v26;
    }
    if (v25)
    {
      (*v40)(v50, v4);
      uint64_t v12 = v51;
      uint64_t v28 = v51[7];
      sub_21F31D300(v49, v48, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      unint64_t v29 = *(void *)(v28 + 8 * v21);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v28 + 8 * v21) = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v29 = sub_21F2A8748(0, *(void *)(v29 + 16) + 1, 1, v29);
        *(void *)(v28 + 8 * v21) = v29;
      }
      unint64_t v32 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        unint64_t v29 = sub_21F2A8748(v31 > 1, v32 + 1, 1, v29);
        *(void *)(v28 + 8 * v21) = v29;
      }
      uint64_t v18 = v47;
      *(void *)(v29 + 16) = v32 + 1;
      sub_21F31D300(v48, v29 + v18 + v32 * v17, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      uint64_t v5 = v44;
      uint64_t v4 = v45;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7940);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      sub_21F31D300(v49, v33 + v47, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      v12[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12[6] + *(void *)(v5 + 72) * v21, v50, v4);
      *(void *)(v12[7] + 8 * v21) = v33;
      uint64_t v34 = v12[2];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_18;
      }
      void v12[2] = v36;
    }
    v16 += v17;
    if (!--v13) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_release();
  uint64_t result = sub_21F420E68();
  __break(1u);
  return result;
}

void sub_21F31995C(uint64_t *a1, id *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_21F41F228();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v29 - v12;
  id v14 = *a2;
  id v15 = objc_msgSend(*a2, sel_suggestionId);
  if (v15)
  {
    uint64_t v16 = v15;
    sub_21F420648();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      unsigned __int16 v17 = (unsigned __int16)objc_msgSend(v14, sel_isSuggestionPresentInModelOutput);
      unsigned int v18 = objc_msgSend(v14, sel_isDuplicateSuggestion);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = *a1;
      *a1 = 0x8000000000000000;
      if (v18) {
        __int16 v20 = 256;
      }
      else {
        __int16 v20 = 0;
      }
      sub_21F328984(v20 | v17, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
      *a1 = v30;
      swift_bridgeObjectRelease();
      unint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v11, v7);
      v21(v13, v7);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_21F29FA48((uint64_t)v6, &qword_26AD38738);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_21F41FF28();
  __swift_project_value_buffer(v22, (uint64_t)qword_26AD3C910);
  BOOL v23 = sub_21F41FF08();
  os_log_type_t v24 = sub_21F420678();
  if (os_log_type_enabled(v23, v24))
  {
    char v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)char v25 = 136315138;
    if (qword_267EC7208 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_267EC88A8;
    unint64_t v28 = unk_267EC88B0;
    swift_bridgeObjectRetain();
    v29[1] = sub_21F2A02C4(v27, v28, &v30);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v23, v24, "%s Contact suggestion metadata not extracted - suggestionId was missing", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v26, -1, -1);
    MEMORY[0x223C4B440](v25, -1, -1);
  }
}

uint64_t sub_21F319D6C(unint64_t a1)
{
  uint64_t v10 = MEMORY[0x263F8EE80];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_21F420B98())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x223C4A6D0](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v5 = v4;
      uint64_t v6 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_contactSuggesterSuggestionMetadataReported);

      if (v7)
      {
        id v9 = v7;
        sub_21F31995C(&v10, &v9);
      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease_n();
        return v10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x263F8EE80];
}

uint64_t sub_21F319ED8(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v34 = sub_21F319D6C(a1);
  if (v1 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_21F420B98();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      unint64_t v4 = v1 & 0xC000000000000001;
      unint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t v6 = 4;
      unint64_t v33 = v1;
      while (1)
      {
        if (v4) {
          id v7 = (id)MEMORY[0x223C4A6D0](v6 - 4, v1);
        }
        else {
          id v7 = *(id *)(v1 + 8 * v6);
        }
        uint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        id v10 = objc_msgSend(v7, sel_contactSuggesterQueryContext);
        if (v10
          && (uint64_t v11 = v10, v12 = objc_msgSend(v10, sel_ended), v11, v12)
          && (unsigned __int8 v13 = objc_msgSend(v12, sel_hasMatchingResults), v12, (v13 & 1) != 0))
        {
          unint64_t v1 = v2;
          unint64_t v14 = v4;
          uint64_t v37 = v8;
          sub_21F313FF4(&v37, v34, &v36);

          uint64_t v15 = v36;
          uint64_t v16 = *(void *)(v36 + 16);
          int64_t v17 = *(void *)(v5 + 16);
          int64_t v18 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_31;
          }
          uint64_t v35 = v3;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v18 <= *(void *)(v5 + 24) >> 1)
          {
            uint64_t v20 = v5;
          }
          else
          {
            if (v17 <= v18) {
              int64_t v21 = v17 + v16;
            }
            else {
              int64_t v21 = v17;
            }
            uint64_t v20 = sub_21F2A8748(isUniquelyReferenced_nonNull_native, v21, 1, v5);
          }
          unint64_t v4 = v14;
          if (*(void *)(v15 + 16))
          {
            uint64_t v22 = *(void *)(v20 + 16);
            uint64_t v23 = (*(void *)(v20 + 24) >> 1) - v22;
            uint64_t v24 = *(void *)(type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0)
                            - 8);
            uint64_t v25 = *(void *)(v24 + 72);
            if (v23 < v16) {
              goto LABEL_33;
            }
            unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
            unint64_t v27 = v20 + v26 + v25 * v22;
            uint64_t v28 = v25 * v16;
            unint64_t v4 = v14;
            if (v15 + v26 < v27 + v28 && v27 < v15 + v26 + v28)
            {
              uint64_t result = sub_21F420BE8();
              __break(1u);
              return result;
            }
            swift_arrayInitWithCopy();
            uint64_t v2 = v1;
            unint64_t v1 = v33;
            unint64_t v5 = v20;
            uint64_t v3 = v35;
            if (v16)
            {
              uint64_t v29 = *(void *)(v5 + 16);
              BOOL v30 = __OFADD__(v29, v16);
              uint64_t v31 = v29 + v16;
              if (v30) {
                goto LABEL_34;
              }
              *(void *)(v5 + 16) = v31;
            }
          }
          else
          {
            uint64_t v2 = v1;
            unint64_t v1 = v33;
            unint64_t v5 = v20;
            uint64_t v3 = v35;
            if (v16) {
              goto LABEL_32;
            }
          }
          swift_bridgeObjectRelease();
        }
        else
        {
        }
        ++v6;
        if (v9 == v2) {
          goto LABEL_37;
        }
      }
    }
  }
  unint64_t v5 = MEMORY[0x263F8EE78];
LABEL_37:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21F31A208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 8))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_21F31A248()
{
  return 16;
}

__n128 sub_21F31A254(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3ACA0);
}

uint64_t sub_21F31A280()
{
  sub_21F420428();
  return swift_getWitnessTable();
}

uint64_t sub_21F31A2CC()
{
  return 16;
}

__n128 sub_21F31A2D8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for PlusRuntimeContactSuggestions(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3AC38);
}

uint64_t sub_21F31A304(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_21F31A34C(uint64_t a1, void **a2)
{
  uint64_t v67 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8930);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v66 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = sub_21F41F228();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v68 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int64_t v18 = (char *)&v61 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v61 - v19;
  int64_t v21 = *a2;
  id v22 = objc_msgSend(v21, sel_suggestionLinkId);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    uint64_t v9 = v11;
    goto LABEL_14;
  }
  uint64_t v23 = v22;
  uint64_t v65 = v18;
  uint64_t v69 = v2;
  sub_21F420648();

  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v24(v11, 1, v12) == 1)
  {
    uint64_t v9 = v11;
LABEL_14:
    sub_21F29FA48((uint64_t)v9, &qword_26AD38738);
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_21F41FF28();
    __swift_project_value_buffer(v42, (uint64_t)qword_26AD3C910);
    uint64_t v43 = sub_21F41FF08();
    os_log_type_t v44 = sub_21F420678();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v71 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      if (qword_267EC7208 != -1) {
        swift_once();
      }
      uint64_t v47 = qword_267EC88A8;
      unint64_t v48 = unk_267EC88B0;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_21F2A02C4(v47, v48, &v71);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v43, v44, "%s Generic suggestion metadata not extracted - suggestionId/requestId was missing", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v46, -1, -1);
      MEMORY[0x223C4B440](v45, -1, -1);
    }

    return;
  }
  uint64_t v25 = *(void (**)(void))(v13 + 32);
  uint64_t v64 = v20;
  unint64_t v26 = v25;
  v25();
  id v27 = objc_msgSend(v21, sel_originalRequestId);
  uint64_t v63 = v13;
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
    goto LABEL_13;
  }
  uint64_t v28 = v27;
  sub_21F420648();

  if (v24(v9, 1, v12) == 1)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v12);
    goto LABEL_14;
  }
  uint64_t v29 = v12;
  ((void (*)(char *, char *, uint64_t))v26)(v65, v9, v12);
  unsigned int v30 = objc_msgSend(v21, sel_suggestionNoveltyState);
  if (v30 <= 3
    && (char v31 = v30, v32 = objc_msgSend(v21, sel_suggestionSurfaced), v32 <= 3)
    && (char v33 = v32, (v34 = objc_msgSend(v21, sel_suggestionDomainMetadata)) != 0)
    && (uint64_t v35 = v34, v36 = objc_msgSend(v34, sel_suggestionGenerationDomain), v35, v36 <= 3))
  {
    uint64_t v37 = v63;
    uint64_t v62 = *(void (**)(uint64_t, char *, uint64_t))(v63 + 16);
    uint64_t v38 = v29;
    v62(v68, v64, v29);
    long long v39 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
    uint64_t v40 = v66;
    v62((uint64_t)&v66[v39[5]], v65, v38);
    unsigned char *v40 = v36;
    v40[v39[6]] = v33;
    v40[v39[7]] = v31;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(*((void *)v39 - 1) + 56))(v40, 0, 1, v39);
    sub_21F3CA968((uint64_t)v40, v68);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v65, v38);
    v41(v64, v38);
  }
  else
  {
    uint64_t v49 = v63;
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_21F41FF28();
    __swift_project_value_buffer(v50, (uint64_t)qword_26AD3C910);
    uint64_t v51 = sub_21F41FF08();
    os_log_type_t v52 = sub_21F420678();
    uint64_t v53 = v29;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v71 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      id v56 = v65;
      if (qword_267EC7208 != -1) {
        swift_once();
      }
      uint64_t v57 = qword_267EC88A8;
      unint64_t v58 = unk_267EC88B0;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_21F2A02C4(v57, v58, &v71);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v51, v52, "%s Generic suggestion metadata not extracted - unexpected enum values", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v55, -1, -1);
      MEMORY[0x223C4B440](v54, -1, -1);

      unint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
      v59(v56, v53);
      v59(v64, v53);
    }
    else
    {

      unint64_t v60 = *(void (**)(char *, uint64_t))(v49 + 8);
      v60(v65, v29);
      v60(v64, v29);
    }
  }
}

uint64_t sub_21F31AB34(unint64_t a1)
{
  unint64_t v16 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_21F420B98();
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    swift_bridgeObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x223C4A6D0](i, a1);
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_plusSuggesterSuggestionMetadataReported);

    if (v7)
    {
      MEMORY[0x223C4A030]();
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_21F420398();
      }
      sub_21F4203E8();
      sub_21F420368();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v16;
LABEL_16:
  unint64_t v16 = MEMORY[0x263F8EE80];
  if (v8 >> 62) {
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = sub_21F420B98())
  {
    for (uint64_t j = 4; ; ++j)
    {
      id v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x223C4A6D0](j - 4, v8) : *(id *)(v8 + 8 * j);
      uint64_t v12 = v11;
      uint64_t v13 = j - 3;
      if (__OFADD__(j - 4, 1)) {
        break;
      }
      uint64_t v15 = v11;
      sub_21F31A34C((uint64_t)&v16, &v15);

      if (v13 == v9)
      {
        swift_bridgeObjectRelease_n();
        return v16;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x263F8EE80];
}

uint64_t type metadata accessor for PlusRuntimeGenericSuggestions(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC88F8);
}

uint64_t type metadata accessor for PlusForcePrompted(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8908);
}

uint64_t type metadata accessor for PlusClientEventIdFeature(uint64_t a1)
{
  return sub_21F2D6830(a1, qword_26AD3AAA0);
}

uint64_t type metadata accessor for PlusContactSuggestionRuntimeSummary(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3ADC8);
}

uint64_t type metadata accessor for PlusGenericSuggestionRuntimeSummary(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_26AD3ADD8);
}

uint64_t sub_21F31AE28(uint64_t a1, uint64_t a2)
{
  return sub_21F31A304(&qword_26AD3ACB8, a2, (void (*)(uint64_t))type metadata accessor for PlusClientEventFeatureExtractor);
}

unint64_t sub_21F31AE74()
{
  unint64_t result = qword_267EC88E0;
  if (!qword_267EC88E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC88E0);
  }
  return result;
}

unint64_t sub_21F31AECC()
{
  unint64_t result = qword_267EC88E8;
  if (!qword_267EC88E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC88E8);
  }
  return result;
}

unint64_t sub_21F31AF24()
{
  unint64_t result = qword_267EC88F0;
  if (!qword_267EC88F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC88F0);
  }
  return result;
}

uint64_t method lookup function for PlusClientEventFeatureExtractor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PlusClientEventFeatureExtractor);
}

uint64_t dispatch thunk of PlusClientEventFeatureExtractor.__allocating_init(picsIds:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PlusClientEventFeatureExtractor.extract(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

char *initializeBufferWithCopyOfBuffer for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    id v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v15] = a2[v15];
  }
  return a1;
}

uint64_t destroy for PlusContactSuggestionRuntimeSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  return a1;
}

char *assignWithCopy for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v18 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v17 = a2;
  id v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(v18 + 24)] = v17[*(int *)(v18 + 24)];
  a1[*(int *)(v18 + 28)] = v17[*(int *)(v18 + 28)];
  return a1;
}

char *initializeWithTake for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  return a1;
}

char *assignWithTake for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v19 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v18 = a2;
  id v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  uint64_t v16 = *(int *)(v19 + 28);
  a1[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
  a1[v16] = v18[v16];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusContactSuggestionRuntimeSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F31B91C);
}

uint64_t sub_21F31B91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlusContactSuggestionRuntimeSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F31BA58);
}

uint64_t sub_21F31BA58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_21F41F228();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21F31BB6C()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2B30B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *initializeBufferWithCopyOfBuffer for PlusGenericSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_21F41F228();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    uint64_t v13 = a3[6];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    v12(&v4[a3[7]], &a2[a3[7]], v10);
    uint64_t v18 = a3[9];
    v4[a3[8]] = a2[a3[8]];
    v4[v18] = a2[v18];
  }
  return v4;
}

uint64_t destroy for PlusGenericSuggestionRuntimeSummary(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_21F41F228();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v4, v5);
  uint64_t v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    v10(v7, v5);
  }
  uint64_t v8 = a1 + a2[7];
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v5);
}

unsigned char *initializeWithCopy for PlusGenericSuggestionRuntimeSummary(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  return a1;
}

unsigned char *assignWithCopy for PlusGenericSuggestionRuntimeSummary(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  id v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24);
  v22(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a2[v11];
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v20 = &a1[v11];
  int v14 = v13();
  __src = v12;
  int v15 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v13)(v12, 1, v9);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v20, v12, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_8;
    }
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738) - 8) + 64);
    uint64_t v17 = v20;
  }
  else
  {
    if (!v15)
    {
      uint64_t v18 = v22;
      v22(v20, __src, v9);
      goto LABEL_9;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v20, v9);
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738) - 8) + 64);
    uint64_t v17 = v20;
  }
  memcpy(v17, v12, v16);
LABEL_8:
  uint64_t v18 = v22;
LABEL_9:
  v18(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

unsigned char *initializeWithTake for PlusGenericSuggestionRuntimeSummary(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  int v14 = &a2[v12];
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  return a1;
}

unsigned char *assignWithTake for PlusGenericSuggestionRuntimeSummary(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v23 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40);
  v23(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a2[v11];
  uint64_t v13 = *(uint64_t (**)(void))(v10 + 48);
  int64_t v21 = &a1[v11];
  int v14 = v13();
  __src = v12;
  int v15 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v13)(v12, 1, v9);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v21, v12, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
      goto LABEL_8;
    }
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738) - 8) + 64);
    uint64_t v17 = v21;
  }
  else
  {
    if (!v15)
    {
      uint64_t v18 = v23;
      v23(v21, __src, v9);
      goto LABEL_9;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v21, v9);
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738) - 8) + 64);
    uint64_t v17 = v21;
  }
  memcpy(v17, v12, v16);
LABEL_8:
  uint64_t v18 = v23;
LABEL_9:
  v18(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusGenericSuggestionRuntimeSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F31C680);
}

uint64_t sub_21F31C680(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    unsigned int v4 = *a1;
    if (v4 >= 4) {
      return v4 - 3;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &a1[*(int *)(a3 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      int v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      size_t v16 = &a1[*(int *)(a3 + 24)];
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PlusGenericSuggestionRuntimeSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F31C7BC);
}

unsigned char *sub_21F31C7BC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 252)
  {
    *uint64_t result = a2 + 3;
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = &v5[*(int *)(a4 + 20)];
      uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (unsigned char *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
      int v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      size_t v16 = &v5[*(int *)(a4 + 24)];
      return (unsigned char *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_21F31C8E8()
{
  sub_21F41F228();
  if (v0 <= 0x3F)
  {
    sub_21F2B30B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for SuggestionSurfacedState()
{
  return &type metadata for SuggestionSurfacedState;
}

ValueMetadata *type metadata accessor for SuggestionNoveltyState()
{
  return &type metadata for SuggestionNoveltyState;
}

unsigned char *_s28SiriPrivateLearningInference16SuggestionDomainOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F31CABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionDomain()
{
  return &type metadata for SuggestionDomain;
}

uint64_t sub_21F31CAF4()
{
  return sub_21F30FB98();
}

uint64_t sub_21F31CB00()
{
  return type metadata accessor for PlusRuntimeContactSuggestions(0);
}

uint64_t sub_21F31CB08()
{
  return sub_21F30FB98();
}

uint64_t sub_21F31CB14()
{
  return type metadata accessor for PlusRuntimeGenericSuggestions(0);
}

uint64_t sub_21F31CB1C()
{
  return sub_21F30FB98();
}

uint64_t sub_21F31CB28()
{
  return type metadata accessor for PlusForcePrompted(0);
}

uint64_t sub_21F31CB30()
{
  return sub_21F30FB98();
}

uint64_t sub_21F31CB3C()
{
  return type metadata accessor for PlusClientEventIdFeature(0);
}

uint64_t sub_21F31CB44()
{
  return sub_21F30FB98();
}

uint64_t sub_21F31CB50()
{
  return type metadata accessor for PlusContactSuggesterEnabled(0);
}

void *sub_21F31CB58(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_21F31CC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_21F41F228();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_21F31CCF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_21F31CDA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_21F31CE50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_21F31CEFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_21F31CFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F31CFBC);
}

uint64_t sub_21F31CFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_21F41F228();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_21F31D08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F31D0A0);
}

uint64_t sub_21F31D0A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_21F41F228();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_21F31D15C()
{
  uint64_t result = sub_21F41F228();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21F31D1F8()
{
  unint64_t result = qword_267EC8918;
  if (!qword_267EC8918)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_267EC8920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8918);
  }
  return result;
}

uint64_t sub_21F31D258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F31D2C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_21F314C90(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(uint64_t a1)
{
  return sub_21F2D6830(a1, (uint64_t *)&unk_267EC8940);
}

uint64_t sub_21F31D300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F31D368(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21F31D3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F314594(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_21F31D3E4(uint64_t a1)
{
  return a1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlusClientEventFeatureExtractor.SuggestionMetadata(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlusClientEventFeatureExtractor.SuggestionMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x21F31D60CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlusClientEventFeatureExtractor.SuggestionMetadata()
{
  return &type metadata for PlusClientEventFeatureExtractor.SuggestionMetadata;
}

void *sub_21F31D644(unsigned char *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    int v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_21F41F228();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_21F31D734(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_21F41F228();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *sub_21F31D79C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

unsigned char *sub_21F31D83C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_21F31D8E0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

unsigned char *sub_21F31D980(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_21F41F228();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

uint64_t sub_21F31DA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_21F31DA34);
}

uint64_t sub_21F31DA34(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    unsigned int v4 = *a1;
    if (v4 >= 4) {
      return v4 - 3;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_21F41F228();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_21F31DADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_21F31DAF0);
}

unsigned char *sub_21F31DAF0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 252)
  {
    *unint64_t result = a2 + 3;
  }
  else
  {
    uint64_t v7 = sub_21F41F228();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_21F31DB94()
{
  uint64_t result = sub_21F41F228();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PICSStoreApi.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PICSStoreApi.init(store:)(a1);
  return v2;
}

uint64_t PICSStoreApi.init(store:)(uint64_t a1)
{
  sub_21F2C2300(a1, (uint64_t)&v8, &qword_267EC8950);
  if (v9)
  {
    sub_21F2A09A8(&v8, (uint64_t)v10);
    sub_21F29F920((uint64_t)v10, (uint64_t)&v8);
    sub_21F41FC08();
    type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
    uint64_t v3 = (void *)swift_allocObject();
    v3[8] = 0xD000000000000030;
    v3[9] = 0x800000021F434660;
    sub_21F2A09A8(&v8, (uint64_t)(v3 + 2));
    type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
    uint64_t v4 = swift_allocObject();
    type metadata accessor for SELFEventLogEmitters();
    uint64_t v5 = swift_allocObject();
    sub_21F2A09A8(&v7, v5 + 16);
    *(void *)(v4 + 16) = v5;
    v3[7] = v4;
    sub_21F29FA48(a1, &qword_267EC8950);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    sub_21F29FA48(a1, &qword_267EC8950);
    sub_21F29FA48((uint64_t)&v8, &qword_267EC8950);
    uint64_t v3 = 0;
  }
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_21F31DDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38738);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_21F41F228();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_21F41FF28();
  __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
  uint64_t v15 = sub_21F41FF08();
  os_log_type_t v16 = sub_21F420678();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = v9;
    uint64_t v18 = a3;
    uint64_t v19 = a2;
    uint64_t v20 = v17;
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl(&dword_21F29A000, v15, v16, "PICSStoreApi is deprecated and usage should be migrated to PlusContactSuggestionStoreRuntimeQueryWrapper.", v17, 2u);
    int64_t v21 = v20;
    a2 = v19;
    a3 = v18;
    uint64_t v4 = v3;
    uint64_t v9 = v29;
    MEMORY[0x223C4B440](v21, -1, -1);
  }

  if (*(void *)(v4 + 16))
  {
    swift_retain();
    uint64_t v22 = sub_21F31E19C((uint64_t)&unk_26D0CC340);
    sub_21F2C2300(a3, (uint64_t)v9, &qword_26AD38738);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_21F41F218();
      sub_21F29FA48((uint64_t)v9, &qword_26AD38738);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    }
    uint64_t v26 = sub_21F3A5964(a2, v22, (uint64_t)v13);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v23 = sub_21F41FF08();
    os_log_type_t v24 = sub_21F420678();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_21F29A000, v23, v24, "PICSStoreApi for SiriInference: queryWrapper is nil", v25, 2u);
      MEMORY[0x223C4B440](v25, -1, -1);
    }

    return MEMORY[0x263F8EE78];
  }
  return v26;
}

uint64_t PICSStoreApi.deinit()
{
  swift_release();
  return v0;
}

uint64_t PICSStoreApi.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F31E19C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE88];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8078);
  uint64_t v3 = sub_21F420938();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v22 = v1;
  uint64_t v23 = a1 + 32;
  do
  {
    int v6 = *(unsigned __int8 *)(v23 + v4++);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_21F420F48();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xEE00736567617373;
        uint64_t v14 = 0x654D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            uint64_t v14 = 0x68506E69616D6F64;
            unint64_t v13 = 0xEF6C6C6143656E6FLL;
            break;
          case 2:
            uint64_t v14 = 0x656D7269666E6F63;
            goto LABEL_10;
          case 3:
            uint64_t v14 = 0x6574616E696D6F6ELL;
LABEL_10:
            unint64_t v13 = 0xE900000000000064;
            break;
          case 4:
            uint64_t v14 = 0x6974636572726F63;
            unint64_t v13 = 0xEA00000000006E6FLL;
            break;
          default:
            break;
        }
        uint64_t v15 = 0x654D6E69616D6F64;
        unint64_t v16 = 0xEE00736567617373;
        switch(v6)
        {
          case 1:
            unint64_t v16 = 0xEF6C6C6143656E6FLL;
            if (v14 == 0x68506E69616D6F64) {
              goto LABEL_19;
            }
            goto LABEL_20;
          case 2:
            unint64_t v16 = 0xE900000000000064;
            if (v14 != 0x656D7269666E6F63) {
              goto LABEL_20;
            }
            goto LABEL_19;
          case 3:
            uint64_t v15 = 0x6574616E696D6F6ELL;
            unint64_t v16 = 0xE900000000000064;
            goto LABEL_18;
          case 4:
            unint64_t v16 = 0xEA00000000006E6FLL;
            if (v14 != 0x6974636572726F63) {
              goto LABEL_20;
            }
            goto LABEL_19;
          default:
LABEL_18:
            if (v14 != v15) {
              goto LABEL_20;
            }
LABEL_19:
            if (v13 == v16)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_20:
            char v17 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_25;
            }
            break;
        }
      }
    }
LABEL_25:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v18 = *(void *)(v3 + 16);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      JUMPOUT(0x21F31E554);
    }
    *(void *)(v3 + 16) = v20;
LABEL_4:
    ;
  }
  while (v4 != v22);
  return v3;
}

uint64_t type metadata accessor for PICSStoreApi()
{
  return self;
}

uint64_t method lookup function for PICSStoreApi(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PICSStoreApi);
}

uint64_t dispatch thunk of PICSStoreApi.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PICSStoreApi.query(queryId:query:plusId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_21F31E604(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE88];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8070);
  uint64_t v3 = sub_21F420938();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v27 = a1 + 32;
  uint64_t v26 = v1;
  do
  {
    int v6 = *(unsigned __int8 *)(v27 + v4++);
    sub_21F420EF8();
    sub_21F420148();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_21F420F48();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xEB00000000636973;
        unint64_t v14 = 0x754D6E69616D6F64;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v14 = 0x656D7269666E6F63;
            goto LABEL_9;
          case 2:
            unint64_t v14 = 0x6574616E696D6F6ELL;
LABEL_9:
            unint64_t v13 = 0xE900000000000064;
            break;
          case 3:
            unint64_t v14 = 0x6974636572726F63;
            unint64_t v13 = 0xEA00000000006E6FLL;
            break;
          case 4:
            unint64_t v13 = 0xE700000000000000;
            unint64_t v14 = 0x7972617262696CLL;
            break;
          case 5:
            unint64_t v13 = 0x800000021F432B90;
            unint64_t v14 = 0xD000000000000011;
            break;
          case 6:
            unint64_t v14 = 0xD000000000000013;
            uint64_t v15 = "nominationBlocked";
            goto LABEL_15;
          case 7:
            unint64_t v14 = 0xD000000000000012;
            uint64_t v15 = "previouslyNominated";
LABEL_15:
            unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0x754D6E69616D6F64;
        unint64_t v17 = 0xEB00000000636973;
        switch(v6)
        {
          case 1:
            uint64_t v18 = 0x656D7269666E6F63;
            goto LABEL_19;
          case 2:
            uint64_t v18 = 0x6574616E696D6F6ELL;
LABEL_19:
            unint64_t v17 = 0xE900000000000064;
            if (v14 != v18) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 3:
            unint64_t v17 = 0xEA00000000006E6FLL;
            if (v14 != 0x6974636572726F63) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 4:
            unint64_t v17 = 0xE700000000000000;
            if (v14 != 0x7972617262696CLL) {
              goto LABEL_28;
            }
            goto LABEL_27;
          case 5:
            unint64_t v17 = 0x800000021F432B90;
            unint64_t v16 = 0xD000000000000011;
            goto LABEL_26;
          case 6:
            unint64_t v20 = 0xD000000000000013;
            int64_t v21 = "nominationBlocked";
            goto LABEL_33;
          case 7:
            unint64_t v20 = 0xD000000000000012;
            int64_t v21 = "previouslyNominated";
LABEL_33:
            unint64_t v17 = (unint64_t)v21 | 0x8000000000000000;
            if (v14 != v20) {
              goto LABEL_28;
            }
            goto LABEL_27;
          default:
LABEL_26:
            if (v14 != v16) {
              goto LABEL_28;
            }
LABEL_27:
            if (v13 == v17)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_28:
            char v19 = sub_21F420DF8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v19) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_35;
            }
            break;
        }
      }
    }
LABEL_35:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v22 = *(void *)(v3 + 16);
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
      JUMPOUT(0x21F31EA78);
    }
    *(void *)(v3 + 16) = v24;
LABEL_4:
    ;
  }
  while (v4 != v26);
  return v3;
}

uint64_t sub_21F31EAD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8958);
    uint64_t v3 = sub_21F420938();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_21F420EF8();
      sub_21F420F08();
      uint64_t result = sub_21F420F48();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_21F31EC1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DB0);
    uint64_t v3 = sub_21F420938();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_21F420EF8();
      swift_bridgeObjectRetain();
      sub_21F420148();
      uint64_t result = sub_21F420F48();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_21F420DF8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_21F420DF8();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      int64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *int64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

id PlusMediaSuggestion.toKVItem()()
{
  v51[2] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F510C0]), sel_init);
  sub_21F41F1B8();
  uint64_t v2 = (void *)sub_21F4200A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v45 = 0;
  id v3 = objc_msgSend(v1, sel_setItemType_itemId_error_, 23, v2, &v45);

  uint64_t v4 = (void *)v45;
  if (!v3)
  {
    id v7 = (id)v45;
    uint64_t v8 = (void *)sub_21F41EFD8();

    swift_willThrow();
LABEL_23:
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_21F41FF28();
    __swift_project_value_buffer(v26, (uint64_t)qword_26AD3C910);
    id v27 = v8;
    id v28 = v8;
    uint64_t v29 = sub_21F41FF08();
    os_log_type_t v30 = sub_21F420678();
    if (os_log_type_enabled(v29, v30))
    {
      char v31 = (uint8_t *)swift_slowAlloc();
      unsigned int v32 = (void *)swift_slowAlloc();
      *(_DWORD *)char v31 = 138412290;
      id v33 = v8;
      id v34 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v42[0] = v34;
      sub_21F4207D8();
      *unsigned int v32 = v34;

      _os_log_impl(&dword_21F29A000, v29, v30, "Error occured during mapping PIMS to learnedMediaEntity %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DA0);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v32, -1, -1);
      MEMORY[0x223C4B440](v31, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 20));
  id v6 = v4;
  sub_21F382B74(v5, v43);
  sub_21F2B458C((uint64_t)v43, (uint64_t)v44, &qword_267EC7C20);
  if (*((void *)&v44[0] + 1) != 1)
  {
    long long v45 = v44[0];
    long long v46 = v44[1];
    long long v47 = v44[2];
    long long v48 = v44[3];
    long long v49 = v44[4];
    if (*((void *)&v44[0] + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_21F4200A8();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      id v10 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1054, v9, v51);

      id v11 = v51[0];
      if (!v10) {
        goto LABEL_20;
      }
      id v12 = v51[0];
    }
    if (*((void *)&v46 + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_21F4200A8();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      id v14 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1050, v13, v51);

      id v11 = v51[0];
      if (!v14) {
        goto LABEL_20;
      }
      id v15 = v51[0];
    }
    if (*((void *)&v47 + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = (void *)sub_21F4200A8();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      id v17 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1051, v16, v51);

      id v11 = v51[0];
      if (!v17) {
        goto LABEL_20;
      }
      id v18 = v51[0];
    }
    if (!*((void *)&v48 + 1)) {
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    char v19 = (void *)sub_21F4200A8();
    swift_bridgeObjectRelease();
    v51[0] = 0;
    id v20 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1052, v19, v51);

    id v11 = v51[0];
    if (v20)
    {
      id v21 = v51[0];

LABEL_17:
      sub_21F2B458C((uint64_t)&v49, (uint64_t)v50, &qword_267EC7EA0);
      sub_21F2B458C((uint64_t)v50, (uint64_t)v51, &qword_267EC7EA0);
      if (v51[1])
      {
        sub_21F31F8FC((uint64_t)v50);
        sub_21F2B4758(v43);
        uint64_t v22 = (void *)sub_21F4200A8();
        sub_21F31F928((uint64_t)v50);
        v42[0] = 0;
        id v23 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1053, v22, v42);

        if (!v23)
        {
LABEL_34:
          id v25 = v42[0];
          goto LABEL_21;
        }
        id v24 = v42[0];
      }
      else
      {
        sub_21F2B4758(v43);
      }
      uint64_t v37 = (void *)sub_21F4200A8();
      v42[0] = 0;
      id v38 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1055, v37, v42);

      if (v38)
      {
        id v39 = v42[0];

        v42[0] = 0;
        id v35 = objc_msgSend(v3, sel_buildItemWithError_, v42);
        id v40 = v42[0];
        if (v35)
        {

          return v35;
        }
        uint64_t v41 = v40;
        uint64_t v8 = (void *)sub_21F41EFD8();

        goto LABEL_22;
      }
      goto LABEL_34;
    }
LABEL_20:
    id v25 = v11;
    sub_21F2B4758(v43);
LABEL_21:
    uint64_t v8 = (void *)sub_21F41EFD8();

LABEL_22:
    swift_willThrow();

    goto LABEL_23;
  }

  return 0;
}

id PlusContactSuggestion.toKVItem()()
{
  v28[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F510C0]), sel_init);
  sub_21F41F1B8();
  id v1 = (void *)sub_21F4200A8();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v2 = objc_msgSend(v0, sel_setItemType_itemId_error_, 22, v1, v28);

  id v3 = v28[0];
  if (!v2)
  {
    id v14 = v28[0];
    id v15 = (void *)sub_21F41EFD8();

    swift_willThrow();
LABEL_11:

    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_21F41FF28();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AD3C910);
    id v18 = v15;
    id v19 = v15;
    id v20 = sub_21F41FF08();
    os_log_type_t v21 = sub_21F420678();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 138412290;
      id v24 = v15;
      id v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v25;
      sub_21F4207D8();
      *id v23 = v25;

      _os_log_impl(&dword_21F29A000, v20, v21, "Error occured during building learnedContact %@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26AD38DA0);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v23, -1, -1);
      MEMORY[0x223C4B440](v22, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  type metadata accessor for PlusContactSuggestion();
  id v4 = v3;
  sub_21F383918();
  if (!v5)
  {

    return 0;
  }
  id v6 = (void *)sub_21F4200A8();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v7 = objc_msgSend(v2, sel_addFieldWithType_value_error_, 1001, v6, v28);

  if (!v7
    || (id v8 = v28[0],
        v7,
        uint64_t v9 = (void *)sub_21F4200A8(),
        v28[0] = 0,
        id v10 = objc_msgSend(v2, sel_addFieldWithType_value_error_, 1000, v9, v28),
        v9,
        !v10))
  {
    id v16 = v28[0];
    id v15 = (void *)sub_21F41EFD8();

LABEL_10:
    swift_willThrow();

    id v0 = v2;
    goto LABEL_11;
  }
  id v11 = v28[0];

  v28[0] = 0;
  id v12 = objc_msgSend(v2, sel_buildItemWithError_, v28);
  id v13 = v28[0];
  if (!v12)
  {
    id v27 = v13;
    id v15 = (void *)sub_21F41EFD8();

    goto LABEL_10;
  }

  return v12;
}

uint64_t sub_21F31F7E4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_21F31F81C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_21F31F844(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_21F4207D8();
  *a1 = v7;
  id v8 = *a2;
  if (*a2)
  {
    *id v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_21F31F8FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F31F928(uint64_t a1)
{
  return a1;
}

uint64_t dispatch thunk of KVItemConvertable.toKVItem()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for SuggestionDonationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x21F31FA04);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionDonationError()
{
  return &type metadata for SuggestionDonationError;
}

unint64_t sub_21F31FA40()
{
  unint64_t result = qword_267EC8960;
  if (!qword_267EC8960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8960);
  }
  return result;
}

uint64_t sub_21F31FA94(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_21F2C3220(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_21F2C3220(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t ContactEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 32) = a1;
  *(double *)(result + 16) = a3;
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t ContactEntityUtteranceComparator.init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  *(void *)(v3 + 32) = a1;
  *(double *)(v3 + 16) = a3;
  *(unsigned char *)(v3 + 24) = a2;
  return v3;
}

BOOL sub_21F31FBD4()
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_21F29E180(v0);
  swift_bridgeObjectRelease();
  if (v1) {
    swift_bridgeObjectRelease();
  }
  return v1 != 0;
}

uint64_t sub_21F31FC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21F31FC84(a1, a2, *(void *)(v3 + 32), *(unsigned char *)(v3 + 24), 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F3210D4, a3, *(double *)(v3 + 16));
}

uint64_t sub_21F31FC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  return sub_21F31FC84(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F38F9F4, a6, a7);
}

uint64_t sub_21F31FC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t (*a6)(uint64_t, uint64_t, void)@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_21F29DFC8(v16);
  *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
  if (!v17) {
    goto LABEL_10;
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_21F29DFC8(v19);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRelease());
LABEL_10:
    *(void *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_21F2D645C(v17);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_21F2EFF64(v21, a3);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_21F2D645C(v20);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_21F2EFF64(v23, v22);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v24 + 16);
  *(double *)&uint64_t result = COERCE_DOUBLE(swift_release());
  if (v25 != 1) {
    goto LABEL_10;
  }
  *(double *)&uint64_t result = COERCE_DOUBLE(a6(a1, a2, a5 & 1));
  if (v26) {
    goto LABEL_10;
  }
  uint64_t v27 = result;
  if (*(double *)&result >= 0.3)
  {
    if (*(double *)&result >= 0.5)
    {
      if (*(double *)&result >= 0.7)
      {
        if (*(double *)&result >= 0.85)
        {
          if (*(double *)&result >= 1.0)
          {
            if (*(double *)&result == 1.0)
            {
              if (qword_26AD38AC0 != -1) {
                swift_once();
              }
              id v34 = &type metadata for PIMSConstraintMismatch;
              unint64_t v35 = sub_21F2DE8C0();
              unint64_t v31 = 0xD000000000000016;
              unint64_t v32 = 0x800000021F433740;
              char v28 = 9;
            }
            else
            {
              if (qword_26AD38AC0 != -1) {
                swift_once();
              }
              id v34 = &type metadata for PIMSConstraintMismatch;
              unint64_t v35 = sub_21F2DE8C0();
              unint64_t v31 = 0xD000000000000016;
              unint64_t v32 = 0x800000021F433740;
              char v28 = 10;
            }
          }
          else
          {
            if (qword_26AD38AC0 != -1) {
              swift_once();
            }
            id v34 = &type metadata for PIMSConstraintMismatch;
            unint64_t v35 = sub_21F2DE8C0();
            unint64_t v31 = 0xD000000000000016;
            unint64_t v32 = 0x800000021F433740;
            char v28 = 8;
          }
        }
        else
        {
          if (qword_26AD38AC0 != -1) {
            swift_once();
          }
          id v34 = &type metadata for PIMSConstraintMismatch;
          unint64_t v35 = sub_21F2DE8C0();
          unint64_t v31 = 0xD000000000000016;
          unint64_t v32 = 0x800000021F433740;
          char v28 = 7;
        }
      }
      else
      {
        if (qword_26AD38AC0 != -1) {
          swift_once();
        }
        id v34 = &type metadata for PIMSConstraintMismatch;
        unint64_t v35 = sub_21F2DE8C0();
        unint64_t v31 = 0xD000000000000016;
        unint64_t v32 = 0x800000021F433740;
        char v28 = 6;
      }
    }
    else
    {
      if (qword_26AD38AC0 != -1) {
        swift_once();
      }
      id v34 = &type metadata for PIMSConstraintMismatch;
      unint64_t v35 = sub_21F2DE8C0();
      unint64_t v31 = 0xD000000000000016;
      unint64_t v32 = 0x800000021F433740;
      char v28 = 5;
    }
  }
  else
  {
    if (qword_26AD38AC0 != -1) {
      swift_once();
    }
    id v34 = &type metadata for PIMSConstraintMismatch;
    unint64_t v35 = sub_21F2DE8C0();
    unint64_t v31 = 0xD000000000000016;
    unint64_t v32 = 0x800000021F433740;
    char v28 = 4;
  }
  char v33 = v28;
  sub_21F41F708();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
  uint64_t v29 = type metadata accessor for EntityUtteranceComparison();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v27;
  *(double *)(v30 + 24) = a8;
  *(unsigned char *)(v30 + 32) = a4 & 1;
  *(void *)(a7 + 24) = v29;
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_21F32148C());
  *(double *)(a7 + 32) = *(double *)&result;
  *(void *)a7 = v30;
  return result;
}

uint64_t sub_21F32016C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8978);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)(a5 + 16) <= a1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a5 + 8 * a1 + 32);
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = *(void *)(a4 + 32);
  if (v15 >= *(void *)(v16 + 16))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v17 = *(void *)(v16 + 8 * v15 + 32);
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18) {
    return 0;
  }
  uint64_t v19 = sub_21F41F248();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  swift_bridgeObjectRetain();
  uint64_t v21 = v18 - 1;
  uint64_t v29 = v17;
  uint64_t v22 = (uint64_t *)(v17 + 56);
  do
  {
    uint64_t v23 = v21;
    uint64_t v24 = *(v22 - 1);
    uint64_t v25 = *v22;
    long long v33 = *(_OWORD *)(v22 - 3);
    uint64_t v34 = v24;
    uint64_t v35 = v25;
    uint64_t v31 = a6;
    uint64_t v32 = v30;
    v20(v14, 1, 1, v19);
    sub_21F321584();
    sub_21F2DF41C();
    swift_bridgeObjectRetain();
    sub_21F420828();
    char v27 = v26;
    BOOL v28 = (v26 & 1) == 0;
    sub_21F3215D8((uint64_t)v14);
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      break;
    }
    uint64_t v21 = v23 - 1;
    v22 += 4;
  }
  while (v23);
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_21F32035C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_21F420228() != a1 || v9 != a2)
  {
    char v10 = sub_21F420DF8();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_21F420168();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_21F32044C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_21F420258();
  }
  __break(1u);
  return result;
}

uint64_t ContactEntityUtteranceComparator.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContactEntityUtteranceComparator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F3204F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_21F31FC84(a1, a2, *(void *)(*(void *)v3 + 32), *(unsigned char *)(*(void *)v3 + 24), 0, (uint64_t (*)(uint64_t, uint64_t, void))sub_21F3210D4, a3, *(double *)(*(void *)v3 + 16));
}

uint64_t type metadata accessor for ContactEntityUtteranceComparator()
{
  return self;
}

uint64_t method lookup function for ContactEntityUtteranceComparator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactEntityUtteranceComparator);
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.turnMeetsFeatureFilterCriteria(turn:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.compareTurns(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_21F3205D0(uint64_t result, uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 40;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v15 = result + 40;
  do
  {
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    unint64_t v8 = (uint64_t *)(v5 + 16 * v4);
    for (unint64_t i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v4 = i + 1;
      swift_bridgeObjectRetain();
      if (a2(i, v11, v10)) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      v8 += 2;
      if (v2 == v4) {
        return v6;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_21F2C381C(0, *(void *)(v6 + 16) + 1, 1);
    }
    unint64_t v13 = *(void *)(v6 + 16);
    unint64_t v12 = *(void *)(v6 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t result = sub_21F2C381C(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v6 + 16) = v13 + 1;
    id v14 = (void *)(v6 + 24 * v13);
    v14[4] = i;
    v14[5] = v11;
    v14[6] = v10;
    uint64_t v5 = v15;
  }
  while (v2 - 1 != i);
  return v6;
}

void *sub_21F320748(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_21F2C37EC(0, v1, 0);
    sub_21F2DF41C();
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = sub_21F4207F8();
      unint64_t v7 = *(void *)(v37 + 16);
      unint64_t v6 = *(void *)(v37 + 24);
      int64_t v8 = v7 + 1;
      if (v7 >= v6 >> 1)
      {
        sub_21F2C37EC(v6 > 1, v7 + 1, 1);
        int64_t v8 = v7 + 1;
      }
      v4 += 16;
      *(void *)(v37 + 16) = v8;
      *(void *)(v37 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
    uint64_t v34 = v37;
  }
  else
  {
    int64_t v8 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v8)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      goto LABEL_27;
    }
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  int64_t v35 = v8;
  sub_21F2C37BC(0, v8, 0);
  int64_t v9 = v35;
  uint64_t v10 = 0;
  uint64_t v11 = v2;
  do
  {
    uint64_t v12 = *(void *)(v34 + 32 + 8 * v10);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      unsigned int v36 = v11;
      swift_bridgeObjectRetain_n();
      id v14 = (unint64_t *)(v12 + 40);
      uint64_t v15 = v2;
      do
      {
        uint64_t v16 = *(v14 - 1);
        unint64_t v17 = *v14;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_21F32035C(92, 0xE100000000000000, v16, v17);
        if (v19)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v20 = v18;
          swift_bridgeObjectRetain();
          unint64_t v21 = sub_21F32044C(v20, v16, v17);
          uint64_t v23 = v22;
          uint64_t v25 = v24;
          uint64_t v27 = v26;
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = sub_21F2A7CEC(0, v15[2] + 1, 1, v15);
          }
          unint64_t v29 = v15[2];
          unint64_t v28 = v15[3];
          if (v29 >= v28 >> 1) {
            uint64_t v15 = sub_21F2A7CEC((void *)(v28 > 1), v29 + 1, 1, v15);
          }
          v15[2] = v29 + 1;
          uint64_t v30 = &v15[4 * v29];
          v30[4] = v21;
          v30[5] = v23;
          _OWORD v30[6] = v25;
          v30[7] = v27;
        }
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease_n();
      unint64_t v2 = (void *)MEMORY[0x263F8EE78];
      int64_t v9 = v35;
      uint64_t v11 = v36;
    }
    else
    {
      uint64_t v15 = v2;
    }
    unint64_t v32 = v11[2];
    unint64_t v31 = v11[3];
    if (v32 >= v31 >> 1)
    {
      sub_21F2C37BC(v31 > 1, v32 + 1, 1);
      int64_t v9 = v35;
    }
    ++v10;
    void v11[2] = v32 + 1;
    v11[v32 + 4] = v15;
  }
  while (v10 != v9);
LABEL_27:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_21F320A40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for FeaturisedTurn(0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_21F29F284(v4);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t result = sub_21F29F9EC(a1);
    uint64_t v7 = 0;
LABEL_8:
    uint64_t v9 = 0;
LABEL_9:
    uint64_t v11 = 0;
LABEL_10:
    uint64_t v12 = 0;
    goto LABEL_11;
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_21F29F29C(v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    sub_21F29F9EC(a1);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F29F2B4(v8);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_21F29F9EC(a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    goto LABEL_9;
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_21F29E180(v10);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    sub_21F29F9EC(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    goto LABEL_10;
  }
  uint64_t v12 = sub_21F320748(v7);
  uint64_t result = sub_21F29F9EC(a1);
LABEL_11:
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = (uint64_t)v12;
  return result;
}

uint64_t sub_21F320BA4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0;
  }
  else
  {
    uint64_t v9 = result;
    int64_t v10 = a3 >> 1;
    while (!__OFSUB__(v10--, 1))
    {
      if (v10 < a2 || v10 >= v5) {
        goto LABEL_15;
      }
      uint64_t v12 = (void *)(v9 + 16 * v10);
      if (*v12 == a4 && v12[1] == a5) {
        return v10;
      }
      uint64_t result = sub_21F420DF8();
      if (result) {
        return v10;
      }
      if (v10 == a2) {
        return 0;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_21F320C64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a1;
  int64_t v8 = *(void *)(*(void *)a1 + 16);
  if (v8)
  {
    uint64_t v9 = v7[v8 + 3];
    BOOL v3 = __OFADD__(v9, 1);
    uint64_t v10 = v9 + 1;
    if (!v3) {
      goto LABEL_3;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = 0;
  if (v3) {
    goto LABEL_16;
  }
LABEL_3:
  unint64_t v11 = *(void *)(a3 + 16);
  if ((uint64_t)(v11 - 1) < v10) {
    uint64_t v10 = v11 - 1;
  }
  if (v10 < -1)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v11 < ++v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = sub_21F320BA4(a3 + 32, 0, (2 * v10) | 1, *a2, a2[1]);
  if ((v13 & 1) == 0)
  {
    uint64_t v4 = v12;
    goto LABEL_11;
  }
  if (!v8)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
  uint64_t v4 = v7[v8 + 3];
LABEL_11:
  swift_bridgeObjectRetain();
  if (swift_isUniquelyReferenced_nonNull_native()) {
    goto LABEL_12;
  }
LABEL_18:
  uint64_t v7 = sub_21F2A812C(0, v7[2] + 1, 1, v7);
LABEL_12:
  unint64_t v5 = v7[2];
  uint64_t v10 = v7[3];
  int64_t v8 = v5 + 1;
  if (v5 >= (unint64_t)v10 >> 1) {
LABEL_21:
  }
    uint64_t v7 = sub_21F2A812C((void *)((unint64_t)v10 > 1), v8, 1, v7);
  _OWORD v7[2] = v8;
  v7[v5 + 4] = v4;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  return result;
}

uint64_t sub_21F320DC4(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v1 = a1[3];
  uint64_t v23 = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3 != *(void *)(v1 + 16) || (uint64_t v4 = *a1, v5 = *(void *)(*a1 + 16), v5 != *(void *)(a1[1] + 16)))
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_21F41FF28();
    __swift_project_value_buffer(v14, (uint64_t)qword_26AD3C910);
    uint64_t v15 = sub_21F41FF08();
    os_log_type_t v16 = sub_21F420678();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_17;
    }
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    unint64_t v18 = "[EntityUtteranceComparator] Utterance and phoneme lengths do not match up. Skipping entity-based comparison.";
LABEL_16:
    _os_log_impl(&dword_21F29A000, v15, v16, v18, v17, 2u);
    MEMORY[0x223C4B440](v17, -1, -1);
LABEL_17:

    return MEMORY[0x263F8EE78];
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v7 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v8 = *v7;
      v21[0] = *(v7 - 1);
      v21[1] = v8;
      swift_bridgeObjectRetain();
      sub_21F320C64((uint64_t)&v22, v21, v4);
      v7 += 2;
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    sub_21F32154C((uint64_t)&v23);
    a1 = (uint64_t *)sub_21F32154C((uint64_t)&v23);
    uint64_t v6 = v22;
  }
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9)
  {
    uint64_t v10 = 0;
    while (*(void *)(v6 + 8 * v10 + 32) < v5)
    {
      if (v9 == ++v10) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21F41FF28();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
    uint64_t v15 = sub_21F41FF08();
    os_log_type_t v16 = sub_21F420678();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_17;
    }
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    unint64_t v18 = "[EntityUtteranceComparator] Could not map from postITN phonemes into preITN phonemes. Skipping entity-based comparison.";
    goto LABEL_16;
  }
LABEL_11:
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_21F3205D0(v11, sub_21F321578);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_21F31FA94(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21F3210D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_21F41FF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AD3C910);
    uint64_t v10 = sub_21F41FF08();
    os_log_type_t v11 = sub_21F420678();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_21F29A000, v10, v11, "calculateRestatementScore called with useTrimmedUtterance=true. This is not supported for Contact restatement comparison. Full utterance comparison will be used instead.", v12, 2u);
      MEMORY[0x223C4B440](v12, -1, -1);
    }
  }
  sub_21F29F8BC(a1, (uint64_t)v8);
  sub_21F320A40((uint64_t)v8, v22);
  sub_21F3214E4((uint64_t)v22, (uint64_t)v29);
  if (!*(void *)&v29[0]) {
    return 0;
  }
  long long v31 = v29[0];
  long long v32 = v29[1];
  uint64_t v33 = v30;
  sub_21F29F8BC(a2, (uint64_t)v8);
  sub_21F320A40((uint64_t)v8, v23);
  sub_21F3214E4((uint64_t)v23, (uint64_t)v24);
  if (!*(void *)&v24[0])
  {
    uint64_t v40 = v31;
    sub_21F32154C((uint64_t)&v40);
    uint64_t v41 = *((void *)&v31 + 1);
    sub_21F32154C((uint64_t)&v41);
    uint64_t v42 = v32;
    sub_21F32154C((uint64_t)&v42);
    uint64_t v43 = *((void *)&v32 + 1);
    sub_21F32154C((uint64_t)&v43);
    *(void *)&long long v26 = v33;
    sub_21F32154C((uint64_t)&v26);
    return 0;
  }
  long long v26 = v24[0];
  long long v27 = v24[1];
  uint64_t v28 = v25;
  uint64_t v13 = sub_21F320DC4((uint64_t *)&v31);
  uint64_t v34 = v31;
  sub_21F32154C((uint64_t)&v34);
  uint64_t v35 = *((void *)&v31 + 1);
  sub_21F32154C((uint64_t)&v35);
  uint64_t v36 = v32;
  sub_21F32154C((uint64_t)&v36);
  uint64_t v37 = *((void *)&v32 + 1);
  sub_21F32154C((uint64_t)&v37);
  uint64_t v38 = v33;
  sub_21F32154C((uint64_t)&v38);
  uint64_t v43 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7F08);
  sub_21F2D6868();
  sub_21F420078();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_21F320DC4((uint64_t *)&v26);
  uint64_t v39 = v26;
  sub_21F32154C((uint64_t)&v39);
  uint64_t v40 = *((void *)&v26 + 1);
  sub_21F32154C((uint64_t)&v40);
  uint64_t v41 = v27;
  sub_21F32154C((uint64_t)&v41);
  uint64_t v42 = *((void *)&v27 + 1);
  sub_21F32154C((uint64_t)&v42);
  uint64_t v43 = v28;
  sub_21F32154C((uint64_t)&v43);
  uint64_t v21 = v14;
  uint64_t v15 = sub_21F420078();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  Swift::Double_optional v44 = String.scoreRatcliffObershelp(between:)(v18);
  uint64_t v19 = *(void *)&v44.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_21F32148C()
{
  unint64_t result = qword_267EC8968;
  if (!qword_267EC8968)
  {
    type metadata accessor for EntityUtteranceComparison();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8968);
  }
  return result;
}

uint64_t sub_21F3214E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F32154C(uint64_t a1)
{
  return a1;
}

uint64_t sub_21F321578(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F32016C(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

unint64_t sub_21F321584()
{
  unint64_t result = qword_267EC8980;
  if (!qword_267EC8980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267EC8980);
  }
  return result;
}

uint64_t sub_21F3215D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8978);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ContactEntityUtteranceComparator.TurnUtterances()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactEntityUtteranceComparator.TurnUtterances(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactEntityUtteranceComparator.TurnUtterances(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactEntityUtteranceComparator.TurnUtterances(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactEntityUtteranceComparator.TurnUtterances(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactEntityUtteranceComparator.TurnUtterances(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntityUtteranceComparator.TurnUtterances()
{
  return &type metadata for ContactEntityUtteranceComparator.TurnUtterances;
}

id sub_21F3218AC()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_267EC7210 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC8998);
  uint64_t v1 = (void *)sub_21F420338();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel__ios_meContactWithKeysToFetch_error_, v1, v7);

  id v3 = v7[0];
  if (!v2)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)sub_21F41EFD8();

    swift_willThrow();
    return 0;
  }
  return v2;
}

id sub_21F3219B8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26AD38E00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21F426820;
  id v2 = (void *)*MEMORY[0x263EFDFE0];
  uint64_t v3 = v0;
  *(void *)(v0 + 32) = *MEMORY[0x263EFDFE0];
  sub_21F420368();
  qword_267EC8990 = v3;
  return v2;
}

uint64_t dispatch thunk of EvaluationFramework.evaluateSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EvaluationFramework.reviewedSessionEvaluation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EvaluationSummary.requestId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *PimsStoreRuntimeQueryWrapper.__allocating_init()()
{
  uint64_t v0 = sub_21F41FEA8();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for PIMSStoreCoreData();
  uint64_t v4 = swift_allocObject();
  id v5 = sub_21F3FC334(v0, v2, 0);
  swift_bridgeObjectRelease();
  if (v5)
  {
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
    sub_21F41FC08();
    type metadata accessor for PimsStoreRuntimeQueryWrapper();
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v6[5] = v3;
    v6[6] = &protocol witness table for PIMSStoreCoreData;
    v6[2] = v4;
    type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
    uint64_t v7 = swift_allocObject();
    type metadata accessor for SELFEventLogEmitters();
    uint64_t v8 = swift_allocObject();
    sub_21F2A09A8(&v14, v8 + 16);
    *(void *)(v7 + 16) = v8;
    v6[7] = v7;
  }
  else
  {
    swift_deallocPartialClassInstance();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_21F41FF28();
    __swift_project_value_buffer(v9, (uint64_t)qword_26AD3C910);
    uint64_t v10 = sub_21F41FF08();
    os_log_type_t v11 = sub_21F420678();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_21F29A000, v10, v11, "[PimsStoreRuntimeQueryWrapper]: Failed to initialise PIMS store", v12, 2u);
      MEMORY[0x223C4B440](v12, -1, -1);
    }

    return 0;
  }
  return v6;
}

uint64_t *PimsStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)(uint64_t a1, long long *a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v8 = sub_21F32265C(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v8;
}

uint64_t *PimsStoreRuntimeQueryWrapper.init(store:logTarget:)(uint64_t a1, long long *a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  os_log_type_t v11 = sub_21F322340((uint64_t)v9, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v11;
}

uint64_t sub_21F321D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v5, v6);
  if (a2) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_21F3223F8(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_21F41FF28();
  __swift_project_value_buffer(v10, (uint64_t)qword_26AD3C910);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v11 = sub_21F41FF08();
  os_log_type_t v12 = sub_21F420668();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218240;
    swift_bridgeObjectRelease();
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F29A000, v11, v12, "[PimsStoreRuntimeQueryWrapper]: Found %ld results and %ld with matching tags.", (uint8_t *)v13, 0x16u);
    MEMORY[0x223C4B440](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t sub_21F321FBC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_21F41F608();
  swift_allocObject();
  uint64_t v6 = sub_21F41F5F8();
  sub_21F41F5E8();
  MEMORY[0x223C490A0](v6);
  sub_21F41F418();
  sub_21F41F3C8();
  swift_release();
  swift_release();
  if (v14)
  {
    uint64_t v7 = sub_21F321D9C(v14, a3);
    swift_release();
  }
  else
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_21F41FF28();
    __swift_project_value_buffer(v8, (uint64_t)qword_26AD3C910);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_21F41FF08();
    os_log_type_t v10 = sub_21F420678();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v14 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(a1, a2, &v14);
      sub_21F4207D8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F29A000, v9, v10, "[PimsStoreRuntimeQueryWrapper]: unable to create USO for query from %s String", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v12, -1, -1);
      MEMORY[0x223C4B440](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

uint64_t PimsStoreRuntimeQueryWrapper.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PimsStoreRuntimeQueryWrapper.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_21F32226C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_21F420BE8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_21F322310@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t *sub_21F322340(uint64_t a1, long long *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  a3[5] = a4;
  a3[6] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  uint64_t v10 = swift_allocObject();
  type metadata accessor for SELFEventLogEmitters();
  uint64_t v11 = swift_allocObject();
  sub_21F2A09A8(a2, v11 + 16);
  *(void *)(v10 + 16) = v11;
  a3[7] = v10;
  return a3;
}

uint64_t sub_21F3223F8(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = type metadata accessor for PlusMediaSuggestion();
  uint64_t v5 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v23 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v23 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = *(void *)(v10 + 72);
    v23[1] = v2;
    uint64_t v24 = (v15 + 32) & ~v15;
    uint64_t v17 = a1 + v24;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v25 = a2;
    while (1)
    {
      sub_21F2E07EC(v17, (uint64_t)v12);
      char v19 = sub_21F3C6860(*(void *)&v12[*(int *)(v27 + 44)], a2);
      sub_21F2E07EC((uint64_t)v12, (uint64_t)v9);
      if (v19)
      {
        char v20 = PlusMediaSuggestion.isNominated.getter();
        sub_21F2E586C((uint64_t)v9);
        if (v20)
        {
          sub_21F2E5808((uint64_t)v12, v26);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_21F2C343C(0, *(void *)(v18 + 16) + 1, 1);
          }
          uint64_t v18 = v28;
          unint64_t v22 = *(void *)(v28 + 16);
          unint64_t v21 = *(void *)(v28 + 24);
          if (v22 >= v21 >> 1)
          {
            sub_21F2C343C(v21 > 1, v22 + 1, 1);
            uint64_t v18 = v28;
          }
          *(void *)(v18 + 16) = v22 + 1;
          sub_21F2E5808(v26, v18 + v24 + v22 * v16);
          a2 = v25;
          goto LABEL_5;
        }
      }
      else
      {
        sub_21F2E586C((uint64_t)v9);
      }
      sub_21F2E586C((uint64_t)v12);
LABEL_5:
      v17 += v16;
      if (!--v14) {
        return v28;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for PimsStoreRuntimeQueryWrapper()
{
  return self;
}

uint64_t *sub_21F32265C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PimsStoreRuntimeQueryWrapper();
  uint64_t v12 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_21F322340((uint64_t)v11, a2, v12, a4, a5);
}

uint64_t method lookup function for PimsStoreRuntimeQueryWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PimsStoreRuntimeQueryWrapper);
}

uint64_t dispatch thunk of PimsStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PimsStoreRuntimeQueryWrapper.queryWithLogging(query:suggestionTags:plusId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_21F3227CC()
{
  type metadata accessor for MessagesAbandonmentClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AC30);
  sub_21F420108();
  sub_21F4201A8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_21F4201A8();
  qword_26AD3AC18 = 91;
  unk_26AD3AC20 = 0xE100000000000000;
  return result;
}

uint64_t sub_21F322854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 > 3 || v3 == 0)
  {
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_21F41FF28();
    __swift_project_value_buffer(v5, (uint64_t)qword_26AD3C910);
    uint64_t v6 = sub_21F41FF08();
    os_log_type_t v7 = sub_21F420668();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v27 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      if (qword_26AD3AC28 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_26AD3AC18;
      unint64_t v11 = unk_26AD3AC20;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(v10, v11, &v27);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v6, v7, "%s Session has 0 or more than 3 turns, and so is out of scope of Messages Abandonment", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v9, -1, -1);
      MEMORY[0x223C4B440](v8, -1, -1);
    }

    uint64_t v12 = type metadata accessor for FeaturisedTurn(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else if (v3 == 3 {
         && (uint64_t v15 = type metadata accessor for FeaturisedTurn(0),
  }
             uint64_t v16 = *(void *)(v15 - 8),
             uint64_t v17 = swift_bridgeObjectRetain(),
             sub_21F29E938(v17),
             uint64_t v19 = v18,
             swift_bridgeObjectRelease(),
             v19))
  {
    swift_bridgeObjectRelease();
    if (qword_26AD38998 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_21F41FF28();
    __swift_project_value_buffer(v20, (uint64_t)qword_26AD3C910);
    unint64_t v21 = sub_21F41FF08();
    os_log_type_t v22 = sub_21F420668();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v27 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      if (qword_26AD3AC28 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_26AD3AC18;
      unint64_t v26 = unk_26AD3AC20;
      swift_bridgeObjectRetain();
      sub_21F2A02C4(v25, v26, &v27);
      sub_21F4207D8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F29A000, v21, v22, "%s Session has 3 turns, but the latter is not empty, and so session is out of scope of Messages Abandonment", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x223C4B440](v24, -1, -1);
      MEMORY[0x223C4B440](v23, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  }
  else
  {
    return sub_21F3C2270(a1, a2);
  }
}

uint64_t MessagesAbandonmentClassifier.deinit()
{
  return v0;
}

uint64_t MessagesAbandonmentClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F322CE4(uint64_t a1)
{
  return sub_21F322F18(a1);
}

uint64_t sub_21F322D08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RuleResult();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AF28);
  uint64_t v5 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0) - 8);
  uint64_t v6 = *(void *)(*(void *)v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_21F423CA0;
  uint64_t v9 = (void *)(v8 + v7);
  *uint64_t v9 = 0xD00000000000001CLL;
  v9[1] = 0x800000021F434860;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (void *)((char *)v9 + v6);
  *uint64_t v10 = 0xD00000000000001DLL;
  v10[1] = 0x800000021F4335B0;
  sub_21F2DEDF8();
  swift_storeEnumTagMultiPayload();
  sub_21F323B8C((uint64_t)v4, (uint64_t)v9 + v6 + v5[14], (uint64_t (*)(void))type metadata accessor for RuleResult);
  unint64_t v11 = (void *)((char *)v9 + 2 * v6);
  uint64_t v12 = (void *)((char *)v11 + v5[14]);
  *unint64_t v11 = 0xD00000000000001CLL;
  v11[1] = 0x800000021F433600;
  sub_21F3C2048(v12);
  uint64_t v13 = (void *)((char *)v9 + 3 * v6);
  uint64_t v14 = (void *)((char *)v13 + v5[14]);
  void *v13 = 0xD00000000000001BLL;
  v13[1] = 0x800000021F433620;
  sub_21F3BBC2C(a1, v14);
  return v8;
}

uint64_t sub_21F322F18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RuleResult();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3A8C0);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeaturisedTurn(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v66 - v13;
  sub_21F322854(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_21F2C6D10((uint64_t)v7);
    if (*(void *)(a1 + 16))
    {
LABEL_3:
      unint64_t v15 = sub_21F41F1B8();
      unint64_t v17 = v16;
LABEL_17:
      if (qword_26AD38998 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_21F41FF28();
      __swift_project_value_buffer(v45, (uint64_t)qword_26AD3C910);
      swift_bridgeObjectRetain();
      long long v46 = sub_21F41FF08();
      os_log_type_t v47 = sub_21F420668();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v73 = v49;
        *(_DWORD *)uint64_t v48 = 136315394;
        if (qword_26AD3AC28 != -1) {
          swift_once();
        }
        uint64_t v50 = qword_26AD3AC18;
        unint64_t v51 = unk_26AD3AC20;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_21F2A02C4(v50, v51, &v73);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_21F2A02C4(v15, v17, &v73);
        sub_21F4207D8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_21F29A000, v46, v47, "%s Skipping conversation with id=%s with no or invalid dismissal features", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v49, -1, -1);
        MEMORY[0x223C4B440](v48, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x263F8EE78];
    }
LABEL_16:
    unint64_t v17 = 0x800000021F433640;
    unint64_t v15 = 0xD000000000000014;
    goto LABEL_17;
  }
  sub_21F323B8C((uint64_t)v7, (uint64_t)v14, type metadata accessor for FeaturisedTurn);
  uint64_t v18 = *(int *)(v8 + 24);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_21F29DE04(v19);
  char v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    sub_21F2D9D70((uint64_t)v14, type metadata accessor for FeaturisedTurn);
    if (*(void *)(a1 + 16)) {
      goto LABEL_3;
    }
    goto LABEL_16;
  }
  uint64_t v23 = sub_21F322D08((uint64_t)v14);
  if (qword_26AD38998 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_21F41FF28();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26AD3C910);
  sub_21F29F8BC((uint64_t)v14, (uint64_t)v12);
  swift_bridgeObjectRetain_n();
  *(void *)&long long v70 = v25;
  unint64_t v26 = sub_21F41FF08();
  int v27 = sub_21F420668();
  BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  uint64_t v71 = v20;
  if (v28)
  {
    int v67 = v27;
    os_log_t v68 = v26;
    uint64_t v69 = v18;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    uint64_t v73 = v66;
    *(_DWORD *)uint64_t v29 = 136315650;
    if (qword_26AD3AC28 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_26AD3AC18;
    unint64_t v30 = unk_26AD3AC20;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_21F2A02C4(v31, v30, &v73);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    sub_21F41F228();
    sub_21F30AE0C();
    uint64_t v32 = sub_21F420DA8();
    uint64_t v72 = sub_21F2A02C4(v32, v33, &v73);
    sub_21F4207D8();
    swift_bridgeObjectRelease();
    sub_21F2D9D70((uint64_t)v12, type metadata accessor for FeaturisedTurn);
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0);
    uint64_t v35 = MEMORY[0x223C4A060](v23, v34);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_21F2A02C4(v35, v37, &v73);
    sub_21F4207D8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v38 = v68;
    _os_log_impl(&dword_21F29A000, v68, (os_log_type_t)v67, "%s Rule Matrix for turnId=%s, rulematrix=%s", (uint8_t *)v29, 0x20u);
    uint64_t v39 = v66;
    swift_arrayDestroy();
    MEMORY[0x223C4B440](v39, -1, -1);
    MEMORY[0x223C4B440](v29, -1, -1);

    uint64_t v20 = v71;
    uint64_t v40 = *(void *)(v23 + 16);
    if (v40)
    {
LABEL_11:
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26AD3AEB0);
      unint64_t v42 = v23
          + ((*(unsigned __int8 *)(*(void *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v41 - 8) + 80));
      uint64_t v43 = *(void *)(*(void *)(v41 - 8) + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v44 = v42 + *(int *)(v41 + 48);
        swift_storeEnumTagMultiPayload();
        LOBYTE(v44) = sub_21F39923C(v44, (uint64_t)v4);
        sub_21F2D9D70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for RuleResult);
        if ((v44 & 1) == 0) {
          goto LABEL_44;
        }
        v42 += v43;
        if (!--v40)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v20 = v71;
          goto LABEL_26;
        }
      }
    }
  }
  else
  {
    sub_21F2D9D70((uint64_t)v12, type metadata accessor for FeaturisedTurn);

    swift_bridgeObjectRelease_n();
    uint64_t v40 = *(void *)(v23 + 16);
    if (v40) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v52 = swift_bridgeObjectRetain();
  unint64_t v53 = sub_21F29EB10(v52);
  swift_bridgeObjectRelease();
  unint64_t v54 = v53 >> 62;
  if (v53)
  {
    if (!v54)
    {
      uint64_t v55 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v55 == 1) {
        goto LABEL_29;
      }
LABEL_40:
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_21F41FF08();
      LOBYTE(v54) = sub_21F420668();
      if (!os_log_type_enabled((os_log_t)v56, (os_log_type_t)v54))
      {

LABEL_44:
        swift_bridgeObjectRelease_n();
        goto LABEL_45;
      }
      uint64_t v61 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      uint64_t v73 = v60;
      *(_DWORD *)uint64_t v61 = 136315394;
      if (qword_26AD3AC28 == -1)
      {
LABEL_42:
        uint64_t v63 = qword_26AD3AC18;
        unint64_t v64 = unk_26AD3AC20;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_21F2A02C4(v63, v64, &v73);
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 12) = 2048;
        swift_bridgeObjectRelease();
        uint64_t v72 = v55;
        sub_21F4207D8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F29A000, (os_log_t)v56, (os_log_type_t)v54, "%s message has %ld recipients, rejecting", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x223C4B440](v60, -1, -1);
        MEMORY[0x223C4B440](v61, -1, -1);

LABEL_45:
        sub_21F2D9D70((uint64_t)v14, type metadata accessor for FeaturisedTurn);
        return MEMORY[0x263F8EE78];
      }
LABEL_52:
      swift_once();
      goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (v55 != 1) {
      goto LABEL_40;
    }
  }
LABEL_29:
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7790);
  uint64_t v56 = swift_allocObject();
  long long v70 = xmmword_21F422460;
  *(_OWORD *)(v56 + 16) = xmmword_21F422460;
  __swift_instantiateConcreteTypeFromMangledName(&qword_267EC7980);
  uint64_t v57 = sub_21F41F228();
  uint64_t v58 = *(void *)(v57 - 8);
  unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = v70;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 16))(v55 + v59, v14, v57);
  if (!v53)
  {
    uint64_t v61 = 0;
    goto LABEL_38;
  }
  uint64_t v60 = v53 & 0xFFFFFFFFFFFFFF8;
  if (v54)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_21F420B98();
    swift_bridgeObjectRelease();
    if (!v61) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
  uint64_t v61 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v61)
  {
LABEL_32:
    if ((v53 & 0xC000000000000001) != 0)
    {
      uint64_t v61 = MEMORY[0x223C4A6D0](0, v53);
      goto LABEL_35;
    }
    if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v61 = *(void *)(v53 + 32);
      swift_retain();
      goto LABEL_35;
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_35:
  swift_bridgeObjectRelease();
LABEL_38:
  *(void *)(v56 + 56) = &type metadata for MessagesAbandonmentClassification;
  *(void *)(v56 + 64) = &protocol witness table for MessagesAbandonmentClassification;
  uint64_t v62 = (void *)swift_allocObject();
  *(void *)(v56 + 32) = v62;
  void v62[2] = v20;
  v62[3] = v55;
  v62[4] = MEMORY[0x263F8EE78];
  v62[5] = v61;
  sub_21F2D9D70((uint64_t)v14, type metadata accessor for FeaturisedTurn);
  return v56;
}